# HG changeset patch
# User Ben Abbott <bpabbott@mac.com>
# Date 1223339984 14400
#      Mon Oct 06 20:39:44 2008 -0400
# Node ID 8e8afefe9466b9fe0b75a394888029be293d3020
# Parent  946035db56057c450d83610b741bda8889d332e4
Remove reliance on ishandle(vec) == false.

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,10 +1,15 @@
 2008-10-06  Ben Abbott  <bpabbott@mac.com>
 
+	* plot/orient.m: Figure handle must be scalar.
+	* plot/hold.m: Axis handle must be scalar.
+	* plot/axes.m: Axis handle must be scalar.
+	* plot/__plt_get_axis_arg__.m: Handle must be scalar.
+
 	* miscellaneous/delete.m: Permit a vector of handles to be deleted.
 
 2008-10-02  John W. Eaton  <jwe@octave.org>
 
 	* pkg/pkg.m (configure_make): Handle filenames with spaces.
 
 2008-10-02  Benjamin Lindner  <lindnerb@users.sourceforge.net>
 
diff --git a/scripts/plot/__plt_get_axis_arg__.m b/scripts/plot/__plt_get_axis_arg__.m
--- a/scripts/plot/__plt_get_axis_arg__.m
+++ b/scripts/plot/__plt_get_axis_arg__.m
@@ -27,18 +27,18 @@ function [h, varargin, narg] = __plt_get
     caller = varargin{1};
     varargin(1) = [];
   else
     nogca = false;
   endif
 
   ## Figure handles are integers, but object handles are non integer,
   ## therefore ignore integer scalars.
-  if (nargin > 1 && length (varargin) > 0 && ishandle (varargin{1})
-      && floor(varargin{1}) != varargin{1})
+  if (nargin > 1 && length (varargin) > 0 && numel(varargin{1}) == 1
+      && ishandle (varargin{1}(1)) && ! isfigure (varargin{1}(1)))
     tmp = varargin{1};
     obj = get (tmp);
     if (strcmp (obj.type, "axes") || strcmp (obj.type, "hggroup"))
       h = ancestor (tmp, "axes");
       varargin(1) = [];
       if (isempty (varargin))
 	varargin = {};
       endif
diff --git a/scripts/plot/axes.m b/scripts/plot/axes.m
--- a/scripts/plot/axes.m
+++ b/scripts/plot/axes.m
@@ -38,22 +38,23 @@ function h = axes (varargin)
       cf = gcf ();
     endif
     tmp = __go_axes__ (cf, varargin{:});
     set (ancestor (cf, "figure"), "currentaxes", tmp);
   else
     ## arg is axes handle, make it the current axes for the current
     ## figure.
     tmp = varargin{1};
-    if (ishandle (tmp) && strcmp (get (tmp, "type"), "axes"))
+    if (length(tmp) == 1 && ishandle (tmp)
+	&& strcmp (get (tmp, "type"), "axes"))
       parent = ancestor (tmp, "figure");
       set (0, "currentfigure", parent);
       set (parent, "currentaxes", tmp);
     else
-      error ("axes: expecting argument to be axes handle");
+      error ("axes: expecting argument to be a scalar axes handle");
     endif
   endif
 
   if (nargout > 0)
     h = tmp;
   endif
 
 endfunction
diff --git a/scripts/plot/hold.m b/scripts/plot/hold.m
--- a/scripts/plot/hold.m
+++ b/scripts/plot/hold.m
@@ -39,18 +39,20 @@
 ## @var{h}.
 ## 
 ## @end deftypefn
 
 ## PKG_ADD: mark_as_command hold
 
 function hold (varargin)
 
-  if (nargin > 0 && ishandle (varargin{1}))
+  if (nargin > 0 && numel (varargin{1}) == 1 && ishandle (varargin{1}(1)))
     [h, varargin, nargs] = __plt_get_axis_arg__ ("hold", varargin{:});
+  elseif (nargin > 0 && numel (varargin{1}) > 1 && ishandle (varargin{1}(1)))
+    print_usage ();
   else
     h = gcf ();
     nargs = numel (varargin);
   endif
 
   hold_state = get (h, "nextplot");
 
   if (nargs == 0)
diff --git a/scripts/plot/orient.m b/scripts/plot/orient.m
--- a/scripts/plot/orient.m
+++ b/scripts/plot/orient.m
@@ -27,17 +27,17 @@
 ## Adapted-By: jwe
 
 ## PKG_ADD: mark_as_command orient
 
 function retval = orient (varargin)
 
   nargs = nargin;
 
-  if (nargs > 0 && ishandle (varargin{1}))
+  if (nargs > 0 && numel (varargin{1}) == 1 && ishandle (varargin{1}))
     cf = varargin{1};
     varargin(1) = [];
     nargs--;
   else
     cf = gcf ();
   endif
 
   if (nargs == 0)
