# HG changeset patch
# User Konstantinos Poulios <logari81@googlemail.com>
# Date 1294770432 -3600
#      Tue Jan 11 19:27:12 2011 +0100
# Node ID cda6044447a03f7907274ed5400d1af21bb05f58
# Parent  66309af677462baa697dfb18c5a72c72c752636c
Improve positioning of titles.

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2011-01-11  Konstantinos Poulios  <logari81@googlemail.com>
+
+	* gl-render.cc (opengl_renderer::draw_axes): Improve positioning
+	of titles.
+
 2011-01-10  John W. Eaton  <jwe@octave.org>
 
 	* ov-cell.cc (octave_cell::print_as_scalar): Always return true.
 	(octave_cell::print_raw): Handle extra newlines here.
 	* ov-struct.cc (Fstruct_levels_to_print): Move here from pr-output.cc
 	(Vstruct_levels_to_print): Move here from pr-output.cc.  Now static.
 	(Vprint_struct_array_contents): New static variable.
 	(Fprint_struct_array_contents): New function.
diff --git a/src/gl-render.cc b/src/gl-render.cc
--- a/src/gl-render.cc
+++ b/src/gl-render.cc
@@ -643,21 +643,40 @@ opengl_renderer::draw_axes (const axes::
   glDisable (GL_LINE_SMOOTH);
   
   Matrix xlim = xform.xscale (props.get_xlim ().matrix_value ());
   Matrix ylim = xform.yscale (props.get_ylim ().matrix_value ());
   Matrix zlim = xform.zscale (props.get_zlim ().matrix_value ());
   double x_min = xlim(0), x_max = xlim(1);
   double y_min = ylim(0), y_max = ylim(1);
   double z_min = zlim(0), z_max = zlim(1);
-  
+
   double xd = (props.xdir_is ("normal") ? 1 : -1);
   double yd = (props.ydir_is ("normal") ? 1 : -1);
   double zd = (props.zdir_is ("normal") ? 1 : -1);
 
+  ColumnVector bbox(4);
+  bbox(0) = octave_Inf;
+  bbox(1) = octave_Inf;
+  bbox(2) = -octave_Inf;
+  bbox(3) = -octave_Inf;
+  for (int i = 0; i <= 1; i++)
+    for (int j = 0; j <= 1; j++)
+      for (int k = 0; k <= 1; k++)
+        {
+          ColumnVector p = xform.transform (i ? x_max : x_min, j ? y_max : y_min,
+                                            k ? z_max : z_min, false);
+          bbox(0) = std::min (bbox(0), p(0));
+          bbox(1) = std::min (bbox(1), p(1));
+          bbox(2) = std::max (bbox(2), p(0));
+          bbox(3) = std::max (bbox(3), p(1));
+        }
+  bbox(2) = bbox(2)-bbox(0);
+  bbox(3) = bbox(3)-bbox(1);
+
   ColumnVector p1, p2, xv (3), yv (3), zv (3);
   int xstate, ystate, zstate;
 
   xstate = ystate = zstate = AXE_ANY_DIR;
 
   p1 = xform.transform (x_min, (y_min+y_max)/2, (z_min+z_max)/2, false);
   p2 = xform.transform (x_max, (y_min+y_max)/2, (z_min+z_max)/2, false);
   xv(0) = xround (p2(0)-p1(0));
@@ -1739,18 +1758,17 @@ opengl_renderer::draw_axes (const axes::
 
   // Title
 
   text::properties& title_props =
     reinterpret_cast<text::properties&> (gh_manager::get_object (props.get_title ()).get_properties ());
       
   if (! title_props.get_string ().empty () && title_props.positionmode_is("auto"))
     {
-      Matrix bb = props.get_boundingbox (true);
-      ColumnVector p = xform.untransform (bb(0)+bb(2)/2, (bb(1)-10),
+      ColumnVector p = xform.untransform (bbox(0)+bbox(2)/2, (bbox(1)-10),
           (x_zlim(0)+x_zlim(1))/2, true);
       title_props.set_position (p.extract_n(0, 3).transpose ());
       title_props.set_positionmode ("auto");
     }
 
   set_clipbox (x_min, x_max, y_min, y_max, z_min, z_max);
 
   // Children
