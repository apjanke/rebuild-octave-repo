# HG changeset patch
# User Rik <rik@octave.org>
# Date 1522693871 25200
#      Mon Apr 02 11:31:11 2018 -0700
# Branch stable
# Node ID 8f1ab6db670987643573e873feae0593eff0819f
# Parent  36f17567ffa1202bde7c12828ae249ec5121e16d
doc: Improve docstring for function keyword (bug #53146)

* op-kw-docs: Improve docstring for function keyword.

diff --git a/libinterp/op-kw-docs b/libinterp/op-kw-docs
--- a/libinterp/op-kw-docs
+++ b/libinterp/op-kw-docs
@@ -593,21 +593,27 @@ for i = 1:10
 endfor
 @end group
 @end example
 @seealso{parfor, do, while}
 @end deftypefn
 function
 @c libinterp/parse-tree/oct-parse.in.yy
 -*- texinfo -*-
-@deftypefn  {} {} function @var{outputs} = function (@var{input}, @dots{})
-@deftypefnx {} {} function {} function (@var{input}, @dots{})
-@deftypefnx {} {} function @var{outputs} = function
-Begin a function body with @var{outputs} as results and @var{inputs} as
-parameters.
+@deftypefn  {} {} function @var{outputs} = function_name (@var{input}, @dots{})
+@deftypefnx {} {} function {} function_name (@var{input}, @dots{})
+@deftypefnx {} {} function @var{outputs} = function_name
+Begin a function body with name @code{function_name}, with @var{outputs} as
+results, and with @var{inputs} as parameters.  The function can later be
+invoked in Octave using the syntax
+
+@example
+[@var{output1}, @var{output2}, @dots{}] = function_name (@var{input1}, @var{input2}, @dots{})
+@end example
+
 @seealso{return}
 @end deftypefn
 global
 @c libinterp/parse-tree/oct-parse.in.yy
 -*- texinfo -*-
 @deftypefn {} {} global @var{var}
 Declare variables to have global scope.
 
