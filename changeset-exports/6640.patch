# HG changeset patch
# User jwe
# Date 1179777045 0
#      Mon May 21 19:50:45 2007 +0000
# Node ID 379244420c729bac1598a24a71eea99d3ec7c581
# Parent  ed74670db09bab85df59f4a867da13c54d7010fb
[project @ 2007-05-21 19:50:45 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,14 @@
+2007-05-21  David Bateman  <dbateman@free.fr>
+
+	* error.cc (rethrow_error): Use NULL name so that "error:" is not
+	added to the message
+	(Frethrow): Correctly treat empty stack.
+
 2007-05-21  John W. Eaton  <jwe@octave.org>
 
 	* oct-map.h (Octave_map::numel): Return number of array elements,
 	not number of map elements.
 	(Octave_map::nfields): Rename from length.
 	(Octave_map::empty): Delete.
 	Change all uses of empty to check nfields () == 0 instead.
 
diff --git a/src/error.cc b/src/error.cc
--- a/src/error.cc
+++ b/src/error.cc
@@ -722,17 +722,17 @@ parse_error_with_id (const char *id, con
   va_end (args);
 }
 
 void
 rethrow_error (const char *id, const char *fmt, ...)
 {
   va_list args;
   va_start (args, fmt);
-  error_1 (std::cerr, "error", id, fmt, args);
+  error_1 (std::cerr, 0, id, fmt, args);
   va_end (args);
 }
 
 void
 panic (const char *fmt, ...)
 {
   va_list args;
   va_start (args, fmt);
@@ -853,27 +853,30 @@ location of the error. Typically @var{er
 	      std::string nm;
 	      int l = -1;
 	      int c = -1;
 
 	      if (err.contains ("stack"))
 		{
 		  Octave_map err_stack = err.contents("stack")(0).map_value ();
 
-		  if (err_stack.contains ("file"))
-		    file = err_stack.contents("file")(0).string_value ();
-
-		  if (err_stack.contains ("name"))
-		    nm = err_stack.contents("name")(0).string_value ();
+		  if (err_stack.numel () > 0)
+		    {
+		      if (err_stack.contains ("file"))
+			file = err_stack.contents("file")(0).string_value ();
 
-		  if (err_stack.contains ("line"))
-		    l = err_stack.contents("line")(0).nint_value ();
+		      if (err_stack.contains ("name"))
+			nm = err_stack.contents("name")(0).string_value ();
 
-		  if (err_stack.contains ("column"))
-		    c = err_stack.contents("column")(0).nint_value ();
+		      if (err_stack.contains ("line"))
+			l = err_stack.contents("line")(0).nint_value ();
+
+		      if (err_stack.contains ("column"))
+			c = err_stack.contents("column")(0).nint_value ();
+		    }
 		}
 
 	      // Ugh.
 	      char *tmp_msg = strsave (msg.c_str ());
 	      if (tmp_msg[len-1] == '\n')
 		{
 		  if (len > 1)
 		    {
