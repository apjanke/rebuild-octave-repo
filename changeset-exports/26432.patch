# HG changeset patch
# User Rik <rik@octave.org>
# Date 1546639373 28800
#      Fri Jan 04 14:02:53 2019 -0800
# Branch stable
# Node ID 183c6e9443b5104208944592ab11bc50c1d9ed8f
# Parent  ff6c90eb6f2d74257fd3fc784037d5ce4e14df13
bitfcns.cc: Fix static analyzer detected issues (bug #55347).

* bitfcns.cc (Fbitshift): Delete useless test for nbits < 1.

diff --git a/libinterp/corefcn/bitfcns.cc b/libinterp/corefcn/bitfcns.cc
--- a/libinterp/corefcn/bitfcns.cc
+++ b/libinterp/corefcn/bitfcns.cc
@@ -593,18 +593,16 @@ bitshift (10, [-2, -1, 0, 1, 2])
     {
       static const int bits_in_mantissa
         = std::numeric_limits<double>::digits;
 
       nbits = (nbits < bits_in_mantissa ? nbits : bits_in_mantissa);
       int64_t mask = max_mantissa_value<double> ();
       if (nbits < bits_in_mantissa)
         mask = mask >> (bits_in_mantissa - nbits);
-      else if (nbits < 1)
-        mask = 0;
       int bits_in_type = sizeof (double)
                          * std::numeric_limits<unsigned char>::digits;
       NDArray m = m_arg.array_value ();
       DO_BITSHIFT ();
     }
   else if (cname == "uint8")
     DO_UBITSHIFT (uint8, nbits < 8 ? nbits : 8);
   else if (cname == "uint16")
@@ -624,18 +622,16 @@ bitshift (10, [-2, -1, 0, 1, 2])
   else if (cname == "single")
     {
       static const int bits_in_mantissa
         = std::numeric_limits<float>::digits;
       nbits = (nbits < bits_in_mantissa ? nbits : bits_in_mantissa);
       int64_t mask = max_mantissa_value<float> ();
       if (nbits < bits_in_mantissa)
         mask = mask >> (bits_in_mantissa - nbits);
-      else if (nbits < 1)
-        mask = 0;
       int bits_in_type = sizeof (float)
                          * std::numeric_limits<unsigned char>::digits;
       FloatNDArray m = m_arg.float_array_value ();
       DO_BITSHIFT (Float);
     }
   else
     error ("bitshift: not defined for %s objects", cname.c_str ());
 
