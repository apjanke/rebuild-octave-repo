# HG changeset patch
# User Torsten <mttl@mailbox.org>
# Date 1552148668 -3600
#      Sat Mar 09 17:24:28 2019 +0100
# Node ID 65e5526ad987fa0ad5f20b96f4b622e3f311b902
# Parent  dfd0a2cdb6212de7ef4b04f1083bb112d1c0fe54
improve system locale detection for loading gui translations (bug #41072)

* resource-manager.cc ((config_translators): if lamguage follows system
  settings pass current locale to the qt translator for loading the related
  translation files; otherwise derive the name directly from the
  preference string

diff --git a/libgui/src/resource-manager.cc b/libgui/src/resource-manager.cc
--- a/libgui/src/resource-manager.cc
+++ b/libgui/src/resource-manager.cc
@@ -120,33 +120,41 @@ namespace octave
     QSettings *settings = resource_manager::get_settings ();
 
     if (settings)
       {
         // get the locale from the settings if already available
         language = settings->value ("language", "SYSTEM").toString ();
       }
 
+    // load the translations depending on the settings
     if (language == "SYSTEM")
-      language = QLocale::system ().name ();    // get system wide locale
-
-    // load the translator file for qt strings
-    loaded = qt_tr->load ("qt_" + language, qt_trans_dir);
-
-    if (! loaded) // try lower case
-      qt_tr->load ("qt_" + language.toLower (), qt_trans_dir);
+      {
+        // get the system locale and pass it to the translators for loading
+        // the suitable translation files
+        QLocale sys_locale = QLocale::system ();
 
-    // load the translator file for qscintilla settings
-    loaded = qsci_tr->load ("qscintilla_" + language, qt_trans_dir);
+        qt_tr->load (sys_locale, "qt", "_", qt_trans_dir);
+        qsci_tr->load (sys_locale, "qscintilla", "_", qt_trans_dir);
+        gui_tr->load (sys_locale, "", "", get_gui_translation_dir ());
+      }
+    else
+      {
+        // load the translation files depending on the given locale name
+        loaded = qt_tr->load ("qt_" + language, qt_trans_dir);
+        if (! loaded) // try lower case
+          qt_tr->load ("qt_" + language.toLower (), qt_trans_dir);
 
-    if (! loaded) // try lower case
-      qsci_tr->load ("qscintilla_" + language.toLower (), qt_trans_dir);
+        loaded = qsci_tr->load ("qscintilla_" + language, qt_trans_dir);
+        if (! loaded) // try lower case
+          qsci_tr->load ("qscintilla_" + language.toLower (), qt_trans_dir);
 
-    // load the translator file for gui strings
-    gui_tr->load (language, get_gui_translation_dir ());
+        gui_tr->load (language, get_gui_translation_dir ());
+      }
+
   }
 
   QStringList resource_manager::storage_class_names (void)
   {
     return workspace_model::storage_class_names ();
   }
 
   QList<QColor> resource_manager::storage_class_default_colors (void)
