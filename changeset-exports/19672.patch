# HG changeset patch
# User Mike Miller <mtmiller@ieee.org>
# Date 1423341200 18000
#      Sat Feb 07 15:33:20 2015 -0500
# Node ID b5a8f0f31664186e51cb3e04f4c3bde413d8818d
# Parent  322d0fe84a8cd321f84df06d67c0781a7c2aba06
Handle interrupt in audio blocking play and record (bug #44142)

* audiodevinfo.cc (audioplayer::playblocking, audiorecorder::recordblocking):
Call OCTAVE_QUIT in data-driven loops.

diff --git a/libinterp/dldfcn/audiodevinfo.cc b/libinterp/dldfcn/audiodevinfo.cc
--- a/libinterp/dldfcn/audiodevinfo.cc
+++ b/libinterp/dldfcn/audiodevinfo.cc
@@ -1148,16 +1148,17 @@ audioplayer::playblocking (void)
     }
 
   unsigned int start, end;
   start = get_sample_number ();
   end = get_end_sample ();
 
   for (unsigned int i = start; i < end; i += buffer_size)
     {
+      OCTAVE_QUIT;
       if (octave_callback_function != 0)
         octave_play_callback (0, buffer, buffer_size, 0, 0, this);
       else
         portaudio_play_callback (0, buffer, buffer_size, 0, 0, this);
 
       err = Pa_WriteStream (stream, buffer, buffer_size);
     }
 
@@ -1822,16 +1823,17 @@ audiorecorder::recordblocking (float sec
       error ("audiorecorder: unable to start audio recording stream");
       return;
     }
 
   unsigned int frames = seconds * get_fs ();
 
   for (unsigned int i = 0; i < frames; i += buffer_size)
     {
+      OCTAVE_QUIT;
       Pa_ReadStream (get_stream (), buffer, buffer_size);
 
       if (octave_callback_function != 0)
         octave_record_callback (buffer, 0, buffer_size, 0, 0, this);
       else
         portaudio_record_callback (buffer, 0, buffer_size, 0, 0, this);
     }
 }
