# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1232627267 -3600
#      Thu Jan 22 13:27:47 2009 +0100
# Node ID b0f803b5ce41e87b1cf9ab07b58bd29ba63516da
# Parent  3a3421a9f0bbf34c39318e0f56afc19fcd882cfc
more indexing fixes

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,15 @@
+2009-01-22  Jaroslav Hajek  <highegg@gmail.com>
+
+	* pt-idx.cc (tree_index_expression::lvalue): Correct tmpi when seeing
+	a plain struct component.
+	* ov-struct.cc (octave_struct::subsasgn): Use proper type substr in
+	empty_conv.
+
 2009-01-22  Jaroslav Hajek  <highegg@gmail.com>
 
 	* DLD-FUNCTIONS/qr.cc: Remove HAVE_QRUPDATE check.
 	* DLD-FUNCTIONS/chol.cc: Dtto.
 
 2009-01-21  John W. Eaton  <jwe@octave.org>
 
 	* Makefile.in (display.o): Add X11_INCFLAGS to CPPFLAGS.
diff --git a/src/ov-struct.cc b/src/ov-struct.cc
--- a/src/ov-struct.cc
+++ b/src/ov-struct.cc
@@ -327,17 +327,17 @@ octave_struct::subsasgn (const std::stri
                           error ("invalid cs-list length in assignment");
                       }
                     else if (tmpc.numel () == 1)
                       {
                         octave_value tmp = tmpc(0);
 
                         if (! tmp.is_defined () || tmp.is_zero_by_zero ())
                           {
-                            tmp = octave_value::empty_conv (type.substr (1), rhs);
+                            tmp = octave_value::empty_conv (next_type, rhs);
                             tmp.make_unique (); // probably a no-op.
                           }
                         else
                           // optimization: ignore the copy still stored inside our map and in tmpc.
                           tmp.make_unique (2);
 
                         if (! error_state)
                           t_rhs = tmp.subsasgn (next_type, next_idx, rhs);
diff --git a/src/pt-idx.cc b/src/pt-idx.cc
--- a/src/pt-idx.cc
+++ b/src/pt-idx.cc
@@ -618,22 +618,20 @@ tree_index_expression::lvalue (void)
 
                         retval.numel (nel);
                       }
                   }
                 else
                   {
                     // A plain struct component can also yield a list reference.
                     if (tmp.is_defined () && tmpi < i)
-                      {
                         tmp = tmp.subsref (type.substr (tmpi, i - tmpi), tmpidx, true);
 
-                        tmpi = i;
-                        tmpidx.clear ();
-                      }
+                    tmpi = i;
+                    tmpidx.clear ();
 
                     if (tmp.is_cs_list ())
                       gripe_indexed_cs_list ();
                     else if (tmp.is_map ())
                       retval.numel (tmp.numel ());
                     else
                       tmp = Octave_map ();
 
