# HG changeset patch
# User jwe
# Date 1152910971 0
#      Fri Jul 14 21:02:51 2006 +0000
# Node ID 39cbf6a484bbf9fad32f970587e2e4cbd39269c6
# Parent  b9676944b7a2f58c5266b9cac34113b9ecbf930c
[project @ 2006-07-14 21:02:33 by jwe]

diff --git a/scripts/miscellaneous/orderfields.m b/scripts/miscellaneous/orderfields.m
--- a/scripts/miscellaneous/orderfields.m
+++ b/scripts/miscellaneous/orderfields.m
@@ -49,24 +49,24 @@ function [t, p] = orderfields (s1, s2)
     if (isstruct(s1))
       names = sort (fieldnames (s1));
     endif
   elseif (nargin == 2)
     if (isstruct(s2))
       ## Two structures: return the fields in the order of s2.
       names = fieldnames (s2);
       if (! isequal (sort (fieldnames (s1)), sort (names)))
-	error ("orderfields: s1 and s2 do not have same fields");
+	error ("orderfields: structures do not have same fields");
       endif
     elseif (iscellstr (s2))
       ## A structure and a list of fields: order by the list of fields.
       t1 = sort (fieldnames (s1));
       t2 = sort (s2(:));
       if (! isequal (t1, t2))
-	error ("orderfields: invalid cell array of field names");
+	error ("orderfields: name list does not match structure fields");
       endif
       names = s2;
     elseif (isvector (s2))
       ## A structure and a permutation vector: permute the order of s1.
       names = fieldnames (s1);
       t1 = sort (s2);
       t1 = t1(:)';
       t2 = 1:length (names);
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,12 @@
 2006-07-14  John W. Eaton  <jwe@octave.org>
 
+	* oct-stream.cc (do_write): Include explicit instantiations.
+
 	* ov-str-mat.h (octave_char_matrix_sq_str::resize):
 	Include fill arg to match base class.
 
 	* ov-base-mat.cc, ov-base-mat.h, ov-base-sparse.cc,
 	ov-base-sparse.h, ov-base.cc, ov-base.h, ov-bool.cc,
 	ov-bool.h, ov-complex.cc, ov-complex.h, ov-intx.h, ov-list.cc,
 	ov-list.h, ov-range.cc, ov-range.h, ov-scalar.cc, ov-scalar.h,
 	ov-str-mat.cc, ov-str-mat.h, ov.h (do_index_op):
diff --git a/src/oct-stream.cc b/src/oct-stream.cc
--- a/src/oct-stream.cc
+++ b/src/oct-stream.cc
@@ -3443,16 +3443,48 @@ do_write (std::ostream& os, const T& val
       (*current_liboctave_error_handler)
 	("write: invalid type specification");
       break;
     }
 
   return retval;
 }
 
+template bool
+do_write (std::ostream&, const octave_int8&, oct_data_conv::data_type,
+	  oct_mach_info::float_format, bool, bool);
+
+template bool
+do_write (std::ostream&, const octave_uint8&, oct_data_conv::data_type,
+	  oct_mach_info::float_format, bool, bool);
+
+template bool
+do_write (std::ostream&, const octave_int16&, oct_data_conv::data_type,
+	  oct_mach_info::float_format, bool, bool);
+
+template bool
+do_write (std::ostream&, const octave_uint16&, oct_data_conv::data_type,
+	  oct_mach_info::float_format, bool, bool);
+
+template bool
+do_write (std::ostream&, const octave_int32&, oct_data_conv::data_type,
+	  oct_mach_info::float_format, bool, bool);
+
+template bool
+do_write (std::ostream&, const octave_uint32&, oct_data_conv::data_type,
+	  oct_mach_info::float_format, bool, bool);
+
+template bool
+do_write (std::ostream&, const octave_int64&, oct_data_conv::data_type,
+	  oct_mach_info::float_format, bool, bool);
+
+template bool
+do_write (std::ostream&, const octave_uint64&, oct_data_conv::data_type,
+	  oct_mach_info::float_format, bool, bool);
+
 template <class T>
 octave_idx_type
 octave_stream::write (const Array<T>& data, octave_idx_type block_size,
 		      oct_data_conv::data_type output_type,
 		      octave_idx_type skip, oct_mach_info::float_format flt_fmt)
 {
   octave_idx_type retval = -1;
 
