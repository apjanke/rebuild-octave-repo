# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1204069574 18000
#      Tue Feb 26 18:46:14 2008 -0500
# Branch release-3-0-x
# Node ID 3f5a67e8215c761b269dc217d8318a9e5bea9586
# Parent  a4d0680f4ddad764bfaefc22ccd5a7d7b2e800a0
oct-rand.cc (get_dist_id): initialize retval

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,10 +1,15 @@
 2008-02-26  John W. Eaton  <jwe@octave.org>
 
+	* oct-rand.cc (unknown_dist): New dist type.
+	(uniform_dist, normal_dist, expon_dist, poisson_dist, gamma_dist):
+	Use static const int instead of #define.
+	(get_dist_id): Default retval is unknown_dist.
+
 	* oct-rand.cc (rand_states): New static variable.
 	(initialize_rand_states, get_dist_id, get_internal_state,
 	set_internal_state, switch_to_generator, save_state): New functions.
 	(octave_rand::state): New arg to specify distribution.
 	Save state in rand_states instead of setting internal state.
 	Return named state.  Use set_internal_state to generate proper
 	state vector from user supplied state.  Save and restore current
 	state if specified and current distributions are different.
diff --git a/liboctave/oct-rand.cc b/liboctave/oct-rand.cc
--- a/liboctave/oct-rand.cc
+++ b/liboctave/oct-rand.cc
@@ -34,23 +34,22 @@ along with Octave; see the file COPYING.
 #include "oct-rand.h"
 #include "oct-time.h"
 #include "data-conv.h"
 #include "randmtzig.h"
 #include "randpoisson.h"
 #include "randgamma.h"
 #include "mach-info.h"
 
-// Possible distributions of random numbers.  This was handled with an
-// enum, but unwind_protecting that doesn't work so well.
-#define uniform_dist 1
-#define normal_dist 2
-#define expon_dist 3
-#define poisson_dist 4
-#define gamma_dist 5
+static const int unknown_dist = 0;
+static const int uniform_dist = 1;
+static const int normal_dist = 2;
+static const int expon_dist = 3;
+static const int poisson_dist = 4;
+static const int gamma_dist = 5;
 
 // Current distribution of random numbers.
 static int current_distribution = uniform_dist;
 
 // Has the seed/state been set yet?
 static bool old_initialized = false;
 static bool new_initialized = false;
 static bool use_old_generators = false;
@@ -183,17 +182,17 @@ maybe_initialize (void)
       if (! new_initialized)
 	initialize_rand_states ();
     }
 }
 
 static int
 get_dist_id (const std::string& d)
 {
-  int retval;
+  int retval = unknown_dist;
 
   if (d == "uniform" || d == "rand")
     retval = uniform_dist;
   else if (d == "normal" || d == "randn")
     retval = normal_dist;
   else if (d == "exponential" || d == "rande")
     retval = expon_dist;
   else if (d == "poisson" || d == "randp")
