# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1354945012 18000
#      Sat Dec 08 00:36:52 2012 -0500
# Node ID bf77f7f66bdfa86f47ca1f5d2850a83e1b643211
# Parent  6e39fe7992d9b3539dde299a2a9d9c1c4f336910
register octave_java type at Octave startup

* ov.cc (install_types): Register octave_java type here.
* ov-java.cc (initialize_java): Not here.

diff --git a/libinterp/octave-value/ov-java.cc b/libinterp/octave-value/ov-java.cc
--- a/libinterp/octave-value/ov-java.cc
+++ b/libinterp/octave-value/ov-java.cc
@@ -1346,18 +1346,18 @@ initialize_java (void)
   if (! jvm)
     {
       try
         {
           initialize_jvm ();
 
           JNIEnv *current_env = octave_java::thread_jni_env ();
 
-          octave_java::register_type ();
           command_editor::add_event_hook (java_event_hook);
+
           octave_thread_ID = get_current_thread_ID (current_env);
           //printf ("octave thread ID=%ld\n", octave_thread_ID);
         }
       catch (std::string msg)
         {
           error (msg.c_str ());
         }
     }
diff --git a/libinterp/octave-value/ov.cc b/libinterp/octave-value/ov.cc
--- a/libinterp/octave-value/ov.cc
+++ b/libinterp/octave-value/ov.cc
@@ -71,16 +71,17 @@ along with Octave; see the file COPYING.
 #include "ov-builtin.h"
 #include "ov-dld-fcn.h"
 #include "ov-usr-fcn.h"
 #include "ov-fcn-handle.h"
 #include "ov-fcn-inline.h"
 #include "ov-typeinfo.h"
 #include "ov-null-mat.h"
 #include "ov-lazy-idx.h"
+#include "ov-java.h"
 
 #include "defun.h"
 #include "error.h"
 #include "gripes.h"
 #include "pager.h"
 #include "parse.h"
 #include "pr-output.h"
 #include "symtab.h"
@@ -2749,16 +2750,17 @@ install_types (void)
   octave_float_complex_matrix::register_type ();
   octave_float_complex_diag_matrix::register_type ();
   octave_perm_matrix::register_type ();
   octave_null_matrix::register_type ();
   octave_null_str::register_type ();
   octave_null_sq_str::register_type ();
   octave_lazy_index::register_type ();
   octave_oncleanup::register_type ();
+  octave_java::register_type ();
 }
 
 DEFUN (sizeof, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} sizeof (@var{val})\n\
 Return the size of @var{val} in bytes.\n\
 @seealso{whos}\n\
 @end deftypefn")
