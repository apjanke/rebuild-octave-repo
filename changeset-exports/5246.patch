# HG changeset patch
# User jwe
# Date 1111796221 0
#      Sat Mar 26 00:17:01 2005 +0000
# Node ID 8a4cae8ee7b70dcd97f848d1a82687ecebd38e67
# Parent  3589aff4a35d364d63fd6b4038f0972eed0ebc15
[project @ 2005-03-26 00:17:01 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,15 @@
+2005-03-25  John W. Eaton  <jwe@octave.org>
+
+	* toplev.cc (main_loop): Don't use octave_set_current_context here.
+
+	* pt-loop.cc (simple_for_loop::eval): In for i = matrix ... end,
+	skip loop if matrix is empty.
+
 2005-03-24  John W. Eaton  <jwe@octave.org>
 
 	* DLD-FUNCTIONS/__glpk__.cc (F__glpk__): Texinfoize doc string.
 
 	* Makefile.in (install-oct): Always create $(octfiledir) and
 	install PKG_ADD file there.
 
 	* octave.cc (octave_main): Fix logic in test for exit after
diff --git a/src/pt-loop.cc b/src/pt-loop.cc
--- a/src/pt-loop.cc
+++ b/src/pt-loop.cc
@@ -376,20 +376,23 @@ tree_simple_for_command::eval (void)
 	  {
 	    cm_tmp = rhs.complex_array_value ();
 	    dv = cm_tmp.dims ();
 	  }
 
 	if (error_state)
 	  goto cleanup;
 
-	if (rhs.is_real_type ())
-	  DO_ND_LOOP(m_tmp);
-	else
-	  DO_ND_LOOP(cm_tmp);
+	if (dv.numel () > 0)
+	  {
+	    if (rhs.is_real_type ())
+	      DO_ND_LOOP(m_tmp);
+	    else
+	      DO_ND_LOOP(cm_tmp);
+	  }
       }
     else if (rhs.is_map ())
       {
 	Octave_map tmp_val (rhs.map_value ());
 
 	for (Octave_map::iterator p = tmp_val.begin ();
 	     p != tmp_val.end ();
 	     p++)
diff --git a/src/toplev.cc b/src/toplev.cc
--- a/src/toplev.cc
+++ b/src/toplev.cc
@@ -110,28 +110,16 @@ recover_from_exception (void)
   octave_catch_interrupts ();
 }
 
 int
 main_loop (void)
 {
   octave_save_signal_mask ();
 
-  if (octave_set_current_context)
-    {
-#if defined (USE_EXCEPTIONS_FOR_INTERRUPTS)
-      panic_impossible ();
-#else
-      unwind_protect::run_all ();
-      raw_mode (0);
-      std::cout << "\n";
-      octave_restore_signal_mask ();
-#endif
-    }
-
   can_interrupt = true;
 
   octave_signal_hook = octave_signal_handler;
   octave_interrupt_hook = unwind_protect::run_all;
   octave_bad_alloc_hook = unwind_protect::run_all;
 
   octave_catch_interrupts ();
 
