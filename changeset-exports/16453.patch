# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1365309816 14400
#      Sun Apr 07 00:43:36 2013 -0400
# Node ID 2e3c652c89d111763f3d5bdaf81acc80102e0f7b
# Parent  744ff2fe11ce1322672f01830afe2204ea34e8ce
improve encapsulation of documentation browser window object

* documentation-dockwidget.h, documentation-dockwidget.cc
(documentation_dock_widget): Derive from octave_dock_widget, not
QDockWidget.
(documentation_dock_widget::documentation_dock_widget): Don't connect
documentation_dock_widget::visibilityChanged signal to
documentation_dock_widget::handle_visibility_changed.
Don't connect documentation_dock_widget::topLevelChanged signal to
documentation_dock_widget::top_level_changed.
Set status tip.
(documentation_dock_widget::connect_visibility_changed): New function.
(documentation_dock_widget::closeEvent): Delete.
(documentation_dock_widget::focus,
(documentation_dock_widget::handle_visibility): New functions.
(documentation_dock_widget::active_changed): Delete signal.

* main-window.h, main-window.cc (main_window::file_browser_window):
Rename from documentation_dock_widget.  Change all uses.
(main_window::main_window): Initialize it.
(main_window::focus_documentation,
main_window::handle_documentation_visible): Delete.
(main_window::connect_visibility_changed): Call
doc_browser_window->connect_visibility_changed.
(main_window::construct): Don't create _documentation_dock_widget.

diff --git a/libgui/src/documentation-dockwidget.cc b/libgui/src/documentation-dockwidget.cc
--- a/libgui/src/documentation-dockwidget.cc
+++ b/libgui/src/documentation-dockwidget.cc
@@ -22,47 +22,43 @@ along with Octave; see the file COPYING.
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "documentation-dockwidget.h"
 
 documentation_dock_widget::documentation_dock_widget (QWidget *p)
-  : QDockWidget (p)
+  : octave_dock_widget (p)
 {
   setObjectName ("DocumentationDockWidget");
-  setWindowIcon (QIcon(":/actions/icons/logo.png"));
+  setWindowIcon (QIcon (":/actions/icons/logo.png"));
   setWindowTitle (tr ("Documentation"));
-
-  connect (this, SIGNAL (visibilityChanged (bool)),
-           this, SLOT (handle_visibility_changed (bool)));
-  // topLevelChanged is emitted when floating property changes (floating = true)
-  connect (this, SIGNAL (topLevelChanged(bool)), this, SLOT(top_level_changed(bool)));
+  setStatusTip (tr ("See the documentation for help."));
 
   _webinfo = new webinfo (this);
   setWidget (_webinfo);
 }
 
 void
-documentation_dock_widget::handle_visibility_changed (bool visible)
+documentation_dock_widget::connect_visibility_changed (void)
 {
-  if (visible)
-    emit active_changed (true);
+  connect (this, SIGNAL (visibilityChanged (bool)),
+           this, SLOT (handle_visibility (bool)));
 }
 
 void
-documentation_dock_widget::closeEvent (QCloseEvent *e)
+documentation_dock_widget::focus (void)
 {
-  emit active_changed (false);
-  QDockWidget::closeEvent (e);
+  if (! isVisible ())
+    setVisible (true);
+
+  setFocus ();
+  activateWindow ();
+  raise ();
 }
 
-// slot for signal that is emitted when floating property changes
 void
-documentation_dock_widget::top_level_changed (bool floating)
+documentation_dock_widget::handle_visibility (bool visible)
 {
-  if(floating)
-    {
-      setWindowFlags(Qt::Window);  // make a window from the widget when floating
-      show();                      // make it visible again since setWindowFlags hides it
-    }
+  if (visible && ! isFloating ())
+    focus ();
 }
diff --git a/libgui/src/documentation-dockwidget.h b/libgui/src/documentation-dockwidget.h
--- a/libgui/src/documentation-dockwidget.h
+++ b/libgui/src/documentation-dockwidget.h
@@ -18,36 +18,34 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifndef DOCUMENTATIONDOCKWIDGET_H
 #define DOCUMENTATIONDOCKWIDGET_H
 
-#include <QObject>
-#include <QDockWidget>
+#include "octave-dock-widget.h"
+
 #include "webinfo.h"
 
-class documentation_dock_widget : public QDockWidget
+class documentation_dock_widget : public octave_dock_widget
 {
   Q_OBJECT
-  public:
+
+public:
+
   documentation_dock_widget (QWidget *parent = 0);
 
+  void connect_visibility_changed (void);
+
 public slots:
-  /** Slot to steer changing visibility from outside. */
-  void handle_visibility_changed (bool visible);
-  /** Slot when floating property changes */
-  void top_level_changed (bool floating);
 
-signals:
-  /** Custom signal that tells if a user has clicked away that dock widget. */
-  void active_changed (bool active);
+  void focus (void);
 
-protected:
-  void closeEvent (QCloseEvent *event);
+  void handle_visibility (bool);
 
 private:
+
   webinfo *_webinfo;
 };
 
 #endif // DOCUMENTATIONDOCKWIDGET_H
diff --git a/libgui/src/main-window.cc b/libgui/src/main-window.cc
--- a/libgui/src/main-window.cc
+++ b/libgui/src/main-window.cc
@@ -56,48 +56,47 @@ along with Octave; see the file COPYING.
 #include "oct-env.h"
 
 main_window::main_window (QWidget *p)
   : QMainWindow (p),
     _workspace_model (new workspace_model ()),
     status_bar (new QStatusBar ()),
     command_window (new terminal_dock_widget (this)),
     history_window (new history_dock_widget (this)),
-    file_browser_window (new files_dock_widget (this))
+    file_browser_window (new files_dock_widget (this)),
+    doc_browser_window (new documentation_dock_widget (this))
 {
   // We have to set up all our windows, before we finally launch octave.
   construct ();
 }
 
 main_window::~main_window ()
 {
   delete _workspace_model;
   delete status_bar;
   delete command_window;
   delete history_window;
   delete file_browser_window;
+  delete doc_browser_window;
 
   // Clean up all dynamically created objects to ensure they are
   // deleted before this main_window is.  Otherwise, some will be
   // attached to a non-existent parent.
 
   if (_octave_qt_event_listener)
     delete _octave_qt_event_listener;
 
   octave_link::connect_link (0);
   delete _octave_qt_link;
 
 #ifdef HAVE_QSCINTILLA
   if (_file_editor)
     delete _file_editor;
 #endif
 
-  if (_documentation_dock_widget)
-    delete _documentation_dock_widget;
-
   delete _workspace_view;
 }
 
 void
 main_window::focus_command_window (void)
 {
   command_window->focus ();
 }
@@ -372,29 +371,16 @@ main_window::focus_editor ()
 {
 #ifdef HAVE_QSCINTILLA
   // call own function of editor in order to set focus to the current editor tab
   _file_editor->set_focus ();
 #endif
 }
 
 void
-main_window::focus_documentation ()
-{
-  if (!_documentation_dock_widget->isVisible ())
-    {
-      _documentation_dock_widget->setVisible (true);
-    }
-
-  _documentation_dock_widget->setFocus ();
-  _documentation_dock_widget->activateWindow ();
-  _documentation_dock_widget->raise ();
-}
-
-void
 main_window::handle_workspace_visible (bool visible)
 {
   // if changed to visible and widget is not floating
   if (visible && !_workspace_view->isFloating ())
     focus_workspace ();
 }
 
 void
@@ -403,24 +389,16 @@ main_window::handle_editor_visible (bool
   // if changed to visible and widget is not floating
 #ifdef HAVE_QSCINTILLA
   if (visible && !_file_editor->isFloating ())
     focus_editor ();
 #endif
 }
 
 void
-main_window::handle_documentation_visible (bool visible)
-{
-  // if changed to visible and widget is not floating
-  if (visible && !_documentation_dock_widget->isFloating ())
-    focus_documentation ();
-}
-
-void
 main_window::handle_enter_debugger (void)
 {
   setWindowTitle ("Octave (Debugging)");
 
   _debug_continue->setEnabled (true);
   _debug_step_into->setEnabled (true);
   _debug_step_over->setEnabled (true);
   _debug_step_out->setEnabled (true);
@@ -575,27 +553,26 @@ main_window::write_settings ()
 // Connecting the signals emitted when the visibility of a widget changes.
 // This has to be done after the window is shown (see octave-gui.cc)
 void
 main_window::connect_visibility_changed ()
 {
   command_window->connect_visibility_changed ();
   history_window->connect_visibility_changed ();
   file_browser_window->connect_visibility_changed ();
+  doc_browser_window->connect_visibility_changed ();
 
   connect (_workspace_view,       SIGNAL (visibilityChanged (bool)),
            this,                  SLOT (handle_workspace_visible (bool)));
 
 #ifdef HAVE_QSCINTILLA
   connect (_file_editor,          SIGNAL (visibilityChanged (bool)),
            this,                  SLOT (handle_editor_visible (bool)));
 #endif
 
-  connect (_documentation_dock_widget,  SIGNAL (visibilityChanged (bool)),
-           this,                  SLOT (handle_documentation_visible (bool)));
 }
 
 
 // Main subroutine of the constructor
 void
 main_window::construct ()
 {
   _closing = false;   // flag for editor files when closed
@@ -605,19 +582,16 @@ main_window::construct ()
   _workspace_view           = new workspace_view (this);
 
   _workspace_view->setModel (_workspace_model);
   _workspace_view->setStatusTip (tr ("View the variables in the active workspace."));
 
   connect (_workspace_model, SIGNAL (model_changed ()),
            _workspace_view, SLOT (model_changed ()));
 
-  _documentation_dock_widget= new documentation_dock_widget (this);
-  _documentation_dock_widget->setStatusTip (tr ("See the documentation for help."));
-
   _current_directory_line_edit = new QLineEdit (this);
   _current_directory_combo_box = new QComboBox (this);
   _current_directory_combo_box->setFixedWidth (current_directory_width);
   _current_directory_combo_box->setEditable (true);
   // setLineEdit takes ownership -> no need to delete line_edit in ~main_window
   _current_directory_combo_box->setLineEdit (_current_directory_line_edit);
   _current_directory_combo_box->setInsertPolicy (QComboBox::InsertAtTop);
   _current_directory_combo_box->setMaxVisibleItems (current_directory_max_visible);
@@ -979,35 +953,35 @@ main_window::construct ()
            show_file_browser_action,    SLOT   (setChecked (bool)));
 #ifdef HAVE_QSCINTILLA
   connect (show_editor_action,          SIGNAL (toggled (bool)),
            _file_editor,                SLOT   (setVisible (bool)));
   connect (_file_editor,                SIGNAL (active_changed (bool)),
            show_editor_action,          SLOT   (setChecked (bool)));
 #endif
   connect (show_documentation_action,   SIGNAL (toggled (bool)),
-           _documentation_dock_widget,  SLOT   (setVisible (bool)));
-  connect (_documentation_dock_widget,  SIGNAL (active_changed (bool)),
+           doc_browser_window,          SLOT   (setVisible (bool)));
+  connect (doc_browser_window,          SIGNAL (active_changed (bool)),
            show_documentation_action,   SLOT   (setChecked (bool)));
 
   connect (command_window_action,       SIGNAL (triggered ()),
            command_window,              SLOT (focus ()));
 
   connect (workspace_action,            SIGNAL (triggered ()),
            this,                        SLOT (focus_workspace ()));
   connect (history_action,              SIGNAL (triggered ()),
            history_window,              SLOT (focus ()));
   connect (file_browser_action,         SIGNAL (triggered ()),
            file_browser_window,         SLOT (focus ()));
   connect (editor_action,               SIGNAL (triggered ()),
            this,                        SLOT (focus_editor ()));
   connect (documentation_action,        SIGNAL (triggered ()),
-           this,                        SLOT (focus_documentation ()));
+           doc_browser_window,          SLOT (focus ()));
   connect (ondisk_documentation_action, SIGNAL (triggered ()),
-           this,                        SLOT (focus_documentation ()));
+           doc_browser_window,          SLOT (focus ()));
 
   connect (reset_windows_action,        SIGNAL (triggered ()),
            this,                        SLOT   (reset_windows ()));
 #ifdef HAVE_QSCINTILLA
   connect (this,                        SIGNAL (settings_changed (const QSettings *)),
            _file_editor,                SLOT   (notice_settings (const QSettings *)));
 #endif
   connect (this,                        SIGNAL (settings_changed (const QSettings *)),
@@ -1054,18 +1028,18 @@ main_window::construct ()
            this,                        SLOT (debug_quit ()));
 
   connect (clear_command_history,       SIGNAL (triggered ()),
            this,                        SLOT (handle_clear_history_request ()));
 
   setWindowTitle ("Octave");
   setDockOptions(QMainWindow::AnimatedDocks | QMainWindow::AllowNestedDocks | QMainWindow::AllowTabbedDocks);
   addDockWidget (Qt::RightDockWidgetArea, command_window);
-  addDockWidget (Qt::RightDockWidgetArea, _documentation_dock_widget);
-  tabifyDockWidget (command_window, _documentation_dock_widget);
+  addDockWidget (Qt::RightDockWidgetArea, doc_browser_window);
+  tabifyDockWidget (command_window, doc_browser_window);
 #ifdef HAVE_QSCINTILLA
   addDockWidget (Qt::RightDockWidgetArea, _file_editor);
   tabifyDockWidget (command_window, _file_editor);
 #endif
   addDockWidget (Qt::LeftDockWidgetArea, file_browser_window);
   addDockWidget (Qt::LeftDockWidgetArea, _workspace_view);
   addDockWidget (Qt::LeftDockWidgetArea, history_window);
 
diff --git a/libgui/src/main-window.h b/libgui/src/main-window.h
--- a/libgui/src/main-window.h
+++ b/libgui/src/main-window.h
@@ -1,10 +1,11 @@
 /*
 
+Copyright (C) 2013 John W. Eaton
 Copyright (C) 2011-2012 Jacob Dawid
 
 This file is part of Octave.
 
 Octave is free software; you can redistribute it and/or modify it
 under the terms of the GNU General Public License as published by the
 Free Software Foundation; either version 3 of the License, or (at your
 option) any later version.
@@ -99,20 +100,18 @@ public slots:
   void set_current_working_directory (const QString& dir);
   void change_directory_up (void);
   void accept_directory_line_edit (void);
 
   void handle_command_double_clicked (const QString& command);
 
   void focus_workspace ();
   void focus_editor ();
-  void focus_documentation ();
   void handle_workspace_visible (bool);
   void handle_editor_visible (bool);
-  void handle_documentation_visible (bool);
 
   void handle_enter_debugger (void);
   void handle_exit_debugger (void);
   void debug_continue ();
   void debug_step_into ();
   void debug_step_over ();
   void debug_step_out ();
   void debug_quit ();
@@ -155,31 +154,31 @@ private:
 
   // Toolbars.
   QStatusBar *status_bar;
 
   // Subwindows.
   terminal_dock_widget *command_window;
   history_dock_widget *history_window;
   files_dock_widget *file_browser_window;
+  documentation_dock_widget *doc_browser_window;
 
 #ifdef HAVE_QSCINTILLA
   file_editor_interface *   _file_editor;
 #endif
   QMenu *                   _debug_menu;
 
   QAction *                 _debug_continue;
   QAction *                 _debug_step_into;
   QAction *                 _debug_step_over;
   QAction *                 _debug_step_out;
   QAction *                 _debug_quit;
 
   // Dock widgets.
   workspace_view *          _workspace_view;
-  documentation_dock_widget*_documentation_dock_widget;
 
   // Toolbars.
   QComboBox *               _current_directory_combo_box;
   static const int        current_directory_width       = 300;
   static const int        current_directory_max_visible = 16;
   static const int        current_directory_max_count   = 16;
   QLineEdit *               _current_directory_line_edit;
 
