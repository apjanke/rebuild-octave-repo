# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1203581127 18000
#      Thu Feb 21 03:05:27 2008 -0500
# Branch release-3-0-x
# Node ID 087af2a4ca269f7bdc6835cf8bdf5ee3b9260520
# Parent  5d50ebf98273609df0503fbdcb3be92cf7780837
fsolve: detect nonsquare systems

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,14 @@
+2008-02-21  John W. Eaton  <jwe@octave.org>
+
+	* DLD-FUNCTIONS/fsolve.cc (fsolve_user_jacobian):
+	Check dimensions of user-supplied Jacobian matrix.
+	(fsolve_user_function): Check for non-square systems.
+
 2008-02-12  David Bateman  <dbateman@free.fr?
 
 	* graphics.h.in: Implement the cdatamapping property in patch,
 	surface and image objects.
 	* graphics.cc: ditto.
 
 2008-02-12  John W. Eaton  <jwe@octave.org>
 
diff --git a/src/DLD-FUNCTIONS/fsolve.cc b/src/DLD-FUNCTIONS/fsolve.cc
--- a/src/DLD-FUNCTIONS/fsolve.cc
+++ b/src/DLD-FUNCTIONS/fsolve.cc
@@ -134,16 +134,18 @@ fsolve_user_function (const ColumnVector
 	      warning ("fsolve: ignoring imaginary part returned from user-supplied function");
 	      warned_fcn_imaginary = true;
 	    }
 
 	  retval = ColumnVector (tmp(0).vector_value ());
 
 	  if (error_state || retval.length () <= 0)
 	    gripe_user_supplied_eval ("fsolve");
+	  else if (retval.length () != x.length ())
+	    error ("fsolve: unable to solve non-square systems");
 	}
       else
 	gripe_user_supplied_eval ("fsolve");
     }
 
   return retval;
 }
 
@@ -183,16 +185,19 @@ fsolve_user_jacobian (const ColumnVector
 	      warning ("fsolve: ignoring imaginary part returned from user-supplied jacobian function");
 	      warned_fcn_imaginary = true;
 	    }
 
 	  retval = tmp(0).matrix_value ();
 
 	  if (error_state || retval.length () <= 0)
 	    gripe_user_supplied_eval ("fsolve");
+	  else if (! (retval.rows () == x.length ()
+		      && retval.columns () == x.length ()))
+	    error ("fsolve: invalid Jacobian matrix dimensions");
 	}
       else
 	gripe_user_supplied_eval ("fsolve");
     }
 
   return retval;
 }
 
