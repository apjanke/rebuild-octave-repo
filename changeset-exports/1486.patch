# HG changeset patch
# User jwe
# Date 812108686 0
#      Tue Sep 26 09:44:46 1995 +0000
# Node ID 232dbc2460c086392141315b8e72b2363364f997
# Parent  455df04f6d902e0ae7b2dec551d1c3cdb8be917a
[project @ 1995-09-26 09:39:31 by jwe]

diff --git a/liboctave/CmplxSCHUR.h b/liboctave/CmplxSCHUR.h
--- a/liboctave/CmplxSCHUR.h
+++ b/liboctave/CmplxSCHUR.h
@@ -38,17 +38,17 @@ friend class ComplexMatrix;
 
 public:
 
   ComplexSCHUR (void) {}
 
   ComplexSCHUR (const ComplexMatrix& a, const char *ord);
   ComplexSCHUR (const ComplexMatrix& a, const char *ord, int& info);
 
-  ComplexSCHUR (const ComplexSCHUR& a, const char *ord);
+  ComplexSCHUR (const ComplexSCHUR& a);
 
   ComplexSCHUR& operator = (const ComplexSCHUR& a);
 
   ComplexMatrix schur_matrix (void) const;
   ComplexMatrix unitary_matrix (void) const;
 
   friend ostream& operator << (ostream& os, const ComplexSCHUR& a);
 
@@ -66,17 +66,17 @@ inline ComplexSCHUR::ComplexSCHUR (const
 }
 
 inline ComplexSCHUR::ComplexSCHUR (const ComplexMatrix& a, const char *ord,
 				   int& info)
 {
   info = init (a,ord);
 }
 
-inline ComplexSCHUR::ComplexSCHUR (const ComplexSCHUR& a, const char *ord)
+inline ComplexSCHUR::ComplexSCHUR (const ComplexSCHUR& a)
 {
   schur_mat = a.schur_mat;
   unitary_mat = a.unitary_mat;
 }
 
 inline ComplexSCHUR&
 ComplexSCHUR::operator = (const ComplexSCHUR& a)
 {
diff --git a/liboctave/Quad.h b/liboctave/Quad.h
--- a/liboctave/Quad.h
+++ b/liboctave/Quad.h
@@ -47,16 +47,17 @@ typedef double (*integrand_fcn) (double 
 // function, and the user wants us to quit.
 extern int quad_integration_error;
 
 class Quad_options
 {
  public:
 
   Quad_options (void);
+  Quad_options (double abs, double rel);
   Quad_options (const Quad_options& opt);
 
   Quad_options& operator = (const Quad_options& opt);
 
   ~Quad_options (void);
 
   void init (void);
   void copy (const Quad_options& opt);
diff --git a/liboctave/dbleSCHUR.cc b/liboctave/dbleSCHUR.cc
--- a/liboctave/dbleSCHUR.cc
+++ b/liboctave/dbleSCHUR.cc
@@ -41,17 +41,17 @@ extern "C"
 				const char*, const int&, double*,
 				const int&, int&, double*, double*,
 				double*, const int&, double&, double&,
 				double*, const int&, int*, const int&,
 				int*, int&, long, long);
 }
 
 static int
-select_ana (const double& a, const double& b)
+select_ana (const double& a, const double&)
 {
    return (a < 0.0);
 }
 
 static int
 select_dig (const double& a, const double& b)
 {
   return (hypot (a, b) < 1.0);
diff --git a/liboctave/dbleSCHUR.h b/liboctave/dbleSCHUR.h
--- a/liboctave/dbleSCHUR.h
+++ b/liboctave/dbleSCHUR.h
@@ -38,17 +38,17 @@ friend class Matrix;
 
 public:
 
   SCHUR (void) {}
 
   SCHUR (const Matrix& a, const char *ord);
   SCHUR (const Matrix& a, const char *ord, int& info);
 
-  SCHUR (const SCHUR& a, const char *ord);
+  SCHUR (const SCHUR& a);
 
   SCHUR& operator = (const SCHUR& a);
 
   Matrix schur_matrix (void) const;
   Matrix unitary_matrix (void) const;
 
   friend ostream& operator << (ostream& os, const SCHUR& a);
 
@@ -65,17 +65,17 @@ inline SCHUR::SCHUR (const Matrix& a, co
   init (a, ord);
 }
 
 inline SCHUR::SCHUR (const Matrix& a, const char *ord, int& info) 
 {
   info = init (a, ord);
 }
 
-inline SCHUR::SCHUR (const SCHUR& a, const char *ord)
+inline SCHUR::SCHUR (const SCHUR& a)
 {
   schur_mat = a.schur_mat;
   unitary_mat = a.unitary_mat;
 }
 
 inline SCHUR&
 SCHUR::operator = (const SCHUR& a)
 {
