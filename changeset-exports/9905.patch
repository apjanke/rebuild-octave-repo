# HG changeset patch
# User Rik <rdrider0-list@yahoo.com>
# Date 1259818931 28800
#      Wed Dec 02 21:42:11 2009 -0800
# Node ID 84a7c11ff928c1c34185a78e33d5d93ca2c4ded7
# Parent  f0f19b51b5d074b324c0e6a3001c313a7eab48ba
Correctly compile even when libcurl is not present according to configure

Missing ifdefs surrounding code dependent on libcurl prevented compilation
when the library was not present.

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2009-12-02  Rik <rik@nomad.inbox5.com>
+
+	* DLD-FUNCTIONS/urlwrite.cc: Correctly compile code even when libcurl is
+	not present according to configure.
+
 2009-12-01  Jaroslav Hajek  <highegg@gmail.com>
 
 	* ov-bool-mat.h (octave_bool_matrix::octave_bool_matrix (const
 	boolNDArray&, const idx_vector&)): New constructor.
 	* ov-re-mat.h (octave_bool_matrix::octave_bool_matrix (const
 	NDArray&, const idx_vector&)): Simplify.
 	 * ov.cc (octave_value::octave_value (const idx_vector&)): Allow the
 	 mask case.
diff --git a/src/DLD-FUNCTIONS/urlwrite.cc b/src/DLD-FUNCTIONS/urlwrite.cc
--- a/src/DLD-FUNCTIONS/urlwrite.cc
+++ b/src/DLD-FUNCTIONS/urlwrite.cc
@@ -43,17 +43,17 @@ along with Octave; see the file COPYING.
 #include "defun-dld.h"
 #include "error.h"
 #include "oct-obj.h"
 #include "ov-cell.h"
 #include "pager.h"
 #include "oct-map.h"
 #include "unwind-prot.h"
 
-#if defined (HAVE_CURL)
+#ifdef HAVE_CURL
 
 #include <curl/curl.h>
 #include <curl/curlver.h>
 #include <curl/types.h>
 #include <curl/easy.h>
 
 static int 
 write_data (void *buffer, size_t size, size_t nmemb, void *streamp)
@@ -735,17 +735,17 @@ urlwrite (\"http://www.google.com/search
           \"get\", @{\"query\", \"octave\"@});\n\
 @end group\n\
 @end example\n\
 @seealso{urlread}\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
-#if defined (HAVE_CURL)
+#ifdef HAVE_CURL
 
   int nargin = args.length ();
 
   // verify arguments
   if (nargin != 2 && nargin != 4)
     {
       print_usage ();
       return retval;
@@ -895,17 +895,17 @@ s = urlread (\"http://www.google.com/sea
 @end group\n\
 @end example\n\
 @seealso{urlwrite}\n\
 @end deftypefn")
 {
   // Octave's return value
   octave_value_list retval;
 
-#if defined (HAVE_CURL)
+#ifdef HAVE_CURL
 
   int nargin = args.length ();
 
   // verify arguments
   if (nargin != 1  && nargin != 3)
     {
       print_usage ();
       return retval;
@@ -1418,16 +1418,17 @@ Undocumented internal function\n\
     }
 #else
   error ("__ftp_rename__: not available in this version of Octave");
 #endif
 
   return octave_value ();
 }
 
+#ifdef HAVE_CURL
 static string_vector
 mput_directory (const curl_handle& curl, const std::string& base,
 		const std::string& dir)
 {
   string_vector retval;
 
   if (! curl.mkdir (dir, false))
     warning ("__ftp_mput__: can not create the remote directory ""%s""",
@@ -1504,16 +1505,17 @@ mput_directory (const curl_handle& curl,
 	error ("__ftp_mput__: can not read the directory ""%s""", 
 	       realdir.c_str());
 
       unwind_protect::run_frame (uwp_frame);
     }
 
   return retval;
 }
+#endif
 
 DEFUN_DLD (__ftp_mput__, args, nargout,
   "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {} __ftp_mput__ (@var{handle}, @var{files})\n\
 Undocumented internal function\n\
 @end deftypefn")
 {
   string_vector retval;
