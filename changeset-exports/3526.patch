# HG changeset patch
# User jwe
# Date 949488808 0
#      Wed Feb 02 10:53:28 2000 +0000
# Node ID cc21933776a19b09ae8c47df5de8feaa02bb4895
# Parent  6cfa474c5b99256ac5b42ea523ca1d971a85b133
[project @ 2000-02-02 10:53:27 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,14 @@
 2000-02-02  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* data.cc (Fis_list): Fix continuation char.
+
+	* Map.cc (CHptr_to_index, goodCHptr): Delete static decl.
+
 	* ov.h (unary_op, binary_op, assign_op): Prepend `op_' to elts.
 	Change all usses
 
 	* All source files: Sprinkle with std:: qualifier as needed.
 
 2000-01-31  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* sighandlers.cc (install_signal_handlers): Add std:: qualifier
diff --git a/src/Map.cc b/src/Map.cc
--- a/src/Map.cc
+++ b/src/Map.cc
@@ -108,30 +108,30 @@ Map<C>::error (const std::string& msg) c
 
 // CHMap class.
 
 // The nodes are linked together serially via a version of a trick
 // used in some vtables: odd pointers are actually links to the next
 // table entry.  Not terrible, but not wonderful either.
 
 template <class C>
-static int
+int
 goodCHptr (CHNode<C> *t)
 {
   return (((X_CAST (unsigned, t)) & 1) == 0);
 }
 
 static void *
 index_to_CHptr (int i)
 {
   return X_CAST (void *, (i << 1) + 1);
 }
 
 template <class C>
-static unsigned int
+unsigned int
 CHptr_to_index (CHNode<C> *t)
 {
   return (X_CAST (unsigned, t)) >> 1;
 }
 
 template <class C>
 CHMap<C>::CHMap (const C& dflt, unsigned int sz) : Map<C> (dflt)
 {
diff --git a/src/data.cc b/src/data.cc
--- a/src/data.cc
+++ b/src/data.cc
@@ -876,17 +876,17 @@ Return nonzero if @var{x} is a numeric o
     retval = args(0).is_numeric_type ();
   else
     print_usage ("isnumeric");
 
   return retval;
 }
 
 DEFUN (is_list, args, ,
-  "-*- texinfo -*-\n
+  "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} is_list (@var{x})\n\
 Return nonzero if @var{x} is a list.\n\
 @end deftypefn")
 {
   octave_value retval;
 
   if (args.length () == 1)
     retval = args(0).is_list ();
