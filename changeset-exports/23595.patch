# HG changeset patch
# User Rik <rik@octave.org>
# Date 1497454448 25200
#      Wed Jun 14 08:34:08 2017 -0700
# Node ID d70434783da3e6da10513c00b25699940bdddc77
# Parent  af5b813503cb48fde6c0c267e735d41b1051f9d5
maint: Correct deprecation message about is_hermitian (cset af5b813503cb).

* CMatrix.h, CSparse.h, MatrixType.h, fCMatrix.h:
Correct deprecation message to say "ishermitian" is replacement.

diff --git a/liboctave/array/CMatrix.h b/liboctave/array/CMatrix.h
--- a/liboctave/array/CMatrix.h
+++ b/liboctave/array/CMatrix.h
@@ -106,17 +106,17 @@ public:
 
   explicit ComplexMatrix (const charMatrix& a);
 
   bool operator == (const ComplexMatrix& a) const;
   bool operator != (const ComplexMatrix& a) const;
 
   bool ishermitian (void) const;
 
-  OCTAVE_DEPRECATED ("use 'is_hermitian' instead")
+  OCTAVE_DEPRECATED ("use 'ishermitian' instead")
   bool is_hermitian (void) const
   { return ishermitian (); }
 
   // destructive insert/delete/reorder operations
 
   ComplexMatrix& insert (const Matrix& a, octave_idx_type r, octave_idx_type c);
   ComplexMatrix& insert (const RowVector& a,
                          octave_idx_type r, octave_idx_type c);
diff --git a/liboctave/array/CSparse.h b/liboctave/array/CSparse.h
--- a/liboctave/array/CSparse.h
+++ b/liboctave/array/CSparse.h
@@ -108,17 +108,17 @@ public:
     return *this;
   }
 
   bool operator == (const SparseComplexMatrix& a) const;
   bool operator != (const SparseComplexMatrix& a) const;
 
   bool ishermitian (void) const;
 
-  OCTAVE_DEPRECATED ("use 'is_hermitian' instead")
+  OCTAVE_DEPRECATED ("use 'ishermitian' instead")
   bool is_hermitian (void) const
   { return ishermitian (); }
 
   SparseComplexMatrix max (int dim = -1) const;
   SparseComplexMatrix max (Array<octave_idx_type>& index, int dim = -1) const;
   SparseComplexMatrix min (int dim = -1) const;
   SparseComplexMatrix min (Array<octave_idx_type>& index, int dim = -1) const;
 
diff --git a/liboctave/array/MatrixType.h b/liboctave/array/MatrixType.h
--- a/liboctave/array/MatrixType.h
+++ b/liboctave/array/MatrixType.h
@@ -123,17 +123,17 @@ public:
   { return (typ == Tridiagonal || typ == Tridiagonal_Hermitian); }
 
   bool ishermitian (void) const
   {
     return (typ == Banded_Hermitian || typ == Tridiagonal_Hermitian
             || typ == Hermitian);
   }
 
-  OCTAVE_DEPRECATED ("use 'is_hermitian' instead")
+  OCTAVE_DEPRECATED ("use 'ishermitian' instead")
   bool is_hermitian (void) const
   { return ishermitian (); }
 
   bool is_rectangular (void) const { return (typ == Rectangular); }
 
   bool is_known (void) const { return (typ != Unknown); }
 
   bool is_unknown (void) const { return (typ == Unknown); }
diff --git a/liboctave/array/fCMatrix.h b/liboctave/array/fCMatrix.h
--- a/liboctave/array/fCMatrix.h
+++ b/liboctave/array/fCMatrix.h
@@ -111,17 +111,17 @@ public:
 
   FloatComplexMatrix (const FloatMatrix& re, const FloatMatrix& im);
 
   bool operator == (const FloatComplexMatrix& a) const;
   bool operator != (const FloatComplexMatrix& a) const;
 
   bool ishermitian (void) const;
 
-  OCTAVE_DEPRECATED ("use 'is_hermitian' instead")
+  OCTAVE_DEPRECATED ("use 'ishermitian' instead")
   bool is_hermitian (void) const
   { return ishermitian (); }
 
   // destructive insert/delete/reorder operations
 
   FloatComplexMatrix& insert (const FloatMatrix& a,
                               octave_idx_type r, octave_idx_type c);
   FloatComplexMatrix& insert (const FloatRowVector& a,
