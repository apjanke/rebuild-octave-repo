# HG changeset patch
# User Kai Habel <kai.habel@gmx.de>
# Date 1315758298 -7200
#      Sun Sep 11 18:24:58 2011 +0200
# Node ID 6efa1a691713fc34e4d75082842dcf86771f31a3
# Parent  f80273b38cc4a2b2e1cf9572fe2508191eb61add
Add further tests for scripts/plot.

plot/close.m: Tests added.
plot/gca.m, plot/gcbf.m, plot/gcbo.m, plot/hggroup.m, plot/isfigure.m: Ditto.
plot/gtext.m, plot/ginput.m: Dummy test added.

diff --git a/scripts/plot/close.m b/scripts/plot/close.m
--- a/scripts/plot/close.m
+++ b/scripts/plot/close.m
@@ -74,8 +74,20 @@ function close_all_figures (close_hidden
   while (! isempty (fig = get (0, "currentfigure")))
     ## handlevisibility = get (fig, "handlevisibility")
     ## if (close_hidden_figs || ! strcmpi (handlevisibility, "off"))
     close (fig);
     ## endif
   endwhile
 
 endfunction
+
+%!test
+%! hf = figure (1232, "visible", "off");
+%! unwind_protect
+%!   close (1232);
+%!   objs = findobj ("type", "figure");
+%!   assert (isempty (intersect (objs, 1232)));
+%! unwind_protect_cleanup
+%!   if (isfigure (1232))
+%!     close (hf);
+%!   endif
+%! end_unwind_protect
diff --git a/scripts/plot/gca.m b/scripts/plot/gca.m
--- a/scripts/plot/gca.m
+++ b/scripts/plot/gca.m
@@ -44,8 +44,17 @@ function h = gca ()
     if (isempty (h))
       h = axes ();
     endif
   else
     print_usage ();
   endif
 
 endfunction
+
+%!test
+%! hf = figure (1232, "visible", "off");
+%! ax = axes;
+%! unwind_protect  
+%!   assert (gca, ax);
+%! unwind_protect_cleanup
+%!   close (hf);
+%! end_unwind_protect
diff --git a/scripts/plot/gcbf.m b/scripts/plot/gcbf.m
--- a/scripts/plot/gcbf.m
+++ b/scripts/plot/gcbf.m
@@ -26,8 +26,11 @@
 ##@seealso{gcf, gca, gcbo}
 ##@end deftypefn
 
 function fig = gcbf ()
 
   [dummy, fig] = gcbo ();
 
 endfunction
+
+%!test
+%! assert (isempty (gcbf ));
diff --git a/scripts/plot/gcbo.m b/scripts/plot/gcbo.m
--- a/scripts/plot/gcbo.m
+++ b/scripts/plot/gcbo.m
@@ -36,8 +36,11 @@ function [h, fig] = gcbo ()
   h = get (0, "callbackobject");
   fig = [];
 
   if (! isempty (h) && nargout > 1)
     fig = ancestor (h, "figure");
   endif
 
 endfunction
+
+%!test
+%! assert (isempty (gcbo ));
diff --git a/scripts/plot/ginput.m b/scripts/plot/ginput.m
--- a/scripts/plot/ginput.m
+++ b/scripts/plot/ginput.m
@@ -37,8 +37,12 @@ function varargout = ginput (n)
   varargout = cell (1, nargout);
   if (nargin == 0)
     [varargout{:}] = feval (strcat ("__", toolkit, "_ginput__"), f);
   else
     [varargout{:}] = feval (strcat ("__", toolkit, "_ginput__"), f, n);
   endif
 
 endfunction
+
+## Remove from test statistics.  No real tests possible.
+%!test
+%! assert (1);
diff --git a/scripts/plot/gtext.m b/scripts/plot/gtext.m
--- a/scripts/plot/gtext.m
+++ b/scripts/plot/gtext.m
@@ -46,8 +46,11 @@ function gtext (s, varargin)
       error ("gtext: expecting a string or cell array of strings");
     endif
   else
     print_usage ();
   endif
 
 endfunction
 
+## Remove from test statistics.  No real tests possible.
+%!test
+%! assert (1);
diff --git a/scripts/plot/hggroup.m b/scripts/plot/hggroup.m
--- a/scripts/plot/hggroup.m
+++ b/scripts/plot/hggroup.m
@@ -36,8 +36,18 @@ function h = hggroup (varargin)
 
   tmp = __go_hggroup__ (ax, varargin{:});
 
   if (nargout > 0)
     h = tmp;
   endif
 
 endfunction
+
+%!test
+%! hf = figure (1232, "visible", "off");
+%! unwind_protect  
+%!   h = hggroup;
+%!   assert (findobj (hf, "type", "hggroup"), h);
+%!   assert (get (h, "type"), "hggroup");
+%! unwind_protect_cleanup
+%!   close (hf);
+%! end_unwind_protect
diff --git a/scripts/plot/isfigure.m b/scripts/plot/isfigure.m
--- a/scripts/plot/isfigure.m
+++ b/scripts/plot/isfigure.m
@@ -29,8 +29,17 @@ function retval = isfigure (h)
 
   if (nargin == 1)
     retval = (ishandle (h) && strcmp (get (h, "type"), "figure"));
   else
     print_usage ();
   endif
 
 endfunction
+
+%!test
+%! hf = figure (1232, "visible", "off");
+%! unwind_protect  
+%!   assert (isfigure (1232));
+%!   assert (!isfigure (-1232));
+%! unwind_protect_cleanup
+%!   close (hf);
+%! end_unwind_protect
