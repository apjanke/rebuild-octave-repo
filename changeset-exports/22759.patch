# HG changeset patch
# User Pantxo Diribarne <pantxo.diribarne@gmail.com>
# Date 1477553098 -7200
#      Thu Oct 27 09:24:58 2016 +0200
# Node ID 39f39eb4e4768c5dfa61cee9c96b71f39c07715f
# Parent  6ea9681bb22591d830207145165ccb67061da950
Implement "linejoin" property (bug #48387)

* configure.ac: test whether gl2psLineJoin function is available in gl2ps
* graphics.in.h (line::properties): add "linejoin" property
* gl-render.h (opengl_renderer::set_linejoin): new virtual method, does nothing
   by default.
* gl-render.cc (opengl_renderer::draw_line): make use of "linejoin" property
* gl-render.cc (opengl_renderer::draw_patch/suface): force "miter" line join

* gl2ps-print.cc (gl2ps_renderer::set_linejoin): call gl2psLineJoin conditioned
   on HAVE_GL2PSLINEJOIN.
* genpropdoc.m: document linejoin property.

diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -1741,16 +1741,21 @@ OCTAVE_CHECK_LIB(OSMesa, OSMesa,
 ## Check for gl2ps which is required for printing with OpenGL graphics
 
 AC_CHECK_HEADERS([gl2ps.h],
   [GL2PS_LIBS="-lgl2ps"],
   [warn_gl2ps="gl2ps library not found.  Printing of OpenGL graphics will be disabled."])
 
 if test -n "$warn_gl2ps"; then
   OCTAVE_CONFIGURE_WARNING([warn_gl2ps])
+else
+  save_LIBS="$LIBS"
+  LIBS="$GL2PS_LIBS $LIBS"
+  AC_CHECK_FUNCS([gl2psLineJoin])
+  LIBS="$save_LIBS"
 fi
 
 AC_SUBST(GL2PS_LIBS)
 
 ### GUI/Qt related tests.
 
 QT_VERSIONS="5 4"
 
diff --git a/doc/interpreter/genpropdoc.m b/doc/interpreter/genpropdoc.m
--- a/doc/interpreter/genpropdoc.m
+++ b/doc/interpreter/genpropdoc.m
@@ -865,16 +865,20 @@ for the z-axis.  __modemsg__.  @xref{XRE
 
       case "interpreter"
 
       case "linestyle"
         s.doc = "@xref{Line Styles}.";
 
       case "linewidth"
         s.doc = "Width of the line object measured in points.";
+        
+      case "linejoin"
+        s.doc = "Control the shape of the junction of line segments. \
+This property currently only affects the printed output.";
 
       case "marker"
         s.doc = "Shape of the marker for each data point.  \
 @xref{Marker Styles}.";
 
       case "markeredgecolor"
         s.doc = "Color of the edge of the markers.  When set to \
 @qcode{\"auto\"}, the marker edges have the same color as the line.  If set \
diff --git a/libinterp/corefcn/gl-render.cc b/libinterp/corefcn/gl-render.cc
--- a/libinterp/corefcn/gl-render.cc
+++ b/libinterp/corefcn/gl-render.cc
@@ -2072,16 +2072,17 @@ namespace octave
           clip[i] = (clip_code (x(i), y(i), z_mid) & clip_mask);
       }
 
     if (! props.linestyle_is ("none") && ! props.color_is ("none"))
       {
         set_color (props.get_color_rgb ());
         set_linestyle (props.get_linestyle (), false, props.get_linewidth ());
         set_linewidth (props.get_linewidth ());
+        set_linejoin (props.get_linejoin ());
 
         if (has_z)
           {
             bool flag = false;
 
             for (int i = 1; i < n; i++)
               {
                 if ((clip[i-1] & clip[i]) == clip_ok)
@@ -2499,16 +2500,17 @@ namespace octave
             if ((el_mode > 0) && (num_lights > 0))
               glEnable (GL_LIGHTING);
             glShadeModel ((ec_mode == INTERP || el_mode == GOURAUD) ? GL_SMOOTH
                           : GL_FLAT);
 
             set_linestyle (props.get_linestyle (), false,
                            props.get_linewidth ());
             set_linewidth (props.get_linewidth ());
+            set_linejoin ("miter");
 
             // Mesh along Y-axis
 
             if (props.meshstyle_is ("both") || props.meshstyle_is ("column"))
               {
                 for (int i = 0; i < zc; i++)
                   {
                     if (y_mat)
@@ -3081,16 +3083,17 @@ namespace octave
               }
 
             if ((el_mode > 0) && (num_lights > 0) && has_normals)
               glEnable (GL_LIGHTING);
 
             double linewidth = props.get_linewidth ();
             set_linestyle (props.get_linestyle (), false, linewidth);
             set_linewidth (linewidth);
+            set_linejoin ("miter");
 
             // NOTE: patch contour cannot be offset.  Offset must occur with the
             // filled portion of the patch above.  The tesselator uses
             // GLU_TESS_BOUNDARY_ONLY to get the outline of the patch and OpenGL
             // automatically sets the glType to GL_LINE_LOOP.  This primitive is
             // not supported by glPolygonOffset which is used to do Z offsets.
             patch_tesselator tess (this, ec_mode, el_mode);
 
diff --git a/libinterp/corefcn/gl-render.h b/libinterp/corefcn/gl-render.h
--- a/libinterp/corefcn/gl-render.h
+++ b/libinterp/corefcn/gl-render.h
@@ -77,16 +77,17 @@ namespace octave
     virtual void init_gl_context (bool enhanced, const Matrix& backgroundColor);
     virtual void setup_opengl_transformation (const axes::properties& props);
 
     virtual void set_color (const Matrix& c);
     virtual void set_polygon_offset (bool on, float offset = 0.0f);
     virtual void set_linewidth (float w);
     virtual void set_linestyle (const std::string& s, bool stipple = false,
                                 double linewidth = 0.5);
+    virtual void set_linejoin (const std::string& /*s*/) { };
     virtual void set_clipbox (double x1, double x2, double y1, double y2,
                               double z1, double z2);
     virtual void set_clipping (bool on);
     virtual void set_font (const base_properties& props);
     virtual void set_interpreter (const caseless_str& interp)
     {
       interpreter = interp;
     }
diff --git a/libinterp/corefcn/gl2ps-print.cc b/libinterp/corefcn/gl2ps-print.cc
--- a/libinterp/corefcn/gl2ps-print.cc
+++ b/libinterp/corefcn/gl2ps-print.cc
@@ -119,16 +119,30 @@ namespace octave
       octave::opengl_renderer::set_linestyle (s, use_stipple, linewidth);
 
       if (s == "-" && ! use_stipple)
         gl2psDisable (GL2PS_LINE_STIPPLE);
       else
         gl2psEnable (GL2PS_LINE_STIPPLE);
     }
 
+    void set_linejoin (const std::string& s)
+    {
+      octave::opengl_renderer::set_linejoin (s);
+      
+#if defined (HAVE_GL2PSLINEJOIN)
+      if (s == "round")
+        gl2psLineJoin (GL2PS_LINE_JOIN_ROUND);
+      else if (s == "miter")
+        gl2psLineJoin (GL2PS_LINE_JOIN_MITER);
+      else if (s == "chamfer")
+        gl2psLineJoin (GL2PS_LINE_JOIN_BEVEL);
+#endif
+    }
+
     void set_polygon_offset (bool on, float offset = 0.0f)
     {
       if (on)
         {
           octave::opengl_renderer::set_polygon_offset (on, offset);
           gl2psEnable (GL2PS_POLYGON_OFFSET_FILL);
         }
       else
diff --git a/libinterp/corefcn/graphics.in.h b/libinterp/corefcn/graphics.in.h
--- a/libinterp/corefcn/graphics.in.h
+++ b/libinterp/corefcn/graphics.in.h
@@ -4381,16 +4381,17 @@ public:
     BEGIN_PROPERTIES (line)
       color_property color , color_property (color_values (0, 0, 0), radio_values ("none"))
       string_property displayname , ""
       // FIXME: Remove erasemode property in version 4.6.
       radio_property erasemode h , "{normal}|none|xor|background"
       // FIXME: interpreter is not a property of Matlab line objects.
       //        Octave uses this for legend() with the string displayname.
       radio_property interpreter , "{tex}|none|latex"
+      radio_property linejoin , "{round}|miter|chamfer"
       radio_property linestyle , "{-}|--|:|-.|none"
       double_property linewidth , 0.5
       radio_property marker , "{none}|+|o|*|.|x|s|square|d|diamond|^|v|>|<|p|pentagram|h|hexagram"
       color_property markeredgecolor , color_property (radio_values ("{auto}|none"), color_values (0, 0, 0))
       color_property markerfacecolor , color_property (radio_values ("auto|{none}"), color_values (0, 0, 0))
       double_property markersize , 6
       row_vector_property xdata u , default_data ()
       string_property xdatasource , ""
