# HG changeset patch
# User jwe
# Date 753446227 0
#      Tue Nov 16 10:37:07 1993 +0000
# Node ID 9a6ecd8b50bc6567aacbd7257341b1e151785bbf
# Parent  3f7246605fe9f3fa6e4d88771cf908fbb135fa83
[project @ 1993-11-16 10:37:07 by jwe]

diff --git a/liboctave/RowVector.cc b/liboctave/RowVector.cc
--- a/liboctave/RowVector.cc
+++ b/liboctave/RowVector.cc
@@ -26,16 +26,50 @@ Software Foundation, 675 Mass Ave, Cambr
 //
 // #ifdef __GNUG__
 // #pragma implementation "Matrix.h"
 // #endif
 
 #include "Matrix.h"
 #include "mx-inlines.cc"
 #include "lo-error.h"
+#include "f77-uscore.h"
+
+// Fortran functions we call.
+
+extern "C"
+{
+  int F77_FCN (dgemv) (const char*, const int*, const int*,
+		       const double*, const double*, const int*,
+		       const double*, const int*, const double*,
+		       double*, const int*, long);
+
+  double F77_FCN (ddot) (const int*, const double*, const int*,
+			 const double*, const int*);
+
+/*
+ * f2c translates complex*16 as
+ *
+ *   typedef struct { doublereal re, im; } doublecomplex;
+ *
+ * and Complex.h from libg++ uses
+ *
+ *   protected:
+ *     double re;
+ *     double im;
+ *
+ * as the only data members, so this should work (fingers crossed that
+ * things don't change).
+ */
+
+  int F77_FCN (zgemv) (const char*, const int*, const int*,
+		       const Complex*, const Complex*, const int*,
+		       const Complex*, const int*, const Complex*,
+		       Complex*, const int*, long);
+}
 
 /*
  * Row Vector class.
  */
 
 RowVector::RowVector (int n)
 {
   if (n < 0)
