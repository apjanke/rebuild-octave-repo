# HG changeset patch
# User jwe
# Date 774628274 0
#      Tue Jul 19 14:31:14 1994 +0000
# Node ID 2349d5721cd93de577a1ed1b1c31738773840150
# Parent  be927cad4cf7b66a9c740ea1848cc214fa91e2fb
[project @ 1994-07-19 14:31:14 by jwe]

diff --git a/Makeconf.in b/Makeconf.in
--- a/Makeconf.in
+++ b/Makeconf.in
@@ -60,16 +60,17 @@ UGLY_DEFS = @UGLY_DEFS@
 
 CC = @CC@
 CFLAGS = @CFLAGS@
 GCC_IEEE_FP_FLAG = @GCC_IEEE_FP_FLAG@
 ALL_CFLAGS = $(INCFLAGS) $(DEFS) $(GCC_IEEE_FP_FLAG) $(CFLAGS)
 UGLY_ALL_CFLAGS = $(INCFLAGS) $(UGLY_DEFS) $(GCC_IEEE_FP_FLAG) $(CFLAGS)
 
 CXX = @CXX@
+CXXCPP = @CXXCPP@
 CXXFLAGS = @CXXFLAGS@
 EXTERNAL_TEMPLATES = @EXTERNAL_TEMPLATES@
 ALL_CXXFLAGS = $(INCFLAGS) $(DEFS) $(EXTERNAL_TEMPLATES) \
 	$(GCC_IEEE_FP_FLAG) $(CXXFLAGS)
 UGLY_ALL_CXXFLAGS = $(INCFLAGS) $(UGLY_DEFS) $(EXTERNAL_TEMPLATES) \
 	$(GCC_IEEE_FP_FLAG) $(CXXFLAGS)
 
 LDFLAGS = @LDFLAGS@
@@ -138,32 +139,32 @@ OCTAVE_LIB_DIR = @OCTAVE_LIB_DIR@
 	$(CC) -c $(CPPFLAGS) $(ALL_CFLAGS) $<
 
 .cc.o:
 	$(CXX) -c $(CPPFLAGS) $(ALL_CXXFLAGS) $<
 
 # Here is a rule for generating dependencies for .cc files:
 
 %.d: %.cc
-	rm -f $@
-	-if test "$(srcdir)" = "." ; then \
+	@echo making $@ from $<
+	@rm -f $@
+	@-if test "$(srcdir)" = "." ; then \
 	  $(CXX) -MM $(CPPFLAGS) $(ALL_CXXFLAGS) $< | \
-	    sed -e 's/$*\.o/& $@/g' > $@.tmp && \
-	    mv $@.tmp $@ ; \
+	    sed -e 's/$*\.o/& $@/g' > $@.tmp ; \
 	else \
 	  $(CXX) -MM $(CPPFLAGS) $(ALL_CXXFLAGS) $< | \
-	    sed -e 's/$*\.o/& $@/g' -e 's,$(srcdir)/,,g' > $@.tmp && \
-	    mv $@.tmp $@ ; \
+	    sed -e 's/$*\.o/& $@/g' -e 's,$(srcdir)/,,g' > $@.tmp ; \
 	fi
+	@mv $@.tmp $@
 
 # And one for .c files.too:
 
 %.d: %.c
-	rm -f $@
-	-if test "$(srcdir)" = "." ; then \
+	@echo making $@ from $<
+	@rm -f $@
+	@-if test "$(srcdir)" = "." ; then \
 	  $(CC) -MM $(CPPFLAGS) $(ALL_CFLAGS) $< | \
-	    sed -e 's/$*\.o/& $@/g' > $@.tmp && \
-	    mv $@.tmp $@ ; \
+	    sed -e 's/$*\.o/& $@/g' > $@.tmp ; \
 	else \
 	  $(CC) -MM $(CPPFLAGS) $(ALL_CFLAGS) $< | \
-	    sed -e 's/$*\.o/& $@/g' -e 's,$(srcdir)/,,g' > $@.tmp && \
-	    mv $@.tmp $@ ; \
+	    sed -e 's/$*\.o/& $@/g' -e 's,$(srcdir)/,,g' > $@.tmp ; \
 	fi
+	@mv $@.tmp $@
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -16,17 +16,17 @@ dnl Octave is distributed in the hope th
 dnl ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 dnl FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 dnl for more details.
 dnl 
 dnl You should have received a copy of the GNU General Public License
 dnl along with Octave; see the file COPYING.  If not, write to the Free
 dnl Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
 dnl
-AC_REVISION($Revision: 1.33 $)dnl
+AC_REVISION($Revision: 1.34 $)dnl
 AC_PREREQ(1.8)dnl
 AC_INIT(src/octave.cc)
 AC_CONFIG_HEADER(config.h)
 dnl
 AC_DEFINE(OCTAVE_SOURCE, 1)dnl
 dnl
 dnl See if we were given the target host type.  If not, use
 dnl config.guess to try to guess the target host type.
@@ -103,35 +103,45 @@ AC_VERBOSE([setting OCTAVE_LIB_DIR to $O
 AC_VERBOSE([setting OCTAVE_INFO_DIR to $OCTAVE_INFO_DIR])
 AC_SUBST(OCTAVE_HOME)dnl
 AC_SUBST(OCTAVE_LIB_DIR)dnl
 AC_SUBST(OCTAVE_INFO_DIR)dnl
 dnl
 DYNAMIC_LD_OBJ=
 DLD_DIR=
 LIBDLD=
-DLD_OBJECTS='$(DLD_OBJECTS)'
+LIBOCTDLD='../liboctdld.a'
 LD_STATIC_FLAG=
 if $use_dld; then
   DYNAMIC_LD_OBJ='dynamic-ld.o'
+  DLD_DIR=dld
+  LIBDLD='../libdld.a'
+  LIBOCTDLD= # don't link them in if doing dynamic linking
+  LD_STATIC_FLAG=-static
+  AC_DEFINE(WITH_DLD, 1)dnl
+fi
+if test -n "$DYNAMIC_LD_OBJ"; then
   AC_VERBOSE([setting DYNAMIC_LD_OBJ to $DYNAMIC_LD_OBJ])
-  DLD_DIR=dld
+fi
+if test -n "$DLD_DIR"; then
   AC_VERBOSE([setting DLD_DIR to $DLD_DIR])
-  LIBDLD='../libdld.a'
+fi
+if test -n "$LIBDLD"; then
   AC_VERBOSE([setting LIBDLD to $LIBDLD])
-  DLD_OBJECTS= : # don't link them in if doing dynamic linking
-  AC_VERBOSE([setting DLD_OBJECTS to $DLD_OBJECTS])
-  LD_STATIC_FLAG=-static
+fi
+if test -n "$LIBOCTDLD"; then
+  AC_VERBOSE([setting LIBOCTDLD to $LIBOCTDLD])
+fi
+if test -n "$LD_STATIC_FLAG"; then
   AC_VERBOSE([setting LD_STATIC_FLAG to $LD_STATIC_FLAG])
-  AC_DEFINE(WITH_DLD, 1)dnl
 fi
 AC_SUBST(DYNAMIC_LD_OBJ)dnl
 AC_SUBST(DLD_DIR)dnl
 AC_SUBST(LIBDLD)dnl
-AC_SUBST(DLD_OBJECTS)dnl
+AC_SUBST(LIBOCTDLD)dnl
 AC_SUBST(LD_STATIC_FLAG)dnl
 dnl
 dnl See if the optional nonlinear programming code is present.
 dnl
 AC_CHECKING([for npsol])
 if test -f $srcdir/libcruft/npsol/npsol.f; then
   :
 else
diff --git a/octMakefile.in b/octMakefile.in
--- a/octMakefile.in
+++ b/octMakefile.in
@@ -12,19 +12,19 @@ srcdir = @srcdir@
 top_srcdir = @top_srcdir@
 VPATH = @srcdir@
 
 include $(TOPDIR)/Makeconf
 
 DISTFILES = BUGS COPYING INSTALL INSTALL.OCTAVE Makefile.in \
 	Makeconf.in NEWS PROJECTS README README.NLP SENDING-PATCHES \
 	THANKS f2c-compat.sh flibs.sh configure configure.in \
-	config.guess config.sub octave.sh octave-mode.el \
-	doinstall.sh mkpath.c config.h.in acconfig.h MAKEINFO.PATCH \
-	ChangeLog ChangeLog.[0-9]
+	config.guess config.sub move-if-change octave.sh \
+	octave-mode.el doinstall.sh mkpath.c config.h.in acconfig.h \
+	MAKEINFO.PATCH ChangeLog ChangeLog.[0-9]
 
 # Complete directory trees to distribute.
 DISTDIRS = bsd-math dld
 
 # Subdirectories to run make in for the primary targets.
 SUBDIRS = libcruft liboctave @DLD_DIR@ info readline src doc scripts 
 
 # Subdirectories to run `make dist' in
