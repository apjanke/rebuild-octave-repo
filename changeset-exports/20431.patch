# HG changeset patch
# User Rik <rik@octave.org>
# Date 1438922389 25200
#      Thu Aug 06 21:39:49 2015 -0700
# Branch stable
# Node ID f02c22f71cdb41b13b619482bf7df5f730332373
# Parent  6947b9c82d4b8db41680210d4d878b63af346d35
doc: Add info about single letter codes for fread, fopen IEEE format.

* file-io.cc (Fread, Fopen): Document single letter codes for "native" (n),
"ieee-le" (l), and  "ieee-be" (b).

diff --git a/libinterp/corefcn/file-io.cc b/libinterp/corefcn/file-io.cc
--- a/libinterp/corefcn/file-io.cc
+++ b/libinterp/corefcn/file-io.cc
@@ -663,29 +663,29 @@ specified is binary mode.\n\
 \n\
 Additionally, you may append a @qcode{\"z\"} to the mode string to open a\n\
 gzipped file for reading or writing.  For this to be successful, you\n\
 must also open the file in binary mode.\n\
 \n\
 The parameter @var{arch} is a string specifying the default data format\n\
 for the file.  Valid values for @var{arch} are:\n\
 \n\
-@table @samp\n\
-@item native (default)\n\
+@table @asis\n\
+@item @qcode{\"native\"} or @qcode{\"n\"} (default)\n\
 The format of the current machine.\n\
 \n\
-@item ieee-be\n\
+@item @qcode{\"ieee-be\"} or @qcode{\"b\"}\n\
 IEEE big endian format.\n\
 \n\
-@item ieee-le\n\
+@item @qcode{\"ieee-le\"} or @qcode{\"l\"}\n\
 IEEE little endian format.\n\
 @end table\n\
 \n\
 @noindent\n\
-however, conversions are currently only supported for @samp{native}\n\
+However, conversions are currently only supported for @samp{native},\n\
 @samp{ieee-be}, and @samp{ieee-le} formats.\n\
 \n\
 When opening a new file that does not yet exist, permissions will be set to\n\
 @code{0666 - @var{umask}}.\n\
 @seealso{fclose, fgets, fgetl, fscanf, fread, fputs, fdisp, fprintf, fwrite, fskipl, fseek, frewind, ftell, feof, ferror, fclear, fflush, freport, umask}\n\
 @end deftypefn")
 {
   octave_value_list retval;
@@ -1594,23 +1594,23 @@ fread (f, 10, \"3*single=>single\", 8)\n
 @noindent\n\
 will omit the final 8-byte skip because the last read will not be\n\
 a complete block of 3 values.\n\
 \n\
 The optional argument @var{arch} is a string specifying the data format\n\
 for the file.  Valid values are\n\
 \n\
 @table @asis\n\
-@item @qcode{\"native\"}\n\
+@item @qcode{\"native\"} or @qcode{\"n\"}\n\
 The format of the current machine.\n\
 \n\
-@item @qcode{\"ieee-be\"}\n\
+@item @qcode{\"ieee-be\"} or @qcode{\"b\"}\n\
 IEEE big endian.\n\
 \n\
-@item @qcode{\"ieee-le\"}\n\
+@item @qcode{\"ieee-le\"} or @qcode{\"l\"}\n\
 IEEE little endian.\n\
 @end table\n\
 \n\
 The output argument @var{val} contains the data read from the file.\n\
 The optional return value @var{count} contains the number of elements read.\n\
 @seealso{fwrite, fgets, fgetl, fscanf, fopen}\n\
 @end deftypefn")
 {
