# HG changeset patch
# User Michael Goffioul <michael.goffioul@gmail.com>
# Date 1209739961 -7200
#      Fri May 02 16:52:41 2008 +0200
# Node ID f6fffa74b9b5f3d00eaaa8e3730697cb0c6e165d
# Parent  35e8d61994559e5bdd8873e01edf628c1b6003d1
Export additional symbols: octave_fcn_inline, octave_fcn_handle, read_binary_data, save_binary_data.

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -42,16 +42,20 @@ 2008-06-04  Shai Ayal  <shaiay@users.sou
 
 	* graphics.h.in (axes::properties::update_xlim): call the new
 	axes::properties::calc_ticks_and_lims method
 	(axes::properties::update_ylim): ditto
 	(axes::properties::update_zlim): ditto
 
 2008-06-04  Michael Goffioul <michael.goffioul@gmail.com>
 
+	* ov-fcn-inline.h (class octave_fcn_inline): Mark with OCTINTERP_API.
+	* ov-fcn-handle.h (class Octave_fcn_handle): Likewise.
+	* ls-oct-binary.h (save_binary_data, read_binary_data): Likewise.
+
 	* genprops.awk (emit_source): Fix if-then-else statement generation
 	when the first property is hidden.
 	* graphics.h.in (base_properties::adopt): Call mark_modified.
 	(class hggroup): New graphics object class.
 	* graphics.cc (lookup_object_name, make_graphics_object_from_type,
 	property_list::lookup, property_list::set,
 	root_figure::init_factory_properties): Support hggroup as possible
 	object type.
diff --git a/src/ls-oct-binary.h b/src/ls-oct-binary.h
--- a/src/ls-oct-binary.h
+++ b/src/ls-oct-binary.h
@@ -18,22 +18,22 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #if !defined (octave_ls_oct_binary_h)
 #define octave_ls_oct_binary_h 1
 
-extern bool
+extern OCTINTERP_API bool
 save_binary_data (std::ostream& os, const octave_value& tc,
 		  const std::string& name, const std::string& doc,
 		  bool mark_as_global, bool save_as_floats);
 
-extern std::string
+extern OCTINTERP_API std::string
 read_binary_data (std::istream& is, bool swap,
 		  oct_mach_info::float_format fmt,
 		  const std::string& filename, bool& global,
 		  octave_value& tc, std::string& doc);
 
 #endif
 
 /*
diff --git a/src/ov-fcn-handle.h b/src/ov-fcn-handle.h
--- a/src/ov-fcn-handle.h
+++ b/src/ov-fcn-handle.h
@@ -31,16 +31,17 @@ along with Octave; see the file COPYING.
 #include "ov-base.h"
 #include "ov-base-mat.h"
 #include "ov-fcn.h"
 #include "ov-typeinfo.h"
 
 // Function handles.
 
 class
+OCTINTERP_API
 octave_fcn_handle : public octave_base_value
 {
 public:
   octave_fcn_handle (void)
     : warn_reload (true), fcn (), nm () { }
 
   octave_fcn_handle (const std::string& n)
     : warn_reload (true), fcn (), nm (n) { }
diff --git a/src/ov-fcn-inline.h b/src/ov-fcn-inline.h
--- a/src/ov-fcn-inline.h
+++ b/src/ov-fcn-inline.h
@@ -33,16 +33,17 @@ along with Octave; see the file COPYING.
 #include "ov-fcn.h"
 #include "ov-typeinfo.h"
 #include "symtab.h"
 #include "ov-fcn-handle.h"
 
 // Inline functions.
 
 class
+OCTINTERP_API
 octave_fcn_inline : public octave_fcn_handle
 {
 public:
 
   octave_fcn_inline (void)
     : octave_fcn_handle (), iftext (), ifargs () { }
 
   octave_fcn_inline (const std::string& f, const string_vector& a, 
