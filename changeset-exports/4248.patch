# HG changeset patch
# User jwe
# Date 1041292820 0
#      Tue Dec 31 00:00:20 2002 +0000
# Node ID eef64f3f9a4c701eef406d82f76d9e9f77dc0753
# Parent  fc9a075d10fbacdde9e16a35588f5f5045b2a097
[project @ 2002-12-31 00:00:20 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,12 @@
 2002-12-30  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* lex.l (.): Try another approach to handling EOF here.
+
 	* load-save.cc (read_mat_ascii_data): Use isalpha and isalnum, not
 	::isalpha and ::isalnum.
 
 	* defaults.cc (maybe_add_or_del_packages): SCRIPT_FILE arg is now
 	a const reference type.
 
 	* ov.h (octave_value::subsref, octave_value::subsasgn,
 	octave_value::assign, octave_value::do_non_const_unary_op,
diff --git a/src/lex.l b/src/lex.l
--- a/src/lex.l
+++ b/src/lex.l
@@ -787,22 +787,26 @@ NUMBER	(({D}+\.?{D}*{EXPON}?)|(\.{D}+{EX
 
 %{
 // Unrecognized input is a lexical error.
 %}
 
 . {
     // EOF happens here if we are parsing nested functions.
 
-    if (yytext[0] != EOF)
+    unput (yytext[0]);
+
+    int c = yyinput ();
+
+    if (c != EOF)
       {
 	current_input_column++;
 
 	error ("invalid character `%s' (ASCII %d) near line %d, column %d",
-	       undo_string_escape (yytext[0]), static_cast<int> (yytext[0]),
+	       undo_string_escape (static_cast<char> (c)), c,
 	       input_line_number, current_input_column);
 
 	return LEXICAL_ERROR;
       }
     else
       TOK_RETURN (END_OF_INPUT);
   }
 
