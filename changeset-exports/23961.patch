# HG changeset patch
# User Markus MÃ¼tzel <markus.muetzel@gmx.de>
# Date 1503832971 -7200
#      Sun Aug 27 13:22:51 2017 +0200
# Branch stable
# Node ID 20dd13700c08bd07acb5fb2cb4c2a27e75393b80
# Parent  4f4d28796934c844951dfd0068f23217f4c0a30a
Correct auto limits on log axes with negative and zero values (bug #51861).

* graphics.cc (axes::properties::get_axis_limits): Correct auto limits
on axes with logarithmic scale that span from negative values to zero.

diff --git a/libinterp/corefcn/graphics.cc b/libinterp/corefcn/graphics.cc
--- a/libinterp/corefcn/graphics.cc
+++ b/libinterp/corefcn/graphics.cc
@@ -6799,20 +6799,25 @@ axes::properties::get_axis_limits (doubl
               // FIXME: max_neg is needed for "loglog ([0 -Inf])"
               //        This is the *only* place where max_neg is needed.
               //        Is there another way?
               retval = default_lim ();
               retval(0) = pow (10., retval(0));
               retval(1) = pow (10., retval(1));
               return retval;
             }
-          if (min_val <= 0 && max_val > 0)
+          if (min_val <= 0)
             {
-              warning ("axis: omitting non-positive data in log plot");
-              min_val = min_pos;
+              if (max_val > 0)
+                {
+                  warning ("axis: omitting non-positive data in log plot");
+                  min_val = min_pos;
+                }
+              else if (max_val == 0)
+                max_val = max_neg;
             }
           // FIXME: maybe this test should also be relative?
           if (std::abs (min_val - max_val)
               < sqrt (std::numeric_limits<double>::epsilon ()))
             {
               // Widen range when too small
               if (min_val >= 0)
                 {
