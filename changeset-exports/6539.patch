# HG changeset patch
# User jwe
# Date 1176925517 0
#      Wed Apr 18 19:45:17 2007 +0000
# Node ID bfb71a84249697d2c819ae1f618475ae938a9ff0
# Parent  e3a7611430a80cdf56f735f78dace6d3fc8e756a
[project @ 2007-04-18 19:45:17 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2007-04-18  John W. Eaton  <jwe@octave.org>
+
+	* pt-id.cc (tree_identifier::do_lookup): Don't call lookup if
+	symbol is a variable.
+
 2007-04-16  Geordie McBain  <geordie.mcbain@aeromech.usyd.edu.au>
 
 	* ov-fcn-inline.cc (Fargnames): Doc fix.
 
 2007-04-13  Geordie McBain  <geordie.mcbain@aeromech.usyd.edu.au>
 
 	* DLD-FUNCTIONS/find.cc (Ffind): Doc fix.
 
diff --git a/src/pt-id.cc b/src/pt-id.cc
--- a/src/pt-id.cc
+++ b/src/pt-id.cc
@@ -102,17 +102,20 @@ tree_identifier::eval_undefined_error (v
 //   * On systems that support dynamic linking, we prefer .oct files,
 //     then .mex files, then .m files.
 
 octave_value
 tree_identifier::do_lookup (bool& script_file_executed, bool exec_script)
 {
   static octave_value foo;
 
-  script_file_executed = lookup (sym, exec_script);
+  if (sym && sym->is_variable ())
+    script_file_executed = false;
+  else
+    script_file_executed = lookup (sym, exec_script);
 
   return script_file_executed ? foo : sym->def ();
 }
 
 void
 tree_identifier::link_to_global (void)
 {
   if (sym)
