# HG changeset patch
# User jwe
# Date 1141925293 0
#      Thu Mar 09 17:28:13 2006 +0000
# Node ID ab9a339fcec82ab85b5a51a0cbf2a7a5c3b44e55
# Parent  f37b562ec93c5a08017a2209dc67cc6d8a0016bb
[project @ 2006-03-09 17:28:13 by jwe]

diff --git a/doc/conf.texi.in b/doc/conf.texi.in
--- a/doc/conf.texi.in
+++ b/doc/conf.texi.in
@@ -1,10 +1,11 @@
 @c Copyright (C) 1996, 1997 John W. Eaton
 @c This is part of the Octave manual.
 @c For copying conditions, see the file gpl.texi.
 
+@set OCTAVE_MANUAL
 @set VERSION @OCTAVE_VERSION@
 @set OCTAVEHOME @OCTAVE_HOME@
 @set TARGETHOSTTYPE @OCTAVE_HOSTTYPE@
 @TEXINFO_COLAMD@
 @TEXINFO_CHOLMOD@
 @TEXINFO_UMFPACK@
diff --git a/doc/liboctave/Makefile.in b/doc/liboctave/Makefile.in
--- a/doc/liboctave/Makefile.in
+++ b/doc/liboctave/Makefile.in
@@ -41,29 +41,29 @@ SPELL = $(patsubst %.texi, %.spell, $(TE
 	rm -f $@
 	$(SED) -e 's/@@/ at /g' -e 's/@[a-zA-Z]*//g' $< | spell > $@.tmp
 	mv $@.tmp $@
 
 all: liboctave.info liboctave.dvi liboctave.ps liboctave.pdf HTML/index.html
 .PHONY: all
 
 liboctave.info: $(TEXINFO)
-	-$(MAKEINFO) -I$(srcdir) -I$(srcdir)/.. $<
+	-$(MAKEINFO) -I.. -I$(srcdir) -I$(srcdir)/.. $<
 
 liboctave.dvi: $(TEXINFO)
-	-TEXINPUTS="$(srcdir):$(srcdir)/..:$(TEXINPUTS):" $(TEXI2DVI) $<
+	-TEXINPUTS="..:$(srcdir):$(srcdir)/..:$(TEXINPUTS):" $(TEXI2DVI) $<
 
 liboctave.ps: liboctave.dvi
 	-dvips -o $@ $<
 
 liboctave.pdf: $(TEXINFO)
-	-TEXINPUTS="$(srcdir):$(srcdir)/..:$(TEXINPUTS):" $(TEXI2PDF) $<
+	-TEXINPUTS="..:$(srcdir):$(srcdir)/..:$(TEXINPUTS):" $(TEXI2PDF) $<
 
 HTML/index.html: $(TEXINFO)
-	-$(MAKEINFO) --html --ifinfo --output=HTML -I $(srcdir)/.. $<
+	-$(MAKEINFO) --html --ifinfo --output=HTML -I.. -I$(srcdir)/.. $<
 
 check:
 .PHONY: check
 
 install install-strip: all
 .PHONY: install install-strip
 
 uninstall:
diff --git a/src/file-io.cc b/src/file-io.cc
--- a/src/file-io.cc
+++ b/src/file-io.cc
@@ -811,19 +811,23 @@ written to the stream @var{fid} instead 
 
   return retval;
 }
 
 DEFUN (printf, args, nargout,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} printf (@var{template}, @dots{})\n\
 Print optional arguments under the control of the template string\n\
-@var{template} to the stream @code{stdout}.\n\
+@var{template} to the stream @code{stdout} and return the number of\n\
+characters printed.\n\
+@ifclear OCTAVE_MANUAL\n\
 \n\
-Return the number of characters printed.\n\
+See the Formatted Output section of the GNU Octave manual for a\n\
+complete description of the syntax of the template string.\n\
+@end ifclear\n\
 @seealso{fprintf, sprintf, scanf}\n\
 @end deftypefn")
 {
   static std::string who = "printf";
 
   octave_value retval;
 
   int result = -1;
@@ -998,16 +1002,21 @@ conversions.\n\
 \n\
 The number of items successfully read is returned in @var{count}.\n\
 \n\
 In the second form, read from @var{fid} according to @var{template},\n\
 with each conversion specifier in @var{template} corresponding to a\n\
 single scalar return value.  This form is more `C-like', and also\n\
 compatible with previous versions of Octave.  The number of successful\n\
 conversions is returned in @var{count}\n\
+@ifclear OCTAVE_MANUAL\n\
+\n\
+See the Formatted Input section of the GNU Octave manual for a\n\
+complete description of the syntax of the template string.\n\
+@end ifclear\n\
 @seealso{scanf, sscanf, fread, fprintf}\n\
 @end deftypefn")
 {
   static std::string who = "fscanf";
 
   octave_value_list retval;
 
   int nargin = args.length ();
