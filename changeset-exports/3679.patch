# HG changeset patch
# User jwe
# Date 960481062 0
#      Thu Jun 08 16:17:42 2000 +0000
# Node ID 0f319a2fca1276e0eeb2d1a46b9fe4d6ea2ed3fd
# Parent  b6cc5bcfba8f71e09f3f09f83e8add883909942b
[project @ 2000-06-08 16:17:42 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,14 @@
+2000-06-08  Ben Sapp <bsapp@nua.lampf.lanl.gov>
+
+	* control/base/__stepimp__.m: Reset multiplot state when done.
+	Do the right thing even if automatic_replot is not zero.
+	Avoid failure if system has pure imaginary poles.
+
 2000-06-06  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* general/logical.m: Return arg if it is empty.  Better error
 	message for non-numeric types.	
 
 2000-05-31  A. Scottedward Hodel <a.s.hodel@eng.auburn.edu>
 
 	* control/base/dlqe.m: Update documentation.  Fix typo.  Warn
diff --git a/scripts/control/base/__stepimp__.m b/scripts/control/base/__stepimp__.m
--- a/scripts/control/base/__stepimp__.m
+++ b/scripts/control/base/__stepimp__.m
@@ -78,17 +78,17 @@ function [y, t] = __stepimp__ (sitype, s
         else
           ev(i) = 2 / TSAMPLE * (pole - 1) / (pole + 1);
         endif
       endfor
     endif
     ## remove poles near zero from eigenvalue array ev
     nk = NSTATES;
     for i = 1:NSTATES
-      if (abs(ev(i)) < 1.0e-10)
+      if (abs(real(ev(i))) < 1.0e-10)
         ev(i) = 0;
         nk = nk - 1;
       endif
     endfor
     if (nk == 0)
       USE_DEF = 1;
       ## printf("##STEPIMP-DEBUG: using defaults.\n");
     else
@@ -204,76 +204,82 @@ function [y, t] = __stepimp__ (sitype, s
     endfor
   else
     x = zeros(NSTATES, 1);
     for i = 1:n
       y(:,i) = C * x + D;
       x = F * x + G;
     endfor
   endif
-
-  if(nargout == 0)
-    ## Plot the information
-    oneplot();
-    gset nogrid
-    gset nologscale
-    gset autoscale
-    gset nokey
-    clearplot();
-    if (gnuplot_has_multiplot)
-      if (IMPULSE)
-        gm = zeros(NOUT, 1);
-        tt = "impulse";
+  
+  save_automatic_replot = automatic_replot;
+  unwind_protect
+    automatic_replot = 0;
+    if(nargout == 0)
+      ## Plot the information
+      oneplot();
+      gset nogrid
+      gset nologscale
+      gset autoscale
+      gset nokey
+      clearplot();
+      if (gnuplot_has_multiplot)
+	if (IMPULSE)
+          gm = zeros(NOUT, 1);
+          tt = "impulse";
+	else
+          ssys = ss2sys(F, G, C, D, t_step);
+          gm = dcgain(ssys);
+          tt = "step";
+	endif
+	ncols = floor(sqrt(NOUT));
+	nrows = ceil(NOUT / ncols);
+	for i = 1:NOUT
+          subplot(nrows, ncols, i);
+          title(sprintf("%s: | %s -> %s", tt,sysgetsignals(sys,"in",inp,1), ...
+			sysgetsignals(sys,"out",i,1)));
+          if (DIGITAL)
+            [ts, ys] = stairs(t, y(i,:));
+            ts = ts(1:2*n-2)';  ys = ys(1:2*n-2)';
+            if (length(gm) > 0)
+              yy = [ys; gm(i)*ones(size(ts))];
+            else
+              yy = ys;
+            endif
+            grid("on");
+            xlabel("time [s]");
+            ylabel("y(t)");
+            plot(ts, yy);
+          else
+            if (length(gm) > 0)
+              yy = [y(i,:); gm(i)*ones(size(t))];
+            else
+              yy = y(i,:);
+            endif
+            grid("on");
+            xlabel("time [s]");
+            ylabel("y(t)");
+            plot(t, yy);
+          endif
+	endfor
+	## leave gnuplot in multiplot mode is bad style
+	oneplot();
       else
-        ssys = ss2sys(F, G, C, D, t_step);
-        gm = dcgain(ssys);
-        tt = "step";
-      endif
-      ncols = floor(sqrt(NOUT));
-      nrows = ceil(NOUT / ncols);
-      for i = 1:NOUT
-        subplot(nrows, ncols, i);
-        title(sprintf("%s: | %s -> %s", tt,sysgetsignals(sys,"in",inp,1), ...
-          sysgetsignals(sys,"out",i,1)));
-        if (DIGITAL)
-          [ts, ys] = stairs(t, y(i,:));
-          ts = ts(1:2*n-2)';  ys = ys(1:2*n-2)';
-          if (length(gm) > 0)
-            yy = [ys; gm(i)*ones(size(ts))];
-          else
-            yy = ys;
-          endif
+	## plot everything in one diagram
+	title([tt, " response | ", sysgetsignals(sys,"in",inp,1), ...
+               " -> all outputs"]);
+	if (DIGITAL)
+          stairs(t, y(i,:));
+	else
           grid("on");
           xlabel("time [s]");
           ylabel("y(t)");
-          plot(ts, yy);
-        else
-          if (length(gm) > 0)
-            yy = [y(i,:); gm(i)*ones(size(t))];
-          else
-            yy = y(i,:);
-          endif
-          grid("on");
-          xlabel("time [s]");
-          ylabel("y(t)");
-          plot(t, yy);
-        endif
-      endfor
-      ## leave gnuplot in multiplot mode is bad style
-      oneplot();
-    else
-      ## plot everything in one diagram
-      title([tt, " response | ", sysgetsignals(sys,"in",inp,1), ...
-        " -> all outputs"]);
-      if (DIGITAL)
-        stairs(t, y(i,:));
-      else
-        grid("on");
-        xlabel("time [s]");
-        ylabel("y(t)");
-        plot(t, y(i,:));
+          plot(t, y(i,:));
+	endif
       endif
+      y=[];
+      t=[];
     endif
-    y=[];
-    t=[];
-  endif
-  ## printf("##STEPIMP-DEBUG: gratulations, successfull completion.\n");
-endfunction
+    ## printf("##STEPIMP-DEBUG: gratulations, successfull completion.\n");
+  unwind_protect_cleanup
+    automatic_replot = save_automatic_replot;
+  end_unwind_protect
+endfunction  
