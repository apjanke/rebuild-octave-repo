# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1324271645 28800
#      Sun Dec 18 21:14:05 2011 -0800
# Branch stable
# Node ID 6eeb9e8e63cf7aa800f425dc4f8e40b69cb6ec55
# Parent  b2e9c4b0c4f8ca671db1cf687e021eaa27d46b48
quadl.m: Relax tolerance on %!test to pass on all platforms (Bug #33863)

* quadl.m: Relax tolerance on %!test to pass on all platforms (Bug #33863)

diff --git a/scripts/general/quadl.m b/scripts/general/quadl.m
--- a/scripts/general/quadl.m
+++ b/scripts/general/quadl.m
@@ -198,20 +198,20 @@ function q = adaptlobstp (f, a, b, fa, f
 endfunction
 
 
 ## basic functionality
 %!assert (quadl (@(x) sin (x), 0, pi, [], []), 2, -3e-16)
 
 ## the values here are very high so it may be unavoidable that this fails
 %!assert (quadl (@(x) sin (3*x).*cosh (x).*sinh (x),10,15),
-%!         2.588424538641647e+10, -9e-15)
+%!         2.588424538641647e+10, -1.1e-14)
 
 ## extra parameters
 %!assert (quadl (@(x,a,b) sin (a + b*x), 0, 1, [], [], 2, 3),
-%!        cos(2)/3 - cos(5)/3, - 3e-16)
+%!        cos(2)/3 - cos(5)/3, -3e-16)
 
 ## test different tolerances.
 %!assert (quadl (@(x) sin (2 + 3*x).^2, 0, 10, 0.3, []),
 %!        (60 + sin(4) - sin(64))/12, -0.3)
 %!assert (quadl (@(x) sin (2 + 3*x).^2, 0, 10, 0.1, []),
 %!        (60 + sin(4) - sin(64))/12, -0.1)
 
