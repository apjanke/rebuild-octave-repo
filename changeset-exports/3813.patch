# HG changeset patch
# User jwe
# Date 987646901 0
#      Thu Apr 19 02:21:41 2001 +0000
# Node ID 8986086e3e0f552a46dd69c54ce53b8dbff1bb49
# Parent  23994b10c8b7a133e3d4c46ec7cd7116464d9692
[project @ 2001-04-19 02:21:40 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2001-04-18  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* lex.l: If unexpected character is EOF, report EOF error instead
+	of invalid character error.
+
 2001-04-18  Mumit Khan  <khan@nanotech.wisc.edu>
 
 	* load-save.cc (read_mat5_binary_element): Cast arguments to the
 	correct type when adding stream positions.
 	* DLD-FUNCTIONS/det.cc (det): Explicity create a Complex value to
 	work around a Sun C++ type conversion bug.
 
 2001-04-17  John W. Eaton  <jwe@bevo.che.wisc.edu>
diff --git a/src/lex.l b/src/lex.l
--- a/src/lex.l
+++ b/src/lex.l
@@ -714,19 +714,23 @@ NUMBER	(({D}+\.?{D}*{EXPON}?)|(\.{D}+{EX
 
 %{
 // Unrecognized input is a lexical error.
 %}
 
 . {
     current_input_column++;
 
-    error ("invalid character `%s' (ASCII %d) near line %d, column %d",
-	   undo_string_escape (yytext[0]), static_cast<int> (yytext[0]),
-	   input_line_number, current_input_column);
+    if (static_cast<int> (yytext[0]) == EOF)
+      error ("unexpected end of file near line %d, column %d",
+	     input_line_number, current_input_column);
+    else
+      error ("invalid character `%s' (ASCII %d) near line %d, column %d",
+	     undo_string_escape (yytext[0]), static_cast<int> (yytext[0]),
+	     input_line_number, current_input_column);
 
     return LEXICAL_ERROR;
   }
 
 %%
 
 // GAG.
 //
