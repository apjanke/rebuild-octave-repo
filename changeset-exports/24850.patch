# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1520548539 18000
#      Thu Mar 08 17:35:39 2018 -0500
# Branch stable
# Node ID dfc017e465f236c4f74577ba21af8843776c7c18
# Parent  261d23b8933b561de97ee4577f674dc117ffb39c
make leftdiv work for scalar \ int-matrix (bug #51682)

* op-int.h (OCTAVE_SM_INT_ARITH_OPS): Fix likely cut/paste typo in
ldiv operator.

diff --git a/libinterp/operators/op-int.h b/libinterp/operators/op-int.h
--- a/libinterp/operators/op-int.h
+++ b/libinterp/operators/op-int.h
@@ -345,17 +345,17 @@ along with Octave; see the file COPYING.
   DEFBINOP (PFX ## _ldiv, TS ## scalar, TM ## matrix)                   \
   {                                                                     \
    const octave_ ## TS ## scalar& v1 = dynamic_cast<const octave_ ## TS ## scalar&> (a1); \
    const octave_ ## TM ## matrix& v2 = dynamic_cast<const octave_ ## TM ## matrix&> (a2); \
                                                                         \
    if (! v1.TS ## scalar_value ())                                      \
      warn_divide_by_zero ();                                            \
                                                                         \
-   octave_value retval = octave_value (v2.TS ## scalar_value () / v1.TS ## scalar_value ()); \
+   octave_value retval = octave_value (v2.TM ## array_value () / v1.TS ## scalar_value ()); \
    return retval;                                                       \
    }                                                                    \
                                                                         \
   DEFINTNDBINOP_OP (PFX ## _el_mul, TS ## scalar, TM ## matrix, TS ## scalar, TM ## array, *, TI) \
   DEFBINOP (PFX ## _el_div, TS ## scalar, TM ## matrix)                 \
   {                                                                     \
    const octave_ ## TS ## scalar& v1 = dynamic_cast<const octave_ ## TS ## scalar&> (a1); \
    const octave_ ## TM ## matrix& v2 = dynamic_cast<const octave_ ## TM ## matrix&> (a2); \
