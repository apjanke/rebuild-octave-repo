# HG changeset patch
# User Torsten <ttl@justmail.de>
# Date 1349002525 -7200
#      Sun Sep 30 12:55:25 2012 +0200
# Node ID 7f36f7dc25b2bf75ec09449502501efb6196bb27
# Parent  1cc42df8ede736c9af405bca29028f316eadb24f
save and restore the columns order and width of the workspace-view

* workspace-view.cc: restore columns state in constructor and save in destructor

diff --git a/libgui/src/workspace-view.cc b/libgui/src/workspace-view.cc
--- a/libgui/src/workspace-view.cc
+++ b/libgui/src/workspace-view.cc
@@ -21,16 +21,17 @@ along with Octave; see the file COPYING.
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "workspace-view.h"
 #include "resource-manager.h"
+#include <QHeaderView>
 #include <QHBoxLayout>
 #include <QVBoxLayout>
 #include <QPushButton>
 
 workspace_view::workspace_view (QWidget *p)
   : QDockWidget (p)
 {
   setObjectName ("WorkspaceView");
@@ -63,16 +64,20 @@ workspace_view::workspace_view (QWidget 
   QSettings *settings = resource_manager::get_settings ();
 
   // FIXME -- what should happen if settings is 0?
 
   _explicit_collapse.local      = settings->value ("workspaceview/local_collapsed", false).toBool ();
   _explicit_collapse.global     = settings->value ("workspaceview/global_collapsed", false).toBool ();;
   _explicit_collapse.persistent = settings->value ("workspaceview/persistent_collapsed", false).toBool ();;
 
+  // Initialize column order and width of the workspace
+  
+  _workspace_tree_view->header ()->restoreState (settings->value("workspaceview/column_state").toByteArray ());
+
   // Connect signals and slots.
   connect (this, SIGNAL (visibilityChanged (bool)),
            this, SLOT(handle_visibility_changed (bool)));
 
   connect (_workspace_model, SIGNAL (model_changed ()),
            this, SLOT (model_changed ()));
 
   connect (_workspace_tree_view, SIGNAL (collapsed (QModelIndex)),
@@ -89,16 +94,17 @@ workspace_view::~workspace_view ()
 {
   QSettings *settings = resource_manager::get_settings ();
 
   // FIXME -- what should happen if settings is 0?
 
   settings->setValue("workspaceview/local_collapsed", _explicit_collapse.local);
   settings->setValue("workspaceview/global_collapsed", _explicit_collapse.global);
   settings->setValue("workspaceview/persistent_collapsed", _explicit_collapse.persistent);
+  settings->setValue("workspaceview/column_state", _workspace_tree_view->header ()->saveState ());
 }
 
 void
 workspace_view::handle_visibility_changed (bool visible)
 {
   if (visible)
     emit active_changed (true);
 }
