# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1265712183 -3600
#      Tue Feb 09 11:43:03 2010 +0100
# Node ID c3df189b1b154ced10c22a7e343e4a5c76528da1
# Parent  b178769f31ca007d2e26a62af7c4cd6feec3427e
more coding tips

diff --git a/doc/ChangeLog b/doc/ChangeLog
--- a/doc/ChangeLog
+++ b/doc/ChangeLog
@@ -1,8 +1,12 @@
+2010-02-09  Jaroslav Hajek  <highegg@gmail.com>
+
+	* interpreter/tips.txi: More tips.
+
 2010-01-30  Jaroslav Hajek  <highegg@gmail.com>
 
 	* interpreter/expr.txi (Assignment): Document return value of
 	multi-assignment with skipped values.
 
 2010-01-29  John W. Eaton  <jwe@octave.org>
 
 	* interpreter/poly.txi (Derivatives and Integrals):
diff --git a/doc/interpreter/tips.txi b/doc/interpreter/tips.txi
--- a/doc/interpreter/tips.txi
+++ b/doc/interpreter/tips.txi
@@ -216,30 +216,35 @@ while (condition)
   @dots{}
 endwhile
 @end group
 @end example
 
 @item
 Use @code{cellfun} intelligently.  The @code{cellfun} function is a useful tool
 for avoiding loops.  @xref{Processing Data in Cell Arrays}.
-@code{cellfun} is often use with anonymous function handles; however, calling
+@code{cellfun} is often used with anonymous function handles; however, calling
 an anonymous function involves an overhead quite comparable to the overhead
 of an m-file function.  Passing a handle to a built-in function is faster,
 because the interpreter is not involved in the internal loop.  For example:
 
 @example
 @group
 a = @{@dots{}@}
 v = cellfun (@@(x) det(x), a); # compute determinants
 v = cellfun (@@det, a); # faster
 @end group
 @end example
 
 @item
+Octave includes a number of other functions that can replace common types of loops,
+including @code{bsxfun}, @code{arrayfun}, @code{structfun}, @code{accumarray}.
+These functions can take an arbitrary function as a handle.
+
+@item
 Avoid calling @code{eval} or @code{feval} excessively, because
 they require Octave to parse input or look up the name of a function in
 the symbol table.
 
 If you are using @code{eval} as an exception handling mechanism and not
 because you need to execute some arbitrary text, use the @code{try}
 statement instead.  @xref{The @code{try} Statement}.
 
