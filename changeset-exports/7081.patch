# HG changeset patch
# User jwe
# Date 1193792968 0
#      Wed Oct 31 01:09:28 2007 +0000
# Node ID 503001863427f68a82e2d7b6d0b940243eebc87e
# Parent  7e465260a48f377552a16ad9344ed340df061785
[project @ 2007-10-31 01:08:14 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,19 @@
+2007-10-30  David Bateman  <dbateman@free.fr>
+
+	* examples/addtwomatrices.cc, examples/celldemo.cc,
+	examples/firstmexdemo.c, examples/fortdemo.cc, examples/fortsub.f,
+	examples/funcdemo.cc, examples/globaldemo.cc,
+	examples/helloworld.cc, examples/mycell.c, examples/myfeval.c,
+	examples/myfunc.c, examples/mypow2.c, examples/mysparse.c,
+	examples/mystring.c, examples/mystruct.c, examples/paramdemo.cc,
+	examples/stringdemo.cc, examples/structdemo.cc,
+	examples/unwinddemo.cc: Doc fixes for small book format.
+
 2007-10-26  Michael Goffioul  <michael.goffioul@gmail.com>
 
 	* Makeconf.in: Remove UNSETCOMSPEC trick.
 
 2007-10-25  John W. Eaton  <jwe@octave.org>
 
 	* configure.in (AH_BOTTOM): Define OCTAVE_EMPTY_CPP_ARG here.
 
diff --git a/doc/ChangeLog b/doc/ChangeLog
--- a/doc/ChangeLog
+++ b/doc/ChangeLog
@@ -1,8 +1,15 @@
+2007-10-30  David Bateman  <dbateman@free.fr>
+
+	* interpreter/dynamic.txi, interpreter/install.txi,
+	interpreter/stats.txi, interpreter/strings.txi,
+	interpreter/testfun.txi, interpreter/tips.txi:
+	Doc fixes for small book format.
+
 2007-10-26  Michael Goffioul  <michael.goffioul@gmail.com>
 
 	* interpreter/Makefile.in, faq/Makefile.in, liboctave/Makefile.in:
 	Use temporary renamed files instead of Don't use --output option
 	argument for texi2[dvi|pdf].  Use $(sepchar) for path element
 	separation when building TEXINPUTS.  Remove use of UNSETCOMSPEC trick.
 
 2007-10-22  Kim Hansen  <kimhanse@gmail.com>
diff --git a/doc/interpreter/dynamic.txi b/doc/interpreter/dynamic.txi
--- a/doc/interpreter/dynamic.txi
+++ b/doc/interpreter/dynamic.txi
@@ -348,17 +348,17 @@ listed below.
 @end multitable
 
 @node Character Strings in Oct-Files
 @subsection Character Strings in Oct-Files
 
 In Octave a character string is just a special @code{Array} class.
 Consider the example 
 
-@examplefile{stringdemo.cc}
+@longexamplefile{stringdemo.cc}
 
 An example of the of the use of this function is
 
 @example
 @group
 s0 = ["First String"; "Second String"];
 [s1,s2] = stringdemo (s0)
 @result{} s1 = Second String
@@ -376,19 +376,21 @@ typeinfo (s1)
 
 One additional complication of strings in Octave is the difference
 between single quoted and double quoted strings.  To find out if an
 @code{octave_value} contains a single or double quoted string an example is
 
 @example
 @group
     if (args(0).is_sq_string ())
-      octave_stdout << "First argument is a singularly quoted string\n";
+      octave_stdout << 
+        "First argument is a singularly quoted string\n";
     else if (args(0).is_dq_string ())
-      octave_stdout << "First argument is a doubly quoted string\n";
+      octave_stdout << 
+        "First argument is a doubly quoted string\n";
 @end group
 @end example
 
 Note however, that both types of strings are represented by the
 @code{charNDArray} type, and so when assigning to an
 @code{octave_value}, the type of string should be specified.  For example
 
 @example
@@ -437,17 +439,17 @@ b3 = test
 
 A structure in Octave is map between a number of fields represented and
 their values.  The Standard Template Library @code{map} class is used,
 with the pair consisting of a @code{std::string} and an octave
 @code{Cell} variable.
 
 A simple example demonstrating the use of structures within oct-files is
 
-@examplefile{structdemo.cc}
+@longexamplefile{structdemo.cc}
 
 An example of its use is
 
 @example
 @group
 x.a = 1; x.b = "test"; x.c = [1, 2];
 structdemo (x, "b")
 @result{} selected = test
@@ -726,17 +728,18 @@ for (int j = 1; j < nc; j++)
           @{
             sm.data(ii) = tmp;
             sm.ridx(ii) = i;
             ii++;
           @}
       @}
     sm.cidx(j+1) = ii;
  @}
-sm.maybe_compress ();  // If don't know a-priori the final no of nz.
+sm.maybe_compress ();  // If don't know a-priori 
+                       // the final no of nz.
 @end group
 @end example
 
 @noindent
 which is probably the most efficient means of creating the sparse matrix.
 
 Finally, it might sometimes arise that the amount of storage initially
 created is insufficient to completely store the sparse matrix.  Therefore,
@@ -767,17 +770,18 @@ for (int j = 1; j < nc; j++)
               @}
             sm.data(ii) = tmp;
             sm.ridx(ii) = i;
             ii++;
           @}
       @}
     sm.cidx(j+1) = ii;
  @}
-sm.maybe_mutate ();  // If don't know a-priori the final no of nz.
+sm.maybe_mutate ();  // If don't know a-priori 
+                     // the final no of nz.
 @end group
 @end example
 
 Note that both increasing and decreasing the number of non-zero elements in
 a sparse matrix is expensive, as it involves memory reallocation.  Also as
 parts of the matrix, though not its entirety, exist as the old and new copy
 at the same time, additional memory is needed.  Therefore if possible this
 should be avoided.
@@ -791,17 +795,18 @@ The basic means of extracting a sparse m
 and returning them as an @code{octave_value}, can be seen in the
 following example
 
 @example
 @group
 octave_value_list retval;
 
 SparseMatrix sm = args(0).sparse_matrix_value ();
-SparseComplexMatrix scm = args(1).sparse_complex_matrix_value ();
+SparseComplexMatrix scm = 
+    args(1).sparse_complex_matrix_value ();
 SparseBoolMatrix sbm = args(2).sparse_bool_matrix_value ();
 @dots{}
 retval(2) = sbm;
 retval(1) = scm;
 retval(0) = sm;
 @end group
 @end example
 
@@ -815,17 +820,17 @@ Global variables allow variables in the 
 accessed.  Global variables can easily be accessed with oct-files using
 the support functions @code{get_global_value} and
 @code{set_global_value}.  @code{get_global_value} takes two arguments,
 the first is a string representing the variable name to obtain.  The
 second argument is a boolean argument specifying what to do in the case
 that no global variable of the desired name is found.  An example of the
 use of these two functions is
 
-@examplefile{globaldemo.cc}
+@longexamplefile{globaldemo.cc}
 
 An example of its use is
 
 @example
 @group
 global a b
 b = 10;
 globaldemo ("b")
@@ -854,17 +859,17 @@ be passed as one of
 @item Anonymous Function Handle
 @item Inline Function
 @item String
 @end enumerate
 
 The example below demonstrates an example that accepts all four means of
 passing a function to an oct-file.
 
-@examplefile{funcdemo.cc}
+@longexamplefile{funcdemo.cc}
 
 The first argument to this demonstration is the user supplied function
 and the following arguments are all passed to the user function.
 
 @example
 @group
 funcdemo (@@sin,1)
 @result{} 0.84147
@@ -949,22 +954,22 @@ There is no harm in using @code{F77_XFCN
 Fortran code that is short running and executes a large number of times,
 there is potentially an overhead in doing so.  However, if @code{F77_FCN}
 is used with code that calls @code{XSTOP}, Octave can generate a
 segmentation fault.
 
 An example of the inclusion of a Fortran function in an oct-file is
 given in the following example, where the C++ wrapper is
 
-@examplefile{fortdemo.cc}
+@longexamplefile{fortdemo.cc}
 
 @noindent
 and the fortran function is
 
-@examplefile{fortsub.f}
+@longexamplefile{fortsub.f}
 
 This example demonstrates most of the features needed to link to an
 external Fortran function, including passing arrays and strings, as well
 as exception handling.  An example of the behavior of this function is
 
 @example
 @group
 [b, s] = fortdemo (1:3)
@@ -1011,17 +1016,17 @@ integers, or if one of the arguments is 
 need additional input parameter checking.
 
 There are several functions within Octave that might be useful for the
 purposes of parameter checking.  These include the methods of the
 octave_value class like @code{is_real_matrix}, etc, but equally include
 more specialized functions.  Some of the more common ones are
 demonstrated in the following example
 
-@examplefile{paramdemo.cc}
+@longexamplefile{paramdemo.cc}
 
 @noindent
 and an example of its use is
 
 @example
 @group
 paramdemo ([1, 2, NaN, Inf])
 @result{} Properties of input array:
@@ -1080,17 +1085,17 @@ allocate any memory that is needed by th
 fortran_vec method or the @code{OCTAVE_LOCAL_BUFFER} macro.
 
 The Octave unwind_protect mechanism (@ref{The unwind_protect Statement})
 can also be used in oct-files.  In conjunction with the exception
 handling of Octave, it is important to enforce that certain code is run
 to allow variables, etc to be restored even if an exception occurs.  An
 example of the use of this mechanism is
 
-@examplefile{unwinddemo.cc}
+@longexamplefile{unwinddemo.cc}
 
 As can be seen in the example
 
 @example
 @group
 unwinddemo (1, 0)
 @result{} Inf
 1 / 0
@@ -1116,18 +1121,18 @@ single line of text, and so the formatti
 be taken into account.  There are several manners in which to treat this
 issue, but the most common is illustrated in the following example
 
 @example
 @group
 DEFUN_DLD (do_what_i_want, args, nargout, 
   "-*- texinfo -*-\n\
 @@deftypefn @{Function File@} @{@} do_what_i_say (@@var@{n@})\n\
-A function that does what the user actually wants rather than what\n\
-they requested.\n\
+A function that does what the user actually wants rather\n\
+than what they requested.\n\
 @@end deftypefn")
 @{
 @dots{}
 @}
 @end group
 @end example
 
 @noindent
@@ -1340,46 +1345,46 @@ which the mex-file is built. This allows
 to support mex-files. @code{mwSize} is used to define array dimension
 and maximum number or elements, while @code{mwIndex} is used to define
 indexing into arrays.
 
 An example that demonstration how to work with arbitrary real or complex
 double precision arrays is given by the file @file{mypow2.c} as given
 below.
 
-@examplefile{mypow2.c}
+@longexamplefile{mypow2.c}
 
 @noindent
 with an example of its use
 
 @example
 @group
 b = randn(4,1) + 1i * randn(4,1);
 all(b.^2 == mypow2(b))
 @result{} 1
 @end group
 @end example
 
 
-The example above uses the @code{mxGetNumberOfElements},
-@code{mxGetNumberOfDimensions} and @code{mxGetDimensions}, to work with
+The example above uses @code{mxGetDimensions},
+@code{mxGetNumberOfElements}, @code{mxGetNumberOfDimensions}, to work with
 the dimensional parameters of multi-dimensional arrays.  The also exists
 the functions @code{mxGetM}, and @code{mxGetN} that probe the number of
 rows and columns in a matrix.
 
 @node Character Strings in Mex-Files
 @subsection Character Strings in Mex-Files
 
 As mex-files do not make the distinction between single and double
 quoted strings within Octave, there is perhaps less complexity in the
 use of strings and character matrices in mex-files.  An example of their
 use, that parallels the demo in @file{stringdemo.cc}, is given in the
 file @file{mystring.c}, as seen below.
 
-@examplefile{mystring.c}
+@longexamplefile{mystring.c}
 
 @noindent
 An example of its expected output is
 
 @example
 @group
 mystring(["First String"; "Second String"])
 @result{} s1 = Second String
@@ -1443,30 +1448,33 @@ mxArray *mxCreateCellMatrix (int m, int 
 @subsection Structures with Mex-Files
 
 The basic function to create a structure in a mex-file is
 @code{mxCreateStructMatrix}, which creates a structure array with a two
 dimensional matrix, or @code{mxCreateStructArray}.
 
 @example
 @group
-mxArray *mxCreateStructArray (int ndims, int *dims, int num_keys, 
+mxArray *mxCreateStructArray (int ndims, int *dims, 
+                              int num_keys, 
                               const char **keys);
-mxArray *mxCreateStructMatrix (int rows, int cols, int num_keys, 
+mxArray *mxCreateStructMatrix (int rows, int cols, 
+                               int num_keys, 
                                const char **keys);
 @end group
 @end example
 
 Accessing the fields of the structure can then be performed with the
 @code{mxGetField} and @code{mxSetField} or alternatively with the
 @code{mxGetFieldByNumber} and @code{mxSetFieldByNumber} functions.
 
 @example
 @group
-mxArray *mxGetField (const mxArray *ptr, mwIndex index, const char *key);
+mxArray *mxGetField (const mxArray *ptr, mwIndex index,
+                     const char *key);
 mxArray *mxGetFieldByNumber (const mxArray *ptr, 
                              mwIndex index, int key_num);
 void mxSetField (mxArray *ptr, mwIndex index, 
                  const char *key, mxArray *val);
 void mxSetFieldByNumber (mxArray *ptr, mwIndex index, 
                          int key_num, mxArray *val);
 @end group
 @end example
@@ -1475,23 +1483,24 @@ A difference between the oct-file interf
 mex-file version is that the functions to operate on structures in
 mex-files directly include an @code{index} over the elements of the
 arrays of elements per @code{field}.  Whereas the oct-file structure
 includes a Cell Array per field of the structure.
 
 An example that demonstrates the use of structures in mex-file can be
 found in the file @file{mystruct.c}, as seen below
 
-@examplefile{mystruct.c}
+@longexamplefile{mystruct.c}
 
 An example of the behavior of this function within Octave is then
 
 @example
 @group
-a(1).f1 = "f11"; a(1).f2 = "f12"; a(2).f1 = "f21"; a(2).f2 = "f22";
+a(1).f1 = "f11"; a(1).f2 = "f12"; 
+a(2).f1 = "f21"; a(2).f2 = "f22";
 b = mystruct(a)
 @result{} field f1(0) = f11
     field f1(1) = f21
     field f2(0) = f12
     field f2(1) = f22
     b =
     @{
       this =
@@ -1574,17 +1583,17 @@ mex-files is given by the file @file{mys
 
 @node Calling Other Functions in Mex-Files
 @subsection Calling Other Functions in Mex-Files
 
 It is also possible call other Octave functions from within a mex-file
 using @code{mexCallMATLAB}.  An example of the use of
 @code{mexCallMATLAB} can be see in the example below
 
-@examplefile{myfeval.c}
+@longexamplefile{myfeval.c}
 
 If this code is in the file @file{myfeval.c}, and is compiled to
 @file{myfeval.mex}, then an example of its use is
 
 @example
 @group
 myfeval("sin", 1)
 a = myfeval("sin", 1)
diff --git a/doc/interpreter/install.txi b/doc/interpreter/install.txi
--- a/doc/interpreter/install.txi
+++ b/doc/interpreter/install.txi
@@ -71,20 +71,17 @@ of the compiler to use as an optional ar
 @item --enable-shared
 Create shared libraries.  If you are planning to use
 @code{--enable-lite-kernel} or the dynamic loading features, you will
 probably want to use this option.  It will make your @file{.oct} files
 much smaller and on some systems it may be necessary to build shared
 libraries in order to use dynamically linked functions.
 
 You may also want to build a shared version of @code{libstdc++}, if your
-system doesn't already have one.  Note that a patch is needed to build
-shared versions of version 2.7.2 of @code{libstdc++} on the HP-PA
-architecture.  You can find the patch at
-@url{ftp://ftp.cygnus.com/pub/g++/libg++-2.7.2-hppa-gcc-fix}.
+system doesn't already have one.
 
 @item --enable-dl
 Use @code{dlopen} and friends to make Octave capable of dynamically
 linking externally compiled functions.  This only works on systems that
 actually have these functions.  If you plan on using this feature, you
 should probably also use @code{--enable-shared} to reduce the size of
 your @file{.oct} files.
 
@@ -301,17 +298,18 @@ passing `void (*)()' as argument 2 of
   `octave_set_signal_handler(int, void (*)(int))'
 @end group
 @end example
 
 @noindent
 or
 
 @example
-warning: ANSI C++ prohibits conversion from `(int)' to `(...)'
+warning: ANSI C++ prohibits conversion from `(int)' 
+         to `(...)'
 @end example
 
 @noindent
 while compiling @file{sighandlers.cc}, you may need to edit some files
 in the @code{gcc} include subdirectory to add proper prototypes for functions
 there.  For example, Ultrix 4.2 needs proper declarations for the
 @code{signal} function and the @code{SIG_IGN} macro in the file
 @file{signal.h}.
@@ -375,18 +373,20 @@ make[2]: *** [zgemm.o] Error 1
 when compiling the Fortran subroutines in the @file{libcruft}
 subdirectory, you should either upgrade your compiler or try compiling
 with optimization turned off.
 
 @item
 On NeXT systems, if you get errors like this:
 
 @example
-/usr/tmp/cc007458.s:unknown:Undefined local symbol LBB7656
-/usr/tmp/cc007458.s:unknown:Undefined local symbol LBE7656
+/usr/tmp/cc007458.s:unknown:Undefined local 
+      symbol LBB7656
+/usr/tmp/cc007458.s:unknown:Undefined local
+      symbol LBE7656
 @end example
 
 @noindent
 when compiling @file{Array.cc} and @file{Matrix.cc}, try recompiling
 these files without @code{-g}.
 
 @item
 Some people have reported that calls to shell_cmd and the pager do not
diff --git a/doc/interpreter/stats.txi b/doc/interpreter/stats.txi
--- a/doc/interpreter/stats.txi
+++ b/doc/interpreter/stats.txi
@@ -141,16 +141,45 @@ using the @code{hist} function as descri
 @DOCSTRING(ppplot)
 
 @node Tests
 @section Tests
 
 Octave can perform several different statistical tests.  The following
 table summarizes the available tests.
 
+@iftex
+@tex
+\vskip 6pt
+{\hbox to \hsize {\hfill\vbox{\offinterlineskip \tabskip=0pt 
+\halign{
+\vrule height2.0ex depth1.ex width 0.6pt #\tabskip=0.3em &
+# \hfil & \vrule # & # \hfil & # \vrule width 0.6pt \tabskip=0pt\cr
+\noalign{\hrule height 0.6pt}
+& @strong{Hypothesis} && {\bf Test Functions} &\cr
+\noalign{\hrule}
+& Equal mean values && anova, hotelling\_test2, t\_test\_2, &\cr
+&                   && welch\_test, wilcoxon\_test, z\_test\_2 &\cr
+& Equal medians && kruskal\_wallis\_test, sign\_test &\cr
+& Equal variances && bartlett\_test, manova, var\_test &\cr
+& Equal distributions && chisquare\_test\_homogeneity, &\cr
+&                     && kolmogorov\_smirnov\_test\_2, u\_test &\cr
+& Equal marginal frequencies && mcnemar\_test &\cr
+& Equal success probabilities && prop\_test\_2 &\cr
+& Independent observations && chisquare\_test\_independence, &\cr
+&                          && run\_test &\cr
+& Uncorrelated observations && cor\_test &\cr
+& Given mean value && hotelling\_test, t\_test, z\_test &\cr
+& Observations from distribution && kolmogorov\_smirnov\_test &\cr
+& Regression && f\_test\_regression, t\_test\_regression &\cr
+\noalign{\hrule height 0.6pt}
+}}\hfill}}
+@end tex
+@end iftex
+@ifnottex
 @multitable @columnfractions .4 .5
 @item @strong{Hypothesis}
   @tab @strong{Test Functions}
 @item Equal mean values
   @tab @code{anova}, @code{hotelling_test2}, @code{t_test_2},
        @code{welch_test}, @code{wilcoxon_test}, @code{z_test_2}
 @item Equal medians
   @tab @code{kruskal_wallis_test}, @code{sign_test}
@@ -169,16 +198,17 @@ table summarizes the available tests.
   @tab @code{cor_test}
 @item Given mean value
   @tab @code{hotelling_test}, @code{t_test}, @code{z_test}
 @item Observations from given distribution
   @tab @code{kolmogorov_smirnov_test}
 @item Regression
   @tab @code{f_test_regression}, @code{t_test_regression}
 @end multitable
+@end ifnottex
 
 The tests return a p-value that describes the outcome of the test.
 Assuming that the test hypothesis is true, the p-value is the probability
 of obtaining a worse result than the observed one.  So large p-values
 corresponds to a successful test.  Usually a test hypothesis is accepted
 if the p-value exceeds @math{0.05}.
 
 @DOCSTRING(anova)
@@ -241,17 +271,57 @@ if the p-value exceeds @math{0.05}.
 
 Octave has functions for computing the Probability Density Function
 (PDF), the Cumulative Distribution function (CDF), and the quantile
 (the inverse of the CDF) of a large number of distributions.
 
 The following table summarizes the supported distributions (in 
 alphabetical order).
 
-@multitable @columnfractions .4 .2 .2 .2
+@c Do the table explicitly in TeX if possible to get a better layout.
+@iftex
+@tex
+\vskip 6pt
+{\hbox to \hsize {\hfill\vbox{\offinterlineskip \tabskip=0pt 
+\halign{
+\vrule height2.0ex depth1.ex width 0.6pt #\tabskip=0.3em &
+# \hfil & \vrule # & # \hfil & \vrule # & # \hfil & \vrule # & # \hfil &
+# \vrule width 0.6pt \tabskip=0pt\cr
+\noalign{\hrule height 0.6pt}
+& {\bf Distribution} && {\bf PDF}      && {\bf CDF}     && {\bf Quantile}&\cr
+\noalign{\hrule}
+&Beta         && betapdf        && betacdf       && betainv&\cr
+&Binomial     && binopdf        && binocdf       && binoinv&\cr
+&Cauchy       && cauchy\_pdf    && cauchy\_cdf   && cauchy\_inv&\cr
+&Chi-Square   && chi2pdf        && chi2cdf       && chi2inv&\cr
+&Univariate Discrete       && discrete\_pdf  && discrete\_cdf && discrete\_inv&\cr
+&Empirical    && empirical\_pdf  && empirical\_cdf && empirical\_inv&\cr
+&Exponential  && exppdf         && expcdf        && expinv&\cr
+&F            && fpdf           && fcdf          && finv&\cr
+&Gamma        && gampdf         && gamcdf        && gaminv&\cr
+&Geometric    && geopdf         && geocdf        && geoinv&\cr
+&Hypergeometric            && hygepdf      && hygecdf       && hygeinv&\cr
+&Kolmogorov Smirnov && {\it Not Available} && kolmogorov\_&& {\it Not Available}&\cr
+&             &&                && smirnov\_cdf &&&\cr
+&Laplace      && laplace\_pdf    && laplace\_cdf   && laplace\_inv&\cr
+&Logistic     && logistic\_pdf   && logistic\_cdf  && logistic\_inv&\cr
+&Log-Normal   && lognpdf        && logncdf       && logninv&\cr
+&Pascal       && nbinpdf        && nbincdf       && nbininv&\cr
+&Univariate Normal && normpdf   && normcdf       && norminv&\cr
+&Poisson      && poisspdf       && poisscdf      && poissinv&\cr
+&t (Student)  && tpdf           && tcdf          && tinv&\cr
+&Univariate Discrete && unidpdf && unidcdf       && unidinv&\cr
+&Uniform      && unifpdf        && unifcdf       && unifinv&\cr
+&Weibull      && wblpdf         && wblcdf        && wblinv&\cr
+\noalign{\hrule height 0.6pt}
+}}\hfill}}
+@end tex
+@end iftex
+@ifnottex
+@multitable @columnfractions .31 .23 .23 .23
 @item @strong{Distribution}
   @tab @strong{PDF}
   @tab @strong{CDF}
   @tab @strong{Quantile}
 @item Beta Distribution
   @tab @code{betapdf}
   @tab @code{betacdf}
   @tab @code{betainv}
@@ -322,29 +392,30 @@ alphabetical order).
 @item Poisson Distribution
   @tab @code{poisspdf}
   @tab @code{poisscdf}
   @tab @code{poissinv}
 @item t (Student) Distribution
   @tab @code{tpdf}
   @tab @code{tcdf}
   @tab @code{tinv}
-@item Univariate Discrete Distribution
+@item  Univariate Discrete Distribution
   @tab @code{unidpdf}
   @tab @code{unidcdf}
   @tab @code{unidinv}
 @item Uniform Distribution
   @tab @code{unifpdf}
   @tab @code{unifcdf}
   @tab @code{unifinv}
 @item Weibull Distribution
   @tab @code{wblpdf}
   @tab @code{wblcdf}
   @tab @code{wblinv}
 @end multitable
+@end ifnottex
 
 @DOCSTRING(betacdf)
 
 @DOCSTRING(betainv)
 
 @DOCSTRING(betapdf)
 
 @DOCSTRING(binocdf)
@@ -475,16 +546,53 @@ alphabetical order).
 Octave can generate random numbers from a large number of distributions.
 The random number generators are based on the random number generators
 described in @ref{Special Utility Matrices}.
 @c Should rand, randn, rande, randp, and randg be moved to here?
 
 The following table summarizes the available random number generators
 (in alphabetical order).
 
+@iftex
+@tex
+\vskip 6pt
+{\hbox to \hsize {\hfill\vbox{\offinterlineskip \tabskip=0pt 
+\halign{
+\vrule height2.0ex depth1.ex width 0.6pt #\tabskip=0.3em &
+# \hfil & \vrule # & # \hfil & # \vrule width 0.6pt \tabskip=0pt\cr
+\noalign{\hrule height 0.6pt}
+& {\bf Distribution}                && {\bf Function} &\cr
+\noalign{\hrule}
+& Beta Distribution                 && betarnd &\cr
+& Binomial Distribution             && binornd &\cr
+& Cauchy Distribution               && cauchy\_rnd &\cr
+& Chi-Square Distribution           && chi2rnd &\cr
+& Univariate Discrete Distribution  && discrete\_rnd &\cr
+& Empirical Distribution            && empirical\_rnd &\cr
+& Exponential Distribution          && exprnd &\cr
+& F Distribution                    && frnd &\cr
+& Gamma Distribution                && gamrnd &\cr
+& Geometric Distribution            && geornd &\cr
+& Hypergeometric Distribution       && hygernd &\cr
+& Laplace Distribution              && laplace\_rnd &\cr
+& Logistic Distribution             && logistic\_rnd &\cr
+& Log-Normal Distribution           && lognrnd &\cr
+& Pascal Distribution               && nbinrnd &\cr
+& Univariate Normal Distribution    && normrnd &\cr
+& Poisson Distribution              && poissrnd &\cr
+& t (Student) Distribution          && trnd &\cr
+& Univariate Discrete Distribution  && unidrnd &\cr
+& Uniform Distribution              && unifrnd &\cr
+& Weibull Distribution              && wblrnd &\cr
+& Wiener Process                    && wienrnd &\cr
+\noalign{\hrule height 0.6pt}
+}}\hfill}}
+@end tex
+@end iftex
+@ifnottex
 @multitable @columnfractions .4 .3
 @item @strong{Distribution}             @tab @strong{Function}
 @item Beta Distribution                 @tab @code{betarnd}
 @item Binomial Distribution             @tab @code{binornd}
 @item Cauchy Distribution               @tab @code{cauchy_rnd}
 @item Chi-Square Distribution           @tab @code{chi2rnd}
 @item Univariate Discrete Distribution  @tab @code{discrete_rnd}
 @item Empirical Distribution            @tab @code{empirical_rnd}
@@ -500,16 +608,17 @@ The following table summarizes the avail
 @item Univariate Normal Distribution    @tab @code{normrnd}
 @item Poisson Distribution              @tab @code{poissrnd}
 @item t (Student) Distribution          @tab @code{trnd}
 @item Univariate Discrete Distribution  @tab @code{unidrnd}
 @item Uniform Distribution              @tab @code{unifrnd}
 @item Weibull Distribution              @tab @code{wblrnd}
 @item Wiener Process                    @tab @code{wienrnd}
 @end multitable
+@end ifnottex
 
 @DOCSTRING(betarnd)
 
 @DOCSTRING(binornd)
 
 @DOCSTRING(cauchy_rnd)
 
 @DOCSTRING(chi2rnd)
diff --git a/doc/interpreter/strings.txi b/doc/interpreter/strings.txi
--- a/doc/interpreter/strings.txi
+++ b/doc/interpreter/strings.txi
@@ -232,19 +232,21 @@ functions exist for doing case-insensiti
 @section Manipulating Strings
 
 Octave supports a wide range of functions for manipulating strings.
 Since a string is just a matrix, simple manipulations can be accomplished
 using standard operators. The following example shows how to replace
 all blank characters with underscores.
 
 @example
-quote = "First things first, but not necessarily in that order";
+quote = ...
+  "First things first, but not necessarily in that order";
 quote( quote == " " ) = "_"
-     @print{} quote = First_things_first,_but_not_necessarily_in_that_order
+@result{} quote = 
+    First_things_first,_but_not_necessarily_in_that_order
 @end example
 
 For more complex manipulations, such as searching, replacing, and
 general regular expressions, the following functions come with Octave.
 
 @DOCSTRING(deblank)
 
 @DOCSTRING(findstr)
diff --git a/doc/interpreter/testfun.txi b/doc/interpreter/testfun.txi
--- a/doc/interpreter/testfun.txi
+++ b/doc/interpreter/testfun.txi
@@ -42,17 +42,17 @@ generates an error, then the test is sai
 Since @code{eval()} will stop at the first error it encounters, you must
 divide your tests up into blocks, with anything in a separate
 block evaluated separately.  Blocks are introduced by the keyword
 @code{test} immediately following the @code{%!}.  For example,
 
 @example
 @group
    %!test error ("this test fails!");
-   %!test "this test doesn't fail since it doesn't generate an error";
+   %!test "test doesn't fail. it doesn't generate an error";
 @end group
 @end example
 
 When a test fails, you will see something like:
 
 @example
 @group
      ***** test error ('this test fails!')
diff --git a/doc/interpreter/tips.txi b/doc/interpreter/tips.txi
--- a/doc/interpreter/tips.txi
+++ b/doc/interpreter/tips.txi
@@ -178,18 +178,18 @@ Here is an example:
 @example
 ## Copyright (C) 1996, 1997, 2007 John W. Eaton
 ##
 ## This file is part of Octave.
 ##
 ## Octave is free software; you can redistribute it and/or
 ## modify it under the terms of the GNU General Public
 ## License as published by the Free Software Foundation;
-## either version 3 of the License, or (at your option) any later
-## version.
+## either version 3 of the License, or (at your option) any 
+## later version.
 ##
 ## Octave is distributed in the hope that it will be useful,
 ## but WITHOUT ANY WARRANTY; without even the implied
 ## warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
 ## PURPOSE.  See the GNU General Public License for more
 ## details.
 ##
 ## You should have received a copy of the GNU General Public
@@ -377,22 +377,22 @@ the function is in, its output arguments
 signature.  Typical classes for functions include @code{Function File}
 for standard Octave functions, and @code{Loadable Function} for
 dynamically linked functions.  A skeletal Texinfo documentation string
 therefore looks like this
 
 @example
 @group
 -*- texinfo -*-
-@@deftypefn@{Function File@} @{@@var@{return_value@} = @} function_name (@dots{})
+@@deftypefn@{Function File@} @{@@var@{ret@} = @} fn (@dots{})
 @@cindex index term
-Help text in Texinfo format.  Code samples should be marked like
-@@code@{sample of code@} and variables should be marked as
-@@var@{variable@}.
-@@seealso@{function2@}
+Help text in Texinfo format.  Code samples should be marked 
+like @@code@{sample of code@} and variables should be marked
+as @@var@{variable@}.
+@@seealso@{fn2@}
 @@end deftypefn
 @end group
 @end example
 
 This help string must be commented in user functions, or in the help
 string of the @code{DEFUN_DLD} macro for dynamically loadable
 functions.  The important aspects of the documentation string are
 
@@ -486,36 +486,36 @@ arrow signifying the result of a command
 
 In many cases a function has multiple means in which it can be called,
 and the @code{@@deftypefnx} macro can be used to give alternatives. For
 example
 
 @example
 @group
 -*- texinfo -*-
-@@deftypefn@{Function File@} @{@@var@{a@} = @} function_name (@@var@{x@}, @dots{})
-@@deftypefnx@{Function File@} @{@@var@{a@} = @} function_name (@@var@{y@}, @dots{})
+@@deftypefn@{Function File@} @{@@var@{a@} = @} fn (@@var@{x@}, @dots{})
+@@deftypefnx@{Function File@} @{@@var@{a@} = @} fn (@@var@{y@}, @dots{})
 Help text in Texinfo format.
 @@end deftypefn
 @end group
 @end example
 
 Many complete examples of Texinfo documentation can be taken from the
 help strings for the Octave functions themselves. A relatively complete
 example of which is the @code{nchoosek} function. The Texinfo
 documentation string of @code{nchoosek} is
 
 @example
 @group
 -*- texinfo -*-
-@@deftypefn @{Function File@} @{@@var@{c@} =@} nchoosek (@@var@{n@}, @@var@{k@})
+@@deftypefn @{Function File@} @{@} nchoosek (@@var@{n@}, @@var@{k@})
 
-Compute the binomial coefficient or all combinations of @@var@{n@}.
-If @@var@{n@} is a scalar then, calculate the binomial coefficient
-of @@var@{n@} and @@var@{k@}, defined as
+Compute the binomial coefficient or all combinations of 
+@@var@{n@}. If @@var@{n@} is a scalar then, calculate the
+binomial coefficient of @@var@{n@} and @@var@{k@}, defined as
 
 @@iftex
 @@tex
 $$
  @{n \choose k@} = @{n (n-1) (n-2) \cdots (n-k+1) \over k!@}
 $$
 @@end tex
 @@end iftex
@@ -527,49 +527,50 @@ of @@var@{n@} and @@var@{k@}, defined as
  | n |    n (n-1) (n-2) ... (n-k+1)
  |   |  = -------------------------
  | k |               k!
  \   /
 @@end group
 @@end example
 @@end ifinfo
 
-If @@var@{n@} is a vector, this generates all combinations of the elements
-of @@var@{n@}, taken @@var@{k@} at a time, one row per combination. The 
-resulting @@var@{c@} has size @@code@{[nchoosek (length (@@var@{n@}), 
-@@var@{k@}), @@var@{k@}]@}.
+If @@var@{n@} is a vector, this generates all combinations
+of the elements of @@var@{n@}, taken @@var@{k@} at a time,
+one row per combination. The resulting @@var@{c@} has size
+@@code@{[nchoosek (length (@@var@{n@}),@@var@{k@}), @@var@{k@}]@}.
 
 @@seealso@{bincoeff@}
 @@end deftypefn
 @end group
 @end example
 
 which demonstrates most of the concepts discussed above.
 @iftex
 This documentation string renders as
 
 @c Note actually use the output of info below rather than try and 
 @c reproduce it here to prevent it looking different than how it would
 @c appear with info.
 @example
 @group
  -- Function File: C = nchoosek (N, K)
-     Compute the binomial coefficient or all combinations of N.  If N
-     is a scalar then, calculate the binomial coefficient of N and K,
-     defined as
+     Compute the binomial coefficient or all combinations
+     of N.  If N is a scalar then, calculate the binomial
+     coefficient of N and K, defined as
 
            /   \
-           | n |    n (n-1) (n-2) ... (n-k+1)
-           |   |  = -------------------------
-           | k |               k!
+           | n |    n (n-1) (n-2) ... (n-k+1)       n!
+           |   |  = ------------------------- =  ---------
+           | k |               k!                k! (n-k)!
            \   /
 
-     If N is a vector generate all combinations of the elements of N,
-     taken K at a time, one row per combination. The resulting C has
-     size `[nchoosek (length (N), K), K]'.
+     If N is a vector generate all combinations of the
+     elements of N, taken K at a time, one row per
+     combination. The resulting C has size `[nchoosek
+     (length (N), K), K]'.
 
 
      See also: bincoeff.
 @end group
 @end example
 
 using info, whereas in a printed documentation using TeX it will appear
 as
diff --git a/examples/addtwomatrices.cc b/examples/addtwomatrices.cc
--- a/examples/addtwomatrices.cc
+++ b/examples/addtwomatrices.cc
@@ -1,27 +1,28 @@
 /*
 
-Copyright (C) 2007 John W. Eaton
+Copyright (C) 2006, 2007 John W. Eaton
 
 This file is part of Octave.
 
-Octave is free software; you can redistribute it and/or modify it
-under the terms of the GNU General Public License as published by the
-Free Software Foundation; either version 3 of the License, or (at your
-option) any later version.
+Octave is free software; you can redistribute it and/or 
+modify it under the terms of the GNU General Public License 
+as published by the Free Software Foundation; either
+version 3  of the License, or (at your option) any later 
+version.
 
-Octave is distributed in the hope that it will be useful, but WITHOUT
-ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
-FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
-for more details.
+Octave is distributed in the hope that it will be useful, 
+but WITHOUT ANY WARRANTY; without even the implied warranty
+of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
+See the GNU General Public License for more details.
 
-You should have received a copy of the GNU General Public License
-along with Octave; see the file COPYING.  If not, see
-<http://www.gnu.org/licenses/>.
+You should have received a copy of the GNU General Public 
+License along with Octave; see the file COPYING.  If not,
+see <http://www.gnu.org/licenses/>.
 
 */
 
 #include <octave/oct.h>
 
 DEFUN_DLD (addtwomatrices, args, , "Add A to B")
 {
   int nargin = args.length ();
diff --git a/examples/celldemo.cc b/examples/celldemo.cc
--- a/examples/celldemo.cc
+++ b/examples/celldemo.cc
@@ -1,27 +1,28 @@
 /*
 
-Copyright (C) 2007 John W. Eaton
+Copyright (C) 2006, 2007 John W. Eaton
 
 This file is part of Octave.
 
-Octave is free software; you can redistribute it and/or modify it
-under the terms of the GNU General Public License as published by the
-Free Software Foundation; either version 3 of the License, or (at your
-option) any later version.
+Octave is free software; you can redistribute it and/or 
+modify it under the terms of the GNU General Public License 
+as published by the Free Software Foundation; either
+version 3  of the License, or (at your option) any later 
+version.
 
-Octave is distributed in the hope that it will be useful, but WITHOUT
-ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
-FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
-for more details.
+Octave is distributed in the hope that it will be useful, 
+but WITHOUT ANY WARRANTY; without even the implied warranty
+of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
+See the GNU General Public License for more details.
 
-You should have received a copy of the GNU General Public License
-along with Octave; see the file COPYING.  If not, see
-<http://www.gnu.org/licenses/>.
+You should have received a copy of the GNU General Public 
+License along with Octave; see the file COPYING.  If not,
+see <http://www.gnu.org/licenses/>.
 
 */
 
 #include <octave/oct.h>
 #include <octave/Cell.h>
 
 DEFUN_DLD (celldemo, args, , "Cell Demo") 
 {
diff --git a/examples/firstmexdemo.c b/examples/firstmexdemo.c
--- a/examples/firstmexdemo.c
+++ b/examples/firstmexdemo.c
@@ -1,32 +1,34 @@
 /*
 
-Copyright (C) 2007 John W. Eaton
+Copyright (C) 2006, 2007 John W. Eaton
 
 This file is part of Octave.
 
-Octave is free software; you can redistribute it and/or modify it
-under the terms of the GNU General Public License as published by the
-Free Software Foundation; either version 3 of the License, or (at your
-option) any later version.
+Octave is free software; you can redistribute it and/or 
+modify it under the terms of the GNU General Public License 
+as published by the Free Software Foundation; either
+version 3  of the License, or (at your option) any later 
+version.
 
-Octave is distributed in the hope that it will be useful, but WITHOUT
-ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
-FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
-for more details.
+Octave is distributed in the hope that it will be useful, 
+but WITHOUT ANY WARRANTY; without even the implied warranty
+of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
+See the GNU General Public License for more details.
 
-You should have received a copy of the GNU General Public License
-along with Octave; see the file COPYING.  If not, see
-<http://www.gnu.org/licenses/>.
+You should have received a copy of the GNU General Public 
+License along with Octave; see the file COPYING.  If not,
+see <http://www.gnu.org/licenses/>.
 
 */
 
 #include "mex.h"
 
 void
-mexFunction (int nlhs, mxArray *plhs[], int nrhs, const mxArray *prhs[])
+mexFunction (int nlhs, mxArray *plhs[], int nrhs, 
+	     const mxArray *prhs[])
 {
   mxArray *v = mxCreateDoubleMatrix (1, 1, mxREAL);
   double *data = mxGetPr (v);
   *data = 1.23456789;
   plhs[0] = v;
 }
diff --git a/examples/fortdemo.cc b/examples/fortdemo.cc
--- a/examples/fortdemo.cc
+++ b/examples/fortdemo.cc
@@ -1,27 +1,28 @@
 /*
 
-Copyright (C) 2007 John W. Eaton
+Copyright (C) 2006, 2007 John W. Eaton
 
 This file is part of Octave.
 
-Octave is free software; you can redistribute it and/or modify it
-under the terms of the GNU General Public License as published by the
-Free Software Foundation; either version 3 of the License, or (at your
-option) any later version.
+Octave is free software; you can redistribute it and/or 
+modify it under the terms of the GNU General Public License 
+as published by the Free Software Foundation; either
+version 3  of the License, or (at your option) any later 
+version.
 
-Octave is distributed in the hope that it will be useful, but WITHOUT
-ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
-FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
-for more details.
+Octave is distributed in the hope that it will be useful, 
+but WITHOUT ANY WARRANTY; without even the implied warranty
+of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
+See the GNU General Public License for more details.
 
-You should have received a copy of the GNU General Public License
-along with Octave; see the file COPYING.  If not, see
-<http://www.gnu.org/licenses/>.
+You should have received a copy of the GNU General Public 
+License along with Octave; see the file COPYING.  If not,
+see <http://www.gnu.org/licenses/>.
 
 */
 
 #include <octave/oct.h>
 #include <octave/f77-fcn.h>
 
 extern "C" 
 {
@@ -42,17 +43,17 @@ DEFUN_DLD (fortdemo , args , , "Fortran 
       NDArray a = args(0).array_value ();
       if (! error_state)
         {
           double *av = a.fortran_vec ();
           octave_idx_type na = a.nelem ();
           OCTAVE_LOCAL_BUFFER (char, ctmp, 128);
 
           F77_XFCN (fortsub, FORTSUB, (na, av, ctmp 
-                                       F77_CHAR_ARG_LEN (128)));
+                    F77_CHAR_ARG_LEN (128)));
 
           if (f77_exception_encountered)
             error ("fortdemo: error in fortran");
           else
             {
               retval(1) = std::string (ctmp);
               retval(0) = a;
             }
diff --git a/examples/fortsub.f b/examples/fortsub.f
--- a/examples/fortsub.f
+++ b/examples/fortsub.f
@@ -1,39 +1,41 @@
 c Copyright (C) 2007 John W. Eaton
 c 
 c This file is part of Octave.
 c 
-c Octave is free software; you can redistribute it and/or modify it
-c under the terms of the GNU General Public License as published by the
-c Free Software Foundation; either version 3 of the License, or (at your
-c option) any later version.
+c Octave is free software; you can redistribute it and/or 
+c modify it under the terms of the GNU General Public
+c License as published by the Free Software Foundation;
+c either version 3 of the License, or (at your option) any
+c later version.
 c 
-c Octave is distributed in the hope that it will be useful, but WITHOUT
-c ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
-c FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
-c for more details.
+c Octave is distributed in the hope that it will be useful, 
+c but WITHOUT ANY WARRANTY; without even the implied 
+c warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR 
+c PURPOSE. See the GNU General Public License for more 
+c details.
 c 
-c You should have received a copy of the GNU General Public License
-c along with Octave; see the file COPYING.  If not, see
-c <http://www.gnu.org/licenses/>.
+c You should have received a copy of the GNU General Public
+c License along with Octave; see the file COPYING.  If not,
+c see <http://www.gnu.org/licenses/>.
 
       subroutine fortsub (n, a, s)
       implicit none
       character*(*) s
       real*8 a(*)
       integer*4 i, n, ioerr
       do i = 1, n
         if (a(i) .eq. 0d0) then
           call xstopx ('fortsub: divide by zero')
         else
           a(i) = 1d0 / a(i)
         endif
       enddo
       write (unit = s, fmt = '(a,i3,a,a)', iostat = ioerr)
-     $       'There are ', n, ' values in the input vector',
-     $       char(0)
+     $       'There are ', n,
+     $       ' values in the input vector', char(0)
       if (ioerr .ne. 0) then
         call xstopx ('fortsub: error writing string')
       endif
       return
       end
 
diff --git a/examples/funcdemo.cc b/examples/funcdemo.cc
--- a/examples/funcdemo.cc
+++ b/examples/funcdemo.cc
@@ -1,27 +1,28 @@
 /*
 
-Copyright (C) 2007 John W. Eaton
+Copyright (C) 2006, 2007 John W. Eaton
 
 This file is part of Octave.
 
-Octave is free software; you can redistribute it and/or modify it
-under the terms of the GNU General Public License as published by the
-Free Software Foundation; either version 3 of the License, or (at your
-option) any later version.
+Octave is free software; you can redistribute it and/or 
+modify it under the terms of the GNU General Public License 
+as published by the Free Software Foundation; either
+version 3  of the License, or (at your option) any later 
+version.
 
-Octave is distributed in the hope that it will be useful, but WITHOUT
-ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
-FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
-for more details.
+Octave is distributed in the hope that it will be useful, 
+but WITHOUT ANY WARRANTY; without even the implied warranty
+of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
+See the GNU General Public License for more details.
 
-You should have received a copy of the GNU General Public License
-along with Octave; see the file COPYING.  If not, see
-<http://www.gnu.org/licenses/>.
+You should have received a copy of the GNU General Public 
+License along with Octave; see the file COPYING.  If not,
+see <http://www.gnu.org/licenses/>.
 
 */
 
 #include <octave/oct.h>
 #include <octave/parse.h>
 
 DEFUN_DLD (funcdemo, args, nargout, "Function Demo")
 {
@@ -44,12 +45,13 @@ DEFUN_DLD (funcdemo, args, nargout, "Fun
         }
       else if (args(0).is_string ())
         {
           std::string fcn = args (0).string_value ();
           if (! error_state)
             retval = feval (fcn, newargs, nargout);
         }
       else
-        error ("funcdemo: expected string, inline or function handle");
+        error ("funcdemo: expected string,",
+	       " inline or function handle");
     }
   return retval;
 }
diff --git a/examples/globaldemo.cc b/examples/globaldemo.cc
--- a/examples/globaldemo.cc
+++ b/examples/globaldemo.cc
@@ -1,27 +1,28 @@
 /*
 
-Copyright (C) 2007 John W. Eaton
+Copyright (C) 2006, 2007 John W. Eaton
 
 This file is part of Octave.
 
-Octave is free software; you can redistribute it and/or modify it
-under the terms of the GNU General Public License as published by the
-Free Software Foundation; either version 3 of the License, or (at your
-option) any later version.
+Octave is free software; you can redistribute it and/or 
+modify it under the terms of the GNU General Public License 
+as published by the Free Software Foundation; either
+version 3  of the License, or (at your option) any later 
+version.
 
-Octave is distributed in the hope that it will be useful, but WITHOUT
-ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
-FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
-for more details.
+Octave is distributed in the hope that it will be useful, 
+but WITHOUT ANY WARRANTY; without even the implied warranty
+of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
+See the GNU General Public License for more details.
 
-You should have received a copy of the GNU General Public License
-along with Octave; see the file COPYING.  If not, see
-<http://www.gnu.org/licenses/>.
+You should have received a copy of the GNU General Public 
+License along with Octave; see the file COPYING.  If not,
+see <http://www.gnu.org/licenses/>.
 
 */
 
 #include <octave/oct.h>
 
 DEFUN_DLD (globaldemo, args, , "Global demo.")
 {
   int nargin = args.length ();
diff --git a/examples/helloworld.cc b/examples/helloworld.cc
--- a/examples/helloworld.cc
+++ b/examples/helloworld.cc
@@ -1,27 +1,28 @@
 /*
 
-Copyright (C) 2007 John W. Eaton
+Copyright (C) 2006, 2007 John W. Eaton
 
 This file is part of Octave.
 
-Octave is free software; you can redistribute it and/or modify it
-under the terms of the GNU General Public License as published by the
-Free Software Foundation; either version 3 of the License, or (at your
-option) any later version.
+Octave is free software; you can redistribute it and/or 
+modify it under the terms of the GNU General Public License 
+as published by the Free Software Foundation; either
+version 3  of the License, or (at your option) any later 
+version.
 
-Octave is distributed in the hope that it will be useful, but WITHOUT
-ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
-FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
-for more details.
+Octave is distributed in the hope that it will be useful, 
+but WITHOUT ANY WARRANTY; without even the implied warranty
+of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
+See the GNU General Public License for more details.
 
-You should have received a copy of the GNU General Public License
-along with Octave; see the file COPYING.  If not, see
-<http://www.gnu.org/licenses/>.
+You should have received a copy of the GNU General Public 
+License along with Octave; see the file COPYING.  If not,
+see <http://www.gnu.org/licenses/>.
 
 */
 
 #include <octave/oct.h>
 
 DEFUN_DLD (helloworld, args, nargout,
   "Hello World Help String")
 {
diff --git a/examples/mycell.c b/examples/mycell.c
--- a/examples/mycell.c
+++ b/examples/mycell.c
@@ -1,34 +1,36 @@
 /*
 
-Copyright (C) 2007 John W. Eaton
+Copyright (C) 2006, 2007 John W. Eaton
 
 This file is part of Octave.
 
-Octave is free software; you can redistribute it and/or modify it
-under the terms of the GNU General Public License as published by the
-Free Software Foundation; either version 3 of the License, or (at your
-option) any later version.
+Octave is free software; you can redistribute it and/or 
+modify it under the terms of the GNU General Public License 
+as published by the Free Software Foundation; either
+version 3  of the License, or (at your option) any later 
+version.
 
-Octave is distributed in the hope that it will be useful, but WITHOUT
-ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
-FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
-for more details.
+Octave is distributed in the hope that it will be useful, 
+but WITHOUT ANY WARRANTY; without even the implied warranty
+of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
+See the GNU General Public License for more details.
 
-You should have received a copy of the GNU General Public License
-along with Octave; see the file COPYING.  If not, see
-<http://www.gnu.org/licenses/>.
+You should have received a copy of the GNU General Public 
+License along with Octave; see the file COPYING.  If not,
+see <http://www.gnu.org/licenses/>.
 
 */
 
 #include "mex.h"
 
 void
-mexFunction (int nlhs, mxArray* plhs[], int nrhs, const mxArray* prhs[])
+mexFunction (int nlhs, mxArray* plhs[], int nrhs, 
+	     const mxArray* prhs[])
 {
   mwSize n;
   mwIndex i;
 
   if (nrhs != 1 || ! mxIsCell (prhs[0]))
     mexErrMsgTxt ("expects cell");
 
   n = mxGetNumberOfElements (prhs[0]);
diff --git a/examples/myfeval.c b/examples/myfeval.c
--- a/examples/myfeval.c
+++ b/examples/myfeval.c
@@ -1,44 +1,47 @@
 /*
 
 Copyright (C) 2006, 2007 John W. Eaton
 
 This file is part of Octave.
 
-Octave is free software; you can redistribute it and/or modify it
-under the terms of the GNU General Public License as published by the
-Free Software Foundation; either version 3 of the License, or (at your
-option) any later version.
+Octave is free software; you can redistribute it and/or 
+modify it under the terms of the GNU General Public License 
+as published by the Free Software Foundation; either
+version 3  of the License, or (at your option) any later 
+version.
 
-Octave is distributed in the hope that it will be useful, but WITHOUT
-ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
-FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
-for more details.
+Octave is distributed in the hope that it will be useful, 
+but WITHOUT ANY WARRANTY; without even the implied warranty
+of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
+See the GNU General Public License for more details.
 
-You should have received a copy of the GNU General Public License
-along with Octave; see the file COPYING.  If not, see
-<http://www.gnu.org/licenses/>.
+You should have received a copy of the GNU General Public 
+License along with Octave; see the file COPYING.  If not,
+see <http://www.gnu.org/licenses/>.
 
 */
 
 #include "mex.h"
 
 void
-mexFunction (int nlhs, mxArray* plhs[], int nrhs, const mxArray* prhs[])
+mexFunction (int nlhs, mxArray* plhs[], int nrhs, 
+	     const mxArray* prhs[])
 {
   char *str;
 
   mexPrintf ("Hello, World!\n");
 
-  mexPrintf ("I have %d inputs and %d outputs\n", nrhs, nlhs);
+  mexPrintf ("I have %d inputs and %d outputs\n", nrhs,
+	     nlhs);
 
   if (nrhs < 1 || ! mxIsString (prhs[0])) 
     mexErrMsgTxt ("function name expected");
 
   str = mxArrayToString (prhs[0]);
 
-  mexPrintf ("I'm going to call the interpreter function %s\n", str);
+  mexPrintf ("I'm going to call the function %s\n", str);
 
   mexCallMATLAB (nlhs, plhs, nrhs-1, prhs+1, str);
 
   mxFree (str);
 }
diff --git a/examples/myfunc.c b/examples/myfunc.c
--- a/examples/myfunc.c
+++ b/examples/myfunc.c
@@ -1,34 +1,36 @@
 /*
 
-Copyright (C) 2007 John W. Eaton
+Copyright (C) 2006, 2007 John W. Eaton
 
 This file is part of Octave.
 
-Octave is free software; you can redistribute it and/or modify it
-under the terms of the GNU General Public License as published by the
-Free Software Foundation; either version 3 of the License, or (at your
-option) any later version.
+Octave is free software; you can redistribute it and/or 
+modify it under the terms of the GNU General Public License 
+as published by the Free Software Foundation; either
+version 3  of the License, or (at your option) any later 
+version.
 
-Octave is distributed in the hope that it will be useful, but WITHOUT
-ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
-FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
-for more details.
+Octave is distributed in the hope that it will be useful, 
+but WITHOUT ANY WARRANTY; without even the implied warranty
+of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
+See the GNU General Public License for more details.
 
-You should have received a copy of the GNU General Public License
-along with Octave; see the file COPYING.  If not, see
-<http://www.gnu.org/licenses/>.
+You should have received a copy of the GNU General Public 
+License along with Octave; see the file COPYING.  If not,
+see <http://www.gnu.org/licenses/>.
 
 */
 
 #include "mex.h"
 
 void
-mexFunction (int nlhs, mxArray *plhs[], int nrhs, const mxArray *prhs[])
+mexFunction (int nlhs, mxArray *plhs[], int nrhs, 
+	     const mxArray *prhs[])
 {
   const char *nm;
   nm = mexFunctionName ();
   mexPrintf ("You called function: %s\n", nm);
   if (strcmp (nm, "myfunc") == 0)
     mexPrintf ("This is the principal function\n", nm);
   return; 
 }
diff --git a/examples/mypow2.c b/examples/mypow2.c
--- a/examples/mypow2.c
+++ b/examples/mypow2.c
@@ -1,34 +1,36 @@
 /*
 
-Copyright (C) 2007 John W. Eaton
+Copyright (C) 2006, 2007 John W. Eaton
 
 This file is part of Octave.
 
-Octave is free software; you can redistribute it and/or modify it
-under the terms of the GNU General Public License as published by the
-Free Software Foundation; either version 3 of the License, or (at your
-option) any later version.
+Octave is free software; you can redistribute it and/or 
+modify it under the terms of the GNU General Public License 
+as published by the Free Software Foundation; either
+version 3  of the License, or (at your option) any later 
+version.
 
-Octave is distributed in the hope that it will be useful, but WITHOUT
-ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
-FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
-for more details.
+Octave is distributed in the hope that it will be useful, 
+but WITHOUT ANY WARRANTY; without even the implied warranty
+of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
+See the GNU General Public License for more details.
 
-You should have received a copy of the GNU General Public License
-along with Octave; see the file COPYING.  If not, see
-<http://www.gnu.org/licenses/>.
+You should have received a copy of the GNU General Public 
+License along with Octave; see the file COPYING.  If not,
+see <http://www.gnu.org/licenses/>.
 
 */
 
 #include "mex.h"
 
 void
-mexFunction (int nlhs, mxArray* plhs[], int nrhs, const mxArray* prhs[])
+mexFunction (int nlhs, mxArray* plhs[], int nrhs, 
+	     const mxArray* prhs[])
 {
   mwIndex i;
   mwSize n;
   double *vri, *vro;
   
   if (nrhs != 1 || ! mxIsNumeric (prhs[0]))
     mexErrMsgTxt ("expects matrix");
 
diff --git a/examples/mysparse.c b/examples/mysparse.c
--- a/examples/mysparse.c
+++ b/examples/mysparse.c
@@ -1,34 +1,36 @@
 /*
 
 Copyright (C) 2006, 2007 David Bateman
 
 This file is part of Octave.
 
-Octave is free software; you can redistribute it and/or modify it
-under the terms of the GNU General Public License as published by the
-Free Software Foundation; either version 3 of the License, or (at your
-option) any later version.
+Octave is free software; you can redistribute it and/or 
+modify it under the terms of the GNU General Public License 
+as published by the Free Software Foundation; either
+version 3  of the License, or (at your option) any later 
+version.
 
-Octave is distributed in the hope that it will be useful, but WITHOUT
-ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
-FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
-for more details.
+Octave is distributed in the hope that it will be useful, 
+but WITHOUT ANY WARRANTY; without even the implied warranty
+of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
+See the GNU General Public License for more details.
 
-You should have received a copy of the GNU General Public License
-along with Octave; see the file COPYING.  If not, see
-<http://www.gnu.org/licenses/>.
+You should have received a copy of the GNU General Public 
+License along with Octave; see the file COPYING.  If not,
+see <http://www.gnu.org/licenses/>.
 
 */
 
 #include "mex.h"
 
 void
-mexFunction (int nlhs, mxArray *plhs[], int nrhs, const mxArray *prhs[])
+mexFunction (int nlhs, mxArray *plhs[], int nrhs, 
+	     const mxArray *prhs[])
 {
   mwSize n, m, nz;
   mxArray *v;
   mwIndex i;
   double *pr, *pi;
   double *pr2, *pi2;
   mwIndex *ir, *jc;
   mwIndex *ir2, *jc2;
@@ -37,28 +39,30 @@ mexFunction (int nlhs, mxArray *plhs[], 
     mexErrMsgTxt ("expects sparse matrix");
 
   m = mxGetM (prhs [0]);
   n = mxGetN (prhs [0]);
   nz = mxGetNzmax (prhs [0]);
   
   if (mxIsComplex (prhs[0]))
     {
-      mexPrintf ("Matrix is %d-by-%d complex sparse matrix", m, n);
+      mexPrintf ("Matrix is %d-by-%d complex",
+		 " sparse matrix", m, n);
       mexPrintf (" with %d elements\n", nz);
 
       pr = mxGetPr (prhs[0]);
       pi = mxGetPi (prhs[0]);
       ir = mxGetIr (prhs[0]);
       jc = mxGetJc (prhs[0]);
 
       i = n;
       while (jc[i] == jc[i-1] && i != 0) i--;
-      mexPrintf ("last non-zero element (%d, %d) = (%g, %g)\n", 
-                ir[nz-1]+ 1, i, pr[nz-1], pi[nz-1]);
+      mexPrintf ("last non-zero element (%d, %d) =", 
+		 ir[nz-1]+ 1, i);
+      mexPrintf (" (%g, %g)\n", pr[nz-1], pi[nz-1]);
 
       v = mxCreateSparse (m, n, nz, mxCOMPLEX);
       pr2 = mxGetPr (v);
       pi2 = mxGetPi (v);
       ir2 = mxGetIr (v);
       jc2 = mxGetJc (v);
       
       for (i = 0; i < nz; i++)
@@ -71,27 +75,28 @@ mexFunction (int nlhs, mxArray *plhs[], 
         jc2[i] = jc[i];
 
       if (nlhs > 0)
         plhs[0] = v;
     }
   else if (mxIsLogical (prhs[0]))
     {
       bool *pbr, *pbr2;
-      mexPrintf ("Matrix is %d-by-%d logical sparse matrix", m, n);
+      mexPrintf ("Matrix is %d-by-%d logical",
+		 " sparse matrix", m, n);
       mexPrintf (" with %d elements\n", nz);
 
       pbr = mxGetLogicals (prhs[0]);
       ir = mxGetIr (prhs[0]);
       jc = mxGetJc (prhs[0]);
 
       i = n;
       while (jc[i] == jc[i-1] && i != 0) i--;
-      mexPrintf ("last non-zero element (%d, %d) = %d\n", ir[nz-1]+ 1, 
-                i, pbr[nz-1]);
+      mexPrintf ("last non-zero element (%d, %d) = %d\n",
+                 ir[nz-1]+ 1, i, pbr[nz-1]);
 
       v = mxCreateSparseLogicalMatrix (m, n, nz);
       pbr2 = mxGetLogicals (v);
       ir2 = mxGetIr (v);
       jc2 = mxGetJc (v);
       
       for (i = 0; i < nz; i++)
         {
@@ -101,27 +106,28 @@ mexFunction (int nlhs, mxArray *plhs[], 
       for (i = 0; i < n + 1; i++)
         jc2[i] = jc[i];
 
       if (nlhs > 0)
         plhs[0] = v;
     }
   else
     {
-      mexPrintf ("Matrix is %d-by-%d real sparse matrix", m, n);
+      mexPrintf ("Matrix is %d-by-%d real",
+		 " sparse matrix", m, n);
       mexPrintf (" with %d elements\n", nz);
 
       pr = mxGetPr (prhs[0]);
       ir = mxGetIr (prhs[0]);
       jc = mxGetJc (prhs[0]);
 
       i = n;
       while (jc[i] == jc[i-1] && i != 0) i--;
-      mexPrintf ("last non-zero element (%d, %d) = %g\n", ir[nz-1]+ 1, 
-                i, pr[nz-1]);
+      mexPrintf ("last non-zero element (%d, %d) = %g\n",
+                ir[nz-1]+ 1, i, pr[nz-1]);
 
       v = mxCreateSparse (m, n, nz, mxREAL);
       pr2 = mxGetPr (v);
       ir2 = mxGetIr (v);
       jc2 = mxGetJc (v);
       
       for (i = 0; i < nz; i++)
         {
diff --git a/examples/mystring.c b/examples/mystring.c
--- a/examples/mystring.c
+++ b/examples/mystring.c
@@ -1,46 +1,49 @@
 /*
 
-Copyright (C) 2007 John W. Eaton
+Copyright (C) 2006, 2007 John W. Eaton
 
 This file is part of Octave.
 
-Octave is free software; you can redistribute it and/or modify it
-under the terms of the GNU General Public License as published by the
-Free Software Foundation; either version 3 of the License, or (at your
-option) any later version.
+Octave is free software; you can redistribute it and/or 
+modify it under the terms of the GNU General Public License 
+as published by the Free Software Foundation; either
+version 3  of the License, or (at your option) any later 
+version.
 
-Octave is distributed in the hope that it will be useful, but WITHOUT
-ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
-FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
-for more details.
+Octave is distributed in the hope that it will be useful, 
+but WITHOUT ANY WARRANTY; without even the implied warranty
+of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
+See the GNU General Public License for more details.
 
-You should have received a copy of the GNU General Public License
-along with Octave; see the file COPYING.  If not, see
-<http://www.gnu.org/licenses/>.
+You should have received a copy of the GNU General Public 
+License along with Octave; see the file COPYING.  If not,
+see <http://www.gnu.org/licenses/>.
 
 */
 
 #include <string.h>
 #include "mex.h"
 
 void
-mexFunction (int nlhs, mxArray *plhs[], int nrhs, const mxArray *prhs[])
+mexFunction (int nlhs, mxArray *plhs[], int nrhs, 
+	     const mxArray *prhs[])
 {
   mwIndex i, j;
   mwSize m, n;
   mxChar *pi, *po;
 
   if (nrhs != 1 || ! mxIsChar (prhs[0]) || 
       mxGetNumberOfDimensions (prhs[0]) > 2)
     mexErrMsgTxt ("expecting char matrix");
 
   m = mxGetM (prhs[0]);
   n = mxGetN (prhs[0]);
   pi = mxGetChars (prhs[0]);
-  plhs[0] = mxCreateNumericMatrix (m, n, mxCHAR_CLASS, mxREAL);
+  plhs[0] = mxCreateNumericMatrix (m, n, mxCHAR_CLASS, 
+				   mxREAL);
   po = mxGetChars (plhs[0]);
 
   for (j = 0; j < n; j++)
     for (i = 0; i < m; i++)
       po [j*m + m - 1 - i] = pi [j*m + i];
 }
diff --git a/examples/mystruct.c b/examples/mystruct.c
--- a/examples/mystruct.c
+++ b/examples/mystruct.c
@@ -1,34 +1,36 @@
 /*
 
 Copyright (C) 2006, 2007 John W. Eaton
 
 This file is part of Octave.
 
-Octave is free software; you can redistribute it and/or modify it
-under the terms of the GNU General Public License as published by the
-Free Software Foundation; either version 3 of the License, or (at your
-option) any later version.
+Octave is free software; you can redistribute it and/or 
+modify it under the terms of the GNU General Public License 
+as published by the Free Software Foundation; either
+version 3  of the License, or (at your option) any later 
+version.
 
-Octave is distributed in the hope that it will be useful, but WITHOUT
-ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
-FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
-for more details.
+Octave is distributed in the hope that it will be useful, 
+but WITHOUT ANY WARRANTY; without even the implied warranty
+of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
+See the GNU General Public License for more details.
 
-You should have received a copy of the GNU General Public License
-along with Octave; see the file COPYING.  If not, see
-<http://www.gnu.org/licenses/>.
+You should have received a copy of the GNU General Public 
+License along with Octave; see the file COPYING.  If not,
+see <http://www.gnu.org/licenses/>.
 
 */
 
 #include "mex.h"
 
 void
-mexFunction (int nlhs, mxArray* plhs[], int nrhs, const mxArray* prhs[])
+mexFunction (int nlhs, mxArray* plhs[], int nrhs, 
+	     const mxArray* prhs[])
 {
   int i;
   mwIndex j;
   mxArray *v;
   const char *keys[] = { "this", "that" };
 
   if (nrhs != 1 || ! mxIsStruct (prhs[0]))
     mexErrMsgTxt ("expects struct");
diff --git a/examples/paramdemo.cc b/examples/paramdemo.cc
--- a/examples/paramdemo.cc
+++ b/examples/paramdemo.cc
@@ -1,33 +1,35 @@
 /*
 
-Copyright (C) 2007 John W. Eaton
+Copyright (C) 2006, 2007 John W. Eaton
 
 This file is part of Octave.
 
-Octave is free software; you can redistribute it and/or modify it
-under the terms of the GNU General Public License as published by the
-Free Software Foundation; either version 3 of the License, or (at your
-option) any later version.
+Octave is free software; you can redistribute it and/or 
+modify it under the terms of the GNU General Public License 
+as published by the Free Software Foundation; either
+version 3  of the License, or (at your option) any later 
+version.
 
-Octave is distributed in the hope that it will be useful, but WITHOUT
-ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
-FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
-for more details.
+Octave is distributed in the hope that it will be useful, 
+but WITHOUT ANY WARRANTY; without even the implied warranty
+of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
+See the GNU General Public License for more details.
 
-You should have received a copy of the GNU General Public License
-along with Octave; see the file COPYING.  If not, see
-<http://www.gnu.org/licenses/>.
+You should have received a copy of the GNU General Public 
+License along with Octave; see the file COPYING.  If not,
+see <http://www.gnu.org/licenses/>.
 
 */
 
 #include <octave/oct.h>
 
-DEFUN_DLD (paramdemo, args, nargout, "Parameter Check Demo.")
+DEFUN_DLD (paramdemo, args, nargout, 
+	   "Parameter Check Demo.")
 {
   int nargin = args.length ();
   octave_value retval;
 
   if (nargin != 1)
     print_usage();
   else if (nargout != 0)
     error ("paramdemo: function has no output arguments");
@@ -37,16 +39,19 @@ DEFUN_DLD (paramdemo, args, nargout, "Pa
       double min_val = -10.0;
       double max_val = 10.0;
       octave_stdout << "Properties of input array:\n";
       if (m.any_element_is_negative ())
         octave_stdout << "  includes negative values\n";
       if (m.any_element_is_inf_or_nan())
         octave_stdout << "  includes Inf or NaN values\n";
       if (m.any_element_not_one_or_zero())
-        octave_stdout << "  includes other values than 1 and 0\n";
+        octave_stdout << 
+	  "  includes other values than 1 and 0\n";
       if (m.all_elements_are_int_or_inf_or_nan())
-        octave_stdout << "  includes only int, Inf or NaN values\n";
+        octave_stdout << 
+	  "  includes only int, Inf or NaN values\n";
       if (m.all_integers (min_val, max_val))
-        octave_stdout << "  includes only integers in [-10,10]\n";
+        octave_stdout << 
+	  "  includes only integers in [-10,10]\n";
     }
   return retval;
 }
diff --git a/examples/stringdemo.cc b/examples/stringdemo.cc
--- a/examples/stringdemo.cc
+++ b/examples/stringdemo.cc
@@ -1,27 +1,28 @@
 /*
 
-Copyright (C) 2007 John W. Eaton
+Copyright (C) 2006, 2007 John W. Eaton
 
 This file is part of Octave.
 
-Octave is free software; you can redistribute it and/or modify it
-under the terms of the GNU General Public License as published by the
-Free Software Foundation; either version 3 of the License, or (at your
-option) any later version.
+Octave is free software; you can redistribute it and/or 
+modify it under the terms of the GNU General Public License 
+as published by the Free Software Foundation; either
+version 3  of the License, or (at your option) any later 
+version.
 
-Octave is distributed in the hope that it will be useful, but WITHOUT
-ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
-FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
-for more details.
+Octave is distributed in the hope that it will be useful, 
+but WITHOUT ANY WARRANTY; without even the implied warranty
+of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
+See the GNU General Public License for more details.
 
-You should have received a copy of the GNU General Public License
-along with Octave; see the file COPYING.  If not, see
-<http://www.gnu.org/licenses/>.
+You should have received a copy of the GNU General Public 
+License along with Octave; see the file COPYING.  If not,
+see <http://www.gnu.org/licenses/>.
 
 */
 
 #include <octave/oct.h>
 
 DEFUN_DLD (stringdemo, args, , "String Demo")
 {
   int nargin = args.length();
@@ -39,16 +40,17 @@ DEFUN_DLD (stringdemo, args, , "String D
             retval(1) = octave_value (ch, true);
           else
             retval(1) = octave_value (ch, true, '\'');
 
           octave_idx_type nr = ch.rows();
           for (octave_idx_type i = 0; i < nr / 2; i++)
             {
               std::string tmp = ch.row_as_string (i);
-              ch.insert (ch.row_as_string(nr-i-1).c_str(), i, 0);
+              ch.insert (ch.row_as_string(nr-i-1).c_str(), 
+			 i, 0);
               ch.insert (tmp.c_str(), nr-i-1, 0);
             }
           retval(0) = octave_value (ch, true);
         }
     }
   return retval;
 }
diff --git a/examples/structdemo.cc b/examples/structdemo.cc
--- a/examples/structdemo.cc
+++ b/examples/structdemo.cc
@@ -1,27 +1,28 @@
 /*
 
-Copyright (C) 2007 John W. Eaton
+Copyright (C) 2006, 2007 John W. Eaton
 
 This file is part of Octave.
 
-Octave is free software; you can redistribute it and/or modify it
-under the terms of the GNU General Public License as published by the
-Free Software Foundation; either version 3 of the License, or (at your
-option) any later version.
+Octave is free software; you can redistribute it and/or 
+modify it under the terms of the GNU General Public License 
+as published by the Free Software Foundation; either
+version 3  of the License, or (at your option) any later 
+version.
 
-Octave is distributed in the hope that it will be useful, but WITHOUT
-ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
-FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
-for more details.
+Octave is distributed in the hope that it will be useful, 
+but WITHOUT ANY WARRANTY; without even the implied warranty
+of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
+See the GNU General Public License for more details.
 
-You should have received a copy of the GNU General Public License
-along with Octave; see the file COPYING.  If not, see
-<http://www.gnu.org/licenses/>.
+You should have received a copy of the GNU General Public 
+License along with Octave; see the file COPYING.  If not,
+see <http://www.gnu.org/licenses/>.
 
 */
 
 #include <octave/oct.h>
 #include <octave/ov-struct.h>
 
 DEFUN_DLD (structdemo, args, , "Struct demo.")
 {
@@ -34,17 +35,18 @@ DEFUN_DLD (structdemo, args, , "Struct d
     {
       Octave_map arg0 = args(0).map_value ();
       std::string arg1 = args(1).string_value ();
 
       if (! error_state && arg0.contains (arg1))
         {
           // The following two lines might be written as
           //    octave_value tmp;
-          //    for (Octave_map::iterator p0 = arg0.begin() ; 
+          //    for (Octave_map::iterator p0 = 
+	  //        arg0.begin(); 
           //        p0 != arg0.end(); p0++ )
           //      if (arg0.key (p0) == arg1)
           //        {
           //          tmp = arg0.contents (p0) (0);
           //          break;
           //        }
           // though using seek is more concise.
           Octave_map::const_iterator p1 = arg0.seek (arg1);
diff --git a/examples/unwinddemo.cc b/examples/unwinddemo.cc
--- a/examples/unwinddemo.cc
+++ b/examples/unwinddemo.cc
@@ -1,27 +1,28 @@
 /*
 
-Copyright (C) 2007 John W. Eaton
+Copyright (C) 2006, 2007 John W. Eaton
 
 This file is part of Octave.
 
-Octave is free software; you can redistribute it and/or modify it
-under the terms of the GNU General Public License as published by the
-Free Software Foundation; either version 3 of the License, or (at your
-option) any later version.
+Octave is free software; you can redistribute it and/or 
+modify it under the terms of the GNU General Public License 
+as published by the Free Software Foundation; either
+version 3  of the License, or (at your option) any later 
+version.
 
-Octave is distributed in the hope that it will be useful, but WITHOUT
-ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
-FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
-for more details.
+Octave is distributed in the hope that it will be useful, 
+but WITHOUT ANY WARRANTY; without even the implied warranty
+of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
+See the GNU General Public License for more details.
 
-You should have received a copy of the GNU General Public License
-along with Octave; see the file COPYING.  If not, see
-<http://www.gnu.org/licenses/>.
+You should have received a copy of the GNU General Public 
+License along with Octave; see the file COPYING.  If not,
+see <http://www.gnu.org/licenses/>.
 
 */
 
 #include <octave/oct.h>
 #include <octave/unwind-prot.h>
 
 void
 err_hand (const char *fmt, ...)
@@ -38,16 +39,17 @@ DEFUN_DLD (unwinddemo, args, nargout, "U
   else
     {
       NDArray a = args(0).array_value ();
       NDArray b = args(1).array_value ();
 
       if (! error_state)
         {
           unwind_protect::begin_frame ("Funwinddemo");
-          unwind_protect_ptr (current_liboctave_warning_handler);
+          unwind_protect_ptr 
+	    (current_liboctave_warning_handler);
           set_liboctave_warning_handler(err_hand);
           retval = octave_value (quotient (a, b));
           unwind_protect::run_frame ("Funwinddemo");
         }
     }
   return retval;
 }
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,12 @@
+2007-10-30  David Bateman  <dbateman@free.fr>
+
+	* DASRT-opts.in, LSODE-opts.in: Doc fixes for small book format.
+
 2007-10-30  John W. Eaton  <jwe@octave.org>
 
 	* CMatrix.cc (lssolve): Compute size of rwork and iwork arrays.
 	* dMatrix.cc (lssolve): Compute size of iwork array.
 
 2007-10-29  David Bateman  <dbateman@free.fr>
 
 	* CMatrix.h (lssolve (const Matrix&, octave_idx_type&, 
diff --git a/liboctave/DASRT-opts.in b/liboctave/DASRT-opts.in
--- a/liboctave/DASRT-opts.in
+++ b/liboctave/DASRT-opts.in
@@ -50,17 +50,18 @@ OPTION
   NAME = "relative tolerance"
   DOC_ITEM
 Relative tolerance.  May be either vector or scalar.  If a vector, it
 must match the dimension of the state vector, and the absolute
 tolerance must also be a vector of the same length.
 
 The local error test applied at each integration step is
 @example
-  abs (local error in x(i)) <= rtol(i) * abs (Y(i)) + atol(i)
+  abs (local error in x(i)) <= ...
+      rtol(i) * abs (Y(i)) + atol(i)
 @end example
   END_DOC_ITEM
   TYPE = "Array<double>"
   SET_ARG_TYPE = "const $TYPE&"
   INIT_BODY
     $OPTVAR.resize (1);
     $OPTVAR(0) = ::sqrt (DBL_EPSILON);
   END_INIT_BODY
diff --git a/liboctave/LSODE-opts.in b/liboctave/LSODE-opts.in
--- a/liboctave/LSODE-opts.in
+++ b/liboctave/LSODE-opts.in
@@ -49,17 +49,18 @@ OPTION
   NAME = "relative tolerance"
   DOC_ITEM
 Relative tolerance parameter.  Unlike the absolute tolerance, this
 parameter may only be a scalar.
 
 The local error test applied at each integration step is
 
 @example
-  abs (local error in x(i)) <= rtol * abs (y(i)) + atol(i)
+  abs (local error in x(i)) <= ...
+      rtol * abs (y(i)) + atol(i)
 @end example
   END_DOC_ITEM
   TYPE = "double"
   INIT_VALUE = "::sqrt (DBL_EPSILON)"
   SET_EXPR = "(val > 0.0) ? val : ::sqrt (DBL_EPSILON)"
 END_OPTION
 
 OPTION
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,10 +1,12 @@
 2007-10-30  David Bateman  <dbateman@free.fr>
 
+	* control/base/DEMOcontrol.m: Doc fixes for small book format.
+
 	* plot/__go_draw_axes__.m (do_linestyle_command):
 	Use point type 0 for ".".
 
 2007-10-26  John W. Eaton  <jwe@octave.org>
 
 	* image/imshow.m: Improve compatibility.
 	* image/image.m: Return handle if nargou > 0.
 
diff --git a/scripts/control/base/DEMOcontrol.m b/scripts/control/base/DEMOcontrol.m
--- a/scripts/control/base/DEMOcontrol.m
+++ b/scripts/control/base/DEMOcontrol.m
@@ -19,17 +19,16 @@
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} DEMOcontrol
 ## Octave Control Systems Toolbox demo/tutorial program.  The demo
 ## allows the user to select among several categories of @acronym{OCST} function:
 ## @example
 ## @group
 ## octave:1> DEMOcontrol
-## O C T A V E    C O N T R O L   S Y S T E M S   T O O L B O X
 ## Octave Controls System Toolbox Demo
 ##
 ##   [ 1] System representation
 ##   [ 2] Block diagram manipulations
 ##   [ 3] Frequency response functions
 ##   [ 4] State space analysis functions
 ##   [ 5] Root locus functions
 ##   [ 6] LQG/H2/Hinfinity functions
@@ -42,18 +41,16 @@
 ## moddmeo.m, rldemo.m}
 ## @end deftypefn
 
 ## Author: David Clem
 ## Created: August 15, 1994
 
 function DEMOcontrol ()
 
-  puts ("O C T A V E    C O N T R O L   S Y S T E M S   T O O L B O X");
-
   while (1)
 
     clc ();
 
     k = 0;
 
     while (k > 8 || k < 1),
       k = menu ("Octave Controls System Toolbox Demo",
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,12 @@
+2007-10-30  David Bateman  <dbateman@free.fr>
+
+	* symtab.cc: Doc fixes for small book format.
+
 2007-10-30  John W. Eaton  <jwe@octave.org>
 
 	* file-io.cc (fopen_mode_to_ios_mode): Handle 'W' as 'w' and 'R'
 	as 'r', but warn about them.
 
 2007-10-29  Thomas Treichl <Thomas.Treichl@gmx.net>
 
 	* data.cc: Include sytime.h, sys/types.h, and sys/resource.h.
diff --git a/src/symtab.cc b/src/symtab.cc
--- a/src/symtab.cc
+++ b/src/symtab.cc
@@ -1962,17 +1962,21 @@ Every command may also have a modifier:\
 Left alignment.\n\
 @item r\n\
 Right alignment (this is the default).\n\
 @item c\n\
 Centered (may only be applied to command %s).\n\
 @end table\n\
 \n\
 A command is composed like this:\n\
-%[modifier]<command>[:size_of_parameter[:center-specific[:print_dims[:balance]]]];\n\
+\n\
+@example\n\
+%[modifier]<command>[:size_of_parameter[:center-specific[\n\
+       :print_dims[:balance]]]];\n\
+@end example\n\
 \n\
 Command and modifier is already explained. Size_of_parameter\n\
 tells how many columns the parameter will need for printing.\n\
 print_dims tells how many dimensions to print. If number of\n\
 dimensions exceeds print_dims, dimensions will be printed like\n\
 x-D.\n\
 center-specific and print_dims may only be applied to command\n\
 %s. A negative value for print_dims will cause Octave to print all\n\
