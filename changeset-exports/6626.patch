# HG changeset patch
# User jwe
# Date 1179327506 0
#      Wed May 16 14:58:26 2007 +0000
# Node ID af16354ea09cd760bbb5944452b4756e913017e4
# Parent  5d02dfacfc9eb858d3f48f7f37b06dd6a90fa594
[project @ 2007-05-16 14:58:26 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,19 @@
+2007-05-16  John W. Eaton  <jwe@octave.org>
+
+	* load-path.h (load_path::sys_path): New static data member.
+	(load_path::system_path): New static function.
+	(load_path::do_system_path): New function.
+	* load-path.cc (Vsystem_path): Delete.
+	(load_path::do_initialize): Use sys_path, not Vsystem_path.
+	(Fpathdef): Call load_path::system_path instead of using Vsystem_path.
+	* ls-mat5.cc (read_mat5_binary_element): Likewise.
+	* ov-fcn-handle.cc (octave_fcn_handle::set_fcn): Likewise.
+
 2007-05-16  David Bateman  <dbateman@free.fr>
 
 	* load_pathc.cc (std::string octave_system_path (void)): New
         function.
         * load-path.h (std::string octave_system_path (void)): Declare it.
 
         * load-save.cc (static load_save_format get_file_format
         (std::istream&, const std::string&)): Add filename argument, and
diff --git a/src/load-path.cc b/src/load-path.cc
--- a/src/load-path.cc
+++ b/src/load-path.cc
@@ -43,24 +43,16 @@ 02110-1301, USA.
 #include "unwind-prot.h"
 #include "utils.h"
 
 load_path *load_path::instance = 0;
 load_path::hook_function_ptr load_path::add_hook = execute_pkg_add;
 load_path::hook_function_ptr load_path::remove_hook = execute_pkg_del;
 std::string load_path::command_line_path;
 
-static std::string Vsystem_path;
-
-std::string
-octave_system_path (void)
-{
-  return Vsystem_path;
-}
-
 void
 load_path::dir_info::update (void)
 {
   if (is_relative)
     initialize ();
   else
     {
       file_stat fs (dir_name);
@@ -355,42 +347,42 @@ maybe_add_path_elts (std::string& path, 
 
   if (! tpath.empty ())
     path += dir_path::path_sep_str + tpath;
 }
 
 void
 load_path::do_initialize (bool set_initial_path)
 {
-  Vsystem_path = dir_path::path_sep_str;
+  sys_path = dir_path::path_sep_str;
 
   if (set_initial_path)
     {
-      maybe_add_path_elts (Vsystem_path, Vlocal_ver_oct_file_dir);
-      maybe_add_path_elts (Vsystem_path, Vlocal_api_oct_file_dir);
-      maybe_add_path_elts (Vsystem_path, Vlocal_oct_file_dir);
-      maybe_add_path_elts (Vsystem_path, Vlocal_ver_fcn_file_dir);
-      maybe_add_path_elts (Vsystem_path, Vlocal_api_fcn_file_dir);
-      maybe_add_path_elts (Vsystem_path, Vlocal_fcn_file_dir);
-      maybe_add_path_elts (Vsystem_path, Voct_file_dir);
-      maybe_add_path_elts (Vsystem_path, Vfcn_file_dir);
+      maybe_add_path_elts (sys_path, Vlocal_ver_oct_file_dir);
+      maybe_add_path_elts (sys_path, Vlocal_api_oct_file_dir);
+      maybe_add_path_elts (sys_path, Vlocal_oct_file_dir);
+      maybe_add_path_elts (sys_path, Vlocal_ver_fcn_file_dir);
+      maybe_add_path_elts (sys_path, Vlocal_api_fcn_file_dir);
+      maybe_add_path_elts (sys_path, Vlocal_fcn_file_dir);
+      maybe_add_path_elts (sys_path, Voct_file_dir);
+      maybe_add_path_elts (sys_path, Vfcn_file_dir);
     }
 
   std::string tpath = load_path::command_line_path;
 
   if (tpath.empty ())
     tpath = octave_env::getenv ("OCTAVE_LOADPATH");
 
   std::string xpath = ".";
 
   if (! tpath.empty ())
     xpath += dir_path::path_sep_str + tpath;
 
-  if (Vsystem_path != dir_path::path_sep_str)
-    xpath += Vsystem_path;
+  if (sys_path != dir_path::path_sep_str)
+    xpath += sys_path;
 
   do_set (xpath, false);
 }
 
 void
 load_path::do_clear (void)
 {
   dir_info_list.clear ();
@@ -1290,17 +1282,17 @@ Reinitialize Octave's @code{LOADPATH} di
 DEFUN (pathdef, , ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {@var{val} =} pathdef ()\n\
 Return the default list of directories in which to search for function\n\
 files.\n\
 @seealso{path, addpath, rmpath, genpath, savepath, pathsep}\n\
 @end deftypefn")
 {
-  return octave_value (Vsystem_path);
+  return load_path::system_path ();
 }
 
 DEFUN (path, args, nargout,
     "-*- texinfo -*-\n\
 @deftypefn {Function File} {} path (@dots{})\n\
 Modify or display Octave's @code{LOADPATH}.\n\
 \n\
 If @var{nargin} and @var{nargout} are zero, display the elements of\n\
diff --git a/src/load-path.h b/src/load-path.h
--- a/src/load-path.h
+++ b/src/load-path.h
@@ -168,16 +168,21 @@ public:
   static void set_command_line_path (const std::string& p)
   {
     if (command_line_path.empty ())
       command_line_path = p;
     else
       command_line_path += dir_path::path_sep_str + p;
   }
 
+  static std::string system_path (void)
+  {
+    return instance_ok () ? do_system_path () : std::string ();
+  }
+
 private:
 
   static const int M_FILE = 1;
   static const int OCT_FILE = 2;
   static const int MEX_FILE = 4;
 
   class dir_info
   {
@@ -272,16 +277,18 @@ private:
   static load_path *instance;
 
   static hook_function_ptr add_hook;
 
   static hook_function_ptr remove_hook;
 
   static std::string command_line_path;
 
+  static std::string sys_path;
+
   static bool instance_ok (void);
 
   typedef std::list<dir_info>::const_iterator const_dir_info_list_iterator;
   typedef std::list<dir_info>::iterator dir_info_list_iterator;
 
   typedef std::map<std::string, std::list<file_info> >::const_iterator const_fcn_map_iterator;
   typedef std::map<std::string, std::list<file_info> >::iterator fcn_map_iterator;
 
@@ -327,27 +334,27 @@ private:
   string_vector do_files (const std::string& dir) const;
 
   string_vector do_fcn_names (void) const;
 
   std::string do_path (void) const;
 
   void do_display (std::ostream& os) const;
 
+  std::string system_path (void) const { return sys_path; }
+
   void add_to_fcn_map (const dir_info& di, bool at_end) const;
 };
 
 extern std::string
 genpath (const std::string& dir, const string_vector& skip = "private");
 
 extern void execute_pkg_add (const std::string& dir);
 extern void execute_pkg_del (const std::string& dir);
 
-extern std::string octave_system_path (void);
-
 #endif
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; page-delimiter: "^/\\*" ***
 ;;; End: ***
 */
diff --git a/src/ls-mat5.cc b/src/ls-mat5.cc
--- a/src/ls-mat5.cc
+++ b/src/ls-mat5.cc
@@ -795,17 +795,17 @@ read_mat5_binary_element (std::istream& 
 		      {
 			// Next just search for it anywhere in the
 			// system path
 			string_vector names(3);
 			names(0) = fname + ".oct";
 			names(1) = fname + ".mex";
 			names(2) = fname + ".m";
 
-			dir_path p (octave_system_path ());
+			dir_path p (load_path::system_path ());
 
 			str = octave_env::make_absolute 
 			  (p.find_first_of (names), octave_env::getcwd ());
 
 			symbol_record *sr = fbi_sym_tab->lookup (str, true);
 
 			if (sr)
 			  {
diff --git a/src/ov-fcn-handle.cc b/src/ov-fcn-handle.cc
--- a/src/ov-fcn-handle.cc
+++ b/src/ov-fcn-handle.cc
@@ -192,17 +192,17 @@ octave_fcn_handle::set_fcn (const std::s
       else
 	{
 	  // Next just search for it anywhere in the system path
 	  string_vector names(3);
 	  names(0) = nm + ".oct";
 	  names(1) = nm + ".mex";
 	  names(2) = nm + ".m";
 
-	  dir_path p (octave_system_path ());
+	  dir_path p (load_path::system_path ());
 
 	  str = octave_env::make_absolute 
 	    (p.find_first_of (names), octave_env::getcwd ());
 
 	  symbol_record *sr = fbi_sym_tab->lookup (str, true);
 
 	  if (sr)
 	    {
