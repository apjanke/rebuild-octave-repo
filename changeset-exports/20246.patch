# HG changeset patch
# User Pantxo Diribarne <pantxo.diribarne@gmail.com>
# Date 1433196750 -7200
#      Tue Jun 02 00:12:30 2015 +0200
# Branch stable
# Node ID 6fe746def1aa2ab7ad0508c742651fea41d2db07
# Parent  a5f9bf4df254de5cfba799748565bc8846e0ec09
Also load settings and translations in --no-gui mode (bugs #44222 and #45199)

* annotation-dialog.cc (annotation_dialog::init, annotation_dialog::button_clicked): ensure settings are initialized
* octave-gui.cc (octave_start_gui): eventually run wizard, load settings and translations even when not starting the gui
* octave-gui.cc (octave_start_gui): now settings are loaded, only call "w.read_settings" when starting the gui

diff --git a/libgui/graphics/annotation-dialog.cc b/libgui/graphics/annotation-dialog.cc
--- a/libgui/graphics/annotation-dialog.cc
+++ b/libgui/graphics/annotation-dialog.cc
@@ -48,17 +48,18 @@ annotation_dialog::annotation_dialog (QW
 void
 annotation_dialog::init ()
 {
   ui->setupUi (this);
 
   QSettings *settings = resource_manager::get_settings ();
 
   // restore last geometry
-  restoreGeometry (settings->value("annotation/geometry").toByteArray ());
+  if (settings)
+    restoreGeometry (settings->value("annotation/geometry").toByteArray ());
 
   // connect signals
   connect (ui->button_box, SIGNAL (clicked (QAbstractButton *)),
            this, SLOT (button_clicked (QAbstractButton *)));
 
 
   connect (ui->edit_string, SIGNAL (textChanged (const QString&)),
            this, SLOT (edit_string_changed (const QString&)));
@@ -91,17 +92,18 @@ annotation_dialog::~annotation_dialog ()
 void
 annotation_dialog::button_clicked (QAbstractButton *button)
 {
   QDialogButtonBox::ButtonRole button_role = ui->button_box->buttonRole (button);
 
   QSettings *settings = resource_manager::get_settings ();
 
   // save position
-  settings->setValue ("annotation/geometry",saveGeometry ());
+  if (settings)
+    settings->setValue ("annotation/geometry",saveGeometry ());
 
   if (button_role == QDialogButtonBox::ApplyRole ||
       button_role == QDialogButtonBox::AcceptRole)
     {
       get_gui_props ();
     }
 
   if (button_role == QDialogButtonBox::RejectRole ||
diff --git a/libgui/src/octave-gui.cc b/libgui/src/octave-gui.cc
--- a/libgui/src/octave-gui.cc
+++ b/libgui/src/octave-gui.cc
@@ -117,45 +117,47 @@ octave_start_gui (int argc, char *argv[]
   QApplication application (argc, argv);
   QTranslator gui_tr, qt_tr, qsci_tr;
 
   // Set the codec for all strings (before wizard)
 #if ! defined (Q_OS_WIN32)
   QTextCodec::setCodecForCStrings (QTextCodec::codecForName ("UTF-8"));
 #endif
 
+  // show wizard if this is the first run
+  if (resource_manager::is_first_run ())
+    {
+      // before wizard
+      resource_manager::config_translators (&qt_tr, &qsci_tr, &gui_tr);
+      application.installTranslator (&qt_tr);
+      application.installTranslator (&gui_tr);
+      if (start_gui)
+        application.installTranslator (&qsci_tr);
+
+      welcome_wizard welcomeWizard;
+
+      if (welcomeWizard.exec () == QDialog::Rejected)
+        exit (1);
+
+      resource_manager::reload_settings ();  // install settings file
+    }
+  else
+    {
+      resource_manager::reload_settings ();  // get settings file
+
+      // after settings
+      resource_manager::config_translators (&qt_tr, &qsci_tr, &gui_tr);
+      application.installTranslator (&qt_tr);
+      application.installTranslator (&gui_tr);
+      if (start_gui)
+        application.installTranslator (&qsci_tr);
+    }
+
   if (start_gui)
     {
-      // show wizard if this is the first run
-      if (resource_manager::is_first_run ())
-        {
-          // before wizard
-          resource_manager::config_translators (&qt_tr, &qsci_tr, &gui_tr);
-          application.installTranslator (&qt_tr);
-          application.installTranslator (&qsci_tr);
-          application.installTranslator (&gui_tr);
-
-          welcome_wizard welcomeWizard;
-
-          if (welcomeWizard.exec () == QDialog::Rejected)
-            exit (1);
-
-          resource_manager::reload_settings ();  // install settings file
-        }
-      else
-        {
-          resource_manager::reload_settings ();  // get settings file
-
-          // after settings
-          resource_manager::config_translators (&qt_tr, &qsci_tr, &gui_tr);
-          application.installTranslator (&qt_tr);
-          application.installTranslator (&qsci_tr);
-          application.installTranslator (&gui_tr);
-        }
-
       // update network-settings
       resource_manager::update_network_settings ();
 
 #if ! defined (__WIN32__) || defined (__CYGWIN__)
       // If we were started from a launcher, TERM might not be
       // defined, but we provide a terminal with xterm
       // capabilities.
 
@@ -173,20 +175,20 @@ octave_start_gui (int argc, char *argv[]
       // shortcut manager
       shortcut_manager::init_data ();
     }
 
   // Create and show main window.
 
   main_window w (0, start_gui);
 
-  w.read_settings ();
-
   if (start_gui)
     {
+      w.read_settings ();
+
       w.init_terminal_size ();
 
       // Connect signals for changes in visibility not before w
       // is shown.
 
       w.connect_visibility_changed ();
 
       w.focus_command_window ();
