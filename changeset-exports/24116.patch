# HG changeset patch
# User Mike Miller <mtmiller@octave.org>
# Date 1506639321 25200
#      Thu Sep 28 15:55:21 2017 -0700
# Node ID e1020353fff5e50f4b9970e42178769e824d95a3
# Parent  8e3aeaf4955178db3c56bf4a02e354e60467b0d3
qz: initialize optional ordering flag safely

* qz.cc (Fqz): Initialize optional ordering flag safely so it always has a valid
value.  Add input validation check for empty string.  Silences clang compiler
warning -Wsometimes-uninitialized.

diff --git a/libinterp/corefcn/qz.cc b/libinterp/corefcn/qz.cc
--- a/libinterp/corefcn/qz.cc
+++ b/libinterp/corefcn/qz.cc
@@ -247,27 +247,27 @@ Note: @code{qz} performs permutation bal
     error ("qz: invalid number of output arguments for form 3 call");
 
 #if defined (DEBUG)
   std::cout << "qz: determine ordering option" << std::endl;
 #endif
 
   // Determine ordering option.
   // declared volatile to avoid compiler warnings about long jumps vforks.
-  volatile char ord_job;
-  double safmin;
+  volatile char ord_job = 'N';
+  double safmin = 0.0;
 
-  if (nargin == 2)
-    ord_job = 'N';
-  else
+  if (nargin == 3)
     {
       std::string opt = args(2).xstring_value ("qz: OPT must be a string");
 
-      if (! opt.empty ())
-        ord_job = std::toupper (opt[0]);
+      if (opt.empty ())
+        error ("qz: OPT must be a non-empty string");
+
+      ord_job = std::toupper (opt[0]);
 
       std::string valid_opts = "NSB+-";
 
       if (valid_opts.find_first_of (ord_job) == std::string::npos)
         error ("qz: invalid order option '%c'", ord_job);
 
       // overflow constant required by dlag2
       F77_FUNC (xdlamch, XDLAMCH) (F77_CONST_CHAR_ARG2 ("S", 1),
