# HG changeset patch
# User David Bateman <dbateman@free.fr>
# Date 1205950377 14400
#      Wed Mar 19 14:12:57 2008 -0400
# Node ID 48488cca0006b4c8e7ee8e32bcef9fa27ccce135
# Parent  90c9038170bfee594e1ee8dcdcf0b2d633615c2d
Fix for array indexing if original matrix is empty

diff --git a/liboctave/Array.cc b/liboctave/Array.cc
--- a/liboctave/Array.cc
+++ b/liboctave/Array.cc
@@ -3278,17 +3278,17 @@ assignN (Array<LT>& lhs, const Array<RT>
 		    new_dims(i) = 1;
 		}
 	      else
 		{
 		  octave_idx_type nelem = idx(i).capacity ();
 
 		  if (nelem >= 1
 		      && ((k < rhs_dims.length () && nelem == rhs_dims(k))
-			  || rhs_is_scalar))
+			  || rhs_is_scalar) || ! idx(i).is_colon())
 		    k++;
 		  else if (! (nelem == 1 || rhs_is_scalar))
 		    {
 		      (*current_liboctave_error_handler)
 			("A(IDX-LIST) = RHS: mismatched index and RHS dimension");
 		      return retval;
 		    }
 
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,10 +1,13 @@
 2008-03-19  David Bateman  <dbateman@free.fr>
 
+	* Array.cc (assignN): If orig_empty allow assignment like
+	a(1:10,1)=1:10
+
 	* Sparse.h (template <class U, class F> Sparse<U> map (F fcn)
 	const): New template function.
 	* MSparse.h (template <class U, class F> MSparse<U> map (F fcn)
 	const): ditto.
 	* dSparse.cc (SparseMatrix SparseMatrix::map (dmapper) const,
 	SparseComplexMatrix SparseMatrix::map (cmapper) const,
 	SparseBoolMatrix SparseMatrix::map (bmapper) const): Rewrite in
 	terms of the new template functor.
