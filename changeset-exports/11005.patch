# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1285032190 14400
#      Mon Sep 20 21:23:10 2010 -0400
# Node ID 0de4eff677d6b5f96ef4eea771dc32b77d834cb5
# Parent  594adb99a25ed595c8440fb87d2735cd229da552
use mktime module from gnulib

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,12 @@
+2010-09-20  John W. Eaton  <jwe@octave.org>
+
+	* bootstrap.conf (gnulib_modules): Include mktime in the list.
+
 2010-09-18  John W. Eaton  <jwe@octave.org>
 
 	* Makefile.am (BUILT_SOURCES): Include run-octave in the list.
 
 2010-09-16  John W. Eaton  <jwe@octave.org>
 
 	* configure.ac (SCRIPTS_EXE_SUFFIX) Delete variable and all uses.
 	(BUILD_COMPILED_AUX_PROGRAMS): New variable.
diff --git a/bootstrap.conf b/bootstrap.conf
--- a/bootstrap.conf
+++ b/bootstrap.conf
@@ -26,16 +26,17 @@ gnulib_modules="
   gethostname
   getopt-gnu
   gettimeofday
   glob
   link
   lstat
   mkdir
   mkfifo
+  mktime
   nanosleep
   pathmax
   progname
   readlink
   rename
   rmdir
   round
   roundf
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+2010-09-20  John W. Eaton  <jwe@octave.org>
+
+	* oct-time.cc (octave_time::octave_time, octave_strptime::init):
+	Call gnulib::mktime instead of mktime (may fix bug #31079).
+
 2010-09-15  Jaroslav Hajek  <highegg@gmail.com>
 
 	* dSparse.h (SparseMatrix::SparseMatrix (const Sparse<double>&)):
 	New ctor.
 	* CSparse.h (SparseComplexMatrix::SparseComplexMatrix 
 	(const Sparse<Complex>&)): New ctor.
 	* boolSparse.cc (SparseBoolMatrix::sum): New method.
 	* boolSparse.h: Declare it.
diff --git a/liboctave/oct-time.cc b/liboctave/oct-time.cc
--- a/liboctave/oct-time.cc
+++ b/liboctave/oct-time.cc
@@ -53,17 +53,17 @@ octave_time::octave_time (const octave_b
   t.tm_isdst = tm.isdst ();
 
 #if defined (HAVE_STRUCT_TM_TM_ZONE)
   std::string s = tm.zone ();
   char *ps = strsave (s.c_str ());
   t.tm_zone = ps;
 #endif
 
-  ot_unix_time = mktime (&t);
+  ot_unix_time = gnulib::mktime (&t);
 
 #if defined (HAVE_STRUCT_TM_TM_ZONE)
   delete [] ps;
 #endif
 
   ot_usec = tm.usec ();
 }
 
@@ -267,17 +267,17 @@ octave_strptime::init (const std::string
 
   char *q = gnulib::strptime (p, fmt.c_str (), &t);
 
   // Fill in wday and yday, but only if mday is valid and the mon and year
   // are filled in, avoiding issues with mktime and invalid dates.
   if (t.tm_mday != 0 && t.tm_mon >= 0 && t.tm_year != INT_MIN)
     {
       t.tm_isdst = -1;
-      mktime (&t);
+      gnulib::mktime (&t);
     }
 
   if (t.tm_mon < 0)
     t.tm_mon = 0;
 
   if (t.tm_year == INT_MIN)
     t.tm_year = 0;
 
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,12 @@
+2010-09-20  John W. Eaton  <jwe@octave.org>
+
+	* DLD-FUNCTIONS/time.cc (Fmktime): New tests (bug #31079).
+
 2010-09-20  John W. Eaton  <jwe@octave.org>
 
 	Bug #31085:
 
 	* file-io.cc (do_stream_open): Use fopen, fileno, and gzdopen
 	instead of gzopen.  Pass integer file id to
 	octave_zstdiostream::create.
 
diff --git a/src/DLD-FUNCTIONS/time.cc b/src/DLD-FUNCTIONS/time.cc
--- a/src/DLD-FUNCTIONS/time.cc
+++ b/src/DLD-FUNCTIONS/time.cc
@@ -274,16 +274,22 @@ mktime (localtime (time ()))\n\
 %!test
 %! t = time ();
 %! assert(fix (mktime (localtime (t))) == fix (t));
 
 %!error <Invalid call to mktime.*> mktime ();
 
 %!error <Invalid call to mktime.*> mktime (1, 2, 3);
 
+%% These tests fail on systems with mktime functions of limited
+%% intelligence:
+%!assert (datestr (datenum (1969, 1, 1), 0), "01-Jan-1969 00:00:00")
+%!assert (datestr (datenum (1901, 1, 1), 0), "01-Jan-1901 00:00:00")
+%!assert (datestr (datenum (1795, 1, 1), 0), "01-Jan-1795 00:00:00")
+
 */
 
 DEFUN_DLD (strftime, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {} strftime (@var{fmt}, @var{tm_struct})\n\
 Format the time structure @var{tm_struct} in a flexible way using the\n\
 format string @var{fmt} that contains @samp{%} substitutions\n\
 similar to those in @code{printf}.  Except where noted, substituted\n\
