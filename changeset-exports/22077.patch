# HG changeset patch
# User Mike Miller <mtmiller@octave.org>
# Date 1467997284 25200
#      Fri Jul 08 10:01:24 2016 -0700
# Node ID df50d42d4b1b12f88508e12c050d9e897795d452
# Parent  d9643bc3792ab603d9fe92fc4fe617aadded099c
build: build doc-cache and DOCSTRINGS files in the build dir

* libinterp/module.mk (libinterp/DOCSTRINGS): Build in the build directory,
allow vpath builds to find it in $(srcdir).
(install-built-in-docstrings): Use file in $(srcdir) if it doesn't exist in
the current directory.

* scripts/module.mk (scripts/DOCSTRINGS): Build in the build directory,
allow vpath builds to find it in $(srcdir).

* run-octave.in: Use doc-cache and DOCSTRINGS in $(srcdir) if they don't exist
in the current directory.

* doc/interpreter/mk_doc_cache.m: Add an argument for the source directory.
Apply it to each of the DOCSTRINGS input files if they don't exist in the
current directory.

* doc/interpreter/munge-texi.pl: Apply $top_srcdir to each of the DOCSTRINGS
input files if they don't exist in the current directory.

* doc/interpreter/module.mk (doc/interpreter/doc-cache): Call mk_doc_cache.m
with additional $(srcdir) argument.

diff --git a/doc/interpreter/mk_doc_cache.m b/doc/interpreter/mk_doc_cache.m
--- a/doc/interpreter/mk_doc_cache.m
+++ b/doc/interpreter/mk_doc_cache.m
@@ -11,35 +11,41 @@
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with this program; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 args = argv ();
 
-if (nargin < 2)
-  error ("usage: mk_doc_cache OUTPUT-FILE DOCSTRINGS-FILE ...");
+if (nargin < 3)
+  error ("usage: mk_doc_cache OUTPUT-FILE SRCDIR DOCSTRINGS-FILE ...");
 endif
 
 output_file = args{1};
-docstrings_files = args(2:end);
+top_srcdir = args{2};
+docstrings_files = args(3:end);
 
 ## Special character used as break between DOCSTRINGS
 doc_delim = char (0x1d);
 
 ## Read the contents of all the DOCSTRINGS files into TEXT.
 ## It is more efficient to fork to shell for makeinfo only once on large data
 
 nfiles = numel (docstrings_files);
 text = cell (1, nfiles);
 for i = 1:nfiles
   file = docstrings_files{i};
+  ## DOCSTRINGS files may exist in the current (build) directory or in the
+  ## source directory when building from a release.
   fid = fopen (file, "r");
   if (fid < 0)
+    fid = fopen (fullfile (top_srcdir, file), "r");
+  endif
+  if (fid < 0)
     error ("unable to open %s for reading", file);
   else
     tmp = fread (fid, Inf, "*char")';
     if (isempty (strfind (tmp, doc_delim)))
       ## No delimiter, copy verbatim (this is the case for the file
       ## containing macro definitions, for example).
       text{i} = tmp;
     else
diff --git a/doc/interpreter/module.mk b/doc/interpreter/module.mk
--- a/doc/interpreter/module.mk
+++ b/doc/interpreter/module.mk
@@ -285,17 +285,17 @@ doc-interpreter-dist-hook:
 	@$(GREP) '#define HAVE_QHULL 1' $(top_builddir)/config.h > /dev/null || { echo "Documentation creation requires missing QHULL library.  Cannot package distribution!" ; exit 1; }
 
 octetc_DATA += \
   doc/interpreter/doc-cache \
   doc/interpreter/macros.texi
 
 doc/interpreter/doc-cache: $(DOCSTRING_FILES) doc/interpreter/mk_doc_cache.m | $(OCTAVE_INTERPRETER_TARGETS) doc/interpreter/$(octave_dirstamp)
 	$(AM_V_GEN)rm -f $@-t $@ && \
-	$(SHELL) run-octave --norc --silent --no-history $(srcdir)/doc/interpreter/mk_doc_cache.m - $(srcdir)/doc/interpreter/macros.texi $(DOCSTRING_FILES) > $@-t && \
+	$(SHELL) run-octave --norc --silent --no-history $(srcdir)/doc/interpreter/mk_doc_cache.m - $(srcdir) $(srcdir)/doc/interpreter/macros.texi $(DOCSTRING_FILES) > $@-t && \
 	mv $@-t $@
 
 $(MUNGED_TEXI_SRC): $(DOCSTRING_FILES)
 
 ## These two texi files have an additional dependency through the
 ## @EXAMPLEFILE macro.
 doc/interpreter/oop.texi: $(examples_code_SRC)
 doc/interpreter/external.texi: $(examples_code_SRC)
diff --git a/doc/interpreter/munge-texi.pl b/doc/interpreter/munge-texi.pl
--- a/doc/interpreter/munge-texi.pl
+++ b/doc/interpreter/munge-texi.pl
@@ -11,17 +11,22 @@ die "usage: munge-texi TOP-SRCDIR DOCSTR
 $comment_line = qr/^\s*(?:$|#)/;
 # Pre-declare hash size for efficiency
 keys(%help_text) = 1800;
 
 ################################################################################
 # Load DOCSTRINGS into memory while expanding @seealso references
 foreach $DOCSTRING_file (@ARGV)
 {
-  open (DOCFH, $DOCSTRING_file) or die "Unable to open $DOCSTRING_file\n";
+  ## DOCSTRINGS files may exist in the current (build) directory or in the
+  ## source directory when building from a release.
+  $DOCSTRING_file_srcdir = "$top_srcdir/$DOCSTRING_file";
+
+  open (DOCFH, $DOCSTRING_file) or open (DOCFH, $DOCSTRING_file_srcdir)
+    or die "Unable to open $DOCSTRING_file\n";
 
   # Skip comments
   while (defined ($_ = <DOCFH>) and /$comment_line/o) {;}
 
   # Validate DOCSTRING file format
   die "invalid doc file format\n" if (! /$doc_delim/o);
 
   do
diff --git a/libinterp/module.mk b/libinterp/module.mk
--- a/libinterp/module.mk
+++ b/libinterp/module.mk
@@ -74,17 +74,17 @@ LIBINTERP_BUILT_NODISTFILES = \
   libinterp/corefcn/graphics-props.cc \
   libinterp/corefcn/graphics.h \
   libinterp/builtin-defun-decls.h \
   libinterp/operators/ops.cc \
   libinterp/version.h \
   libinterp/builtins.cc
 
 libinterp_EXTRA_DIST += \
-  $(srcdir)/libinterp/DOCSTRINGS \
+  libinterp/DOCSTRINGS \
   libinterp/build-env.in.cc \
   libinterp/build-env-features.sh \
   libinterp/find-defun-files.sh \
   libinterp/gendoc.pl \
   libinterp/genprops.awk \
   libinterp/liboctinterp-build-info.in.cc \
   libinterp/mk-errno-list \
   libinterp/mk-pkg-add \
@@ -266,19 +266,19 @@ if AMCOND_ENABLE_DYNAMIC_LINKING
 DLDFCN_PKG_ADD_FILE = libinterp/dldfcn/PKG_ADD
 
 libinterp/dldfcn/PKG_ADD: $(DLDFCN_DEFUN_FILES) libinterp/mk-pkg-add | libinterp/$(octave_dirstamp)
 	$(AM_V_GEN)rm -f $@-t && \
 	$(SHELL) $(srcdir)/libinterp/mk-pkg-add "$(srcdir)" $(DLDFCN_DEFUN_FILES) > $@-t && \
 	mv $@-t $@
 endif
 
-DOCSTRING_FILES += $(srcdir)/libinterp/DOCSTRINGS
+DOCSTRING_FILES += libinterp/DOCSTRINGS
 
-$(srcdir)/libinterp/DOCSTRINGS: $(ALL_DEFUN_FILES) | libinterp/$(octave_dirstamp)
+libinterp/DOCSTRINGS: $(ALL_DEFUN_FILES) | libinterp/$(octave_dirstamp)
 	$(AM_V_GEN)rm -f libinterp/DOCSTRINGS-t && \
 	$(PERL) $(srcdir)/libinterp/gendoc.pl "$(srcdir)" $(ALL_DEFUN_FILES) > libinterp/DOCSTRINGS-t && \
 	$(call move_if_change_rule,libinterp/DOCSTRINGS-t,$@)
 
 OCTAVE_INTERPRETER_TARGETS += \
   $(OCT_FILES) \
   $(DLDFCN_PKG_ADD_FILE)
 
@@ -315,17 +315,19 @@ uninstall-oct:
 	  rm -f $(DESTDIR)$(octfiledir)/$$f; \
 	done
 	rm -f $(DESTDIR)$(octfiledir)/PKG_ADD
 endif
 .PHONY: install-oct uninstall-oct
 
 install-built-in-docstrings:
 	$(MKDIR_P) $(DESTDIR)$(octetcdir)
-	$(INSTALL_DATA) $(srcdir)/libinterp/DOCSTRINGS $(DESTDIR)$(octetcdir)/built-in-docstrings
+	f=libinterp/DOCSTRINGS; \
+	  if test -f $$f; then d=; else d="$(srcdir)/"; fi; \
+	  $(INSTALL_DATA) "$$d$$f" $(DESTDIR)$(octetcdir)/built-in-docstrings
 .PHONY: install-built-in-docstrings
 
 uninstall-built-in-docstrings:
 	rm -f $(DESTDIR)$(octetcdir)/built-in-docstrings
 .PHONY: uninstall-built-in-docstrings
 
 EXTRA_DIST += $(libinterp_EXTRA_DIST)
 
@@ -333,17 +335,17 @@ libinterp_CLEANFILES += \
   $(DLDFCN_PKG_ADD_FILE) \
   $(LIBINTERP_BUILT_NODISTFILES) \
   $(LIBINTERP_TST_FILES) \
   $(OCT_FILES) \
   libinterp/corefcn/oct-tex-parser.output \
   libinterp/parse-tree/oct-parse.output
 
 libinterp_MAINTAINERCLEANFILES += \
-  $(srcdir)/libinterp/DOCSTRINGS \
+  libinterp/DOCSTRINGS \
   $(LIBINTERP_BUILT_DISTFILES)
 
 BUILT_DISTFILES += $(LIBINTERP_BUILT_DISTFILES)
 BUILT_NODISTFILES += $(LIBINTERP_BUILT_NODISTFILES)
 
 CLEANFILES += $(libinterp_CLEANFILES)
 DISTCLEANFILES += $(libinterp_DISTCLEANFILES)
 MAINTAINERCLEANFILES += $(libinterp_MAINTAINERCLEANFILES)
diff --git a/run-octave.in b/run-octave.in
--- a/run-octave.in
+++ b/run-octave.in
@@ -46,17 +46,17 @@ d2_path=`echo "$d2_list" | $AWK '{ t = (
 d3_path=`echo "$d3_list" | $AWK '{ t = (s $0); s = t; } END { sub (/:$/, "", s); print s; }'`
 d4_path=`echo "$d4_list" | $AWK '{ t = (s $0); s = t; } END { sub (/:$/, "", s); print s; }'`
 
 octave_executable="$builddir/src/octave"
 
 LOADPATH="$d1_path:$d2_path:$d3_path:$d4_path"
 IMAGEPATH="$top_srcdir/scripts/image"
 DOCFILE="$builddir/doc/interpreter/doc-cache"
-BUILT_IN_DOCSTRINGS_FILE="$top_srcdir/libinterp/DOCSTRINGS"
+BUILT_IN_DOCSTRINGS_FILE="$builddir/libinterp/DOCSTRINGS"
 TEXIMACROSFILE="$top_srcdir/doc/interpreter/macros.texi"
 INFOFILE="$top_srcdir/doc/interpreter/octave.info"
 
 ## Checking for string equality below with prepended x's in order to
 ## handle problems with empty strings.
 while [ $# -gt 0 ]; do
   if [ "x$1" = "x-g" ]; then
     driver="gdb --args"
@@ -82,16 +82,25 @@ while [ $# -gt 0 ]; do
   elif [ "x$1" = "x-cli" ]; then
     octave_executable="$builddir/src/octave-cli"
     shift
   else
     break
   fi
 done
 
+## DOCSTRINGS and doc-cache files may exist in the current (build) directory
+## or in the source directory when building from a release.
+if ! [ -e $DOCFILE ]; then
+  DOCFILE="$top_srcdir/doc/interpreter/doc-cache"
+fi
+if ! [ -e $BUILT_IN_DOCSTRINGS_FILE ]; then
+  BUILT_IN_DOCSTRINGS_FILE="$top_srcdir/libinterp/DOCSTRINGS"
+fi
+
 ## We set OCTAVE_ARCHLIBDIR so that the wrapper program can find the
 ## octave-gui program in the build tree.  That will fail if we ever
 ## need Octave to find other things in ARCHLIBDIR that are not built
 ## in the $builddir/src directory.
 
 OCTAVE_ARCHLIBDIR="$builddir/src"; export OCTAVE_ARCHLIBDIR
 OCTAVE_BINDIR="$builddir/src"; export OCTAVE_BINDIR
 OCTAVE_DEFAULT_QT_SETTINGS="$builddir/libgui/default-qt-settings"; export OCTAVE_DEFAULT_QT_SETTINGS
diff --git a/scripts/module.mk b/scripts/module.mk
--- a/scripts/module.mk
+++ b/scripts/module.mk
@@ -98,19 +98,19 @@ endef
 
 define GEN_FCN_FILES_TEMPLATE
 $(1): $(1:.m=.in.m) build-aux/subst-config-vals.sh $(dir $(1))$(octave_dirstamp)
 	$$(AM_V_GEN)$$(call simple-filter-rule,build-aux/subst-config-vals.sh)
 endef
 
 $(foreach f, $(GEN_FCN_FILES), $(eval $(call GEN_FCN_FILES_TEMPLATE, $(f))))
 
-DOCSTRING_FILES += $(srcdir)/scripts/DOCSTRINGS
+DOCSTRING_FILES += scripts/DOCSTRINGS
 
-$(srcdir)/scripts/DOCSTRINGS: $(FCN_FILES) $(GEN_FCN_FILES_IN) | scripts/$(octave_dirstamp)
+scripts/DOCSTRINGS: $(FCN_FILES) $(GEN_FCN_FILES_IN) | scripts/$(octave_dirstamp)
 	$(AM_V_GEN)rm -f scripts/DOCSTRINGS-t && \
 	$(PERL) $(srcdir)/scripts/mkdoc.pl "$(srcdir)" $(FCN_FILES) $(GEN_FCN_FILES_IN) > scripts/DOCSTRINGS-t && \
 	$(call move_if_change_rule,scripts/DOCSTRINGS-t,$@)
 
 DIRSTAMP_FILES += scripts/$(octave_dirstamp)
 
 check-m-sources:
 	@echo "checking whether files in source tree are listed in module.mk files..."; \
@@ -177,31 +177,31 @@ else
 scripts-dist-hook:
 	@echo "Packaging distribution requires Java." ; exit 1;
 endif
 
 scripts_EXTRA_DIST += \
   $(SCRIPTS_IMAGES) \
   $(FCN_FILES) \
   $(GEN_FCN_FILES_IN) \
-  $(srcdir)/scripts/DOCSTRINGS \
+  scripts/DOCSTRINGS \
   scripts/mkdoc.pl \
   scripts/mk-pkg-add
 
 EXTRA_DIST += $(scripts_EXTRA_DIST)
 
 scripts_CLEANFILES += \
   $(GEN_FCN_FILES) \
   $(PKG_ADD_FILES)
 
 scripts_DISTCLEANFILES += \
   $(DIRSTAMP_FILES)
 
 scripts_MAINTAINERCLEANFILES += \
-  $(srcdir)/scripts/DOCSTRINGS
+  scripts/DOCSTRINGS
 
 CLEANFILES += $(scripts_CLEANFILES)
 DISTCLEANFILES += $(scripts_DISTCLEANFILES)
 MAINTAINERCLEANFILES += $(scripts_MAINTAINERCLEANFILES)
 
 scripts-clean:
 	rm -f $(scripts_CLEANFILES)
 
