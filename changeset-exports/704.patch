# HG changeset patch
# User jwe
# Date 779597229 0
#      Thu Sep 15 02:47:09 1994 +0000
# Node ID 250fc1c93fe2906479daa61eb99969593a5bfc8c
# Parent  21cc5b9b9ed6e0c424e998f2c2ca07602020b544
[project @ 1994-09-15 02:44:42 by jwe]

diff --git a/src/pt-exp-base.cc b/src/pt-exp-base.cc
--- a/src/pt-exp-base.cc
+++ b/src/pt-exp-base.cc
@@ -38,16 +38,17 @@ Software Foundation, 675 Mass Ave, Cambr
 #include <strstream.h>
 #include <string.h>
 #include <limits.h>
 #include <ctype.h>
 #include <stdio.h>
 
 #include "variables.h"
 #include "user-prefs.h"
+#include "dynamic-ld.h"
 #include "help.h"
 #include "error.h"
 #include "pager.h"
 #include "tree-base.h"
 #include "tree-expr.h"
 #include "tree-misc.h"
 #include "tree-const.h"
 #include "input.h"
@@ -1918,65 +1919,74 @@ tree_builtin::tree_builtin (const char *
 tree_builtin::tree_builtin (int i_max, int o_max, Mapper_fcn& m_fcn,
 			    const char *nm)
 {
   nargin_max = i_max;
   nargout_max = o_max;
   mapper_fcn = m_fcn;
   is_mapper = 1;
   fcn = 0;
-  if (nm)
-    my_name = strsave (nm);
+  my_name = nm ? strsave (nm) : 0;
 }
 
 tree_builtin::tree_builtin (int i_max, int o_max, Octave_builtin_fcn g_fcn,
 			    const char *nm)
 {
   nargin_max = i_max;
   nargout_max = o_max;
   is_mapper = 0;
   fcn = g_fcn;
-  if (nm)
-    my_name = strsave (nm);
+  my_name = nm ? strsave (nm) : 0;
 }
 
 tree_constant
 tree_builtin::eval (int print)
 {
   tree_constant retval;
 
   if (error_state)
     return retval;
 
   if (fcn)
     {
+    eval_fcn:
+
       Octave_object args;
       args(0) = tree_constant (my_name);
       Octave_object tmp = (*fcn) (args, 1);
       if (tmp.length () > 0)
 	retval = tmp(0);
     }
-  else // Assume mapper function
-    ::error ("%s: argument expected", my_name);
+  else
+    {
+      fcn = load_octave_builtin (my_name);
+
+      if (fcn)
+	goto eval_fcn;
+      else
+	error ("unable to load builtin function %s", my_name);
+    }
 
   return retval;
 }
 
 Octave_object
 tree_builtin::eval (int print, int nargout, const Octave_object& args)
 {
   Octave_object retval;
 
   if (error_state)
     return retval;
 
   int nargin = args.length ();
 
   if (fcn)
     {
+    eval_fcn:
+
       if (any_arg_is_magic_colon (args))
 	::error ("invalid use of colon in function argument list");
       else
 	retval = (*fcn) (args, nargout);
     }
   else if (is_mapper)
     {
       if (nargin > nargin_max)
@@ -1984,17 +1994,24 @@ tree_builtin::eval (int print, int nargo
       else if (nargin > 0 && args.length () > 0 && args(1).is_defined ())
 	{
 	  tree_constant tmp = args(1).mapper (mapper_fcn, 0);
 	  retval.resize (1);
 	  retval(0) = tmp;
 	}	
     }
   else
-    panic_impossible ();
+    {
+      fcn = load_octave_builtin (my_name);
+
+      if (fcn)
+	goto eval_fcn;
+      else
+	error ("unable to load builtin function %s", my_name);
+    }
 
   return retval;
 }
 
 int
 tree_builtin::max_expected_args (void)
 {
   int ea = nargin_max;
diff --git a/src/variables.cc b/src/variables.cc
--- a/src/variables.cc
+++ b/src/variables.cc
@@ -37,16 +37,17 @@ Software Foundation, 675 Mass Ave, Cambr
 #include <unistd.h>
 #endif
 #include <float.h>
 #include <string.h>
 #include <strstream.h>
 
 #include "defaults.h"
 #include "version.h"
+#include "dynamic-ld.h"
 #include "octave-hist.h"
 #include "unwind-prot.h"
 #include "variables.h"
 #include "user-prefs.h"
 #include "statdefs.h"
 #include "tree-base.h"
 #include "tree-expr.h"
 #include "tree-const.h"
@@ -614,36 +615,32 @@ parse_fcn_file (int exec_script, char *f
 
 static int
 load_fcn_from_file (symbol_record *sym_rec, int exec_script)
 {
   int script_file_executed = 0;
 
   char *nm = sym_rec->name ();
 
+// This is needed by yyparse.
+
   curr_fcn_file_name = nm;
 
-  char *oct_file = oct_file_in_path (curr_fcn_file_name);
-
-  int loaded_oct_file = 0;
-
-  if (oct_file)
-    {
-      cerr << "found: " << oct_file << "\n";
+#ifdef WITH_DLD
 
-      delete [] oct_file;
+  if (load_octave_oct_file (nm))
+    {
+      force_link_to_function (nm);
+    }
+  else
 
-// XXX FIXME XXX -- this is where we try to link to an external
-// object...
-      loaded_oct_file = 1;
-    }
+#endif
 
-  if (! loaded_oct_file)
     {
-      char *ff = fcn_file_in_path (curr_fcn_file_name);
+      char *ff = fcn_file_in_path (nm);
 
       if (ff)
 	{
 	  script_file_executed = parse_fcn_file (exec_script, ff);
 	  delete [] ff;
 	}
 
       if (! (error_state || script_file_executed))
