# HG changeset patch
# User jwe
# Date 811219868 0
#      Sat Sep 16 02:51:08 1995 +0000
# Node ID afde7233c4dc6a52a74088526c4ade8a31e4fb51
# Parent  3b77015d7f42173a043ed934bd6ae7ab092b3b07
[project @ 1995-09-16 02:49:27 by jwe]

diff --git a/src/user-prefs.cc b/src/user-prefs.cc
--- a/src/user-prefs.cc
+++ b/src/user-prefs.cc
@@ -372,41 +372,29 @@ split_long_rows (void)
 }
 
 
 // How many levels of structure elements should we print?
 
 int
 struct_levels_to_print (void)
 {
-  int status = 0;
-
-  static int kludge = 0;
-
   double val;
   if (builtin_real_scalar_variable ("struct_levels_to_print", val) == 0
       && ! xisnan (val))
     {
       int ival = NINT (val);
       if (ival >= 0 && (double) ival == val)
 	{
 	  user_pref.struct_levels_to_print = ival;
-	  return status;
+	  return 0;
 	}
     }
-
-  if (kludge == 0)
-    kludge++;
-  else
-    {
-      gripe_invalid_value_specified ("struct_levels_to_print");
-      status = -1;
-    }
-
-  return status;
+  gripe_invalid_value_specified ("struct_levels_to_print");
+  return -1;
 }
 
 
 // Suppress printing of additional help message in help and usage
 // functions?
 
 int
 suppress_verbose_help_message (void)
@@ -544,101 +532,65 @@ whitespace_in_literal_matrix (void)
   user_pref.whitespace_in_literal_matrix = pref;
   return 0;
 }
 
 
 int
 set_output_max_field_width (void)
 {
-  int status = 0;
-
-  static int kludge = 0;
-
   double val;
   if (builtin_real_scalar_variable ("output_max_field_width", val) == 0
       && ! xisnan (val))
     {
       int ival = NINT (val);
       if (ival > 0 && (double) ival == val)
 	{
 	  user_pref.output_max_field_width = ival;
-	  return status;
+	  return 0;
 	}
     }
-
-  if (kludge == 0)
-    kludge++;
-  else
-    {
-      gripe_invalid_value_specified ("output_max_field_width");
-      status = -1;
-    }
-
-  return status;
+  gripe_invalid_value_specified ("output_max_field_width");
+  return -1;
 }
 
 int
 set_output_precision (void)
 {
-  int status = 0;
-
-  static int kludge = 0;
-
   double val;
   if (builtin_real_scalar_variable ("output_precision", val) == 0
       && ! xisnan (val))
     {
       int ival = NINT (val);
       if (ival >= 0 && (double) ival == val)
 	{
 	  user_pref.output_precision = ival;
-	  return status;
+	  return 0;
 	}
     }
-
-  if (kludge == 0)
-    kludge++;
-  else
-    {
-      gripe_invalid_value_specified ("output_precision");
-      status = -1;
-    }
-
-  return status;
+  gripe_invalid_value_specified ("output_precision");
+  return -1;
 }
 
 int
 set_save_precision (void)
 {
-  int status = 0;
-
-  static int kludge = 0;
-
   double val;
   if (builtin_real_scalar_variable ("save_precision", val) == 0
       && ! xisnan (val))
     {
       int ival = NINT (val);
       if (ival >= 0 && (double) ival == val)
 	{
 	  user_pref.save_precision = ival;
-	  return status;
+	  return 0;
 	}
     }
-
-  if (kludge == 0)
-    kludge++;
-  else
-    {
-      gripe_invalid_value_specified ("save_precision");
-      status = -1;
-    }
-
-  return status;
+  gripe_invalid_value_specified ("save_precision");
+  return -1;
 }
 
 int
 sv_editor (void)
 {
   int status = 0;
 
   char *s = builtin_string_variable ("EDITOR");
