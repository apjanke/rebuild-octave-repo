# HG changeset patch
# User Rik <rik@octave.org>
# Date 1538066272 25200
#      Thu Sep 27 09:37:52 2018 -0700
# Node ID 7d3f666d0ef80c5eab1b07e1a4fc2b89778962f4
# Parent  06c41d1ae5b1d8bfc36823f5e5babaac708a1f9f
Implement "characters" Units property for root figure (bug #54742).

* graphics.cc (root_figure::properties::update_units): Update if/else if tree
to have null case for "pixels" at the start.  This short-circuits the rest of
if/else tree which is often unnecessary.  Add new else if clause for
"characters" which converts screensize to characters assuming Helvetica 10pt
base font.  Add BIST test for new Units value.

diff --git a/libinterp/corefcn/graphics.cc b/libinterp/corefcn/graphics.cc
--- a/libinterp/corefcn/graphics.cc
+++ b/libinterp/corefcn/graphics.cc
@@ -3800,43 +3800,57 @@ void
 root_figure::properties::update_units (void)
 {
   std::string xunits = get_units ();
 
   Matrix scrn_sz = default_screensize ();
 
   double dpi = get_screenpixelsperinch ();
 
-  if (xunits == "inches")
+  if (xunits == "pixels")
+    {
+      // Most common case (default).
+      // Don't need to convert anything, but short-circuit if/else tree.
+    }
+  else if (xunits == "normalized")
+    {
+      scrn_sz = Matrix (1, 4, 1.0);
+      scrn_sz(0) = 0;
+      scrn_sz(1) = 0;
+    }
+  else if (xunits == "inches")
     {
       scrn_sz(0) = 0;
       scrn_sz(1) = 0;
       scrn_sz(2) /= dpi;
       scrn_sz(3) /= dpi;
     }
   else if (xunits == "centimeters")
     {
       scrn_sz(0) = 0;
       scrn_sz(1) = 0;
       scrn_sz(2) *= 2.54 / dpi;
       scrn_sz(3) *= 2.54 / dpi;
     }
-  else if (xunits == "normalized")
-    {
-      scrn_sz = Matrix (1, 4, 1.0);
-      scrn_sz(0) = 0;
-      scrn_sz(1) = 0;
-    }
   else if (xunits == "points")
     {
       scrn_sz(0) = 0;
       scrn_sz(1) = 0;
       scrn_sz(2) *= 72 / dpi;
       scrn_sz(3) *= 72 / dpi;
     }
+  else if (xunits == "characters")
+    {
+      scrn_sz(0) = 0;
+      scrn_sz(1) = 0;
+      // FIXME: this assumes the system font is Helvetica 10pt
+      //        (for which "x" requires 6x12 pixels at 74.951 pixels/inch)
+      scrn_sz(2) *= 74.951 / 12.0 / dpi;
+      scrn_sz(3) *= 74.951 / 12.0 / dpi;
+    }
 
   set_screensize (scrn_sz);
 }
 
 Matrix
 root_figure::properties::get_boundingbox (bool, const Matrix&) const
 {
   Matrix screen_size = screen_size_pixels ();
@@ -3860,16 +3874,18 @@ root_figure::properties::get_boundingbox
 %!   set (0, "units", "centimeters");
 %!   assert (get (0, "screensize"), sz / dpi * 2.54, 0.5 / dpi * 2.54);
 %!   set (0, "units", "points");
 %!   assert (get (0, "screensize"), sz / dpi * 72, 0.5 / dpi * 72);
 %!   set (0, "units", "normalized");
 %!   assert (get (0, "screensize"), [0.0, 0.0, 1.0, 1.0]);
 %!   set (0, "units", "pixels");
 %!   assert (get (0, "screensize"), sz + [1, 1, 0, 0]);
+%!   set (0, "units", "characters");
+%!   assert (get (0, "screensize"), sz / dpi * (74.951 / 12.0), 0.5 / dpi * (74.951 / 12.0));
 %! unwind_protect_cleanup
 %!   set (0, "units", old_units);
 %! end_unwind_protect
 */
 
 void
 root_figure::properties::remove_child (const graphics_handle& h)
 {
