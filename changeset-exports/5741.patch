# HG changeset patch
# User jwe
# Date 1144265315 0
#      Wed Apr 05 19:28:35 2006 +0000
# Node ID 07421c4e0312972aff8fa513f891912535a29d21
# Parent  b2637e696bb432e3afc823d30a4192e23dbe4ffe
[project @ 2006-04-05 19:28:35 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,15 @@
+2006-04-05  John W. Eaton  <jwe@octave.org>
+
+	* plot/__plt2__.m: Return data = [] and fmtstr = "" if x1 and x2
+	are both empty.
+	* plot/__plt__.m: Ignore empty data and format strings returned
+	from __plt1__ or __plt2__.
+
 2006-04-04  Bob Weigel  <rweigel@gmu.edu>
 
         * scripts/set/unique.m: Properly handle single column input when
 	"rows" is specified.
 
 2006-04-04  John W. Eaton  <jwe@octave.org>
 
 	* path/setpath.m: New file.
diff --git a/scripts/plot/__plt2__.m b/scripts/plot/__plt2__.m
--- a/scripts/plot/__plt2__.m
+++ b/scripts/plot/__plt2__.m
@@ -62,13 +62,16 @@ function [data, fmtstr] = __plt2__ (x1, 
   elseif (ismatrix (x1))
     if (isvector (x2))
       [data, fmtstr] = __plt2mv__ (x1, x2, fmt);
     elseif (ismatrix (x2))
       [data, fmtstr] = __plt2mm__ (x1, x2, fmt);
     else
       error ("__plt2__: invalid data for plotting");
     endif
+  elseif (isempty (x1) && isempty (x2))
+    data = [];
+    fmtstr = "";
   else
     error ("__plt2__: invalid data for plotting");
   endif
 
 endfunction
diff --git a/scripts/plot/__plt__.m b/scripts/plot/__plt__.m
--- a/scripts/plot/__plt__.m
+++ b/scripts/plot/__plt__.m
@@ -51,31 +51,39 @@ function __plt__ (caller, varargin)
       endif
 
       have_data = false;
 
       if (ischar (next_arg))
 	if (x_set)
 	  fmt = __pltopt__ (caller, next_arg);
 	  if (y_set)
-	    [__plot_data__{__current_figure__}{__multiplot_xi__,__multiplot_yi__}{j}, fmtstr] = __plt2__ (x, y, fmt);
+	    [tdata, tfmtstr] = __plt2__ (x, y, fmt);
 	  else
-	    [__plot_data__{__current_figure__}{__multiplot_xi__,__multiplot_yi__}{j}, fmtstr] = __plt1__ (x, fmt);
+	    [tdata, tfmtstr] = __plt1__ (x, fmt);
 	  endif
-	  have_data = true;
+	  if (! isempty (tdata))
+	    __plot_data__{__current_figure__}{__multiplot_xi__,__multiplot_yi__}{j} = tdata;
+	    fmtstr = tfmtstr;
+	    have_data = true;
+	  endif
 	  x_set = false;
 	  y_set = false;
 	else
 	  error ("plot: no data to plot");
 	endif
       elseif (x_set)
 	if (y_set)
 	  fmt = __pltopt__ (caller, "");
-	  [__plot_data__{__current_figure__}{__multiplot_xi__,__multiplot_yi__}{j}, fmtstr] = __plt2__ (x, y, fmt);
-	  have_data = true;
+	  [tdata, tfmtstr] = __plt2__ (x, y, fmt);
+	  if (! isempty (tdata))
+	    __plot_data__{__current_figure__}{__multiplot_xi__,__multiplot_yi__}{j} = tdata;
+	    fmtstr = tfmtstr;
+	    have_data = true;
+	  endif
 	  x = next_arg;
 	  y_set = false;
 	else
 	  y = next_arg;
 	  y_set = true;
 	endif
       else
 	x = next_arg;
@@ -100,20 +108,20 @@ function __plt__ (caller, varargin)
 	endif
 	j++;
       endif
 
     endwhile
 
     __plot_data_offset__{__current_figure__}(__multiplot_xi__,__multiplot_yi__) = j;
 
-    if (! isempty (__plot_command__{__current_figure__}{__multiplot_xi__,__multiplot_yi__}))
-      if (__multiplot_mode__)
-	__gnuplot_raw__ ("clear\n");
-      endif
+    if (__multiplot_mode__)
+      __gnuplot_raw__ ("clear\n");
+    endif
+    if (! strcmp (__plot_command__{__current_figure__}{__multiplot_xi__,__multiplot_yi__}, "__gnuplot_plot__"))
       eval (__plot_command__{__current_figure__}{__multiplot_xi__,__multiplot_yi__});
     endif
 
   else
     msg = sprintf ("%s (y)\n", caller);
     msg = sprintf ("%s       %s (x, y, ...)\n", msg, caller);
     msg = sprintf ("%s       %s (x, y, fmt, ...)", msg, caller);
     usage (msg);
