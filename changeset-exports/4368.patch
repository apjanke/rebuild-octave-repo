# HG changeset patch
# User jwe
# Date 1047909716 0
#      Mon Mar 17 14:01:56 2003 +0000
# Node ID c45874c087c7b5f128734dc625bd8ed586425d3f
# Parent  aa04c532d69bb5a62ccb2d165f564ad6845950fc
[project @ 2003-03-17 14:01:56 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,13 @@
+2003-03-17  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* configure.in: Only complain for g++ earlier than 2.95.
+	Try harder to get version number only.
+
 2003-03-05  Paul Kienzle <pkienzle@users.sf.net>
 
 	* aclocal.m4 (OCTAVE_DYNAMIC_AUTO_ARRAYS): New macro.
 	* configure.in: Use it.
 	(AH_BOTTOM): Check HAVE_DYNAMIC_AUTO_ARRAYS instead of __GNUG__.
 
 2003-03-03  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -17,17 +17,17 @@ dnl Copyright (C) 1996, 1997 John W. Eat
 ### for more details.
 ### 
 ### You should have received a copy of the GNU General Public License
 ### along with Octave; see the file COPYING.  If not, write to the Free
 ### Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ### 02111-1307, USA. 
 
 AC_INIT
-AC_REVISION($Revision: 1.421 $)
+AC_REVISION($Revision: 1.422 $)
 AC_PREREQ(2.52)
 AC_CONFIG_SRCDIR([src/octave.cc])
 AC_CONFIG_HEADER(config.h)
 
 AC_DEFINE(OCTAVE_SOURCE, 1, [Define if this is Octave.])
   
 OCTAVE_HOST_TYPE
 
@@ -166,20 +166,20 @@ AC_DEFINE(__NO_MATH_INLINES, 1, [Define 
 EXTERN_CXXFLAGS="$CXXFLAGS"
 
 AC_PROG_CXX
 AC_PROG_CXXCPP
 
 ### Do special things for g++.
 
 gxx_version=`$CXX -v 2>&1 | grep "^.*g.. version" | \
-  sed -e 's/^.*g.. version *//' -e 's/cygnus-//' -e 's/egcs-//'`
+  sed -e 's/^.*g.. version *//' -e 's/cygnus-//' -e 's/egcs-//' -e 's/ .*//'`
 
 case "$gxx_version" in
-  1.* | 2.[[0123456789]].* | 3.0.*)
+  1.* | 2.[[012345678]].*)
     AC_MSG_ERROR([g++ version $gxx_version will probably fail to compile Octave])
   ;;
 esac
 
 CXX_VERSION=
 if test -n "$gxx_version"; then
   CXX_VERSION="$gxx_version"
 fi
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,14 @@
+2003-03-09  Duncan Temple Lang <duncan@research.bell-labs.com>
+
+	* octave.cc (octave_main): New arg, embedded.
+	* octave.h: Fix decl.
+	* main.c: Pass 0 for embedded here.
+
 2003-03-03  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* version.h (OCTAVE_VERSION): Now 2.1.46.
 
 	* oct-conf.h.in: Undo previous change.
 
 	* load-save.cc (read_mat5_binary_element): Handle structure arrays.
 	(save_mat5_binary_element): Likewise.
diff --git a/src/main.c b/src/main.c
--- a/src/main.c
+++ b/src/main.c
@@ -27,16 +27,16 @@ Software Foundation, 59 Temple Place - S
 #include "f77-fcn.h"
 #include "lo-ieee.h"
 
 #include "octave.h"
 
 int
 main (int argc, char **argv)
 {
-  return octave_main (argc, argv);
+  return octave_main (argc, argv, 0);
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
diff --git a/src/octave.cc b/src/octave.cc
--- a/src/octave.cc
+++ b/src/octave.cc
@@ -366,17 +366,17 @@ maximum_braindamage (void)
   bind_builtin_variable ("treat_neg_dim_as_zero", true);
   bind_builtin_variable ("warn_function_name_clash", false);
   bind_builtin_variable ("whitespace_in_literal_matrix", "traditional");
 }
 
 // You guessed it.
 
 int
-octave_main (int argc, char **argv)
+octave_main (int argc, char **argv, int embedded)
 {
   octave_env::set_program_name (argv[0]);
 
   dir_path::set_program_name (argv[0]);
 
   // The order of these calls is important.  The call to
   // install_defaults must come before install_builtins because
   // default variable values must be available for the variables to be
@@ -395,17 +395,18 @@ octave_main (int argc, char **argv)
     F77_FUNC (xerbla, XERBLA) ("octave", 13, 6L);
 
   initialize_error_handlers ();
 
   install_defaults ();
 
   initialize_pathsearch ();
 
-  install_signal_handlers ();
+  if (! embedded)
+    install_signal_handlers ();
 
   initialize_file_io ();
 
   initialize_symbol_tables ();
 
   install_types ();
 
   install_ops ();
@@ -582,21 +583,23 @@ octave_main (int argc, char **argv)
       else
 	clean_up_and_exit (1);
     }
   else
     {
       // Is input coming from a terminal?  If so, we are probably
       // interactive.
 
-      interactive = (isatty (fileno (stdin)) && isatty (fileno (stdout)));
+      interactive = (! embedded
+		     && isatty (fileno (stdin)) && isatty (fileno (stdout)));
 
       intern_argv (argc, argv);
 
-      switch_to_buffer (create_buffer (get_input_from_stdin ()));
+      if (! embedded)
+	switch_to_buffer (create_buffer (get_input_from_stdin ()));
     }
 
   // Force input to be echoed if not really interactive, but the user
   // has forced interactive behavior.
 
   if (! interactive && forced_interactive)
     {
       command_editor::blink_matching_paren (false);
@@ -604,16 +607,19 @@ octave_main (int argc, char **argv)
       // XXX FIXME XXX -- is this the right thing to do?
 
       bind_builtin_variable ("echo_executing_commands", ECHO_CMD_LINE);
     }
 
   if (! interactive)
     line_editing = false;
 
+  if (embedded)
+    return 1;
+
   int retval = main_loop (fun_to_call);
 
   if (retval == 1 && ! error_state)
     retval = 0;
 
   clean_up_and_exit (retval);
 
   return 0;
diff --git a/src/octave.h b/src/octave.h
--- a/src/octave.h
+++ b/src/octave.h
@@ -22,17 +22,17 @@ Software Foundation, 59 Temple Place - S
 
 #if !defined (octave_octave_h)
 #define octave_octave_h 1
 
 #ifdef	__cplusplus
 extern "C" {
 #endif
 
-extern int octave_main (int argc, char **argv);
+extern int octave_main (int argc, char **argv, int embedded);
 
 #ifdef	__cplusplus
 }
 #endif
 
 #endif
 
 /*
