# HG changeset patch
# User Ben Abbott <bpabbott@mac.com>
# Date 1287225537 -14400
#      Sat Oct 16 14:38:57 2010 +0400
# Node ID 65b240770880f71260adc8e702379795256dc605
# Parent  dcde7c5a1d293255d274d9b2808f5b974e022c08
Fix normal line and marker types for errorplots.

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2010-10-16  Ben Abbott <bpabbott@mac.com>
+
+	* plot/private/__errplot__.m, plot/errorbar.m: Allow line and marker
+	types to be set.
+
 2010-10-14  John W. Eaton  <jwe@octave.org>
 
 	* special-matrix/rosser.m: New tests.
 	* special-matrix/wilkinson.m: Fix error message.  New tests.
 	* special-matrix/pascal.m: Error if T is out of range.
 	New tests.
 
 2010-10-14  John W. Eaton  <jwe@octave.org>
diff --git a/scripts/plot/errorbar.m b/scripts/plot/errorbar.m
--- a/scripts/plot/errorbar.m
+++ b/scripts/plot/errorbar.m
@@ -47,18 +47,19 @@
 ## If @var{y} is a matrix, @var{x} and error parameters must also be matrices
 ## having same dimensions.  The columns of @var{y} are plotted versus the
 ## corresponding columns of @var{x} and errorbars are drawn from
 ## the corresponding columns of error parameters.
 ##
 ## If @var{fmt} is missing, yerrorbars ("~") plot style is assumed.
 ##
 ## If the @var{fmt} argument is supplied, it is interpreted as in
-## normal plots.  In addition the following plot styles are supported by
-## errorbar:
+## normal plots. In addition, @var{fmt} may include an errorbar style
+## which must preceed the line and marker format.  The following plot
+## styles are supported by errorbar:
 ##
 ## @table @samp
 ## @item ~
 ## Set yerrorbars plot style (default).
 ##
 ## @item >
 ## Set xerrorbars plot style.
 ##
@@ -149,19 +150,18 @@ endfunction
 %! y2 = cos (x); 
 %! hg = errorbar (x, y1, err, "~", x, y2, err, ">");
 
 %!demo
 %! x = 0:0.5:2*pi; 
 %! err = x/100; 
 %! y1 = sin (x); 
 %! y2 = cos (x); 
-%! hg = errorbar (x, y1, err, err, "#", x, y2, err, err, "#~");
+%! hg = errorbar (x, y1, err, err, "#r", x, y2, err, err, "#~");
 
 %!demo
 %! x = 0:0.5:2*pi; 
 %! err = x/100; 
 %! y1 = sin (x); 
 %! y2 = cos (x); 
 %! hg = errorbar (x, y1, err, err, err, err, "~>", ...
-%!                x, y2, err, err, err, err, "#~>");
-%! set (hg(2), "marker", "*")
+%!                x, y2, err, err, err, err, "#~>-*");
 
diff --git a/scripts/plot/private/__errplot__.m b/scripts/plot/private/__errplot__.m
--- a/scripts/plot/private/__errplot__.m
+++ b/scripts/plot/private/__errplot__.m
@@ -29,16 +29,18 @@
 function h = __errplot__ (fstr, p, varargin)
 
   if (nargin < 4 || nargin > 8) # at least two data arguments needed
     print_usage ();
   endif
 
   [fmt, key] = __pltopt__ ("__errplot__", fstr);
 
+  fmt
+
   [len, nplots] = size (varargin{1});
   h = [];
 
   for i = 1:nplots
     ## Set the plot type based on linestyle.
 
     if (strcmp (fmt.errorstyle, "~"))
       ifmt = "yerr";
@@ -48,17 +50,17 @@ function h = __errplot__ (fstr, p, varar
       ifmt = "xyerr";
     elseif (strcmp (fmt.errorstyle, "#"))
       ifmt = "box";
     elseif (strcmp (fmt.errorstyle, "#~"))
       ifmt = "boxy";
     elseif (strcmp (fmt.errorstyle, "#~>"))
       ifmt = "boxxy";
     else
-      ifmt = "~";
+      ifmt = "yerr";
     endif
 
     hg = hggroup ("parent", p);
     h = [h; hg];
     args = __add_datasource__ ("__errplot__", hg, 
                                {"x", "y", "l", "u", "xl", "xu"});
 
     if (isempty (fmt.color))
