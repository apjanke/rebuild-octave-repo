# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1226970263 18000
#      Mon Nov 17 20:04:23 2008 -0500
# Node ID 545b9f62adcfc8abc2216b75afc3b1e585f6fc2e
# Parent  b93ac0586e4bca87c524fceda96600f4df29986c
dir-ops.cc (dir_entry::read): use std::list<std::string> to cache names before converting to string_vector

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+2008-11-17  John W. Eaton  <jwe@octave.org>
+
+	* dir-ops.cc (dir_entry::read): Use std::list<std::string> to
+	cache names before converting to string_vector.
+
 2008-11-14  David Bateman  <dbateman@free.fr>
 
 	* Array2.h (Array2<T> Array2<T>::index): Correct use of
 	resize_fill_value.
 
 2008-11-12  Michael Goffioul  <michael.goffioul@gmail.com>
 
 	* MArray-C.cc, MArray-d.cc, MArray-f.cc, MArray-fC.cc: Declare
diff --git a/liboctave/dir-ops.cc b/liboctave/dir-ops.cc
--- a/liboctave/dir-ops.cc
+++ b/liboctave/dir-ops.cc
@@ -23,16 +23,19 @@ along with Octave; see the file COPYING.
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <cerrno>
 #include <cstdlib>
 #include <cstring>
 
+#include <list>
+#include <string>
+
 #include "sysdir.h"
 
 #include "dir-ops.h"
 #include "file-ops.h"
 #include "lo-error.h"
 #include "lo-sysdep.h"
 #include "str-vec.h"
 
@@ -64,50 +67,36 @@ dir_entry::open (const std::string& n)
     errmsg = "dir_entry::open: empty file name";
 
   return ! fail;
 }
 
 string_vector
 dir_entry::read (void)
 {
-  static octave_idx_type grow_size = 100;
-
-  octave_idx_type len = 0;
-
-  string_vector dirlist;
+  string_vector retval;
 
   if (ok ())
     {
-      int count = 0;
+      std::list<std::string> dirlist;
 
       struct dirent *dir_ent;
 
       while ((dir_ent = readdir (static_cast<DIR *> (dir))))
 	{
 	  if (dir_ent)
-	    {
-	      if (count >= len)
-		{
-		  len += grow_size;
-		  dirlist.resize (len);
-		}
-
-	      dirlist[count] = dir_ent->d_name;
-
-	      count++;
-	    }
+	    dirlist.push_back (dir_ent->d_name);
 	  else
 	    break;
 	}
 
-      dirlist.resize (count);
+      retval = string_vector (dirlist);
     }
 
-  return dirlist;
+  return retval;
 }
 
 void
 dir_entry::close (void)
 {
   if (dir)
     closedir (static_cast<DIR *> (dir));
 
