# HG changeset patch
# User jwe
# Date 1054748595 0
#      Wed Jun 04 17:43:15 2003 +0000
# Node ID 92be67bc9301a08550f94bf497d9641a8874bb1b
# Parent  747e1e895f7c587b63562e38666c8816f3051af3
[project @ 2003-06-04 17:43:15 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,13 @@
+2003-06-04  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* emacs/octave-mod.el (octave-variables): Eliminate
+	gnuplot_has_multiplot.
+
 2003-05-21  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* configure.in: In check for f_open in libf2c, only use
 	-L. -lconflib if we have created libconflib.a.
 
 2003-05-16  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* aclocal.m4 (OCTAVE_PROG_GPERF): Provide struct decl so -t option
diff --git a/doc/interpreter/plot.txi b/doc/interpreter/plot.txi
--- a/doc/interpreter/plot.txi
+++ b/doc/interpreter/plot.txi
@@ -344,18 +344,16 @@ supports the multiplot feature.
 
 @node Interaction with gnuplot
 @section Interaction with @code{gnuplot}
 
 @DOCSTRING(gnuplot_binary)
 
 @DOCSTRING(gnuplot_has_frames)
 
-@DOCSTRING(gnuplot_has_multiplot)
-
 @DOCSTRING(graw)
 
 @DOCSTRING(gnuplot_command_plot)
 
 @DOCSTRING(gnuplot_command_replot)
 
 @DOCSTRING(gnuplot_command_splot)
 
diff --git a/emacs/octave-mod.el b/emacs/octave-mod.el
--- a/emacs/octave-mod.el
+++ b/emacs/octave-mod.el
@@ -137,17 +137,17 @@ All Octave abbrevs start with a grave ac
     "__SEEK_END__" "__SEEK_SET__" "__argv__" "__e__" "__eps__"
     "__error_text__" "__i__" "__inf__" "__j__" "__nan__" "__pi__"
     "__program_invocation_name__" "__program_name__" "__realmax__"
     "__realmin__" "__stderr__" "__stdin__" "__stdout__" "ans" "argv"
     "automatic_replot" "beep_on_error" "completion_append_char"
     "default_return_value" "default_save_format"
     "define_all_return_values" "do_fortran_indexing" "e"
     "echo_executing_commands" "empty_list_elements_ok" "eps"
-    "error_text" "gnuplot_binary" "gnuplot_has_multiplot" "history_file"
+    "error_text" "gnuplot_binary" "history_file"
     "history_size" "ignore_function_time_stamp" "implicit_str_to_num_ok"
     "inf" "nan" "nargin" "ok_to_lose_imaginary_part"
     "output_max_field_width" "output_precision"
     "page_output_immediately" "page_screen_output" "pi"
     "prefer_column_vectors" "prefer_zero_one_indexing"
     "print_answer_id_name" "print_empty_dimensions"
     "program_invocation_name" "program_name" "propagate_empty_matrices"
     "realmax" "realmin" "resize_on_range_error"
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,17 @@
+2003-06-04  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* control/base/__stepimp__.m, control/base/nichols.m,
+	control/base/nyquist.m, miscellaneous/dump_prefs.m,
+	plot/bottom_title.m, plot/mplot.m, plot/multiplot.m,
+	plot/oneplot.m, plot/plot_border.m, plot/subplot.m,
+	plot/subwindow.m, plot/top_title.m, signal/freqz_plot.m:
+	Eliminate gnuplot_has_multiplot (assume it is always true).
+
 2003-05-14  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* Makefile.in, image/Makefile.in, startup/Makefile.in: Handle DESTDIR.
 
 2003-05-05  Andy Adler <adler@site.uottawa.ca>
 
 	* plot/hist.m: Improve performance by using different algorithms
 	depending on number of bins.
diff --git a/scripts/control/base/__stepimp__.m b/scripts/control/base/__stepimp__.m
--- a/scripts/control/base/__stepimp__.m
+++ b/scripts/control/base/__stepimp__.m
@@ -219,70 +219,56 @@ function [y, t] = __stepimp__ (sitype, s
     if(nargout == 0)
       ## Plot the information
       oneplot();
       gset nogrid
       gset nologscale
       gset autoscale
       gset nokey
       clearplot();
-      if (gnuplot_has_multiplot)
-	if (IMPULSE)
-          gm = zeros(NOUT, 1);
-          tt = "impulse";
+      if (IMPULSE)
+	gm = zeros(NOUT, 1);
+	tt = "impulse";
+      else
+	ssys = ss2sys(F, G, C, D, t_step);
+	gm = dcgain(ssys);
+	tt = "step";
+      endif
+      ncols = floor(sqrt(NOUT));
+      nrows = ceil(NOUT / ncols);
+      for i = 1:NOUT
+	subplot(nrows, ncols, i);
+	title(sprintf("%s: | %s -> %s", tt,sysgetsignals(sys,"in",inp,1), ...
+		      sysgetsignals(sys,"out",i,1)));
+	if (DIGITAL)
+	  [ts, ys] = stairs(t, y(i,:));
+	  ts = ts(1:2*n-2)';  ys = ys(1:2*n-2)';
+	  if (length(gm) > 0)
+	    yy = [ys; gm(i)*ones(size(ts))];
+	  else
+	    yy = ys;
+	  endif
+	  grid("on");
+	  xlabel("time [s]");
+	  ylabel("y(t)");
+	  plot(ts, yy);
 	else
-          ssys = ss2sys(F, G, C, D, t_step);
-          gm = dcgain(ssys);
-          tt = "step";
+	  if (length(gm) > 0)
+	    yy = [y(i,:); gm(i)*ones(size(t))];
+	  else
+	    yy = y(i,:);
+	  endif
+	  grid("on");
+	  xlabel("time [s]");
+	  ylabel("y(t)");
+	  plot(t, yy);
 	endif
-	ncols = floor(sqrt(NOUT));
-	nrows = ceil(NOUT / ncols);
-	for i = 1:NOUT
-          subplot(nrows, ncols, i);
-          title(sprintf("%s: | %s -> %s", tt,sysgetsignals(sys,"in",inp,1), ...
-			sysgetsignals(sys,"out",i,1)));
-          if (DIGITAL)
-            [ts, ys] = stairs(t, y(i,:));
-            ts = ts(1:2*n-2)';  ys = ys(1:2*n-2)';
-            if (length(gm) > 0)
-              yy = [ys; gm(i)*ones(size(ts))];
-            else
-              yy = ys;
-            endif
-            grid("on");
-            xlabel("time [s]");
-            ylabel("y(t)");
-            plot(ts, yy);
-          else
-            if (length(gm) > 0)
-              yy = [y(i,:); gm(i)*ones(size(t))];
-            else
-              yy = y(i,:);
-            endif
-            grid("on");
-            xlabel("time [s]");
-            ylabel("y(t)");
-            plot(t, yy);
-          endif
-	endfor
-	## leave gnuplot in multiplot mode is bad style
-	oneplot();
-      else
-	## plot everything in one diagram
-	title([tt, " response | ", sysgetsignals(sys,"in",inp,1), ...
-               " -> all outputs"]);
-	if (DIGITAL)
-          stairs(t, y(i,:));
-	else
-          grid("on");
-          xlabel("time [s]");
-          ylabel("y(t)");
-          plot(t, y(i,:));
-	endif
-      endif
+      endfor
+      ## leave gnuplot in multiplot mode is bad style
+      oneplot();
       y=[];
       t=[];
     endif
     ## printf("##STEPIMP-DEBUG: gratulations, successfull completion.\n");
   unwind_protect_cleanup
     automatic_replot = save_automatic_replot;
   end_unwind_protect
 endfunction  
diff --git a/scripts/control/base/bode.m b/scripts/control/base/bode.m
--- a/scripts/control/base/bode.m
+++ b/scripts/control/base/bode.m
@@ -143,37 +143,31 @@ function [mag_r, phase_r, w_r] = bode (s
   mag = abs(f);
   phase = arg(f)*180.0/pi;
 
   if (nargout < 1),
     ## Plot the information
     save_automatic_replot = automatic_replot;
     unwind_protect
       automatic_replot = 0;
-      if(gnuplot_has_multiplot)
-	oneplot();
-      endif
+      oneplot();
       gset autoscale;
-      if(gnuplot_has_multiplot)
-	gset nokey;
-      endif
+      gset nokey;
       clearplot();
       gset data style lines;
       if(is_digital(sys))
 	xlstr = ["Digital frequency w=rad/sec.  pi/T=",num2str(pi/systsam)];
 	tistr = "(exp(jwT)) ";
       else
 	xlstr = "Frequency in rad/sec";
 	tistr = "(jw)";
       endif
       xlabel(xlstr);
       if(is_siso(sys))
-	if (gnuplot_has_multiplot)
-	  subplot(2,1,1);
-	endif
+	subplot(2,1,1);
 	title(["|[Y/U]",tistr,"|, u=", nth(inname,1),", y=",nth(outname,1)]);
       else
 	title([ "||Y(", tistr, ")/U(", tistr, ")||"]);
 	disp("MIMO plot from")
 	disp(__outlist__(inname,"     "));
 	disp("to")
 	disp(__outlist__(outname,"    "));
       endif
@@ -191,34 +185,28 @@ function [mag_r, phase_r, w_r] = bode (s
 
       grid("on");
       if (do_db_plot)
 	semilogx(w,md);
       else
 	loglog(w,md);
       endif
       if (is_siso(sys))
-	if (gnuplot_has_multiplot)
-	  subplot(2,1,2);
-	else
-	  prompt("Press any key for phase plot");
-	endif
+	subplot(2,1,2);
 	axvec = axis2dlim([vec(w),vec(phase)]);
 	axvec(1:2) = wv;
 	axis(axvec);
 	xlabel(xlstr);
 	ylabel("Phase in deg");
 	title([ "phase([Y/U]", tistr, ...
 	   "), u=", nth(inname,1),", y=",nth(outname,1)]);
 	grid("on");
 	semilogx(w,phase);
 	## This should be the default for subsequent plot commands.
-	if(gnuplot_has_multiplot)
-	  oneplot();
-	endif
+	oneplot();
       endif
     unwind_protect_cleanup
       automatic_replot = save_automatic_replot;
     end_unwind_protect
   else
     mag_r = mag;
     phase_r = phase;
     w_r = w;
diff --git a/scripts/control/base/nichols.m b/scripts/control/base/nichols.m
--- a/scripts/control/base/nichols.m
+++ b/scripts/control/base/nichols.m
@@ -73,23 +73,19 @@ function [mag, phase, w] = nichols (sys,
   systsam = sysgettsam(sys);
 
   ## Get the magnitude and phase of f.
   mag = abs(f);
   phase = arg(f)*180.0/pi;
 
   if (nargout < 1),
     ## Plot the information
-    if(gnuplot_has_multiplot)
-      oneplot();
-    endif
+    oneplot();
     gset autoscale;
-    if(gnuplot_has_multiplot)
-      gset nokey;
-    endif
+    gset nokey;
     clearplot();
     grid("on");
     gset data style lines;
     if(is_digital(sys))
       tistr = "(exp(jwT)) ";
     else
       tistr = "(jw)";
     endif
diff --git a/scripts/control/base/nyquist.m b/scripts/control/base/nyquist.m
--- a/scripts/control/base/nyquist.m
+++ b/scripts/control/base/nyquist.m
@@ -124,20 +124,18 @@ function [realp, imagp, w] = nyquist (sy
   ## Get the real and imaginary part of f.
   realp = real(f);
   imagp = imag(f);
 
   ## No output arguments, then display plot, otherwise return data.
   if (nargout == 0)
     dnplot = 0;
     while(!dnplot)
-      if(gnuplot_has_multiplot)
-        oneplot();
-        gset key;
-      endif
+      oneplot();
+      gset key;
       clearplot();
       grid ("on");
       gset data style lines;
 
       if(is_digital(sys))
         tstr = " G(e^{jw}) ";
       else
         tstr = " G(jw) ";
diff --git a/scripts/miscellaneous/dump_prefs.m b/scripts/miscellaneous/dump_prefs.m
--- a/scripts/miscellaneous/dump_prefs.m
+++ b/scripts/miscellaneous/dump_prefs.m
@@ -63,17 +63,16 @@ function dump_prefs (file)
               "gnuplot_command_end";
               "gnuplot_command_plot";
               "gnuplot_command_replot";
               "gnuplot_command_splot";
               "gnuplot_command_title";
               "gnuplot_command_using";
               "gnuplot_command_with";
               "gnuplot_has_frames";
-              "gnuplot_has_multiplot";
               "history_file";
               "history_size";
               "ignore_function_time_stamp";
               "implicit_num_to_str_ok";
               "implicit_str_to_num_ok";
               "initialize_global_variables";
               "max_recursion_depth";
               "ok_to_lose_imaginary_part";
diff --git a/scripts/plot/bottom_title.m b/scripts/plot/bottom_title.m
--- a/scripts/plot/bottom_title.m
+++ b/scripts/plot/bottom_title.m
@@ -22,20 +22,16 @@
 ## See top_title.
 ## @end deftypefn
 
 ## Author: Vinayak Dutt <Dutt.Vinayak@mayo.EDU>
 ## Adapted-By: jwe
 
 function bottom_title (text)
 
-  if (! gnuplot_has_multiplot)
-    error ("bottom_title: gnuplot does not appear to support this feature");
-  endif
-
   if (nargin != 1)
     usage ("bottom_title (text)");
   endif
 
   if (isstr (text))
     gset top_title;
     gset title;
     eval (sprintf ("gset bottom_title \"%s\"",
diff --git a/scripts/plot/mplot.m b/scripts/plot/mplot.m
--- a/scripts/plot/mplot.m
+++ b/scripts/plot/mplot.m
@@ -29,20 +29,16 @@
 ## See the description of the @var{plot} function for the various options.
 ## @end deftypefn
 
 ## Author: Vinayak Dutt <Dutt.Vinayak@mayo.EDU>
 ## Adapted-By: jwe
 
 function mplot (varargin)
 
-  if (! gnuplot_has_multiplot)
-    error ("mplot: gnuplot does not appear to support this feature");
-  endif
-
   ## global variables to keep track of multiplot options
 
   global __multiplot_mode__ = 0;
   global __multiplot_xsize__;
   global __multiplot_ysize__;
   global __multiplot_xn__;
   global __multiplot_yn__;
   global __multiplot_xi__;
diff --git a/scripts/plot/multiplot.m b/scripts/plot/multiplot.m
--- a/scripts/plot/multiplot.m
+++ b/scripts/plot/multiplot.m
@@ -28,20 +28,16 @@
 ## @end deftypefn
 
 ## Author: Vinayak Dutt, Dutt.Vinayak@mayo.EDU
 ## Created: 3 July 95
 ## Adapted-By: jwe
 
 function multiplot (xn, yn)
 
-  if (! gnuplot_has_multiplot)
-    error ("multiplot: gnuplot does not appear to support this feature");
-  endif
-
   ## global variables to keep track of multiplot options
 
   global __multiplot_mode__ = 0;
   global __multiplot_xsize__;
   global __multiplot_ysize__;
   global __multiplot_xn__;
   global __multiplot_yn__;
   global __multiplot_xi__;
diff --git a/scripts/plot/oneplot.m b/scripts/plot/oneplot.m
--- a/scripts/plot/oneplot.m
+++ b/scripts/plot/oneplot.m
@@ -23,23 +23,19 @@
 ## @end deftypefn
 
 ## Author: Vinayak Dutt <Dutt.Vinayak@mayo.EDU>
 ## Created: 3 July 95
 ## Adapted-By: jwe
 
 function oneplot ()
 
-  if (gnuplot_has_multiplot)
-
-    global __multiplot_mode__ = 0;
+  global __multiplot_mode__ = 0;
 
-    if (__multiplot_mode__)
-      gset nomultiplot;
-      gset size 1, 1;
-      gset origin 0, 0;
-      __multiplot_mode__ = 0;
-      gnuplot_command_replot = "rep";
-    endif
-
+  if (__multiplot_mode__)
+    gset nomultiplot;
+    gset size 1, 1;
+    gset origin 0, 0;
+    __multiplot_mode__ = 0;
+    gnuplot_command_replot = "rep";
   endif
 
 endfunction
diff --git a/scripts/plot/plot_border.m b/scripts/plot/plot_border.m
--- a/scripts/plot/plot_border.m
+++ b/scripts/plot/plot_border.m
@@ -48,20 +48,16 @@
 ## @end deftypefn
 
 ## Author: Vinayak Dutt <Dutt.Vinayak@mayo.EDU>
 ## Created: 3 July 95
 ## Adapted-By: jwe
 
 function plot_border (varargin)
 
-  if (! gnuplot_has_multiplot)
-    error ("plot_border: gnuplot does not appear to support this feature");
-  endif
-
   south = 0;
   west = 0;
   north = 0;
   east = 0;
   all = 0;
   none = 1;
 
   k = 1;
diff --git a/scripts/plot/subplot.m b/scripts/plot/subplot.m
--- a/scripts/plot/subplot.m
+++ b/scripts/plot/subplot.m
@@ -69,20 +69,16 @@
 ## @end ifinfo
 ## @end deftypefn
 
 ## Author: Vinayak Dutt <Dutt.Vinayak@mayo.EDU>
 ## Adapted-By: jwe
 
 function subplot (rows, columns, index)
 
-  if (! gnuplot_has_multiplot)
-    error ("subplot: gnuplot does not appear to support this feature");
-  endif
-
   ## global variables to keep track of multiplot options
 
   global __multiplot_mode__ = 0;
   global __multiplot_xsize__;
   global __multiplot_ysize__;
   global __multiplot_xn__;
   global __multiplot_yn__;
   global __multiplot_xi__;
diff --git a/scripts/plot/subwindow.m b/scripts/plot/subwindow.m
--- a/scripts/plot/subwindow.m
+++ b/scripts/plot/subwindow.m
@@ -26,20 +26,16 @@
 ## @end deftypefn
 
 ## Author: Vinayak Dutt <Dutt.Vinayak@mayo.EDU>
 ## Created: 3 July 95
 ## Adapted-By: jwe
 
 function subwindow (xn, yn)
 
-  if (! gnuplot_has_multiplot)
-    error ("subwindow: gnuplot does not appear to support this feature");
-  endif
-
   ## global variables to keep track of multiplot options
 
   global __multiplot_mode__ = 0;
   global __multiplot_xsize__;
   global __multiplot_ysize__;
   global __multiplot_xn__;
   global __multiplot_yn__;
 
diff --git a/scripts/plot/top_title.m b/scripts/plot/top_title.m
--- a/scripts/plot/top_title.m
+++ b/scripts/plot/top_title.m
@@ -24,20 +24,16 @@
 ## @end deftypefn
 
 ## Author: Vinayak Dutt <Dutt.Vinayak@mayo.EDU>
 ## Created: 3 July 95
 ## Adapted-By: jwe
 
 function top_title (text)
 
-  if (! gnuplot_has_multiplot)
-    error ("top_title: gnuplot does not appear to support this feature");
-  endif
-
   if (nargin != 1)
     usage ("top_title (text)");
   endif
 
   if (isstr (text))
     gset bottom_title;
     gset title;
     eval (sprintf ("gset top_title \"%s\"",
diff --git a/scripts/signal/freqz_plot.m b/scripts/signal/freqz_plot.m
--- a/scripts/signal/freqz_plot.m
+++ b/scripts/signal/freqz_plot.m
@@ -36,50 +36,40 @@ function freqz_plot(w,h)
     mag = 20 * log10 (abs (h));
     phase = unwrap (arg (h));
     maxmag = max (mag);
 
     unwind_protect
 
       ## Protect graph state.
 
-      if (gnuplot_has_multiplot)
-      	subplot (311);
-      	gset lmargin 10;
-	axis ("labely");
-	xlabel ("");
-      endif
+      subplot (311);
+      gset lmargin 10;
+      axis ("labely");
+      xlabel ("");
       grid ("on");
       axis ([ w(1), w(n), maxmag-3, maxmag ]);
       plot (w, mag, ";Pass band (dB);");
 
-      if (gnuplot_has_multiplot)
-      	subplot (312);
-	axis ("labely");
-	title ("");
-	xlabel ("");
-      	gset tmargin 0;
-      else
-	input ("press any key for the next plot: ");
-      endif
+      subplot (312);
+      axis ("labely");
+      title ("");
+      xlabel ("");
+      gset tmargin 0;
       grid ("on");
       if (maxmag - min (mag) > 100)
       	axis ([ w(1), w(n), maxmag-100, maxmag ]);
       else
       	axis ("autoy");
       endif
       plot (w, mag, ";Stop band (dB);");
       
-      if (gnuplot_has_multiplot)
-      	subplot (313);
-	axis ("label");
-	title ("");
-      else
-	input ("press any key for the next plot: ");
-      endif
+      subplot (313);
+      axis ("label");
+      title ("");
       grid ("on");
       axis ("autoy");
       xlabel ("Frequency");
       axis ([ w(1), w(n) ]);
       plot (w, phase*360/(2*pi), ";Phase (degrees);");
       
     unwind_protect_cleanup
 
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,14 @@
+2003-06-04  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* pt-plot.cc (Vgnuplot_has_multiplot): Delete variable.
+	(gnuplot_has_multiplot): Delete.
+	(symbols_of_pt_plot): Delete DEFVAR for gnuplot_has_multiplot.
+
 2003-05-28  Teemu Ikonen <tpikonen@pcu.helsinki.fi>
 
 	* load-save.cc (save_mat5_binary_element, save_mat_binary_data):
 	Allow saving of non-7-bit ASCII characters.
 
 2003-05-28  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* oct-stream.cc (FINISH_CHARACTER_CONVERSION,
diff --git a/src/pt-plot.cc b/src/pt-plot.cc
--- a/src/pt-plot.cc
+++ b/src/pt-plot.cc
@@ -67,19 +67,16 @@ Software Foundation, 59 Temple Place - S
 static bool Vautomatic_replot;
 
 // The name of the shell command to execute to start gnuplot.
 static std::string Vgnuplot_binary;
 
 // TRUE if gnuplot appears to support multiple plot windows with X11.
 static bool Vgnuplot_has_frames;
 
-// TRUE if gnuplot appears to support multiplot.
-static bool Vgnuplot_has_multiplot;
-
 // The number of lines we've plotted so far.
 static int plot_line_count = 0;
 
 // Is this a parametric plot?  Makes a difference for 3D plotting.
 static bool parametric_plot = false;
 
 // The gnuplot terminal type.
 static std::string gnuplot_terminal_type;
@@ -1267,24 +1264,16 @@ gnuplot_command_end (void)
 static int
 gnuplot_has_frames (void)
 {
   Vgnuplot_has_frames = check_preference ("gnuplot_has_frames");
 
   return 0;
 }
 
-static int
-gnuplot_has_multiplot (void)
-{
-  Vgnuplot_has_multiplot = check_preference ("gnuplot_has_multiplot");
-
-  return 0;
-}
-
 void
 symbols_of_pt_plot (void)
 {
   DEFVAR (automatic_replot, false, automatic_replot,
     "-*- texinfo -*-\n\
 @defvr {Built-in Variable} automatic_replot\n\
 You can tell Octave to redisplay the plot each time anything about it\n\
 changes by setting the value of the builtin variable\n\
@@ -1349,31 +1338,15 @@ is @code{\"gnuplot\"}.  @xref{Installati
     "-*- texinfo -*-\n\
 @defvr {Built-in Variable} gnuplot_has_frames\n\
 If the value of this variable is nonzero, Octave assumes that your copy\n\
 of gnuplot has support for multiple frames that is included in recent\n\
 3.6beta releases.  It's initial value is determined by configure, but it\n\
 can be changed in your startup script or at the command line in case\n\
 configure got it wrong, or if you upgrade your gnuplot installation.\n\
 @end defvr");
-
-#if defined (GNUPLOT_HAS_MULTIPLOT)
-  bool with_multiplot = true;
-#else
-  bool with_multiplot = false;
-#endif
-
-  DEFVAR (gnuplot_has_multiplot, with_multiplot, gnuplot_has_multiplot,
-    "-*- texinfo -*-\n\
-@defvr {Built-in Variable} gnuplot_has_multiplot\n\
-If the value of this variable is nonzero, Octave assumes that your copy\n\
-of gnuplot has the multiplot support that is included in recent\n\
-3.6beta releases.  It's initial value is determined by configure, but it\n\
-can be changed in your startup script or at the command line in case\n\
-configure got it wrong, or if you upgrade your gnuplot installation.\n\
-@end defvr");
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
