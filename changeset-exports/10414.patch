# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1268748992 -3600
#      Tue Mar 16 15:16:32 2010 +0100
# Node ID 2a8b1db1e2ca81b011bf59dbb3e362689a0041e3
# Parent  271c5262975b0c5847a7604895a2185a136e9f52
implement built-in cbrt

diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -1685,17 +1685,17 @@ case "$canonical_host_type" in
     AC_CHECK_FUNCS(_finite _isnan _copysign)
     AC_CHECK_DECLS(signbit, , , [#include <math.h>])
   ;;
 esac
 
 ### Check for nonstandard but common math functions that we need.
 
 AC_CHECK_FUNCS(acosh acoshf asinh asinhf atanh atanhf erf erff erfc erfcf exp2f log2 log2f)
-AC_CHECK_FUNCS(hypotf _hypotf)
+AC_CHECK_FUNCS(hypotf _hypotf cbrt cbrtf)
 
 ### Checks for OS specific cruft.
 
 AC_CHECK_MEMBERS([struct stat.st_blksize, struct stat.st_blocks, struct stat.st_rdev])
 
 AC_STRUCT_TIMEZONE
 AC_FUNC_CLOSEDIR_VOID
 
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,14 @@
+2010-03-16  Jaroslav Hajek  <highegg@gmail.com>
+
+	* lo-specfun.cc: Substitute cbrt and cbrtf if needed.
+	* lo-specfun.h: Declare cbrt and cbrtf if needed.
+	* configure.ac: Check for cbrt and cbrtf.
+
 2010-03-15  John W. Eaton  <jwe@octave.org>
 
 	* oct-glob.cc (octave_glob): Tag calls to glob and globfree with
 	gnulib::.
 
 	* kpse.cc (DEBUG_START, DEBUGF, FATAL_PERROR, FATAL, KPSE_DEBUG,
 	log_search, find_first_of): Tag calls to
 	fputs with gnulib::.
diff --git a/liboctave/lo-specfun.cc b/liboctave/lo-specfun.cc
--- a/liboctave/lo-specfun.cc
+++ b/liboctave/lo-specfun.cc
@@ -555,16 +555,32 @@ log1p (const Complex& x)
                         atan2 (1 + r, i));
     }
   else
     retval = std::log (Complex(1) + x);
 
   return retval;
 }
 
+#if !defined (HAVE_CBRT)
+double cbrt (double x)
+{
+  static const double one_third = 0.3333333333333333333;
+  if (xfinite (x))
+    {
+      // Use pow.
+      double y = std::pow (std::abs (x), one_third) * signum (x);
+      // Correct for better accuracy.
+      return (x / (y*y) + y + y) / 3;
+    }
+  else
+    return x;
+}
+#endif
+
 #if !defined (HAVE_LOG1PF)
 float
 log1pf (float x)
 {
   float retval;
 
   float ax = fabs (x);
 
@@ -598,16 +614,32 @@ log1p (const FloatComplex& x)
                         atan2 (1 + r, i));
     }
   else
     retval = std::log (FloatComplex(1) + x);
 
   return retval;
 }
 
+#if !defined (HAVE_CBRTF)
+float cbrtf (float x)
+{
+  static const float one_third = 0.3333333333333333333f;
+  if (xfinite (x))
+    {
+      // Use pow.
+      float y = std::pow (std::abs (x), one_third) * signum (x);
+      // Correct for better accuracy.
+      return (x / (y*y) + y + y) / 3;
+    }
+  else
+    return x;
+}
+#endif
+
 static inline Complex
 zbesj (const Complex& z, double alpha, int kode, octave_idx_type& ierr);
 
 static inline Complex
 zbesy (const Complex& z, double alpha, int kode, octave_idx_type& ierr);
 
 static inline Complex
 zbesi (const Complex& z, double alpha, int kode, octave_idx_type& ierr);
diff --git a/liboctave/lo-specfun.h b/liboctave/lo-specfun.h
--- a/liboctave/lo-specfun.h
+++ b/liboctave/lo-specfun.h
@@ -96,16 +96,24 @@ extern OCTAVE_API double log1p (double x
 #endif
 extern OCTAVE_API Complex log1p (const Complex& x);
 
 #if !defined (HAVE_LOG1PF)
 extern OCTAVE_API float log1pf (float x);
 #endif
 extern OCTAVE_API FloatComplex log1p (const FloatComplex& x);
 
+#if !defined (HAVE_CBRT)
+extern OCTAVE_API double cbrt (double x);
+#endif
+
+#if !defined (HAVE_CBRTF)
+extern OCTAVE_API float cbrtf (float x);
+#endif
+
 extern OCTAVE_API double xgamma (double x);
 extern OCTAVE_API double xlgamma (double x);
 extern OCTAVE_API Complex rc_lgamma (double x);
 
 extern OCTAVE_API float xgamma (float x);
 extern OCTAVE_API float xlgamma (float x);
 extern OCTAVE_API FloatComplex rc_lgamma (float x);
 
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,18 @@
+2010-03-16  Jaroslav Hajek  <highegg@gmail.com>
+
+	* ov-base.h (unary_mapper_t::umap_cbrt): New enum member.
+	* ov.h (octave_value::cbrt): New forwarder method.
+	* ov-scalar.cc (octave_scalar::map): Handle cbrt.
+	* ov-float.cc (octave_float_scalar::map): Ditto.
+	* ov-re-mat.cc (octave_matrix::map): Ditto.
+	* ov-flt-re-mat.cc (octave_float_matrix::map): Ditto.
+	* ov-re-sparse.cc (octave_sparse_matrix::map): Ditto.
+
 2010-03-15  John W. Eaton  <jwe@octave.org>
 
 	* oct-parse.yy, lex.ll: Undefine GNULIB_NAMESPACE immediately
 	after including <config.h>.
 
 	* toplev.cc (wait_for_input): Tag call to select with gnulib::.
 
 	* sighandlers.h (BLOCK_SIGNAL): Tag calls to sigemptyset,
diff --git a/src/mappers.cc b/src/mappers.cc
--- a/src/mappers.cc
+++ b/src/mappers.cc
@@ -346,16 +346,45 @@ Compute the inverse hyperbolic tangent f
 %! x = single([0, 0]);
 %! assert(atanh (x), v, sqrt (eps('single')));
 
 %!error atanh ();
 %!error atanh (1, 2);
 
 */
 
+DEFUN (cbrt, args, ,
+    "-*- texinfo -*-\n\
+@deftypefn {Mapping Function} {} cbrt (@var{x})\n\
+Return the real cube root of @var{x}. Unlike @code{@var{x}^(1/3)},\n\
+the result will be negative if @var{x} is negative.\n\
+@end deftypefn")
+{
+  octave_value retval;
+  if (args.length () == 1)
+    retval = args(0).cbrt ();
+  else
+    print_usage ();
+
+  return retval;
+}
+
+/*
+
+%!assert (cbrt (64), 4)
+%!assert (cbrt (-125), -5)
+%!assert (cbrt (0), 0)
+%!assert (cbrt (Inf), Inf)
+%!assert (cbrt (-Inf), -Inf)
+%!assert (cbrt (NaN), NaN)
+%!assert (cbrt (2^300), 2^100)
+%!assert (cbrt (125*2^300), 5*2^100)
+
+*/
+
 DEFUN (ceil, args, ,
     "-*- texinfo -*-\n\
 @deftypefn {Mapping Function} {} ceil (@var{x})\n\
 Return the smallest integer not less than @var{x}.  This is equivalent to\n\
 rounding towards positive infinity.  If @var{x} is\n\
 complex, return @code{ceil (real (@var{x})) + ceil (imag (@var{x})) * I}.\n\
 @example\n\
 @group\n\
diff --git a/src/ov-base.cc b/src/ov-base.cc
--- a/src/ov-base.cc
+++ b/src/ov-base.cc
@@ -1145,16 +1145,17 @@ octave_base_value::get_umap_name (unary_
       "acos",
       "acosh",
       "angle",
       "arg",
       "asin",
       "asinh",
       "atan",
       "atanh",
+      "cbrt",
       "ceil",
       "conj",
       "cos",
       "cosh",
       "erf",
       "erfinv",
       "erfc",
       "exp",
diff --git a/src/ov-base.h b/src/ov-base.h
--- a/src/ov-base.h
+++ b/src/ov-base.h
@@ -653,16 +653,17 @@ public:
       umap_acos,
       umap_acosh,
       umap_angle,
       umap_arg,
       umap_asin,
       umap_asinh,
       umap_atan,
       umap_atanh,
+      umap_cbrt,
       umap_ceil,
       umap_conj,
       umap_cos,
       umap_cosh,
       umap_erf,
       umap_erfinv,
       umap_erfc,
       umap_erfcx,
diff --git a/src/ov-float.cc b/src/ov-float.cc
--- a/src/ov-float.cc
+++ b/src/ov-float.cc
@@ -285,16 +285,17 @@ octave_float_scalar::map (unary_mapper_t
       SCALAR_MAPPER (atan, ::atanf);
       SCALAR_MAPPER (atanh, rc_atanh);
       SCALAR_MAPPER (erf, ::erff);
       SCALAR_MAPPER (erfinv, ::erfinv);
       SCALAR_MAPPER (erfc, ::erfcf);
       SCALAR_MAPPER (erfcx, ::erfcx);
       SCALAR_MAPPER (gamma, xgamma);
       SCALAR_MAPPER (lgamma, rc_lgamma);
+      SCALAR_MAPPER (cbrt, ::cbrtf);
       SCALAR_MAPPER (ceil, ::ceilf);
       SCALAR_MAPPER (cos, ::cosf);
       SCALAR_MAPPER (cosh, ::coshf);
       SCALAR_MAPPER (exp, ::expf);
       SCALAR_MAPPER (expm1, ::expm1f);
       SCALAR_MAPPER (fix, ::fix);
       SCALAR_MAPPER (floor, ::floorf);
       SCALAR_MAPPER (log, rc_log);
diff --git a/src/ov-flt-re-mat.cc b/src/ov-flt-re-mat.cc
--- a/src/ov-flt-re-mat.cc
+++ b/src/ov-flt-re-mat.cc
@@ -765,16 +765,17 @@ octave_float_matrix::map (unary_mapper_t
       ARRAY_MAPPER (atan, float, ::atanf);
       RC_ARRAY_MAPPER (atanh, FloatComplex, rc_atanh);
       ARRAY_MAPPER (erf, float, ::erff);
       ARRAY_MAPPER (erfinv, float, ::erfinv);
       ARRAY_MAPPER (erfc, float, ::erfcf);
       ARRAY_MAPPER (erfcx, float, ::erfcx);
       ARRAY_MAPPER (gamma, float, xgamma);
       RC_ARRAY_MAPPER (lgamma, FloatComplex, rc_lgamma);
+      ARRAY_MAPPER (cbrt, float, ::cbrtf);
       ARRAY_MAPPER (ceil, float, ::ceilf);
       ARRAY_MAPPER (cos, float, ::cosf);
       ARRAY_MAPPER (cosh, float, ::coshf);
       ARRAY_MAPPER (exp, float, ::expf);
       ARRAY_MAPPER (expm1, float, ::expm1f);
       ARRAY_MAPPER (fix, float, ::fix);
       ARRAY_MAPPER (floor, float, ::floorf);
       RC_ARRAY_MAPPER (log, FloatComplex, rc_log);
diff --git a/src/ov-re-mat.cc b/src/ov-re-mat.cc
--- a/src/ov-re-mat.cc
+++ b/src/ov-re-mat.cc
@@ -888,16 +888,17 @@ octave_matrix::map (unary_mapper_t umap)
       ARRAY_MAPPER (atan, double, ::atan);
       RC_ARRAY_MAPPER (atanh, Complex, rc_atanh);
       ARRAY_MAPPER (erf, double, ::erf);
       ARRAY_MAPPER (erfinv, double, ::erfinv);
       ARRAY_MAPPER (erfc, double, ::erfc);
       ARRAY_MAPPER (erfcx, double, ::erfcx);
       ARRAY_MAPPER (gamma, double, xgamma);
       RC_ARRAY_MAPPER (lgamma, Complex, rc_lgamma);
+      ARRAY_MAPPER (cbrt, double, ::cbrt);
       ARRAY_MAPPER (ceil, double, ::ceil);
       ARRAY_MAPPER (cos, double, ::cos);
       ARRAY_MAPPER (cosh, double, ::cosh);
       ARRAY_MAPPER (exp, double, ::exp);
       ARRAY_MAPPER (expm1, double, ::expm1);
       ARRAY_MAPPER (fix, double, ::fix);
       ARRAY_MAPPER (floor, double, ::floor);
       RC_ARRAY_MAPPER (log, Complex, rc_log);
diff --git a/src/ov-re-sparse.cc b/src/ov-re-sparse.cc
--- a/src/ov-re-sparse.cc
+++ b/src/ov-re-sparse.cc
@@ -908,16 +908,17 @@ octave_sparse_matrix::map (unary_mapper_
       ARRAY_MAPPER (asinh, double, ::asinh);
       ARRAY_MAPPER (atan, double, ::atan);
       ARRAY_MAPPER (atanh, Complex, rc_atanh);
       ARRAY_MAPPER (erf, double, ::erf);
       ARRAY_MAPPER (erfinv, double, ::erfinv);
       ARRAY_MAPPER (erfc, double, ::erfc);
       ARRAY_MAPPER (gamma, double, xgamma);
       ARRAY_MAPPER (lgamma, Complex, rc_lgamma);
+      ARRAY_MAPPER (cbrt, double, ::cbrt);
       ARRAY_MAPPER (ceil, double, ::ceil);
       ARRAY_MAPPER (cos, double, ::cos);
       ARRAY_MAPPER (cosh, double, ::cosh);
       ARRAY_MAPPER (exp, double, ::exp);
       ARRAY_MAPPER (expm1, double, ::expm1);
       ARRAY_MAPPER (fix, double, ::fix);
       ARRAY_MAPPER (floor, double, ::floor);
       ARRAY_MAPPER (log, Complex, rc_log);
diff --git a/src/ov-scalar.cc b/src/ov-scalar.cc
--- a/src/ov-scalar.cc
+++ b/src/ov-scalar.cc
@@ -301,16 +301,17 @@ octave_scalar::map (unary_mapper_t umap)
       SCALAR_MAPPER (atan, ::atan);
       SCALAR_MAPPER (atanh, rc_atanh);
       SCALAR_MAPPER (erf, ::erf);
       SCALAR_MAPPER (erfinv, ::erfinv);
       SCALAR_MAPPER (erfc, ::erfc);
       SCALAR_MAPPER (erfcx, ::erfcx);
       SCALAR_MAPPER (gamma, xgamma);
       SCALAR_MAPPER (lgamma, rc_lgamma);
+      SCALAR_MAPPER (cbrt, ::cbrt);
       SCALAR_MAPPER (ceil, ::ceil);
       SCALAR_MAPPER (cos, ::cos);
       SCALAR_MAPPER (cosh, ::cosh);
       SCALAR_MAPPER (exp, ::exp);
       SCALAR_MAPPER (expm1, ::expm1);
       SCALAR_MAPPER (fix, ::fix);
       SCALAR_MAPPER (floor, ::floor);
       SCALAR_MAPPER (log, rc_log);
diff --git a/src/ov.h b/src/ov.h
--- a/src/ov.h
+++ b/src/ov.h
@@ -1077,16 +1077,17 @@ public:
   MAPPER_FORWARD (acos)
   MAPPER_FORWARD (acosh)
   MAPPER_FORWARD (angle)
   MAPPER_FORWARD (arg)
   MAPPER_FORWARD (asin)
   MAPPER_FORWARD (asinh)
   MAPPER_FORWARD (atan)
   MAPPER_FORWARD (atanh)
+  MAPPER_FORWARD (cbrt)
   MAPPER_FORWARD (ceil)
   MAPPER_FORWARD (conj)
   MAPPER_FORWARD (cos)
   MAPPER_FORWARD (cosh)
   MAPPER_FORWARD (erf)
   MAPPER_FORWARD (erfinv)
   MAPPER_FORWARD (erfc)
   MAPPER_FORWARD (erfcx)
