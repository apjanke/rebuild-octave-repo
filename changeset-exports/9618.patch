# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1252183821 14400
#      Sat Sep 05 16:50:21 2009 -0400
# Node ID e381f80a5f7ae776393a66e141467dded5035ab0
# Parent  7c628fb04fd077a968034b59444fb37d95c38032
correctly toggle hold state

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,15 @@
+2009-09-05  John W. Eaton  <jwe@octave.org>
+
+	* plot/hold.m: Correctly toggle hold state.  Set both figure and
+	axes "nextplot" property when turning hold state on.
+	* plot/ishold.m: Check figure and axes nextplot properties.
+	Accept axes or figure handle argument.
+
 2009-09-01  Christophe Tournery  <christophe.tournery@illusonic.com>
 
 	* audio/wavread.m: Rename data_size from obsolete ck_size.
 
 2009-08-31  David Bateman  <dbateman@free.fr>
 
 	* general/quadgk.m: More care with the interval length and
 	convergence of contour integrals.
diff --git a/scripts/plot/hold.m b/scripts/plot/hold.m
--- a/scripts/plot/hold.m
+++ b/scripts/plot/hold.m
@@ -41,59 +41,51 @@
 ## only for the given axis handle.
 ##
 ## To query the current 'hold' state use the @code{ishold} function.
 ## @seealso{ishold, cla, newplot, clf}
 ## @end deftypefn
 
 function hold (varargin)
 
-  if (nargin > 0 && numel (varargin{1}) == 1 && ishandle (varargin{1}(1))
+  if (nargin > 0 && numel (varargin{1}) == 1 && ishandle (varargin{1})
       && strcmp (get (varargin{1}, "type"), "axes"))
-    [h, varargin, nargs] = __plt_get_axis_arg__ ("hold", varargin{:});
-  elseif (nargin > 0 && numel (varargin{1}) > 1 && ishandle (varargin{1}(1)))
+    [ax, varargin, nargs] = __plt_get_axis_arg__ ("hold", varargin{:});
+  elseif (nargin > 0 && numel (varargin{1}) > 1 && ishandle (varargin{1}))
     print_usage ();
   else
-    h = gcf ();
+    ax = gca ();
+    fig = gcf ();
     nargs = numel (varargin);
   endif
 
-  hold_state = get (h, "nextplot");
-
   if (nargs == 0)
-    if (strcmpi (hold_state, "add"))
-      hold_state = "replace";
-    else
-      hold_state = "add";
-    endif
+    turn_hold_off = ishold (ax);
   elseif (nargs == 1)
     state = varargin{1};
     if (ischar (state))
       if (strcmpi (state, "off"))
-	hold_state = "replace";
+	turn_hold_off = true;
       elseif (strcmpi (state, "on"))
-	hold_state = "add";
+	turn_hold_off = false;
       else
-	print_usage ();
+	error ("hold: invalid hold state");
       endif
     endif
   else
     print_usage ();
   endif
 
-  if (isfigure (h))
-    if (isempty (get (h, "currentaxes")))
-      set (h, "currentaxes", __go_axes__ (h))
-    endif
-    axes_objs = findobj (h, "type", "axes");
-    h = [h; axes_objs];
+  if (turn_hold_off)
+    set (ax, "nextplot", "replace");
+  else
+    set (ax, "nextplot", "add");
+    set (fig, "nextplot", "add");
   endif
 
-  set (h, "nextplot", hold_state);
-
 endfunction
 
 %!demo
 %! clf
 %! A = rand (100);
 %! [X, Y] = find (A > 0.9);
 %! imshow (A)
 %! hold on
diff --git a/scripts/plot/ishold.m b/scripts/plot/ishold.m
--- a/scripts/plot/ishold.m
+++ b/scripts/plot/ishold.m
@@ -1,9 +1,9 @@
-## Copyright (C) 2005, 2006, 2007, 2008 John W. Eaton
+## Copyright (C) 2005, 2006, 2007, 2008 2009 John W. Eaton
 ##
 ## This file is part of Octave.
 ##
 ## Octave is free software; you can redistribute it and/or modify it
 ## under the terms of the GNU General Public License as published by
 ## the Free Software Foundation; either version 3 of the License, or (at
 ## your option) any later version.
 ##
@@ -17,17 +17,39 @@
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} ishold
 ## Return true if the next line will be added to the current plot, or
 ## false if the plot device will be cleared before drawing the next line.
 ## @end deftypefn
 
-function retval = ishold ()
+function retval = ishold (h)
 
   if (nargin == 0)
-    retval = strcmpi (get (gca (), "nextplot"), "add");
+    ax = gca ();
+    fig = gcf ();
+  elseif (nargin == 1)
+    if (ishandle (h))
+      if (isfigure (h))
+	ax = get (h, "currentaxes");
+	if (isempty (ax))
+	  ax = __go_axes__ (h);
+	  set (h, "currentaxes", ax);
+	endif
+	fig = h;
+      elseif (strcmpi (get (h, "type"), "axes"))
+	ax = h;
+	fig = get (h, "parent");
+      else
+	error ("hold: expecting argument to be axes or figure graphics handle");
+      endif
+    else
+      error ("hold: expecting argument to be axes or figure graphics handle");
+    endif
   else
     print_usage ();
   endif
 
+  retval = (strcmpi (get (fig, "nextplot"), "add")
+	    && strcmpi (get (ax, "nextplot"), "add"));
+
 endfunction
