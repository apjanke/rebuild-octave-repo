# HG changeset patch
# User jwe
# Date 1157133602 0
#      Fri Sep 01 18:00:02 2006 +0000
# Node ID 8c35d219139d21ea54fcc144280c195b57d42d8c
# Parent  32cef2cfc9c9f4ac20ae75dc4b28e9e51554c950
[project @ 2006-09-01 18:00:01 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,14 @@
+2006-09-01  John W. Eaton  <jwe@octave.org>
+
+	* dirfns.cc: Don't handle nargout == 0 as a special case.
+	(octave_change_to_directory): Perform tilde expansion on directory
+	name here.
+
 2006-08-30  John W. Eaton  <jwe@octave.org>
 
 	* load-save.cc (get_file_format): Fix misplaced #endif.
 
 2006-08-29  John W. Eaton  <jwe@octave.org>
 
 	* load-path.cc (execute_pkg_add_or_del):
 	Source PKG_ADD or PKG_DEL in base workspace.
diff --git a/src/dirfns.cc b/src/dirfns.cc
--- a/src/dirfns.cc
+++ b/src/dirfns.cc
@@ -67,17 +67,17 @@ 02110-1301, USA.
 
 // TRUE means we ask for confirmation before recursively removing a
 // directory tree.
 static bool Vconfirm_recursive_rmdir = true;
 
 static int
 octave_change_to_directory (const std::string& newdir)
 {
-  int cd_ok = octave_env::chdir (newdir);
+  int cd_ok = octave_env::chdir (file_ops::tilde_expand (newdir));
 
   if (cd_ok)
     {
       // FIXME -- should this be handled as a list of functions
       // to call so users can add their own chdir handlers?
 
       load_path::update ();
     }
@@ -218,31 +218,17 @@ from system to system.\n\
 
 DEFUN (pwd, , nargout,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} pwd ()\n\
 Return the current working directory.\n\
 @seealso{dir, ls}\n\
 @end deftypefn")
 {
-  octave_value retval;
-
-  std::string directory = octave_env::getcwd ();
-
-  if (directory.empty ())
-    warning ("pwd: can't find working directory!");
-  else
-    {
-      if (nargout == 0)
-	octave_stdout << directory << "\n";
-      else
-	retval = directory;
-    }
-
-  return retval;
+  return octave_value (octave_env::getcwd ());
 }
 
 DEFUN (readdir, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {[@var{files}, @var{err}, @var{msg}] =} readdir (@var{dir})\n\
 Return names of the files in the directory @var{dir} as a cell array of\n\
 strings.  If an error occurs, return an empty cell array in @var{files}.\n\
 \n\
