# HG changeset patch
# User Rik <rik@octave.org>
# Date 1420000495 28800
#      Tue Dec 30 20:34:55 2014 -0800
# Node ID 29b6d072b5e93fcef7e69eb06b08e5fd83b4280c
# Parent  dbdc60e36dbc7e31ca2dbc62d342b451d57854d3
Add \ast, \deg symbols to gnuplot TeX interpreter.

* __go_draw_axes__.m: Add \ast, \deg mappings to Adobe Symbol Font encodings.
Add notes about which symbols are supported in gnuplot, but not in OpenGL.

diff --git a/scripts/plot/util/private/__go_draw_axes__.m b/scripts/plot/util/private/__go_draw_axes__.m
--- a/scripts/plot/util/private/__go_draw_axes__.m
+++ b/scripts/plot/util/private/__go_draw_axes__.m
@@ -2326,17 +2326,17 @@ endfunction
 
 function str = __tex2enhanced__ (str, fnt, it, bld)
   persistent sym = __setup_sym_table__ ();
   persistent flds = fieldnames (sym);
 
   [s, e, m] = regexp (str, "\\\\([a-zA-Z]+|0)", "start", "end", "matches");
 
   for i = length (s) : -1 : 1
-    ## special case for "\0"  and replace with "{/Symbol \306}'
+    ## special case for "\0"  and replace with empty set "{/Symbol \306}'
     if (strncmp (m{i}, '\0', 2))
       str = [str(1:s(i) - 1) '{/Symbol \306}' str(s(i) + 2:end)];
     else
       f = m{i}(2:end);
       if (isfield (sym, f))
         g = getfield (sym, f);
         ## FIXME: The symbol font doesn't seem to support bold or italic
         ##if (bld)
@@ -2530,17 +2530,17 @@ function sym = __setup_sym_table__ ()
   sym.beta = '{/Symbol b}';
   sym.chi = '{/Symbol c}';
   sym.delta = '{/Symbol d}';
   sym.epsilon = '{/Symbol e}';
   sym.phi = '{/Symbol f}';
   sym.gamma = '{/Symbol g}';
   sym.eta = '{/Symbol h}';
   sym.iota = '{/Symbol i}';
-  sym.varphi = '{/Symbol j}';
+  sym.varphi = '{/Symbol j}';              # Not in OpenGL
   sym.kappa = '{/Symbol k}';
   sym.lambda = '{/Symbol l}';
   sym.mu = '{/Symbol m}';
   sym.nu = '{/Symbol n}';
   sym.o =  '{/Symbol o}';
   sym.pi = '{/Symbol p}';
   sym.theta = '{/Symbol q}';
   sym.rho = '{/Symbol r}';
@@ -2561,17 +2561,19 @@ function sym = __setup_sym_table__ ()
   sym.diamondsuit = '{/Symbol \250}';
   sym.heartsuit = '{/Symbol \251}';
   sym.spadesuit = '{/Symbol \252}';
   sym.leftrightarrow = '{/Symbol \253}';
   sym.leftarrow = '{/Symbol \254}';
   sym.uparrow = '{/Symbol \255}';
   sym.rightarrow = '{/Symbol \256}';
   sym.downarrow = '{/Symbol \257}';
-  sym.circ = '{/Symbol \260}';
+  sym.circ = '{/Symbol \260}';         # degree symbol, not circ as in FLTK
+  sym.deg = '{/Symbol \260}';
+  sym.ast = '{/Symbol *}';
   sym.pm = '{/Symbol \261}';
   sym.geq = '{/Symbol \263}';
   sym.times = '{/Symbol \264}';
   sym.propto = '{/Symbol \265}';
   sym.partial = '{/Symbol \266}';
   sym.bullet = '{/Symbol \267}';
   sym.div = '{/Symbol \270}';
   sym.neq = '{/Symbol \271}';
@@ -2580,42 +2582,43 @@ function sym = __setup_sym_table__ ()
   sym.ldots = '{/Symbol \274}';
   sym.mid = '{/Symbol \275}';
   sym.aleph = '{/Symbol \300}';
   sym.Im = '{/Symbol \301}';
   sym.Re = '{/Symbol \302}';
   sym.wp = '{/Symbol \303}';
   sym.otimes = '{/Symbol \304}';
   sym.oplus = '{/Symbol \305}';
+  ## empty set, not circled slash division operator as in FLTK.
   sym.oslash = '{/Symbol \306}';
   sym.cap = '{/Symbol \307}';
   sym.cup = '{/Symbol \310}';
   sym.supset = '{/Symbol \311}';
   sym.supseteq = '{/Symbol \312}';
   sym.subset = '{/Symbol \314}';
   sym.subseteq = '{/Symbol \315}';
   sym.in = '{/Symbol \316}';
-  sym.notin = '{/Symbol \317}';
+  sym.notin = '{/Symbol \317}';            # Not in OpenGL
   sym.angle = '{/Symbol \320}';
-  sym.bigtriangledown = '{/Symbol \321}';
+  sym.bigtriangledown = '{/Symbol \321}';  # Not in OpenGL
   sym.langle = '{/Symbol \341}';
   sym.rangle = '{/Symbol \361}';
   sym.nabla = '{/Symbol \321}';
-  sym.prod = '{/Symbol \325}';
+  sym.prod = '{/Symbol \325}';             # Not in OpenGL
   sym.surd = '{/Symbol \326}';
   sym.cdot = '{/Symbol \327}';
   sym.neg = '{/Symbol \330}';
   sym.wedge = '{/Symbol \331}';
   sym.vee = '{/Symbol \332}';
-  sym.Leftrightarrow = '{/Symbol \333}';
+  sym.Leftrightarrow = '{/Symbol \333}';   # Not in OpenGL
   sym.Leftarrow = '{/Symbol \334}';
-  sym.Uparrow = '{/Symbol \335}';
+  sym.Uparrow = '{/Symbol \335}';          # Not in OpenGL
   sym.Rightarrow = '{/Symbol \336}';
-  sym.Downarrow = '{/Symbol \337}';
-  sym.diamond = '{/Symbol \340}';
+  sym.Downarrow = '{/Symbol \337}';        # Not in OpenGL
+  sym.diamond = '{/Symbol \340}';          # Not in OpenGL
   sym.copyright = '{/Symbol \343}';
   sym.lfloor = '{/Symbol \353}';
   sym.lceil  = '{/Symbol \351}';
   sym.rfloor = '{/Symbol \373}';
   sym.rceil  = '{/Symbol \371}';
   sym.int = '{/Symbol \362}';
 endfunction
 
