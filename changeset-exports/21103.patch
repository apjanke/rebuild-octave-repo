# HG changeset patch
# User Rik <rik@octave.org>
# Date 1453221783 28800
#      Tue Jan 19 08:43:03 2016 -0800
# Node ID 5a83a422d8a75427858337059ab7fdf13a84d169
# Parent  dfcb9d74b253e2637ac68a0382b05345c2076fd9
Don't set 3rd argument to err_disabled_feature within core Octave.

* audiodevinfo.cc, audioread.cc: Call err_disabled_feature (A, B) and
use default for 3rd argument which is "Octave".

diff --git a/libinterp/dldfcn/audiodevinfo.cc b/libinterp/dldfcn/audiodevinfo.cc
--- a/libinterp/dldfcn/audiodevinfo.cc
+++ b/libinterp/dldfcn/audiodevinfo.cc
@@ -402,18 +402,17 @@ recording using those parameters.\n\
 
       retval = 0;
     }
 
   return retval;
 
 #else
   err_disabled_feature ("audiodevinfo",
-                        "audio playback and recording through PortAudio",
-                        "Octave");
+                        "audio playback and recording through PortAudio");
 #endif
 }
 
 /*
 %!testif HAVE_PORTAUDIO
 %! devinfo = audiodevinfo;
 %! assert (rows (devinfo.input), 1);
 %! assert (rows (devinfo.output), 1);
@@ -1808,18 +1807,17 @@ DEFUN_DLD (__recorder_audiorecorder__, a
 @deftypefnx {} {@var{recorder} =} __recorder_audiorecorder__ (@var{fcn}, @dots{})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
 
 #ifndef HAVE_PORTAUDIO
   err_disabled_feature ("__recorder_audiorecorder__",
-                        "audio playback and recording through PortAudio",
-                        "Octave");
+                        "audio playback and recording through PortAudio");
 #else
 
   int nargin = args.length ();
 
   audiorecorder* recorder = new audiorecorder ();
 
   if (nargin > 0)
     {
@@ -1872,221 +1870,208 @@ DEFUN_DLD (__recorder_getaudiodata__, ar
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{data}} __recorder_getaudiodata__ (@var{recorder})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
 #ifndef HAVE_PORTAUDIO
   err_disabled_feature ("__recorder_getaudiodata__",
-                        "audio playback and recording through PortAudio",
-                        "Octave");
+                        "audio playback and recording through PortAudio");
 #else
   retval = get_recorder (args(0))->getaudiodata ();
 #endif
   return retval;
 }
 
 DEFUN_DLD (__recorder_get_channels__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{n} =} __recorder_get_channels__ (@var{recorder})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
 #ifndef HAVE_PORTAUDIO
   err_disabled_feature ("__recorder_get_channels__",
-                        "audio playback and recording through PortAudio",
-                        "Octave");
+                        "audio playback and recording through PortAudio");
 #else
   retval = get_recorder (args(0))->get_channels ();
 #endif
   return retval;
 }
 
 DEFUN_DLD (__recorder_get_fs__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{fs} =} __recorder_get_fs__ (@var{recorder})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
 #ifndef HAVE_PORTAUDIO
   err_disabled_feature ("__recorder_get_fs__",
-                        "audio playback and recording through PortAudio",
-                        "Octave");
+                        "audio playback and recording through PortAudio");
 #else
   retval = get_recorder (args(0))->get_fs ();
 #endif
   return retval;
 }
 
 DEFUN_DLD (__recorder_get_id__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{id} =} __recorder_get_id__ (@var{recorder})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
 #ifndef HAVE_PORTAUDIO
   err_disabled_feature ("__recorder_get_id__",
-                        "audio playback and recording through PortAudio",
-                        "Octave");
+                        "audio playback and recording through PortAudio");
 #else
   retval = get_recorder (args(0))->get_id ();
 #endif
   return retval;
 }
 
 DEFUN_DLD (__recorder_get_nbits__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{nbits} =} __recorder_get_nbits__ (@var{recorder})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
 #ifndef HAVE_PORTAUDIO
   err_disabled_feature ("__recorder_get_nbits__",
-                        "audio playback and recording through PortAudio",
-                        "Octave");
+                        "audio playback and recording through PortAudio");
 #else
   retval = get_recorder (args(0))->get_nbits ();
 #endif
   return retval;
 }
 
 DEFUN_DLD (__recorder_get_sample_number__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{n} =} __recorder_get_sample_number__ (@var{recorder})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
 #ifndef HAVE_PORTAUDIO
   err_disabled_feature ("__recorder_get_sample_number__",
-                        "audio playback and recording through PortAudio",
-                        "Octave");
+                        "audio playback and recording through PortAudio");
 #else
   retval = get_recorder (args(0))->get_sample_number ();
 #endif
   return retval;
 }
 
 DEFUN_DLD (__recorder_get_tag__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{tag} =} __recorder_get_tag__ (@var{recorder})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
 #ifndef HAVE_PORTAUDIO
   err_disabled_feature ("__recorder_get_tag__",
-                        "audio playback and recording through PortAudio",
-                        "Octave");
+                        "audio playback and recording through PortAudio");
 #else
   retval = get_recorder (args(0))->get_tag ();
 #endif
   return retval;
 }
 
 DEFUN_DLD (__recorder_get_total_samples__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{n} =} __recorder_get_total_samples__ (@var{recorder})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
 #ifndef HAVE_PORTAUDIO
   err_disabled_feature ("__recorder_get_total_samples__",
-                        "audio playback and recording through PortAudio",
-                        "Octave");
+                        "audio playback and recording through PortAudio");
 #else
   retval = get_recorder (args(0))->get_total_samples ();
 #endif
   return retval;
 }
 
 DEFUN_DLD (__recorder_get_userdata__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{data} =} __recorder_get_userdata__ (@var{recorder})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
 #ifndef HAVE_PORTAUDIO
   err_disabled_feature ("__recorder_get_userdata__",
-                        "audio playback and recording through PortAudio",
-                        "Octave");
+                        "audio playback and recording through PortAudio");
 #else
   retval = get_recorder (args(0))->get_userdata ();
 #endif
   return retval;
 }
 
 DEFUN_DLD (__recorder_isrecording__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __recorder_isrecording__ (@var{recorder})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
 #ifndef HAVE_PORTAUDIO
   err_disabled_feature ("__recorder_isrecording__",
-                        "audio playback and recording through PortAudio",
-                        "Octave");
+                        "audio playback and recording through PortAudio");
 #else
   retval = get_recorder (args(0))->isrecording ();
 #endif
   return retval;
 }
 
 DEFUN_DLD (__recorder_pause__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __recorder_pause__ (@var{recorder})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
 #ifndef HAVE_PORTAUDIO
   err_disabled_feature ("__recorder_pause__",
-                        "audio playback and recording through PortAudio",
-                        "Octave");
+                        "audio playback and recording through PortAudio");
 #else
   get_recorder (args(0))->pause ();
 #endif
   return octave_value ();
 }
 
 DEFUN_DLD (__recorder_recordblocking__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __recorder_recordblocking__ (@var{recorder}, @var{seconds})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
 #ifndef HAVE_PORTAUDIO
   err_disabled_feature ("__recorder_recordblocking__",
-                        "audio playback and recording through PortAudio",
-                        "Octave");
+                        "audio playback and recording through PortAudio");
 #else
   float seconds = args(1).float_value ();
   get_recorder (args(0))->recordblocking (seconds);
 #endif
   return octave_value ();
 }
 
 DEFUN_DLD (__recorder_record__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn  {} {} __recorder_record__ (@var{recorder})\n\
 @deftypefnx {} {} __recorder_record__ (@var{recorder}, @var{seconds})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
 #ifndef HAVE_PORTAUDIO
   err_disabled_feature ("__recorder_record__",
-                        "audio playback and recording through PortAudio",
-                        "Octave");
+                        "audio playback and recording through PortAudio");
 #else
   audiorecorder *recorder = get_recorder (args(0));
 
   if (args.length () == 2)
     recorder->set_end_sample (args(1).int_value () * recorder->get_fs ());
 
   recorder->record ();
 #endif
@@ -2096,86 +2081,81 @@ Undocumented internal function.\n\
 DEFUN_DLD (__recorder_resume__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __recorder_resume__ (@var{recorder})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
 #ifndef HAVE_PORTAUDIO
   err_disabled_feature ("__recorder_resume__",
-                        "audio playback and recording through PortAudio",
-                        "Octave");
+                        "audio playback and recording through PortAudio");
 #else
   if (args.length () == 1)
     get_recorder (args(0))->resume ();
 #endif
   return octave_value ();
 }
 
 DEFUN_DLD (__recorder_set_fs__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __recorder_set_fs__ (@var{recorder}, @var{fs})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
 #ifndef HAVE_PORTAUDIO
   err_disabled_feature ("__recorder_set_fs__",
-                        "audio playback and recording through PortAudio",
-                        "Octave");
+                        "audio playback and recording through PortAudio");
 #else
   if (args.length () == 2)
     get_recorder (args(0))->set_fs (args(1).int_value ());
 #endif
   return octave_value ();
 }
 
 DEFUN_DLD (__recorder_set_tag__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __recorder_set_tag__ (@var{recorder}, @var{tag})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
 #ifndef HAVE_PORTAUDIO
   err_disabled_feature ("__recorder_set_tag__",
-                        "audio playback and recording through PortAudio",
-                        "Octave");
+                        "audio playback and recording through PortAudio");
 #else
   if (args.length () == 2)
     get_recorder (args(0))->set_tag (args(1).char_matrix_value ());
 #endif
   return octave_value ();
 }
 
 DEFUN_DLD (__recorder_set_userdata__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __recorder_set_userdata__ (@var{recorder}, @var{data})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
 #ifndef HAVE_PORTAUDIO
   err_disabled_feature ("__recorder_set_userdata__",
-                        "audio playback and recording through PortAudio",
-                        "Octave");
+                        "audio playback and recording through PortAudio");
 #else
   if (args.length () == 2)
     get_recorder (args(0))->set_userdata (args(1));
 #endif
   return octave_value ();
 }
 
 DEFUN_DLD (__recorder_stop__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __recorder_stop__ (@var{recorder})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
 #ifndef HAVE_PORTAUDIO
   err_disabled_feature ("__recorder_stop__",
-                        "audio playback and recording through PortAudio",
-                        "Octave");
+                        "audio playback and recording through PortAudio");
 #else
   if (args.length () == 1)
     get_recorder (args(0))->stop ();
 #endif
   return octave_value ();
 }
 
 DEFUN_DLD (__player_audioplayer__, args, ,
@@ -2184,18 +2164,17 @@ DEFUN_DLD (__player_audioplayer__, args,
 @deftypefnx {} {@var{player} =} __player_audioplayer__ (@var{y}, @var{fs}, @var{nbits})\n\
 @deftypefnx {} {@var{player} =} __player_audioplayer__ (@var{y}, @var{fs}, @var{nbits}, @var{id})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
 #ifndef HAVE_PORTAUDIO
   err_disabled_feature ("__player_audioplayer__",
-                        "audio playback and recording through PortAudio",
-                        "Octave");
+                        "audio playback and recording through PortAudio");
 #else
 
   int nargin = args.length ();
 
   audioplayer* recorder = new audioplayer ();
 
   if (! recorder)
     error ("__player_audioplayer__: Couldn't instantiate new audioplayer");
@@ -2253,179 +2232,169 @@ DEFUN_DLD (__player_get_channels__, args
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{n} =} __player_get_channels__ (@var{player})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
 #ifndef HAVE_PORTAUDIO
   err_disabled_feature ("__player_get_channels__",
-                        "audio playback and recording through PortAudio",
-                        "Octave");
+                        "audio playback and recording through PortAudio");
 #else
   if (args.length () == 1)
     retval = get_player (args(0))->get_channels ();
 #endif
   return retval;
 }
 
 DEFUN_DLD (__player_get_fs__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{fs} =} __player_get_fs__ (@var{player})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
 #ifndef HAVE_PORTAUDIO
   err_disabled_feature ("__player_get_fs__",
-                        "audio playback and recording through PortAudio",
-                        "Octave");
+                        "audio playback and recording through PortAudio");
 #else
   if (args.length () == 1)
     retval = get_player (args(0))->get_fs ();
 #endif
   return retval;
 }
 
 DEFUN_DLD (__player_get_id__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{id} =} __player_get_id__ (@var{player})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
 #ifndef HAVE_PORTAUDIO
   err_disabled_feature ("__player_get_id__",
-                        "audio playback and recording through PortAudio",
-                        "Octave");
+                        "audio playback and recording through PortAudio");
 #else
   if (args.length () == 1)
     retval = get_player (args(0))->get_id ();
 #endif
   return retval;
 }
 
 DEFUN_DLD (__player_get_nbits__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{nbits} =} __player_get_nbits__ (@var{player})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
 #ifndef HAVE_PORTAUDIO
   err_disabled_feature ("__player_get_nbits__",
-                        "audio playback and recording through PortAudio",
-                        "Octave");
+                        "audio playback and recording through PortAudio");
 #else
   if (args.length () == 1)
     retval = get_player (args(0))->get_nbits ();
 #endif
   return retval;
 }
 
 DEFUN_DLD (__player_get_sample_number__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{n} =} __player_get_sample_number__ (@var{player})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
 #ifndef HAVE_PORTAUDIO
   err_disabled_feature ("__player_get_sample_number__",
-                        "audio playback and recording through PortAudio",
-                        "Octave");
+                        "audio playback and recording through PortAudio");
 #else
   if (args.length () == 1)
     retval = get_player (args(0))->get_sample_number ();
 #endif
   return retval;
 }
 
 DEFUN_DLD (__player_get_tag__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{tag} =} __player_get_tag__ (@var{player})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
 #ifndef HAVE_PORTAUDIO
   err_disabled_feature ("__player_get_tag__",
-                        "audio playback and recording through PortAudio",
-                        "Octave");
+                        "audio playback and recording through PortAudio");
 #else
   if (args.length () == 1)
     retval = get_player (args(0))->get_tag ();
 #endif
   return retval;
 }
 
 DEFUN_DLD (__player_get_total_samples__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{n} =} __player_get_total_samples__ (@var{player})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
 #ifndef HAVE_PORTAUDIO
   err_disabled_feature ("__player_get_total_samples__",
-                        "audio playback and recording through PortAudio",
-                        "Octave");
+                        "audio playback and recording through PortAudio");
 #else
   if (args.length () == 1)
     retval = get_player (args(0))->get_total_samples ();
 #endif
   return retval;
 }
 
 DEFUN_DLD (__player_get_userdata__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{data} =} __player_get_userdata__ (@var{player})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
 #ifndef HAVE_PORTAUDIO
   err_disabled_feature ("__player_get_userdata__",
-                        "audio playback and recording through PortAudio",
-                        "Octave");
+                        "audio playback and recording through PortAudio");
 #else
   if (args.length () == 1)
     retval = get_player (args(0))->get_userdata ();
 #endif
   return retval;
 }
 
 DEFUN_DLD (__player_isplaying__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __player_isplaying__ (@var{player})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
 #ifndef HAVE_PORTAUDIO
   err_disabled_feature ("__player_isplaying__",
-                        "audio playback and recording through PortAudio",
-                        "Octave");
+                        "audio playback and recording through PortAudio");
 #else
   if (args.length () == 1)
     retval = get_player (args(0))->isplaying ();
 #endif
   return retval;
 }
 
 DEFUN_DLD (__player_pause__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __player_pause__ (@var{player})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
 #ifndef HAVE_PORTAUDIO
   err_disabled_feature ("__player_pause__",
-                        "audio playback and recording through PortAudio",
-                        "Octave");
+                        "audio playback and recording through PortAudio");
 #else
   if (args.length () == 1)
     get_player (args(0))->pause ();
 #endif
   return octave_value ();
 }
 
 DEFUN_DLD (__player_playblocking__, args, ,
@@ -2433,18 +2402,17 @@ DEFUN_DLD (__player_playblocking__, args
 @deftypefn  {} {} __player_playblocking__ (@var{player})\n\
 @deftypefnx {} {} __player_playblocking__ (@var{player}, @var{start})\n\
 @deftypefnx {} {} __player_playblocking__ (@var{player}, [@var{start}, @var{end}])\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
 #ifndef HAVE_PORTAUDIO
   err_disabled_feature ("__player_playblocking__",
-                        "audio playback and recording through PortAudio",
-                        "Octave");
+                        "audio playback and recording through PortAudio");
 #else
 
   audioplayer *player = get_player (args(0));
 
   if (args.length () == 1)
     {
       player->playblocking ();
     }
@@ -2487,18 +2455,17 @@ DEFUN_DLD (__player_play__, args, ,
 @deftypefn  {} {} __player_play__ (@var{player})\n\
 @deftypefnx {} {} __player_play__ (@var{player}, @var{start})\n\
 @deftypefnx {} {} __player_play__ (@var{player}, [@var{start}, @var{end}])\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
 #ifndef HAVE_PORTAUDIO
   err_disabled_feature ("__player_play__",
-                        "audio playback and recording through PortAudio",
-                        "Octave");
+                        "audio playback and recording through PortAudio");
 #else
 
   if (args.length () == 1)
     {
       get_player (args(0))->play ();
     }
   else if (args.length () == 2)
     {
@@ -2539,84 +2506,79 @@ Undocumented internal function.\n\
 DEFUN_DLD (__player_resume__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __player_resume__ (@var{player})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
 #ifndef HAVE_PORTAUDIO
   err_disabled_feature ("__player_resume__",
-                        "audio playback and recording through PortAudio",
-                        "Octave");
+                        "audio playback and recording through PortAudio");
 #else
   if (args.length () == 1)
     get_player (args(0))->resume ();
 #endif
   return octave_value ();
 }
 
 DEFUN_DLD (__player_set_fs__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __player_set_fs__ (@var{player}, @var{fs})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
 #ifndef HAVE_PORTAUDIO
   err_disabled_feature ("__player_set_fs__",
-                        "audio playback and recording through PortAudio",
-                        "Octave");
+                        "audio playback and recording through PortAudio");
 #else
   if (args.length () == 2)
     get_player (args(0))->set_fs (args(1).int_value ());
 #endif
   return octave_value ();
 }
 
 DEFUN_DLD (__player_set_tag__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __player_set_tag__ (@var{player}, @var{tag})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
 #ifndef HAVE_PORTAUDIO
   err_disabled_feature ("__player_set_tag__",
-                        "audio playback and recording through PortAudio",
-                        "Octave");
+                        "audio playback and recording through PortAudio");
 #else
   if (args.length () == 2)
     get_player (args(0))->set_tag (args(1).char_matrix_value ());
 #endif
   return octave_value ();
 }
 
 DEFUN_DLD (__player_set_userdata__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __player_set_userdata__ (@var{player}, @var{data})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
 #ifndef HAVE_PORTAUDIO
   err_disabled_feature ("__player_set_userdata__",
-                        "audio playback and recording through PortAudio",
-                        "Octave");
+                        "audio playback and recording through PortAudio");
 #else
   if (args.length () == 2)
     get_player (args(0))->set_userdata (args(1));
 #endif
   return octave_value ();
 }
 
 DEFUN_DLD (__player_stop__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __player_stop__ (@var{player})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
 #ifndef HAVE_PORTAUDIO
   err_disabled_feature ("__player_stop__",
-                        "audio playback and recording through PortAudio",
-                        "Octave");
+                        "audio playback and recording through PortAudio");
 #else
   if (args.length () == 1)
     get_player (args(0))->stop ();
 #endif
   return octave_value ();
 }
diff --git a/libinterp/dldfcn/audioread.cc b/libinterp/dldfcn/audioread.cc
--- a/libinterp/dldfcn/audioread.cc
+++ b/libinterp/dldfcn/audioread.cc
@@ -167,18 +167,18 @@ is stored in the audio file.\n\
         ret_audio = audio;
     }
   else
     ret_audio = audio;
 
   return ovl (ret_audio, info.samplerate);
 
 #else
-  err_disabled_feature ("audioread", "reading and writing sound files"
-                        " through libsndfile", "Octave");
+  err_disabled_feature ("audioread",
+                        "reading and writing sound files through libsndfile");
 #endif
 }
 
 #ifdef HAVE_SNDFILE
 
 static int
 extension_to_format (const std::string& ext)
 {
@@ -415,18 +415,18 @@ Comment.\n\
       offset += chunk_size;
     }
 
   // FIXME: shouldn't we return something to indicate whether the file
   // was written successfully?
   return ovl ();
 
 #else
-  err_disabled_feature ("audiowrite", "reading and writing sound files"
-                        " through libsndfile", "Octave");
+  err_disabled_feature ("audiowrite",
+                        "reading and writing sound files through libsndfile");
 #endif
 }
 
 DEFUN_DLD (audioinfo, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{info} =} audioinfo (@var{filename})\n\
 Return information about an audio file specified by @var{filename}.\n\
 @end deftypefn")
@@ -487,12 +487,12 @@ Return information about an audio file s
   result.assign ("BitRate", -1);
   result.assign ("Title", sf_get_string (file, SF_STR_TITLE));
   result.assign ("Artist", sf_get_string (file, SF_STR_ARTIST));
   result.assign ("Comment", sf_get_string (file, SF_STR_COMMENT));
 
   return ovl (result);
 
 #else
-  err_disabled_feature ("audioinfo", "reading and writing sound files"
-                        " through libsndfile", "Octave");
+  err_disabled_feature ("audioinfo",
+                        "reading and writing sound files through libsndfile");
 #endif
 }
