# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1284486683 14400
#      Tue Sep 14 13:51:23 2010 -0400
# Node ID 2d14817353a6e9ac54a88314b057308e951b50f8
# Parent  c6dc5f6666955e09df9d9bb4300e4a3db3011a28
allow exist to work correctly for special files; recognize directories when searching for files

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,14 @@
+2010-09-14  John W. Eaton  <jwe@octave.org>
+
+	* variables.cc (symbol_exist): If looking for any type of file
+	or "file", return 7 for directories and 2 for all other types of
+	files.
+
 2010-09-14  John W. Eaton  <jwe@octave.org>
 
 	* graphics.h.in (base_graphics_backend::initialize): Rename
 	from base_graphics_backend::object_created.  Change all uses.
 	(base_graphics_backend::finalize): Rename from
 	base_graphics_backend::object_destoyed.  Change all uses.
 	(base_graphics_backend::update): Rename from
 	base_graphics_backend::property_changed.  Change all uses. 
diff --git a/src/variables.cc b/src/variables.cc
--- a/src/variables.cc
+++ b/src/variables.cc
@@ -488,26 +488,20 @@ symbol_exist (const std::string& name, c
 
           if (file_name.empty ())
             file_name = name;
 
           file_stat fs (file_name);
 
           if (fs)
             {
-              if ((type == "any" || type == "file")
-                  && fs.is_reg ())
-                {
-                  retval = 2;
-                }
-              else if ((type == "any" || type == "dir")
-                       && fs.is_dir ())
-                {
-                  retval = 7;
-                }
+              if (type == "any" || type == "file")
+                retval = fs.is_dir () ? 7 : 2;
+              else if (type == "dir" && fs.is_dir ())
+                retval = 7;
             }
         }
     }
 
   return retval;
 }
 
 #define GET_IDX(LEN) \
@@ -592,16 +586,31 @@ Check only for directories.\n\
         error ("exist: expecting first argument to be a string");
     }
   else
     print_usage ();
 
   return retval;
 }
 
+/*
+%!test
+%!  if (isunix ())
+%!    assert (exist ("/tmp") == 7);
+%!    assert (exist ("/tmp", "file") == 7);
+%!    assert (exist ("/tmp", "dir") == 7);
+%!    assert (exist ("/bin/sh") == 2);
+%!    assert (exist ("/bin/sh", "file") == 2);
+%!    assert (exist ("/bin/sh", "dir") == 0);
+%!    assert (exist ("/dev/null") == 2);
+%!    assert (exist ("/dev/null", "file") == 2);
+%!    assert (exist ("/dev/null", "dir") == 0);
+%!  endif
+*/
+
 octave_value
 lookup_function_handle (const std::string& nm)
 {
   octave_value val = symbol_table::varval (nm);
 
   return val.is_function_handle () ? val : octave_value ();
 }
 
