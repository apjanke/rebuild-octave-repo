# HG changeset patch
# User Pantxo Diribarne <pantxo.diribarne@gmail.com>
# Date 1433266927 -7200
#      Tue Jun 02 19:42:07 2015 +0200
# Branch stable
# Node ID a5f9bf4df254de5cfba799748565bc8846e0ec09
# Parent  0bb456e9423bfbe68b16815a28bde74548e09cea
Avoid crash when trying to annotate an empty figure (bug #45241)

* Canvas.cc (Canvas::canvasMouseMoveEvent): allow axes object to be invalid when in TextMode
* Canvas.cc (Canvas::canvasMousePressEvent): don't define m_mouseAxes when in textmode

diff --git a/libgui/graphics/Canvas.cc b/libgui/graphics/Canvas.cc
--- a/libgui/graphics/Canvas.cc
+++ b/libgui/graphics/Canvas.cc
@@ -396,24 +396,24 @@ zoom_direction (const graphics_object fi
 }
 
 void
 Canvas::canvasMouseMoveEvent (QMouseEvent* event)
 {
   gh_manager::auto_lock lock;
   graphics_object ax = gh_manager::get_object (m_mouseAxes);
 
-  if (m_mouseMode != NoMode && ax.valid_object ())
+  if (m_mouseMode != NoMode && (ax.valid_object () || m_mouseMode == TextMode))
     {
-      axes::properties& ap = Utils::properties<axes> (ax);
-
       switch (m_mouseMode)
         {
         case RotateMode:
           {
+            axes::properties& ap = Utils::properties<axes> (ax);
+
             ap.rotate3d (m_mouseCurrent.x (), event->x (),
                          m_mouseCurrent.y (), event->y ());
 
             // Update current mouse position
             m_mouseCurrent = event->pos ();
 
             // Force immediate redraw
             redraw (true);
@@ -423,16 +423,18 @@ Canvas::canvasMouseMoveEvent (QMouseEven
         case ZoomInMode:
         case ZoomOutMode:
           m_mouseCurrent = event->pos ();
           redraw (true);
           break;
 
         case PanMode:
           {
+            axes::properties& ap = Utils::properties<axes> (ax);
+
             graphics_object figObj (ax.get_ancestor ("figure"));
 
             std::string mode = pan_mode (figObj);
 
             ColumnVector p0 = ap.pixel2coord (m_mouseCurrent.x (),
                                               m_mouseCurrent.y ());
             ColumnVector p1 = ap.pixel2coord (event->x (),
                                               event->y ());
@@ -612,17 +614,16 @@ Canvas::canvasMousePressEvent (QMouseEve
         case TextMode:
           {
             if (event->modifiers () == Qt::NoModifier)
               {
                 switch (event->buttons ())
                   {
                   case Qt::LeftButton:
                     m_mouseAnchor = m_mouseCurrent = event->pos ();
-                    m_mouseAxes = axesObj.get_handle ();
                     m_mouseMode = newMouseMode;
                     m_rectMode = true;
                   }
               }
             redraw (false);
           }
           break;
 
