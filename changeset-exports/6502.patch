# HG changeset patch
# User jwe
# Date 1175830326 0
#      Fri Apr 06 03:32:06 2007 +0000
# Node ID 6ab0a8767780b6ef32893cd0e39b9f68440d39e1
# Parent  68f3125f6e27416cd76653792d78de88ff3b9bde
[project @ 2007-04-06 03:32:06 by jwe]

diff --git a/doc/interpreter/arith.txi b/doc/interpreter/arith.txi
--- a/doc/interpreter/arith.txi
+++ b/doc/interpreter/arith.txi
@@ -141,16 +141,32 @@ they work on an element by element basis
 sin ([1, 2; 3, 4])
      @result{}  0.84147   0.90930
          0.14112  -0.75680
 @end group
 @end example
 
 @DOCSTRING(atan2)
 
+In addition to the trigonometric functions that work with radians,
+Octave also provides the following functions which work with degrees.
+
+@DOCSTRING(sind)
+@DOCSTRING(cosd)
+@DOCSTRING(tand)
+@DOCSTRING(secd)
+@DOCSTRING(cscd)
+@DOCSTRING(cotd)
+
+@DOCSTRING(asind)
+@DOCSTRING(acosd)
+@DOCSTRING(atand)
+@DOCSTRING(asecd)
+@DOCSTRING(acscd)
+@DOCSTRING(acotd)
 
 @node Sums and Products
 @section Sums and Products
 
 @DOCSTRING(sum)
 
 @DOCSTRING(prod)
 
@@ -166,28 +182,32 @@ sin ([1, 2; 3, 4])
 @DOCSTRING(besselj)
 
 @DOCSTRING(airy)
 
 @DOCSTRING(beta)
 
 @DOCSTRING(betainc)
 
+@DOCSTRING(betaln)
+
 @DOCSTRING(bincoeff)
 
 @DOCSTRING(erf)
 
 @DOCSTRING(erfc)
 
 @DOCSTRING(erfinv)
 
 @DOCSTRING(gamma)
 
 @DOCSTRING(gammainc)
 
+@DOCSTRING(legendre)
+
 @DOCSTRING(lgamma)
 
 @DOCSTRING(cross)
 
 @DOCSTRING(commutation_matrix)
 
 @DOCSTRING(duplication_matrix)
 
diff --git a/doc/interpreter/container.txi b/doc/interpreter/container.txi
--- a/doc/interpreter/container.txi
+++ b/doc/interpreter/container.txi
@@ -2,37 +2,32 @@
 @c This is part of the Octave manual.
 @c For copying conditions, see the file gpl.texi.
 
 @node Containers
 @chapter Containers
 @cindex containers
 
 @menu
-* Lists::                       
 * Cell Arrays::                 
 @end menu
 
-@node Lists
-@section Lists
-@cindex lists
-
-@DOCSTRING(list)
-
-@DOCSTRING(nth)
-
-@DOCSTRING(append)
-
-@DOCSTRING(reverse)
-
-@DOCSTRING(splice)
-
-@DOCSTRING(islist)
-
 @node Cell Arrays
 @section Cell Arrays
 @cindex cell arrays
 
 @DOCSTRING(cell)
 
 @DOCSTRING(cellstr)
 
 @DOCSTRING(iscell)
+
+@DOCSTRING(cell2mat)
+
+@DOCSTRING(cell2struct)
+
+@DOCSTRING(cellfun)
+
+@DOCSTRING(cellidx)
+
+@DOCSTRING(mat2cell)
+
+@DOCSTRING(num2cell)
diff --git a/doc/interpreter/func.txi b/doc/interpreter/func.txi
--- a/doc/interpreter/func.txi
+++ b/doc/interpreter/func.txi
@@ -427,18 +427,30 @@ If you know that your own function files
 running Octave, you can improve performance by setting the variable
 @code{ignore_function_time_stamp} to @code{"all"}, so that Octave will
 ignore the time stamps for all function files.  Setting it to
 @code{"system"} gives the default behavior.  If you set it to anything
 else, Octave will check the time stamps on all function files.
 
 @c FIXME -- note about time stamps on files in NFS environments?
 
+@DOCSTRING(addpath)
+
+@DOCSTRING(genpath)
+
+@DOCSTRING(rmpath)
+
+@DOCSTRING(savepath)
+
 @DOCSTRING(path)
 
+@DOCSTRING(pathdef)
+
+@DOCSTRING(pathsep)
+
 @DOCSTRING(rehash)
 
 @DOCSTRING(file_in_loadpath)
 
 @DOCSTRING(ignore_function_time_stamp)
 
 @node Script Files
 @section Script Files
diff --git a/doc/interpreter/image.txi b/doc/interpreter/image.txi
--- a/doc/interpreter/image.txi
+++ b/doc/interpreter/image.txi
@@ -45,8 +45,10 @@ contact @email{bug@@octave.org}.
 
 @DOCSTRING(ocean)
 
 @DOCSTRING(rgb2ind)
 
 @DOCSTRING(saveimage)
 
 @DOCSTRING(IMAGE_PATH)
+
+@DOCSTRING(image_viewer)
diff --git a/doc/interpreter/linalg.txi b/doc/interpreter/linalg.txi
--- a/doc/interpreter/linalg.txi
+++ b/doc/interpreter/linalg.txi
@@ -42,21 +42,27 @@ 1989, and in @cite{@sc{Lapack} Users' Gu
 @DOCSTRING(orth)
 
 @DOCSTRING(pinv)
 
 @DOCSTRING(rank)
 
 @DOCSTRING(trace)
 
+@DOCSTRING(rref)
+
 @node Matrix Factorizations
 @section Matrix Factorizations
 
 @DOCSTRING(chol)
 
+@DOCSTRING(cholinv)
+
+@DOCSTRING(chol2inv)
+
 @DOCSTRING(hess)
 
 @DOCSTRING(lu)
 
 @DOCSTRING(qr)
 
 @DOCSTRING(qz)
 
diff --git a/doc/interpreter/matrix.txi b/doc/interpreter/matrix.txi
--- a/doc/interpreter/matrix.txi
+++ b/doc/interpreter/matrix.txi
@@ -208,19 +208,29 @@ create vectors with evenly or logarithmi
 
 @DOCSTRING(logspace)
 
 @node Famous Matrices
 @section Famous Matrices
 
 The following functions return famous matrix forms.
 
+@DOCSTRING(hadamard)
+
 @DOCSTRING(hankel)
 
 @DOCSTRING(hilb)
 
 @DOCSTRING(invhilb)
 
+@DOCSTRING(magic)
+
+@DOCSTRING(pascal)
+
+@DOCSTRING(rosser)
+
 @DOCSTRING(sylvester_matrix)
 
 @DOCSTRING(toeplitz)
 
 @DOCSTRING(vander)
+
+@DOCSTRING(wilkinson)
diff --git a/doc/interpreter/octave.texi b/doc/interpreter/octave.texi
--- a/doc/interpreter/octave.texi
+++ b/doc/interpreter/octave.texi
@@ -251,17 +251,16 @@ Strings
 
 * Creating Strings::            
 * Searching and Replacing::     
 * String Conversions::          
 * Character Class Functions::   
 
 Containers
 
-* Lists::                       
 * Cell Arrays::                 
 
 Variables
 
 * Global Variables::            
 * Status of Variables::         
 * Summary of Built-in Variables::  
 * Defaults from the Environment::  
diff --git a/doc/interpreter/optim.txi b/doc/interpreter/optim.txi
--- a/doc/interpreter/optim.txi
+++ b/doc/interpreter/optim.txi
@@ -18,20 +18,26 @@
 @cindex optimization
 @cindex LP
 @cindex QP
 @cindex NLP
 
 @node Linear Programming
 @section Linear Programming
 
+@DOCSTRING(glpk)
+
 @node Quadratic Programming
 @section Quadratic Programming
 
+@DOCSTRING(qp)
+
 @node Nonlinear Programming
 @section Nonlinear Programming
 
+@DOCSTRING(sqp)
+
 @node Linear Least Squares
 @section Linear Least Squares
 
 @DOCSTRING(gls)
 
 @DOCSTRING(ols)
diff --git a/doc/interpreter/plot.txi b/doc/interpreter/plot.txi
--- a/doc/interpreter/plot.txi
+++ b/doc/interpreter/plot.txi
@@ -9,105 +9,145 @@ All of Octave's plotting functions use @
 actual graphics. Most types of plots can be generated using the basic
 plotting functions, which are patterned after the equivalent functions
 in @sc{Matlab}.
 
 @menu
 * Two-Dimensional Plotting::    
 * Specialized Two-Dimensional Plots::  
 * Three-Dimensional Plotting::  
+* Manipulating Existing Plots::
 * Plot Annotations::            
 * Multiple Plots on One Page::  
 * Multiple Plot Windows::       
-@c *Exporting Plots::
+* Printing Plots::
 * Interaction with gnuplot::    
 @end menu
 
 @node Two-Dimensional Plotting
 @section Two-Dimensional Plotting
 
 The @sc{Matlab}-style two-dimensional plotting commands are:
 
 @cindex plotting
 @cindex graphics
 
+@DOCSTRING(axes)
+
 @DOCSTRING(plot)
 
+@DOCSTRING(line)
+
+@DOCSTRING(fplot)
+
+@DOCSTRING(drawnow)
+
+@DOCSTRING(shg)
+
 @DOCSTRING(hold)
 
 @DOCSTRING(ishold)
 
-@DOCSTRING(clearplot)
-
-@DOCSTRING(shg)
-
-@DOCSTRING(closeplot)
-
-@DOCSTRING(purge_tmp_files)
-
-@DOCSTRING(axis)
+@DOCSTRING(newplot)
 
 @node Specialized Two-Dimensional Plots
 @section Specialized Two-Dimensional Plots
 
 @DOCSTRING(bar)
 
 @DOCSTRING(contour)
 
+@DOCSTRING(contourc)
+
 @DOCSTRING(hist)
 
 @DOCSTRING(loglog)
 
 @DOCSTRING(polar)
 
 @DOCSTRING(semilogx)
 
 @DOCSTRING(semilogy)
 
+@DOCSTRING(stem)
+
 @DOCSTRING(stairs)
 
 @DOCSTRING(errorbar)
 
 @DOCSTRING(loglogerr)
 
 @DOCSTRING(semilogxerr)
 
 @DOCSTRING(semilogyerr)
 
 @node Three-Dimensional Plotting
 @section Three-Dimensional Plotting
 
-The @sc{Matlab}-style three-dimensional plotting commands are:
+@DOCSTRING(plot3)
 
 @DOCSTRING(mesh)
 
 @DOCSTRING(meshgrid)
 
 @DOCSTRING(meshdom)
 
+@DOCSTRING(view)
+
+@node Manipulating Existing Plots
+@section Manipulating Existing Plots
+
+@DOCSTRING(axis)
+
+@DOCSTRING(gca)
+
+@DOCSTRING(gcf)
+
+@DOCSTRING(get)
+
+@DOCSTRING(set)
+
+@DOCSTRING(clf)
+
+@DOCSTRING(delete)
+
+@DOCSTRING(close)
+
+@DOCSTRING(closereq)
+
 @node Plot Annotations
 @section Plot Annotations
 
-@DOCSTRING(grid)
-
 @DOCSTRING(title)
 
+@DOCSTRING(legend)
+
+@DOCSTRING(text)
+
 @DOCSTRING(xlabel)
 
+@DOCSTRING(box)
+
+@DOCSTRING(grid)
+
 @node Multiple Plots on One Page
 @section Multiple Plots on One Page
 
 @DOCSTRING(subplot)
 
 @node Multiple Plot Windows
 @section Multiple Plot Windows
 
 @DOCSTRING(figure)
 
-@c @node Exporting Plots
-@c FIXME -- add info about getting paper copies of plots.
+@node Printing Plots
+@section Printing Plots
+
+@DOCSTRING(print)
+
+@DOCSTRING(orient)
 
 @node Interaction with gnuplot
 @section Interaction with @code{gnuplot}
 
 @DOCSTRING(gnuplot_binary)
 
 @DOCSTRING(gnuplot_use_title_option)
diff --git a/doc/interpreter/poly.txi b/doc/interpreter/poly.txi
--- a/doc/interpreter/poly.txi
+++ b/doc/interpreter/poly.txi
@@ -42,23 +42,33 @@ p(x) = @var{c}(1) x^@var{N} + ... + @var
 @DOCSTRING(conv)
 
 @DOCSTRING(deconv)
 
 @DOCSTRING(poly)
 
 @DOCSTRING(polyderiv)
 
+@DOCSTRING(polyder)
+
 @DOCSTRING(polyfit)
 
+@DOCSTRING(polygcd)
+
 @DOCSTRING(polyinteg)
 
 @DOCSTRING(polyreduce)
 
 @DOCSTRING(polyval)
 
 @DOCSTRING(polyvalm)
 
 @DOCSTRING(residue)
 
 @DOCSTRING(roots)
 
 @DOCSTRING(polyout)
+
+@DOCSTRING(ppval)
+
+@DOCSTRING(mkpp)
+
+@DOCSTRING(unmkpp)
diff --git a/doc/interpreter/quad.txi b/doc/interpreter/quad.txi
--- a/doc/interpreter/quad.txi
+++ b/doc/interpreter/quad.txi
@@ -65,16 +65,22 @@ Then we simply call quad:
      @result{} 1.1522e-07
 @end group
 @end example
 
 Although @code{quad} returns a nonzero value for @var{ier}, the result
 is reasonably accurate (to see why, examine what happens to the result
 if you move the lower bound to 0.1, then 0.01, then 0.001, etc.).
 
+@DOCSTRING(quadl)
+
+@DOCSTRING(trapz)
+
+@DOCSTRING(cumtrapz)
+
 @node Orthogonal Collocation
 @section Orthogonal Collocation
 
 @DOCSTRING(colloc)
 
 Here is an example of using @code{colloc} to generate weight matrices
 for solving the second order differential equation
 @iftex
diff --git a/doc/interpreter/set.txi b/doc/interpreter/set.txi
--- a/doc/interpreter/set.txi
+++ b/doc/interpreter/set.txi
@@ -5,13 +5,19 @@
 @node Sets
 @chapter Sets
 
 Octave has a limited set of functions for managing sets of data, where a
 set is defined as a collection unique elements.
 
 @DOCSTRING(create_set)
 
+@DOCSTRING(unique)
+
 @DOCSTRING(union)
 
-@DOCSTRING(intersection)
+@DOCSTRING(intersect)
 
 @DOCSTRING(complement)
+
+@DOCSTRING(setdiff)
+
+@DOCSTRING(setxor)
diff --git a/doc/interpreter/stats.txi b/doc/interpreter/stats.txi
--- a/doc/interpreter/stats.txi
+++ b/doc/interpreter/stats.txi
@@ -249,65 +249,65 @@ you would like to help improve Octave in
 @DOCSTRING(logncdf)
 
 @DOCSTRING(logninv)
 
 @DOCSTRING(lognpdf)
 
 @DOCSTRING(lognrnd)
 
+@DOCSTRING(nbincdf)
+
+@DOCSTRING(nbininv)
+
+@DOCSTRING(nbinpdf)
+
+@DOCSTRING(nbinrnd)
+
 @DOCSTRING(normcdf)
 
 @DOCSTRING(norminv)
 
 @DOCSTRING(normpdf)
 
 @DOCSTRING(normrnd)
 
-@DOCSTRING(pascal_cdf)
-
-@DOCSTRING(pascal_inv)
-
-@DOCSTRING(pascal_pdf)
-
-@DOCSTRING(pascal_rnd)
-
 @DOCSTRING(poisscdf)
 
 @DOCSTRING(poissinv)
 
 @DOCSTRING(poisspdf)
 
 @DOCSTRING(poissrnd)
 
-@DOCSTRING(stdnormal_cdf)
-
-@DOCSTRING(stdnormal_inv)
-
-@DOCSTRING(stdnormal_pdf)
-
-@DOCSTRING(stdnormal_rnd)
-
 @DOCSTRING(tcdf)
 
 @DOCSTRING(tinv)
 
 @DOCSTRING(tpdf)
 
 @DOCSTRING(trnd)
 
+@DOCSTRING(unidcdf)
+
+@DOCSTRING(unidinv)
+
+@DOCSTRING(unidpdf)
+
+@DOCSTRING(unidrnd)
+
 @DOCSTRING(unifcdf)
 
 @DOCSTRING(unifinv)
 
 @DOCSTRING(unifpdf)
 
 @DOCSTRING(unifrnd)
 
-@DOCSTRING(weibcdf)
+@DOCSTRING(wblcdf)
 
-@DOCSTRING(weibinv)
+@DOCSTRING(wblinv)
 
-@DOCSTRING(weibpdf)
+@DOCSTRING(wblpdf)
 
-@DOCSTRING(weibull_rnd)
+@DOCSTRING(wblrnd)
 
 @DOCSTRING(wienrnd)
diff --git a/doc/interpreter/strings.txi b/doc/interpreter/strings.txi
--- a/doc/interpreter/strings.txi
+++ b/doc/interpreter/strings.txi
@@ -130,39 +130,57 @@ Data Types}, for more information about 
 @DOCSTRING(char)
 
 @DOCSTRING(int2str)
 
 @DOCSTRING(com2str)
 
 @DOCSTRING(strcat)
 
+@DOCSTRING(strvcat)
+
+@DOCSTRING(strtrunc)
+
 @DOCSTRING(string_fill_char)
 
 @DOCSTRING(str2mat)
 
 @DOCSTRING(ischar)
 
-@DOCSTRING(isstr)
+@DOCSTRING(mat2str)
+
+@DOCSTRING(num2str)
 
 @node Searching and Replacing
 @section Searching and Replacing
 
 @DOCSTRING(deblank)
 
 @DOCSTRING(findstr)
 
 @DOCSTRING(index)
 
 @DOCSTRING(rindex)
 
+@DOCSTRING(strfind)
+
+@DOCSTRING(strmatch)
+
+@DOCSTRING(strtok)
+
 @DOCSTRING(split)
 
 @DOCSTRING(strcmp)
 
+@DOCSTRING(strcmpi)
+
+@DOCSTRING(strncmp)
+
+@DOCSTRING(strncmpi)
+
 @DOCSTRING(strrep)
 
 @DOCSTRING(substr)
 
 @DOCSTRING(regexp)
 
 @DOCSTRING(regexpi)
 
@@ -178,16 +196,18 @@ Data Types}, for more information about 
 @DOCSTRING(hex2dec)
 
 @DOCSTRING(dec2base)
 
 @DOCSTRING(base2dec)
 
 @DOCSTRING(strjust)
 
+@DOCSTRING(str2double)
+
 @DOCSTRING(str2num)
 
 @DOCSTRING(toascii)
 
 @DOCSTRING(tolower)
 
 @DOCSTRING(toupper)
 
diff --git a/doc/interpreter/struct.txi b/doc/interpreter/struct.txi
--- a/doc/interpreter/struct.txi
+++ b/doc/interpreter/struct.txi
@@ -179,13 +179,27 @@ x.v =
 
 It is also possible to cycle through all the elements of a structure in
 a loop, using a special form of the @code{for} statement
 (@pxref{The for Statement})
 
 The following functions are available to give you information about
 structures.
 
+@DOCSTRING(struct)
+
 @DOCSTRING(isstruct)
 
 @DOCSTRING(fieldnames)
 
 @DOCSTRING(isfield)
+
+@DOCSTRING(getfield)
+
+@DOCSTRING(orderfields)
+
+@DOCSTRING(rmfield)
+
+@DOCSTRING(setfield)
+
+@DOCSTRING(struct2cell)
+
+@DOCSTRING(substruct)
diff --git a/doc/interpreter/system.txi b/doc/interpreter/system.txi
--- a/doc/interpreter/system.txi
+++ b/doc/interpreter/system.txi
@@ -68,16 +68,18 @@ Time zone.
 @end table
 
 @noindent
 In the descriptions of the following functions, this structure is
 referred to as a @var{tm_struct}.
 
 @DOCSTRING(time)
 
+@DOCSTRING(now)
+
 @DOCSTRING(ctime)
 
 @DOCSTRING(gmtime)
 
 @DOCSTRING(localtime)
 
 @DOCSTRING(mktime)
 
@@ -105,16 +107,28 @@ useful.
 @DOCSTRING(tic)
 
 @DOCSTRING(pause)
 
 @DOCSTRING(sleep)
 
 @DOCSTRING(usleep)
 
+@DOCSTRING(  datenum)
+
+@DOCSTRING(datestr)
+
+@DOCSTRING(datevec)
+
+@DOCSTRING(calendar)
+
+@DOCSTRING(weekday)
+
+@DOCSTRING(eomday)
+
 @node Filesystem Utilities
 @section Filesystem Utilities
 
 Octave includes the following functions for renaming and deleting files,
 creating, deleting, and reading directories, and for getting information
 about the status of files.
 
 @DOCSTRING(rename)
diff --git a/scripts/plot/contourc.m b/scripts/plot/contourc.m
--- a/scripts/plot/contourc.m
+++ b/scripts/plot/contourc.m
@@ -13,17 +13,17 @@
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
 ## 02110-1301, USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {} [@var{c}, @var{lev}] =  contourc (@var{x}, @var{y}, @var{z}, @var{vv})
+## @deftypefn {Function File} {[@var{c}, @var{lev}] =}  contourc (@var{x}, @var{y}, @var{z}, @var{vv})
 ## Compute isolines (countour lines) of the matrix @var{z}. 
 ## Parameters @var{x}, @var{y} and @var{vn} are optional.
 ##
 ## The return value @var{lev} is a vector of the contour levels.
 ## The return value @var{c} is a 2 by @var{n} matrix containing the
 ## contour lines in the following format
 ##
 ## @example
@@ -37,17 +37,17 @@
 ## 
 ## If @var{x} and @var{y} are omitted they are taken as the row/column 
 ## index of @var{z}.  @var{vn} is either a scalar denoting the number of lines 
 ## to compute or a vector containing the values of the lines. If only one 
 ## value is wanted, set @code{@var{vn} = [val, val]};
 ## If @var{vn} is omitted it defaults to 10.
 ##
 ## @example
-## @var{c}=contourc (@var{x}, @var{y}, @var{z}, linspace(0,2*pi,10))
+## c = contourc (x, y, z, linspace (0, 2*pi, 10));
 ## @end example
 ## @seealso{contour}
 ## @end deftypefn
 
 ## Author: shaia
 
 function [c, lev] = contourc (varargin)
 
