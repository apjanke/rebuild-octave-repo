# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1264058913 18000
#      Thu Jan 21 02:28:33 2010 -0500
# Node ID eb64bf1c61073a1932f5eacd3efb736b58cb50e9
# Parent  2b1f3f156aaf8b7188544e9fc874984311a751f4
use unlink module from gnulib

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,12 @@
+2010-01-21  John W. Eaton  <jwe@octave.org>
+
+	* bootstrap.conf (gnulib_modules): Include unlink in the list.
+
 2010-01-21  John W. Eaton  <jwe@octave.org>
 
 	* bootstrap.conf (gnulib_modules): Include strptime in the list.
 
 2010-01-21  John W. Eaton  <jwe@octave.org>
 
 	* bootstrap.conf (gnulib_modules): Include rename in the list.
 
diff --git a/bootstrap.conf b/bootstrap.conf
--- a/bootstrap.conf
+++ b/bootstrap.conf
@@ -28,16 +28,17 @@ gnulib_modules="
   mkdir
   mkfifo
   rename
   rmdir
   stat
   strftime
   strptime
   times
+  unlink
   round
 "
 
 # Additional xgettext options to use.  Use "\\\newline" to break lines.
 XGETTEXT_OPTIONS=$XGETTEXT_OPTIONS'\\\
  --from-code=UTF-8\\\
  --flag=asprintf:2:c-format --flag=vasprintf:2:c-format\\\
  --flag=asnprintf:3:c-format --flag=vasnprintf:3:c-format\\\
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,14 @@
+2010-01-21  John W. Eaton  <jwe@octave.org>
+
+	* lo-cutils.c (octave_unlink): New funtion.
+	* lo-utils.h: Provide decl.
+	* file-ops.cc (file_ops::unlink): Call octave_unlink.
+
 2010-01-21  John W. Eaton  <jwe@octave.org>
 
 	* lo-cutils.c (octave_umask): New funtion.
 	* lo-utils.h: Provide decl.
 	* file-ops.cc (file_ops::umask): Call octave_umask.
 
 2010-01-21  John W. Eaton  <jwe@octave.org>
 
diff --git a/liboctave/file-ops.cc b/liboctave/file-ops.cc
--- a/liboctave/file-ops.cc
+++ b/liboctave/file-ops.cc
@@ -828,27 +828,23 @@ file_ops::unlink (const std::string& nam
 
 int
 file_ops::unlink (const std::string& name, std::string& msg)
 {
   msg = std::string ();
 
   int status = -1;
 
-#if defined (HAVE_UNLINK)
-  status = ::unlink (name.c_str ());
+  status = octave_unlink (name.c_str ());
 
   if (status < 0)
     {
       using namespace std;
       msg = ::strerror (errno);
     }
-#else
-  msg = NOT_SUPPORTED ("unlink");
-#endif
 
   return status;
 }
 
 std::string
 file_ops::concat (const std::string& dir, const std::string& file)
 {
   return dir.empty ()
diff --git a/liboctave/lo-cutils.c b/liboctave/lo-cutils.c
--- a/liboctave/lo-cutils.c
+++ b/liboctave/lo-cutils.c
@@ -133,16 +133,22 @@ octave_umask (mode_t mode)
 #if defined (HAVE_UMASK)
   return umask (mode);
 #else
   return 0;
 #endif
 }
 
 OCTAVE_API int
+octave_unlink (const char *name)
+{
+  return unlink (name);
+}
+
+OCTAVE_API int
 octave_gethostname (char *name, int namelen)
 {
   return gethostname (name, namelen);
 }
 
 #ifdef HAVE_LOADLIBRARY_API
 #include <windows.h>
 
diff --git a/liboctave/lo-utils.h b/liboctave/lo-utils.h
--- a/liboctave/lo-utils.h
+++ b/liboctave/lo-utils.h
@@ -66,16 +66,18 @@ extern "C" OCTAVE_API char *oct_strptime
                                           struct tm *tm);
 
 extern "C" OCTINTERP_API int octave_strcasecmp (const char *s1, const char *s2);
 
 extern "C" OCTINTERP_API int octave_strncasecmp (const char *s1, const char *s2, size_t n);
 
 extern "C" OCTAVE_API mode_t octave_umask (mode_t);
 
+extern "C" OCTAVE_API int octave_unlink (const char *name);
+
 template <typename T>
 T
 octave_read_value (std::istream& is)
 {
   T retval;
   is >> retval;
   return retval;
 }
