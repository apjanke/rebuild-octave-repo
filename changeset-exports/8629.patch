# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1233253768 18000
#      Thu Jan 29 13:29:28 2009 -0500
# Node ID f07730ed561303175fbaa3f6c7f82aa10d09051f
# Parent  17a3a7bebac56df797d5cc10fe0a72131fabdec6
test_system.m: use isfield instead of struct_contains

diff --git a/test/ChangeLog b/test/ChangeLog
--- a/test/ChangeLog
+++ b/test/ChangeLog
@@ -1,8 +1,12 @@
+2009-01-29  John W. Eaton  <jwe@octave.org>
+
+	* test_system.m: Use isfield instead of struct_contains.
+
 2009-01-25  Thorsten Meyer  <thorsten@hexe>
 
 	* test_struct.m: Add struct array tests.
 
 2009-01-23  Søren Hauberg  <hauberg@gmail.com>
 
 	* test_prefer.m: Update to match new API of the 'type' function.
 
diff --git a/test/test_system.m b/test/test_system.m
--- a/test/test_system.m
+++ b/test/test_system.m
@@ -170,49 +170,49 @@
 %% test/octave.test/system/umask-3.m
 %!error <Invalid call to umask.*> umask (1, 2);
 
 %% test/octave.test/system/stat-1.m
 %!test
 %! [s, err, msg] = stat (filesep);
 %! assert((err == 0
 %! && isstruct (s)
-%! && struct_contains (s, "dev")
-%! && struct_contains (s, "ino")
-%! && struct_contains (s, "modestr")
-%! && struct_contains (s, "nlink")
-%! && struct_contains (s, "uid")
-%! && struct_contains (s, "gid")
-%! && struct_contains (s, "size")
-%! && struct_contains (s, "atime")
-%! && struct_contains (s, "mtime")
-%! && struct_contains (s, "ctime")
+%! && isfield (s, "dev")
+%! && isfield (s, "ino")
+%! && isfield (s, "modestr")
+%! && isfield (s, "nlink")
+%! && isfield (s, "uid")
+%! && isfield (s, "gid")
+%! && isfield (s, "size")
+%! && isfield (s, "atime")
+%! && isfield (s, "mtime")
+%! && isfield (s, "ctime")
 %! && ischar (msg)));
 
 %% test/octave.test/system/stat-2.m
 %!error <Invalid call to stat.*> stat ();
 
 %% test/octave.test/system/stat-3.m
 %!error <Invalid call to stat.*> stat ("foo", 1);
 
 %% test/octave.test/system/lstat-1.m
 %!test
 %! [s, err, msg] = lstat (filesep);
 %! assert((err == 0
 %! && isstruct (s)
-%! && struct_contains (s, "dev")
-%! && struct_contains (s, "ino")
-%! && struct_contains (s, "modestr")
-%! && struct_contains (s, "nlink")
-%! && struct_contains (s, "uid")
-%! && struct_contains (s, "gid")
-%! && struct_contains (s, "size")
-%! && struct_contains (s, "atime")
-%! && struct_contains (s, "mtime")
-%! && struct_contains (s, "ctime")
+%! && isfield (s, "dev")
+%! && isfield (s, "ino")
+%! && isfield (s, "modestr")
+%! && isfield (s, "nlink")
+%! && isfield (s, "uid")
+%! && isfield (s, "gid")
+%! && isfield (s, "size")
+%! && isfield (s, "atime")
+%! && isfield (s, "mtime")
+%! && isfield (s, "ctime")
 %! && ischar (msg)));
 
 %% test/octave.test/system/lstat-2.m
 %!error <Invalid call to lstat.*> lstat ();
 
 %% test/octave.test/system/lstat-3.m
 %!error <Invalid call to lstat.*> lstat ("foo", 1);
 
@@ -365,23 +365,23 @@
 %% test/octave.test/system/pwd-1.m
 %!assert(ischar (pwd ()));
 
 %% test/octave.test/system/getpwent-1.m
 %!testif HAVE_GETPWENT
 %! s = getpwent ();
 %! endpwent (); 
 %! assert((isstruct (s)
-%! && struct_contains (s, "name")
-%! && struct_contains (s, "passwd")
-%! && struct_contains (s, "uid")
-%! && struct_contains (s, "gid")
-%! && struct_contains (s, "gecos")
-%! && struct_contains (s, "dir")
-%! && struct_contains (s, "shell")));
+%! && isfield (s, "name")
+%! && isfield (s, "passwd")
+%! && isfield (s, "uid")
+%! && isfield (s, "gid")
+%! && isfield (s, "gecos")
+%! && isfield (s, "dir")
+%! && isfield (s, "shell")));
 
 %% test/octave.test/system/getpwent-2.m
 %!error <Invalid call to getpwent.*> getpwent (1);
 
 %% test/octave.test/system/getpwuid-1.m
 %!testif HAVE_GETPWUID
 %! x = getpwent ();
 %! y = getpwuid (x.uid);
@@ -421,20 +421,20 @@
 %% test/octave.test/system/endpwent-1.m
 %!error <Invalid call to endpwent.*> endpwent (1);
 
 %% test/octave.test/system/getgrent-1.m
 %!testif HAVE_GETGRENT
 %! x = getgrent ();
 %! endgrent ();
 %! assert((isstruct (x)
-%! && struct_contains (x, "name")
-%! && struct_contains (x, "passwd")
-%! && struct_contains (x, "gid")
-%! && struct_contains (x, "mem")));
+%! && isfield (x, "name")
+%! && isfield (x, "passwd")
+%! && isfield (x, "gid")
+%! && isfield (x, "mem")));
 
 %% test/octave.test/system/getgrent-2.m
 %!error <Invalid call to getgrent.*> getgrent (1);
 
 %% test/octave.test/system/getgrgid-1.m
 %!testif HAVE_GETGRGID
 %! x = getgrent ();
 %! y = getgrgid (x.gid);
