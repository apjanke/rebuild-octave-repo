# HG changeset patch
# User jwe
# Date 1110404250 0
#      Wed Mar 09 21:37:30 2005 +0000
# Node ID 741618f692d76927dc35f8714dc75d70176149b5
# Parent  cd5cc2a805899745bf0432604abe5a0270b39f62
[project @ 2005-03-09 21:37:29 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,13 @@
 2005-03-09  John W. Eaton  <jwe@octave.org>
 
+	* load-save.cc (Fload, Fsave): Accept -text as an alias for -ascii.
+	Issue warning for future change in meaning of -ascii.
+
 	* Makefile.in (bin-dist): Delete target.
 	(BINDISTFILES, BINDISTLIBS): Delete variables.
 
 2005-03-04  John W. Eaton  <jwe@octave.org>
 
 	* octave.cc (octave_main): Concatenate all --eval arguments.
 
 2005-03-03  John W. Eaton  <jwe@octave.org>
diff --git a/src/load-save.cc b/src/load-save.cc
--- a/src/load-save.cc
+++ b/src/load-save.cc
@@ -573,16 +573,21 @@ Valid options for @code{load} are listed
 @item -force\n\
 The @samp{-force} option is accepted but ignored for backward\n\
 compatiability. Octave now overwrites variables currently in memeory with\n\
 the same name as those found in the file.\n\
 \n\
 @item -ascii\n\
 Force Octave to assume the file is in Octave's text format.\n\
 \n\
+@strong{WARNING: the meaning of this option will change in a future\n\
+version of Octave to be compatible with @sc{Matlab}.  To keep the\n\
+meaning of your code the same across this change, use the @code{-text}\n\
+option instead.}\n\
+\n\
 @item -binary\n\
 Force Octave to assume the file is in Octave's binary format.\n\
 \n\
 @item -mat\n\
 @itemx -mat-binary\n\
 Force Octave to assume the file is in @sc{Matlab}'s binary format.\n\
 \n\
 @item -mat4-binary\n\
@@ -599,16 +604,18 @@ skip some datasets in formats that it ca
 HAVE_HDF5_HELP_STRING
 
 "\n\
 @item -import\n\
 The @samp{-import} is accepted but ignored for backward compatiability.\n\
 Octave can now support multi-dimensional HDF data and automatically\n\
 modifies variable names if they are invalid Octave identifiers.\n\
 \n\
+@item -text
+Force Octave to assume the file is in Octave's text format.\n\
 @end table\n\
 @end deffn")
 {
   octave_value_list retval;
 
   int argc = args.length () + 1;
 
   string_vector argv = args.make_argv ("load");
@@ -639,16 +646,21 @@ modifies variable names if they are inva
 	  list_only = true;
 	}
       else if (argv[i] == "-verbose" || argv[i] == "-v")
 	{
 	  verbose = true;
 	}
       else if (argv[i] == "-ascii" || argv[i] == "-a")
 	{
+	  warning ("the meaning of this option will change in a future");
+	  warning ("version of Octave to be compatible with @sc{Matlab}.");
+	  warning ("To keep the meaning of your code the same across");
+	  warning ("this change, use the -text option instead.");
+
 	  format = LS_ASCII;
 	}
       else if (argv[i] == "-binary" || argv[i] == "-b")
 	{
 	  format = LS_BINARY;
 	}
       else if (argv[i] == "-mat-binary" || argv[i] == "-mat" || argv[i] == "-m")
 	{
@@ -666,16 +678,20 @@ modifies variable names if they are inva
 	  error ("load: octave executable was not linked with HDF5 library");
 	  return retval;
 #endif /* ! HAVE_HDF5 */
 	}
       else if (argv[i] == "-import" || argv[i] == "-i")
 	{
 	  warning ("load: -import ignored");
 	}
+      else if (argv[i] == "-text" || argv[i] == "-t")
+	{
+	  format = LS_ASCII;
+	}
       else
 	break;
     }
 
   if (i == argc)
     {
       print_usage ("load");
       return retval;
@@ -1197,16 +1213,21 @@ all the variables in the current scope. 
 @code{save} command are listed in the following table.  Options that\n\
 modify the output format override the format specified by the built-in\n\
 variable @code{default_save_format}.\n\
 \n\
 @table @code\n\
 @item -ascii\n\
 Save the data in Octave's text data format.\n\
 \n\
+@strong{WARNING: the meaning of this option will change in a future\n\
+version of Octave to be compatible with @sc{Matlab}.  To keep the\n\
+meaning of your code the same across this change, use the @code{-text}\n\
+option instead.}\n\
+\n\
 @item -binary\n\
 Save the data in Octave's binary data format.\n\
 \n\
 @item -float-binary\n\
 Save the data in Octave's binary data format but only using single\n\
 precision.  You should use this format only if you know that all the\n\
 values to be saved can be represented in single precision.\n\
 \n\
@@ -1244,16 +1265,19 @@ Match any single character.\n\
 @item *\n\
 Match zero or more characters.\n\
 \n\
 @item [ @var{list} ]\n\
 Match the list of characters specified by @var{list}.  If the first\n\
 character is @code{!} or @code{^}, match all characters except those\n\
 specified by @var{list}.  For example, the pattern @samp{[a-zA-Z]} will\n\
 match all lower and upper case alphabetic characters. \n\
+\n\
+@item -text
+Save the data in Octave's text data format.\n\
 @end table\n\
 \n\
 Except when using the @sc{Matlab} binary data file format, saving global\n\
 variables also saves the global status of the variable, so that if it is\n\
 restored at a later time using @samp{load}, it will be restored as a\n\
 global variable.\n\
 \n\
 The command\n\
@@ -1291,16 +1315,25 @@ the file @file{data} in Octave's binary 
   for (i = 1; i < argc; i++)
     {
       if (argv[i] == "-append")
 	{
 	  append = true;
 	}
       else if (argv[i] == "-ascii" || argv[i] == "-a")
 	{
+	  warning ("the meaning of this option will change in a future");
+	  warning ("version of Octave to be compatible with @sc{Matlab}.");
+	  warning ("To keep the meaning of your code the same across");
+	  warning ("this change, use the -text option instead.");
+
+	  format = LS_ASCII;
+	}
+      else if (argv[i] == "-text" || argv[i] == "-t")
+	{
 	  format = LS_ASCII;
 	}
       else if (argv[i] == "-binary" || argv[i] == "-b")
 	{
 	  format = LS_BINARY;
 	}
       else if (argv[i] == "-hdf5" || argv[i] == "-h")
 	{
