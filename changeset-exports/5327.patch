# HG changeset patch
# User dbateman
# Date 1115024241 0
#      Mon May 02 08:57:21 2005 +0000
# Node ID 68eae0f668c4b8e4c798d0e8d0e81c8fcfef5564
# Parent  4f5faf0fd322346a11b23114bc7e8a1ff54c3a6e
[project @ 2005-05-02 08:57:21 by dbateman]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2005-05-02  David Bateman  <dbateman@free.fr>
+
+	* ov-re-sparse.cc, ov-cx-sparse.cc (load_binary): read save_type into
+	one byte variable.
+	
 2005-04-29  John W. Eaton  <jwe@octave.org>
 
 	* oct-stream.cc (DO_LITERAL_CONVERSION): Cast fmt[i] to unsigned
 	char for comparison.
 
 	* c-file-ptr-stream.h (c_file_ptr_stream): New template class,
 	converted from i_c_file_ptr_stream.
 	(i_c_file_ptr_stream, o_c_file_ptr_stream, io_c_file_ptr_stream):
diff --git a/src/ov-cx-sparse.cc b/src/ov-cx-sparse.cc
--- a/src/ov-cx-sparse.cc
+++ b/src/ov-cx-sparse.cc
@@ -266,16 +266,18 @@ octave_sparse_complex_matrix::save_binar
   return true;
 }
 
 bool
 octave_sparse_complex_matrix::load_binary (std::istream& is, bool swap,
 				   oct_mach_info::float_format fmt)
 {
   FOUR_BYTE_INT nz, nc, nr, tmp;
+  char ctmp;
+
   if (! is.read (X_CAST (char *, &tmp), 4))
     return false;
 
   if (swap)
     swap_bytes<4> (&tmp);
 
   if (tmp != -2) {
     error("load: only 2D sparse matrices are supported");
@@ -315,20 +317,20 @@ octave_sparse_complex_matrix::load_binar
       OCTAVE_QUIT;
       if (! is.read (X_CAST (char *, &tmp), 4))
 	return false;
       if (swap)
 	swap_bytes<4> (&tmp);
       m.ridx(i) = tmp;
     }
 
-  if (! is.read (X_CAST (char *, &tmp), 1))
+  if (! is.read (X_CAST (char *, &ctmp), 1))
     return false;
   
-  read_doubles (is, X_CAST(double *, m.data()), X_CAST (save_type, tmp), 
+  read_doubles (is, X_CAST(double *, m.data()), X_CAST (save_type, ctmp), 
 		2 * nz, swap, fmt);
 
   if (error_state || ! is)
     return false;
   matrix = m;
 
   return true;
 }
diff --git a/src/ov-re-sparse.cc b/src/ov-re-sparse.cc
--- a/src/ov-re-sparse.cc
+++ b/src/ov-re-sparse.cc
@@ -311,16 +311,18 @@ octave_sparse_matrix::save_binary (std::
   return true;
 }
 
 bool
 octave_sparse_matrix::load_binary (std::istream& is, bool swap,
 				   oct_mach_info::float_format fmt)
 {
   FOUR_BYTE_INT nz, nc, nr, tmp;
+  char ctmp;
+
   if (! is.read (X_CAST (char *, &tmp), 4))
     return false;
 
   if (swap)
     swap_bytes<4> (&tmp);
 
   if (tmp != -2) {
     error("load: only 2D sparse matrices are supported");
@@ -360,21 +362,20 @@ octave_sparse_matrix::load_binary (std::
       OCTAVE_QUIT;
       if (! is.read (X_CAST (char *, &tmp), 4))
 	return false;
       if (swap)
 	swap_bytes<4> (&tmp);
       m.xridx(i) = tmp;
     }
 
-  if (! is.read (X_CAST (char *, &tmp), 1))
+  if (! is.read (X_CAST (char *, &ctmp), 1))
     return false;
   
-  double *re = m.xdata ();
-  read_doubles (is, re, X_CAST (save_type, tmp), nz, swap, fmt);
+  read_doubles (is, m.xdata (), X_CAST (save_type, ctmp), nz, swap, fmt);
 
   if (error_state || ! is)
     return false;
   matrix = m;
 
   return true;
 }
 
