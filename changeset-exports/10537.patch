# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1271747116 -7200
#      Tue Apr 20 09:05:16 2010 +0200
# Node ID fdf28dae0f3702934fc4a83b969fd64584761974
# Parent  74cb77f0a163f6d294b2a09069954b67ec25dd35
remove old assign decls from Sparse.h

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,12 @@
+2010-04-20  Jaroslav Hajek  <highegg@gmail.com>
+
+	* Sparse.h (::assign, ::assign1): Remove declarations.
+
 2010-04-19  Jaroslav Hajek  <highegg@gmail.com>
 
 	* Array.cc (Array<T>::cat): Fast return for single array case.
 	* Sparse.cc (Sparse<T>::cat): Ditto.
 
 2010-04-19  Jaroslav Hajek  <highegg@gmail.com>
 
 	* Array.cc (Array<T>::cat): Miscellaneous fixes.
diff --git a/liboctave/Sparse.h b/liboctave/Sparse.h
--- a/liboctave/Sparse.h
+++ b/liboctave/Sparse.h
@@ -578,28 +578,16 @@ public:
   template <class U>
   Sparse<U>
   map (U (&fcn) (const T&)) const
   { return map<U, U (&) (const T&)> (fcn); }
 
   bool indices_ok (void) const { return rep->indices_ok (); }
 };
 
-// NOTE: these functions should be friends of the Sparse<T> class and
-// Sparse<T>::dimensions should be protected, not public, but we can't
-// do that because of bugs in gcc prior to 3.3.
-
-template <class LT, class RT>
-/* friend */ int
-assign (Sparse<LT>& lhs, const Sparse<RT>& rhs);
-
-template <class LT, class RT>
-/* friend */ int
-assign1 (Sparse<LT>& lhs, const Sparse<RT>& rhs);
-
 template<typename T>
 std::istream&
 read_sparse_matrix (std::istream& is, Sparse<T>& a,
                     T (*read_fcn) (std::istream&))
 {
   octave_idx_type nr = a.rows ();
   octave_idx_type nc = a.cols ();
   octave_idx_type nz = a.nzmax ();
