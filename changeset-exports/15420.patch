# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1348079927 14400
#      Wed Sep 19 14:38:47 2012 -0400
# Node ID 1249a615c91b2c6ebaa168e1293de65b1d17e570
# Parent  2afbe42956829eb7b5990402ebee0e5ae98a99c6
call built-in functions directly in GUI callbacks

* main-window.cc: Include builtins.h instead of debug.h and
variables.h.
(main_window::save_workspace_callback): Call Fsave directly.
(main_window::load_workspace_callback): Call Fload directly.
(main_window::clear_workspace_callback):Call Fclear directly.
(main_window::change_directory_callback): Call Fcd, not
octave_env::chdir.
(main_window::debug_continue_callback): Call Fdbcont directly.
(main_window::debug_step_into_callback): Call Fdbstep directly.
(main_window::debug_step_over_callback): Call Fdbstep directly.
(main_window::debug_step_out_callback): Call Fdbstep directly.
(main_window::debug_quit_callback): Call Fdbquit directly.
(main_window::exit_callback): Call Fquit directly.
* oct-obj.h (ovl): New functions.
* debug.cc, debug.h (debug_step, debug_quit, debug_continue): Delete.
* load-save.cc, load-save.h (load_workspace, save_workspace): Delete.
* variables.cc, varaibles.h (clear_current_scope): Delete.

diff --git a/libgui/src/main-window.cc b/libgui/src/main-window.cc
--- a/libgui/src/main-window.cc
+++ b/libgui/src/main-window.cc
@@ -37,21 +37,20 @@ along with Octave; see the file COPYING.
 #include <QMessageBox>
 #include <QIcon>
 
 #include "file-editor.h"
 #include "main-window.h"
 #include "octave-link.h"
 #include "settings-dialog.h"
 
-#include "debug.h"
+#include "builtins.h"
 #include "defaults.h"
 #include "load-save.h"
 #include "toplev.h"
-#include "variables.h"
 #include "version.h"
 
 #include "cmd-hist.h"
 #include "oct-env.h"
 
 main_window::main_window (QWidget *p)
   : QMainWindow (p)
 {
@@ -866,72 +865,72 @@ main_window::construct ()
            SIGNAL (quit_debug_mode_signal ()),
            this,
            SLOT (handle_quit_debug_mode ()));
 }
 
 void
 main_window::save_workspace_callback (const std::string& file)
 {
-  save_workspace (file);
+  Fsave (ovl (file));
 }
 
 void
 main_window::load_workspace_callback (const std::string& file)
 {
-  load_workspace (file);
+  Fload (ovl (file));
 }
 
 void
 main_window::clear_workspace_callback (void)
 {
-  clear_current_scope ();
+  Fclear ();
 }
 
 void
 main_window::clear_history_callback (void)
 {
   command_history::clear ();
 
   _history_dock_widget->reset_model ();
 }
 
 void
 main_window::change_directory_callback (const std::string& directory)
 {
-  octave_env::chdir (directory); 
+  Fcd (ovl (directory));
 }
 
 void
 main_window::debug_continue_callback (void)
 {
-  debug_continue ();
+  Fdbcont ();
 }
 
 void
 main_window::debug_step_into_callback (void)
 {
-  debug_step ("in");
+  Fdbstep (ovl ("in"));
 }
 
 void
 main_window::debug_step_over_callback (void)
 {
-  debug_step ();
+  Fdbstep ();
 }
 
 void
 main_window::debug_step_out_callback (void)
 {
-  debug_step ("out");
+  Fdbstep (ovl ("out"));
 }
 
 void
 main_window::debug_quit_callback (void)
 {
-  debug_quit ();
+  Fdbquit ();
 }
 
 void
 main_window::exit_callback (void)
 {
-  clean_up_and_exit (0);
+  Fquit ();
 }
diff --git a/libinterp/interp-core/oct-obj.h b/libinterp/interp-core/oct-obj.h
--- a/libinterp/interp-core/oct-obj.h
+++ b/libinterp/interp-core/oct-obj.h
@@ -161,9 +161,157 @@ private:
     }
 
   const octave_value& elem (octave_idx_type n) const
     { return data(n); }
 
   DECLARE_OCTAVE_ALLOCATOR
 };
 
+// Make it easy to build argument lists for built-in functions or for
+// returning values.
+
+inline octave_value_list
+ovl (const octave_value& a0)
+{
+  octave_value_list retval;
+  retval(0) = a0;
+  return retval;
+}
+
+inline octave_value_list
+ovl (const octave_value& a0, const octave_value& a1)
+{
+  octave_value_list retval;
+  retval(1) = a1;
+  retval(0) = a0;
+  return retval;
+}
+
+inline octave_value_list
+ovl (const octave_value& a0, const octave_value& a1,
+     const octave_value& a2)
+{
+  octave_value_list retval;
+  retval(2) = a2;
+  retval(1) = a1;
+  retval(0) = a0;
+  return retval;
+}
+
+inline octave_value_list
+ovl (const octave_value& a0, const octave_value& a1,
+     const octave_value& a2, const octave_value& a3)
+{
+  octave_value_list retval;
+  retval(3) = a3;
+  retval(2) = a2;
+  retval(1) = a1;
+  retval(0) = a0;
+  return retval;
+}
+
+inline octave_value_list
+ovl (const octave_value& a0, const octave_value& a1,
+     const octave_value& a2, const octave_value& a3,
+     const octave_value& a4)
+{
+  octave_value_list retval;
+  retval(4) = a4;
+  retval(3) = a3;
+  retval(2) = a2;
+  retval(1) = a1;
+  retval(0) = a0;
+  return retval;
+}
+
+inline octave_value_list
+ovl (const octave_value& a0, const octave_value& a1,
+     const octave_value& a2, const octave_value& a3,
+     const octave_value& a4, const octave_value& a5)
+{
+  octave_value_list retval;
+  retval(5) = a5;
+  retval(4) = a4;
+  retval(3) = a3;
+  retval(2) = a2;
+  retval(1) = a1;
+  retval(0) = a0;
+  return retval;
+}
+
+inline octave_value_list
+ovl (const octave_value& a0, const octave_value& a1,
+     const octave_value& a2, const octave_value& a3,
+     const octave_value& a4, const octave_value& a5,
+     const octave_value& a6)
+{
+  octave_value_list retval;
+  retval(6) = a6;
+  retval(5) = a5;
+  retval(4) = a4;
+  retval(3) = a3;
+  retval(2) = a2;
+  retval(1) = a1;
+  retval(0) = a0;
+  return retval;
+}
+
+inline octave_value_list
+ovl (const octave_value& a0, const octave_value& a1,
+     const octave_value& a2, const octave_value& a3,
+     const octave_value& a4, const octave_value& a5,
+     const octave_value& a6, const octave_value& a7)
+{
+  octave_value_list retval;
+  retval(7) = a7;
+  retval(6) = a6;
+  retval(5) = a5;
+  retval(4) = a4;
+  retval(3) = a3;
+  retval(2) = a2;
+  retval(1) = a1;
+  retval(0) = a0;
+  return retval;
+}
+
+inline octave_value_list
+ovl (const octave_value& a0, const octave_value& a1,
+     const octave_value& a2, const octave_value& a3,
+     const octave_value& a4, const octave_value& a5,
+     const octave_value& a6, const octave_value& a7,
+     const octave_value& a8)
+{
+  octave_value_list retval;
+  retval(8) = a8;
+  retval(7) = a7;
+  retval(6) = a6;
+  retval(5) = a5;
+  retval(4) = a4;
+  retval(3) = a3;
+  retval(2) = a2;
+  retval(1) = a1;
+  retval(0) = a0;
+  return retval;
+}
+
+inline octave_value_list
+ovl (const octave_value& a0, const octave_value& a1,
+     const octave_value& a2, const octave_value& a3,
+     const octave_value& a4, const octave_value& a5,
+     const octave_value& a6, const octave_value& a7,
+     const octave_value& a8, const octave_value& a9)
+{
+  octave_value_list retval;
+  retval(9) = a9;
+  retval(8) = a8;
+  retval(7) = a7;
+  retval(6) = a6;
+  retval(5) = a5;
+  retval(4) = a4;
+  retval(3) = a3;
+  retval(2) = a2;
+  retval(1) = a1;
+  retval(0) = a0;
+  return retval;
+}
+
 #endif
diff --git a/libinterp/interpfcn/debug.cc b/libinterp/interpfcn/debug.cc
--- a/libinterp/interpfcn/debug.cc
+++ b/libinterp/interpfcn/debug.cc
@@ -1196,27 +1196,16 @@ execution to continue until the current 
   else
     error ("dbstep: can only be called in debug mode");
 
   return octave_value_list ();
 }
 
 DEFALIAS (dbnext, dbstep);
 
-void
-debug_step (const std::string& what)
-{
-  octave_value_list args;
-
-  if (! what.empty ())
-    args(0) = what;
-
-  Fdbstep (args);
-}
-
 DEFUN (dbcont, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Command} {} dbcont\n\
 Leave command-line debugging mode and continue code execution normally.\n\
 @seealso{dbstep, dbquit}\n\
 @end deftypefn")
 {
   if (Vdebugging)
@@ -1231,22 +1220,16 @@ Leave command-line debugging mode and co
         print_usage ();
     }
   else
     error ("dbcont: can only be called in debug mode");
 
   return octave_value_list ();
 }
 
-void
-debug_continue (void)
-{
-  Fdbcont ();
-}
-
 DEFUN (dbquit, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Command} {} dbquit\n\
 Quit debugging mode immediately without further code execution and\n\
 return to the Octave prompt.\n\
 @seealso{dbcont, dbstep}\n\
 @end deftypefn")
 {
@@ -1264,22 +1247,16 @@ return to the Octave prompt.\n\
         print_usage ();
     }
   else
     error ("dbquit: can only be called in debug mode");
 
   return octave_value_list ();
 }
 
-void
-debug_quit (void)
-{
-  Fdbquit ();
-}
-
 DEFUN (isdebugmode, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} isdebugmode ()\n\
 Return true if in debugging mode, otherwise false.\n\
 @seealso{dbwhere, dbstack, dbstatus}\n\
 @end deftypefn")
 {
   octave_value retval;
diff --git a/libinterp/interpfcn/debug.h b/libinterp/interpfcn/debug.h
--- a/libinterp/interpfcn/debug.h
+++ b/libinterp/interpfcn/debug.h
@@ -126,15 +126,9 @@ private:
 
   fname_line_map do_get_breakpoint_list (const octave_value_list& fname_list);
 
   bool do_have_breakpoints (void) { return (! bp_set.empty ()); }
 };
 
 extern std::string get_file_line (const std::string& fname, size_t line);
 
-extern void OCTINTERP_API debug_continue (void);
-
-extern void OCTINTERP_API debug_step (const std::string& what = std::string ());
-
-extern void OCTINTERP_API debug_quit (void);
-
 #endif
diff --git a/libinterp/interpfcn/load-save.cc b/libinterp/interpfcn/load-save.cc
--- a/libinterp/interpfcn/load-save.cc
+++ b/libinterp/interpfcn/load-save.cc
@@ -1438,27 +1438,16 @@ dump_octave_core (void)
                 }
               else
                 warning ("unable to open `%s' for writing...", fname);
             }
         }
     }
 }
 
-void
-load_workspace (const std::string& file)
-{
-  octave_value_list args;
-
-  if (! file.empty ())
-    args(0) = file;
-
-  Fload (args);
-}
-
 DEFUN (save, args, ,
   "-*- texinfo -*-\n\
 @deftypefn  {Command} {} save file\n\
 @deftypefnx {Command} {} save options file\n\
 @deftypefnx {Command} {} save options file @var{v1} @var{v2} @dots{}\n\
 @deftypefnx {Command} {} save options file -struct @var{STRUCT} @var{f1} @var{f2} @dots{}\n\
 Save the named variables @var{v1}, @var{v2}, @dots{}, in the file\n\
 @var{file}.  The special filename @samp{-} may be used to write\n\
@@ -1750,27 +1739,16 @@ the file @file{data} in Octave's binary 
                 }
             }
         }
     }
 
   return retval;
 }
 
-void
-save_workspace (const std::string& file)
-{
-  octave_value_list args;
-
-  if (! file.empty ())
-    args(0) = file;
-
-  Fsave (args);
-}
-
 DEFUN (crash_dumps_octave_core, args, nargout,
   "-*- texinfo -*-\n\
 @deftypefn  {Built-in Function} {@var{val} =} crash_dumps_octave_core ()\n\
 @deftypefnx {Built-in Function} {@var{old_val} =} crash_dumps_octave_core (@var{new_val})\n\
 @deftypefnx {Built-in Function} {} crash_dumps_octave_core (@var{new_val}, \"local\")\n\
 Query or set the internal variable that controls whether Octave tries\n\
 to save all current variables to the file \"octave-workspace\" if it\n\
 crashes or receives a hangup, terminate or similar signal.\n\
diff --git a/libinterp/interpfcn/load-save.h b/libinterp/interpfcn/load-save.h
--- a/libinterp/interpfcn/load-save.h
+++ b/libinterp/interpfcn/load-save.h
@@ -82,12 +82,9 @@ do_load (std::istream& stream, const std
 
 extern void
 do_save (std::ostream& os, const symbol_table::symbol_record& sr,
          load_save_format fmt, bool save_as_floats);
 
 extern void
 write_header (std::ostream& os, load_save_format format);
 
-extern OCTINTERP_API void load_workspace (const std::string& file);
-extern OCTINTERP_API void save_workspace (const std::string& file);
-
 #endif
diff --git a/libinterp/interpfcn/variables.cc b/libinterp/interpfcn/variables.cc
--- a/libinterp/interpfcn/variables.cc
+++ b/libinterp/interpfcn/variables.cc
@@ -2455,22 +2455,16 @@ without the dash as well.\n\
                 }
             }
         }
     }
 
   return retval;
 }
 
-void
-clear_current_scope (void)
-{
-  Fclear ();
-}
-
 DEFUN (whos_line_format, args, nargout,
   "-*- texinfo -*-\n\
 @deftypefn  {Built-in Function} {@var{val} =} whos_line_format ()\n\
 @deftypefnx {Built-in Function} {@var{old_val} =} whos_line_format (@var{new_val})\n\
 @deftypefnx {Built-in Function} {} whos_line_format (@var{new_val}, \"local\")\n\
 Query or set the format string used by the command @code{whos}.\n\
 \n\
 A full format string is:\n\
diff --git a/libinterp/interpfcn/variables.h b/libinterp/interpfcn/variables.h
--- a/libinterp/interpfcn/variables.h
+++ b/libinterp/interpfcn/variables.h
@@ -143,12 +143,9 @@ extern OCTINTERP_API void munlock (const
 extern OCTINTERP_API bool mislocked (const std::string&);
 
 extern OCTINTERP_API void clear_function (const std::string& nm);
 extern OCTINTERP_API void clear_variable (const std::string& nm);
 extern OCTINTERP_API void clear_symbol (const std::string& nm);
 
 extern OCTINTERP_API void maybe_missing_function_hook (const std::string& name);
 
-// Equivalent to Fclear without any arguments.
-extern OCTINTERP_API void clear_current_scope (void);
-
 #endif
