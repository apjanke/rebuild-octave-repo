# HG changeset patch
# User Ben Abbott  <bpabbott@mac.comm>
# Date 1463358047 14400
#      Sun May 15 20:20:47 2016 -0400
# Node ID db71f8a7d8963dcef3da9512611cb1c9e3f820f1
# Parent  68522e5b74efc9f92ae32f40a5bd396816bc40f2
Add demos for surface plots.

* scripts/plot/appearance/shading.m: Demos derived from the existing demos for
shading. The new demos reverse the settings for "edgecolor" and "facecolor".

diff --git a/scripts/plot/appearance/shading.m b/scripts/plot/appearance/shading.m
--- a/scripts/plot/appearance/shading.m
+++ b/scripts/plot/appearance/shading.m
@@ -104,39 +104,114 @@ endfunction
 %! sombrero ();
 %! shading faceted;
 %! title ('shading ''faceted''');
 
 %!demo
 %! clf;
 %! colormap ('default');
 %! sombrero ();
+%! shading faceted;
+%! h = findobj (gca (), 'type', 'surface');
+%! facecolor = get (h, 'facecolor');
+%! edgecolor = get (h, 'edgecolor');
+%! set (h, 'edgecolor', facecolor, 'facecolor', edgecolor)
+%! title ({'shading ''faceted''', 'with "edgecolor" and "facecolor" revesed'});
+
+%!demo
+%! clf;
+%! colormap ('default');
+%! sombrero ();
 %! shading flat;
 %! title ('shading ''flat''');
 
 %!demo
 %! clf;
 %! colormap ('default');
 %! sombrero ();
+%! shading flat;
+%! h = findobj (gca (), 'type', 'surface');
+%! facecolor = get (h, 'facecolor');
+%! edgecolor = get (h, 'edgecolor');
+%! set (h, 'edgecolor', facecolor, 'facecolor', edgecolor)
+%! title ({'shading ''flat''', 'with "edgecolor" and "facecolor" revesed'});
+
+%!demo
+%! clf;
+%! colormap ('default');
+%! sombrero ();
 %! shading interp;
 %! title ('shading ''interp''');
 
 %!demo
 %! clf;
 %! colormap ('default');
+%! sombrero ();
+%! shading interp;
+%! h = findobj (gca (), 'type', 'surface');
+%! facecolor = get (h, 'facecolor');
+%! edgecolor = get (h, 'edgecolor');
+%! set (h, 'edgecolor', facecolor, 'facecolor', edgecolor)
+%! title ({'shading ''interp''', 'with "edgecolor" and "facecolor" revesed'});
+
+%!demo
+%! clf
+%! colormap ('default')
+%! peaks ()
+%! shading interp
+%! h = findobj (gca (), 'type', 'surface');
+%! set (h, 'edgecolor', 'k')
+%! title ({'shading ''interp''', 'with "edgecolor" set to black'})
+
+%!demo
+%! clf;
+%! colormap ('default');
 %! pcolor (peaks ());
 %! shading faceted;
 %! title ('shading ''faceted''');
 
 %!demo
 %! clf;
 %! colormap ('default');
 %! pcolor (peaks ());
+%! shading faceted;
+%! h = findobj (gca (), 'type', 'surface');
+%! facecolor = get (h, 'facecolor');
+%! edgecolor = get (h, 'edgecolor');
+%! set (h, 'edgecolor', facecolor, 'facecolor', edgecolor)
+%! title ({'shading ''faceted''', 'with "edgecolor" and "facecolor" revesed'});
+
+%!demo
+%! clf;
+%! colormap ('default');
+%! pcolor (peaks ());
 %! shading flat;
 %! title ('shading ''flat''');
 
 %!demo
 %! clf;
 %! colormap ('default');
 %! pcolor (peaks ());
+%! shading flat;
+%! h = findobj (gca (), 'type', 'surface');
+%! facecolor = get (h, 'facecolor');
+%! edgecolor = get (h, 'edgecolor');
+%! set (h, 'edgecolor', facecolor, 'facecolor', edgecolor)
+%! title ({'shading ''flat''', 'with "edgecolor" and "facecolor" revesed'});
+
+%!demo
+%! clf;
+%! colormap ('default');
+%! pcolor (peaks ());
 %! shading interp;
 %! title ('shading ''interp''');
 
+%!demo
+%! clf;
+%! colormap ('default');
+%! pcolor (peaks ());
+%! shading interp;
+%! h = findobj (gca (), 'type', 'surface');
+%! facecolor = get (h, 'facecolor');
+%! edgecolor = get (h, 'edgecolor');
+%! set (h, 'edgecolor', facecolor, 'facecolor', edgecolor)
+%! title ({'shading ''interp''', 'with "edgecolor" and "facecolor" revesed'});
+
