# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1263737633 -3600
#      Sun Jan 17 15:13:53 2010 +0100
# Node ID e5c6600e34002bcc3b5ffe4dc4783a4c073463f6
# Parent  8590f3c51868e49938f01c9f9c5ae374aca2b279
use octave_idx_type where needed

diff --git a/liboctave/CMatrix.cc b/liboctave/CMatrix.cc
--- a/liboctave/CMatrix.cc
+++ b/liboctave/CMatrix.cc
@@ -3783,30 +3783,30 @@ xgemm (const ComplexMatrix& a, const Com
           if (cja || cjb)
             {
               F77_XFCN (zherk, ZHERK, (F77_CONST_CHAR_ARG2 ("U", 1),
                                        F77_CONST_CHAR_ARG2 (ctra, 1),
                                        a_nr, a_nc, 1.0,
                                        a.data (), lda, 0.0, c, a_nr
                                        F77_CHAR_ARG_LEN (1)
                                        F77_CHAR_ARG_LEN (1)));
-              for (int j = 0; j < a_nr; j++)
-                for (int i = 0; i < j; i++)
+              for (octave_idx_type j = 0; j < a_nr; j++)
+                for (octave_idx_type i = 0; i < j; i++)
                   retval.xelem (j,i) = std::conj (retval.xelem (i,j));
             }
           else
             {
               F77_XFCN (zsyrk, ZSYRK, (F77_CONST_CHAR_ARG2 ("U", 1),
                                        F77_CONST_CHAR_ARG2 (ctra, 1),
                                        a_nr, a_nc, 1.0,
                                        a.data (), lda, 0.0, c, a_nr
                                        F77_CHAR_ARG_LEN (1)
                                        F77_CHAR_ARG_LEN (1)));
-              for (int j = 0; j < a_nr; j++)
-                for (int i = 0; i < j; i++)
+              for (octave_idx_type j = 0; j < a_nr; j++)
+                for (octave_idx_type i = 0; i < j; i++)
                   retval.xelem (j,i) = retval.xelem (i,j);
 
             }
 
         }
       else
 	{
 	  octave_idx_type lda = a.rows (), tda = a.cols ();
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+2010-01-17  Jaroslav Hajek  <highegg@gmail.com>
+
+	* CMatrix.cc (xgemm): Use octave_idx_type rather than int.
+	* fCMatrix.cc (xgemm): Ditto.
+
 2010-01-16  Michael Goffioul  <michael.goffioul@gmail.com>
 
 	* oct-time.cc: Avoid to include nonneeded headers from Win32 API,
 	especially winsock.h. Include <sys/time.h> unconditionally, as it is
 	now provided by gnulib, in order to get gettimeofday defined.
 
 2010-01-15  Jaroslav Hajek  <highegg@gmail.com>
 
diff --git a/liboctave/fCMatrix.cc b/liboctave/fCMatrix.cc
--- a/liboctave/fCMatrix.cc
+++ b/liboctave/fCMatrix.cc
@@ -3776,30 +3776,30 @@ xgemm (const FloatComplexMatrix& a, cons
           if (cja || cjb)
             {
               F77_XFCN (cherk, CHERK, (F77_CONST_CHAR_ARG2 ("U", 1),
                                        F77_CONST_CHAR_ARG2 (ctra, 1),
                                        a_nr, a_nc, 1.0,
                                        a.data (), lda, 0.0, c, a_nr
                                        F77_CHAR_ARG_LEN (1)
                                        F77_CHAR_ARG_LEN (1)));
-              for (int j = 0; j < a_nr; j++)
-                for (int i = 0; i < j; i++)
+              for (octave_idx_type j = 0; j < a_nr; j++)
+                for (octave_idx_type i = 0; i < j; i++)
                   retval.xelem (j,i) = std::conj (retval.xelem (i,j));
             }
           else
             {
               F77_XFCN (csyrk, CSYRK, (F77_CONST_CHAR_ARG2 ("U", 1),
                                        F77_CONST_CHAR_ARG2 (ctra, 1),
                                        a_nr, a_nc, 1.0,
                                        a.data (), lda, 0.0, c, a_nr
                                        F77_CHAR_ARG_LEN (1)
                                        F77_CHAR_ARG_LEN (1)));
-              for (int j = 0; j < a_nr; j++)
-                for (int i = 0; i < j; i++)
+              for (octave_idx_type j = 0; j < a_nr; j++)
+                for (octave_idx_type i = 0; i < j; i++)
                   retval.xelem (j,i) = retval.xelem (i,j);
 
             }
 
         }
       else
 	{
 	  octave_idx_type lda = a.rows (), tda = a.cols ();
