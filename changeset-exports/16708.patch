# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1370011433 14400
#      Fri May 31 10:43:53 2013 -0400
# Node ID 08f0f274de363976e9dede8b13c500f17158d699
# Parent  4c11e9bcb7968e6b386843d014c3808c458fa2af
use correct "caller" workspace for mexputvariable and mexgetvariable

* mex.cc (mexPutVariable, mexGetVariable): For "caller", don't call
octave_call_stack::goto_caller_frame.  Return immediately if an error
occurs when setting current scope to base frame.

diff --git a/libinterp/interp-core/mex.cc b/libinterp/interp-core/mex.cc
--- a/libinterp/interp-core/mex.cc
+++ b/libinterp/interp-core/mex.cc
@@ -3179,23 +3179,28 @@ mexGetVariable (const char *space, const
 
       unwind_protect frame;
 
       bool caller = ! strcmp (space, "caller");
       bool base = ! strcmp (space, "base");
 
       if (caller || base)
         {
-          if (caller)
-            octave_call_stack::goto_caller_frame ();
-          else
-            octave_call_stack::goto_base_frame ();
-
-          if (! error_state)
-            frame.add_fcn (octave_call_stack::pop);
+          // MEX files don't create a separate frame in the call stack,
+          // so we are already in the "caller" frame.
+
+          if (base)
+            {
+              octave_call_stack::goto_base_frame ();
+
+              if (error_state)
+                return retval;
+
+              frame.add_fcn (octave_call_stack::pop);
+            }
 
           val = symbol_table::varval (name);
         }
       else
         mexErrMsgTxt ("mexGetVariable: symbol table does not exist");
     }
 
   if (val.is_defined ())
@@ -3237,23 +3242,28 @@ mexPutVariable (const char *space, const
 
       unwind_protect frame;
 
       bool caller = ! strcmp (space, "caller");
       bool base = ! strcmp (space, "base");
 
       if (caller || base)
         {
-          if (caller)
-            octave_call_stack::goto_caller_frame ();
-          else
-            octave_call_stack::goto_base_frame ();
-
-          if (! error_state)
-            frame.add_fcn (octave_call_stack::pop);
+          // MEX files don't create a separate frame in the call stack,
+          // so we are already in the "caller" frame.
+
+          if (base)
+            {
+              octave_call_stack::goto_base_frame ();
+
+              if (error_state)
+                return 1;
+
+              frame.add_fcn (octave_call_stack::pop);
+            }
 
           symbol_table::assign (name, mxArray::as_octave_value (ptr));
         }
       else
         mexErrMsgTxt ("mexPutVariable: symbol table does not exist");
     }
 
   return 0;
