# HG changeset patch
# User Jacob Dawid <jacob.dawid@googlemail.com>
# Date 1302346858 -7200
#      Sat Apr 09 13:00:58 2011 +0200
# Node ID cd47f7e16ee8e20c0129ed216d28e83784b09ee1
# Parent  fc8f53c6994f3c2602d5c6f298df944c5225fd07
Added status bar updates, added variable list update hook.

diff --git a/gui//src/TerminalMdiSubWindow.cpp b/gui//src/TerminalMdiSubWindow.cpp
--- a/gui//src/TerminalMdiSubWindow.cpp
+++ b/gui//src/TerminalMdiSubWindow.cpp
@@ -30,17 +30,22 @@ TerminalMdiSubWindow::TerminalMdiSubWind
     establishOctaveLink();
 }
 
 TerminalMdiSubWindow::~TerminalMdiSubWindow() {
     delete m_octaveLink;
     isRunning = false;
 }
 
+void TerminalMdiSubWindow::setStatus(QString message) {
+    m_statusBar->showMessage(message, 1000);
+}
+
 void TerminalMdiSubWindow::establishOctaveLink() {
+    QMetaObject::invokeMethod(this, "setStatus", Q_ARG(QString, QString("Establishing Octave link..")));
     m_octaveLink = new OctaveLink();
     pthread_create(&m_octaveThread, 0, TerminalMdiSubWindow::octaveMainWrapper, this);
     pthread_create(&m_octaveCallbackThread, 0, TerminalMdiSubWindow::octaveCallback, this);
     command_editor::add_event_hook(server_rl_event_hook_function);
 
     int fdm, fds;
     if(openpty(&fdm, &fds, 0, 0, 0) < 0) {
         assert(0);
@@ -85,30 +90,35 @@ void TerminalMdiSubWindow::constructWind
         hWidget->setLayout(hBoxLayout);
 
         m_statusBar = new QStatusBar();
 
     vBoxLayout->addWidget(hWidget);
     vBoxLayout->addWidget(m_statusBar);
     vBoxLayout->setMargin(2);
     widget()->setLayout(vBoxLayout);
-
-    m_statusBar->showMessage("Ready.");
 }
 
 void TerminalMdiSubWindow::updateHistory(string_vector historyEntries) {
     QStringListModel * model = dynamic_cast<QStringListModel*>(m_commandHistoryView->model());
     if(!model)
         return;
-
+    QMetaObject::invokeMethod(this, "setStatus", Q_ARG(QString, QString("Updating history..")));
     QStringList stringList = model->stringList();
-    for(size_t i = 0; i < historyEntries.length(); i++)
-        stringList.append(QString(historyEntries[i].c_str()));
+    for(size_t i = 0; i < historyEntries.length(); i++) {
+        QString command(historyEntries[i].c_str());
+        if(!command.startsWith("#"))
+            stringList.push_front(QString("%1: ").arg(stringList.size() + 1) + command);
+    }
+    model->setStringList(stringList);
+}
 
-    model->setStringList(stringList);
+void TerminalMdiSubWindow::updateVariables(std::vector<OctaveLink::VariableMetaData> variables) {
+    QMetaObject::invokeMethod(this, "setStatus", Q_ARG(QString, QString("Updating variables..")));
+    // TODO: Update variable view.
 }
 
 void* TerminalMdiSubWindow::octaveMainWrapper(void *widget) {
     //MainWindow *mainWindow = (MainWindow*)ptr;
 
     int argc = 3;
     const char* argv[] = {"octave", "--interactive", "--line-editing"};
     octave_main(argc, (char**)argv,1);
@@ -120,19 +130,18 @@ void* TerminalMdiSubWindow::octaveMainWr
 
 void* TerminalMdiSubWindow::octaveCallback(void *widget) {
     TerminalMdiSubWindow* terminalWindow = (TerminalMdiSubWindow*)widget;
 
     while(terminalWindow->isRunning) {
 
     // Get a full variable list.
     std::vector<OctaveLink::VariableMetaData> variables = oct_octave_server.variableInfoList();
-    if(variables.size()) {
-        // TODO: Update variable list model data.
-    }
+    if(variables.size())
+        terminalWindow->updateVariables(variables);
 
     // Check whether any requested variables have been returned.
     std::vector<OctaveLink::RequestedVariable> reqVars = oct_octave_server.requestedVariables();
     for(std::vector<OctaveLink::RequestedVariable>::iterator it = reqVars.begin();
         it != reqVars.end(); it++ ) {
         // TODO: Process requested variables.
     }
 
diff --git a/gui//src/TerminalMdiSubWindow.h b/gui//src/TerminalMdiSubWindow.h
--- a/gui//src/TerminalMdiSubWindow.h
+++ b/gui//src/TerminalMdiSubWindow.h
@@ -71,20 +71,22 @@ extern OCTINTERP_API FILE *get_input_fro
 
 class TerminalMdiSubWindow : public QMdiSubWindow {
     Q_OBJECT
 public:
     static void* octaveMainWrapper(void *widget);
     static void* octaveCallback(void *widget);
 
     void updateHistory(string_vector historyEntries);
+    void updateVariables(std::vector<OctaveLink::VariableMetaData> variables);
     TerminalMdiSubWindow(QWidget *parent = 0);
     ~TerminalMdiSubWindow();
 
-private slots:
+public slots:
+    void setStatus(QString message);
 
 private:
     void establishOctaveLink();
     void constructWindow();
     QTerminalWidget *m_terminalWidget;
     QTreeView *m_variableView;
     QListView *m_commandHistoryView;
     QStatusBar *m_statusBar;
