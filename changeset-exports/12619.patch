# HG changeset patch
# User David Bateman  <dbateman@free.fr>
# Date 1303172957 25200
#      Mon Apr 18 17:29:17 2011 -0700
# Branch stable
# Node ID 3b2e005e42198f5efe2566a6dd7f77e036a7ac55
# Parent  16cca721117b23646e36b61f574d54e90e5e3ada
Return octave_value of the same class as the original.
* ov-class.h (octave_value reshape (const dim_vector&) const,
octave_value resize (const dim_vector&, bool) const) : Return
octave_value of the same class as the original.

diff --git a/src/ov-class.h b/src/ov-class.h
--- a/src/ov-class.h
+++ b/src/ov-class.h
@@ -122,20 +122,28 @@ public:
     return dv.numel ();
   }
 
   octave_idx_type nfields (void) const { return map.nfields (); }
 
   size_t nparents (void) const { return parent_list.size (); }
 
   octave_value reshape (const dim_vector& new_dims) const
-    { return map.reshape (new_dims); }
+    { 
+      octave_class retval = octave_class (*this);
+      retval.map = retval.map_value().reshape (new_dims);
+      return octave_value (new octave_class (retval));
+    }
 
   octave_value resize (const dim_vector& dv, bool = false) const
-    { octave_map tmap = map; tmap.resize (dv); return tmap; }
+    { 
+      octave_class retval = octave_class (*this);
+      retval.map.resize (dv);
+      return octave_value (new octave_class (retval));
+    }
 
   bool is_defined (void) const { return true; }
 
   bool is_map (void) const { return false; }
 
   bool is_object (void) const { return true; }
 
   octave_map map_value (void) const { return map; }
