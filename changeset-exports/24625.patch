# HG changeset patch
# User Torsten <mttl@mailbox.org>
# Date 1516436947 -3600
#      Sat Jan 20 09:29:07 2018 +0100
# Node ID be37df6e1fb4fd1e7e2b31f977702928ec8b065b
# Parent  ce2eb28e0a6d8deeca8a2c82350c352a2237b7d9
always enable paste action in windows (bug #52361)

* main-window.cc (clipboard_has_changed): no more clipboard-mode parameter;
  (construct_edit_menu): using dataChanged signal from the clipboard instead
  of changed signal; always enable paste action in windows since the signals
  indicating a change of the clipboard are not working

* main-window.h: slot clipboard_has_changed wihtout parameter

diff --git a/libgui/src/main-window.cc b/libgui/src/main-window.cc
--- a/libgui/src/main-window.cc
+++ b/libgui/src/main-window.cc
@@ -1661,30 +1661,27 @@ main_window::set_global_shortcuts (bool 
 void
 main_window::set_screen_size (int ht, int wd)
 {
   octave_link::post_event (this, &main_window::set_screen_size_callback,
                            int_pair (ht, wd));
 }
 
 void
-main_window::clipboard_has_changed (QClipboard::Mode cp_mode)
+main_window::clipboard_has_changed (void)
 {
-  if (cp_mode == QClipboard::Clipboard)
+  if (m_clipboard->text ().isEmpty ())
     {
-      if (m_clipboard->text ().isEmpty ())
-        {
-          m_paste_action->setEnabled (false);
-          m_clear_clipboard_action->setEnabled (false);
-        }
-      else
-        {
-          m_paste_action->setEnabled (true);
-          m_clear_clipboard_action->setEnabled (true);
-        }
+      m_paste_action->setEnabled (false);
+      m_clear_clipboard_action->setEnabled (false);
+    }
+  else
+    {
+      m_paste_action->setEnabled (true);
+      m_clear_clipboard_action->setEnabled (true);
     }
 }
 
 void
 main_window::clear_clipboard (void)
 {
   m_clipboard->clear (QClipboard::Clipboard);
 }
@@ -2260,19 +2257,26 @@ main_window::construct_edit_menu (QMenuB
            this, SLOT (handle_clear_command_window_request (void)));
 
   connect (m_clear_command_history_action, SIGNAL (triggered (void)),
            this, SLOT (handle_clear_history_request (void)));
 
   connect (m_clear_workspace_action, SIGNAL (triggered (void)),
            this, SLOT (handle_clear_workspace_request (void)));
 
-  connect (m_clipboard, SIGNAL (changed (QClipboard::Mode)),
-           this, SLOT (clipboard_has_changed (QClipboard::Mode)));
-  clipboard_has_changed (QClipboard::Clipboard);
+  connect (m_clipboard, SIGNAL (dataChanged (void)),
+           this, SLOT (clipboard_has_changed (void)));
+  clipboard_has_changed ();
+#if defined (Q_OS_WIN32)
+  // Always enable paste action (unreliable clipboard signals in windows)
+  // FIXME: This has to be removed, when the clipboards signals in windows
+  //        are working again
+  m_paste_action->setEnabled (true);
+  m_clear_clipboard_action->setEnabled (true);
+#endif
 
   connect (m_preferences_action, SIGNAL (triggered (void)),
            this, SLOT (process_settings_dialog_request (void)));
 }
 
 QAction *
 main_window::construct_debug_menu_item (const char *icon, const QString& item,
                                         const char *member)
diff --git a/libgui/src/main-window.h b/libgui/src/main-window.h
--- a/libgui/src/main-window.h
+++ b/libgui/src/main-window.h
@@ -255,17 +255,17 @@ public slots:
   //! Setting global shortcuts.
 
   void set_global_shortcuts (bool enable);
 
   void set_screen_size (int ht, int wd);
 
   //! Handling the clipboard.
   //!@{
-  void clipboard_has_changed (QClipboard::Mode);
+  void clipboard_has_changed (void);
   void clear_clipboard ();
   //!@}
 
   void interrupt_interpreter (void);
 
   //! Returns a list of dock widgets.
 
   QList<octave_dock_widget *> get_dock_widget_list (void)
