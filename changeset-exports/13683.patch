# HG changeset patch
# User Jacob Dawid <jacob.dawid@googlemail.com>
# Date 1317378877 -7200
#      Fri Sep 30 12:34:37 2011 +0200
# Node ID 25dc40d24a44c74bf90165aef90ae6337a67b8b9
# Parent  c0e0625ffd1396f649ec0e59a7a94a22eb13cf62
Renamed VariablesDockWidget to WorkspaceView and optimized memory footprint for 30%.

diff --git a/gui/octave-gui.pro b/gui/octave-gui.pro
--- a/gui/octave-gui.pro
+++ b/gui/octave-gui.pro
@@ -62,17 +62,17 @@ win32 {
 
 QMAKE_LFLAGS        += $$LFLAGS $$system(mkoctfile -p RLD_FLAG)
 QMAKE_CXXFLAGS      += $$INCFLAGS
 
 # Files associated with the project:
 SOURCES +=\
     src/lexer/lexeroctavegui.cpp \
     src/MainWindow.cpp \
-    src/VariablesDockWidget.cpp \
+    src/WorkspaceView.cpp \
     src/HistoryDockWidget.cpp \
     src/FilesDockWidget.cpp \
     src/FileEditorMdiSubWindow.cpp \
     src/BrowserWidget.cpp \
     src/ImageViewerMdiSubWindow.cpp \
     src/irc/IRCWidget.cpp \
     src/SettingsDialog.cpp \
     src/OctaveGUI.cpp \
@@ -93,17 +93,17 @@ SOURCES +=\
     src/terminal/LinuxTerminalEmulation.cpp \
     src/terminal/KPty.cpp \
     src/terminal/KPtyDevice.cpp
 }
 
 HEADERS += \
     src/lexer/lexeroctavegui.h \
     src/MainWindow.h \
-    src/VariablesDockWidget.h \
+    src/WorkspaceView.h \
     src/HistoryDockWidget.h \
     src/FilesDockWidget.h \
     src/FileEditorMdiSubWindow.h \
     src/BrowserWidget.h \
     src/ImageViewerMdiSubWindow.h \
     src/irc/IRCWidget.h \
     src/SettingsDialog.h \
     src/ResourceManager.h \
diff --git a/gui/src/MainWindow.cpp b/gui/src/MainWindow.cpp
--- a/gui/src/MainWindow.cpp
+++ b/gui/src/MainWindow.cpp
@@ -21,19 +21,18 @@
 #include <QSettings>
 #include <QDesktopServices>
 #include <QFileDialog>
 #include <QMessageBox>
 #include "MainWindow.h"
 #include "FileEditorMdiSubWindow.h"
 #include "ImageViewerMdiSubWindow.h"
 #include "SettingsDialog.h"
-#include "cmd-edit.h"
 
-#define VERSION_STRING "Octave GUI (0.8.4)"
+#define VERSION_STRING "Octave GUI (0.8.5)"
 
 MainWindow::MainWindow (QWidget * parent):QMainWindow (parent)
 {
   construct ();
   OctaveLink::instance ()->launchOctave();
 }
 
 MainWindow::~MainWindow ()
@@ -273,18 +272,18 @@ MainWindow::construct ()
   setWindowIcon (ResourceManager::instance ()->icon (ResourceManager::Octave));
 
   // Initialize MDI area.
   m_centralMdiArea = new QMdiArea (this);
   m_centralMdiArea->setObjectName ("CentralMdiArea");
   m_centralMdiArea->setViewMode (QMdiArea::TabbedView);
 
   // Setup dockable widgets and the status bar.
-  m_variablesDockWidget = new VariablesDockWidget (this);
-  m_variablesDockWidget->setStatusTip (tr ("View the variables in the active workspace."));
+  m_workspaceView = new WorkspaceView (this);
+  m_workspaceView->setStatusTip (tr ("View the variables in the active workspace."));
   m_historyDockWidget = new HistoryDockWidget (this);
   m_historyDockWidget->setStatusTip (tr ("Browse and search the command history."));
   m_filesDockWidget = new FilesDockWidget (this);
   m_filesDockWidget->setStatusTip (tr ("Browse your files."));
   m_statusBar = new QStatusBar (this);
 
   // Setup essential MDI Windows.
   m_terminalView = new TerminalView (this);
@@ -373,38 +372,38 @@ MainWindow::construct ()
   connect (alignWindowsAction, SIGNAL (triggered ()), this, SLOT (alignMdiWindows ()));
   connect (openEditorAction, SIGNAL (triggered ()), this, SLOT (openEditor ()));
   connect (reportBugAction, SIGNAL (triggered ()), this, SLOT (openBugTrackerPage ()));
   connect (agoraAction, SIGNAL (triggered ()), this, SLOT (openAgoraPage ()));
   connect (octaveForgeAction, SIGNAL (triggered ()), this, SLOT (openOctaveForgePage ()));
   connect (aboutOctaveAction, SIGNAL (triggered ()), this, SLOT (showAboutOctave ()));
   connect (aboutQt, SIGNAL (triggered ()), this, SLOT (showAboutQt ()));
 
-  connect (showWorkspaceAction, SIGNAL (toggled (bool)), m_variablesDockWidget, SLOT (setShown (bool)));
-  connect (m_variablesDockWidget, SIGNAL (activeChanged (bool)), showWorkspaceAction, SLOT (setChecked (bool)));
+  connect (showWorkspaceAction, SIGNAL (toggled (bool)), m_workspaceView, SLOT (setShown (bool)));
+  connect (m_workspaceView, SIGNAL (activeChanged (bool)), showWorkspaceAction, SLOT (setChecked (bool)));
   connect (showHistoryAction, SIGNAL (toggled (bool)), m_historyDockWidget, SLOT (setShown (bool)));
   connect (m_historyDockWidget, SIGNAL (activeChanged (bool)), showHistoryAction, SLOT (setChecked (bool)));
   connect (showFileBrowserAction, SIGNAL (toggled (bool)), m_filesDockWidget, SLOT (setShown (bool)));
   connect (m_filesDockWidget, SIGNAL (activeChanged (bool)), showFileBrowserAction, SLOT (setChecked (bool)));
 
-  connect (this, SIGNAL (settingsChanged ()), m_variablesDockWidget, SLOT (noticeSettings ()));
+  connect (this, SIGNAL (settingsChanged ()), m_workspaceView, SLOT (noticeSettings ()));
   connect (this, SIGNAL (settingsChanged ()), m_historyDockWidget, SLOT (noticeSettings ()));
   connect (this, SIGNAL (settingsChanged ()), m_filesDockWidget, SLOT (noticeSettings ()));
 
   connect (m_filesDockWidget, SIGNAL (openFile (QString)), this, SLOT (handleOpenFileRequest (QString)));
   connect (m_historyDockWidget, SIGNAL (information (QString)), this, SLOT (reportStatusMessage (QString)));
   connect (m_historyDockWidget, SIGNAL (commandDoubleClicked (QString)), this, SLOT (handleCommandDoubleClicked (QString)));
   connect (saveWorkspaceAction, SIGNAL (triggered ()), this, SLOT (handleSaveWorkspaceRequest ()));
   connect (loadWorkspaceAction, SIGNAL (triggered ()), this, SLOT (handleLoadWorkspaceRequest ()));
   connect (clearWorkspaceAction, SIGNAL (triggered ()), this, SLOT (handleClearWorkspaceRequest ()));
 
   setWindowTitle (QString (VERSION_STRING));
 
   setCentralWidget (m_centralMdiArea);
-  addDockWidget (Qt::LeftDockWidgetArea, m_variablesDockWidget);
+  addDockWidget (Qt::LeftDockWidgetArea, m_workspaceView);
   addDockWidget (Qt::LeftDockWidgetArea, m_historyDockWidget);
   addDockWidget (Qt::RightDockWidgetArea, m_filesDockWidget);
   setStatusBar (m_statusBar);
 
   readSettings ();
   openWebPage ("http://www.gnu.org/software/octave/doc/interpreter/");
 }
 
diff --git a/gui/src/MainWindow.h b/gui/src/MainWindow.h
--- a/gui/src/MainWindow.h
+++ b/gui/src/MainWindow.h
@@ -25,17 +25,17 @@
 #include <QStatusBar>
 #include <QToolBar>
 #include <QQueue>
 #include <Qsci/qsciapis.h>
 #include <QMdiSubWindow>
 #include "ResourceManager.h"
 #include "TerminalView.h"
 #include "OctaveLink.h"
-#include "VariablesDockWidget.h"
+#include "WorkspaceView.h"
 #include "HistoryDockWidget.h"
 #include "FilesDockWidget.h"
 #include "BrowserWidget.h"
 #include "irc/IRCWidget.h"
 #include "lexer/lexeroctavegui.h"
 
 class NonClosableMdiSubWindow : public QMdiSubWindow
 {
@@ -61,20 +61,17 @@ class MainWindow:public QMainWindow
 Q_OBJECT public:
   MainWindow (QWidget * parent = 0);
   ~MainWindow ();
 
   TerminalView *terminalView ()
   {
     return m_terminalView;
   }
-  VariablesDockWidget *variablesDockWidget ()
-  {
-    return m_variablesDockWidget;
-  }
+
   HistoryDockWidget *historyDockWidget ()
   {
     return m_historyDockWidget;
   }
   FilesDockWidget *filesDockWidget ()
   {
     return m_filesDockWidget;
   }
@@ -120,17 +117,17 @@ private:
   BrowserWidget *m_documentationWidget;
   IRCWidget *m_ircWidget;
 
   NonClosableMdiSubWindow *m_terminalViewSubWindow;
   NonClosableMdiSubWindow *m_documentationWidgetSubWindow;
   NonClosableMdiSubWindow *m_ircWidgetSubWindow;
 
   // Dock widgets.
-  VariablesDockWidget *m_variablesDockWidget;
+  WorkspaceView *m_workspaceView;
   HistoryDockWidget *m_historyDockWidget;
   FilesDockWidget *m_filesDockWidget;
 
   // Editor's lexer
   LexerOctaveGui *m_lexer;
   QsciAPIs *m_lexerAPI;
 
   // Toolbars.
diff --git a/gui/src/VariablesDockWidget.cpp b/gui/src/WorkspaceView.cpp
rename from gui/src/VariablesDockWidget.cpp
rename to gui/src/WorkspaceView.cpp
--- a/gui/src/VariablesDockWidget.cpp
+++ b/gui/src/WorkspaceView.cpp
@@ -10,33 +10,25 @@
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU Affero General Public License for more details.
  *
  * You should have received a copy of the GNU Affero General Public License
  * along with this program. If not, see <http://www.gnu.org/licenses/>.
  */
 
-#include "VariablesDockWidget.h"
+#include "WorkspaceView.h"
 #include <QHBoxLayout>
 #include <QVBoxLayout>
 #include <QPushButton>
 
-VariablesDockWidget::VariablesDockWidget (QWidget * parent):QDockWidget
+WorkspaceView::WorkspaceView (QWidget * parent) : QDockWidget
   (parent)
 {
-  setObjectName ("VariablesDockWidget");
-  construct ();
-
-  connect (OctaveLink::instance(), SIGNAL (symbolTableChanged()), this, SLOT (fetchSymbolTable()));
-}
-
-void
-VariablesDockWidget::construct ()
-{
+  setObjectName ("WorkspaceView");
   setWindowTitle (tr ("Workspace"));
 
   m_updateSemaphore = new QSemaphore (1);
   QStringList headerLabels;
   headerLabels << tr ("Name") << tr ("Type") << tr ("Value");
   m_variablesTreeWidget = new QTreeWidget (this);
   m_variablesTreeWidget->setHeaderHidden (false);
   m_variablesTreeWidget->setHeaderLabels (headerLabels);
@@ -74,76 +66,76 @@ VariablesDockWidget::construct ()
       "   border:1px solid rgba(200, 200, 200, 255); "
       "   background-color: qlineargradient(spread:pad, "
       "   x1:0.1, y1:0, x2:0.9, y2:1, "
       "   stop:0.256444 rgba(255, 215, 215, 255), "
       "   stop:0.550888 rgba(255, 255, 255, 255), "
       "   stop:0.780424 rgba(255, 215, 215, 255)); "
       " } "
       );
+
+  connect (OctaveLink::instance(), SIGNAL (symbolTableChanged()), this, SLOT (fetchSymbolTable()));
 }
 
 void
-VariablesDockWidget::updateTreeEntry (QTreeWidgetItem * treeItem,
-				      SymbolRecord symbolRecord)
+WorkspaceView::updateTreeEntry (QTreeWidgetItem * treeItem, SymbolRecord symbolRecord)
 {
   treeItem->setData (0, 0, QString (symbolRecord.name ().c_str ()));
   treeItem->setData (1, 0,
 		     QString (symbolRecord.varval ().type_name ().c_str ()));
   treeItem->setData (2, 0,
 		     OctaveLink::octaveValueAsQString (symbolRecord.
 						       varval ()));
 }
 
 void
-VariablesDockWidget::setVariablesList (QList < SymbolRecord > symbolTable)
+WorkspaceView::updateFromSymbolTable (QList < SymbolRecord > symbolTable)
 {
   m_updateSemaphore->acquire ();
   // Split the symbol table into its different scopes.
   QList < SymbolRecord > localSymbolTable;
   QList < SymbolRecord > globalSymbolTable;
   QList < SymbolRecord > persistentSymbolTable;
   QList < SymbolRecord > hiddenSymbolTable;
 
   foreach (SymbolRecord symbolRecord, symbolTable)
   {
     // It's true that being global or hidden includes it's can mean it's also locally visible,
     // but we want to distinguish that here.
     if (symbolRecord.is_local () && !symbolRecord.is_global ()
-	&& !symbolRecord.is_hidden ())
+        && !symbolRecord.is_hidden ())
       {
-	localSymbolTable.append (symbolRecord);
+        localSymbolTable.append (symbolRecord);
       }
 
     if (symbolRecord.is_global ())
       {
-	globalSymbolTable.append (symbolRecord);
+        globalSymbolTable.append (symbolRecord);
       }
 
     if (symbolRecord.is_persistent ())
       {
-	persistentSymbolTable.append (symbolRecord);
+        persistentSymbolTable.append (symbolRecord);
       }
 
     if (symbolRecord.is_hidden ())
       {
-	hiddenSymbolTable.append (symbolRecord);
+        hiddenSymbolTable.append (symbolRecord);
       }
   }
 
   updateScope (0, localSymbolTable);
   updateScope (1, globalSymbolTable);
   updateScope (2, persistentSymbolTable);
   updateScope (3, hiddenSymbolTable);
   m_updateSemaphore->release ();
 }
 
 void
-VariablesDockWidget::updateScope (int topLevelItemIndex,
-				  QList < SymbolRecord > symbolTable)
+WorkspaceView::updateScope (int topLevelItemIndex, QList < SymbolRecord > symbolTable)
 {
   // This method may be a little bit confusing; variablesList is a complete list of all
   // variables that are in the workspace currently.
   QTreeWidgetItem *topLevelItem =
     m_variablesTreeWidget->topLevelItem (topLevelItemIndex);
 
   // First we check, if any variables that exist in the model tree have to be updated
   // or created. So we walk the variablesList check against the tree.
@@ -199,27 +191,29 @@ VariablesDockWidget::updateScope (int to
           topLevelItem->removeChild (child);
           delete child;
           i--;
         }
     }
 }
 
 void
-VariablesDockWidget::fetchSymbolTable ()
+WorkspaceView::fetchSymbolTable ()
 {
-  QList < SymbolRecord > symbolTable = OctaveLink::instance ()->copyCurrentSymbolTable ();
-  setVariablesList (symbolTable);
+  OctaveLink::instance ()->acquireSymbolTable();
+  QList < SymbolRecord > symbolTable = OctaveLink::instance ()->symbolTable();
+  updateFromSymbolTable (symbolTable);
+  OctaveLink::instance ()->releaseSymbolTable();
 }
 
 void
-VariablesDockWidget::handleVisibilityChanged (bool visible)
+WorkspaceView::handleVisibilityChanged (bool visible)
 {
   if (visible)
-    emit activeChanged (true);
+  emit activeChanged (true);
 }
 
 void
-VariablesDockWidget::closeEvent (QCloseEvent *event)
+WorkspaceView::closeEvent (QCloseEvent *event)
 {
   emit activeChanged (false);
   QDockWidget::closeEvent (event);
 }
diff --git a/gui/src/VariablesDockWidget.h b/gui/src/WorkspaceView.h
rename from gui/src/VariablesDockWidget.h
rename to gui/src/WorkspaceView.h
--- a/gui/src/VariablesDockWidget.h
+++ b/gui/src/WorkspaceView.h
@@ -10,42 +10,43 @@
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU Affero General Public License for more details.
  *
  * You should have received a copy of the GNU Affero General Public License
  * along with this program. If not, see <http://www.gnu.org/licenses/>.
  */
 
-#ifndef VARIABLESDOCKWIDGET_H
-#define VARIABLESDOCKWIDGET_H
+#ifndef WORKSPACEVIEW_H
+#define WORKSPACEVIEW_H
 
 #include <QDockWidget>
 #include <QTreeWidget>
 #include <QSemaphore>
 #include "OctaveLink.h"
 
-class VariablesDockWidget:public QDockWidget
+class WorkspaceView:public QDockWidget
 {
   Q_OBJECT
 public:
-  VariablesDockWidget (QWidget * parent = 0);
-  void setVariablesList (QList < SymbolRecord > symbolTable);
+  WorkspaceView (QWidget * parent = 0);
 
 public slots:
   void fetchSymbolTable ();
   void handleVisibilityChanged (bool visible);
+
 signals:
   /** Custom signal that tells if a user has clicke away that dock widget. */
   void activeChanged (bool active);
+
 protected:
   void closeEvent (QCloseEvent *event);
+
 private:
-  void construct ();
-  void updateTreeEntry (QTreeWidgetItem * treeItem,
-			SymbolRecord symbolRecord);
-  void updateScope (int topLevelItemIndex,
-		    QList < SymbolRecord > symbolTable);
+  void updateFromSymbolTable (QList < SymbolRecord > symbolTable);
+  void updateTreeEntry (QTreeWidgetItem * treeItem, SymbolRecord symbolRecord);
+  void updateScope (int topLevelItemIndex, QList < SymbolRecord > symbolTable);
+
   QTreeWidget *m_variablesTreeWidget;
   QSemaphore *m_updateSemaphore;
 };
 
-#endif // VARIABLESDOCKWIDGET_H
+#endif // WORKSPACEVIEW_H
diff --git a/gui/src/backend/OctaveCallbackThread.cpp b/gui/src/backend/OctaveCallbackThread.cpp
--- a/gui/src/backend/OctaveCallbackThread.cpp
+++ b/gui/src/backend/OctaveCallbackThread.cpp
@@ -34,17 +34,17 @@ OctaveCallbackThread::halt ()
 }
 
 void
 OctaveCallbackThread::run ()
 {
   bool running = true;
   while (running)
     {
-      OctaveLink::instance ()->fetchSymbolTable ();
+      OctaveLink::instance ()->emitSymbolTableChanged();
       OctaveLink::instance ()->updateHistoryModel ();
       usleep (500000);
 
       m_runningSemaphore->acquire ();
       running = m_running;
       m_runningSemaphore->release ();
     }
 }
diff --git a/gui/src/backend/OctaveLink.cpp b/gui/src/backend/OctaveLink.cpp
--- a/gui/src/backend/OctaveLink.cpp
+++ b/gui/src/backend/OctaveLink.cpp
@@ -109,44 +109,27 @@ OctaveLink::terminateOctave ()
 {
   m_octaveCallbackThread->halt();
   m_octaveCallbackThread->wait ();
 
   m_octaveMainThread->terminate ();
   //m_octaveMainThread->wait();
 }
 
-void
-OctaveLink::fetchSymbolTable ()
+QList < SymbolRecord > OctaveLink::symbolTable ()
 {
-  m_symbolTableSemaphore->acquire ();
   m_symbolTableBuffer.clear ();
   std::list < SymbolRecord > allVariables = symbol_table::all_variables ();
   std::list < SymbolRecord >::iterator iterator;
   for (iterator = allVariables.begin (); iterator != allVariables.end ();
        iterator++)
-    m_symbolTableBuffer.append (iterator->dup ());
-  m_symbolTableSemaphore->release ();
-  emit symbolTableChanged ();
+    m_symbolTableBuffer.append (iterator->dup());
+  return m_symbolTableBuffer;
 }
 
-QList < SymbolRecord > OctaveLink::copyCurrentSymbolTable ()
-{
-  QList < SymbolRecord > m_symbolTableCopy;
-
-  // Generate a deep copy of the current symbol table.
-  m_symbolTableSemaphore->acquire ();
-  foreach (SymbolRecord symbolRecord, m_symbolTableBuffer)
-    m_symbolTableCopy.append (symbolRecord.dup ());
-  m_symbolTableSemaphore->release ();
-
-  return m_symbolTableCopy;
-}
-
-
 void
 OctaveLink::updateHistoryModel ()
 {
   // Determine the client's (our) history length and the one of the server.
   int clientHistoryLength = m_historyModel->rowCount ();
   int serverHistoryLength = command_history::length ();
 
   // If were behind the server, iterate through all new entries and add them to our history.
diff --git a/gui/src/backend/OctaveLink.h b/gui/src/backend/OctaveLink.h
--- a/gui/src/backend/OctaveLink.h
+++ b/gui/src/backend/OctaveLink.h
@@ -91,39 +91,37 @@ public:
   {
     return &m_singleton;
   }
   static QString
   octaveValueAsQString (OctaveValue octaveValue);
 
   void launchOctave ();
   void terminateOctave ();
+  void acquireSymbolTable () { m_symbolTableSemaphore->acquire (); }
+  void releaseSymbolTable () { m_symbolTableSemaphore->release (); }
+
+  /**
+    * For performance reasons this is not thread safe. Before you use this,
+    * acquire a lock with acquireSymbolTable and releaseSymbolTable.
+    */
+  QList < SymbolRecord > symbolTable ();
 
   /**
     * Returns a copy of the current symbol table buffer.
     * \return Copy of the current symbol table buffer.
     */
   QList < SymbolRecord > copyCurrentSymbolTable ();
 
-  void
-  updateHistoryModel ();
-
-  QStringListModel *
-  historyModel ();
-
-  /**
-    * Updates the current symbol table with new data
-    * from octave.
-    */
-  void
-  fetchSymbolTable ();
+  void updateHistoryModel ();
+  QStringListModel *historyModel ();
+  void emitSymbolTableChanged() { emit symbolTableChanged(); }
 
 signals:
-  void
-  symbolTableChanged ();
+  void symbolTableChanged ();
 
 private:
   OctaveLink ();
   ~OctaveLink ();
 
   /** Variable related member variables. */
   QSemaphore * m_symbolTableSemaphore;
   QList < SymbolRecord > m_symbolTableBuffer;
