# HG changeset patch
# User David Bateman <dbateman@free.fr>
# Date 1205950417 14400
#      Wed Mar 19 14:13:37 2008 -0400
# Branch release-3-0-x
# Node ID 802f5890bf5d0e034b35314343eacc8e362508fd
# Parent  b537a643a7cfac3c720085d1ab282a44d44dc976
Fix for array indexing if original matrix is empty

diff --git a/liboctave/Array.cc b/liboctave/Array.cc
--- a/liboctave/Array.cc
+++ b/liboctave/Array.cc
@@ -3106,17 +3106,17 @@ assignN (Array<LT>& lhs, const Array<RT>
 		    new_dims(i) = 1;
 		}
 	      else
 		{
 		  octave_idx_type nelem = idx(i).capacity ();
 
 		  if (nelem >= 1
 		      && ((k < rhs_dims.length () && nelem == rhs_dims(k))
-			  || rhs_is_scalar))
+			  || rhs_is_scalar) || ! idx(i).is_colon())
 		    k++;
 		  else if (! (nelem == 1 || rhs_is_scalar))
 		    {
 		      (*current_liboctave_error_handler)
 			("A(IDX-LIST) = RHS: mismatched index and RHS dimension");
 		      return retval;
 		    }
 
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+2008-03-19  David Bateman  <dbateman@free.fr>
+
+	* Array.cc (assignN): If orig_empty allow assignment like
+	a(1:10,1)=1:10
+
 2008-03-18  David Bateman  <dbateman@free.fr>
 
 	* dNDArray.cc (NDArray::min, NDArraymax): chop trailing singletons.
 	* CNDarray.cc (ComplexNDArray::min, CompelxNDArray::max): ditto.
 	* intNDarray.cc (intNDArray<T>::min, intNDArray<T>::max): ditto.
 	
 	* Array.cc (Array<T>::index): Don't short_freeze on index with
 	fewer dimensions than the array only if the last dimension is empty.
