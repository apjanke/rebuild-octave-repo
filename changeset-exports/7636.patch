# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1206475001 14400
#      Tue Mar 25 15:56:41 2008 -0400
# Node ID 99c410f7f0b0d4a906b7c3e0f9f14b63c5cf8b3c
# Parent  ba7a3e20ee3dbeb210c38a0bcf18f1420d7f9b82
implement mapper function for banker's rounding

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,12 @@
+2008-03-25  John W. Eaton  <jwe@octave.org>
+
+	* configure.in: Check for trunc.
+
 2008-03-21  David Bateman  <dbateman@free.fr>
 
 	* configure.in (HAVE_AMD): Complete test for presence of amd.
 
 2008-03-18  David Bateman  <dbateman@free.fr>
 
 	* configure.in (AC_CHECK_FUNCS): Also check lgamma_r.
 
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -1316,17 +1316,17 @@ fi
 AC_CHECK_FUNCS(atexit basename bcopy bzero canonicalize_file_name chmod \
   dup2 endgrent endpwent execvp fcntl fork getcwd getegid geteuid \
   getgid getgrent getgrgid getgrnam getpgrp getpid getppid getpwent \
   getpwuid gettimeofday getuid getwd _kbhit kill lgamma lgamma_r link \
   localtime_r lstat memmove mkdir mkfifo mkstemp on_exit pipe poll putenv \
   raise readlink realpath rename resolvepath rindex rmdir round select \
   setgrent setlocale setpwent setvbuf sigaction siglongjmp sigpending \
   sigprocmask sigsuspend snprintf stat strcasecmp strdup strerror stricmp \
-  strncasecmp strnicmp strptime strsignal symlink tempnam tgamma umask \
+  strncasecmp strnicmp strptime strsignal symlink tempnam tgamma trunc umask \
   uname unlink usleep utime vfprintf vsprintf vsnprintf waitpid \
   _chmod _snprintf x_utime _utime32)
 
 case "$canonical_host_type" in
   *-*-msdosmsvc)
     ## The %T format specifier for strftime is reportedly broken,
     ## so use our version.  We could use an actual configure test
     ## for this.
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,18 @@
+2008-03-25  John W. Eaton  <jwe@octave.org>
+
+	* lo-mappers.cc (xtrunc): New function.
+	* lo-mappers.h: Provide decl.
+
+2008-03-25  Jaroslav Hajek  <highegg@gmail.com>
+
+	* lo-mappers.cc (xroundb): New function.
+	* lo-mappers.h: Provide decl.
+
 2008-03-23  David Bateman  <dbateman@free.fr>
 
 	* mx-ops: Definite binary operators for mixed integer array +
 	array case, except for 64bit cases.
 	
 2008-03-21  David Bateman  <dbateman@free.fr>
 
 	* oct-sparse.h: Add headers for amd.h.
diff --git a/liboctave/lo-mappers.cc b/liboctave/lo-mappers.cc
--- a/liboctave/lo-mappers.cc
+++ b/liboctave/lo-mappers.cc
@@ -75,16 +75,37 @@ xround (double x)
 #if defined (HAVE_ROUND)
   return round (x);
 #else
   return x > 0 ? floor (x + 0.5) : ceil (x - 0.5);
 #endif
 }
 
 double
+xtrunc (double x)
+{
+#if defined (HAVE_TRUNC)
+  return trunc (x);
+#else
+  return x > 0 ? floor (x) : ceil (x);
+#endif
+}
+
+double 
+xroundb (double x)
+{
+  double t = xround (x);
+
+  if (fabs (x - t) == 0.5)
+    t = 2 * xtrunc (0.5 * t);
+
+  return t;
+}
+
+double
 signum (double x)
 {
   double tmp = 0.0;
 
   if (x < 0.0)
     tmp = -1.0;
   else if (x > 0.0)
     tmp = 1.0;
@@ -262,16 +283,22 @@ floor (const Complex& x)
 
 Complex
 xround (const Complex& x)
 {
   return Complex (xround (real (x)), xround (imag (x)));
 }
 
 Complex
+xroundb (const Complex& x)
+{
+  return Complex (xroundb (real (x)), xroundb (imag (x)));
+}
+
+Complex
 signum (const Complex& x)
 {
   double tmp = abs (x);
 
   return tmp == 0 ? 0.0 : x / tmp;
 }
 
 // complex -> bool mappers.
diff --git a/liboctave/lo-mappers.h b/liboctave/lo-mappers.h
--- a/liboctave/lo-mappers.h
+++ b/liboctave/lo-mappers.h
@@ -27,17 +27,19 @@ along with Octave; see the file COPYING.
 #include "oct-cmplx.h"
 
 extern OCTAVE_API double arg (double x);
 extern OCTAVE_API double conj (double x);
 extern OCTAVE_API double fix (double x);
 extern OCTAVE_API double imag (double x);
 extern OCTAVE_API double real (double x);
 extern OCTAVE_API double xround (double x);
+extern OCTAVE_API double xroundb (double x);
 extern OCTAVE_API double signum (double x);
+extern OCTAVE_API double xtrunc (double x);
 extern OCTAVE_API double xlog2 (double x); 
 extern OCTAVE_API double xexp2 (double x);
 
 extern OCTAVE_API bool xisnan (double x);
 extern OCTAVE_API bool xfinite (double x);
 extern OCTAVE_API bool xisinf (double x);
 
 extern OCTAVE_API bool octave_is_NA (double x);
@@ -52,16 +54,17 @@ extern OCTAVE_API Complex asin (const Co
 extern OCTAVE_API Complex asinh (const Complex& x);
 extern OCTAVE_API Complex atan (const Complex& x);
 extern OCTAVE_API Complex atanh (const Complex& x);
 
 extern OCTAVE_API Complex ceil (const Complex& x);
 extern OCTAVE_API Complex fix (const Complex& x);
 extern OCTAVE_API Complex floor (const Complex& x);
 extern OCTAVE_API Complex xround (const Complex& x);
+extern OCTAVE_API Complex xroundb (const Complex& x);
 extern OCTAVE_API Complex signum (const Complex& x);
 
 extern OCTAVE_API bool xisnan (const Complex& x);
 extern OCTAVE_API bool xfinite (const Complex& x);
 extern OCTAVE_API bool xisinf (const Complex& x);
 
 extern OCTAVE_API bool octave_is_NA (const Complex& x);
 extern OCTAVE_API bool octave_is_NaN_or_NA (const Complex& x);
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,18 @@
+2008-03-25  Jaroslav Hajek  <highegg@gmail.com>
+
+	* mappers.cc (Froundb): New function.
+	* ov-base.cc, ov-base.h, ov-bool-mat.h, ov-bool-sparse.h,
+	ov-bool.h, ov-complex.cc, ov-complex.h, ov-cx-mat.cc, ov-cx-mat.h,
+	ov-cx-sparse.cc, ov-cx-sparse.h, ov-intx.h, ov-range.h,
+	ov-re-mat.cc, ov-re-mat.h, ov-re-sparse.cc, ov-re-sparse.h,
+	ov-scalar.cc, ov-scalar.h, ov.h:
+ 	Provide roundb mapper function.
+
 2008-03-25  Jaroslav Hajek <highegg@gmail.com>
 
 	* load-save.cc (save_vars): Handle -struct modifier.
 	(save_fields): New function.
 	(Fsave): Document new feature.
 
 2008-03-25  John W. Eaton  <jwe@octave.org>
 
diff --git a/src/mappers.cc b/src/mappers.cc
--- a/src/mappers.cc
+++ b/src/mappers.cc
@@ -799,16 +799,34 @@ Return the integer nearest to @var{x}.  
   if (args.length () == 1)
     retval = args(0).round ();
   else
     print_usage ();
 
   return retval;
 }
 
+DEFUN (roundb, args, ,
+    "-*- texinfo -*-\n\
+@deftypefn {Mapping Function} {} roundb (@var{x})\n\
+Return the integer nearest to @var{x}. If there are two nearest\n\
+integers, return the even one (banker's rounding). If @var{x} is complex,\n\
+return @code{roundb (real (@var{x})) + roundb (imag (@var{x})) * I}.\n\
+@seealso{rem}\n\
+@end deftypefn")
+{
+  octave_value retval;
+  if (args.length () == 1)
+    retval = args(0).roundb ();
+  else
+    print_usage ();
+
+  return retval;
+}
+
 DEFUN (sign, args, ,
     "-*- texinfo -*-\n\
 @deftypefn {Mapping Function} {} sign (@var{x})\n\
 Compute the @dfn{signum} function, which is defined as\n\
 @iftex\n\
 @tex\n\
 $$\n\
 {\\rm sign} (@var{x}) = \\cases{1,&$x>0$;\\cr 0,&$x=0$;\\cr -1,&$x<0$.\\cr}\n\
diff --git a/src/ov-base.cc b/src/ov-base.cc
--- a/src/ov-base.cc
+++ b/src/ov-base.cc
@@ -935,16 +935,17 @@ UNDEFINED_MAPPER (imag)
 UNDEFINED_MAPPER (isinf)
 UNDEFINED_MAPPER (isna)
 UNDEFINED_MAPPER (isnan)
 UNDEFINED_MAPPER (lgamma)
 UNDEFINED_MAPPER (log)
 UNDEFINED_MAPPER (log10)
 UNDEFINED_MAPPER (real)
 UNDEFINED_MAPPER (round)
+UNDEFINED_MAPPER (roundb)
 UNDEFINED_MAPPER (signum)
 UNDEFINED_MAPPER (sin)
 UNDEFINED_MAPPER (sinh)
 UNDEFINED_MAPPER (sqrt)
 UNDEFINED_MAPPER (tan)
 UNDEFINED_MAPPER (tanh)
 
 // String mapper functions, convert to a string
diff --git a/src/ov-base.h b/src/ov-base.h
--- a/src/ov-base.h
+++ b/src/ov-base.h
@@ -496,16 +496,17 @@ public:
   virtual octave_value isinf (void) const;
   virtual octave_value isna (void) const;
   virtual octave_value isnan (void) const;
   virtual octave_value lgamma (void) const;
   virtual octave_value log (void) const;
   virtual octave_value log10 (void) const;
   virtual octave_value real (void) const;
   virtual octave_value round (void) const;
+  virtual octave_value roundb (void) const;
   virtual octave_value signum (void) const;
   virtual octave_value sin (void) const;
   virtual octave_value sinh (void) const;
   virtual octave_value sqrt (void) const;
   virtual octave_value tan (void) const;
   virtual octave_value tanh (void) const;
 
   // These functions are prefixed with X to avoid potential macro
diff --git a/src/ov-bool-mat.h b/src/ov-bool-mat.h
--- a/src/ov-bool-mat.h
+++ b/src/ov-bool-mat.h
@@ -216,16 +216,17 @@ public:
   BOOL_MAT_MAPPER (isinf)
   BOOL_MAT_MAPPER (isna)
   BOOL_MAT_MAPPER (isnan)
   BOOL_MAT_MAPPER (lgamma)
   BOOL_MAT_MAPPER (log)
   BOOL_MAT_MAPPER (log10)
   BOOL_MAT_MAPPER (real)
   BOOL_MAT_MAPPER (round)
+  BOOL_MAT_MAPPER (roundb)
   BOOL_MAT_MAPPER (signum)
   BOOL_MAT_MAPPER (sin)
   BOOL_MAT_MAPPER (sinh)
   BOOL_MAT_MAPPER (sqrt)
   BOOL_MAT_MAPPER (tan)
   BOOL_MAT_MAPPER (tanh)
 
 #undef BOOL_MAT_MAPPER
diff --git a/src/ov-bool-sparse.h b/src/ov-bool-sparse.h
--- a/src/ov-bool-sparse.h
+++ b/src/ov-bool-sparse.h
@@ -172,16 +172,17 @@ public:
   BOOL_SPARSE_MAPPER (isinf)
   BOOL_SPARSE_MAPPER (isna)
   BOOL_SPARSE_MAPPER (isnan)
   BOOL_SPARSE_MAPPER (lgamma)
   BOOL_SPARSE_MAPPER (log)
   BOOL_SPARSE_MAPPER (log10)
   BOOL_SPARSE_MAPPER (real)
   BOOL_SPARSE_MAPPER (round)
+  BOOL_SPARSE_MAPPER (roundb)
   BOOL_SPARSE_MAPPER (signum)
   BOOL_SPARSE_MAPPER (sin)
   BOOL_SPARSE_MAPPER (sinh)
   BOOL_SPARSE_MAPPER (sqrt)
   BOOL_SPARSE_MAPPER (tan)
   BOOL_SPARSE_MAPPER (tanh)
 
 #undef BOOL_SPARSE_MAPPER
diff --git a/src/ov-bool.h b/src/ov-bool.h
--- a/src/ov-bool.h
+++ b/src/ov-bool.h
@@ -224,16 +224,17 @@ public:
   BOOL_MAPPER (isinf)
   BOOL_MAPPER (isna)
   BOOL_MAPPER (isnan)
   BOOL_MAPPER (lgamma)
   BOOL_MAPPER (log)
   BOOL_MAPPER (log10)
   BOOL_MAPPER (real)
   BOOL_MAPPER (round)
+  BOOL_MAPPER (roundb)
   BOOL_MAPPER (signum)
   BOOL_MAPPER (sin)
   BOOL_MAPPER (sinh)
   BOOL_MAPPER (sqrt)
   BOOL_MAPPER (tan)
   BOOL_MAPPER (tanh)
 
 #undef BOOL_MAPPER
diff --git a/src/ov-complex.cc b/src/ov-complex.cc
--- a/src/ov-complex.cc
+++ b/src/ov-complex.cc
@@ -374,16 +374,17 @@ COMPLEX_MAPPER (cosh, std::cosh)
 COMPLEX_MAPPER (exp, std::exp)
 COMPLEX_MAPPER (fix, ::fix)
 COMPLEX_MAPPER (floor, ::floor)
 COMPLEX_MAPPER (imag, ximag)
 COMPLEX_MAPPER (log, std::log)
 COMPLEX_MAPPER (log10, std::log10)
 COMPLEX_MAPPER (real, xreal)
 COMPLEX_MAPPER (round, xround)
+COMPLEX_MAPPER (roundb, xroundb)
 COMPLEX_MAPPER (signum, ::signum)
 COMPLEX_MAPPER (sin, std::sin)
 COMPLEX_MAPPER (sinh, std::sinh)
 COMPLEX_MAPPER (sqrt, std::sqrt)
 COMPLEX_MAPPER (tan, std::tan)
 COMPLEX_MAPPER (tanh, std::tanh)
 COMPLEX_MAPPER (finite, xfinite)
 COMPLEX_MAPPER (isinf, xisinf)
diff --git a/src/ov-complex.h b/src/ov-complex.h
--- a/src/ov-complex.h
+++ b/src/ov-complex.h
@@ -166,16 +166,17 @@ public:
   octave_value exp (void) const;
   octave_value fix (void) const;
   octave_value floor (void) const;
   octave_value imag (void) const;
   octave_value log (void) const;
   octave_value log10 (void) const;
   octave_value real (void) const;
   octave_value round (void) const;
+  octave_value roundb (void) const;
   octave_value signum (void) const;
   octave_value sin (void) const;
   octave_value sinh (void) const;
   octave_value sqrt (void) const;
   octave_value tan (void) const;
   octave_value tanh (void) const;
   octave_value finite (void) const;
   octave_value isinf (void) const;
diff --git a/src/ov-cx-mat.cc b/src/ov-cx-mat.cc
--- a/src/ov-cx-mat.cc
+++ b/src/ov-cx-mat.cc
@@ -694,16 +694,17 @@ ARRAY_MAPPER (cosh, ComplexNDArray::cmap
 ARRAY_MAPPER (exp, ComplexNDArray::cmapper, std::exp)
 ARRAY_MAPPER (fix, ComplexNDArray::cmapper, ::fix)
 ARRAY_MAPPER (floor, ComplexNDArray::cmapper, ::floor)
 ARRAY_MAPPER (imag, ComplexNDArray::dmapper, ximag)
 ARRAY_MAPPER (log, ComplexNDArray::cmapper, std::log)
 ARRAY_MAPPER (log10, ComplexNDArray::cmapper, std::log10)
 ARRAY_MAPPER (real, ComplexNDArray::dmapper, xreal)
 ARRAY_MAPPER (round, ComplexNDArray::cmapper, xround)
+ARRAY_MAPPER (roundb, ComplexNDArray::cmapper, xroundb)
 ARRAY_MAPPER (signum, ComplexNDArray::cmapper, ::signum)
 ARRAY_MAPPER (sin, ComplexNDArray::cmapper, std::sin)
 ARRAY_MAPPER (sinh, ComplexNDArray::cmapper, std::sinh)
 ARRAY_MAPPER (sqrt, ComplexNDArray::cmapper, std::sqrt)
 ARRAY_MAPPER (tan, ComplexNDArray::cmapper, std::tan)
 ARRAY_MAPPER (tanh, ComplexNDArray::cmapper, std::tanh)
 ARRAY_MAPPER (finite, ComplexNDArray::bmapper, xfinite)
 ARRAY_MAPPER (isinf, ComplexNDArray::bmapper, xisinf)
diff --git a/src/ov-cx-mat.h b/src/ov-cx-mat.h
--- a/src/ov-cx-mat.h
+++ b/src/ov-cx-mat.h
@@ -169,16 +169,17 @@ public:
   octave_value exp (void) const;
   octave_value fix (void) const;
   octave_value floor (void) const;
   octave_value imag (void) const;
   octave_value log (void) const;
   octave_value log10 (void) const;
   octave_value real (void) const;
   octave_value round (void) const;
+  octave_value roundb (void) const;
   octave_value signum (void) const;
   octave_value sin (void) const;
   octave_value sinh (void) const;
   octave_value sqrt (void) const;
   octave_value tan (void) const;
   octave_value tanh (void) const;
   octave_value finite (void) const;
   octave_value isinf (void) const;
diff --git a/src/ov-cx-sparse.cc b/src/ov-cx-sparse.cc
--- a/src/ov-cx-sparse.cc
+++ b/src/ov-cx-sparse.cc
@@ -863,16 +863,17 @@ SPARSE_MAPPER (cosh, SparseComplexMatrix
 SPARSE_MAPPER (exp, SparseComplexMatrix::cmapper, std::exp)
 SPARSE_MAPPER (fix, SparseComplexMatrix::cmapper, ::fix)
 SPARSE_MAPPER (floor, SparseComplexMatrix::cmapper, ::floor)
 SPARSE_MAPPER (imag, SparseComplexMatrix::dmapper, ximag)
 SPARSE_MAPPER (log, SparseComplexMatrix::cmapper, std::log)
 SPARSE_MAPPER (log10, SparseComplexMatrix::cmapper, std::log10)
 SPARSE_MAPPER (real, SparseComplexMatrix::dmapper, xreal)
 SPARSE_MAPPER (round, SparseComplexMatrix::cmapper, xround)
+SPARSE_MAPPER (roundb, SparseComplexMatrix::cmapper, xroundb)
 SPARSE_MAPPER (signum, SparseComplexMatrix::cmapper, ::signum)
 SPARSE_MAPPER (sin, SparseComplexMatrix::cmapper, std::sin)
 SPARSE_MAPPER (sinh, SparseComplexMatrix::cmapper, std::sinh)
 SPARSE_MAPPER (sqrt, SparseComplexMatrix::cmapper, std::sqrt)
 SPARSE_MAPPER (tan, SparseComplexMatrix::cmapper, std::tan)
 SPARSE_MAPPER (tanh, SparseComplexMatrix::cmapper, std::tanh)
 SPARSE_MAPPER (finite, SparseComplexMatrix::bmapper, xfinite)
 SPARSE_MAPPER (isinf, SparseComplexMatrix::bmapper, xisinf)
diff --git a/src/ov-cx-sparse.h b/src/ov-cx-sparse.h
--- a/src/ov-cx-sparse.h
+++ b/src/ov-cx-sparse.h
@@ -168,16 +168,17 @@ public:
   octave_value exp (void) const;
   octave_value fix (void) const;
   octave_value floor (void) const;
   octave_value imag (void) const;
   octave_value log (void) const;
   octave_value log10 (void) const;
   octave_value real (void) const;
   octave_value round (void) const;
+  octave_value roundb (void) const;
   octave_value signum (void) const;
   octave_value sin (void) const;
   octave_value sinh (void) const;
   octave_value sqrt (void) const;
   octave_value tan (void) const;
   octave_value tanh (void) const;
   octave_value finite (void) const;
   octave_value isinf (void) const;
diff --git a/src/ov-intx.h b/src/ov-intx.h
--- a/src/ov-intx.h
+++ b/src/ov-intx.h
@@ -247,16 +247,17 @@ public:
   octave_value FCN (void) const { return octave_value (matrix); }
 
   NO_OP_MAPPER (ceil)
   NO_OP_MAPPER (conj)
   NO_OP_MAPPER (fix)
   NO_OP_MAPPER (floor)
   NO_OP_MAPPER (real)
   NO_OP_MAPPER (round)
+  NO_OP_MAPPER (roundb)
 
 #undef NO_OP_MAPPER
 
 #define BOOL_MAPPER(FCN, VAL) \
   octave_value FCN (void) const { return boolNDArray (matrix.dims (), VAL); }
 
   BOOL_MAPPER (finite, true)
   BOOL_MAPPER (isinf, false)
@@ -501,16 +502,17 @@ public:
   octave_value FCN (void) const { return octave_value (scalar); }
 
   NO_OP_MAPPER (ceil)
   NO_OP_MAPPER (conj)
   NO_OP_MAPPER (fix)
   NO_OP_MAPPER (floor)
   NO_OP_MAPPER (real)
   NO_OP_MAPPER (round)
+  NO_OP_MAPPER (roundb)
 
 #undef NO_OP_MAPPER
 
 #define BOOL_MAPPER(FCN, VAL) octave_value FCN (void) const { return VAL; }
 
   BOOL_MAPPER (finite, true)
   BOOL_MAPPER (isinf, false)
   BOOL_MAPPER (isna, false)
diff --git a/src/ov-range.h b/src/ov-range.h
--- a/src/ov-range.h
+++ b/src/ov-range.h
@@ -299,16 +299,17 @@ public:
   RANGE_MAPPER (isinf)
   RANGE_MAPPER (isna)
   RANGE_MAPPER (isnan)
   RANGE_MAPPER (lgamma)
   RANGE_MAPPER (log)
   RANGE_MAPPER (log10)
   RANGE_MAPPER (real)
   RANGE_MAPPER (round)
+  RANGE_MAPPER (roundb)
   RANGE_MAPPER (signum)
   RANGE_MAPPER (sin)
   RANGE_MAPPER (sinh)
   RANGE_MAPPER (sqrt)
   RANGE_MAPPER (tan)
   RANGE_MAPPER (tanh)
 
 private:
diff --git a/src/ov-re-mat.cc b/src/ov-re-mat.cc
--- a/src/ov-re-mat.cc
+++ b/src/ov-re-mat.cc
@@ -732,16 +732,17 @@ ARRAY_MAPPER (cosh, NDArray::dmapper, ::
 ARRAY_MAPPER (exp, NDArray::dmapper, ::exp)
 ARRAY_MAPPER (fix, NDArray::dmapper, ::fix)
 ARRAY_MAPPER (floor, NDArray::dmapper, ::floor)
 ARRAY_MAPPER (imag, NDArray::dmapper, ::imag)
 CD_ARRAY_MAPPER (log, ::log, std::log, 0.0, octave_Inf)
 CD_ARRAY_MAPPER (log10, ::log10, std::log10, 0.0, octave_Inf)
 ARRAY_MAPPER (real, NDArray::dmapper, ::real)
 ARRAY_MAPPER (round, NDArray::dmapper, xround)
+ARRAY_MAPPER (roundb, NDArray::dmapper, xroundb)
 ARRAY_MAPPER (signum, NDArray::dmapper, ::signum)
 ARRAY_MAPPER (sin, NDArray::dmapper, ::sin)
 ARRAY_MAPPER (sinh, NDArray::dmapper, ::sinh)
 CD_ARRAY_MAPPER (sqrt, ::sqrt, std::sqrt, 0.0, octave_Inf)
 ARRAY_MAPPER (tan, NDArray::dmapper, ::tan)
 ARRAY_MAPPER (tanh, NDArray::dmapper, ::tanh)
 ARRAY_MAPPER (finite, NDArray::bmapper, xfinite)
 ARRAY_MAPPER (isinf, NDArray::bmapper, xisinf)
diff --git a/src/ov-re-mat.h b/src/ov-re-mat.h
--- a/src/ov-re-mat.h
+++ b/src/ov-re-mat.h
@@ -200,16 +200,17 @@ public:
   octave_value exp (void) const;
   octave_value fix (void) const;
   octave_value floor (void) const;
   octave_value imag (void) const;
   octave_value log (void) const;
   octave_value log10 (void) const;
   octave_value real (void) const;
   octave_value round (void) const;
+  octave_value roundb (void) const;
   octave_value signum (void) const;
   octave_value sin (void) const;
   octave_value sinh (void) const;
   octave_value sqrt (void) const;
   octave_value tan (void) const;
   octave_value tanh (void) const;
   octave_value finite (void) const;
   octave_value isinf (void) const;
diff --git a/src/ov-re-sparse.cc b/src/ov-re-sparse.cc
--- a/src/ov-re-sparse.cc
+++ b/src/ov-re-sparse.cc
@@ -922,16 +922,17 @@ SPARSE_MAPPER (cosh, SparseMatrix::dmapp
 SPARSE_MAPPER (exp, SparseMatrix::dmapper, ::exp)
 SPARSE_MAPPER (fix, SparseMatrix::dmapper, ::fix)
 SPARSE_MAPPER (floor, SparseMatrix::dmapper, ::floor)
 SPARSE_MAPPER (imag, SparseMatrix::dmapper, ::imag)
 CD_SPARSE_MAPPER (log, ::log, std::log, 0.0, octave_Inf)
 CD_SPARSE_MAPPER (log10, ::log10, std::log10, 0.0, octave_Inf)
 SPARSE_MAPPER (real, SparseMatrix::dmapper, ::real)
 SPARSE_MAPPER (round, SparseMatrix::dmapper, xround)
+SPARSE_MAPPER (roundb, SparseMatrix::dmapper, xroundb)
 SPARSE_MAPPER (signum, SparseMatrix::dmapper, ::signum)
 SPARSE_MAPPER (sin, SparseMatrix::dmapper, ::sin)
 SPARSE_MAPPER (sinh, SparseMatrix::dmapper, ::sinh)
 CD_SPARSE_MAPPER (sqrt, ::sqrt, std::sqrt, 0.0, octave_Inf)
 SPARSE_MAPPER (tan, SparseMatrix::dmapper, ::tan)
 SPARSE_MAPPER (tanh, SparseMatrix::dmapper, ::tanh)
 SPARSE_MAPPER (finite, SparseMatrix::bmapper, xfinite)
 SPARSE_MAPPER (isinf, SparseMatrix::bmapper, xisinf)
diff --git a/src/ov-re-sparse.h b/src/ov-re-sparse.h
--- a/src/ov-re-sparse.h
+++ b/src/ov-re-sparse.h
@@ -173,16 +173,17 @@ public:
   octave_value exp (void) const;
   octave_value fix (void) const;
   octave_value floor (void) const;
   octave_value imag (void) const;
   octave_value log (void) const;
   octave_value log10 (void) const;
   octave_value real (void) const;
   octave_value round (void) const;
+  octave_value roundb (void) const;
   octave_value signum (void) const;
   octave_value sin (void) const;
   octave_value sinh (void) const;
   octave_value sqrt (void) const;
   octave_value tan (void) const;
   octave_value tanh (void) const;
   octave_value finite (void) const;
   octave_value isinf (void) const;
diff --git a/src/ov-scalar.cc b/src/ov-scalar.cc
--- a/src/ov-scalar.cc
+++ b/src/ov-scalar.cc
@@ -327,16 +327,17 @@ SCALAR_MAPPER (cosh, ::cosh)
 SCALAR_MAPPER (exp, ::exp)
 SCALAR_MAPPER (fix, ::fix)
 SCALAR_MAPPER (floor, ::floor)
 SCALAR_MAPPER (imag, ::imag)
 CD_SCALAR_MAPPER (log, ::log, std::log, 0.0, octave_Inf)
 CD_SCALAR_MAPPER (log10, ::log10, std::log10, 0.0, octave_Inf)
 SCALAR_MAPPER (real, ::real)
 SCALAR_MAPPER (round, xround)
+SCALAR_MAPPER (roundb, xroundb)
 SCALAR_MAPPER (signum, ::signum)
 SCALAR_MAPPER (sin, ::sin)
 SCALAR_MAPPER (sinh, ::sinh)
 CD_SCALAR_MAPPER (sqrt, ::sqrt, std::sqrt, 0.0, octave_Inf)
 SCALAR_MAPPER (tan, ::tan)
 SCALAR_MAPPER (tanh, ::tanh)
 SCALAR_MAPPER (finite, xfinite)
 SCALAR_MAPPER (isinf, xisinf)
diff --git a/src/ov-scalar.h b/src/ov-scalar.h
--- a/src/ov-scalar.h
+++ b/src/ov-scalar.h
@@ -241,16 +241,17 @@ public:
   octave_value exp (void) const;
   octave_value fix (void) const;
   octave_value floor (void) const;
   octave_value imag (void) const;
   octave_value log (void) const;
   octave_value log10 (void) const;
   octave_value real (void) const;
   octave_value round (void) const;
+  octave_value roundb (void) const;
   octave_value signum (void) const;
   octave_value sin (void) const;
   octave_value sinh (void) const;
   octave_value sqrt (void) const;
   octave_value tan (void) const;
   octave_value tanh (void) const;
   octave_value finite (void) const;
   octave_value isinf (void) const;
diff --git a/src/ov.h b/src/ov.h
--- a/src/ov.h
+++ b/src/ov.h
@@ -910,16 +910,17 @@ public:
   MAPPER_FORWARD (isinf)
   MAPPER_FORWARD (isna)
   MAPPER_FORWARD (isnan)
   MAPPER_FORWARD (lgamma)
   MAPPER_FORWARD (log)
   MAPPER_FORWARD (log10)
   MAPPER_FORWARD (real)
   MAPPER_FORWARD (round)
+  MAPPER_FORWARD (roundb)
   MAPPER_FORWARD (signum)
   MAPPER_FORWARD (sin)
   MAPPER_FORWARD (sinh)
   MAPPER_FORWARD (sqrt)
   MAPPER_FORWARD (tan)
   MAPPER_FORWARD (tanh)
 
   // These functions are prefixed with X to avoid potential macro
