# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1522084242 14400
#      Mon Mar 26 13:10:42 2018 -0400
# Branch stable
# Node ID 831389905438d01f419282cd9025e10a6914b6a1
# Parent  9a1c8ba849e14d459c4d69f022be94f90bdbfb20
omit argument name from default copy ctors and assignment operators

* thread-manager.h, fcn-info.h, graphics.in.h, load-path.h,
oct-stream.cc, pr-flt-fmt.h, symrec.h, octave.h, oct-lvalue.h,
child-list.h, pathsearch.h, url-transfer.h:
Use "(const foo&)" instead of "(const foo& arg)" for declaration of
default copy constructors and assignment operators.

diff --git a/libgui/src/thread-manager.h b/libgui/src/thread-manager.h
--- a/libgui/src/thread-manager.h
+++ b/libgui/src/thread-manager.h
@@ -49,19 +49,19 @@ namespace octave
   class thread_manager
   {
   public:
 
     thread_manager (void);
 
     ~thread_manager (void) = default;
 
-    thread_manager (const thread_manager& tm) = default;
+    thread_manager (const thread_manager&) = default;
 
-    thread_manager& operator = (const thread_manager& tm) = default;
+    thread_manager& operator = (const thread_manager&) = default;
 
     void register_current_thread (void) { m_rep->register_current_thread (); }
 
     void interrupt (void) { m_rep->interrupt (); }
 
     static void block_interrupt_signal (void);
 
     static void unblock_interrupt_signal (void);
diff --git a/libinterp/corefcn/fcn-info.h b/libinterp/corefcn/fcn-info.h
--- a/libinterp/corefcn/fcn-info.h
+++ b/libinterp/corefcn/fcn-info.h
@@ -227,19 +227,19 @@ namespace octave
       octave_value x_builtin_find (void);
     };
 
   public:
 
     fcn_info (const std::string& nm = "")
       : m_rep (new fcn_info_rep (nm)) { }
 
-    fcn_info (const fcn_info& fi) = default;
+    fcn_info (const fcn_info&) = default;
 
-    fcn_info& operator = (const fcn_info& fi) = default;
+    fcn_info& operator = (const fcn_info&) = default;
 
     ~fcn_info (void) = default;
 
     octave_value find (const octave_value_list& args = octave_value_list (),
                        bool local_funcs = true)
     {
       return m_rep->find (args, local_funcs);
     }
diff --git a/libinterp/corefcn/graphics.in.h b/libinterp/corefcn/graphics.in.h
--- a/libinterp/corefcn/graphics.in.h
+++ b/libinterp/corefcn/graphics.in.h
@@ -2660,19 +2660,19 @@ protected:
 class OCTINTERP_API graphics_object
 {
 public:
 
   graphics_object (void) : rep (new base_graphics_object ()) { }
 
   graphics_object (base_graphics_object *new_rep) : rep (new_rep) { }
 
-  graphics_object (const graphics_object& obj) = default;
-
-  graphics_object& operator = (const graphics_object& obj) = default;
+  graphics_object (const graphics_object&) = default;
+
+  graphics_object& operator = (const graphics_object&) = default;
 
   ~graphics_object (void) = default;
 
   void mark_modified (void) { rep->mark_modified (); }
 
   void override_defaults (base_graphics_object& obj)
   {
     rep->override_defaults (obj);
@@ -5995,21 +5995,21 @@ graphics_event
 public:
 
   typedef void (*event_fcn) (void*);
 
   graphics_event (void) = default;
 
   graphics_event (base_graphics_event *new_rep) : rep (new_rep) { }
 
-  graphics_event (const graphics_event& e) = default;
+  graphics_event (const graphics_event&) = default;
 
   ~graphics_event (void) = default;
 
-  graphics_event& operator = (const graphics_event& e) = default;
+  graphics_event& operator = (const graphics_event&) = default;
 
   void execute (void)
   {
     if (ok ())
       rep->execute ();
   }
 
   bool ok (void) const { return (rep != nullptr); }
diff --git a/libinterp/corefcn/load-path.h b/libinterp/corefcn/load-path.h
--- a/libinterp/corefcn/load-path.h
+++ b/libinterp/corefcn/load-path.h
@@ -254,21 +254,21 @@ namespace octave
       dir_info (const std::string& d)
         : dir_name (d), abs_dir_name (), is_relative (false),
           dir_mtime (), dir_time_last_checked (), all_files (), fcn_files (),
           private_file_map (), method_file_map (), package_dir_map ()
       {
         initialize ();
       }
 
-      dir_info (const dir_info& di) = default;
+      dir_info (const dir_info&) = default;
 
       ~dir_info (void) = default;
 
-      dir_info& operator = (const dir_info& di) = default;
+      dir_info& operator = (const dir_info&) = default;
 
       void update (void);
 
       std::string dir_name;
       std::string abs_dir_name;
       bool is_relative;
       sys::time dir_mtime;
       sys::time dir_time_last_checked;
diff --git a/libinterp/corefcn/oct-stream.cc b/libinterp/corefcn/oct-stream.cc
--- a/libinterp/corefcn/oct-stream.cc
+++ b/libinterp/corefcn/oct-stream.cc
@@ -233,19 +233,19 @@ namespace octave
 
     scanf_format_elt (const std::string& txt = "", int w = 0, bool d = false,
                       char typ = '\0', char mod = '\0',
                       const std::string& ch_class = "")
       : text (txt), width (w), discard (d), type (typ),
         modifier (mod), char_class (ch_class)
     { }
 
-    scanf_format_elt (const scanf_format_elt& e) = default;
-
-    scanf_format_elt& operator = (const scanf_format_elt& e) = default;
+    scanf_format_elt (const scanf_format_elt&) = default;
+
+    scanf_format_elt& operator = (const scanf_format_elt&) = default;
 
     ~scanf_format_elt (void) = default;
 
     // The C-style format string.
     std::string text;
 
     // The maximum field width.
     int width;
@@ -729,19 +729,19 @@ namespace octave
 
     printf_format_elt (const std::string& txt = "", int n = 0, int w = -1,
                        int p = -1, const std::string& f = "",
                        char typ = '\0', char mod = '\0')
       : text (txt), args (n), fw (w), prec (p), flags (f),
         type (typ), modifier (mod)
     { }
 
-    printf_format_elt (const printf_format_elt& e) = default;
-
-    printf_format_elt& operator = (const printf_format_elt& e) = default;
+    printf_format_elt (const printf_format_elt&) = default;
+
+    printf_format_elt& operator = (const printf_format_elt&) = default;
 
     ~printf_format_elt (void) = default;
 
     // The C-style format string.
     std::string text;
 
     // How many args do we expect to consume?
     int args;
diff --git a/libinterp/corefcn/pr-flt-fmt.h b/libinterp/corefcn/pr-flt-fmt.h
--- a/libinterp/corefcn/pr-flt-fmt.h
+++ b/libinterp/corefcn/pr-flt-fmt.h
@@ -47,19 +47,19 @@ float_format
 public:
 
   float_format (int w = 0, int p = output_precision (), int f = 0)
     : fw (w), ex (0), prec (p), fmt (f), up (0), sp (0) { }
 
   float_format (int w, int e, int p, int f)
     : fw (w), ex (e), prec (p), fmt (f), up (0), sp (0) { }
 
-  float_format (const float_format& ff) = default;
+  float_format (const float_format&) = default;
 
-  float_format& operator = (const float_format& ff) = default;
+  float_format& operator = (const float_format&) = default;
 
   ~float_format (void) = default;
 
   float_format& scientific (void)
   {
     fmt = std::ios::scientific;
     return *this;
   }
diff --git a/libinterp/corefcn/symrec.h b/libinterp/corefcn/symrec.h
--- a/libinterp/corefcn/symrec.h
+++ b/libinterp/corefcn/symrec.h
@@ -552,19 +552,19 @@ namespace octave
   public:
 
     symbol_record (const std::string& nm = "",
                    const octave_value& v = octave_value (),
                    unsigned int sc = local)
       : m_rep (new symbol_record_rep (nm, v, sc))
     { }
 
-    symbol_record (const symbol_record& sr) = default;
+    symbol_record (const symbol_record&) = default;
 
-    symbol_record& operator = (const symbol_record& sr) = default;
+    symbol_record& operator = (const symbol_record&) = default;
 
     ~symbol_record (void) = default;
 
     symbol_record dup (const std::shared_ptr<symbol_scope_rep>& sid) const
     {
       return symbol_record (m_rep->dup (sid));
     }
 
diff --git a/libinterp/octave.h b/libinterp/octave.h
--- a/libinterp/octave.h
+++ b/libinterp/octave.h
@@ -39,19 +39,19 @@ namespace octave
   class OCTINTERP_API cmdline_options
   {
   public:
 
     cmdline_options (void);
 
     cmdline_options (int argc, char **argv);
 
-    cmdline_options (const cmdline_options& opts) = default;
+    cmdline_options (const cmdline_options&) = default;
 
-    cmdline_options& operator = (const cmdline_options& opts) = default;
+    cmdline_options& operator = (const cmdline_options&) = default;
 
     bool debug_jit (void) const { return m_debug_jit; }
     bool echo_commands (void) const { return m_echo_commands; }
 
     OCTAVE_DEPRECATED (4.4, "use 'gui' instead")
     bool force_gui (void) const { return m_gui; }
 
     bool forced_interactive (void) const { return m_forced_interactive; }
diff --git a/libinterp/parse-tree/oct-lvalue.h b/libinterp/parse-tree/oct-lvalue.h
--- a/libinterp/parse-tree/oct-lvalue.h
+++ b/libinterp/parse-tree/oct-lvalue.h
@@ -41,19 +41,19 @@ namespace octave
         m_idx (), m_nel (1)
     { }
 
     octave_lvalue (const symbol_record& sr, symbol_record::context_id context)
       : m_sym (sr), m_context (context), m_black_hole (false),
         m_type (), m_idx (), m_nel (1)
     { }
 
-    octave_lvalue (const octave_lvalue& vr) = default;
+    octave_lvalue (const octave_lvalue&) = default;
 
-    octave_lvalue& operator = (const octave_lvalue& vr) = default;
+    octave_lvalue& operator = (const octave_lvalue&) = default;
 
     ~octave_lvalue (void) = default;
 
     bool is_black_hole (void) const { return m_black_hole; }
 
     void mark_black_hole (void) { m_black_hole = true; }
 
     bool is_defined (void) const
diff --git a/liboctave/system/child-list.h b/liboctave/system/child-list.h
--- a/liboctave/system/child-list.h
+++ b/liboctave/system/child-list.h
@@ -44,19 +44,19 @@ namespace octave
     // the child_list.
 
     typedef bool (*child_event_handler) (pid_t, int);
 
     child (pid_t id = -1, child_event_handler f = nullptr)
       : pid (id), handler (f), have_status (0), status (0)
     { }
 
-    child (const child& oc) = default;
+    child (const child&) = default;
 
-    child& operator = (const child& oc) = default;
+    child& operator = (const child&) = default;
 
     ~child (void) = default;
 
     // The process id of this child.
     pid_t pid;
 
     // The function we call if an event happens for this child.
     child_event_handler handler;
diff --git a/liboctave/util/pathsearch.h b/liboctave/util/pathsearch.h
--- a/liboctave/util/pathsearch.h
+++ b/liboctave/util/pathsearch.h
@@ -33,19 +33,19 @@ namespace octave
   class
   OCTAVE_API
   directory_path
   {
   public:
 
     directory_path (const std::string& s = "", const std::string& d = "");
 
-    directory_path (const directory_path& dp) = default;
+    directory_path (const directory_path&) = default;
 
-    directory_path& operator = (const directory_path& dp) = default;
+    directory_path& operator = (const directory_path&) = default;
 
     ~directory_path (void) = default;
 
     void set (const std::string& s)
     {
       m_initialized = false;
       m_orig_path = s;
       init ();
diff --git a/liboctave/util/url-transfer.h b/liboctave/util/url-transfer.h
--- a/liboctave/util/url-transfer.h
+++ b/liboctave/util/url-transfer.h
@@ -171,19 +171,19 @@ namespace octave
 
     url_transfer (void);
 
     url_transfer (const std::string& host, const std::string& user,
                   const std::string& passwd, std::ostream& os);
 
     url_transfer (const std::string& url, std::ostream& os);
 
-    url_transfer (const url_transfer& h) = default;
+    url_transfer (const url_transfer&) = default;
 
-    url_transfer& operator = (const url_transfer& h) = default;
+    url_transfer& operator = (const url_transfer&) = default;
 
     ~url_transfer (void) = default;
 
     bool is_valid (void) const { return rep->is_valid (); }
 
     bool good (void) const { return rep->good (); }
 
     std::string lasterror (void) const { return rep->lasterror (); }
