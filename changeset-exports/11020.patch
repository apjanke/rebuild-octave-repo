# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1285407241 25200
#      Sat Sep 25 02:34:01 2010 -0700
# Node ID a2773763e3ffc48938bf7e8a3ce266933ec5d2b0
# Parent  630dc1933fe60284a54a423b51e150cc5c3f7d17
Remove requirement for PCRE to build doc-cache.

diff --git a/doc/ChangeLog b/doc/ChangeLog
--- a/doc/ChangeLog
+++ b/doc/ChangeLog
@@ -1,15 +1,21 @@
+2010-08-15  Rik <octave@nomad.inbox5.com>
+
+	* interpreter/mk_doc_cache.m: Remove requirement for PCRE to build
+	doc cache.  Correctly parse first sentence from docstrings with 
+	multiple @deftypefn lines.
+
 2010-09-15  John W. Eaton  <jwe@octave.org>
 
 	* interpreter/Makefile.am (EXTRA_DIST): Add images.awk to the list.
 
 2010-08-15  Rik <octave@nomad.inbox5.com>
 
-	* interpreter/matrx.txi: Add documentation for randi function.
+	* interpreter/matrix.txi: Add documentation for randi function.
 
 2010-08-13  Rik <octave@nomad.inbox5.com>
 
 	* interpreter/Makefile.am: Update @EXAMPLEFILE dependencies.
 
 2010-08-10  Rik <octave@nomad.inbox5.com>
 
 	* interpreter/Makefile.am: Change dependency to $(srcdir)/images.mk.
diff --git a/doc/interpreter/mk_doc_cache.m b/doc/interpreter/mk_doc_cache.m
--- a/doc/interpreter/mk_doc_cache.m
+++ b/doc/interpreter/mk_doc_cache.m
@@ -40,18 +40,18 @@ for i = 1:nfiles
     tmp = fread (fid, Inf, "*char")';
     ## Strip off header lines
     [null, text{i}] = strtok (tmp, doc_delim);
   endif
 endfor
 text = [text{:}, doc_delim];
 
 ## Modify Octave-specific macros before passing to makeinfo
-text = regexprep (text, "@seealso *{([^}]*)}", "See also: $1.");
-text = regexprep (text, "@nospell *{([^}]*)}", "$1");
+text = regexprep (text, "@seealso *\\{([^}]*)\\}", "See also: $1.");
+text = regexprep (text, "@nospell *\\{([^}]*)\\}", "$1");
 text = regexprep (text, "-\\*- texinfo -\\*-[ \t]*[\r\n]*", "");
 text = regexprep (text, "@", "@@");
 
 ## Write data to temporary file for input to makeinfo
 [fid, name, msg] = mkstemp ("octave_doc_XXXXXX", true);
 if (fid < 0)
   error ("%s: %s\n", name, msg);
 endif
@@ -92,25 +92,30 @@ for i = 2:n
   if (length (symbol) > 2 && regexp (symbol, "^__.+__$"))
     continue;
   endif
 
   if (isempty (doc))
     continue;
   endif
 
-  [s, e] = regexp (doc, "^ -- [^\r\n]*[\r\n]", "lineanchors");
+  tmp = doc;
+  found = 0;
+  do
+    [s, e] = regexp (tmp, "^ -- [^\r\n]*[\r\n]");
+    if (! isempty(s))
+      found = 1;
+      tmp = tmp(e+1:end);
+    endif
+  until (isempty (s))
 
-  if (isempty (s))
+  if (! found)
     continue;
   endif
 
-  start_of_first_sentence = e(end);
-
-  tmp = doc(start_of_first_sentence:end);
   end_of_first_sentence = regexp (tmp, '(\.|[\r\n][\r\n])', "once");
   if (isempty (end_of_first_sentence))
     end_of_first_sentence = length (tmp);
   else
     end_of_first_sentence = end_of_first_sentence;
   endif
 
   first_sentence = tmp(1:end_of_first_sentence);
