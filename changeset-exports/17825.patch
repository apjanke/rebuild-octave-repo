# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1383331535 14400
#      Fri Nov 01 14:45:35 2013 -0400
# Node ID 53f433bae63b1f90a0ed80d5924371a4cb662b97
# Parent  86e8dbccf7c7c240905957d879395772e9172909
display (possibly truncated) values of strings in workspace view

* ov-str-mat.h, ov-str-mat.cc (octave_char_matrix_str::short_disp):
New function.

diff --git a/libinterp/octave-value/ov-str-mat.cc b/libinterp/octave-value/ov-str-mat.cc
--- a/libinterp/octave-value/ov-str-mat.cc
+++ b/libinterp/octave-value/ov-str-mat.cc
@@ -265,16 +265,35 @@ octave_char_matrix_str::cellstr_value (v
 void
 octave_char_matrix_str::print_raw (std::ostream& os,
                                    bool pr_as_read_syntax) const
 {
   octave_print_internal (os, matrix, pr_as_read_syntax,
                          current_print_indent_level (), true);
 }
 
+std::string
+octave_char_matrix_str::short_disp (void) const
+{
+  std::string retval;
+
+  if (matrix.ndims () == 2 && numel () > 0)
+    {
+      retval = string_value ();
+
+      // FIXME -- should this be configurable?
+
+      if (retval.length () > 100)
+        retval = retval.substr (0, 100);
+    }
+
+  return retval;
+}
+
+
 bool
 octave_char_matrix_str::save_ascii (std::ostream& os)
 {
   dim_vector d = dims ();
   if (d.length () > 2)
     {
       charNDArray tmp = char_array_value ();
       os << "# ndims: " << d.length () << "\n";
diff --git a/libinterp/octave-value/ov-str-mat.h b/libinterp/octave-value/ov-str-mat.h
--- a/libinterp/octave-value/ov-str-mat.h
+++ b/libinterp/octave-value/ov-str-mat.h
@@ -137,16 +137,18 @@ public:
   octave_value sort (Array<octave_idx_type> &sidx, octave_idx_type dim = 0,
                      sortmode mode = ASCENDING) const
   { return octave_value (matrix.sort (sidx, dim, mode)); }
 
   bool print_as_scalar (void) const { return (rows () <= 1); }
 
   void print_raw (std::ostream& os, bool pr_as_read_syntax = false) const;
 
+  std::string short_disp (void) const;
+
   bool save_ascii (std::ostream& os);
 
   bool load_ascii (std::istream& is);
 
   bool save_binary (std::ostream& os, bool& save_as_floats);
 
   bool load_binary (std::istream& is, bool swap,
                     oct_mach_info::float_format fmt);
