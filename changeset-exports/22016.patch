# HG changeset patch
# User Mike Miller <mtmiller@octave.org>
# Date 1467332889 25200
#      Thu Jun 30 17:28:09 2016 -0700
# Node ID d4ce10f579183e8cca487965641f3484a2e57c8e
# Parent  cb25e0da95419a36a31c07d93d304958511e8b39
Clean up localfunctions BIST test

* help.cc: Delete the right file when test is finished.  Use unwind_protect
block to delete temporary .m file after test completes.

diff --git a/libinterp/corefcn/help.cc b/libinterp/corefcn/help.cc
--- a/libinterp/corefcn/help.cc
+++ b/libinterp/corefcn/help.cc
@@ -1249,26 +1249,30 @@ included in the list.  This is a known i
 
   return ovl (retval);
 }
 
 /*
 %!test
 %! f = tempname (".", "oct_");
 %! fcn_name = f(3:end);
-%! fid = fopen ([f ".m"], "w+");
-%! fprintf (fid, "function z = %s\n z = localfunctions; end\n", fcn_name);
-%! fprintf (fid, "function z = b(x)\n z = x+1; end\n");
-%! fprintf (fid, "function z = c(x)\n z = 2*x; end\n");
-%! fclose (fid);
-%! d = eval (fcn_name);
-%! unlink (f);
-%! assert (size (d), [2, 1]);
-%! assert (d{1}(3), 4);
-%! assert (d{2}(3), 6);
+%! f = [f ".m"];
+%! unwind_protect
+%!   fid = fopen (f, "w+");
+%!   fprintf (fid, "function z = %s\n z = localfunctions; end\n", fcn_name);
+%!   fprintf (fid, "function z = b(x)\n z = x+1; end\n");
+%!   fprintf (fid, "function z = c(x)\n z = 2*x; end\n");
+%!   fclose (fid);
+%!   d = eval (fcn_name);
+%!   assert (size (d), [2, 1]);
+%!   assert (d{1}(3), 4);
+%!   assert (d{2}(3), 6);
+%! unwind_protect_cleanup
+%!   unlink (f);
+%! end_unwind_protect
 */
 
 static std::string
 do_which (const std::string& name, std::string& type)
 {
   std::string file;
 
   type = "";
