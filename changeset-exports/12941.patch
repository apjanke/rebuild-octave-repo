# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1312942566 14400
#      Tue Aug 09 22:16:06 2011 -0400
# Branch stable
# Node ID 9a498efac5f146c62ea44f28a3816b949fd2aca4
# Parent  70e9ffbc4c763574b60c8d145e8250e1966b5b84
use gnulib::fseek and gnulib::fopen

* file-io.cc (do_stream_open): Use gnulib::fopen instead of fopen.
* input.cc (get_input_from_file): Likewise.
* c-file-ptr-stream.h (c_file_ptr_buf::seek):
Use gnulib::fseek instead of fseek.
* bootstrap.conf (gnulib_modules):
Include fopen, fflush, fseek, and ftell in the list.

diff --git a/build-aux/bootstrap.conf b/build-aux/bootstrap.conf
--- a/build-aux/bootstrap.conf
+++ b/build-aux/bootstrap.conf
@@ -20,16 +20,20 @@
 gnulib_modules="
   c-strcase
   copysign
   crypto/md5
   fclose
   fcntl
   filemode
   fnmatch
+  fopen
+  fflush
+  fseek
+  ftell
   getcwd
   gethostname
   getopt-gnu
   gettimeofday
   glob
   link
   lstat
   mkdir
diff --git a/src/c-file-ptr-stream.cc b/src/c-file-ptr-stream.cc
--- a/src/c-file-ptr-stream.cc
+++ b/src/c-file-ptr-stream.cc
@@ -190,19 +190,17 @@ c_file_ptr_buf::buf_close (void)
     }
 
   return retval;
 }
 
 int
 c_file_ptr_buf::seek (long offset, int origin)
 {
-  // gnulib::fseek doesn't seem to work, so don't use it until problem
-  // can be properly diagnosed and fixed.
-  return f ? fseek (f, offset, origin) : -1;
+  return f ? gnulib::fseek (f, offset, origin) : -1;
 }
 
 long
 c_file_ptr_buf::tell (void)
 {
   return f ? gnulib::ftell (f) : -1;
 }
 
diff --git a/src/file-io.cc b/src/file-io.cc
--- a/src/file-io.cc
+++ b/src/file-io.cc
@@ -489,32 +489,32 @@ do_stream_open (const std::string& name,
 
 #if defined (HAVE_ZLIB)
               size_t pos = tmode.find ('z');
 
               if (pos != std::string::npos)
                 {
                   tmode.erase (pos, 1);
 
-                  FILE *fptr = ::fopen (fname.c_str (), tmode.c_str ());
+                  FILE *fptr = gnulib::fopen (fname.c_str (), tmode.c_str ());
 
                   int fd = fileno (fptr);
 
                   gzFile gzf = ::gzdopen (fd, tmode.c_str ());
 
                   if (fptr)
                     retval = octave_zstdiostream::create (fname, gzf, fd,
                                                           md, flt_fmt);
                   else
                     retval.error (gnulib::strerror (errno));
                 }
               else
 #endif
                 {
-                  FILE *fptr = ::fopen (fname.c_str (), tmode.c_str ());
+                  FILE *fptr = gnulib::fopen (fname.c_str (), tmode.c_str ());
 
                   retval = octave_stdiostream::create (fname, fptr, md, flt_fmt);
 
                   if (! fptr)
                     retval.error (gnulib::strerror (errno));
                 }
 
             }
diff --git a/src/input.cc b/src/input.cc
--- a/src/input.cc
+++ b/src/input.cc
@@ -423,17 +423,17 @@ octave_read (char *buf, unsigned max_siz
 // warning if the file doesn't exist.
 
 FILE *
 get_input_from_file (const std::string& name, int warn)
 {
   FILE *instream = 0;
 
   if (name.length () > 0)
-    instream = fopen (name.c_str (), "rb");
+    instream = gnulib::fopen (name.c_str (), "rb");
 
   if (! instream && warn)
     warning ("%s: no such file or directory", name.c_str ());
 
   if (reading_fcn_file || reading_script_file || reading_classdef_file)
     ff_instream = instream;
   else
     command_editor::set_input_stream (instream);
