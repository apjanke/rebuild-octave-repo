# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1279421581 25200
#      Sat Jul 17 19:53:01 2010 -0700
# Node ID 3140cb7a05a1dc71d21f210e40bcc1fe7ef556e1
# Parent  01f1643dfbb13a937f56735b6e8f28a4e6f4afd7
Add spellchecker scripts for Octave and run spellcheck of documentation

interpreter/doccheck: New directory for spelling/grammar scripts.
interpreter/doccheck/README: Instructions for using scripts.
interpreter/doccheck/spellcheck: Script to spellcheck a Texinfo file.
interpreter/doccheck/aspell.conf: GNU Aspell configuration file for
                                  Octave documentation.
interpreter/doccheck/aspell-octave.en.pws: Private Aspell dictionary.
interpreter/doccheck/add_to_aspell_dict: Script to add new
                                         Octave-specific words to
                                         private Aspell dictionary.
interpreter/octave.texi: New @nospell macro which forces Aspell
                         to ignore the word marked by the macro.
interpreter/mk_doc_cache.m: Skip new @nospell macro when building
                            doc_cache.

diff --git a/doc/ChangeLog b/doc/ChangeLog
--- a/doc/ChangeLog
+++ b/doc/ChangeLog
@@ -1,8 +1,38 @@
+2010-07-17  Rik <octave@nomad.inbox5.com>
+
+        * interpreter/doccheck: New directory for spelling/grammar scripts.
+        * interpreter/doccheck/README: Instructions for using scripts.
+        * interpreter/doccheck/spellcheck: Script to spellcheck a Texinfo file.
+        * interpreter/doccheck/aspell.conf: GNU Aspell configuration file for
+        Octave documentation.
+        * interpreter/doccheck/aspell-octave.en.pws: Private Aspell dictionary.
+        * interpreter/doccheck/add_to_aspell_dict: Script to add new 
+        Octave-specific words to private Aspell dictionary.
+        * interpreter/octave.texi: New @nospell macro which forces Aspell to
+          ignore the word marked by the macro.
+        * interpreter/mk_doc_cache.m: Skip new @nospell macro when 
+          building doc_cache.
+        * interpreter/arith.txi, interpreter/audio.txi, 
+          interpreter/bugs.txi, interpreter/contrib.txi, 
+          interpreter/debug.txi, interpreter/diagperm.txi,
+          interpreter/dynamic.txi, interpreter/geometry.txi,
+          interpreter/matrix.txi, interpreter/numbers.txi, 
+          interpreter/oop.txi, interpreter/package.txi,
+          interpreter/sparse.txi, interpreter/tips.txi: 
+          Spellcheck documentation.
+
+          DLD-FUNCTIONS/balance.cc, DLD-FUNCTIONS/ccolamd.cc,
+          DLD-FUNCTIONS/cellfun.cc, DLD-FUNCTIONS/dasrt.cc,
+          DLD-FUNCTIONS/dmperm.cc, DLD-FUNCTIONS/eigs.cc, DLD-FUNCTIONS/qz.cc,
+          DLD-FUNCTIONS/rand.cc, DLD-FUNCTIONS/sparse.cc, 
+          DLD-FUNCTIONS/sqrtm.cc, DLD-FUNCTIONS/symrcm.cc, dirfns.cc,
+          file-io.cc, syscalls.cc
+
 2010-07-01  Rik <octave@nomad.inbox5.com>
 
         * refcard/refcard.tex: Fix italic macro typo for stem.
 
 2010-06-28  Rik <octave@nomad.inbox5.com>
 
         * refcard/refcard.tex: Fix typos in refcard (bug #30260).
 
diff --git a/doc/interpreter/arith.txi b/doc/interpreter/arith.txi
--- a/doc/interpreter/arith.txi
+++ b/doc/interpreter/arith.txi
@@ -143,17 +143,17 @@ angle in degrees.
 @DOCSTRING(asech)
 @DOCSTRING(acsch)
 @DOCSTRING(acoth)
 
 @DOCSTRING(atan2)
 
 Octave provides the following trigonometric functions where angles are
 specified in degrees.  These functions produce true zeros at the appropriate
-intervals rather than the small roundoff error that occurs when using
+intervals rather than the small round-off error that occurs when using
 radians.  For example:
 @example
 @group
 cosd (90)
      @result{} 0
 cos (pi/2)
      @result{} 6.1230e-17
 @end group
diff --git a/doc/interpreter/audio.txi b/doc/interpreter/audio.txi
--- a/doc/interpreter/audio.txi
+++ b/doc/interpreter/audio.txi
@@ -27,17 +27,17 @@ integer number (usually 8 or 16 bits), a
 of such samples.  It can be characterized by three parameters:  the
 sampling rate (measured in samples per second or Hz, e.g., 8000 or
 44100), the number of bits per sample (e.g., 8 or 16), and the number of
 channels (1 for mono, 2 for stereo, etc.).
 
 There are many different formats for representing such data.  Currently,
 only the two most popular, @emph{linear encoding} and @emph{mu-law
 encoding}, are supported by Octave.  There is an excellent FAQ on audio
-formats by Guido van Rossum <guido@@cwi.nl> which can be found at any
+formats by Guido van Rossum @email{guido@@cwi.nl} which can be found at any
 FAQ ftp site, in particular in the directory
 @file{/pub/usenet/news.answers/audio-fmts} of the archive site
 @code{rtfm.mit.edu}.
 
 Octave simply treats audio data as vectors of samples (non-mono data are
 not supported yet).  It is assumed that audio files using linear
 encoding have one of the extensions @file{lin} or @file{raw}, and that
 files holding data in mu-law encoding end in @file{au}, @file{mu}, or
diff --git a/doc/interpreter/bugs.txi b/doc/interpreter/bugs.txi
--- a/doc/interpreter/bugs.txi
+++ b/doc/interpreter/bugs.txi
@@ -265,17 +265,17 @@ incorrect.  For example, "The interprete
 output produced at line 208 is incorrect."
 
 Of course, if the bug is that the interpreter gets a fatal signal, then
 one can't miss it.  But if the bug is incorrect output, we might not
 notice unless it is glaringly wrong.
 
 Even if the problem you experience is a fatal signal, you should still
 say so explicitly.  Suppose something strange is going on, such as, your
-copy of the interpreter is out of synch, or you have encountered a bug
+copy of the interpreter is out of sync, or you have encountered a bug
 in the C library on your system.  Your copy might crash and the copy
 here would not.  If you said to expect a crash, then when the
 interpreter here fails to crash, we would know that the bug was not
 happening.  If you don't say to expect a crash, then we would not know
 whether the bug was happening.  We would not be able to draw any
 conclusion from our observations.
 
 Often the observed symptom is incorrect output when your program is run.
@@ -354,17 +354,17 @@ Don't mix together changes made for diff
 Send them @emph{individually}.
 
 If you make two changes for separate reasons, then we might not want to
 install them both.  We might want to install just one.
 
 @item
 Use @samp{diff -c} to make your diffs.  Diffs without context are hard
 for us to install reliably.  More than that, they make it hard for us to
-study the diffs to decide whether we want to install them.  Unidiff
+study the diffs to decide whether we want to install them.  Unified diff
 format is better than contextless diffs, but not as easy to read as
 @samp{-c} format.
 
 If you have GNU diff, use @samp{diff -cp}, which shows the name of the
 function that each change occurs in.
 
 @item
 Write the change log entries for your changes.
@@ -387,17 +387,17 @@ the change, send us the header line.
 
 @node Service
 @appendixsec How To Get Help with Octave
 @cindex help, where to find
 
 The mailing list @email{help@@octave.org} exists for the discussion of
 matters related to using and installing Octave.  If would like to join
 the discussion, please send a short note to
-@email{help@strong{-request}@@octave.org}.
+@email{help-request@@octave.org}.
 
 @strong{Please do not} send requests to be added or removed from the
 mailing list, or other administrative trivia to the list itself.
 
 If you think you have found a bug in Octave or in the installation
 procedure, however, you should submit a complete bug report to
 the Octave bug tracker at @url{http://bugs.octave.org}.
 But before you submit a bug report, please read
diff --git a/doc/interpreter/contrib.txi b/doc/interpreter/contrib.txi
--- a/doc/interpreter/contrib.txi
+++ b/doc/interpreter/contrib.txi
@@ -302,35 +302,35 @@ standard library.  Use of STL containers
 templates wisely to reduce code duplication.  Avoid comma expressions, labels
 and gotos, and explicit typecasts.  If you need to typecast, use the modern C++
 casting operators.  In functions, try to reduce the number of @code{return}
 statements - use nested @code{if} statements if possible.
 
 @node Other Sources
 @section Other Sources
 Apart from C++ and Octave language (m-files), Octave's sources include files
-written in C, Fortran, M4, perl, unix shell, AWK, texinfo and @TeX{}.  There are
+written in C, Fortran, M4, Perl, Unix shell, AWK, Texinfo and @TeX{}.  There are
 not many rules to follow when using these other languages; some of them are
 summarized below.  In any case, the golden rule is: if you modify a source
 file, try to follow any conventions you can detect in the file or other similar
 files.
 
 For C you should obviously follow all C++ rules that can apply.
 
 If you happen to modify a Fortran file, you should stay within Fortran 77
 with common extensions like @code{END DO}.  Currently, we want all sources
 to be compilable with the f2c and g77 compilers, without special flags if
 possible.  This usually means that non-legacy compilers also accept the sources.
 
-The M4 macro language is mainly used for autoconf configuration files.  You should
+The M4 macro language is mainly used for Autoconf configuration files.  You should
 follow normal M4 rules when contributing to these files.  Some M4 files come
 from external source, namely the Autoconf archive
 @url{http://autoconf-archive.cryp.to}.
 
-If you give a code example in the documentation written in texinfo with the 
+If you give a code example in the documentation written in Texinfo with the 
 @code{@@example} environment, you should be aware that the text within such an 
 environment will not be wrapped.  It is recommended that you keep the lines
 short enough to fit on pages in the generated pdf or ps documents.  Here is a 
 ruler (in an @code{@@example} environment) for finding the appropriate line 
 width:
 
 @example
 @group
diff --git a/doc/interpreter/debug.txi b/doc/interpreter/debug.txi
--- a/doc/interpreter/debug.txi
+++ b/doc/interpreter/debug.txi
@@ -50,17 +50,17 @@ the functions @code{debug_on_interrupt},
 
 @DOCSTRING(debug_on_interrupt)
 
 @DOCSTRING(debug_on_warning)
 
 @DOCSTRING(debug_on_error)
 
 @node Leaving Debug Mode
-@section Leavinging Debug Mode
+@section Leaving Debug Mode
 
 To leave the debug mode, use either @code{dbcont} 
 or @code{return}.
 
 @DOCSTRING(dbcont)
 
 To quit debug mode and return directly to the prompt @code{dbquit}
 should be used instead
diff --git a/doc/interpreter/diagperm.txi b/doc/interpreter/diagperm.txi
--- a/doc/interpreter/diagperm.txi
+++ b/doc/interpreter/diagperm.txi
@@ -34,17 +34,17 @@ A diagonal matrix is defined as a matrix
 that is, 
 @tex
 $D_{ij} = 0$ if $i \neq j$
 @end tex
 @ifnottex
 @code{D(i,j) == 0} if @code{i != j}.
 @end ifnottex
 Most often, square diagonal matrices are considered; however, the definition can equally
-be applied to nonsquare matrices, in which case we usually speak of a rectangular diagonal 
+be applied to non-square matrices, in which case we usually speak of a rectangular diagonal 
 matrix.
 
 A permutation matrix is defined as a square matrix that has a single element equal to unity
 in each row and each column; all other elements are zero.  That is, there exists a 
 permutation (vector) 
 @tex
 $p$ such that $P_{ij}=1$ if $j = p_i$ and
 $P_{ij}=0$ otherwise.  
@@ -238,17 +238,17 @@ then @code{D*M} is equivalent to
 @example
 [D(1:n,n) * M; zeros(m-n, columns (M))],
 @end example
 i.e., null rows are appended to the result.
 The situation for right-multiplication @code{M*D} is analogous.
 
 The expressions @code{D \ M} and @code{M / D} perform inverse scaling.
 They are equivalent to solving a diagonal (or rectangular diagonal)
-in a least-squares minimum-norm sense.  In exact arithmetics, this is
+in a least-squares minimum-norm sense.  In exact arithmetic, this is
 equivalent to multiplying by a pseudoinverse.  The pseudoinverse of
 a rectangular diagonal matrix is again a rectangular diagonal matrix
 with swapped dimensions, where each nonzero diagonal element is replaced
 by its reciprocal.
 The matrix division algorithms do, in fact, use division rather than 
 multiplication by reciprocals for better numerical accuracy; otherwise, they
 honor the above definition.  Note that a diagonal matrix is never truncated due
 to ill-conditioning; otherwise, it would not be much useful for scaling.  This
diff --git a/doc/interpreter/doccheck/README b/doc/interpreter/doccheck/README
new file mode 100644
--- /dev/null
+++ b/doc/interpreter/doccheck/README
@@ -0,0 +1,76 @@
+################################################################################
+                                   README
+                             doccheck directory
+################################################################################
+This directory contains scripts and data for validating Octave's Texinfo
+documentation.  These scripts are internal developer tools for ensuring 
+consistent documentation formats and avoiding misspellings.
+
+The scripts provide two services:
+
+1) A spellchecker, built atop GNU Aspell with a private dictionary of keywords
+   specific to Octave.
+
+2) A grammarchecker designed from scratch in Perl to ensure a common format
+   for Octave documentation and make use of as many features of Texinfo as 
+   possible.
+
+
+################################################################################
+                                   FILES
+################################################################################
+spellcheck : script to spellcheck a single .texi file.
+aspell.conf: Octave-specific configuration file for Aspell.
+aspell-octave.en.pws : private dictionary of Octave keywords for Aspell.
+add_to_aspell_dict : script to add new words to the private Octave dictionary.
+
+grammarcheck : Perl script to check Octave Texinfo documentation in a single
+               m-file(.m), C++ file(.cc), or Texinfo file(.txi, .texi).
+
+################################################################################
+                                   USAGE
+################################################################################
+
+SPELLING:
+
+From the doc/interpreter/ directory, type 'doccheck/spellcheck FILENAME.texi'.
+This will produce a list of misspelled words on stdout.
+
++Sample Flow
+
+cd doc/interpreter
+doccheck/spellcheck arith.texi > misspellings
+vi arith.texi
+vi misspellings
+....
+  Review misspellings and identify where to correct the source (.m, .cc, .txi)
+  The original source file is marked with a comment: '@c SRC_DIR/SRC_FILE'
+  When there is no source file comment, the source file is the .txi source.
+  Make corrections to source files, *not* arith.texi which is derived.
+....
+cd ../../  # top-level of Octave development tree
+make       # propagate changes to arith.texi
+  repeat spellcheck until the words that remain are not misspellings.
+
++Special Cases
+
+Any words remaining after all misspellings have been corrected are
+Octave-specific spellings and should be added to the Octave private dictionary.
+
+doccheck/add_to_aspell_dict misspellings
+
+Words which are misspellings, but which can't be changed in the original
+source, should be marked with the @nospell{WORD} macro.  This will cause Aspell
+to ignore this particular instance of the word.
+
+For example, in linalg.texi there is a citation of a paper from the
+Manchester Centre for Computational Mathematics.  The proper spelling of Centre
+in the en_US locale is Center.  This word is not an Octave-specific exception
+which can be added to the private dictionary.  Instead the source is marked up:
+Manchester @nospell{Centre} for Computational Mathematics.
+
+Now Aspell no longer reports any misspellings for linalg.texi.
+
+GRAMMAR:
+
+To be added
diff --git a/doc/interpreter/doccheck/add_to_aspell_dict b/doc/interpreter/doccheck/add_to_aspell_dict
new file mode 100755
--- /dev/null
+++ b/doc/interpreter/doccheck/add_to_aspell_dict
@@ -0,0 +1,44 @@
+#!/usr/bin/perl -w
+
+################################################################################
+# File   : add_to_aspell_dict
+# Purpose: Merges a file of new words into an existing dictionary file.
+#          The resulting file is uniquified and sorted before being written out.
+# Usage  : add_to_aspell_dict <filename_of_new_words>
+################################################################################
+# Initialize variables
+# Private Octave dictionary for Aspell
+$octdict_fname = './doccheck/aspell-octave.en.pws';
+
+################################################################################
+# Parse command line arguments
+if (@ARGV != 1)
+{
+   die "USAGE: add_to_aspell_dict <filename_of_new_words>\n";
+}
+
+$new_words_fname = shift(@ARGV);
+if (!-r $new_words_fname)
+{
+	die "Unable to read input file: $new_words_fname\n";
+}
+
+################################################################################
+# Add new words to a dictionary database
+open (FH, "<$new_words_fname") or die "Unable to open file: $new_words_fname\n";
+while (<FH>) { $dict_db{$_} = 1; }
+close (FH);
+
+# Add words from existing dictionary to dictionary database
+open (FH, "<$octdict_fname") or die "Unable to open Octave dictionary: $octdict_fname\n";
+$header = <FH>;
+while (<FH>) { $dict_db{$_} = 1; }
+close (FH);
+
+# Remove old dictionary file and write out new one
+unlink ($octdict_fname) or die "Unable to delete Octave dictionary: $octdict_fname\n";
+open (FH, ">$octdict_fname") or die "Unable to open file for writing: $octdict_fname\n";
+print FH $header;
+print FH sort keys(%dict_db);
+close (FH);
+
diff --git a/doc/interpreter/doccheck/aspell-octave.en.pws b/doc/interpreter/doccheck/aspell-octave.en.pws
new file mode 100644
--- /dev/null
+++ b/doc/interpreter/doccheck/aspell-octave.en.pws
@@ -0,0 +1,776 @@
+personal_ws-1.1 en 1
+ACM
+AIX
+API
+ARMA
+AWK
+Abramowitz
+Acknowledgements
+Affero
+Ahalt
+Alamos
+Ashok
+Attr
+AutoCAD
+Autoconf
+Autoload
+Autoloading
+BDF
+BFGS
+BV
+BZ
+Backends
+Bateman
+Bilbert
+Biomathematics
+Blackman
+Brenan
+Brockwell
+ButtonDownFcn
+CCR
+CCS
+CDF
+CMatrix
+CPLEX
+CTS
+CallbackObject
+ChangeLog
+Chaves
+Cholesky
+Comint
+Commandline
+Corel
+CorelDraw
+CreateFcn
+Cuthill
+Cygwin
+DAE
+DMS
+Delaunay
+DeleteFcn
+Demmel
+DeskJet
+Dn
+Dobkin
+Downarrow
+Driebeck
+Dt
+Dulmage
+Durbin
+EIDORS
+EOF
+EOS
+EastOutside
+Ekerdt
+Elfers
+Endian
+Engle's
+ErrorHandler
+Errorbar
+Errorbars
+Esmond
+Executables
+FFT
+FFTs
+FG
+FIRfilter
+FIXME
+FSF
+Filesystem
+FlashPix
+Fortran
+FreeBSD
+Frobenius
+GECOS
+GEP
+GIF
+GLS
+GPL
+Gautschi
+Ghostscript
+Gnuplot
+Golub
+Goto
+Graz
+HDF
+HH
+HSV
+Hackbusch
+Hadamard
+Haddad
+Hankel
+Hanning
+Hauberg
+Helvetica
+Hermitian
+Hessenberg
+Higham
+Hindmarsh
+Hindmarsh's
+Hodel
+Horner's
+Hudak
+Huhdanpaa
+IEEE
+IIP
+Im
+Imenu
+Indices
+Inline
+JPEG
+Jacobian
+Konrod
+Krishnamurthy
+Krylov
+LM
+LabelSpacing
+Lanzcos
+Larimore
+LaserJet
+Leftarrow
+Leftrightarrow
+Lehoucq
+Levinson
+Liu
+Lobatto
+Lookup
+Los
+Lovato
+Lua
+MIP
+MMM
+Magnus
+Mandriva
+Marsaglia
+Maschhoff
+Matsumoto
+MaxIntervalCount
+Mendelsohn
+Mersenne
+Metafile
+Metafont
+Michelsen
+Microsystems
+Misra
+Moler
+Montanet
+Multi
+MxN
+MxNx
+NLP
+NTSC
+NaN
+NeXT
+Neudecker
+Neumann
+Ng
+Nishimura
+NorthOutside
+Nx
+OLS
+OpenGL
+Oppenheim
+OutputFcn
+PBM
+PBMplus
+PCG
+PCX
+PDF
+PHP
+PNG
+POSIX
+PWS
+Petzold's
+PointJet
+PostScript
+Pothen
+Prepend
+Pseudospectra
+QP
+QQ
+QZ
+Qci
+Qhull
+Quickhull
+RET
+RGB
+RMS
+RPMs
+Rajamanickam
+Rawlings
+Readline
+Reindent
+Resize
+Riccati
+Rightarrow
+Rosser
+Rossum
+SCO
+SIGNUM
+SIMAX
+SPARSKIT
+STFT
+STL
+SV
+SVD
+SVG
+SYMAMD
+Saad
+Sandia
+Schafer
+Schur
+Sep
+Shampine
+Sorensen
+SouthOutside
+Stadlober
+Stallman
+Startup
+Stegun
+Stepleman
+Subfunction
+Subfunctions
+Sublicensing
+Subprocesses
+Subscripted
+SunOS
+SwitzerlandLight
+Sym
+Tcv
+Texinfo
+TikZ
+Tikhonov
+Tisseur
+Tisseur's
+Toeplitz
+TolF
+TolFun
+TolX
+Tsang
+UB
+UID
+Ultrix
+Unary
+Uncomments
+UniformOutput
+Uninstall
+Uparrow
+Username
+Vandermonde
+Vectorize
+Villadsen
+Voronoi
+WIPO
+WestOutside
+Whitespace
+Wikipedia
+Wildcards
+WinRand
+XFig
+YY
+YYYY
+Zechner
+Ziggurat
+accumarray
+acknowledgements
+adams
+aifm
+al
+aleph
+amd
+arpack
+async
+atan
+autocorrelations
+autocovariances
+autoload
+autoloaded
+autoloading
+autoregression
+autoregressions
+autoscaled
+backend
+backends
+bdf
+bigtriangledown
+bincoeff
+bitmax
+bitwise
+blas
+bof
+boolMatrix
+boolean
+boxerrorbars
+boxoff
+boxon
+boxxyerrorbars
+bracketx
+brackety
+breakpoint
+builtin
+builtins
+bz
+bzip
+cURL
+callee's
+caxis
+ccolamd
+cd
+cdata
+cdot
+ceil
+cellstr
+changeset
+changesets
+chdir
+chisq
+chisquare
+chol
+cindex
+circ
+circshift
+circum
+clim
+clubsuit
+cmd
+cmember
+cof
+colamd
+colorbar
+colormap
+colperm
+cond
+condest
+conformant
+cong
+const
+constuctors
+contextless
+contourc
+convhull
+cosecant
+courseware
+cov
+csymamd
+ctranspose
+dMatrix
+dOmega
+datasets
+datasource
+davis
+ddd
+dddd
+dddddddddd
+deallocate
+deallocated
+deconv
+deftypefn
+delaunay
+delaunayn
+delim
+demi
+det
+diag
+diamondsuit
+dir
+disp
+dmperm
+dotall
+dotexceptnewline
+downarrow
+downdate
+dpi
+dt
+dx
+dy
+eigenpairs
+eigenvector
+eigenvectors
+eigs
+elseif
+emacs
+endfunction
+endian
+endif
+eof
+eps
+eq
+equidistributed
+equispaced
+erf
+errno
+errorbar
+errorbars
+et
+etree
+etreeplot
+eval
+exitflag
+extendedtext
+facevertexcdata
+femmodel
+fft
+fftn
+fftpack
+fftw
+fieldname
+fieldnames
+filename
+filenames
+fontname
+forall
+formfeed
+fprintf
+freespacing
+frob
+gcbo
+ge
+genvarname
+geq
+glibc
+globbing
+gnuplot
+gnuplot's
+goto
+gotos
+gplot
+grabdemo
+griddata
+gswin
+gunzipped
+gz
+gzip
+gzipped
+hardcode
+heartsuit
+heteroscedascity
+hggroup
+hh
+holomorphic
+horzcat
+iff
+ifft
+ifftn
+ignorecase
+ij
+imag
+indices
+infty
+init
+inline
+inpolygon
+interp
+interpderiv
+interpft
+interpn
+interpolant
+inv
+ipermute
+ishandle
+ishghandle
+isolines
+isreal
+issparse
+isvector
+ith
+iy
+ji
+keybindings
+keypress
+kron
+langle
+lapack
+lceil
+ldiv
+ldivide
+ldots
+le
+leftarrow
+leftrightarrow
+leq
+lfloor
+li
+libcruft
+libcurl
+liboctave
+licensors
+lineanchors
+linefeeds
+linesearch
+linespoints
+linkprop
+literalspacing
+lm
+loadpath
+lookup
+lookups
+lpx
+lr
+lsode
+lt
+lu
+luinc
+lvalue
+lvl
+lx
+ly
+lz
+makefile
+makefiles
+matchcase
+matlab
+maxima
+meshgrid
+meshgridded
+metafiles
+mex
+minima
+minval
+mkoctfile
+mldivide
+mmd
+mmm
+mmmm
+mmmyy
+mmmyyyy
+modelled
+mpoles
+mpower
+mrdivide
+mtimes
+multi
+multibyte
+multiline
+mxArray
+myclass
+nabla
+nargin
+nd
+ndgrid
+ne
+neq
+nfev
+ni
+nnls
+nnz
+nocompute
+noncommercially
+nonzeros
+normest
+notin
+nul
+nzmax
+oct
+octaverc
+online
+oplus
+oregonator
+oslash
+otimes
+outputfcn
+paperposition
+papersize
+parseparams
+pcg
+pchip
+pcr
+pdf
+periodogram
+perp
+pinv
+polyderiv
+polyfit
+polyval
+postorder
+pre
+preconditioner
+premultiplied
+prepended
+presolver
+printf
+priori
+propto
+proven
+ps
+pseudoinverse
+pseudonorm
+pseudorandom
+ptrace
+qhull
+qz
+radices
+randn
+randperm
+rangle
+rceil
+rdivide
+readline
+recursing
+regressor
+relicensing
+ren
+repmat
+resampled
+resampling
+resize
+resized
+resnorm
+resparsify
+rfloor
+rightarrow
+rline
+sB
+sa
+screenful
+se
+seealso
+semidefinite
+shiftdim
+si
+signum
+sim
+simplechol
+simplecholperm
+simplematrix
+simplices
+sinetone
+sm
+sp
+spadesuit
+spalloc
+spaugment
+spchol
+spcholperm
+spconvert
+spdiags
+speye
+spfun
+spmatrix
+spones
+spparms
+sprand
+sprandn
+sprandsym
+sprank
+spstats
+sqrt
+sqrtm
+sr
+ss
+stairstep
+startup
+stepsize
+strcmp
+stringanchors
+strncmp
+strncmpi
+struct
+structs
+subarrays
+subdirectories
+subdirectory
+subexpressions
+subfunction
+subfunctions
+subinterval
+sublicenses
+submatrices
+submatrix
+subprocess
+subprocesses
+subsasgn
+subscripted
+subscripting
+subseteq
+subsindex
+subsref
+substring
+substrings
+superiorto
+supradiagonal
+supset
+supseteq
+svd
+svds
+sym
+symamd
+symbfact
+symrcm
+terminal's
+tex
+th
+ths
+tokenExtents
+tp
+traceback
+treelayout
+treeplot
+tridiagonal
+triplot
+tuples
+txi
+typedefs
+ub
+uint
+umfpack
+uminus
+un
+unary
+uncomment
+unformatted
+unimodal
+uninstalled
+univariate
+unnormalized
+unpadded
+unpivoted
+unshare
+unsymmetric
+uparrow
+uplus
+userdata
+variable's
+varphi
+varpi
+varsigma
+vartheta
+vec
+vech
+vectorize
+vectorizing
+vee
+versa
+vertcat
+vertices
+voronoi
+whitespace
+whos
+wildcard
+wildcards
+wp
+xGBTRF
+xGELSD
+xGETRF
+xGTSV
+xN
+xPBTRF
+xPOTRF
+xPTSV
+xTRTRS
+xb
+xerrorbar
+xerrorbars
+xl
+xmin
+xu
+xy
+xyerrorbar
+xyerrorbars
+yerrorbar
+yerrorbars
+yy
+yyyy
+yyyymmdd
+yyyymmddTHHMMSS
+zer
+zlib
diff --git a/doc/interpreter/doccheck/aspell.conf b/doc/interpreter/doccheck/aspell.conf
new file mode 100644
--- /dev/null
+++ b/doc/interpreter/doccheck/aspell.conf
@@ -0,0 +1,15 @@
+lang en_US
+mode texinfo
+add-filter tex
+add-texinfo-ignore  set
+add-texinfo-ignore  ifclear
+add-texinfo-ignore  ifset
+add-texinfo-ignore  macro
+add-texinfo-ignore  include
+add-texinfo-ignore  anchor
+add-texinfo-ignore  deftypefn
+add-texinfo-ignore  deftypefnx
+add-texinfo-ignore  printindex
+add-texinfo-ignore  multitable
+add-texinfo-ignore  nospell
+personal ./doccheck/aspell-octave.en.pws
diff --git a/doc/interpreter/doccheck/spellcheck b/doc/interpreter/doccheck/spellcheck
new file mode 100755
--- /dev/null
+++ b/doc/interpreter/doccheck/spellcheck
@@ -0,0 +1,46 @@
+#!/usr/bin/perl -w
+
+################################################################################
+# File   : spellcheck
+# Purpose: Spellcheck a single Texinfo file
+#          written in Perl, rather than the shell, to be more portable to OS 
+#          without good command lines such as Windows.
+# Usage  : spellcheck FILENAME.texi
+################################################################################
+use File::Temp ":POSIX";
+
+# Initialize variables
+# Octave specific configuration file for Aspell
+$aspell_conf = './doccheck/aspell.conf';
+
+################################################################################
+# Parse command line arguments
+if (@ARGV != 1)
+{
+   die ("USAGE: spellcheck <filename.texi>\n",
+        "       invoked from doc/interpreter directory\n");
+}
+
+################################################################################
+# Run Aspell with Octave-specific configuration file.
+# Avoid use of pipes and use temporary files for portability
+$fname = shift(@ARGV);
+$tmp_fname = &tmpnam();  # from File::Temp
+system ("aspell --conf=$aspell_conf list < $fname > $tmp_fname");
+
+if ($?)
+{
+   unlink ($tmp_fname);
+   die ("Aspell command unsuccesful.  Cannot continue\n");
+}
+
+open (FH, "<$tmp_fname") or die "Unable to open misspelled words file: $tmp_fname\n";
+while (<FH>) { $words{$_} = 1; }
+close (FH);
+
+# Print out sorted and uniquified list of misspelled words
+print sort keys(%words);
+
+################################################################################
+# Clean up temporary files
+unlink ($tmp_fname) or die "Unable to delete temporary file: $tmp_fname\n";
diff --git a/doc/interpreter/dynamic.txi b/doc/interpreter/dynamic.txi
--- a/doc/interpreter/dynamic.txi
+++ b/doc/interpreter/dynamic.txi
@@ -245,17 +245,17 @@ matrix or array to be read or set.  Thes
 which is of type @code{octave_idx_type}, that is the index into the matrix or
 array.  Additionally, the matrix type allows two argument versions of the
 @code{()} operator and elem method, giving the row and column index of the
 value to obtain or set.
 @end deftypefn
 
 Note that these functions do significant error checking and so in some
 circumstances the user might prefer to access the data of the array or
-matrix directly through the fortran_vec method discussed below.
+matrix directly through the @nospell{fortran_vec} method discussed below.
 
 @deftypefn Method octave_idx_type nelem (void) const
 The total number of elements in the matrix or array.
 @end deftypefn
 
 @deftypefn Method size_t byte_size (void) const
 The number of bytes used to store the matrix or array.
 @end deftypefn
@@ -573,17 +573,17 @@ const SparseMatrix tmp (sm);
 for (int j = 0; j < nc; j++)
   for (int i = 0; i < nr; i++)
     std::cerr << " (" << i << "," << j << "): " << tmp(i,j)
               << std::endl;
 @end group
 @end example
 
 Finally, as the sparse types aren't just represented as a contiguous
-block of memory, the @code{fortran_vec} method of the @code{Array<T>}
+block of memory, the @nospell{@code{fortran_vec}} method of the @code{Array<T>}
 is not available.  It is however replaced by three separate methods
 @code{ridx}, @code{cidx} and @code{data}, that access the raw compressed
 column format that the Octave sparse matrices are stored in.
 Additionally, these methods can be used in a manner similar to @code{elem},
 to allow the matrix to be accessed or filled.  However, in that case it is
 up to the user to respect the sparse matrix compressed column format
 discussed previous.
 
@@ -703,17 +703,17 @@ the use of @dfn{maybe_compress} is
 
 The use of the @dfn{maybe_compress} function should be avoided if
 possible, as it will slow the creation of the matrices.
 
 A third means of creating a sparse matrix is to work directly with
 the data in compressed row format.  An example of this technique might
 be
 
-@c Note the @verbatim environment is a relatively new addition to texinfo.
+@c Note the @verbatim environment is a relatively new addition to Texinfo.
 @c Therefore use the @example environment and replace @, with @@,
 @c { with @{, etc
 
 @example
 octave_value arg;
 @dots{}
 int nz = 6, nr = 3, nc = 4;   // Assume we know the max no nz
 SparseMatrix sm (nr, nc, nz);
@@ -937,22 +937,22 @@ extern "C"
 
 Calling Fortran code however can pose some difficulties.  This is due to
 differences in the manner in compilers treat the linking of Fortran code
 with C or C++ code.  Octave supplies a number of macros that allow
 consistent behavior across a number of compilers.
 
 The underlying Fortran code should use the @code{XSTOPX} function to
 replace the Fortran @code{STOP} function.  @code{XSTOPX} uses the Octave
-exception handler to treat failing cases in the fortran code
+exception handler to treat failing cases in the Fortran code
 explicitly.  Note that Octave supplies its own replacement @sc{blas}
 @code{XERBLA} function, which uses @code{XSTOPX}.
 
 If the underlying code calls @code{XSTOPX}, then the @w{@code{F77_XFCN}}
-macro should be used to call the underlying fortran function.  The Fortran
+macro should be used to call the underlying Fortran function.  The Fortran
 exception state can then be checked with the global variable
 @code{f77_exception_encountered}.  If @code{XSTOPX} will not be called,
 then the @w{@code{F77_FCN}} macro should be used instead to call the Fortran
 code.
 
 There is no harm in using @w{@code{F77_XFCN}} in all cases, except that for
 Fortran code that is short running and executes a large number of times,
 there is potentially an overhead in doing so.  However, if @w{@code{F77_FCN}}
@@ -962,17 +962,17 @@ segmentation fault.
 An example of the inclusion of a Fortran function in an oct-file is
 given in the following example, where the C++ wrapper is
 
 @example
 @EXAMPLEFILE(fortdemo.cc)
 @end example
 
 @noindent
-and the fortran function is
+and the Fortran function is
 
 @example
 @EXAMPLEFILE(fortsub.f)
 @end example
 
 This example demonstrates most of the features needed to link to an
 external Fortran function, including passing arrays and strings, as well
 as exception handling.  An example of the behavior of this function is
@@ -981,17 +981,17 @@ as exception handling.  An example of th
 @group
 [b, s] = fortdemo (1:3)
 @result{}
   b = 1.00000   0.50000   0.33333
   s = There are   3 values in the input vector
 [b, s] = fortdemo(0:3)
 error: fortsub:divide by zero
 error: exception encountered in Fortran subroutine fortsub_
-error: fortdemo: error in fortran
+error: fortdemo: error in Fortran
 @end group
 @end example
 
 @node Allocating Local Memory in Oct-Files
 @subsection Allocating Local Memory in Oct-Files
 
 Allocating memory within an oct-file might seem easy as the C++
 new/delete operators can be used.  However, in that case care must be
@@ -1086,17 +1086,17 @@ BEGIN_INTERRUPT_IMMEDIATELY_IN_FOREIGN_C
 END_INTERRUPT_IMMEDIATELY_IN_FOREIGN_CODE;
 @end group
 @end example
 
 The disadvantage of this is that if the foreign code allocates any
 memory internally, then this memory might be lost during an interrupt,
 without being deallocated.  Therefore, ideally Octave itself should
 allocate any memory that is needed by the foreign code, with either the
-fortran_vec method or the @w{@code{OCTAVE_LOCAL_BUFFER}} macro.
+@nospell{fortran_vec} method or the @w{@code{OCTAVE_LOCAL_BUFFER}} macro.
 
 The Octave unwind_protect mechanism (@ref{The @code{unwind_protect} Statement})
 can also be used in oct-files.  In conjunction with the exception
 handling of Octave, it is important to enforce that certain code is run
 to allow variables, etc. to be restored even if an exception occurs.  An
 example of the use of this mechanism is
 
 @example
diff --git a/doc/interpreter/geometry.txi b/doc/interpreter/geometry.txi
--- a/doc/interpreter/geometry.txi
+++ b/doc/interpreter/geometry.txi
@@ -16,17 +16,17 @@
 @c along with Octave; see the file COPYING.  If not, see
 @c <http://www.gnu.org/licenses/>.
 
 @node Geometry
 @chapter Geometry
 
 Much of the geometry code in Octave is based on the Qhull 
 library@footnote{Barber, C.B., Dobkin, D.P., and Huhdanpaa, H.T., 
-"The Quickhull algorithm for convex hulls," ACM Trans. on Mathematical 
+@cite{The Quickhull Algorithm for Convex Hulls}, ACM Trans. on Mathematical 
 Software, 22(4):469--483, Dec 1996, @url{http://www.qhull.org}}.  
 Some of the documentation for Qhull, particularly for the options that 
 can be passed to @code{delaunay}, @code{voronoi} and @code{convhull}, 
 etc., is relevant to Octave users.
 
 @menu
 * Delaunay Triangulation::
 * Voronoi Diagrams::
@@ -277,17 +277,17 @@ where the point outside the tessellation
 
 A Voronoi diagram or Voronoi tessellation of a set of points @var{s} in
 an N-dimensional space, is the tessellation of the N-dimensional space
 such that all points in @code{@var{v}(@var{p})}, a partitions of the
 tessellation where @var{p} is a member of @var{s}, are closer to @var{p}
 than any other point in @var{s}.  The Voronoi diagram is related to the
 Delaunay triangulation of a set of points, in that the vertexes of the
 Voronoi tessellation are the centers of the circum-circles of the
-simplicies of the Delaunay tessellation. 
+simplices of the Delaunay tessellation. 
 
 @DOCSTRING(voronoi)
 
 @DOCSTRING(voronoin)
 
 An example of the use of @code{voronoi} is
 
 @example
@@ -407,18 +407,18 @@ The output of the above can be seen in @
 
 @node Interpolation on Scattered Data
 @section Interpolation on Scattered Data
 
 An important use of the Delaunay tessellation is that it can be used to
 interpolate from scattered data to an arbitrary set of points.  To do
 this the N-simplex of the known set of points is calculated with
 @code{delaunay}, @code{delaunay3} or @code{delaunayn}.  Then the
-simplicies in to which the desired points are found are
-identified.  Finally the vertices of the simplicies are used to
+simplices in to which the desired points are found are
+identified.  Finally the vertices of the simplices are used to
 interpolate to the desired points.  The functions that perform this
 interpolation are @code{griddata}, @code{griddata3} and
 @code{griddatan}.
 
 @DOCSTRING(griddata)
 
 @DOCSTRING(griddata3)
 
diff --git a/doc/interpreter/matrix.txi b/doc/interpreter/matrix.txi
--- a/doc/interpreter/matrix.txi
+++ b/doc/interpreter/matrix.txi
@@ -231,17 +231,17 @@ Octave.@footnote{The old versions of @co
 obtain their initial seeds from the system clock.} If you really do
 need to reproduce a sequence of numbers exactly, you can set the state
 or seed to a specific value.
 
 If invoked without arguments, @code{rand} and @code{randn} return a
 single element of a random sequence.
 
 The original @code{rand} and @code{randn} functions use Fortran code from
-@sc{Ranlib}, a library of fortran routines for random number generation,
+@sc{Ranlib}, a library of Fortran routines for random number generation,
 compiled by Barry W. Brown and James Lovato of the Department of
 Biomathematics at The University of Texas, M.D. Anderson Cancer Center,
 Houston, TX 77030.
 
 @DOCSTRING(randperm)
 
 The functions @code{linspace} and @code{logspace} make it very easy to
 create vectors with evenly or logarithmically spaced elements.
diff --git a/doc/interpreter/mk_doc_cache.m b/doc/interpreter/mk_doc_cache.m
--- a/doc/interpreter/mk_doc_cache.m
+++ b/doc/interpreter/mk_doc_cache.m
@@ -53,16 +53,17 @@ for i = 1:nfiles
     tmp = fread (fid, Inf, "*char")';
     delim_idx = find (tmp == doc_delim, 1);
     text{i} = tmp(delim_idx:end);
   endif
 endfor
 text = [text{:}, doc_delim];
 
 text = regexprep (text, "@seealso *{([^}]*)}", "See also: $1.");
+text = regexprep (text, "@nospell *{([^}]*)}", "$1");
 text = regexprep (text, "-\\*- texinfo -\\*-[ \t]*[\r\n]*", "");
 text = regexprep (text, "@", "@@");
 
 [fid, name, msg] = mkstemp ("octave_doc_XXXXXX", true);
 
 if (fid < 0)
   error ("%s: %s\n", name, msg);
 endif
diff --git a/doc/interpreter/numbers.txi b/doc/interpreter/numbers.txi
--- a/doc/interpreter/numbers.txi
+++ b/doc/interpreter/numbers.txi
@@ -298,17 +298,17 @@ easily be misinterpreted.
 @menu
 * Empty Matrices::              
 @end menu
 
 @node Empty Matrices
 @subsection Empty Matrices
 
 A matrix may have one or both dimensions zero, and operations on empty
-matrices are handled as described by Carl de Boor in @cite{An Empty
+matrices are handled as described by Carl @nospell{de} Boor in @cite{An Empty
 Exercise}, SIGNUM, Volume 25, pages 2-6, 1990 and C. N. Nett and W. M.
 Haddad, in @cite{A System-Theoretic Appropriate Realization of the Empty
 Matrix Concept}, IEEE Transactions on Automatic Control, Volume 38,
 Number 5, May 1993.
 @tex
 Briefly, given a scalar $s$, an $m\times n$ matrix $M_{m\times n}$,
 and an $m\times n$ empty matrix $[\,]_{m\times n}$ (with either one or
 both dimensions equal to zero), the following are true:
diff --git a/doc/interpreter/octave.texi b/doc/interpreter/octave.texi
--- a/doc/interpreter/octave.texi
+++ b/doc/interpreter/octave.texi
@@ -34,16 +34,24 @@
 @c A simple blank line produces the correct behavior. 
 @c @sp 1
 
 @end ifnottex
 @noindent
 @strong{See also:} \args\.
 @end macro
 
+@c The following macro marks words that aspell should ignore during
+@c spellchecking.  Within Texinfo it has no effect as it merely replaces
+@c the macro call with the argument itself.
+
+@macro nospell {arg}
+\arg\
+@end macro
+
 @ifinfo
 @format
 START-INFO-DIR-ENTRY
 * Octave: (octave).           Interactive language for numerical computations.
 
 END-INFO-DIR-ENTRY
 @end format
 @end ifinfo
@@ -538,17 +546,17 @@ Object Groups
 * Error bar series::            
 * Line series::                 
 * Quiver group::                
 * Scatter group::               
 * Stair group::                 
 * Stem Series::                 
 * Surface group::               
 
-Graphics backends
+Graphics Backends
 
 * Interaction with gnuplot::
 
 Matrix Manipulation
 
 * Finding Elements and Checking Conditions::  
 * Rearranging Matrices::        
 * Applying a Function to an Array::
diff --git a/doc/interpreter/oop.txi b/doc/interpreter/oop.txi
--- a/doc/interpreter/oop.txi
+++ b/doc/interpreter/oop.txi
@@ -727,17 +727,17 @@ The "." case allows us to view the conte
 octave:1> f=FIRfilter(polynomial([1 1 1]/3));
 octave:2> f.polynomial
 ans = 0.333333 + 0.333333 * X + 0.333333 * X ^ 2
 @end group
 @end example
 
 In order to change the contents of the object, we need to define a
 @code{subsasgn} method.  For example, we may make the polynomial field
-publicly writeable.
+publicly writable.
 
 @example
 @group
 @EXAMPLEFILE(@FIRfilter/subsasgn.m)
 @end group
 @end example
 
 So that
diff --git a/doc/interpreter/package.txi b/doc/interpreter/package.txi
--- a/doc/interpreter/package.txi
+++ b/doc/interpreter/package.txi
@@ -462,18 +462,18 @@ pointing out that the function is availa
 
 @example
 fn = workaround description
 @end example
 
 @noindent
 This workaround description will not appear when listing functions in the 
 package with @code{pkg describe} but they will be published
-in the html documentation online.
-Workaround descriptions can use any html markup, but
+in the HTML documentation online.
+Workaround descriptions can use any HTML markup, but
 keep in mind that it will be enclosed in a bold-italic environment.  
 For the special case of:
 
 @example
 fn = use <code>alternate expression</code>
 @end example
 
 @noindent
diff --git a/doc/interpreter/sparse.txi b/doc/interpreter/sparse.txi
--- a/doc/interpreter/sparse.txi
+++ b/doc/interpreter/sparse.txi
@@ -70,17 +70,17 @@ sparse matrices are stored.  However, su
 to get an understanding of the size of sparse matrices.  Understanding
 the storage technique is also necessary for those users wishing to 
 create their own oct-files. 
 
 There are many different means of storing sparse matrix data.  What all
 of the methods have in common is that they attempt to reduce the complexity
 and storage given a-priori knowledge of the particular class of problems
 that will be solved.  A good summary of the available techniques for storing
-sparse matrix is given by Saad @footnote{Youcef Saad "SPARSKIT: A basic toolkit
+sparse matrix is given by Saad @footnote{Y. Saad "SPARSKIT: A basic toolkit
 for sparse matrix computation", 1994,
 @url{http://www-users.cs.umn.edu/~saad/software/SPARSKIT/paper.ps}}.
 With full matrices, knowledge of the point of an element of the matrix
 within the matrix is implied by its position in the computers memory. 
 However, this is not the case for sparse matrices, and so the positions
 of the non-zero elements of the matrix must equally be stored. 
 
 An obvious way to do this is by storing the elements of the matrix as
@@ -287,17 +287,17 @@ for j = 1:c
 endfor
 @end group
 @end example
 
 It should be noted, that due to the way that the Octave
 assignment functions are written that the assignment will reallocate
 the memory used by the sparse matrix at each iteration of the above loop. 
 Therefore the @dfn{spalloc} function ignores the @var{nz} argument and 
-does not preassign the memory for the matrix.  Therefore, it is vitally
+does not pre-assign the memory for the matrix.  Therefore, it is vitally
 important that code using to above structure should be vectorized
 as much as possible to minimize the number of assignments and reduce the
 number of memory allocations.
 
 @DOCSTRING(full)
 
 @DOCSTRING(spalloc)
 
diff --git a/doc/interpreter/tips.txi b/doc/interpreter/tips.txi
--- a/doc/interpreter/tips.txi
+++ b/doc/interpreter/tips.txi
@@ -197,17 +197,17 @@ for i = ever:and_ever
   result = [ result, new_value() ];
 endfor
 @end group
 @end example
 
 Sometimes the number of items can't be computed in advance, and stack-like operations
 are needed.  When elements are being repeatedly inserted at/removed from the end of an
 array, Octave detects it as stack usage and attempts to use a smarter memory management
-strategy preallocating the array in bigger chunks.  Likewise works for cell and
+strategy pre-allocating the array in bigger chunks.  Likewise works for cell and
 struct arrays.
 
 @example
 @group
 a = [];
 while (condition)
   @dots{}
   a(end+1) = value; # "push" operation
@@ -513,17 +513,17 @@ as @@var@{variable@}.
 @end group
 @end example
 
 This help string must be commented in user functions, or in the help
 string of the @w{@code{DEFUN_DLD}} macro for dynamically loadable
 functions.  The important aspects of the documentation string are
 
 @table @asis
-@item -*- texinfo -*-
+@item -*- @nospell{texinfo} -*-
 This string signals Octave that the following text is in Texinfo format,
 and should be the first part of any help string in Texinfo format.
 @item @@deftypefn@{class@} @dots{} @@end deftypefn
 The entire help string should be enclosed within the block defined by
 deftypefn.
 @item @@cindex index term
 This generates an index entry, and can be useful when the function is
 included as part of a larger piece of documentation.  It is ignored
@@ -540,17 +540,17 @@ reasons as the @@var macro.
 This is a comma separated list of function names that allows cross
 referencing from one function documentation string to another.
 @end table
 
 Texinfo format has been designed to generate output for online viewing
 with text terminals as well as generating high-quality printed output.
 To these ends, Texinfo has commands which control the diversion of parts
 of the document into a particular output processor.  Three formats are
-of importance: info, html and @TeX{}.  These are selected with
+of importance: info, HTML and @TeX{}.  These are selected with
 
 @example
 @group
 @@ifinfo
 Text area for info only
 @@end ifinfo
 @end group
 @end example
@@ -566,17 +566,17 @@ Text area for HTML only
 @example
 @group
 @@tex
 Text area for TeX only
 @@end tex
 @end group
 @end example
 
-Note that often @TeX{} output can be used in html documents and so often
+Note that often @TeX{} output can be used in HTML documents and so often
 the @code{@@ifhtml} blocks are unnecessary.  If no specific output
 processor is chosen, by default, the text goes into all output
 processors.  It is usual to have the above blocks in pairs to allow the
 same information to be conveyed in all output formats, but with a
 different markup.  Currently, most Octave documentation only makes a
 distinction between @TeX{} and all other formats.  Therefore, the
 following construct is seen repeatedly.
 
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,25 @@
+2010-07-17  Rik <octave@nomad.inbox5.com>
+
+          * audio/lin2mu.m, general/common_size.m, general/interp1.m, 
+          general/interp2.m, general/interpn.m, general/quadl.m,
+          geometry/dsearchn.m, geometry/voronoi.m, geometry/voronoin.m,
+          image/hsv2rgb.m, image/imread.m, image/rgb2hsv.m,
+          linear-algebra/commutation_matrix.m, linear-algebra/condest.m,
+          linear-algebra/expm.m, linear-algebra/krylov.m,
+          linear-algebra/onenormest.m, miscellaneous/perl.m,
+          plot/linkprop.m, plot/plot.m, plot/print.m, plot/stem3.m,
+          signal/diffpara.m, signal/stft.m, sparse/pcg.m, sparse/pcr.m,
+          specfun/primes.m, special-matrix/hadamard.m, special-matrix/hankel.m,
+          special-matrix/invhilb.m, special-matrix/pascal.m,
+          special-matrix/rosser.m, special-matrix/toeplitz.m,
+          special-matrix/vander.m, special-matrix/wilkinson.m,
+          testfun/speed.m: Spellcheck documentation
+
 2010-07-15  Jaroslav Hajek  <highegg@gmail.com>
 
 	* general/flipdim.m: Suuport flipping about trailing singleton
 	dimension.
 
 2010-07-14  Ben Abbott <bpabbott@mac.com>
 
 	* plot/__gnuplot_print__.m: Fix broken options "-orientation",
diff --git a/scripts/audio/lin2mu.m b/scripts/audio/lin2mu.m
--- a/scripts/audio/lin2mu.m
+++ b/scripts/audio/lin2mu.m
@@ -16,17 +16,17 @@
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} lin2mu (@var{x}, @var{n})
 ## Converts audio data from linear to mu-law.  Mu-law values use 8-bit
 ## unsigned integers.  Linear values use @var{n}-bit signed integers or 
-## floating point values in the range -1<=@var{x}<=1 if @var{n} is 0.  
+## floating point values in the range -1@leq{}@var{x}<=1 if @var{n} is 0.  
 ## If @var{n} is not specified it defaults to 0, 8 or 16 depending on 
 ## the range values in @var{x}.
 ## @seealso{mu2lin, loadaudio, saveaudio, playaudio, setaudio, record}
 ## @end deftypefn
 
 
 ## Author: Andreas Weingessel <Andreas.Weingessel@ci.tuwien.ac.at>
 ## Created: 17 October 1994
diff --git a/scripts/general/common_size.m b/scripts/general/common_size.m
--- a/scripts/general/common_size.m
+++ b/scripts/general/common_size.m
@@ -20,17 +20,17 @@
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {[@var{err}, @var{y1}, @dots{}] =} common_size (@var{x1}, @dots{})
 ## Determine if all input arguments are either scalar or of common
 ## size.  If so, @var{err} is zero, and @var{yi} is a matrix of the
 ## common size with all entries equal to @var{xi} if this is a scalar or
 ## @var{xi} otherwise.  If the inputs cannot be brought to a common size,
-## errorcode is 1, and @var{yi} is @var{xi}.  For example,
+## @var{err} is 1, and @var{yi} is @var{xi}.  For example,
 ##
 ## @example
 ## @group
 ## [errorcode, a, b] = common_size ([1 2; 3 4], 5)
 ##      @result{} errorcode = 0
 ##      @result{} a = [ 1, 2; 3, 4 ]
 ##      @result{} b = [ 5, 5; 5, 5 ]
 ## @end group
diff --git a/scripts/general/interp1.m b/scripts/general/interp1.m
--- a/scripts/general/interp1.m
+++ b/scripts/general/interp1.m
@@ -31,17 +31,17 @@
 ## Method is one of:
 ##
 ## @table @asis
 ## @item 'nearest'
 ## Return the nearest neighbor.
 ## @item 'linear'
 ## Linear interpolation from nearest neighbors
 ## @item 'pchip'
-## Piece-wise cubic hermite interpolating polynomial
+## Piece-wise cubic Hermite interpolating polynomial
 ## @item 'cubic'
 ## Cubic interpolation from four nearest neighbors
 ## @item 'spline'
 ## Cubic spline interpolation--smooth first and second derivatives
 ## throughout the curve
 ## @end table
 ##
 ## Appending '*' to the start of the above method forces @code{interp1}
diff --git a/scripts/general/interp2.m b/scripts/general/interp2.m
--- a/scripts/general/interp2.m
+++ b/scripts/general/interp2.m
@@ -52,17 +52,17 @@
 ## interpolation.  It can take one of the following values 
 ##
 ## @table @asis
 ## @item 'nearest'
 ## Return the nearest neighbor.
 ## @item 'linear'
 ## Linear interpolation from nearest neighbors.
 ## @item 'pchip'
-## Piece-wise cubic hermite interpolating polynomial.
+## Piece-wise cubic Hermite interpolating polynomial.
 ## @item 'cubic'
 ## Cubic interpolation from four nearest neighbors.
 ## @item 'spline'
 ## Cubic spline interpolation--smooth first and second derivatives
 ## throughout the curve.
 ## @end table
 ##
 ## If a scalar value @var{extrapval} is defined as the final value, then
diff --git a/scripts/general/interpn.m b/scripts/general/interpn.m
--- a/scripts/general/interpn.m
+++ b/scripts/general/interpn.m
@@ -193,17 +193,17 @@ function vi = interpn (varargin)
   endif
 
 endfunction
 
 %!demo
 %! A=[13,-1,12;5,4,3;1,6,2];
 %! x=[0,1,4]; y=[10,11,12];
 %! xi=linspace(min(x),max(x),17);
-%! AI=linspace(min(y),max(y),26)';
+%! yi=linspace(min(y),max(y),26)';
 %! mesh(xi,yi,interpn(x,y,A.',xi,yi,"linear").');
 %! [x,y] = meshgrid(x,y); 
 %! hold on; plot3(x(:),y(:),A(:),"b*"); hold off;
 
 %!demo
 %! A=[13,-1,12;5,4,3;1,6,2];
 %! x=[0,1,4]; y=[10,11,12];
 %! xi=linspace(min(x),max(x),17);
diff --git a/scripts/general/quadl.m b/scripts/general/quadl.m
--- a/scripts/general/quadl.m
+++ b/scripts/general/quadl.m
@@ -12,17 +12,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{q} =} quadl (@var{f}, @var{a}, @var{b})
+## @deftypefn {Function File}  {@var{q} =} quadl (@var{f}, @var{a}, @var{b})
 ## @deftypefnx {Function File} {@var{q} =} quadl (@var{f}, @var{a}, @var{b}, @var{tol})
 ## @deftypefnx {Function File} {@var{q} =} quadl (@var{f}, @var{a}, @var{b}, @var{tol}, @var{trace})
 ## @deftypefnx {Function File} {@var{q} =} quadl (@var{f}, @var{a}, @var{b}, @var{tol}, @var{trace}, @var{p1}, @var{p2}, @dots{})
 ##
 ## Numerically evaluate integral using adaptive Lobatto rule.
 ## @code{quadl (@var{f}, @var{a}, @var{b})} approximates the integral of
 ## @code{@var{f}(@var{x})} to machine precision.  @var{f} is either a
 ## function handle, inline function or string containing the name of
@@ -33,18 +33,18 @@
 ## which to integrate @code{@var{f}(@var{x})}.  While if @var{trace} is
 ## defined, displays the left end point of the current interval, the 
 ## interval length, and the partial integral.
 ##
 ## Additional arguments @var{p1}, etc., are passed directly to @var{f}.
 ## To use default values for @var{tol} and @var{trace}, one may pass
 ## empty matrices.
 ##
-## Reference: W. Gander and W. Gautschi, 'Adaptive Quadrature - 
-## Revisited', BIT Vol. 40, No. 1, March 2000, pp. 84--101.
+## Reference: W. Gander and W. Gautschi, @cite{Adaptive Quadrature - 
+## Revisited}, BIT Vol. 40, No. 1, March 2000, pp. 84--101.
 ## @url{http://www.inf.ethz.ch/personal/gander/}
 ##
 ## @end deftypefn
 
 ##   Author: Walter Gautschi
 ##   Date: 08/03/98
 ##   Reference: Gander, Computermathematik, Birkhaeuser, 1992.
 
diff --git a/scripts/geometry/dsearchn.m b/scripts/geometry/dsearchn.m
--- a/scripts/geometry/dsearchn.m
+++ b/scripts/geometry/dsearchn.m
@@ -18,17 +18,17 @@
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {@var{idx} =} dsearchn (@var{x}, @var{tri}, @var{xi})
 ## @deftypefnx {Function File} {@var{idx} =} dsearchn (@var{x}, @var{tri}, @var{xi}, @var{outval})
 ## @deftypefnx {Function File} {@var{idx} =} dsearchn (@var{x}, @var{xi})
 ## @deftypefnx {Function File} {[@var{idx}, @var{d}] =} dsearchn (@dots{})
 ## Returns the index @var{idx} or the closest point in @var{x} to the elements
 ## @var{xi}.  If @var{outval} is supplied, then the values of @var{xi} that are
-## not contained within one of the simplicies @var{tri} are set to 
+## not contained within one of the simplices @var{tri} are set to 
 ## @var{outval}.  Generally, @var{tri} is returned from @code{delaunayn 
 ## (@var{x})}.
 ## @seealso{dsearch, tsearch}
 ## @end deftypefn
 
 function [idx, d] = dsearchn (x, t, xi, outval)
   if (nargin < 2 || nargin > 4)
     print_usage ();
diff --git a/scripts/geometry/voronoi.m b/scripts/geometry/voronoi.m
--- a/scripts/geometry/voronoi.m
+++ b/scripts/geometry/voronoi.m
@@ -16,20 +16,20 @@
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} voronoi (@var{x}, @var{y})
 ## @deftypefnx {Function File} {} voronoi (@var{x}, @var{y}, "plotstyle")
 ## @deftypefnx {Function File} {} voronoi (@var{x}, @var{y}, "plotstyle", @var{options})
 ## @deftypefnx {Function File} {[@var{vx}, @var{vy}] =} voronoi (@dots{})
-## plots voronoi diagram of points @code{(@var{x}, @var{y})}.
-## The voronoi facets with points at infinity are not drawn.
+## plots Voronoi diagram of points @code{(@var{x}, @var{y})}.
+## The Voronoi facets with points at infinity are not drawn.
 ## [@var{vx}, @var{vy}] = voronoi(@dots{}) returns the vertices instead of plotting the
-## diagram. plot (@var{vx}, @var{vy}) shows the voronoi diagram.
+## diagram. plot (@var{vx}, @var{vy}) shows the Voronoi diagram.
 ##
 ## A fourth optional argument, which must be a string, contains extra options
 ## passed to the underlying qhull command.  See the documentation for the
 ## Qhull library for details.
 ##
 ## @example
 ## @group
 ##   x = rand (10, 1);
diff --git a/scripts/geometry/voronoin.m b/scripts/geometry/voronoin.m
--- a/scripts/geometry/voronoin.m
+++ b/scripts/geometry/voronoin.m
@@ -14,20 +14,20 @@
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {[@var{C}, @var{F}] =} voronoin (@var{pts})
 ## @deftypefnx {Function File} {[@var{C}, @var{F}] =} voronoin (@var{pts}, @var{options})
-## computes n- dimensional voronoi facets.  The input matrix @var{pts}
+## computes n- dimensional Voronoi facets.  The input matrix @var{pts}
 ## of size [n, dim] contains n points of dimension dim.
-## @var{C} contains the points of the voronoi facets.  The list @var{F}
-## contains for each facet the indices of the voronoi points.
+## @var{C} contains the points of the Voronoi facets.  The list @var{F}
+## contains for each facet the indices of the Voronoi points.
 ##
 ## A second optional argument, which must be a string, contains extra options
 ## passed to the underlying qhull command.  See the documentation for the
 ## Qhull library for details.
 ## @seealso{voronoin, delaunay, convhull}
 ## @end deftypefn
 
 ## Author: Kai Habel <kai.habel@gmx.de>
diff --git a/scripts/image/hsv2rgb.m b/scripts/image/hsv2rgb.m
--- a/scripts/image/hsv2rgb.m
+++ b/scripts/image/hsv2rgb.m
@@ -14,17 +14,17 @@
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {@var{rgb_map} =} hsv2rgb (@var{hsv_map})
-## Transform a colormap or image from the hsv space to the rgb space. 
+## Transform a colormap or image from the HSV space to the RGB space. 
 ## @seealso{rgb2hsv}
 ## @end deftypefn
 
 ## Author: Kai Habel <kai.habel@gmx.de>
 ## Adapted-by: jwe
 
 function rgb_map = hsv2rgb (hsv_map)
 
diff --git a/scripts/image/imread.m b/scripts/image/imread.m
--- a/scripts/image/imread.m
+++ b/scripts/image/imread.m
@@ -21,20 +21,20 @@
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {[@var{img}, @var{map}, @var{alpha}] =} imread (@var{filename})
 ## Read images from various file formats.
 ##
 ## The size and numeric class of the output depends on the
 ## format of the image.  A color image is returned as an
-## MxNx3 matrix.  Grey-level and black-and-white images are
+## MxNx3 matrix.  Gray-level and black-and-white images are
 ## of size MxN.
 ## The color depth of the image determines the numeric
-## class of the output: "uint8" or "uint16" for grey
+## class of the output: "uint8" or "uint16" for gray
 ## and color, and "logical" for black and white.
 ##
 ## @seealso{imwrite, imfinfo}
 ## @end deftypefn
 
 function varargout = imread (filename, varargin)
 
   if (nargin < 1)
diff --git a/scripts/image/rgb2hsv.m b/scripts/image/rgb2hsv.m
--- a/scripts/image/rgb2hsv.m
+++ b/scripts/image/rgb2hsv.m
@@ -14,24 +14,24 @@
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {@var{hsv_map} =} rgb2hsv (@var{rgb_map})
-## Transform a colormap or image from the rgb space to the hsv space.
+## Transform a colormap or image from the RGB space to the HSV space.
 ##
-## A color n the RGB space consists of the red, green and blue intensities.
+## A color in the RGB space consists of the red, green and blue intensities.
 ##
 ## In the HSV space each color is represented by their hue, saturation
 ## and value (brightness).  Value gives the amount of light in the color.
 ## Hue describes the dominant wavelength. 
-## Saturation is the amount of Hue mixed into the color.
+## Saturation is the amount of hue mixed into the color.
 ## @seealso{hsv2rgb}
 ## @end deftypefn
 
 ## Author: Kai Habel <kai.habel@gmx.de>
 ## Adapted-by: jwe
 
 function hsval = rgb2hsv (rgb)
 
diff --git a/scripts/linear-algebra/commutation_matrix.m b/scripts/linear-algebra/commutation_matrix.m
--- a/scripts/linear-algebra/commutation_matrix.m
+++ b/scripts/linear-algebra/commutation_matrix.m
@@ -59,18 +59,18 @@
 ## @tex
 ##  $K_{m,m}$
 ## @end tex
 ## @ifnottex
 ##  @math{K(m,m)}
 ## @end ifnottex
 ##  is returned.
 ##
-## See Magnus and Neudecker (1988), Matrix differential calculus with
-## applications in statistics and econometrics.
+## See Magnus and Neudecker (1988), @cite{Matrix Differential Calculus with
+## Applications in Statistics and Econometrics.}
 ## @end deftypefn
 
 ## Author: KH <Kurt.Hornik@wu-wien.ac.at>
 ## Created: 8 May 1995
 ## Adapted-By: jwe
 
 function k = commutation_matrix (m, n)
 
diff --git a/scripts/linear-algebra/condest.m b/scripts/linear-algebra/condest.m
--- a/scripts/linear-algebra/condest.m
+++ b/scripts/linear-algebra/condest.m
@@ -49,23 +49,23 @@
 ##
 ## @code{condest} returns the 1-norm condition estimate @var{est} and
 ## a vector @var{v} satisfying @code{norm (A*v, 1) == norm (A, 1) * norm
 ## (@var{v}, 1) / @var{est}}.  When @var{est} is large, @var{v} is an
 ## approximate null vector.
 ##
 ## References: 
 ## @itemize
-## @item Nicholas J. Higham and Francoise Tisseur, "A Block Algorithm
+## @item N.J. Higham and F. Tisseur, @cite{A Block Algorithm
 ## for Matrix 1-Norm Estimation, with an Application to 1-Norm
-## Pseudospectra." SIMAX vol 21, no 4, pp 1185-1201.
+## Pseudospectra}. SIMAX vol 21, no 4, pp 1185-1201.
 ## @url{http://dx.doi.org/10.1137/S0895479899356080}
-## @item Nicholas J. Higham and Francoise Tisseur, "A Block Algorithm
+## @item N.J. Higham and F. Tisseur, @cite{A Block Algorithm
 ## for Matrix 1-Norm Estimation, with an Application to 1-Norm
-## Pseudospectra." @url{http://citeseer.ist.psu.edu/223007.html}
+## Pseudospectra}. @url{http://citeseer.ist.psu.edu/223007.html}
 ## @end itemize
 ##
 ## @seealso{cond, norm, onenormest}
 ## @end deftypefn
 
 ## Code originally licensed under
 ##
 ##  Copyright (c) 2007, Regents of the University of California
diff --git a/scripts/linear-algebra/expm.m b/scripts/linear-algebra/expm.m
--- a/scripts/linear-algebra/expm.m
+++ b/scripts/linear-algebra/expm.m
@@ -30,61 +30,42 @@
 ## @example
 ## expm(a) = I + a + a^2/2! + a^3/3! + @dots{}
 ## @end example
 ## 
 ## @end ifnottex
 ## The Taylor series is @emph{not} the way to compute the matrix
 ## exponential; see Moler and Van Loan, @cite{Nineteen Dubious Ways to
 ## Compute the Exponential of a Matrix}, SIAM Review, 1978.  This routine
-## uses Ward's diagonal
-## @tex
-## Pad\'e
-## @end tex
-## @ifnottex
-## Pade'
-## @end ifnottex
-## approximation method with three step preconditioning (SIAM Journal on
-## Numerical Analysis, 1977).  Diagonal
-## @tex
-## Pad\'e
-## @end tex
-## @ifnottex
-## Pade'
-## @end ifnottex
-##  approximations are rational polynomials of matrices
+## uses Ward's diagonal Pad@'e approximation method with three step 
+## preconditioning (SIAM Journal on Numerical Analysis, 1977).  Diagonal
+## Pad@'e approximations are rational polynomials of matrices
 ## @tex
 ## $D_q(a)^{-1}N_q(a)$
 ## @end tex
 ## @ifnottex
 ## 
 ## @example
 ## @group
 ##      -1
 ## D (a)   N (a)
 ## @end group
 ## @end example
 ## 
 ## @end ifnottex
-##  whose Taylor series matches the first
+## whose Taylor series matches the first
 ## @tex
 ## $2 q + 1 $
 ## @end tex
 ## @ifnottex
 ## @code{2q+1}
 ## @end ifnottex
 ## terms of the Taylor series above; direct evaluation of the Taylor series
 ## (with the same preconditioning steps) may be desirable in lieu of the
-## @tex
-## Pad\'e
-## @end tex
-## @ifnottex
-## Pade'
-## @end ifnottex
-## approximation when
+## Pad@'e approximation when
 ## @tex
 ## $D_q(a)$
 ## @end tex
 ## @ifnottex
 ## @code{Dq(a)}
 ## @end ifnottex
 ## is ill-conditioned.
 ## @end deftypefn
diff --git a/scripts/linear-algebra/krylov.m b/scripts/linear-algebra/krylov.m
--- a/scripts/linear-algebra/krylov.m
+++ b/scripts/linear-algebra/krylov.m
@@ -33,31 +33,31 @@
 ## a*u(:,k)-u*h(:,k)}, and @code{ek'} is the vector
 ## @code{[0, 0, @dots{}, 1]} of length @code{k}.  Otherwise, @var{h} is
 ## meaningless.
 ##
 ## If @var{v} is a vector and @var{k} is greater than
 ## @code{length(A)-1}, then @var{h} contains the Hessenberg matrix such
 ## that @code{a*u == u*h}.
 ##
-## The value of @var{nu} is the dimension of the span of the krylov
+## The value of @var{nu} is the dimension of the span of the Krylov
 ## subspace (based on @var{eps1}).
 ##
 ## If @var{b} is a vector and @var{k} is greater than @var{m-1}, then
 ## @var{h} contains the Hessenberg decomposition of @var{a}.
 ##
 ## The optional parameter @var{eps1} is the threshold for zero.  The
 ## default value is 1e-12.
 ##
 ## If the optional parameter @var{pflg} is nonzero, row pivoting is used
 ## to improve numerical behavior.  The default value is 0.
 ##
-## Reference: Hodel and Misra, "Partial Pivoting in the Computation of
-## Krylov Subspaces", to be submitted to Linear Algebra and its
-## Applications
+## Reference: A. Hodel, P. Misra, @cite{Partial Pivoting in the Computation of
+## Krylov Subspaces of Large Sparse Systems}, Proceedings of the 42nd IEEE 
+## Conference on Decision and Control, December 2003.
 ## @end deftypefn
 
 ## Author: A. Scottedward Hodel <a.s.hodel@eng.auburn.edu>
 
 function [Uret, H, nu] = krylov (A, V, k, eps1, pflg);
 
   if (isa (A, "single") || isa (V, "single"))
     defeps = 1e-6
diff --git a/scripts/linear-algebra/onenormest.m b/scripts/linear-algebra/onenormest.m
--- a/scripts/linear-algebra/onenormest.m
+++ b/scripts/linear-algebra/onenormest.m
@@ -34,23 +34,23 @@
 ## Returns the norm estimate @var{est}, two vectors @var{v} and
 ## @var{w} related by norm
 ## @code{(@var{w}, 1) = @var{est} * norm (@var{v}, 1)},
 ## and the number of iterations @var{iter}.  The number of
 ## iterations is limited to 10 and is at least 2.
 ##
 ## References: 
 ## @itemize
-## @item Nicholas J. Higham and Françoise Tisseur, "A Block Algorithm
+## @item N.J. Higham and F. Tisseur, @cite{A Block Algorithm
 ## for Matrix 1-Norm Estimation, with an Application to 1-Norm
-## Pseudospectra." SIMAX vol 21, no 4, pp 1185-1201.
+## Pseudospectra}. SIMAX vol 21, no 4, pp 1185-1201.
 ## @url{http://dx.doi.org/10.1137/S0895479899356080}
-## @item Nicholas J. Higham and Françoise Tisseur, "A Block Algorithm
+## @item N.J. Higham and F. Tisseur, @cite{A Block Algorithm
 ## for Matrix 1-Norm Estimation, with an Application to 1-Norm
-## Pseudospectra." @url{http://citeseer.ist.psu.edu/223007.html}
+## Pseudospectra}. @url{http://citeseer.ist.psu.edu/223007.html}
 ## @end itemize
 ##
 ## @seealso{condest, norm, cond}
 ## @end deftypefn
 
 ## Code originally licensed under
 ##
 ##  Copyright (c) 2007, Regents of the University of California
diff --git a/scripts/miscellaneous/perl.m b/scripts/miscellaneous/perl.m
--- a/scripts/miscellaneous/perl.m
+++ b/scripts/miscellaneous/perl.m
@@ -14,17 +14,17 @@
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {[@var{output}, @var{status}] =} perl (@var{scriptfile})
 ## @deftypefnx {Function File} {[@var{output}, @var{status}] =} perl (@var{scriptfile}, @var{argument1}, @var{argument2}, @dots{})
-## Invoke perl script @var{scriptfile} with possibly a list of
+## Invoke Perl script @var{scriptfile} with possibly a list of
 ## command line arguments.
 ## Returns output in @var{output} and status
 ## in @var{status}.
 ## @seealso{system}
 ## @end deftypefn
 
 function [output, status] = perl (script = "-e ''", varargin)
 
diff --git a/scripts/plot/linkprop.m b/scripts/plot/linkprop.m
--- a/scripts/plot/linkprop.m
+++ b/scripts/plot/linkprop.m
@@ -18,17 +18,17 @@
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {@var{hlink} =} linkprop (@var{h}, @var{prop})
 ## Links graphics object properties, such that a change in one is
 ## propagated to the others.  The properties to link are given as a
 ## string of cell string array by @var{prop} and the objects containing
 ## these properties by the handle array @var{h}.
 ##
-## An example of the use of linkprops is
+## An example of the use of linkprop is
 ##
 ## @example
 ## @group
 ## x = 0:0.1:10;
 ## subplot (1, 2, 1);
 ## h1 = plot (x, sin (x));
 ## subplot (1, 2, 2);
 ## h2 = plot (x, cos (x));
diff --git a/scripts/plot/plot.m b/scripts/plot/plot.m
--- a/scripts/plot/plot.m
+++ b/scripts/plot/plot.m
@@ -166,16 +166,17 @@
 ## @end group
 ## @end example
 ##
 ## This will plot the cosine and sine functions and label them accordingly
 ## in the key.
 ##
 ## If the first argument is an axis handle, then plot into these axes, 
 ## rather than the current axis handle returned by @code{gca}. 
+## 
 ## @seealso{semilogx, semilogy, loglog, polar, mesh, contour, bar,
 ## stairs, errorbar, xlabel, ylabel, title, print}
 ## @end deftypefn
 
 ## Author: jwe
 
 function retval = plot (varargin)
 
diff --git a/scripts/plot/print.m b/scripts/plot/print.m
--- a/scripts/plot/print.m
+++ b/scripts/plot/print.m
@@ -72,17 +72,17 @@
 ## be included in a @LaTeX{} (or @TeX{}) document.  The @code{tex} device
 ## is the same as the @code{epslatex} device.
 ##   @item tikz
 ##     Generate a @LaTeX{} file using gnuplot's Lua/TikZ terminal.
 ##   @item ill
 ##   @itemx aifm
 ##     Adobe Illustrator
 ##   @item cdr
-##   @itemx corel
+##   @itemx @nospell{corel}
 ##     CorelDraw
 ##   @item dxf
 ##     AutoCAD
 ##   @item emf
 ##   @itemx meta
 ##     Microsoft Enhanced Metafile
 ##   @item fig
 ##     XFig.  If this format is selected the additional options
@@ -130,47 +130,47 @@
 ##     24-bit color PCX file format
 ##   @item ppm
 ##     Portable Pixel Map file format
 ##   @end table
 ##
 ##   For a complete list, type `system ("gs -h")' to see what formats
 ## and devices are available.
 ##
-##   When the ghostscript is sent to a printer the size is determined
-## by the figure's "papersize" property.  When the ghostscript output 
+##   When Ghostscript output is sent to a printer the size is determined
+## by the figure's "papersize" property.  When the output 
 ## is sent to a file the size is determined by the figure's
 ## "paperposition" property.
 ##
 ## @itemx -append
 ##   Appends the output to a pre-existing file.  Presently only PDF,
 ## and Postscript files are supported.
 ##
 ## @itemx -r@var{NUM}
 ##   Resolution of bitmaps in pixels per inch.  For both metafiles and 
 ## SVG the default is the screen resolution, for other it is 150 dpi.
 ## To specify screen resolution, use "-r0".
 ##
 ## @item -tight
-##   Forces a tight bounding box for eps-files.  Since the ghostscript
-## devices are conversion of an eps-file, this option works the those
+##   Forces a tight bounding box for eps-files.  Since the Ghostscript
+## devices are conversions of an eps-file, this option works for those
 ## devices as well.
 ##
 ## @itemx -S@var{xsize},@var{ysize}
 ##   Plot size in pixels for EMF, GIF, JPEG, PBM, PNG and SVG.  If
 ## using the command form of the print function, you must quote the
 ## @var{xsize},@var{ysize} option.  For example, by writing
 ## @w{@code{"-S640,480"}}.  The size defaults to that specified by the
 ## figure's paperposition property.
 ##
 ## @item -F@var{fontname}
 ## @itemx -F@var{fontname}:@var{size}
 ## @itemx -F:@var{size}
 ##   @var{fontname} set the postscript font (for use with postscript,
-## aifm, corel and fig).  By default, 'Helvetica' is set for PS/Aifm,
+## aifm, @nospell{corel} and fig).  By default, 'Helvetica' is set for PS/aifm,
 ## and 'SwitzerlandLight' for Corel.  It can also be 'Times-Roman'.
 ## @var{size} is given in points.  @var{fontname} is ignored for the
 ## fig device.
 ## @end table
 ##
 ## The filename and options can be given in any order.
 ## @end deftypefn
 
diff --git a/scripts/plot/stem3.m b/scripts/plot/stem3.m
--- a/scripts/plot/stem3.m
+++ b/scripts/plot/stem3.m
@@ -28,17 +28,17 @@
 ## @group
 ## theta = 0:0.2:6; 
 ## stem3 (cos (theta), sin (theta), theta) 
 ## @end group
 ## @end example
 ##
 ## @noindent
 ## plots 31 stems with heights from 0 to 6 lying on a circle.  Color 
-## definitions with rgb-triples are not valid!
+## definitions with RGB-triples are not valid!
 ## @seealso{bar, barh, stem, plot}
 ## @end deftypefn
 
 function h = stem3 (varargin)
 
   if (nargin < 1 || nargin > 4)
     print_usage ();
   endif
diff --git a/scripts/signal/diffpara.m b/scripts/signal/diffpara.m
--- a/scripts/signal/diffpara.m
+++ b/scripts/signal/diffpara.m
@@ -28,18 +28,18 @@
 ## omitted then @math{a = 0.5 * sqrt (T)} and @math{b = 1.5 * sqrt (T)}
 ## is used, where @math{T} is the sample size.  If @var{x} is a matrix,
 ## the differencing parameter of each column is estimated.
 ##
 ## The estimators for all frequencies in the intervals
 ## described above is returned in @var{dd}.  The value of @var{d} is
 ## simply the mean of @var{dd}.
 ##
-## Reference: Brockwell, Peter J. & Davis, Richard A. Time Series:
-## Theory and Methods Springer 1987.
+## Reference: P.J. Brockwell & R.A. Davis. @cite{Time Series:
+## Theory and Methods}. Springer 1987.
 ## @end deftypefn
 
 ## Author: FL <Friedrich.Leisch@ci.tuwien.ac.at>
 ## Description: Estimate the fractional differencing parameter
 
 function [d, D] = diffpara (X, a, b)
 
   if ((nargin < 1) || (nargin > 3))
diff --git a/scripts/signal/stft.m b/scripts/signal/stft.m
--- a/scripts/signal/stft.m
+++ b/scripts/signal/stft.m
@@ -22,19 +22,19 @@
 ## Compute the short-time Fourier transform of the vector @var{x} with
 ## @var{num_coef} coefficients by applying a window of @var{win_size} data
 ## points and an increment of @var{inc} points.
 ##
 ## Before computing the Fourier transform, one of the following windows
 ## is applied:
 ##
 ## @table @asis
-## @item hanning
+## @item @nospell{hanning}
 ## w_type = 1
-## @item hamming
+## @item @nospell{hamming}
 ## w_type = 2
 ## @item rectangle
 ## w_type = 3
 ## @end table
 ##
 ## The window names can be passed as strings or by the @var{w_type} number.
 ##
 ## If not all arguments are specified, the following defaults are used:
diff --git a/scripts/sparse/pcg.m b/scripts/sparse/pcg.m
--- a/scripts/sparse/pcg.m
+++ b/scripts/sparse/pcg.m
@@ -191,25 +191,24 @@
 ##   y(1:K) = x(1:K)./[1:K]';
 ##   endfunction
 ## 
 ##   [x, flag, relres, iter, resvec, eigest] = ...
 ##        pcg (A, b, [], [], "apply_m", [], [], 3)
 ## @end group
 ## @end example
 ## 
-## @sc{References}
+## References:
 ## 
-##      [1] C.T.Kelley, 'Iterative methods for linear and nonlinear equations',
-##      SIAM, 1995 (the base PCG algorithm) 
+##   [1] C.T. Kelley, @cite{Iterative Methods for Linear and Nonlinear Equations},
+##       SIAM, 1995 (the base PCG algorithm) 
 ##      
-##      [2] Y.Saad, 'Iterative methods for sparse linear systems', PWS 1996
-##      (condition number estimate from PCG) Revised version of this book is
-##      available online at http://www-users.cs.umn.edu/~saad/books.html
-## 
+##   [2] Y. Saad, @cite{Iterative Methods for Sparse Linear Systems}, PWS 1996
+##       (condition number estimate from PCG) Revised version of this book is
+##       available online at @url{http://www-users.cs.umn.edu/~saad/books.html}
 ##
 ## @seealso{sparse, pcr}
 ## @end deftypefn
 
 ## Author: Piotr Krzyzanowski <piotr.krzyzanowski@mimuw.edu.pl>
 ## Modified by: Vittoria Rezzonico <vittoria.rezzonico@epfl.ch>
 ##    - Add the ability to provide the pre-conditioner as two separate
 ## matrices
diff --git a/scripts/sparse/pcr.m b/scripts/sparse/pcr.m
--- a/scripts/sparse/pcr.m
+++ b/scripts/sparse/pcr.m
@@ -153,20 +153,20 @@
 ##     y = x; y(1:k) = x(1:k)./[1:k]';   
 ##   endfunction
 ## 
 ##   [x, flag, relres, iter, resvec] = ...
 ##                      pcr (a, b, [], [], "apply_m"', [], 3)
 ## @end group
 ## @end example
 ## 
-## @sc{References}
+## References:
 ## 
-##      [1] W. Hackbusch, "Iterative Solution of Large Sparse Systems of
-##      Equations", section 9.5.4; Springer, 1994
+##      [1] W. Hackbusch, @cite{Iterative Solution of Large Sparse Systems of
+##      Equations}, section 9.5.4; Springer, 1994
 ##
 ## @seealso{sparse, pcg}
 ## @end deftypefn
 
 ## Author: Piotr Krzyzanowski <piotr.krzyzanowski@mimuw.edu.pl>
 
 function [x, flag, relres, iter, resvec] = pcr (a, b, tol, maxit, m, x0, varargin)
 
diff --git a/scripts/specfun/primes.m b/scripts/specfun/primes.m
--- a/scripts/specfun/primes.m
+++ b/scripts/specfun/primes.m
@@ -16,17 +16,17 @@
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} primes (@var{n})
 ##
 ## Return all primes up to @var{n}.  
 ##
-## The algorithm used is the Sieve of Erastothenes.
+## The algorithm used is the Sieve of Eratosthenes.
 ##
 ## Note that if you need a specific number of primes you can use the
 ## fact the distance from one prime to the next is, on average,
 ## proportional to the logarithm of the prime.  Integrating, one finds
 ## that there are about @math{k} primes less than
 ## @tex
 ## $k \log (5 k)$.
 ## @end tex
diff --git a/scripts/special-matrix/hadamard.m b/scripts/special-matrix/hadamard.m
--- a/scripts/special-matrix/hadamard.m
+++ b/scripts/special-matrix/hadamard.m
@@ -20,17 +20,17 @@
 ## Original version by Paul Kienzle distributed as free software in the
 ## public domain.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} hadamard (@var{n})
 ## Construct a Hadamard matrix @var{Hn} of size @var{n}-by-@var{n}.  The 
 ## size @var{n} must be of the form @code{2 ^ @var{k} * @var{p}} in which
 ## @var{p} is one of 1, 12, 20 or 28.  The returned matrix is normalized,
-## meaning @code{Hn(:,1) == 1} and @code{H(1,:) == 1}.
+## meaning @code{Hn(:,1) == 1} and @code{Hn(1,:) == 1}.
 ##
 ## Some of the properties of Hadamard matrices are:
 ##
 ## @itemize @bullet
 ## @item
 ## @code{kron (@var{Hm}, @var{Hn})} is a Hadamard matrix of size 
 ## @var{m}-by-@var{n}.
 ## @item
diff --git a/scripts/special-matrix/hankel.m b/scripts/special-matrix/hankel.m
--- a/scripts/special-matrix/hankel.m
+++ b/scripts/special-matrix/hankel.m
@@ -13,17 +13,18 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {} hankel (@var{c}, @var{r})
+## @deftypefn  {Function File} {} hankel (@var{c})
+## @deftypefnx {Function File} {} hankel (@var{c}, @var{r})
 ## Return the Hankel matrix constructed given the first column @var{c}, and
 ## (optionally) the last row @var{r}.  If the last element of @var{c} is
 ## not the same as the first element of @var{r}, the last element of
 ## @var{c} is used.  If the second argument is omitted, it is assumed to
 ## be a vector of zeros with the same size as @var{c}.
 ##
 ## A Hankel matrix formed from an m-vector @var{c}, and an n-vector
 ## @var{r}, has the elements
diff --git a/scripts/special-matrix/invhilb.m b/scripts/special-matrix/invhilb.m
--- a/scripts/special-matrix/invhilb.m
+++ b/scripts/special-matrix/invhilb.m
@@ -55,17 +55,17 @@
 ##                 \ k-1 /   \k/
 ## @end group
 ## @end example
 ## @end ifnottex
 ##
 ## The validity of this formula can easily be checked by expanding 
 ## the binomial coefficients in both formulas as factorials.  It can 
 ## be derived more directly via the theory of Cauchy matrices: 
-## see J. W. Demmel, Applied Numerical Linear Algebra, page 92.
+## see J. W. Demmel, @cite{Applied Numerical Linear Algebra}, p. 92.
 ##
 ## Compare this with the numerical calculation of @code{inverse (hilb (n))},
 ## which suffers from the ill-conditioning of the Hilbert matrix, and the
 ## finite precision of your computer's floating point arithmetic.
 ## @seealso{hankel, vander, sylvester_matrix, hilb, toeplitz}
 ## @end deftypefn
 
 ## Author: Dirk Laurie <dlaurie@na-net.ornl.gov>
diff --git a/scripts/special-matrix/pascal.m b/scripts/special-matrix/pascal.m
--- a/scripts/special-matrix/pascal.m
+++ b/scripts/special-matrix/pascal.m
@@ -13,30 +13,31 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {} pascal (@var{n}, @var{t})
+## @deftypefn  {Function File} {} pascal (@var{n})
+## @deftypefnx {Function File} {} pascal (@var{n}, @var{t})
 ##
 ## Return the Pascal matrix of order @var{n} if @code{@var{t} = 0}.
-## @var{t} defaults to 0. Return lower triangular Cholesky factor of 
+## @var{t} defaults to 0.  Return lower triangular Cholesky factor of 
 ## the Pascal matrix if @code{@var{t} = 1}.  This matrix is its own
 ## inverse, that is @code{pascal (@var{n}, 1) ^ 2 == eye (@var{n})}.
 ## If @code{@var{t} = -1}, return its absolute value.  This is the
-## standard pascal triangle as a lower-triangular matrix.
+## standard Pascal triangle as a lower-triangular matrix.
 ## If @code{@var{t} = 2}, return a transposed and permuted version of
 ## @code{pascal (@var{n}, 1)}, which is the cube-root of the identity
 ## matrix.  That is @code{pascal (@var{n}, 2) ^ 3 == eye (@var{n})}.
 ##
 ## @seealso{hankel, vander, sylvester_matrix, hilb, invhilb, toeplitz
-##           hadamard, wilkinson, compan, rosser}
+##          hadamard, wilkinson, compan, rosser}
 ## @end deftypefn
 
 ## Author: Peter Ekberg
 ##         (peda)
 
 function retval = pascal (n, t)
 
   if (nargin > 2) || (nargin == 0)
diff --git a/scripts/special-matrix/rosser.m b/scripts/special-matrix/rosser.m
--- a/scripts/special-matrix/rosser.m
+++ b/scripts/special-matrix/rosser.m
@@ -14,21 +14,21 @@
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} rosser ()
 ##
-## Returns the Rosser matrix.  This is a difficult test case used to test
+## Return the Rosser matrix.  This is a difficult test case used to evaluate
 ## eigenvalue algorithms.
 ##
 ## @seealso{hankel, vander, sylvester_matrix, hilb, invhilb, toeplitz
-##           hadamard, wilkinson, compan, pascal}
+##          hadamard, wilkinson, compan, pascal}
 ## @end deftypefn
 
 ## Author: Peter Ekberg
 ##         (peda)
 
 function retval = rosser ()
 
   if (nargin != 0)
diff --git a/scripts/special-matrix/toeplitz.m b/scripts/special-matrix/toeplitz.m
--- a/scripts/special-matrix/toeplitz.m
+++ b/scripts/special-matrix/toeplitz.m
@@ -14,17 +14,18 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {} toeplitz (@var{c}, @var{r})
+## @deftypefn  {Function File} {} toeplitz (@var{c})
+## @deftypefnx {Function File} {} toeplitz (@var{c}, @var{r})
 ## Return the Toeplitz matrix constructed given the first column @var{c},
 ## and (optionally) the first row @var{r}.  If the first element of @var{c}
 ## is not the same as the first element of @var{r}, the first element of
 ## @var{c} is used.  If the second argument is omitted, the first row is
 ## taken to be the same as the first column.
 ##
 ## A square Toeplitz matrix has the form:
 ## @tex
diff --git a/scripts/special-matrix/vander.m b/scripts/special-matrix/vander.m
--- a/scripts/special-matrix/vander.m
+++ b/scripts/special-matrix/vander.m
@@ -14,17 +14,18 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {} vander (@var{c}, @var{n})
+## @deftypefn  {Function File} {} vander (@var{c})
+## @deftypefnx {Function File} {} vander (@var{c}, @var{n})
 ## Return the Vandermonde matrix whose next to last column is @var{c}.
 ## If @var{n} is specified, it determines the number of columns;
 ## otherwise, @var{n} is taken to be equal to the length of @var{c}.
 ##
 ## A Vandermonde matrix has the form:
 ## @tex
 ## $$
 ## \left[\matrix{c_1^{n-1}  & \cdots & c_1^2  & c_1    & 1      \cr
diff --git a/scripts/special-matrix/wilkinson.m b/scripts/special-matrix/wilkinson.m
--- a/scripts/special-matrix/wilkinson.m
+++ b/scripts/special-matrix/wilkinson.m
@@ -14,33 +14,34 @@
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} wilkinson (@var{n})
 ##
-## Return the Wilkinson matrix of order @var{n}.
+## Return the Wilkinson matrix of order @var{n}.  Wilkinson matrices are
+## symmetric and tridiagonal with pairs of nearly, but not exactly, equal
+## eigenvalues.
 ##
 ## @seealso{hankel, vander, sylvester_matrix, hilb, invhilb, toeplitz
 ##           hadamard, rosser, compan, pascal}
 ## @end deftypefn
 
 ## Author: Peter Ekberg
 ##         (peda)
 
 function retval = wilkinson (n)
 
   if (nargin != 1)
     print_usage ();
   endif
 
-  nmax = length (n);
-  if (! (nmax == 1))
-    error ("wilkinson: expecting scalar argument, found something else");
+  if (! (isscalar (n) && (n == fix (n)) && n > 0))
+    error ("wilkinson: N must be an integer greater than 1");
   endif
 
   side = ones (n-1, 1);
   center = abs (-(n-1)/2:(n-1)/2);
   retval = diag (side, -1) + diag (center) + diag (side, 1);
 
 endfunction
diff --git a/scripts/testfun/speed.m b/scripts/testfun/speed.m
--- a/scripts/testfun/speed.m
+++ b/scripts/testfun/speed.m
@@ -34,30 +34,30 @@
 ##
 ## @item @var{max_n}
 ## The maximum test length to run.  Default value is 100.  Alternatively,
 ## use @code{[min_n,max_n]} or for complete control, @code{[n1,n2,@dots{},nk]}.
 ##
 ## @item @var{init}
 ## Initialization expression for function argument values.  Use @var{k} 
 ## for the test number and @var{n} for the size of the test.  This should
-## compute values for all variables listed in args.  Note that init will
+## compute values for all variables used by @var{f}.  Note that init will
 ## be evaluated first for @math{k = 0}, so things which are constant throughout
 ## the test can be computed then.  The default value is @code{@var{x} =
-## randn (@var{n}, 1);}.
+## randn (@var{n}, 1)}.
 ##
 ## @item @var{f2}
 ## An alternative expression to evaluate, so the speed of the two
-## can be compared.  Default is @code{[]}.
+## can be compared.  The default is @code{[]}.
 ##
 ## @item @var{tol}
 ## If @var{tol} is @code{Inf}, then no comparison will be made between the
 ## results of expression @var{f} and expression @var{f2}.  Otherwise,
 ## expression @var{f} should produce a value @var{v} and expression @var{f2} 
-## should produce a value @var{v2}, and these shall be compared using 
+## should produce a value @var{v2}, and these will be compared using 
 ## @code{assert(@var{v},@var{v2},@var{tol})}.  If @var{tol} is positive,
 ## the tolerance is assumed to be absolute.  If @var{tol} is negative,
 ## the tolerance is assumed to be relative.  The default is @code{eps}.
 ##
 ## @item @var{order}
 ## The time complexity of the expression @code{O(a n^p)}.  This
 ## is a structure with fields @code{a} and @code{p}.
 ##
@@ -77,17 +77,17 @@
 ## The slope of the execution time graph shows the approximate
 ## power of the asymptotic running time @code{O(n^p)}.  This
 ## power is plotted for the region over which it is approximated
 ## (the latter half of the graph).  The estimated power is not
 ## very accurate, but should be sufficient to determine the
 ## general order of your algorithm.  It should indicate if for 
 ## example your implementation is unexpectedly @code{O(n^2)} 
 ## rather than @code{O(n)} because it extends a vector each 
-## time through the loop rather than preallocating one which is 
+## time through the loop rather than pre-allocating one which is 
 ## big enough.  For example, in the current version of Octave,
 ## the following is not the expected @code{O(n)}:
 ##
 ## @example
 ## speed ("for i = 1:n, y@{i@} = x(i); end", "", [1000,10000])
 ## @end example
 ##
 ## but it is if you preallocate the cell array @code{y}:
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,11 +1,21 @@
+2010-07-17  Rik <octave@nomad.inbox5.com>
+
+        * DLD-FUNCTIONS/balance.cc, DLD-FUNCTIONS/ccolamd.cc,
+          DLD-FUNCTIONS/cellfun.cc, DLD-FUNCTIONS/dasrt.cc,
+          DLD-FUNCTIONS/dmperm.cc, DLD-FUNCTIONS/eigs.cc, DLD-FUNCTIONS/qz.cc,
+          DLD-FUNCTIONS/rand.cc, DLD-FUNCTIONS/sparse.cc, 
+          DLD-FUNCTIONS/sqrtm.cc, DLD-FUNCTIONS/symrcm.cc, dirfns.cc,
+          file-io.cc, syscalls.cc: Spellcheck documentation
+
 2010-07-08  Rik <octave@nomad.inbox5.com>
 
-	* DLD_FUNCTIONS/rand.cc: Correct typo in rande documentation (bug #30446).
+	* DLD_FUNCTIONS/rand.cc: Correct typo in rande documentation.
+        (bug #30446).
 
 2010-07-13  Jaroslav Hajek  <highegg@gmail.com>
 
 	* DLD-FUNCTIONS/cellfun.cc (mat2cell_mismatch, prepare_idx,
 	do_mat2cell_2d, do_mat2cell_nd, do_mat2cell): New helper funcs.
 	(Fmat2cell): Use them here.
 
 2010-07-13  Jaroslav Hajek  <highegg@gmail.com>
diff --git a/src/DLD-FUNCTIONS/balance.cc b/src/DLD-FUNCTIONS/balance.cc
--- a/src/DLD-FUNCTIONS/balance.cc
+++ b/src/DLD-FUNCTIONS/balance.cc
@@ -53,17 +53,17 @@ DEFUN_DLD (balance, args, nargout,
 @deftypefnx {Loadable Function} {[@var{dd}, @var{aa}] =} balance (@var{a}, @var{opt})\n\
 @deftypefnx {Loadable Function} {[@var{d}, @var{p}, @var{aa}] =} balance (@var{a}, @var{opt})\n\
 @deftypefnx {Loadable Function} {[@var{cc}, @var{dd}, @var{aa}, @var{bb}] =} balance (@var{a}, @var{b}, @var{opt})\n\
 \n\
 Compute @code{aa = dd \\ a * dd} in which @code{aa} is a matrix whose\n\
 row and column norms are roughly equal in magnitude, and\n\
 @code{dd} = @code{p * d}, in which @code{p} is a permutation\n\
 matrix and @code{d} is a diagonal matrix of powers of two.  This allows\n\
-the equilibration to be computed without roundoff.  Results of\n\
+the equilibration to be computed without round-off.  Results of\n\
 eigenvalue calculation are typically improved by balancing first.\n\
 \n\
 If two output values are requested, @code{balance} returns \n\
 the diagonal @code{d} and the permutation @code{p} separately as vectors.  \n\
 In this case, @code{dd = eye(n)(:,p) * diag (d)}, where @code{n} is the matrix \n\
 size.  \n\
 \n\
 If four output values are requested, compute @code{aa = cc*a*dd} and\n\
diff --git a/src/DLD-FUNCTIONS/ccolamd.cc b/src/DLD-FUNCTIONS/ccolamd.cc
--- a/src/DLD-FUNCTIONS/ccolamd.cc
+++ b/src/DLD-FUNCTIONS/ccolamd.cc
@@ -124,17 +124,17 @@ continue.  The matrix is OK if @code{@va
 invalid.  @code{@var{stats} (5)} is the rightmost column index that is\n\
 unsorted or contains duplicate entries, or zero if no such column exists.\n\
 @code{@var{stats} (6)} is the last seen duplicate or out-of-order row\n\
 index in the column index given by @code{@var{stats} (5)}, or zero if no\n\
 such row index exists.  @code{@var{stats} (7)} is the number of duplicate\n\
 or out-of-order row indices.  @code{@var{stats} (8 : 20)} is always zero in\n\
 the current version of CCOLAMD (reserved for future use).\n\
 \n\
-The authors of the code itself are S. Larimore, T. Davis (Uni of Florida)\n\
+The authors of the code itself are S. Larimore, T. Davis (Univ. of Florida)\n\
 and S. Rajamanickam in collaboration with J. Bilbert and E. Ng.  Supported\n\
 by the National Science Foundation (DMS-9504974, DMS-9803599, CCR-0203270),\n\
 and a grant from Sandia National Lab.  See\n\
 @url{http://www.cise.ufl.edu/research/sparse} for ccolamd, csymamd, amd,\n\
 colamd, symamd, and other related orderings.\n\
 @seealso{colamd, csymamd}\n\
 @end deftypefn")
 {
diff --git a/src/DLD-FUNCTIONS/cellfun.cc b/src/DLD-FUNCTIONS/cellfun.cc
--- a/src/DLD-FUNCTIONS/cellfun.cc
+++ b/src/DLD-FUNCTIONS/cellfun.cc
@@ -125,18 +125,18 @@ Return the size along the @var{k}-th dim
 Return 1 for elements of @var{class}.\n\
 @end table\n\
 \n\
 Additionally, @code{cellfun} accepts an arbitrary function @var{func}\n\
 in the form of an inline function, function handle, or the name of a\n\
 function (in a character string).  In the case of a character string\n\
 argument, the function must accept a single argument named @var{x}, and\n\
 it must return a string value.  The function can take one or more arguments,\n\
-with the inputs args given by @var{c}, @var{d}, etc.  Equally the function\n\
-can return one or more output arguments.  For example\n\
+with the inputs arguments given by @var{c}, @var{d}, etc.  Equally the\n\
+function can return one or more output arguments.  For example\n\
 \n\
 @example\n\
 @group\n\
 cellfun (@@atan2, @{1, 0@}, @{0, 1@})\n\
      @result{}ans = [1.57080   0.00000]\n\
 @end group\n\
 @end example\n\
 \n\
diff --git a/src/DLD-FUNCTIONS/dasrt.cc b/src/DLD-FUNCTIONS/dasrt.cc
--- a/src/DLD-FUNCTIONS/dasrt.cc
+++ b/src/DLD-FUNCTIONS/dasrt.cc
@@ -300,17 +300,17 @@ This function must have the form\n\
 and return a vector of the constraint function values.\n\
 If the value of any of the constraint functions changes sign, @sc{Dasrt}\n\
 will attempt to stop the integration at the point of the sign change.\n\
 \n\
 If the name of the constraint function is omitted, @code{dasrt} solves\n\
 the same problem as @code{daspk} or @code{dassl}.\n\
 \n\
 Note that because of numerical errors in the constraint functions\n\
-due to roundoff and integration error, @sc{Dasrt} may return false\n\
+due to round-off and integration error, @sc{Dasrt} may return false\n\
 roots, or return the same root at two or more nearly equal values of\n\
 @var{T}.  If such false roots are suspected, the user should consider\n\
 smaller error tolerances or higher precision in the evaluation of the\n\
 constraint functions.\n\
 \n\
 If a root of some constraint function defines the end of the problem,\n\
 the input to @sc{Dasrt} should nevertheless allow integration to a\n\
 point slightly past that root, so that @sc{Dasrt} can locate the root\n\
diff --git a/src/DLD-FUNCTIONS/dmperm.cc b/src/DLD-FUNCTIONS/dmperm.cc
--- a/src/DLD-FUNCTIONS/dmperm.cc
+++ b/src/DLD-FUNCTIONS/dmperm.cc
@@ -142,18 +142,18 @@ With a single output argument @dfn{dmper
 @var{p} such that @code{@var{s} (@var{p},:)} has no zero elements on the\n\
 diagonal.\n\
 \n\
 Called with two or more output arguments, returns the row and column\n\
 permutations, such that @code{@var{s} (@var{p}, @var{q})} is in block\n\
 triangular form.  The values of @var{r} and @var{s} define the boundaries\n\
 of the blocks.  If @var{s} is square then @code{@var{r} == @var{s}}.\n\
 \n\
-The method used is described in: A. Pothen & C.-J. Fan. Computing the block\n\
-triangular form of a sparse matrix. ACM Trans. Math. Software,\n\
+The method used is described in: A. Pothen & C.-J. Fan. @cite{Computing the\n\
+Block Triangular Form of a Sparse Matrix}. ACM Trans. Math. Software,\n\
 16(4):303-324, 1990.\n\
 @seealso{colamd, ccolamd}\n\
 @end deftypefn")
 {
   int nargin = args.length();
   octave_value_list retval;
   
   if (nargin != 1)
diff --git a/src/DLD-FUNCTIONS/eigs.cc b/src/DLD-FUNCTIONS/eigs.cc
--- a/src/DLD-FUNCTIONS/eigs.cc
+++ b/src/DLD-FUNCTIONS/eigs.cc
@@ -291,18 +291,18 @@ the @var{k} eigenvectors corresponding t
 eigenvalues themselves are returned in @var{d} in the form of a\n\
 @var{n}-by-@var{k} matrix, where the elements on the diagonal are the\n\
 eigenvalues.\n\
 \n\
 Given a third return argument @var{flag}, @code{eigs} returns the status\n\
 of the convergence.  If @var{flag} is 0 then all eigenvalues have converged.\n\
 Any other value indicates a failure to converge.\n\
 \n\
-This function is based on the @sc{arpack} package, written by R Lehoucq,\n\
-K Maschhoff, D Sorensen, and C Yang.  For more information see\n\
+This function is based on the @sc{arpack} package, written by R. Lehoucq,\n\
+K. Maschhoff, D. Sorensen, and C. Yang.  For more information see\n\
 @url{http://www.caam.rice.edu/software/ARPACK/}.\n\
 \n\
 @seealso{eig, svds}\n\
 @end deftypefn")
 {
   octave_value_list retval;
 #ifdef HAVE_ARPACK
   int nargin = args.length ();
diff --git a/src/DLD-FUNCTIONS/qz.cc b/src/DLD-FUNCTIONS/qz.cc
--- a/src/DLD-FUNCTIONS/qz.cc
+++ b/src/DLD-FUNCTIONS/qz.cc
@@ -287,17 +287,17 @@ fout (const octave_idx_type& lsize, cons
   else
     return (fabs (p) >= 1 ? 1 : -1);
 }
 
 DEFUN_DLD (qz, args, nargout,
   "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {@var{lambda} =} qz (@var{a}, @var{b})\n\
 Generalized eigenvalue problem @math{A x = s B x},\n\
-@var{QZ} decomposition.  There are three ways to call this function:\n\
+QZ decomposition.  There are three ways to call this function:\n\
 @enumerate\n\
 @item @code{lambda = qz(A,B)}\n\
 \n\
 Computes the generalized eigenvalues\n\
 @tex\n\
 $\\lambda$\n\
 @end tex\n\
 @ifnottex\n\
@@ -327,43 +327,44 @@ generalized eigenvalues of @math{(A - sB
 with @var{Q} and @var{Z} orthogonal (unitary)= @var{I}\n\
 \n\
 @item @code{[AA,BB,Z@{, lambda@}] = qz(A,B,opt)}\n\
 \n\
 As in form [2], but allows ordering of generalized eigenpairs\n\
 for (e.g.) solution of discrete time algebraic Riccati equations.\n\
 Form 3 is not available for complex matrices, and does not compute\n\
 the generalized eigenvectors @var{V}, @var{W}, nor the orthogonal matrix @var{Q}.\n\
+\n\
 @table @var\n\
 @item opt\n\
 for ordering eigenvalues of the GEP pencil.  The leading block\n\
 of the revised pencil contains all eigenvalues that satisfy:\n\
 @table @code\n\
 @item \"N\"\n\
 = unordered (default) \n\
 \n\
 @item \"S\"\n\
-= small: leading block has all |lambda| <=1 \n\
+= small: leading block has all |lambda| <= 1 \n\
 \n\
 @item \"B\"\n\
 = big: leading block has all |lambda| >= 1 \n\
 \n\
 @item \"-\"\n\
 = negative real part: leading block has all eigenvalues\n\
 in the open left half-plane\n\
 \n\
 @item \"+\"\n\
 = non-negative real part: leading block has all eigenvalues\n\
 in the closed right half-plane\n\
 @end table\n\
 @end table\n\
 @end enumerate\n\
 \n\
 Note: qz performs permutation balancing, but not scaling (see balance).\n\
-Order of output arguments was selected for compatibility with @sc{matlab}\n\
+The order of output arguments was selected for compatibility with @sc{matlab}\n\
 \n\
 @seealso{balance, eig, schur}\n\
 @end deftypefn")
 {
   octave_value_list retval;
   int nargin = args.length ();
 
 #ifdef DEBUG
diff --git a/src/DLD-FUNCTIONS/rand.cc b/src/DLD-FUNCTIONS/rand.cc
--- a/src/DLD-FUNCTIONS/rand.cc
+++ b/src/DLD-FUNCTIONS/rand.cc
@@ -353,23 +353,24 @@ rand (\"state\", v)\n\
 @end example\n\
 \n\
 @noindent\n\
 You may also initialize the state vector from an arbitrary vector of\n\
 length <= 625 for @var{v}.  This new state will be a hash based on the\n\
 value of @var{v}, not @var{v} itself.\n\
 \n\
 By default, the generator is initialized from @code{/dev/urandom} if it is\n\
-available, otherwise from cpu time, wall clock time and the current\n\
+available, otherwise from CPU time, wall clock time and the current\n\
 fraction of a second.\n\
 \n\
 To compute the pseudo-random sequence, @code{rand} uses the Mersenne\n\
 Twister with a period of @math{2^{19937}-1} (See M. Matsumoto and T. Nishimura,\n\
-@cite{Mersenne Twister: A 623-dimensionally equidistributed uniform pseudorandom number generator}, ACM Trans. on\n\
-Modeling and Computer Simulation Vol. 8, No. 1, January pp.3-30 1998,\n\
+@cite{Mersenne Twister: A 623-dimensionally equidistributed uniform \n\
+pseudorandom number generator}, ACM Trans. on\n\
+Modeling and Computer Simulation Vol. 8, No. 1, pp. 3-30, January 1998,\n\
 @url{http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/emt.html}).\n\
 Do @strong{not} use for cryptography without securely hashing\n\
 several returned values together, otherwise the generator state\n\
 can be learned after reading 624 consecutive values.\n\
 \n\
 Older versions of Octave used a different random number generator.\n\
 The new generator is used by default\n\
 as it is significantly faster than the old generator, and produces\n\
@@ -497,19 +498,21 @@ DEFUN_DLD (randn, args, ,
 @deftypefnx {Loadable Function} {} randn (\"state\", @var{x})\n\
 @deftypefnx {Loadable Function} {} randn (\"state\", \"reset\")\n\
 @deftypefnx {Loadable Function} {} randn (\"seed\", @var{x})\n\
 @deftypefnx {Loadable Function} {} randn (\"seed\", \"reset\")\n\
 Return a matrix with normally distributed random\n\
 elements having zero mean and variance one.  The arguments are\n\
 handled the same as the arguments for @code{rand}.\n\
 \n\
-By default, @code{randn} uses the Marsaglia and Tsang ``Ziggurat technique'' to\n\
-transform from a uniform to a normal distribution.  (G. Marsaglia and\n\
-W.W. Tsang, @cite{Ziggurat method for generating random variables},\n\
+By default, @code{randn} uses the Marsaglia and Tsang ``Ziggurat technique''\n\
+to transform from a uniform to a normal distribution.\n\
+\n\
+Reference: G. Marsaglia and W.W. Tsang,\n\
+@cite{Ziggurat Method for Generating Random Variables},\n\
 J. Statistical Software, vol 5, 2000,\n\
 @url{http://www.jstatsoft.org/v05/i08/})\n\
 \n\
 @seealso{rand, rande, randg, randp}\n\
 @end deftypefn")
 {
   octave_value retval;
 
@@ -557,21 +560,24 @@ DEFUN_DLD (rande, args, ,
 @deftypefnx {Loadable Function} {} rande (@var{n}, @var{m})\n\
 @deftypefnx {Loadable Function} {} rande (\"state\", @var{x})\n\
 @deftypefnx {Loadable Function} {} rande (\"state\", \"reset\")\n\
 @deftypefnx {Loadable Function} {} rande (\"seed\", @var{x})\n\
 @deftypefnx {Loadable Function} {} rande (\"seed\", \"reset\")\n\
 Return a matrix with exponentially distributed random elements.  The\n\
 arguments are handled the same as the arguments for @code{rand}.\n\
 \n\
-By default, @code{rande} uses the Marsaglia and Tsang ``Ziggurat technique'' to\n\
-transform from a uniform to a exponential distribution.  (G. Marsaglia and\n\
-W.W. Tsang, @cite{Ziggurat method for generating random variables},\n\
+By default, @code{randn} uses the Marsaglia and Tsang ``Ziggurat technique''\n\
+to transform from a uniform to a exponential distribution.\n\
+\n\
+Reference: G. Marsaglia and W.W. Tsang,\n\
+@cite{Ziggurat Method for Generating Random Variables},\n\
 J. Statistical Software, vol 5, 2000,\n\
 @url{http://www.jstatsoft.org/v05/i08/})\n\
+\n\
 @seealso{rand, randn, randg, randp}\n\
 @end deftypefn")
 {
   octave_value retval;
 
   int nargin = args.length ();
 
   retval = do_rand (args, nargin, "rande", "exponential");
@@ -861,29 +867,29 @@ parameter given by the first argument, @
 are handled the same as the arguments for @code{rand}, except for the\n\
 argument @var{l}.\n\
 \n\
 Five different algorithms are used depending on the range of @var{l}\n\
 and whether or not @var{l} is a scalar or a matrix.\n\
 \n\
 @table @asis\n\
 @item For scalar @var{l} <= 12, use direct method.\n\
-Press, et al., 'Numerical Recipes in C', Cambridge University Press, 1992.\n\
+W.H. Press, et al., @cite{Numerical Recipes in C}, Cambridge University Press, 1992.\n\
 @item For scalar @var{l} > 12, use rejection method.[1]\n\
-Press, et al., 'Numerical Recipes in C', Cambridge University Press, 1992.\n\
+W.H. Press, et al., @cite{Numerical Recipes in C}, Cambridge University Press, 1992.\n\
 @item For matrix @var{l} <= 10, use inversion method.[2]\n\
-Stadlober E., et al., WinRand source code, available via FTP.\n\
+E. Stadlober, et al., WinRand source code, available via FTP.\n\
 @item For matrix @var{l} > 10, use patchwork rejection method.\n\
-Stadlober E., et al., WinRand source code, available via FTP, or\n\
-H. Zechner, 'Efficient sampling from continuous and discrete\n\
-unimodal distributions', Doctoral Dissertation, 156pp., Technical\n\
+E. Stadlober, et al., WinRand source code, available via FTP, or\n\
+H. Zechner, @cite{Efficient sampling from continuous and discrete\n\
+unimodal distributions}, Doctoral Dissertation, 156pp., Technical\n\
 University Graz, Austria, 1994.\n\
 @item For @var{l} > 1e8, use normal approximation.\n\
-L. Montanet, et al., 'Review of Particle Properties', Physical Review\n\
-D 50 p1284, 1994\n\
+L. Montanet, et al., @cite{Review of Particle Properties}, Physical Review\n\
+D 50 p1284, 1994.\n\
 @end table\n\
 @seealso{rand, randn, rande, randg}\n\
 @end deftypefn")
 {
   octave_value retval;
 
   int nargin = args.length ();
 
@@ -982,18 +988,18 @@ D 50 p1284, 1994\n\
 */
 
 DEFUN_DLD (randperm, args, ,
   "-*- texinfo -*-\n\
 @deftypefn  {Loadable Function} {} randperm (@var{n})\n\
 @deftypefnx {Loadable Function} {} randperm (@var{n}, @var{m})\n\
 Return a row vector containing a random permutation of @code{1:@var{n}}.\n\
 If @var{m} is supplied, return @var{m} permutations,\n\
-one in each row of a NxM matrix.  The complexity is O(M*N) in both time and\n\
-memory.  The randomization is performed using rand().\n\
+one in each row of a @nospell{NxM} matrix.  The complexity is O(M*N) in both\n\
+time and memory.  The randomization is performed using rand().\n\
 All permutations are equally likely.\n\
 @seealso{perms}\n\
 @end deftypefn")
 {
   int nargin = args.length ();
   octave_value retval;
 
   if (nargin == 1 || nargin == 2)
diff --git a/src/DLD-FUNCTIONS/sparse.cc b/src/DLD-FUNCTIONS/sparse.cc
--- a/src/DLD-FUNCTIONS/sparse.cc
+++ b/src/DLD-FUNCTIONS/sparse.cc
@@ -202,17 +202,17 @@ to have a common size.\n\
      }
 
    return retval;
 }
 
 DEFUN_DLD (spalloc, args, ,
     "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {@var{s} =} spalloc (@var{m}, @var{n}, @var{nz})\n\
-Creates a @var{m}-by-@var{n} sparse matrix with preallocated space for at most\n\
+Creates a @var{m}-by-@var{n} sparse matrix with pre-allocated space for at most\n\
 @var{nz} nonzero elements.  This is useful for building the matrix incrementally\n\
 by a sequence of indexed assignments.  Subsequent indexed assignments will reuse\n\
 the pre-allocated memory, provided they are of one of the simple forms\n\
 \n\
 @itemize\n\
 @item @code{@var{s}(I:J) = @var{x}}\n\
 @item @code{@var{s}(:,I:J) = @var{x}}\n\
 @item @code{@var{s}(K:L,I:J) = @var{x}}\n\
@@ -225,17 +225,17 @@ the pre-allocated memory, provided they 
 @item after the assignment, nnz(@var{S}) does not exceed @var{nz}.\n\
 @item no index is out of bounds.\n\
 @end itemize\n\
 \n\
 Partial movement of data may still occur, but in general the assignment will be more\n\
 memory and time-efficient under these circumstances.  In particular, it is possible\n\
 to efficiently build a pre-allocated sparse matrix from contiguous block of columns.\n\
 \n\
-The amount of preallocated memory for a given matrix may be queried using the function\n\
+The amount of pre-allocated memory for a given matrix may be queried using the function\n\
 @code{nzmax}.\n\
 @seealso{nzmax, sparse}\n\
 @end deftypefn")
 {
    octave_value retval;
    int nargin = args.length ();
 
    if (nargin == 2 || nargin == 3)
diff --git a/src/DLD-FUNCTIONS/sqrtm.cc b/src/DLD-FUNCTIONS/sqrtm.cc
--- a/src/DLD-FUNCTIONS/sqrtm.cc
+++ b/src/DLD-FUNCTIONS/sqrtm.cc
@@ -212,19 +212,19 @@ do_sqrtm (const octave_value& arg)
   return retval;
 }
 
 DEFUN_DLD (sqrtm, args, nargout,
  "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {[@var{result}, @var{error_estimate}] =} sqrtm (@var{a})\n\
 Compute the matrix square root of the square matrix @var{a}.\n\
 \n\
-Ref: Nicholas J. Higham.  A new sqrtm for @sc{matlab}.  Numerical Analysis\n\
-Report No. 336, Manchester Centre for Computational Mathematics,\n\
-Manchester, England, January 1999.\n\
+Ref: N.J. Higham.  @cite{A New sqrtm for @sc{matlab}}.  Numerical\n\
+Analysis Report No. 336, Manchester @nospell{Centre} for Computational\n\
+Mathematics, Manchester, England, January 1999.\n\
 @seealso{expm, logm}\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
   int nargin = args.length ();
 
   if (nargin != 1)
diff --git a/src/DLD-FUNCTIONS/symrcm.cc b/src/DLD-FUNCTIONS/symrcm.cc
--- a/src/DLD-FUNCTIONS/symrcm.cc
+++ b/src/DLD-FUNCTIONS/symrcm.cc
@@ -424,22 +424,22 @@ Return a permutation vector @var{p} such
 closer to the diagonal than @var{S}.  This is a good preordering for LU\n\
 or Cholesky factorization of matrices that come from 'long, skinny'\n\
 problems.  It works for both symmetric and asymmetric @var{S}.\n\
 \n\
 The algorithm represents a heuristic approach to the NP-complete\n\
 bandwidth minimization problem.  The implementation is based in the\n\
 descriptions found in\n\
 \n\
-E. Cuthill, J. McKee: Reducing the Bandwidth of Sparse Symmetric\n\
-Matrices. Proceedings of the 24th ACM National Conference, 157--172\n\
+E. Cuthill, J. McKee. @cite{Reducing the Bandwidth of Sparse Symmetric\n\
+Matrices}. Proceedings of the 24th ACM National Conference, 157--172\n\
 1969, Brandon Press, New Jersey.\n\
 \n\
-Alan George, Joseph W. H. Liu: Computer Solution of Large Sparse\n\
-Positive Definite Systems, Prentice Hall Series in Computational\n\
+A. George, J.W.H. Liu. @cite{Computer Solution of Large Sparse\n\
+Positive Definite Systems}, Prentice Hall Series in Computational\n\
 Mathematics, ISBN 0-13-165274-5, 1981.\n\
 \n\
 @seealso{colperm, colamd, symamd}\n\
 @end deftypefn")
 {
   octave_value retval;
   int nargin = args.length ();
 
diff --git a/src/dirfns.cc b/src/dirfns.cc
--- a/src/dirfns.cc
+++ b/src/dirfns.cc
@@ -542,17 +542,17 @@ system-dependent error message.\n\
 }
 
 DEFUN (glob, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} glob (@var{pattern})\n\
 Given an array of pattern strings (as a char array or a cell array) in\n\
 @var{pattern}, return a cell array of file names that match any of\n\
 them, or an empty cell array if no patterns match.  The pattern strings are \n\
-interpreted as filename globbing patterns (as they are used by unix shells).\n\
+interpreted as filename globbing patterns (as they are used by Unix shells).\n\
 Within a pattern\n\
 @table @code\n\
 @itemx *\n\
 matches any string, including the null string,\n\
 @itemx ?\n\
 matches any single character, and\n\
 @item [@dots{}]\n\
 matches any of the enclosed characters.\n\
diff --git a/src/file-io.cc b/src/file-io.cc
--- a/src/file-io.cc
+++ b/src/file-io.cc
@@ -257,17 +257,17 @@ DEFUN (fflush, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} fflush (@var{fid})\n\
 Flush output to @var{fid}.  This is useful for ensuring that all\n\
 pending output makes it to the screen before some other event occurs.\n\
 For example, it is always a good idea to flush the standard output\n\
 stream before calling @code{input}.\n\
 \n\
 @code{fflush} returns 0 on success and an OS dependent error value\n\
-(@minus{}1 on unix) on error.\n\
+(@minus{}1 on Unix) on error.\n\
 @seealso{fopen, fclose}\n\
 @end deftypefn")
 {
   octave_value retval = -1;
 
   int nargin = args.length ();
 
   if (nargin == 1)
diff --git a/src/syscalls.cc b/src/syscalls.cc
--- a/src/syscalls.cc
+++ b/src/syscalls.cc
@@ -442,17 +442,17 @@ Open for reading and writing.\n\
 \n\
 @item O_APPEND\n\
 Append on each write.\n\
 \n\
 @item O_CREAT\n\
 Create the file if it does not exist.\n\
 \n\
 @item O_NONBLOCK\n\
-Nonblocking mode.\n\
+Non-blocking mode.\n\
 \n\
 @item O_SYNC\n\
 Wait for writes to complete.\n\
 \n\
 @item O_ASYNC\n\
 Asynchronous I/O.\n\
 @end vtable\n\
 \n\
