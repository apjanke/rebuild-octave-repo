# HG changeset patch
# User Jacob Dawid <jacob.dawid@googlemail.com>
# Date 1311958679 -7200
#      Fri Jul 29 18:57:59 2011 +0200
# Node ID dfbc6a12c6fb9a9420319b2d18203e84eeac702d
# Parent  324adf6109e73cde58de09267a9d000d7e3ee89f
Removed all occurences of ProcessInfo.

diff --git a/gui/src/terminal/Session.cpp b/gui/src/terminal/Session.cpp
--- a/gui/src/terminal/Session.cpp
+++ b/gui/src/terminal/Session.cpp
@@ -36,17 +36,16 @@
 #include <QtCore/QFile>
 #include <QtCore/QRegExp>
 #include <QtCore/QStringList>
 #include <QtCore/QDate>
 
 #include "kprocess.h"
 #include "kptydevice.h"
 
-//#include "ProcessInfo.h"
 #include "Pty.h"
 #include "TerminalDisplay.h"
 #include "ShellCommand.h"
 #include "Vt102Emulation.h"
 
 int
   Session::lastSessionId = 0;
 
@@ -257,35 +256,16 @@ Session::setInitialWorkingDirectory (con
 }
 
 void
 Session::setArguments (const QStringList & arguments)
 {
   _arguments = ShellCommand::expand (arguments);
 }
 
-/*
-QString
-Session::currentWorkingDirectory ()
-{
-  // only returned cached value
-  //if (_currentWorkingDir.isEmpty ())
-  //  updateWorkingDirectory ();
-  return _currentWorkingDir;
-}
-*/
-/*
-ProcessInfo *
-Session::updateWorkingDirectory ()
-{
-  ProcessInfo *process = getProcessInfo ();
-  _currentWorkingDir = process->validCurrentDir ();
-  return process;
-}*/
-
 QList < TerminalDisplay * >Session::views () const
 {
   return _views;
 }
 
 void
 Session::addView (TerminalDisplay * widget)
 {
@@ -923,107 +903,16 @@ Session::title (TitleRole role) const
   if (role == NameRole)
     return _nameTitle;
   else if (role == DisplayedTitleRole)
     return _displayTitle;
   else
     return QString ();
 }
 
-/*
-ProcessInfo *
-Session::getProcessInfo ()
-{
-  ProcessInfo *process;
-
-  if (isForegroundProcessActive ())
-    process = _foregroundProcessInfo;
-  else
-    {
-      updateSessionProcessInfo ();
-      process = _sessionProcessInfo;
-    }
-
-  return process;
-}*/
-
-
-void
-Session::updateSessionProcessInfo ()
-{
-  /*
-  Q_ASSERT (_shellProcess);
-  if (!_sessionProcessInfo)
-    {
-      _sessionProcessInfo = ProcessInfo::newInstance (processId ());
-      _sessionProcessInfo->setUserHomeDir ();
-    }
-  _sessionProcessInfo->update ();*/
-}
-
-bool
-Session::updateForegroundProcessInfo ()
-{
-  /*
-  bool valid = (_foregroundProcessInfo != 0);
-
-  // has foreground process changed?
-  Q_ASSERT (_shellProcess);
-  int pid = _shellProcess->foregroundProcessGroup ();
-  if (pid != _foregroundPid)
-    {
-      if (valid)
-	delete _foregroundProcessInfo;
-      _foregroundProcessInfo = ProcessInfo::newInstance (pid);
-      _foregroundPid = pid;
-      valid = true;
-    }
-
-  if (valid)
-    {
-      _foregroundProcessInfo->update ();
-      valid = _foregroundProcessInfo->isValid ();
-    }
-
-  return valid;*/
-  return true;
-}
-
-bool
-Session::isRemote ()
-{/*
-  ProcessInfo *process = getProcessInfo ();
-
-  bool ok = false;
-  return (process->name (&ok) == "ssh" && ok);
-  */
-  return false;
-}
-
-QString
-Session::getDynamicTitle ()
-{/*
-  // update current directory from process
-  ProcessInfo *process = updateWorkingDirectory ();
-
-  // format tab titles using process info
-  bool ok = false;
-  QString title;
-  if (process->name (&ok) == "ssh" && ok)
-    {
-      SSHProcessInfo sshInfo (*process);
-      title = sshInfo.format (tabTitleFormat (Session::RemoteTabTitle));
-    }
-  else
-    title = process->format (tabTitleFormat (Session::LocalTabTitle));
-
-  return title;*/
-  return "";
-}
-
 void
 Session::setIconName (const QString & iconName)
 {
   if (iconName != _iconName)
     {
       _iconName = iconName;
       emit titleChanged ();
     }
@@ -1231,54 +1120,16 @@ Session::tabTitleFormat (int context) co
       return this->tabTitleFormat (Session::LocalTabTitle);
     case (1):
       return this->tabTitleFormat (Session::RemoteTabTitle);
     default:
       return QString ();
     }
 }
 
-/*
-int
-Session::foregroundProcessId ()
-{
-  int pid;
-
-  bool ok = false;
-  pid = getProcessInfo ()->pid (&ok);
-  if (!ok)
-    pid = -1;
-
-  return pid;
-}*/
-
-bool
-Session::isForegroundProcessActive ()
-{
-  // foreground process info is always updated after this
-  return updateForegroundProcessInfo () && (processId () != _foregroundPid);
-}
-
-/*
-QString
-Session::foregroundProcessName ()
-{
-  QString name;
-
-  if (updateForegroundProcessInfo ())
-    {
-      bool ok = false;
-      name = _foregroundProcessInfo->name (&ok);
-      if (!ok)
-	name.clear ();
-    }
-
-  return name;
-}*/
-
 SessionGroup::SessionGroup (QObject * parent):QObject (parent), _masterMode (0)
 {
 }
 
 SessionGroup::~SessionGroup ()
 {
 }
 
diff --git a/gui/src/terminal/Session.h b/gui/src/terminal/Session.h
--- a/gui/src/terminal/Session.h
+++ b/gui/src/terminal/Session.h
@@ -33,17 +33,16 @@
 
 // Konsole
 #include "History.h"
 
 class KProcess;
 class KUrl;
 class Emulation;
 class Pty;
-//class ProcessInfo;
 class TerminalDisplay;
   //class ZModemDialog;
 /**
  * Represents a terminal session consisting of a pseudo-teletype and a terminal emulation.
  * The pseudo-teletype (or PTY) handles I/O between the terminal process and Konsole.
  * The terminal emulation ( Emulation and subclasses ) processes the output stream from the
  * PTY and produces a character image which is then shown on views connected to the session.
  *
@@ -597,20 +596,16 @@ private:
   bool kill (int signal);
   // print a warning message in the terminal.  This is used
   // if the program fails to start, or if the shell exits in 
   // an unsuccessful manner
   void terminalWarning (const QString & message);
   // checks that the binary 'program' is available and can be executed
   // returns the binary name if available or an empty string otherwise
   QString checkProgram (const QString & program) const;
-  //ProcessInfo *getProcessInfo ();
-  void updateSessionProcessInfo ();
-  bool updateForegroundProcessInfo ();
-  //ProcessInfo *updateWorkingDirectory ();
 
   QUuid _uniqueIdentifier;	// SHELL_SESSION_ID
 
   Pty *_shellProcess;
   Emulation *_emulation;
 
   QList < TerminalDisplay * >_views;
 
@@ -641,18 +636,16 @@ private:
   QStringList _arguments;
 
   QStringList _environment;
   int _sessionId;
 
   QString _initialWorkingDir;
   QString _currentWorkingDir;
 
-  //ProcessInfo *_sessionProcessInfo;
-  //ProcessInfo *_foregroundProcessInfo;
   int _foregroundPid;
 
   // ZModem
   //  bool           _zmodemBusy;
   //  KProcess*      _zmodemProc;
   //  ZModemDialog*  _zmodemProgress;
 
   // Color/Font Changes by ESC Sequences
