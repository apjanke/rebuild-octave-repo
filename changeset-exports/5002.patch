# HG changeset patch
# User jwe
# Date 1095297099 0
#      Thu Sep 16 01:11:39 2004 +0000
# Node ID d894b803ccb5eab816bb65629cf247870da9cec8
# Parent  6690d8cd9beec8fb9701614d646bb1586696b281
[project @ 2004-09-16 01:11:39 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,15 @@
 2004-09-15  John W. Eaton  <jwe@octave.org>
 
+	* OPERATORS/op-int-conv.cc: Define and install bool to int
+	conversions.
+	* OPERATORS/op-double-conv.cc: Define and install bool to double
+	conversions.
+
 	* ov.cc (octave_value::assign): Handle subsref for containers.
 	* oct-lvalue.cc (octave_lvale::value): Likewise.
 
 	* DLD-FUNCTIONS/sort.cc (mx_sort): Return octave_value, not
 	octave_value list.
 
 2004-09-15  David Bateman  <dbateman@free.fr>
 
diff --git a/src/OPERATORS/op-double-conv.cc b/src/OPERATORS/op-double-conv.cc
--- a/src/OPERATORS/op-double-conv.cc
+++ b/src/OPERATORS/op-double-conv.cc
@@ -34,16 +34,18 @@ Software Foundation, 59 Temple Place - S
 #include "ov-int8.h"
 #include "ov-int16.h"
 #include "ov-int32.h"
 #include "ov-int64.h"
 #include "ov-uint8.h"
 #include "ov-uint16.h"
 #include "ov-uint32.h"
 #include "ov-uint64.h"
+#include "ov-bool.h"
+#include "ov-bool-mat.h"
 #include "ov-scalar.h"
 #include "ov-re-mat.h"
 #include "ov-typeinfo.h"
 #include "ops.h"
 
 // conversion ops
 
 DEFDBLCONVFN (int8_matrix_to_double_matrix, int8_matrix, int8_array)
@@ -61,16 +63,19 @@ DEFDBLCONVFN (int16_scalar_to_double_mat
 DEFDBLCONVFN (int32_scalar_to_double_matrix, int32_scalar, int32_array)
 DEFDBLCONVFN (int64_scalar_to_double_matrix, int64_scalar, int64_array)
 
 DEFDBLCONVFN (uint8_scalar_to_double_matrix, uint8_scalar, uint8_array)
 DEFDBLCONVFN (uint16_scalar_to_double_matrix, uint16_scalar, uint16_array)
 DEFDBLCONVFN (uint32_scalar_to_double_matrix, uint32_scalar, uint32_array)
 DEFDBLCONVFN (uint64_scalar_to_double_matrix, uint64_scalar, uint64_array)
 
+DEFDBLCONVFN (bool_matrix_to_double_matrix, bool_matrix, bool_array)
+DEFDBLCONVFN (bool_scalar_to_double_matrix, bool, bool_array)
+
 DEFDBLCONVFN (double_scalar_to_double_matrix, scalar, array)
 
 void
 install_double_conv_ops (void)
 {
   INSTALL_CONVOP (octave_int8_matrix, octave_matrix, int8_matrix_to_double_matrix);
   INSTALL_CONVOP (octave_int16_matrix, octave_matrix, int16_matrix_to_double_matrix);
   INSTALL_CONVOP (octave_int32_matrix, octave_matrix, int32_matrix_to_double_matrix);
@@ -86,16 +91,19 @@ install_double_conv_ops (void)
   INSTALL_CONVOP (octave_int32_scalar, octave_matrix, int32_scalar_to_double_matrix);
   INSTALL_CONVOP (octave_int64_scalar, octave_matrix, int64_scalar_to_double_matrix);
 
   INSTALL_CONVOP (octave_uint8_scalar, octave_matrix, uint8_scalar_to_double_matrix);
   INSTALL_CONVOP (octave_uint16_scalar, octave_matrix, uint16_scalar_to_double_matrix);
   INSTALL_CONVOP (octave_uint32_scalar, octave_matrix, uint32_scalar_to_double_matrix);
   INSTALL_CONVOP (octave_uint64_scalar, octave_matrix, uint64_scalar_to_double_matrix);
 
+  INSTALL_CONVOP (octave_bool_matrix, octave_matrix, bool_matrix_to_double_matrix);
+  INSTALL_CONVOP (octave_bool, octave_matrix, bool_scalar_to_double_matrix);
+
   INSTALL_CONVOP (octave_scalar, octave_matrix, double_scalar_to_double_matrix);
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
-*/
+p*/
diff --git a/src/OPERATORS/op-int-conv.cc b/src/OPERATORS/op-int-conv.cc
--- a/src/OPERATORS/op-int-conv.cc
+++ b/src/OPERATORS/op-int-conv.cc
@@ -35,16 +35,18 @@ Software Foundation, 59 Temple Place - S
 #include "ov-int16.h"
 #include "ov-int32.h"
 #include "ov-int64.h"
 #include "ov-uint8.h"
 #include "ov-uint16.h"
 #include "ov-uint32.h"
 #include "ov-uint64.h"
 #include "ov-range.h"
+#include "ov-bool.h"
+#include "ov-bool-mat.h"
 #include "ov-scalar.h"
 #include "ov-re-mat.h"
 #include "ov-typeinfo.h"
 #include "ops.h"
 
 // conversion ops
 
 DEFCONVFN (scalar_to_int8, scalar, int8)
@@ -62,16 +64,36 @@ DEFCONVFN (matrix_to_int16, matrix, int1
 DEFCONVFN (matrix_to_int32, matrix, int32)
 DEFCONVFN (matrix_to_int64, matrix, int64)
 
 DEFCONVFN (matrix_to_uint8, matrix, uint8)
 DEFCONVFN (matrix_to_uint16, matrix, uint16)
 DEFCONVFN (matrix_to_uint32, matrix, uint32)
 DEFCONVFN (matrix_to_uint64, matrix, uint64)
 
+DEFCONVFN (bool_to_int8, bool, int8)
+DEFCONVFN (bool_to_int16, bool, int16)
+DEFCONVFN (bool_to_int32, bool, int32)
+DEFCONVFN (bool_to_int64, bool, int64)
+
+DEFCONVFN (bool_to_uint8, bool, uint8)
+DEFCONVFN (bool_to_uint16, bool, uint16)
+DEFCONVFN (bool_to_uint32, bool, uint32)
+DEFCONVFN (bool_to_uint64, bool, uint64)
+
+DEFCONVFN (bool_matrix_to_int8, bool_matrix, int8)
+DEFCONVFN (bool_matrix_to_int16, bool_matrix, int16)
+DEFCONVFN (bool_matrix_to_int32, bool_matrix, int32)
+DEFCONVFN (bool_matrix_to_int64, bool_matrix, int64)
+
+DEFCONVFN (bool_matrix_to_uint8, bool_matrix, uint8)
+DEFCONVFN (bool_matrix_to_uint16, bool_matrix, uint16)
+DEFCONVFN (bool_matrix_to_uint32, bool_matrix, uint32)
+DEFCONVFN (bool_matrix_to_uint64, bool_matrix, uint64)
+
 DEFCONVFN (range_to_int8, range, int8)
 DEFCONVFN (range_to_int16, range, int16)
 DEFCONVFN (range_to_int32, range, int32)
 DEFCONVFN (range_to_int64, range, int64)
 
 DEFCONVFN (range_to_uint8, range, uint8)
 DEFCONVFN (range_to_uint16, range, uint16)
 DEFCONVFN (range_to_uint32, range, uint32)
@@ -140,16 +162,18 @@ INT_CONV_FUNCTIONS (uint64)
   INSTALL_CONVOP (octave_ ## tfrom, octave_uint32_matrix, tfrom ## _to_uint32) \
   INSTALL_CONVOP (octave_ ## tfrom, octave_uint64_matrix, tfrom ## _to_uint64)
 
 void
 install_int_conv_ops (void)
 {
   INSTALL_CONVOPS (scalar)
   INSTALL_CONVOPS (matrix)
+  INSTALL_CONVOPS (bool)
+  INSTALL_CONVOPS (bool_matrix)
   INSTALL_CONVOPS (range)
 
   INSTALL_INT_CONV_FUNCTIONS (int8)
   INSTALL_INT_CONV_FUNCTIONS (int16)
   INSTALL_INT_CONV_FUNCTIONS (int32)
   INSTALL_INT_CONV_FUNCTIONS (int64)
 
   INSTALL_INT_CONV_FUNCTIONS (uint8)
