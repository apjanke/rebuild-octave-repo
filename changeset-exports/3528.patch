# HG changeset patch
# User jwe
# Date 949489609 0
#      Wed Feb 02 11:06:49 2000 +0000
# Node ID 19d6fea99ba105659df08a9e293669f92bbf0f09
# Parent  c7084a0fbddd6535d0f584f076280957d27b3e7f
[project @ 2000-02-02 11:05:12 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,13 @@
 2000-02-02  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* defun-int.h (UNDERSCORIFY): New macro.
+	(DEFCONST_INTERNAL, DEFCONSTX_INTERNAL): Use it.
+
 	* data.cc (Fis_list): Fix continuation char.
 
 	* Map.cc (CHptr_to_index, goodCHptr): Delete static decl.
 
 	* ov.h (unary_op, binary_op, assign_op): Prepend `op_' to elts.
 	Change all usses
 
 	* All source files: Sprinkle with std:: qualifier as needed.
diff --git a/src/Map.cc b/src/Map.cc
--- a/src/Map.cc
+++ b/src/Map.cc
@@ -114,17 +114,18 @@ Map<C>::error (const std::string& msg) c
 
 template <class C>
 int
 goodCHptr (CHNode<C> *t)
 {
   return (((X_CAST (unsigned, t)) & 1) == 0);
 }
 
-static void *
+template <class C>
+void *
 index_to_CHptr (int i)
 {
   return X_CAST (void *, (i << 1) + 1);
 }
 
 template <class C>
 unsigned int
 CHptr_to_index (CHNode<C> *t)
diff --git a/src/defun-int.h b/src/defun-int.h
--- a/src/defun-int.h
+++ b/src/defun-int.h
@@ -154,23 +154,26 @@ typedef bool (*octave_dld_fcn_installer)
   install_builtin_variable (name, octave_value (defn), protect, \
 			    (chg_fcn != 0), chg_fcn, doc)
 
 // How builtin variables are actually installed.
 
 #define INSTALL_CONST(name, sname, defn, protect, doc) \
   install_builtin_constant (name, octave_value (defn), protect, doc)
 
+#define UNDERSCORIFY(name) \
+  "__" ## name ## "__"
+
 #define DEFCONST_INTERNAL(name, defn, doc) \
   INSTALL_CONST (#name, SBV_ ## name, defn, false, doc); \
-  INSTALL_CONST ("__" ## #name ## "__", XSBV_ ## name, defn, true, doc)
+  INSTALL_CONST (UNDERSCORIFY (#name), XSBV_ ## name, defn, true, doc)
 
 #define DEFCONSTX_INTERNAL(name, sname, defn, doc) \
   INSTALL_CONST (name, sname, defn, false, doc); \
-  INSTALL_CONST ("__" ## name ## "__", X ## sname, defn, true, doc)
+  INSTALL_CONST (UNDERSCORIFY (name), X ## sname, defn, true, doc)
 
 // How mapper functions are actually installed.
 
 #define DEFUN_MAPPER_INTERNAL(name, ch_map, d_b_map, c_b_map, d_d_map, \
 			      d_c_map, c_c_map, lo, hi, \
 			      can_ret_cmplx_for_real, doc) \
   install_builtin_mapper \
     (new octave_mapper (ch_map, d_b_map, c_b_map, d_d_map, d_c_map, \
