# HG changeset patch
# User Rik <rik@octave.org>
# Date 1541098795 25200
#      Thu Nov 01 11:59:55 2018 -0700
# Node ID 68350e746ff29e82f0e65f721adb9b2997bac30a
# Parent  94fecd437d9ca241bec96d4cf8a82daa9045a7d8
Allow a struct of PROP/VALUE pairs as input to uiXXX functions (bug #44672).

* __uiobject_split_args__.m: Use isstruct() in input validation to allow struct
as first input.  Remove structs from list of input arguments before doing test
that PROP/VALUE arguments occur in pairs.  Search all input args, not just the
even ones, for the property "parent".

diff --git a/scripts/gui/private/__uiobject_split_args__.m b/scripts/gui/private/__uiobject_split_args__.m
--- a/scripts/gui/private/__uiobject_split_args__.m
+++ b/scripts/gui/private/__uiobject_split_args__.m
@@ -28,35 +28,36 @@ function [parent, args] = __uiobject_spl
   parent = [];
   args = {};
   offset = 1;
 
   if (! isempty (in_args))
     if (ishghandle (in_args{1}))
       parent = in_args{1};
       offset = 2;
-    elseif (! ischar (in_args{1}))
+    elseif (! ischar (in_args{1}) && ! isstruct (in_args{1}))
       error ("%s: invalid parent handle.", who);
     endif
 
     args = in_args(offset:end);
   endif
 
-  if (rem (length (args), 2))
+  numpairs = numel (args) - sum (cellfun ("isclass", args, "struct"));
+  if (rem (numpairs, 2) == 1)
     error ("%s: PROPERTY/VALUE arguments must occur in pairs", who);
   endif
 
   if (! isempty (args))
-    i = find (strcmpi (args(1:2:end), "parent"), 1, "first");
-    if (! isempty (i) && length (args) >= 2*i)
-      parent = args{2*i};
+    i = find (strcmpi (args, "parent"), 1, "first");
+    if (! isempty (i) && numel (args) > i)
+      parent = args{i+1};
       if (! ishghandle (parent))
         error ("%s: invalid parent handle.", who);
       endif
-      args([2*i-1, 2*i]) = [];
+      args(i:i+1) = [];
     endif
   endif
 
   if (! isempty (parent))
     if (! isempty (parent_type)
         && isempty (find (strcmpi (get (parent, "type"), parent_type))))
       error ("%s: invalid parent, the parent type must be: %s", ...
              who, sprintf ("%s, ", parent_type{:})(1:end-2));
