# HG changeset patch
# User jwe
# Date 943067145 0
#      Sat Nov 20 03:05:45 1999 +0000
# Node ID fac05a83b4c5b99abaca3f2f6ab70de2844ffe37
# Parent  9db3ff0b69134589126f19bb126e801ef031055e
[project @ 1999-11-20 03:05:42 by jwe]

diff --git a/doc/ChangeLog b/doc/ChangeLog
--- a/doc/ChangeLog
+++ b/doc/ChangeLog
@@ -1,8 +1,12 @@
+1999-11-19  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* interpreter/Makefile.in (%.texi : %.txi): Suppress command echo.
+
 1999-10-21  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* interpreter/Makefile.in (dist): Remove .texi files first, so
 	they will have timestamps newer than the $(DOCSTRINGS) files.
 	(%.texi : %.txi): Use mv instead of move-if-change.
 
 	* interpreter/Map-s.cc: New file.
 	* interpreter/munge-texi.cc: Use old libg++ Map class instead of
diff --git a/doc/interpreter/Makefile.in b/doc/interpreter/Makefile.in
--- a/doc/interpreter/Makefile.in
+++ b/doc/interpreter/Makefile.in
@@ -71,20 +71,21 @@ DOCSTRINGS = $(TOPDIR)/src/DOCSTRINGS $(
 munge-texi: munge-texi.o Map-s.o
 	$(CXX) $(CPPFLAGS) $(ALL_CXXFLAGS) $(ALL_LDFLAGS) -o $@ $^
 
 # Kluge: if the DOCSTRING files are present, assume they are current.
 $(DOCSTRINGS):
 	$(MAKE) -C $(dir $@) $(notdir $@)
 
 %.texi : %.txi
-	./munge-texi \
+	@echo making $@ from $<
+	@./munge-texi \
 	  -d $(TOPDIR)/src/DOCSTRINGS \
 	  -d $(TOPDIR)/scripts/DOCSTRINGS < $< > $@.t
-	mv $@.t $@
+	@mv $@.t $@
 
 octave.info: $(MAIN_TEXINFO) $(SUB_TEXINFO) ../conf.texi
 	-makeinfo -I$(srcdir) -I$(srcdir)/.. $<
 
 octave.dvi: $(MAIN_TEXINFO) $(SUB_TEXINFO) ../conf.texi
 	-TEXINPUTS="$(srcdir):$(srcdir)/..:$(TEXINPUTS):"; \
 	  export TEXINPUTS; \
 	  $(TEXI2DVI) $<
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,10 +1,12 @@
 1999-11-19  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* Makefile.in (DOCSTRINGS): Don't echo $(ALL_M_FILES).
+
 	* strings/blanks.m: Texinfoize doc string.
 	* strings/strcat.m: Ditto.
 	* strings/str2mat.m: Ditto.
 	* strings/deblank.m: Ditto.
 	* strings/findstr.m: Ditto.
 	* strings/index.m: Ditto.
 	* strings/rindex.m: Ditto.
 	* strings/split.m: Ditto.
diff --git a/scripts/Makefile.in b/scripts/Makefile.in
--- a/scripts/Makefile.in
+++ b/scripts/Makefile.in
@@ -44,17 +44,16 @@ all: $(SUBDIRS) DOCSTRINGS
 .PHONY: all
 
 $(SUBDIRS):
 	echo making all in $@
 	$(MAKE) -C $@ all
 .PHONY: $(SUBDIRS)
 
 DOCSTRINGS: gethelp mkdoc $(ALL_M_FILES)
-	echo $(ALL_M_FILES)
 	$(srcdir)/mkdoc $(srcdir) > $@.t
 	mv $@.t $@
 
 install install-strip uninstall clean mostlyclean distclean maintainer-clean::
 	@$(subdir-for-command)
 .PHONY: install install-strip uninstall
 .PHONY: clean mostlyclean distclean maintainer-clean
 
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,24 +1,30 @@
 1999-11-19  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* defun-int.h (DEFUN_DLD_INTERNAL): New macro.
+	* defun-dld.h [MAKE_BUILTINS] (DEFUN_DLD): Simply expand to
+	DEFUN_DLD_INTERNAL.
+	* mkbuiltins: Generate code to define DEFUN_DLD_INTERNAL.
+	* mkgendoc: Likewise.
+
 	* Makefile.in (gendoc.o): Don't optimize when creating gendoc.
+	(%.dc : %.cc): Delete rule.
 
 	* pt-decl.cc (Vdefault_global_variable_value): Texinofize doc string.
 	* variables.cc (Fclear, Fdocument, Fexist, Fis_global, Fwho): Ditto.
 	* help.cc (Ftype, Fwhich): Ditto.
 	* ov.cc (Vstruct_levels_to_print, Vimplicit_str_to_num_ok): Ditto.
 	* data.cc (Fis_struct, Fstruct_elements, Fstruct_constains): Ditto.
 	* strfns.cc (Fisstr, Fsetstr): Ditto.
 	* pt-mat.cc: (Fimplicit_num_to_str_ok, Fstring_fill_char): Ditto.
 	* utils.cc (Fundo_string_escapes): Ditto.
 	* mappers.cc: (Fisalnum, Fisalpha, Fisascii, Fiscntrl, Fisdigit,
 	Fisgraph, Fislower, Fisprint, Fispunct, Fisspace, Fisupper,
 	Fisxdigit, Ftoascii, Ftolower, Ftoupper): Ditto.
-	
 
 1999-11-18  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* syscalls.cc (symbols_of_syscalls): Use DEFCONSTX to define
 	Octave constants for C macros like O_WRONLY.
 
 	* oct-lvalue.cc (octave_lvalue::set_index): Disallow expressions
 	like x(i)(j) = rhs.
diff --git a/src/Makefile.in b/src/Makefile.in
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -22,22 +22,16 @@ PT_FLAGS = -fexternal-templates -fno-imp
 CXXFLAGS_NO_PT_FLAGS = $(filter-out $(PT_FLAGS), $(ALL_CXXFLAGS))
 
 %.df : %.cc
 	@echo making $@ from $<
 	@$(CXXCPP) -c $(CPPFLAGS) $(CXXFLAGS_NO_PT_FLAGS) -DMAKE_BUILTINS $< \
 	  | $(srcdir)/mkdefs > $@.t
 	@mv $@.t $@
 
-%.dc : %.cc
-	@echo making $@ from $<
-	@$(CXXCPP) -c $(CPPFLAGS) $(CXXFLAGS_NO_PT_FLAGS) -DMAKE_DOC $< \
-	  | $(srcdir)/mkdocs > $@.t
-	@mv $@.t $@
-
 # How to make a .oct file from a .o file:
 
 ifeq ($(OCTAVE_LITE), true)
   ifdef CXXPICFLAG
     %.oct : pic/%.o
 	  $(SH_LD) $(SH_LDFLAGS) -o $@ $<
   else
     %.oct : %.o
diff --git a/src/defun-dld.h b/src/defun-dld.h
--- a/src/defun-dld.h
+++ b/src/defun-dld.h
@@ -36,22 +36,18 @@ Software Foundation, 59 Temple Place - S
 // functions, this is the same as DEFUN, except that it will generate
 // an extra externally visible function.
 //
 // The first DECLARE_FUN is for the benefit of the installer function
 // and the second is for the definition of the function.
 
 #if defined (MAKE_BUILTINS)
 
-#if ! (defined (OCTAVE_LITE) && defined (WITH_DYNAMIC_LINKING))
-
 #define DEFUN_DLD(name, args_name, nargout_name, doc) \
-  DEFUN_INTERNAL (name, args_name, nargout_name, 0, doc)
-
-#endif
+  DEFUN_DLD_INTERNAL (name, args_name, nargout_name, 0, doc)
 
 #else
 
 #define DEFUN_DLD(name, args_name, nargout_name, doc) \
   DECLARE_FUN (name, args_name, nargout_name); \
   DEFINE_FUN_INSTALLER_FUN (name, doc) \
   DECLARE_FUN (name, args_name, nargout_name)
 
diff --git a/src/defun-int.h b/src/defun-int.h
--- a/src/defun-int.h
+++ b/src/defun-int.h
@@ -84,23 +84,32 @@ typedef bool (*octave_dld_fcn_installer)
 // MAKE_BUILTINS is defined to extract function names and related
 // information and create the *.df files that are eventually used to
 // create the builtins.cc file.
 
 #if defined (MAKE_BUILTINS)
 
 // Generate code to install name in the symbol table.  The script
 // mkdefs will create a .def file for every .cc file that uses DEFUN,
-// DEFUN_TEXT, or DEFUN_DLD.
+// or DEFUN_TEXT.
 
 #define DEFUN_INTERNAL(name, args_name, nargout_name, is_text_fcn, doc) \
   BEGIN_INSTALL_BUILTIN \
     XDEFUN_INTERNAL (name, args_name, nargout_name, is_text_fcn, doc) \
   END_INSTALL_BUILTIN
 
+// Generate code to install name in the symbol table.  The script
+// mkdefs will create a .def file for every .cc file that uses
+// DEFUN_DLD.
+
+#define DEFUN_DLD_INTERNAL(name, args_name, nargout_name, is_text_fcn, doc) \
+  BEGIN_INSTALL_BUILTIN \
+    XDEFUN_DLD_INTERNAL (name, args_name, nargout_name, is_text_fcn, doc) \
+  END_INSTALL_BUILTIN
+
 // Generate code for making another name for an existing function.
 
 #define DEFALIAS_INTERNAL(alias, name) \
   BEGIN_INSTALL_BUILTIN \
     XDEFALIAS_INTERNAL(alias, name) \
   END_INSTALL_BUILTIN
 
 #define DEFVAR_INTERNAL(name, sname, defn, protect, chg_fcn, doc) \
diff --git a/src/mkbuiltins b/src/mkbuiltins
--- a/src/mkbuiltins
+++ b/src/mkbuiltins
@@ -24,16 +24,23 @@ cat << \EOF
 #ifdef HAVE_CONFIG_H
 #include "config.h"
 #endif
 
 #include "defun.h"
 #include "oct-obj.h"
 #include "variables.h"
 
+#if defined (OCTAVE_LITE) && defined (WITH_DYNAMIC_LINKING)
+#define XDEFUN_DLD_INTERNAL(name, args_name, nargout_name, is_text_fcn, doc)
+#else
+#define XDEFUN_DLD_INTERNAL(name, args_name, nargout_name, is_text_fcn, doc) \
+  XDEFUN_INTERNAL(name, args_name, nargout_name, is_text_fcn, doc)
+#endif
+
 #define XDEFUN_INTERNAL(name, args_name, nargout_name, is_text_fcn, doc) \
   extern DECLARE_FUN (name, args_name, nargout_name); \
     install_builtin_function (F ## name, #name, doc, is_text_fcn); \
 
 #define XDEFALIAS_INTERNAL(alias, name) \
   alias_builtin (#alias, #name);
 
 #define XDEFVAR_INTERNAL(name, sname, defn, protect, chg_fcn, doc)
diff --git a/src/mkgendoc b/src/mkgendoc
--- a/src/mkgendoc
+++ b/src/mkgendoc
@@ -8,21 +8,24 @@ fi
 DOC_FILES=`cat $1`
 
 if test -z "$DOC_FILES"; then
   echo "mkgendoc: DOC_FILES is empty!" 1>&2
   exit 1
 fi
 
 cat << \EOF
-// DO NOT EDIT!  Generated automatically by mkbuiltins.
+// DO NOT EDIT!  Generated automatically by mkgendoc
 
 #include <iostream.h>
 #include <string>
 
+#define XDEFUN_DLD_INTERNAL(name, args_name, nargout_name, is_text_fcn, doc) \
+  print_doc_string (#name, doc);
+
 #define XDEFUN_INTERNAL(name, args_name, nargout_name, is_text_fcn, doc) \
   print_doc_string (#name, doc);
 
 #define XDEFALIAS_INTERNAL(alias, name)
 
 #define XDEFVAR_INTERNAL(name, sname, defn, protect, chg_fcn, doc) \
   print_doc_string (#name, doc);
 
