# HG changeset patch
# User jwe
# Date 940548279 0
#      Thu Oct 21 23:24:39 1999 +0000
# Node ID 27502f8b3ba75a8b1e51e7186b42af8511ec1e35
# Parent  2396decd33de4b8c1a3c6545bcadec9f68af8e8a
[project @ 1999-10-21 23:24:38 by jwe]

diff --git a/doc/interpreter/Makefile.in b/doc/interpreter/Makefile.in
--- a/doc/interpreter/Makefile.in
+++ b/doc/interpreter/Makefile.in
@@ -35,17 +35,17 @@ SOURCES := $(MAIN_SOURCE) $(SUB_SOURCE)
 MAIN_TEXINFO := $(MAIN_SOURCE:.txi=.texi)
 
 SUB_TEXINFO := $(SUB_SOURCE:.txi=.texi)
 
 TEXINFO := $(MAIN_TEXINFO) $(SUB_TEXINFO)
 
 FORMATTED = octave.dvi octave.ps octave.info octave.info-[0-9]* octave_*.html
 
-DISTFILES = Makefile.in dir munge-texi.cc octave.1 \
+DISTFILES = Makefile.in dir munge-texi.cc Map-s.cc octave.1 \
   $(SOURCES) $(TEXINFO) $(FORMATTED)
 
 ifeq ($(wildcard octave.info), )
   BINDISTFILES = $(addprefix $(srcdir)/, octave.1 $(FORMATTED))
 else
   BINDISTFILES = $(srcdir)/octave.1 $(FORMATTED)
 endif
 
@@ -63,16 +63,19 @@ SPELL = $(patsubst %.texi, %.spell, $(TE
 
 all: octave.info octave.dvi octave.ps octave_toc.html
 .PHONY: all
 
 DOCSTRINGS = $(TOPDIR)/src/DOCSTRINGS $(TOPDIR)/scripts/DOCSTRINGS
 
 $(TEXINFO): $(DOCSTRINGS) munge-texi
 
+munge-texi: munge-texi.o Map-s.o
+	$(CXX) $(CPPFLAGS) $(ALL_CXXFLAGS) $(ALL_LDFLAGS) -o $@ $^
+
 # Kluge: if the DOCSTRING files are present, assume they are current.
 $(DOCSTRINGS):
 	$(MAKE) -C $(dir $@) $(notdir $@)
 
 %.texi : %.txi
 	./munge-texi \
 	  -d $(TOPDIR)/src/DOCSTRINGS \
 	  -d $(TOPDIR)/scripts/DOCSTRINGS < $< > $@.t
diff --git a/doc/interpreter/Map-s.cc b/doc/interpreter/Map-s.cc
new file mode 100644
--- /dev/null
+++ b/doc/interpreter/Map-s.cc
@@ -0,0 +1,43 @@
+/*
+
+Copyright (C) 1999 John W. Eaton
+
+This file is part of Octave.
+
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 2, or (at your option) any
+later version.
+
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
+
+You should have received a copy of the GNU General Public License
+along with Octave; see the file COPYING.  If not, write to the Free
+Software Foundation, 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
+
+*/
+
+// Instantiate Maps of strings.
+
+#ifdef HAVE_CONFIG_H
+#include <config.h>
+#endif
+
+#include "Map.h"
+#include "Map.cc"
+
+template class Map<string>;
+template class CHNode<string>;
+template class CHMap<string>;
+
+template static int goodCHptr (CHNode<string> *t);
+template static unsigned int CHptr_to_index (CHNode<string> *t);
+
+/*
+;;; Local Variables: ***
+;;; mode: C++ ***
+;;; End: ***
+*/
diff --git a/doc/interpreter/munge-texi.cc b/doc/interpreter/munge-texi.cc
--- a/doc/interpreter/munge-texi.cc
+++ b/doc/interpreter/munge-texi.cc
@@ -1,17 +1,42 @@
+/*
+
+Copyright (C) 1999 John W. Eaton
+
+This file is part of Octave.
+
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 2, or (at your option) any
+later version.
+
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
+
+You should have received a copy of the GNU General Public License
+along with Octave; see the file COPYING.  If not, write to the Free
+Software Foundation, 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
+
+*/
+
 #include <iostream.h>
 #include <fstream.h>
 #include <string>
 #include <cctype>
-#include <map>
+
+// Someday, I hope that standard template library stuff will just
+// work.  Until then...
+#include "Map.h"
 
 static const char doc_delim = '';
 
-static map<string, string> help_text;
+static CHMap<string> help_text = CHMap<string> (string ());
 
 static void
 fatal (const string& msg)
 {
   cerr << msg << "\n";
   exit (1);
 }
 
@@ -61,17 +86,17 @@ process_doc_file (const string& fname)
       do
 	{
 	  symbol_name = extract_symbol_name (infile);
 
 	  if (! symbol_name.empty ())
 	    {
 	      string doc_string = extract_docstring (infile);
 
-	      if (help_text.find (symbol_name) != help_text.end ())
+	      if (help_text.contains (symbol_name))
 		cerr << "ignoring duplicate entry for " << symbol_name << "\n";
 	      else
 		help_text[symbol_name] = doc_string;
 	    }
 	}
       while (! symbol_name.empty ());
     }
   else
@@ -172,8 +197,14 @@ main (int argc, char **argv)
       else
 	break;
     }
 
   process_texi_input_file (cin, cout);
 
   return 0;
 }
+
+/*
+;;; Local Variables: ***
+;;; mode: C++ ***
+;;; End: ***
+*/
