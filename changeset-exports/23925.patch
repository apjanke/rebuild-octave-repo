# HG changeset patch
# User Rik <rik@octave.org>
# Date 1503288567 25200
#      Sun Aug 20 21:09:27 2017 -0700
# Node ID d64985eaf56dc1df5073a9cea51b0c4b8b43a521
# Parent  0519eaf0cca6f32163cad093308386751e5ab821
Change failing BIST tests to pass with Octave-expected values.

* utils.cc: Delete BIST test for bug #51706 since the issue is not the
functionality, but properly documenting the functionality of dir_in_loadpath.

* test/for.tst: Remove regression marker for 4 tests for bug #50893.
Use Octave-expected valued for tests for bug #50893 rather than those
generated by Matlab since there is no need for exact compatibility on
the size of the empty matrix returned.

diff --git a/libinterp/corefcn/utils.cc b/libinterp/corefcn/utils.cc
--- a/libinterp/corefcn/utils.cc
+++ b/libinterp/corefcn/utils.cc
@@ -1024,23 +1024,16 @@ all name matches rather than just the fi
 %!test
 %! f = dir_in_loadpath ("$$probably_!! _not_&&_a_!! _dir$$");
 %! assert (f, "");
 
 %!test
 %! lst = dir_in_loadpath ("$$probably_!! _not_&&_a_!! _dir$$", "all");
 %! assert (lst, {});
 
-%!test <51706>
-%! tmpdir = tempname ();
-%! mkdir (tmpdir);
-%! d = dir_in_loadpath (tmpdir);
-%! rmdir (tmpdir);
-%! assert (d, "");
-
 %!error dir_in_loadpath ()
 %!error dir_in_loadpath ("foo", "bar", 1)
 */
 
 DEFUNX ("errno", Ferrno, args, ,
         doc: /* -*- texinfo -*-
 @deftypefn  {} {@var{err} =} errno ()
 @deftypefnx {} {@var{err} =} errno (@var{val})
diff --git a/test/for.tst b/test/for.tst
--- a/test/for.tst
+++ b/test/for.tst
@@ -118,39 +118,39 @@
 
 %!test
 %! parfor i = 1:4
 %!   __printf_assert__ ("%d", i);
 %! endparfor
 %! __printf_assert__ ("\n");
 %! assert (__prog_output_assert__ ("1234"));
 
-%!test <*50893>
+%!test <50893>
 %! cnt = 0;
 %! for k = zeros (0,3);
 %!   cnt++;
 %! endfor
 %! assert (cnt, 0);
-%! assert (k, zeros (0,1));
+%! assert (k, zeros (0,3));
 
-%!test <*50893>
+%!test <50893>
 %! cnt = 0;
 %! for k = zeros (3,0);
 %!   cnt++;
 %! endfor
 %! assert (cnt, 0);
-%! assert (k, zeros (1,0));
+%! assert (k, zeros (3,0));
 
-%!test <*50893>
+%!test <50893>
 %! cnt = 0;
 %! for k = zeros (3,0, "uint32");
 %!   cnt++;
 %! endfor
 %! assert (cnt, 0);
-%! assert (k, zeros (1,0, "uint32"));
+%! assert (k, zeros (3,0, "uint32"));
 
-%!test <*50893>
+%!test <50893>
 %! cnt = 0;
 %! for k = cell (0,3);
 %!   cnt++;
 %! endfor
 %! assert (cnt, 0);
-%! assert (k, cell (0,1));
+%! assert (k, cell (0,3));
