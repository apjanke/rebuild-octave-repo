# HG changeset patch
# User jwe
# Date 776234403 0
#      Sun Aug 07 04:40:03 1994 +0000
# Node ID 4057f845c1ee11b478be5e052b550ea4d24c1db7
# Parent  10574a8435d4a2df512b71ea93936b22acdeb65b
[project @ 1994-08-07 04:40:03 by jwe]

diff --git a/src/SLStack.cc b/src/SLStack.cc
--- a/src/SLStack.cc
+++ b/src/SLStack.cc
@@ -123,17 +123,18 @@ typedef SLStack<int> slstack_type_int;
 typedef SLStack<char *> slstack_type_p_char;
 
 #include "symtab.h"
 typedef SLStack<symbol_def *> slstack_type_p_symbol_def;
 
 #include "token.h"
 typedef SLStack<token *> slstack_type_p_token;
 
-#include "tree.h"
+#include "tree-base.h"
+#include "tree-expr.h"
 typedef SLStack<tree_matrix *> slstack_type_p_tree_matrix;
 
 #include "unwind-prot.h"
 typedef SLStack<unwind_elem> slstack_type_unwind_elem;
 
 #endif
 #endif
 
diff --git a/src/Stack.cc b/src/Stack.cc
--- a/src/Stack.cc
+++ b/src/Stack.cc
@@ -49,17 +49,18 @@ typedef Stack<int> stack_type_int;
 typedef Stack<char *> stack_type_p_char;
 
 #include "symtab.h"
 typedef Stack<symbol_def *> stack_type_p_symbol_def;
 
 #include "token.h"
 typedef Stack<token *> stack_type_p_token;
 
-#include "tree.h"
+#include "tree-base.h"
+#include "tree-expr.h"
 typedef Stack<tree_matrix *> stack_type_p_tree_matrix;
 
 #include "unwind-prot.h"
 typedef Stack<unwind_elem> stack_type_unwind_elem;
 
 #endif
 #endif
 
diff --git a/src/lex.l b/src/lex.l
--- a/src/lex.l
+++ b/src/lex.l
@@ -48,17 +48,19 @@ Software Foundation, 675 Mass Ave, Cambr
 static SLStack <token*> token_stack;
 
 #include "user-prefs.h"
 #include "variables.h"
 #include "octave.h"
 #include "symtab.h"
 #include "error.h"
 #include "utils.h"
-#include "tree.h"
+#include "tree-base.h"
+#include "tree-expr.h"
+#include "tree-cmd.h"
 #include "tree-misc.h"
 #include "tree-plot.h"
 #include "tree-const.h"
 #include "y.tab.h"
 #include "parse.h"
 #include "lex.h"
 
 // Nonzero means we think we are looking at a set command.
diff --git a/src/parse.y b/src/parse.y
--- a/src/parse.y
+++ b/src/parse.y
@@ -35,29 +35,31 @@ Software Foundation, 675 Mass Ave, Cambr
 #include <strstream.h>
 
 #include "SLStack.h"
 
 #include "Matrix.h"
 
 #include "octave-hist.h"
 #include "user-prefs.h"
+#include "tree-base.h"
+#include "tree-expr.h"
+#include "tree-cmd.h"
 #include "tree-const.h"
 #include "tree-misc.h"
 #include "variables.h"
 #include "tree-plot.h"
 #include "octave.h"
 #include "symtab.h"
 #include "parse.h"
 #include "token.h"
 #include "error.h"
 #include "pager.h"
 #include "input.h"
 #include "utils.h"
-#include "tree.h"
 #include "lex.h"
 
 // Nonzero means we're in the middle of defining a function.
 int defining_func = 0;
 
 // Nonzero means we're in the middle of defining a loop.
 int looping = 0;
 
diff --git a/src/pt-cmd.cc b/src/pt-cmd.cc
--- a/src/pt-cmd.cc
+++ b/src/pt-cmd.cc
@@ -41,17 +41,17 @@ int continuing = 0;
 // is also needed in tree-expr.cc.
 int returning = 0;
 
 #include "user-prefs.h"
 #include "variables.h"
 #include "symtab.h"
 #include "error.h"
 #include "gripes.h"
-#include "tree.h"
+#include "tree-base.h"
 #include "tree-expr.h"
 #include "tree-cmd.h"
 #include "tree-misc.h"
 #include "tree-const.h"
 
 // Decide if it's time to quit a for or while loop.
 static int
 quit_loop_now (void)
diff --git a/src/pt-exp-base.cc b/src/pt-exp-base.cc
--- a/src/pt-exp-base.cc
+++ b/src/pt-exp-base.cc
@@ -40,17 +40,17 @@ Software Foundation, 675 Mass Ave, Cambr
 #include <ctype.h>
 #include <stdio.h>
 
 #include "variables.h"
 #include "user-prefs.h"
 #include "help.h"
 #include "error.h"
 #include "pager.h"
-#include "tree.h"
+#include "tree-base.h"
 #include "tree-expr.h"
 #include "tree-misc.h"
 #include "tree-const.h"
 #include "input.h"
 #include "symtab.h"
 #include "utils.h"
 #include "octave.h"
 #include "octave-hist.h"
diff --git a/src/pt-misc.cc b/src/pt-misc.cc
--- a/src/pt-misc.cc
+++ b/src/pt-misc.cc
@@ -32,19 +32,20 @@ Software Foundation, 675 Mass Ave, Cambr
 #include <sys/types.h>
 #ifdef HAVE_UNISTD_H
 #include <unistd.h>
 #endif
 
 #include <iostream.h>
 
 #include "error.h"
-#include "tree.h"
+#include "tree-base.h"
+#include "tree-expr.h"
+#include "tree-cmd.h"
 #include "tree-misc.h"
-#include "tree-expr.h"
 #include "tree-const.h"
 #include "user-prefs.h"
 #include "oct-obj.h"
 
 // Nonzero means we're breaking out of a loop.
 extern int breaking;
 
 // Nonzero means we're jumping to the end of a loop.
diff --git a/src/pt-plot.cc b/src/pt-plot.cc
--- a/src/pt-plot.cc
+++ b/src/pt-plot.cc
@@ -36,22 +36,24 @@ Software Foundation, 675 Mass Ave, Cambr
 #include <iostream.h>
 #include <fstream.h>
 #include <strstream.h>
 
 #include "SLStack.h"
 #include "procstream.h"
 
 #include "user-prefs.h"
+#include "tree-base.h"
+#include "tree-expr.h"
+#include "tree-cmd.h"
 #include "tree-const.h"
 #include "tree-plot.h"
 #include "help.h"
 #include "error.h"
 #include "utils.h"
-#include "tree.h"
 #include "defun.h"
 
 extern "C"
 {
 #include <readline/tilde.h>
 }
 
 // The number of lines we\'ve plotted so far.
diff --git a/src/pt-plot.h b/src/pt-plot.h
--- a/src/pt-plot.h
+++ b/src/pt-plot.h
@@ -36,17 +36,18 @@ class plot_limits;
 class plot_range;
 class subplot_using;
 class subplot_style;
 class subplot;
 class subplot_list;
 
 #include <SLList.h>
 
-#include "tree.h"
+#include "tree-cmd.h"
+#include "tree-expr.h"
 
 class
 tree_plot_command : public tree_command
 {
  public:
   tree_plot_command (void);
   tree_plot_command (subplot_list *plt, int nd);
   tree_plot_command (subplot_list *plt, plot_limits *rng, int nd);
diff --git a/src/symtab.cc b/src/symtab.cc
--- a/src/symtab.cc
+++ b/src/symtab.cc
@@ -16,31 +16,30 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, write to the Free
 Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
 
 */
 
-// Don't even think about moving the tree.h include to symtab.h...
-
 #ifdef HAVE_CONFIG_H
 #include "config.h"
 #endif
 
 #if defined (__GNUG__)
 #pragma implementation
 #endif
 
 #include "symtab.h"
 #include "error.h"
 #include "variables.h"
 #include "utils.h"
-#include "tree.h"
+#include "tree-base.h"
+#include "tree-expr.h"
 #include "tree-const.h"
 
 /*
  * Variables and functions.
  */
 symbol_def::symbol_def (void)
 {
   init_state ();
diff --git a/src/variables.cc b/src/variables.cc
--- a/src/variables.cc
+++ b/src/variables.cc
@@ -34,16 +34,18 @@ Software Foundation, 675 Mass Ave, Cambr
 #include <string.h>
 #include <fstream.h>
 #include <iostream.h>
 #include <strstream.h>
 
 #include "octave-hist.h"
 #include "unwind-prot.h"
 #include "user-prefs.h"
+#include "tree-base.h"
+#include "tree-expr.h"
 #include "tree-const.h"
 #include "variables.h"
 #include "statdefs.h"
 #include "defaults.h"
 #include "version.h"
 #include "mappers.h"
 #include "oct-obj.h"
 #include "sysdep.h"
@@ -51,17 +53,16 @@ Software Foundation, 675 Mass Ave, Cambr
 #include "symtab.h"
 #include "octave.h"
 #include "error.h"
 #include "pager.h"
 #include "utils.h"
 #include "defun.h"
 #include "input.h"
 #include "parse.h"
-#include "tree.h"
 #include "help.h"
 #include "lex.h"
 
 extern "C"
 {
 #include <readline/readline.h>
 #include <readline/tilde.h>
 
@@ -1734,26 +1735,31 @@ save variables in a file")
   if (file);
     file.close ();
 
   DELETE_ARGV;
 
   return retval;
 }
 
+// XXX FIXME XXX -- this should take a list of regular expressions
+// naming the variables to look for.
+
 static Octave_object
 do_who (int argc, char **argv, int nargout)
 {
   Octave_object retval;
 
   int show_builtins = 0;
   int show_functions = (curr_sym_tab == top_level_sym_tab);
   int show_variables = 1;
   int show_verbose = 0;
 
+  char *my_name = argv[0];
+
   if (argc > 1)
     {
       show_functions = 0;
       show_variables = 0;
     }
 
   for (int i = 1; i < argc; i++)
     {
@@ -1772,17 +1778,17 @@ do_who (int argc, char **argv, int nargo
 	show_functions++;
       else if (strcmp (*argv, "-long") == 0 
 	       || strcmp (*argv, "-l") == 0)
 	  show_verbose++;
       else if (strcmp (*argv, "-variables") == 0
 	       || strcmp (*argv, "-v") == 0)
 	show_variables++;
       else
-	warning ("who: unrecognized option `%s'", *argv);
+	warning ("%s: unrecognized option `%s'", my_name, *argv);
     }
 
 // If the user specified -l and nothing else, show variables.  If
 // evaluating this at the top level, also show functions.
 
   if (show_verbose && ! (show_builtins || show_functions || show_variables))
     {
       show_functions = (curr_sym_tab == top_level_sym_tab);
