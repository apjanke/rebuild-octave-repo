# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1249906848 -7200
#      Mon Aug 10 14:20:48 2009 +0200
# Node ID cc1fd3084cb229fe5da75d519f9bf3a975302427
# Parent  1b290ce305fbfdef954fc158c09d346276aafc84
implement dim_vector::first_non_singleton

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,12 @@
+2009-08-10  Jaroslav Hajek  <highegg@gmail.com>
+
+	* dim-vector.h (dim_vector::first_non_singleton): New method.
+
 2009-08-06  Jaroslav Hajek  <highegg@gmail.com>
 
 	* dim-vector.h (dim_vector): Rewrite. Use single-alloc implementation
 	aka GCC's basic_string class.
 	* Array.cc: Use dim_vector::alloc where fitting.
 	* Array-util.cc: Ditto.
 
 2009-08-05  John W. Eaton  <jwe@octave.org>
diff --git a/liboctave/dim-vector.h b/liboctave/dim-vector.h
--- a/liboctave/dim-vector.h
+++ b/liboctave/dim-vector.h
@@ -492,16 +492,27 @@ public:
         }
     }
 
   bool is_vector (void) const
     {
       return (length () == 2 && (elem (0) == 1 || elem (1) == 1));
     }
 
+  int first_non_singleton (int def = 0) const
+    {
+      for (int i = 0; i < length (); i++)
+        {
+          if (elem (i) != 1)
+            return i;
+        }
+
+      return def;      
+    }
+
 };
 
 static inline bool
 operator == (const dim_vector& a, const dim_vector& b)
 {
   bool retval = true;
 
   int a_len = a.length ();
