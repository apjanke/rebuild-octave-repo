# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1256034942 -7200
#      Tue Oct 20 12:35:42 2009 +0200
# Node ID fb3543975ed98b6db1d3866f34ebf2459b14619a
# Parent  26abff55f6fe2f86f722bb2b9b3dcfc95b25e411
optimize center using bsxfun

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2009-10-20  Jaroslav Hajek  <highegg@gmail.com>
+
+	* statistics/base/center.m: Rewrite using bsxfun.
+
 2009-10-15  David Bateman  <dbateman@free.fr>
 
 	* plot/__go_draw_axes__.m: Allow line and surface markerfacecolor
 	and markeredgecolor properties to be used and set the marker colors 
 	appropriately.
 
 2009-10-14  Jaroslav Hajek  <highegg@gmail.com>
 
diff --git a/scripts/statistics/base/center.m b/scripts/statistics/base/center.m
--- a/scripts/statistics/base/center.m
+++ b/scripts/statistics/base/center.m
@@ -1,10 +1,11 @@
 ## Copyright (C) 1995, 1996, 1997, 1998, 2000, 2002, 2004, 2005, 2006,
 ##               2007, 2009 Kurt Hornik
+## Copyright (C) 2009 VZLU Prague
 ##
 ## This file is part of Octave.
 ##
 ## Octave is free software; you can redistribute it and/or modify it
 ## under the terms of the GNU General Public License as published by
 ## the Free Software Foundation; either version 3 of the License, or (at
 ## your option) any later version.
 ##
@@ -31,32 +32,18 @@
 
 function retval = center (x, dim)
 
   if (nargin != 1 && nargin != 2)
     print_usage ();
   endif
 
   if (nargin < 2)
-    t = find (size (x) != 1);
-    if (isempty (t))
-      dim = 1;
-    else
-      dim = t(1);
-    endif
+    dim = [find(size (x) != 1, 1), 1](1); # First non-singleton dim.
   endif
   n = size (x, dim);
 
-  if (n == 1)
-    retval = zeros (size (x));
-  elseif (n > 0)
-    if (isvector (x))
-      retval = x - sum (x) / n;
-    else
-      mx = sum (x, dim) / n;
-      idx(1:ndims (x)) = {':'}; 
-      idx{dim} = ones (1, n);
-      retval = x - mx(idx{:});
-    endif
+  if (n == 0)
+    retval = x;
   else
-    retval = x;
+    retval = bsxfun (@minus, x, sum (x, dim) / n);
   endif
 endfunction
