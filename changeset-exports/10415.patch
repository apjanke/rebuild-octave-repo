# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1268750015 -3600
#      Tue Mar 16 15:33:35 2010 +0100
# Node ID 976e76b77fa061b169524990018c810e56eee893
# Parent  2a8b1db1e2ca81b011bf59dbb3e362689a0041e3
rewrite nth_root, move to specfun

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,15 @@
+2010-03-16  Jaroslav Hajek  <highegg@gmail.com>
+
+	* general/nthroot.m: Remove.
+	* general/module.mk: Update.
+	* specfun/nthroot.m: New source.
+	* specfun/module.mk: Update.
+
 2010-03-16  Jaroslav Hajek  <highegg@gmail.com>
 
 	* miscellaneous/intwarning.m: Deprecate.
 
 2010-03-11  Jaroslav Hajek  <highegg@gmail.com>
 
 	* strings/index.m: Make it a wrapper for strfind.
 
diff --git a/scripts/general/module.mk b/scripts/general/module.mk
--- a/scripts/general/module.mk
+++ b/scripts/general/module.mk
@@ -49,17 +49,16 @@ general_FCN_FILES = \
   general/issquare.m \
   general/isvector.m \
   general/loadobj.m \
   general/logspace.m \
   general/mod.m \
   general/nargchk.m \
   general/nargoutchk.m \
   general/nextpow2.m \
-  general/nthroot.m \
   general/num2str.m \
   general/perror.m \
   general/pol2cart.m \
   general/polyarea.m \
   general/postpad.m \
   general/prepad.m \
   general/quadgk.m \
   general/quadl.m \
diff --git a/scripts/specfun/module.mk b/scripts/specfun/module.mk
--- a/scripts/specfun/module.mk
+++ b/scripts/specfun/module.mk
@@ -6,16 +6,17 @@ specfun_FCN_FILES = \
   specfun/betai.m \
   specfun/betaln.m \
   specfun/factor.m \
   specfun/factorial.m \
   specfun/gammai.m \
   specfun/isprime.m \
   specfun/legendre.m \
   specfun/nchoosek.m \
+  specfun/nthroot.m \
   specfun/perms.m \
   specfun/pow2.m \
   specfun/primes.m \
   specfun/reallog.m \
   specfun/realpow.m \
   specfun/realsqrt.m
 
 FCN_FILES += $(specfun_FCN_FILES)
diff --git a/scripts/general/nthroot.m b/scripts/specfun/nthroot.m
rename from scripts/general/nthroot.m
rename to scripts/specfun/nthroot.m
--- a/scripts/general/nthroot.m
+++ b/scripts/specfun/nthroot.m
@@ -1,9 +1,10 @@
 ## Copyright (C) 2004, 2006, 2007, 2009 Paul Kienzle
+## Copyright (C) 2010 VZLU Prague
 ##
 ## This file is part of Octave.
 ##
 ## Octave is free software; you can redistribute it and/or modify it
 ## under the terms of the GNU General Public License as published by
 ## the Free Software Foundation; either version 3 of the License, or (at
 ## your option) any later version.
 ##
@@ -28,43 +29,55 @@
 ## @example
 ## @group
 ## nthroot (-1, 3)
 ## @result{} -1
 ## (-1) ^ (1 / 3)
 ## @result{} 0.50000 - 0.86603i
 ## @end group
 ## @end example
+## 
+## @var{n} must be a scalar. If @var{n} is not an even integer and @var{X} has
+## negative entries, an error is produced.
 ##
 ## @end deftypefn
 
-function y = nthroot (x, m)
+function y = nthroot (x, n)
 
   if (nargin != 2)
     print_usage ();
   endif
-  
-  y = x.^(1./m);
 
-  if (isscalar (x))
-    x *= ones (size (m)); 
+  if (! isscalar (n))
+    error ("nthroot: n must be a nonzero scalar");
   endif
 
-  if (isscalar (m))
-    m *= ones (size (x)); 
-  endif
-
-  idx = (mod (m, 2) == 1 & imag (x) == 0 & x < 0);
+  if (n == 3)
+    y = cbrt (x);
+  elseif (n == -3)
+    y = 1 ./ cbrt (x);
+  elseif (n < 0)
+    y = 1 ./ nthroot (x, -n);
+  else
+    ## Compute using power.
+    if (n == round (n) && mod (n, 2) == 1)
+      y = abs (x) .^ (1/n) .* sign (x);
+    elseif (any (x(:) < 0))
+      error ("nthroot: if x contains negative values, n must be an odd integer");
+    else
+      y = x .^ (1/n);
+    endif
 
-  if (any (idx(:)))
-    y(idx) = -(-x(idx)).^(1./m(idx)); 
-  endif
+    if (finite (n) && n > 0 && n == round (n))
+      ## Correction.
+      y = ((n-1)*y + x ./ (y.^(n-1))) / n;
+      y = merge (finite (y), y, x);
+    endif
 
-  ## If result is all real, make sure it looks real
-  if (all (imag (y) == 0))
-    y = real (y); 
   endif
 
 endfunction
 
-%!assert(nthroot(-1,[3,-3]), [-1,-1],eps);
-%!assert(nthroot([-1,1],[3.1,-3]), [-1,1].^(1./[3.1,-3]));
-%!assert(nthroot([-1+1i,-1-1i],3), [-1+1i,-1-1i].^(1/3));
+%!assert(nthroot(-32,5), -2);
+%!assert(nthroot(81,4), 3);
+%!assert(nthroot(Inf,4), Inf);
+%!assert(nthroot(-Inf,7), -Inf);
+%!assert(nthroot(-Inf,-7), 0);
