# HG changeset patch
# User Rik <rik@octave.org>
# Date 1440078135 25200
#      Thu Aug 20 06:42:15 2015 -0700
# Branch stable
# Node ID 7e9c752138ec1a3d07ff17d4d31cee957acc7ed2
# Parent  d43675752d040c00be35b9012b8c95e6bf3de89a
Fix 'descending' sort of Range objects (bug #45739).

* Range.cc (sort_internal): When doing a descending sort, start at the max()
value in the Range, rather than the rng_limit which may not be a part of the
range itself.

diff --git a/liboctave/array/Range.cc b/liboctave/array/Range.cc
--- a/liboctave/array/Range.cc
+++ b/liboctave/array/Range.cc
@@ -239,17 +239,17 @@ Range::sort_internal (bool ascending)
       double tmp = rng_base;
       rng_base = min ();
       rng_limit = tmp;
       rng_inc = -rng_inc;
       clear_cache ();
     }
   else if (! ascending && rng_base < rng_limit && rng_inc > 0.0)
     {
-      double tmp = rng_limit;
+      double tmp = max ();
       rng_limit = min ();
       rng_base = tmp;
       rng_inc = -rng_inc;
       clear_cache ();
     }
 }
 
 void
@@ -269,17 +269,17 @@ Range::sort_internal (Array<octave_idx_t
       rng_base = min ();
       rng_limit = tmp;
       rng_inc = -rng_inc;
       clear_cache ();
       reverse = true;
     }
   else if (! ascending && rng_base < rng_limit && rng_inc > 0.0)
     {
-      double tmp = rng_limit;
+      double tmp = max ();
       rng_limit = min ();
       rng_base = tmp;
       rng_inc = -rng_inc;
       clear_cache ();
       reverse = true;
     }
 
   octave_idx_type tmp = reverse ? nel - 1 : 0;
