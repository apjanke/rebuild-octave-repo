# HG changeset patch
# User Markus MÃ¼tzel <markus.muetzel@gmx.de>
# Date 1489328512 0
#      Sun Mar 12 14:21:52 2017 +0000
# Node ID efb1395193889d24720d08653c3c3b089a31ec7a
# Parent  a470f7fee1cf5e478f960caabf3955f88a63bde3
dir.m: Do not include trailing filesep in "folder". Fix BIST. (bug #50504).

* dir.m: Change regexp to exclude trailing filesep in "folder".
Use canonicalize_file_name rather than make_absolute_filename.
Fix BIST tests.

diff --git a/scripts/miscellaneous/dir.m b/scripts/miscellaneous/dir.m
--- a/scripts/miscellaneous/dir.m
+++ b/scripts/miscellaneous/dir.m
@@ -109,17 +109,17 @@ function retval = dir (directory)
       nf = numel (flst);
       flst = strcat ([fn filesep], flst);
     endif
   endif
 
   if (numel (flst) > 0)
 
     fs = regexptranslate ("escape", filesep ("all"));
-    re = sprintf ('(^.+[%s])([^%s.]*)([.][^%s]*)?$', fs, fs, fs);
+    re = sprintf ('(^.+)[%s]([^%s.]*)([.][^%s]*)?$', fs, fs, fs);
     last_dir = last_absdir = "";
     info(nf,1).name = "";  # pre-declare size of struct array
 
     ## Collect results.
     for i = nf:-1:1
       fn = flst{i};
       [st, err, msg] = lstat (fn);
       if (err < 0)
@@ -135,17 +135,17 @@ function retval = dir (directory)
           endif
         endif
         tmpdir = regexprep (fn, re, '$1');
         fn = regexprep (fn, re, '$2$3');
         info(i).name = fn;
         if (! strcmp (last_dir, tmpdir))
           ## Caching mechanism to speed up function
           last_dir = tmpdir;
-          last_absdir = make_absolute_filename (last_dir);
+          last_absdir = canonicalize_file_name (last_dir);
         endif
         info(i).folder = last_absdir;
         lt = localtime (st.mtime);
         info(i).date = strftime ("%d-%b-%Y %T", lt);
         info(i).bytes = st.size;
         info(i).isdir = S_ISDIR (st.mode);
         info(i).datenum = [lt.year + 1900, lt.mon + 1, lt.mday, ...
                              lt.hour, lt.min, lt.sec];
@@ -173,25 +173,26 @@ function retval = dir (directory)
 
 endfunction
 
 
 %!test
 %! list = dir ();
 %! assert (isstruct (list) && ! isempty (list));
 %! assert (fieldnames (list),
-%!         {"name"; "date"; "bytes"; "isdir"; "datenum"; "statinfo"});
+%!         {"name"; "folder"; "date"; "bytes"; "isdir"; "datenum"; "statinfo"});
 %!
 %! if (isunix ())
-%!   assert ({list(1:2).name}, {".", ".."});
-%!   assert ([list(1:2).isdir], [true true]);
+%!   idx = find (strcmp ({list.name}, "."), 1);
+%!   assert ({list(idx:idx+1).name}, {".", ".."});
+%!   assert ([list(idx:idx+1).isdir], [true true]);
 %! endif
 %!
 %! ## test that specifying a filename works the same as using a directory.
 %! found = find (! [list.isdir], 1);
 %! if (! isempty (found))
-%!   list2 = dir (list(found).name);
+%!   list2 = dir (fullfile (list(found).folder, list(found).name));
 %!   assert (list(found), list2);
 %! endif
 
 ## Test input validation
 %!error <DIRECTORY argument must be a string> dir (1)
 %!warning <nonexistent directory> dir ("_%UNLIKELY_DIR_NAME%_");
