# HG changeset patch
# User Jacob Dawid <jacob.dawid@googlemail.com>
# Date 1311114878 -7200
#      Wed Jul 20 00:34:38 2011 +0200
# Node ID 09d9cb7c3014338a897a134e07aa2fe1df8c8629
# Parent  16b33b7ef1b3385fa6c79dd99895ac625752e7b0
Further simplified OctaveLink by removing the readline event hook.

diff --git a/gui/src/FilesDockWidget.cpp b/gui/src/FilesDockWidget.cpp
--- a/gui/src/FilesDockWidget.cpp
+++ b/gui/src/FilesDockWidget.cpp
@@ -31,21 +31,19 @@ FilesDockWidget::FilesDockWidget (QWidge
   // Create a toolbar
   m_navigationToolBar = new QToolBar ("", widget ());
   m_navigationToolBar->setAllowedAreas (Qt::TopToolBarArea);
   m_navigationToolBar->setMovable (false);
   m_navigationToolBar->setIconSize (QSize (20, 20));
 
   // Add a button to the toolbar with the QT standard icon for up-directory
   // TODO: Maybe change this to be an up-directory icon that is OS specific???
-  QStyle *
-    style = QApplication::style ();
+  QStyle *style = QApplication::style ();
   m_directoryIcon = style->standardIcon (QStyle::SP_FileDialogToParent);
-  m_directoryUpAction =
-    new QAction (m_directoryIcon, "", m_navigationToolBar);
+  m_directoryUpAction = new QAction (m_directoryIcon, "", m_navigationToolBar);
   m_currentDirectory = new QLineEdit (m_navigationToolBar);
 
   m_navigationToolBar->addAction (m_directoryUpAction);
   m_navigationToolBar->addWidget (m_currentDirectory);
   connect (m_directoryUpAction, SIGNAL (triggered ()), this,
 	   SLOT (onUpDirectory ()));
 
   // TODO: Add other buttons for creating directories
diff --git a/gui/src/IRCWidget.h b/gui/src/IRCWidget.h
--- a/gui/src/IRCWidget.h
+++ b/gui/src/IRCWidget.h
@@ -45,17 +45,17 @@ Q_OBJECT public:
   void sendMessage (QString);
   void sendInputLine ();
 
   void handleNickInUseChanged ();
   void handleReplyCode (IRCEvent * event);
 
   void updateNickCompleter ();
 private:
-    IRCClient * m_ircClient;
+  IRCClient * m_ircClient;
   QTextEdit *m_chatWindow;
   QPushButton *m_nickButton;
   QLineEdit *m_inputLine;
   bool m_alternatingColor;
 
   QString getAlternatingColor ()
   {
     m_alternatingColor = !m_alternatingColor;
diff --git a/gui/src/MainWindow.cpp b/gui/src/MainWindow.cpp
--- a/gui/src/MainWindow.cpp
+++ b/gui/src/MainWindow.cpp
@@ -238,17 +238,17 @@ MainWindow::construct ()
   connect (settingsAction, SIGNAL (triggered ()), this,
 	   SLOT (processSettingsDialogRequest ()));
   connect (exitAction, SIGNAL (triggered ()), this, SLOT (close ()));
   connect (alignWindowsAction, SIGNAL (triggered ()), this,
 	   SLOT (alignMdiWindows ()));
   connect (reportBugAction, SIGNAL (triggered ()), this,
 	   SLOT (openBugTrackerPage ()));
 
-  setWindowTitle (QString ("Octave GUI (0.0.3)"));
+  setWindowTitle (QString ("Octave GUI (0.0.4)"));
 
   setCentralWidget (m_centralMdiArea);
   addDockWidget (Qt::LeftDockWidgetArea, m_variablesDockWidget);
   addDockWidget (Qt::LeftDockWidgetArea, m_historyDockWidget);
   addDockWidget (Qt::RightDockWidgetArea, m_filesDockWidget);
   setStatusBar (m_statusBar);
 
   readSettings ();
@@ -271,12 +271,11 @@ void
 MainWindow::establishOctaveLink ()
 {
   m_octaveMainThread = new OctaveMainThread (this);
   m_octaveMainThread->start ();
 
   m_octaveCallbackThread = new OctaveCallbackThread (this, this);
   m_octaveCallbackThread->start ();
 
-  command_editor::add_event_hook (OctaveLink::readlineEventHook);
   m_octaveTerminal->openTerminal ();
   reportStatusMessage (tr ("Established link to Octave."));
 }
diff --git a/gui/src/MainWindow.h b/gui/src/MainWindow.h
--- a/gui/src/MainWindow.h
+++ b/gui/src/MainWindow.h
@@ -141,16 +141,18 @@ Q_OBJECT public:
   {
   }
 
 protected:
   void run ()
   {
     while (m_mainWindow->isRunning ())
       {
+        OctaveLink::instance ()->fetchSymbolTable ();
+
 	// Get a full variable list.
 	QList < SymbolRecord > symbolTable =
           OctaveLink::instance ()->copyCurrentSymbolTable ();
 	if (symbolTable.size ())
 	  {
 	    m_mainWindow->variablesDockWidget ()->
 	      setVariablesList (symbolTable);
 	  }
diff --git a/gui/src/OctaveLink.cpp b/gui/src/OctaveLink.cpp
--- a/gui/src/OctaveLink.cpp
+++ b/gui/src/OctaveLink.cpp
@@ -32,23 +32,16 @@ OctaveLink::OctaveLink ():QObject ()
   m_symbolTableSemaphore = new QSemaphore (1);
   m_historyModel = new QStringListModel (this);
 }
 
 OctaveLink::~OctaveLink ()
 {
 }
 
-int
-OctaveLink::readlineEventHook ()
-{
-  OctaveLink::instance ()->processOctaveServerData ();
-  return 0;
-}
-
 QString
 OctaveLink::octaveValueAsQString (OctaveValue octaveValue)
 {
   // Convert single qouted string.
   if (octaveValue.is_sq_string ())
     {
       return QString ("\'%1\'").arg (octaveValue.string_value ().c_str ());
 
@@ -149,14 +142,8 @@ OctaveLink::updateHistoryModel ()
     }
 }
 
 QStringListModel *
 OctaveLink::historyModel ()
 {
   return m_historyModel;
 }
-
-void
-OctaveLink::processOctaveServerData ()
-{
-  fetchSymbolTable ();
-}
diff --git a/gui/src/OctaveLink.h b/gui/src/OctaveLink.h
--- a/gui/src/OctaveLink.h
+++ b/gui/src/OctaveLink.h
@@ -92,36 +92,31 @@ class OctaveLink:QObject
 {
   Q_OBJECT
 public:
   static OctaveLink *
   instance ()
   {
     return &m_singleton;
   }
-  static int
-  readlineEventHook (void);
   static QString
   octaveValueAsQString (OctaveValue octaveValue);
 
   /**
     * Returns a copy of the current symbol table buffer.
     * \return Copy of the current symbol table buffer.
     */
   QList < SymbolRecord > copyCurrentSymbolTable ();
 
   void
   updateHistoryModel ();
 
   QStringListModel *
   historyModel ();
 
-  void
-  processOctaveServerData ();
-
   /**
     * Updates the current symbol table with new data
     * from octave.
     */
   void
   fetchSymbolTable ();
 
 signals:
