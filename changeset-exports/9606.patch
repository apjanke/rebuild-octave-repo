# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1251953993 -7200
#      Thu Sep 03 06:59:53 2009 +0200
# Node ID a04352386a6b91ac4c1d4d9fa97796ba58804d2d
# Parent  dfc68e6d8741270cdb654446e6aa6e9d41eb7a51
clear index cache on ++,-- operators

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,18 @@
+2009-09-03  Jaroslav Hajek  <highegg@gmail.com>
+
+	* ov-re-mat.h (octave_matrix::increment, octave_matrix::decrement):
+	Use matrix_ref.
+	* ov-flt-re-mat.h (octave_float_matrix::increment,
+	octave_float_matrix::decrement): Use matrix_ref.
+	* ov-intx.h (OCTAVE_VALUE_INT_MATRIX_T::increment,
+	OCTAVE_VALUE_INT_MATRIX_T::decrement):
+	Use matrix_ref.
+
 2009-09-02  John W. Eaton  <jwe@octave.org>
 
 	* graphics.cc (axes::properties::calc_ticklabels):
 	Avoid unused parameter warning from gcc.
 
 	* ov-perm.cc (octave_perm_matrix::save_binary,
 	octave_perm_matrix::load_binary): Avoid shadow warning from gcc.
 
diff --git a/src/ov-flt-re-mat.h b/src/ov-flt-re-mat.h
--- a/src/ov-flt-re-mat.h
+++ b/src/ov-flt-re-mat.h
@@ -158,19 +158,20 @@ public:
   FloatNDArray float_array_value (bool = false) const { return matrix; }
 
   SparseMatrix sparse_matrix_value (bool = false) const;
 
   SparseComplexMatrix sparse_complex_matrix_value (bool = false) const;
 
   octave_value diag (octave_idx_type k = 0) const;
 
-  void increment (void) { matrix += 1.0; }
+  // Use matrix_ref here to clear index cache.
+  void increment (void) { matrix_ref () += 1.0; }
 
-  void decrement (void) { matrix -= 1.0; }
+  void decrement (void) { matrix_ref () -= 1.0; }
 
   octave_value convert_to_str_internal (bool pad, bool force, char type) const;
 
   void print_raw (std::ostream& os, bool pr_as_read_syntax = false) const;
 
   bool save_ascii (std::ostream& os);
 
   bool load_ascii (std::istream& is);
diff --git a/src/ov-intx.h b/src/ov-intx.h
--- a/src/ov-intx.h
+++ b/src/ov-intx.h
@@ -294,28 +294,29 @@ public:
   
     char *vec = retval.fortran_vec ();
     for (octave_idx_type i = 0; i < nel; i++)
       vec[i] = matrix(i).char_value ();
 
     return retval;
   }
 
+  // Use matrix_ref here to clear index cache.
   void increment (void) 
    { 
-     matrix += OCTAVE_INT_T (1); 
+     matrix_ref() += OCTAVE_INT_T (1); 
      if (OCTAVE_INT_T::get_math_trunc_flag ())
        gripe_unop_integer_math_truncated ("++", type_name (). c_str ());
 
       OCTAVE_INT_T::clear_conv_flag ();
    }
 
   void decrement (void)
    { 
-     matrix -= OCTAVE_INT_T (1); 
+     matrix_ref() -= OCTAVE_INT_T (1); 
      if (OCTAVE_INT_T::get_math_trunc_flag ())
        gripe_unop_integer_math_truncated ("--", type_name (). c_str ());
       OCTAVE_INT_T::clear_conv_flag ();
    }
 
   idx_vector index_vector (void) const 
     { return idx_cache ? *idx_cache : set_idx_cache (idx_vector (matrix)); }
 
diff --git a/src/ov-re-mat.h b/src/ov-re-mat.h
--- a/src/ov-re-mat.h
+++ b/src/ov-re-mat.h
@@ -172,19 +172,20 @@ public:
   FloatNDArray float_array_value (bool = false) const { return matrix; }
 
   SparseMatrix sparse_matrix_value (bool = false) const;
 
   SparseComplexMatrix sparse_complex_matrix_value (bool = false) const;
 
   octave_value diag (octave_idx_type k = 0) const;
 
-  void increment (void) { matrix += 1.0; }
+  // Use matrix_ref here to clear index cache.
+  void increment (void) { matrix_ref () += 1.0; }
 
-  void decrement (void) { matrix -= 1.0; }
+  void decrement (void) { matrix_ref () -= 1.0; }
 
   octave_value convert_to_str_internal (bool pad, bool force, char type) const;
 
   void print_raw (std::ostream& os, bool pr_as_read_syntax = false) const;
 
   bool save_ascii (std::ostream& os);
 
   bool load_ascii (std::istream& is);
