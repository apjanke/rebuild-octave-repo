# HG changeset patch
# User Rik <rik@octave.org>
# Date 1362887038 28800
#      Sat Mar 09 19:43:58 2013 -0800
# Node ID 2a81ce01c383f6098a227c5b9a0ef01d61bfab37
# Parent  4ef7bd2d7e8d88401c2b6cbc7092940397478a93
Fix history() so that it shows all commands when called with no arguments.

* libinterp/interpfcn/oct-hist.cc(do_history): Correctly change input number
of history lines to display from negative value to positive value.  A negative
value is reserved for "display all".

diff --git a/libinterp/interpfcn/oct-hist.cc b/libinterp/interpfcn/oct-hist.cc
--- a/libinterp/interpfcn/oct-hist.cc
+++ b/libinterp/interpfcn/oct-hist.cc
@@ -136,30 +136,32 @@ do_history (const octave_value_list& arg
   unwind_protect frame;
 
   string_vector hlist;
 
   frame.add_fcn (command_history::set_file, command_history::file ());
 
   int nargin = args.length ();
 
-  // Number of history lines to show
+  // Number of history lines to show (-1 = all)
   int limit = -1;
 
   for (octave_idx_type i = 0; i < nargin; i++)
     {
       octave_value arg = args(i);
 
       std::string option;
 
       if (arg.is_string ())
         option = arg.string_value ();
       else if (arg.is_numeric_type ())
         {
           limit = arg.int_value ();
+          if (limit < 0)
+            limit = -limit;
           continue;
         }
       else
         {
           gripe_wrong_type_arg ("history", arg);
           return hlist;
         }
 
@@ -205,31 +207,37 @@ do_history (const octave_value_list& arg
         }
       else
         {
           // The last argument found in the command list that looks like
           // an integer will be used
           int tmp;
 
           if (sscanf (option.c_str (), "%d", &tmp) == 1)
-            limit = tmp;
+            {
+              if (tmp > 0)
+                limit = tmp;
+              else
+                limit = -tmp;
+            }
+          
           else
             {
               if (option.length () > 0 && option[0] == '-')
                 error ("history: unrecognized option '%s'", option.c_str ());
               else
                 error ("history: bad non-numeric arg '%s'", option.c_str ());
 
               return  hlist;
             }
         }
     }
 
-  if (limit < 0)
-    limit = -limit;
+//  if (limit < 0)
+//    limit = -limit;
 
   hlist = command_history::list (limit, numbered_output);
 
   int len = hlist.length ();
 
   if (nargout == 0)
     {
       for (octave_idx_type i = 0; i < len; i++)
