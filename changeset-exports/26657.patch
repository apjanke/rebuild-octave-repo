# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1548516909 0
#      Sat Jan 26 15:35:09 2019 +0000
# Node ID be909a861e524bd33ab9b4ec4d07c1843b6a5e05
# Parent  ab3babe4ea2562aeac5ec041571b800ef205f0ba
new symbol_info method to list names

* syminfo.h, syminfo.cc (symbol_info::names): New method.

diff --git a/libinterp/corefcn/syminfo.cc b/libinterp/corefcn/syminfo.cc
--- a/libinterp/corefcn/syminfo.cc
+++ b/libinterp/corefcn/syminfo.cc
@@ -168,16 +168,26 @@ namespace octave
       {
         if (name == syminfo.name ())
           return syminfo.value ();
       }
 
     return octave_value ();
   }
 
+  std::list<std::string> symbol_info_list::names (void) const
+  {
+    std::list<std::string> retval;
+
+    for (const auto& syminfo : m_lst)
+      retval.push_back (syminfo.name ());
+
+    return retval;
+  }
+
   octave_map
   symbol_info_list::map_value (const std::string& caller_function_name,
                                int nesting_level) const
   {
     size_t len = m_lst.size ();
 
     Cell name_info (len, 1);
     Cell size_info (len, 1);
diff --git a/libinterp/corefcn/syminfo.h b/libinterp/corefcn/syminfo.h
--- a/libinterp/corefcn/syminfo.h
+++ b/libinterp/corefcn/syminfo.h
@@ -95,16 +95,18 @@ namespace octave
     symbol_info_list (const symbol_info_list&) = default;
 
     symbol_info_list& operator = (const symbol_info_list&) = default;
 
     ~symbol_info_list (void) = default;
 
     octave_value varval (const std::string& name) const;
 
+    std::list<std::string> names (void) const;
+
     octave_map map_value (const std::string& caller_function_name,
                           int nesting_level) const;
 
     // Print a line of information for a given symbol.
     void print_descriptor (std::ostream& os,
                            const std::list<whos_parameter> params) const;
 
     void display (std::ostream& os, const std::string& format);
