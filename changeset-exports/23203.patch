# HG changeset patch
# User Rik <rik@octave.org>
# Date 1487480736 28800
#      Sat Feb 18 21:05:36 2017 -0800
# Node ID 03f1adaea50a0f57d045c7f56b75b742a468a18c
# Parent  239a9fed80de05561420434241635f0120fa3fc9
# Parent  c16e46aa355365619203838074f25724172d97d6
maint: merge stable to default.

diff --git a/doc/interpreter/genpropdoc.m b/doc/interpreter/genpropdoc.m
--- a/doc/interpreter/genpropdoc.m
+++ b/doc/interpreter/genpropdoc.m
@@ -284,16 +284,18 @@ are visible in their parents' children l
       case "clipping"
         s.doc = doc_unused;
 
       ## Specific properties
       case "alphamap"
         s.doc = sprintf (doc_notimpl, "Transparency");
 
       case "closerequestfcn"
+        s.doc = "Function that is executed when a figure is deleted.  \
+@xref{XREFclosereq, , closereq function}."
         s.valid = valid_fcn;
 
       case "color"
         s.doc = "Color of the figure background.  \
 @xref{Colors, , colorspec}.";
         s.valid = valid_color;
 
       case "colormap"
@@ -359,36 +361,44 @@ The ASCII value of the key\n\
 Lowercase value of the key\n\
 @item Modifier:\n\
 A cell array containing strings representing the modifiers pressed with the \
 key.\n\
 @end table";
         s.valid = valid_fcn;
 
       case "menubar"
-        s.doc = "Control the display of the figure menu bar in the upper \
-left of the figure.";
+        s.doc = "Control the display of the figure menu bar at the top \
+of the figure.";
 
       case "name"
         s.doc = "Name to be displayed in the figure title bar.  The name is \
 displayed to the right of any title determined by the @code{numbertitle} \
 property.";
         s.valid = valid_string;
 
       ## FIXME: Uncomment when support added in graphics.in.h
       #case "number"
       #  s.doc = "Number of current figure (RO).";
 
       case "nextplot"
+        s.doc = "__prop__ is used by high level plotting functions to \
+decide what to do with axes already present in the figure.  \
+@xref{XREFnewplot, , @w{newplot function}}.";
 
       case "numbertitle"
         s.doc = "Display \"Figure\" followed by the numerical figure handle \
 value in the figure title bar.";
 
       case "outerposition"
+        s.doc = "Specify the position and size of the figure including \
+the top menubar and the bottom status bar.  \
+The four elements of the vector are the coordinates of the lower left corner \
+and width and height of the figure.  \
+@xref{XREFfigureunits, , @w{units property}}.";
         s.valid = valid_4elvec;
 
       case "paperorientation"
         s.doc = "The value for the @code{papersize}, and @code{paperposition} \
 properties depends upon __prop__.  The horizontal and vertical values for \
 @code{papersize} and @code{paperposition} reverse order \
 when __prop__ is switched between @code{\"portrait\"} and \
 @code{\"landscape\"}.";
@@ -435,43 +445,45 @@ units (ex: @code{\"inches\"}) and @code{
       case "pointer"
         s.doc = doc_unused;
       case "pointershapecdata"
         s.doc = doc_unused;
       case "pointershapehotspot"
         s.doc = doc_unused;
 
       case "position"
-        s.doc = "Specify the position and size of the figure.  \
+        s.doc = "Specify the position and size of the figure canvas.  \
 The four elements of the vector are the coordinates of the lower left corner \
 and width and height of the figure.  \
 @xref{XREFfigureunits, , @w{units property}}.";
         s.valid = valid_4elvec;
 
       case "renderer"
+        s.doc = doc_unused;
+        
       case "renderermode"
+        s.doc = doc_unused;
 
       case "resize"
         s.doc = doc_unused;
 
       case "resizefcn"
         s.doc = "__prop__ is deprecated.  Use @code{sizechangedfcn} instead.";
         s.valid = valid_fcn;
 
       case "selectiontype"
         ## FIXME: docstring explaining what "{normal}|open|alt|extend" mean.
 
       case "sizechangedfcn"
         s.doc = "Callback triggered when the figure window size is changed.";
         s.valid = valid_fcn;
 
       case "toolbar"
-        s.doc = "Control the display of the toolbar along the bottom of the \
-figure window.  When set to @qcode{\"auto\"}, the display is based on the \
-value of the @code{menubar} property.";
+        s.doc = "Control the display of the toolbar (along the bottom of the \
+menubar) and the status bar.  When set to @qcode{\"auto\"}, the display is based on the value of the @code{menubar} property.";
 
       case "units"
         s.doc = "The unit used to compute the @code{position} and \
 @code{outerposition} properties.";
 
       case "windowbuttondownfcn"
         s.doc = "@xref{XREFfigurewindowbuttonupfcn, , \
 @w{windowbuttonupfcn property}}.";
@@ -486,19 +498,23 @@ value of the @code{menubar} property.";
         s.doc = "With @code{windowbuttondownfcn} and \
 @code{windowbuttonmotionfcn}, the mouse callback functions.  These \
 callback functions are called when a mouse button is pressed, dragged, or \
 released respectively.  When these callback functions are executed, the \
 @code{currentpoint} property holds the current coordinates of the cursor.";
         s.valid = valid_fcn;
 
       case "windowkeypressfcn"
+        s.doc = "Function that is executed when a key is pressed and \
+the figure has focus.";
         s.valid = valid_fcn;
 
       case "windowkeyreleasefcn"
+        s.doc = "Function that is executed when a key is released and \
+the figure has focus.";
         s.valid = valid_fcn;
 
       case "windowscrollwheelfcn"
         s.valid = valid_fcn;
 
       case "windowstyle"
         s.doc = "The window style of a figure.  One of the following values:\n\
 @table @code\n\
@@ -518,28 +534,34 @@ Changing modes of a visible figure may c
   elseif (strcmp (objname, "axes"))
     switch (field)
       ## Overridden shared properties
       case "clipping"
         s.doc = doc_unused;
 
       ## Specific properties
       case "activepositionproperty"
+        s.doc = "Specify which of @qcode{\"position\"} or \
+@qcode{\"outerposition\"} properties takes precedence when axes \
+annotations extent changes.  @xref{XREFaxesposition, , @w{position property}}, \
+and @ref{XREFaxesposition, , @w{outerposition property}}.";
+
       case "alim"
         s.doc = sprintf (doc_notimpl, "Transparency");
 
       case "alimmode"
       case "ambientlightcolor"
-        s.doc = sprintf (doc_notimpl, "Light");
+        s.doc = doc_unused;
 
       case "box"
         s.doc = "Control whether the axes has a surrounding box.";
 
       case "boxstyle"
-        s.doc = doc_unused;
+        s.doc = "For 3-D axes, control whether the @qcode{\"full\"} \
+box is drawn or only the 3 @qcode{\"back\"} axes";
 
       case "cameraposition"
         s.valid = valid_3elvec;
 
       case "camerapositionmode"
       case "cameratarget"
         s.valid = valid_3elvec;
 
@@ -584,66 +606,70 @@ matrix specifies the point nearest to th
 second row the furthest point.  The two points forms a line which is \
 perpendicular to the screen.";
         s.valid = "2-by-3 matrix";
 
       case "dataaspectratio"
         s.doc = "Specify the relative height and width of the data \
 displayed in the axes.  Setting @code{dataaspectratio} to \
 @w{@code{[1, 2]}} causes the length of one unit as displayed on the x-axis \
-to be the same as the length of 2 units on the y-axis.  __modemsg__.";
+to be the same as the length of 2 units on the y-axis.  \
+@xref{XREFdaspect, , daspect function}.  __modemsg__.";
         s.valid = valid_3elvec;
 
       case "dataaspectratiomode"
       case "fontangle"
+        s.doc = "Control whether the font is italic or normal.";
       case "fontname"
         s.doc = "Name of the font used for axes annotations.";
         s.valid = valid_string;
 
       case "fontsize"
         s.doc = "Size of the font used for axes annotations.  \
 @xref{XREFaxesfontunits, , @w{fontunits property}}.";
         s.valid = "scalar";
 
       case "fontunits"
         s.doc = "Unit used to interpret @code{fontsize} property.";
 
       case "fontsmoothing"
         s.doc = doc_unused;
 
       case "fontweight"
-
+        s.doc = "Control variant of base font used: bold, demi, light, normal.";
       case "gridalpha"
         s.doc = sprintf (doc_notimpl, "Transparency");
 
       case "gridalphamode"
         s.doc = doc_unused;
 
       case "gridcolor"
         s.doc = doc_unused;
 
       case "gridcolormode"
         s.doc = doc_unused;
 
       case "gridlinestyle"
 
       case "labelfontsizemultiplier"
-        s.doc = doc_unused;
+        s.doc = "Ratio between the x/y/zlabel fontsize and the tick \
+label fontsize";
 
       case "layer"
         s.doc = "Control whether the axes is drawn below child graphics \
 objects (ticks, labels, etc.@: covered by plotted objects) or above.";
 
       case "linestyleorder"
         s.doc = doc_unused;
 
       case "linestyleorderindex"
         s.doc = doc_unused;
 
       case "linewidth"
+        s.doc = "Width of the main axes lines";
 
       case "minorgridalpha"
         s.doc = sprintf (doc_notimpl, "Transparency");
 
       case "minorgridalphamode"
         s.doc = doc_unused;
 
       case "minorgridcolor"
@@ -653,31 +679,40 @@ objects (ticks, labels, etc.@: covered b
         s.doc = doc_unused;
 
       case "minorgridlinestyle"
       case "mousewheelzoom"
         s.doc = "Fraction of axes limits to zoom for each wheel movement.";
         s.valid = "scalar in the range (0, 1)";
 
       case "nextplot"
+        s.doc = "__prop__ is used by high level plotting functions to \
+decide what to do with graphics objects already present in the axes.  \
+@xref{XREFnewplot, , @w{newplot function}}.  The state of __prop__ \
+is typically controlled using the @code{hold} function.  \
+@xref{XREFhold, , @w{hold function}}.";
+        
       case "outerposition"
         s.doc = "Specify the position of the plot including titles, \
 axes, and legend.  The four elements of the vector are the \
 coordinates of the lower left corner and width and height of the \
 plot, in units normalized to the width and height of the plot \
 window.  For example, @code{[0.2, 0.3, 0.4, 0.5]} sets the lower \
 left corner of the axes at @math{(0.2, 0.3)} and the width and \
 height to be 0.4 and 0.5 respectively.  \
 @xref{XREFaxesposition, , @w{position property}}.";
         s.valid = valid_4elvec;
 
       case "pickableparts"
         s.doc = doc_unused;
 
       case "plotboxaspectratio"
+        s.doc = "@xref{XREFpbaspect, , pbaspect function}.  \
+__modemsg__.";
+        
       case "plotboxaspectratiomode"
       case "position"
         s.doc = "Specify the position of the plot excluding titles, \
 axes, and legend.  The four elements of the vector are the \
 coordinates of the lower left corner and width and height of the \
 plot, in units normalized to the width and height of the plot \
 window.  For example, @code{[0.2, 0.3, 0.4, 0.5]} sets the lower \
 left corner of the axes at @math{(0.2, 0.3)} and the width and \
@@ -688,96 +723,114 @@ height to be 0.4 and 0.5 respectively.  
       case "projection"
         s.doc = doc_unused;
 
       case "sortmethod"
         s.doc = doc_unused;
 
       case "tickdir"
         s.doc = "Control whether axes tick marks project \"in\" to the plot \
-box or \"out\".";
+box or \"out\".  __modemsg__.";
 
       case "tickdirmode"
 
       case "ticklabelinterpreter"
         s.doc = "Control the way x/y/zticklabel properties are interpreted.\n\
 @xref{XREFinterpreterusage, , @w{Use of the interpreter property}}.";
 
       case "ticklength"
         s.doc = "Two-element vector @code{[2Dlen 3Dlen]} specifying the \
 length of the tickmarks relative to the longest visible axis.";
         s.valid = valid_2elvec;
 
       case "tightinset"
+        s.doc = "Size of the @code{[left bottom right top]} margins \
+around the axes that enclose labels and title annotations.";
+        s.valid = valid_4elvec;
+        
       case "title"
         s.doc = "Graphics handle of the title text object.";
         s.valid = valid_handle;
 
       case "titlefontsizemultiplier"
-        s.doc = doc_unused;
+        s.doc = "Ratio between the title fontsize and the tick \
+label fontsize";
+        s.valid = "positive scalar";
 
       case "titlefontweight"
-        s.doc = doc_unused;
+        s.doc = "Control variant of base font used for the axes title.";
 
       case "units"
+        s.doc = "Units used to interpret the @qcode{\"position\"}, \
+@qcode{\"outerposition\"}, and @qcode{\"tightinset\"} properties."; 
+
       case "view"
         s.doc = "Two-element vector @code{[azimuth elevation]} specifying \
 the viewpoint for three-dimensional plots";
         s.valid = valid_2elvec;
 
       case "xaxislocation"
+        s.doc = "Control the x axis location.";
+        
       case "xcolor"
-        s.doc = "Color of the x-axis.  @xref{Colors, , colorspec}.";
+        s.doc = "Color of the x-axis.  @xref{Colors, , colorspec}.  \
+__modemsg__.";
         s.valid = packopt ({markdef(valid_color), "@qcode{\"none\"}"});
 
       case "xcolormode"
-        s.doc = doc_unused;
 
       case "xdir"
+        s.doc = "Direction of the x axis: @qcode{\"normal\"} is left \
+to right.";
+        
       case "xgrid"
         s.doc = "Control whether major x grid lines are displayed.";
 
       case "xlabel"
         s.doc = "Graphics handle of the x label text object.";
         s.valid = valid_handle;
 
       case "xlim"
         s.doc = "Two-element vector @code{[xmin xmax]} specifying the limits \
-for the x-axis.  __modemsg__.  @xref{XREFxlim, , @w{xlim function}}.";
+for the x-axis.  __modemsg__.   @xref{XREFxlim, , @w{xlim function}}.";
         s.valid = valid_2elvec;
 
       case "xlimmode"
       case "xminorgrid"
         s.doc = "Control whether minor x grid lines are displayed.";
 
       case "xminortick"
-      case "xscale"
+      case "xscale"        
       case "xtick"
         s.doc = "Position of x tick marks.  __modemsg__.";
         s.valid = "vector";
         s.printdefault = false;
 
       case "xticklabel"
         s.doc = "Labels of x tick marks.  __modemsg__.";
         s.valid = valid_cellstring;
 
       case "xticklabelmode"
       case "xticklabelrotation"
         s.doc = doc_unused;
 
       case "xtickmode"
       case "yaxislocation"
+        s.doc = "Control the y-axis location.";
+        
       case "ycolor"
         s.doc = "Color of the y-axis.  @xref{Colors, , colorspec}.";
         s.valid = packopt ({markdef(valid_color), "@qcode{\"none\"}"});
 
       case "ycolormode"
-        s.doc = doc_unused;
 
       case "ydir"
+        s.doc = "Direction of the y-axis: @qcode{\"normal\"} is bottom \
+to top.";
+
       case "ygrid"
         s.doc = "Control whether major y grid lines are displayed.";
 
       case "ylabel"
         s.doc = "Graphics handle of the y label text object.";
         s.valid = valid_handle;
 
       case "ylim"
@@ -805,18 +858,16 @@ for the y-axis.  __modemsg__.  @xref{XRE
         s.doc = doc_unused;
 
       case "ytickmode"
       case "zcolor"
         s.doc = "Color of the z-axis.  @xref{Colors, , colorspec}.";
         s.valid = packopt ({markdef(valid_color), "@qcode{\"none\"}"});
 
       case "zcolormode"
-        s.doc = doc_unused;
-
       case "zdir"
       case "zgrid"
         s.doc = "Control whether major z grid lines are displayed.";
 
       case "zlabel"
         s.doc = "Graphics handle of the z label text object.";
         s.valid = valid_handle;
 
@@ -941,20 +992,25 @@ z data.";
         s.valid = valid_color;
 
       case "displayname"
       case "edgecolor"
         s.doc = sprintf (doc_notimpl, "Background area");
         s.valid = valid_color;
 
       case "editing"
+        s.doc = doc_unused;
 
       case "extent"
+        s.doc = "Vector @code{[x0 y0 width height]} indicating the size \
+and location of the text string.";
+        s.valid = valid_4elvec;
+        
       case "fontangle"
-        s.doc = "Flag whether the font is italic or normal.  \
+        s.doc = "Control whether the font is italic or normal.  \
 @code{fontangle} is currently unused.";
 
       case "fontname"
         s.doc = "The font used for the text.";
         s.valid = valid_string;
 
       case "fontsize"
         s.doc = "The font size of the text as measured in \
diff --git a/libinterp/corefcn/sub2ind.cc b/libinterp/corefcn/sub2ind.cc
--- a/libinterp/corefcn/sub2ind.cc
+++ b/libinterp/corefcn/sub2ind.cc
@@ -232,17 +232,17 @@ ind = [2, 8];
 @end example
 
 If the number of output subscripts exceeds the number of dimensions, the
 exceeded dimensions are set to @code{1}.  On the other hand, if fewer
 subscripts than dimensions are provided, the exceeding dimensions are merged
 into the final requested dimension.  For clarity, consider the following
 examples:
 
-@example%
+@example
 @group
 ind  = [2, 8];
 dims = [3, 3];
 ## same as dims = [3, 3, 1]
 [r, c, s] = ind2sub (dims, ind)
     @result{} r =  2   2
     @result{} c =  1   3
     @result{} s =  1   1
