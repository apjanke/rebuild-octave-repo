# HG changeset patch
# User Rik <rik@octave.org>
# Date 1546063527 28800
#      Fri Dec 28 22:05:27 2018 -0800
# Node ID 7902a3a8f02cbd34704c6f3e76aa8b01b96917ab
# Parent  c4ad9ad970a92949d42fb847ffcd640a0e629d04
# Parent  522a70bb738f6cdfea6d983eefb6322c37417efd
maint: merge stable to default.

diff --git a/libinterp/corefcn/graphics.cc b/libinterp/corefcn/graphics.cc
--- a/libinterp/corefcn/graphics.cc
+++ b/libinterp/corefcn/graphics.cc
@@ -5528,21 +5528,42 @@ axes::properties::remove_child (const gr
       base_properties::remove_child (h);
 
 }
 
 void
 axes::properties::adopt (const graphics_handle& h)
 {
   graphics_object go (gh_manager::get_object (h));
+
   if (go.isa ("light") && go.get_properties ().is_visible ())
     increase_num_lights ();
 
   base_properties::adopt (h);
 
+  // FIXME: For performance reasons, we would like to call
+  //          update_axis_limits ("xlim", h);
+  //        which updates the limits based ONLY on the new data from h.
+  //        But this isn't working properly at the moment, so we
+  //        call the other form which invokes a full tree traversal of all
+  //        of the axes children.
+  if (xlimmode_is ("auto"))
+    update_axis_limits ("xlim");
+
+  if (ylimmode_is ("auto"))
+    update_axis_limits ("ylim");
+
+  if (zlimmode_is ("auto"))
+    update_axis_limits ("zlim");
+
+  if (climmode_is ("auto"))
+    update_axis_limits ("clim");
+
+  if (climmode_is ("auto"))
+    update_axis_limits ("alim");
 }
 
 inline Matrix
 xform_matrix (void)
 {
   Matrix m (4, 4, 0.0);
 
   for (int i = 0; i < 4; i++)
@@ -12450,29 +12471,29 @@ make_graphics_object (const std::string&
                                             false, false);
     }
   catch (octave::execution_exception& e)
     {
       error (e, "__go_%s__: unable to create graphics handle",
              go_name.c_str ());
     }
 
-  adopt (parent, h);
-
   try
     {
       xset (h, xargs);
     }
   catch (octave::execution_exception& e)
     {
       delete_graphics_object (h);
       error (e, "__go_%s__: unable to create graphics handle",
              go_name.c_str ());
     }
 
+  adopt (parent, h);
+
   xcreatefcn (h);
   xinitialize (h);
 
   retval = h.value ();
 
   Vdrawnow_requested = true;
 
   return retval;
diff --git a/test/bug-55321/bug-55321.tst b/test/bug-55321/bug-55321.tst
new file mode 100644
--- /dev/null
+++ b/test/bug-55321/bug-55321.tst
@@ -0,0 +1,35 @@
+## Copyright (C) 2018 Rik Wehbring
+##
+## This file is part of Octave.
+##
+## Octave is free software: you can redistribute it and/or modify it
+## under the terms of the GNU General Public License as published by
+## the Free Software Foundation, either version 3 of the License, or
+## (at your option) any later version.
+##
+## Octave is distributed in the hope that it will be useful, but
+## WITHOUT ANY WARRANTY; without even the implied warranty of
+## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+## GNU General Public License for more details.
+##
+## You should have received a copy of the GNU General Public License
+## along with Octave; see the file COPYING.  If not, see
+## <https://www.gnu.org/licenses/>.
+
+%!function cb_children (hg)
+%!  hl = get (hg, "children");
+%!  color = get (hl, "color");
+%!  set (hl, "userdata", isequal (color, [1 0 0]));
+%!endfunction
+
+%!test
+%! hf = figure ("visible", "off");
+%! unwind_protect
+%!   hax = axes ("parent", hf);
+%!   hg = hggroup ();
+%!   addlistener (hg, "children", @cb_children);
+%!   hl = line ([0, 1], [1, 1], "color", "r", "parent", hg);
+%!   assert (get (hl, "userdata"), true);
+%! unwind_protect_cleanup
+%!   close (hf);
+%! end_unwind_protect
diff --git a/test/bug-55321/module.mk b/test/bug-55321/module.mk
new file mode 100644
--- /dev/null
+++ b/test/bug-55321/module.mk
@@ -0,0 +1,4 @@
+bug_55321_TEST_FILES = \
+  %reldir%/bug-55321.tst
+
+TEST_FILES += $(bug_55321_TEST_FILES)
