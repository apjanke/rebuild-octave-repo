# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1466529044 14400
#      Tue Jun 21 13:10:44 2016 -0400
# Node ID 307a2d7ff29b5f1e60643a7692837050ac2241ff
# Parent  63f8e75e30431de39eb93d32d0cbf88c6213c6ff
fix cross build of mkoctfile

* mkoctfile.in.cc: Directly include <sys/types.h>, <sys/wait.h>, and
<unistd.h> instead of liboctave/wrappers headers when building cross
version.
(octave_unlink_wrapper, octave_wifexited_wrapper,
octave_wexitstatus_wrapper): New static functions for cross version.

* src/module.mk: Define CROSS=1 when building cross versions of
mkoctfile and octave-config.

diff --git a/src/mkoctfile.in.cc b/src/mkoctfile.in.cc
--- a/src/mkoctfile.in.cc
+++ b/src/mkoctfile.in.cc
@@ -30,31 +30,59 @@ along with Octave; see the file COPYING.
 #include <map>
 #include <list>
 #include <algorithm>
 #include <iostream>
 #include <fstream>
 #include <vector>
 #include <cstdlib>
 
-#include "unistd-wrappers.h"
-#include "wait-wrappers.h"
+#if defined (CROSS)
+#  include <sys/types.h>
+#  include <sys/wait.h>
+#  include <unistd.h>
+#else
+#  include "unistd-wrappers.h"
+#  include "wait-wrappers.h"
+#endif
 
 static std::map<std::string, std::string> vars;
 
 #if ! defined (OCTAVE_VERSION)
 #  define OCTAVE_VERSION %OCTAVE_CONF_VERSION%
 #endif
 
 #if ! defined (OCTAVE_PREFIX)
 #  define OCTAVE_PREFIX %OCTAVE_CONF_PREFIX%
 #endif
 
 #include "shared-fcns.h"
 
+#if defined (CROSS)
+
+static int
+octave_unlink_wrapper (const char *nm)
+{
+  return unlink (nm);
+}
+
+static bool
+octave_wifexited_wrapper (int status)
+{
+  return WIFEXITED (status);
+}
+
+static int
+octave_wexitstatus_wrapper (int status)
+{
+  return WEXITSTATUS (status);
+}
+
+#endif
+
 static std::string
 get_line (FILE *fp)
 {
   static std::vector<char> buf (100);
   unsigned int idx = 0;
   int c;
 
   while (true)
diff --git a/src/module.mk b/src/module.mk
--- a/src/module.mk
+++ b/src/module.mk
@@ -173,27 +173,27 @@ mostlyclean-local: src-mostlyclean-local
 
 if AMCOND_CROSS_TOOLS
 
 ## Building cross mkoctfile.
 
 OCTAVE_CROSS_TOOLS += src/$(host_triplet)-mkoctfile$(BUILD_EXEEXT)
 
 src/$(host_triplet)-mkoctfile$(BUILD_EXEEXT): src/$(host_triplet)-mkoctfile.cc
-	$(BUILD_CXX) -o src/$(host_triplet)-mkoctfile$(BUILD_EXEEXT) -Dgnulib='' -Doctave_idx_type=int $(DEFAULT_INCLUDES) $(BUILD_CXXFLAGS) $(BUILD_LDFLAGS) -I$(srcdir)/src src/$(host_triplet)-mkoctfile.cc
+	$(BUILD_CXX) -o src/$(host_triplet)-mkoctfile$(BUILD_EXEEXT) -DCROSS=1 $(DEFAULT_INCLUDES) $(BUILD_CXXFLAGS) $(BUILD_LDFLAGS) -I$(srcdir)/src src/$(host_triplet)-mkoctfile.cc
 
 src/$(host_triplet)-mkoctfile.cc: src/mkoctfile.in.cc build-aux/subst-cross-config-vals.sh | src/$(octave_dirstamp)
 	$(AM_V_GEN)$(call simple-filter-rule,build-aux/subst-cross-config-vals.sh)
 
 ## Building cross octave-config.
 
 OCTAVE_CROSS_TOOLS += src/$(host_triplet)-octave-config$(BUILD_EXEEXT)
 
 src/$(host_triplet)-octave-config$(BUILD_EXEEXT): src/$(host_triplet)-octave-config.cc
-	$(BUILD_CXX) -o src/$(host_triplet)-octave-config$(BUILD_EXEEXT) -Dgnulib='' -Doctave_idx_type=int $(DEFAULT_INCLUDES) $(BUILD_CXXFLAGS) $(BUILD_LDFLAGS) -I$(srcdir)/src src/$(host_triplet)-octave-config.cc
+	$(BUILD_CXX) -o src/$(host_triplet)-octave-config$(BUILD_EXEEXT) -DCROSS=1 $(DEFAULT_INCLUDES) $(BUILD_CXXFLAGS) $(BUILD_LDFLAGS) -I$(srcdir)/src src/$(host_triplet)-octave-config.cc
 
 src/$(host_triplet)-octave-config.cc: src/octave-config.in.cc build-aux/subst-default-vals.sh | src/$(octave_dirstamp)
 	$(AM_V_GEN)$(call simple-filter-rule,build-aux/subst-default-vals.sh)
 
 src-mostlyclean-local:
 	-rm -f $(OCTAVE_CROSS_TOOLS)
 
 else
