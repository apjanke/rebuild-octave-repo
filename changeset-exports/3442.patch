# HG changeset patch
# User jwe
# Date 948097122 0
#      Mon Jan 17 08:18:42 2000 +0000
# Node ID 86e1068c2abbcf71a59066a5cd3bb5c011b5aabd
# Parent  36ae9880c594c001866071905b76c0912630a170
[project @ 2000-01-17 08:18:42 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,16 @@
+2000-01-17  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* pt-plot.cc (Fgraw, Fgset, Fgshow, Vgnuplot_command_plot, 
+	Vgnuplot_command_replot, Vgnuplot_command_splot,
+	Vgnuplot_command_using, Vgnuplot_command_with,
+	Vgnuplot_command_axes, Vgnuplot_command_title,
+	Vgnuplot_command_end): Texinfoize doc strings.
+
 2000-01-13  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* parse.y (gobble_leading_whitespace): Discard first space character
 	after consecutive comment characters.
 	* lex.l (grab_help_text): Ditto.
 
 	* lex.l (Vwhitespace_in_literal_matrix, Vwarn_separator_insert,
 	Vwarn_single_quote_string): Texinfoize doc string.
diff --git a/src/pt-plot.cc b/src/pt-plot.cc
--- a/src/pt-plot.cc
+++ b/src/pt-plot.cc
@@ -1061,19 +1061,20 @@ files to hold the plot data.\n\
 {
   octave_value_list retval;
   cleanup_tmp_files ();
   return retval;
 }
 
 
 DEFUN (graw, args, ,
-  "graw (string)\n\
-\n\
-Send STRING directly to gnuplot subprocess.")
+  "-*- texinfo -*-\n\
+@deftypefn {Built-in Function} {} graw (@var{string})\n\
+Send @var{string} directly to gnuplot subprocess.\n\
+@end deftypefn")
 {
   octave_value_list retval;
 
   if (args.length () == 1 && args(0).is_string ())
     {
       string cmd = args(0).string_value ();
 
       if (! (plot_stream && *plot_stream))
@@ -1088,19 +1089,20 @@ Send STRING directly to gnuplot subproce
     }
   else
     print_usage ("graw");
 
   return retval;
 }
 
 DEFUN_TEXT (gset, args, ,
-  "gset [options]\n\
-\n\
-set plotting options for gnuplot")
+  "-*- texinfo -*-\n\
+@deffn {Command} gset options\n\
+Set plotting options for gnuplot\n\
+@end deffn")
 {
   octave_value_list retval;
 
   int argc = args.length () + 1;
 
   string_vector argv = args.make_argv ("set");
 
   if (error_state)
@@ -1141,19 +1143,20 @@ set plotting options for gnuplot")
 DEFUN_TEXT (set, args, nargout,
   "This command is has been replaced by `gset'.")
 {
   warning ("set is obsolete -- use gset instead");
   return Fgset (args, nargout);
 }
 
 DEFUN_TEXT (gshow, args, ,
-  "gshow [options]\n\
-\n\
-show plotting options")
+  "-*- texinfo -*-\n\
+@deffn {Command} gshow options\n\
+Show plotting options.\n\
+@end deffn")
 {
   octave_value_list retval;
 
   int argc = args.length () + 1;
 
   string_vector argv = args.make_argv ("show");
 
   if (error_state)
@@ -1292,38 +1295,54 @@ inefficient, the default value is 0.\n\
   DEFVAR (gnuplot_binary, "gnuplot", gnuplot_binary,
     "-*- texinfo -*-\n\
 @defvr {Built-in Variable} gnuplot_binary\n\
 The name of the program invoked by the plot command.  The default value\n\
 is @code{\"gnuplot\"}.  @xref{Installation}.\n\
 @end defvr");
 
   DEFVAR (gnuplot_command_plot, "pl", gnuplot_command_plot,
-    "");
+    "-*- texinfo -*-\n\
+@defvr {Built-in Variable} gnuplot_command_plot\n\
+@end defvr");
 
   DEFVAR (gnuplot_command_replot, "rep", gnuplot_command_replot,
-    "");
+    "-*- texinfo -*-\n\
+@defvr {Built-in Variable} gnuplot_command_replot\n\
+@end defvr");
 
   DEFVAR (gnuplot_command_splot, "sp", gnuplot_command_splot,
-    "");
+    "-*- texinfo -*-\n\
+@defvr {Built-in Variable} gnuplot_command_splot\n\
+@end defvr");
 
   DEFVAR (gnuplot_command_using, "u", gnuplot_command_using,
-    "");
+    "-*- texinfo -*-\n\
+@defvr {Built-in Variable} gnuplot_command_using\n\
+@end defvr");
 
   DEFVAR (gnuplot_command_with, "w", gnuplot_command_with,
-    "");
+    "-*- texinfo -*-\n\
+@defvr {Built-in Variable} gnuplot_command_with\n\
+@end defvr");
 
   DEFVAR (gnuplot_command_axes, "ax", gnuplot_command_axes,
-    "");
+    "-*- texinfo -*-\n\
+@defvr {Built-in Variable} gnuplot_command_axes\n\
+@end defvr");
 
   DEFVAR (gnuplot_command_title, "t", gnuplot_command_title,
-    "");
+    "-*- texinfo -*-\n\
+@defvr {Built-in Variable} gnuplot_command_title\n\
+@end defvr");
 
   DEFVAR (gnuplot_command_end, "\n", gnuplot_command_end,
-    "");
+    "-*- texinfo -*-\n\
+@defvr {Built-in Variable} gnuplot_command_end\n\
+@end defvr");
 
 #ifdef GNUPLOT_HAS_FRAMES
   double with_frames = 1.0;
 #else
   double with_frames = 0.0;
 #endif
 
   DEFVAR (gnuplot_has_frames, with_frames, gnuplot_has_frames,
