# HG changeset patch
# User Richard Crozier <richard.crozier@yahoo.co.uk>
# Date 1350729369 -3600
#      Sat Oct 20 11:36:09 2012 +0100
# Node ID 5649e84ea3ce3c667154d69a390004fd1057d52d
# Parent  673889d492563428fa9da7ee5c1c88ba002d22e4
GUI: add toolbar to editor when undocked

* file_editor_interface.h
  (file_editor_interface::file_editor_interface): Added
  dockWidget_topLevelChanged slot to capture topLevelChanged signal
  when undocking editor window.

diff --git a/libgui/src/m-editor/file-editor-interface.h b/libgui/src/m-editor/file-editor-interface.h
--- a/libgui/src/m-editor/file-editor-interface.h
+++ b/libgui/src/m-editor/file-editor-interface.h
@@ -39,16 +39,26 @@ class file_editor_interface : public QDo
     : QDockWidget ((QWidget*)mainWindow) // QDockWidget constructor is explicit, hence the cast.
   {
     setObjectName ("FileEditor");
     _terminal = terminal;
     _main_window = mainWindow;
 
     connect (this, SIGNAL (visibilityChanged (bool)), this,
              SLOT (handle_visibility_changed (bool)));
+
+    // connect the editor dockWidget's topLevelChanged signal, which
+    // is emitted when its floating property changes, to a
+    // user-defined slot. We do this so than when the editor is popped
+    // out we can turn it into a proper window with all the normal
+    // toolbar buttons for a window, i.e. minimise, maximise, close
+    connect (this,
+             SIGNAL(topLevelChanged(bool)), this,
+             SLOT(dockWidget_topLevelChanged(bool)));
+
   }
 
   virtual ~file_editor_interface () { }
 
   virtual QMenu *debug_menu () = 0;
   virtual QToolBar *toolbar () = 0;
 
   virtual void handle_entered_debug_mode () = 0;
@@ -73,11 +83,32 @@ protected:
   }
 
 protected slots:
   void handle_visibility_changed (bool visible)
   {
     if (visible)
       emit active_changed (true);
   }
+
+  // when the floating property of a dockWidget is changed from docked
+  // to floating we make it a top level window (with minmize,
+  // maximize, and close button in the title bar) by calling
+  // setWindowFlags(Qt::Window)
+  //
+  // The dockWidget will automatically regain it's Qt::widget flag
+  // when it becomes docked again (by dragging it to the right place
+  // or double clicking the title bar)
+  void dockWidget_topLevelChanged (bool isFloating)
+  {
+      if (isFloating)
+        {
+          //file_editor.setWindowFlags(Qt::Window);
+          this->setWindowFlags(Qt::Window);
+          // setWindowFlags calls setParent() when changing the flags
+          // for a window, causing the widget to be hidden. We must
+          // call show() to make the widget visible again
+          this->show();
+        }
+  }
 };
 
 #endif // FILEEDITORINTERFACE_H
