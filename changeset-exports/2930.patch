# HG changeset patch
# User jwe
# Date 862812057 0
#      Mon May 05 06:00:57 1997 +0000
# Node ID 1b219fa3c56a2d2158dab7a164be2ad2dbe13fa5
# Parent  32186c9020162d6efcb6ecaae8866ed2d8ffbd16
[project @ 1997-05-05 05:57:02 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,13 @@
+Mon May  5 00:58:00 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* configure.in: Make --enable-readline work again.
+	* Makeconf.in: Ditto.
+
 Tue Apr  8 12:38:18 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* mkoctfile.in: Do substitute SH_LD and SH_LDFLAGS.  Don't
 	substitute or use LIBFLAGS, RLD_FLAG, OCTAVE_LIBS, FLIBS, LEXLIB,
 	TERMLIBS, LIBS, LDFLAGS, LIBPLPLOT, or LIBDLFCN.  Use $SH_LD and
 	$SH_LDFLAGS, not $CXX -shared.
 
 	* Makeconf.in (do-subst-config-vals): Also substitute SH_LD and
diff --git a/Makeconf.in b/Makeconf.in
--- a/Makeconf.in
+++ b/Makeconf.in
@@ -117,18 +117,19 @@ ALL_LDFLAGS = $(LIBFLAGS) $(FORTRAN_MAIN
 SH_LD = @SH_LD@
 SH_LDFLAGS = @SH_LDFLAGS@
 
 RLD_FLAG = @RLD_FLAG@
 
 FLIBS = @FLIBS@
 
 TERMLIBS = @TERMLIBS@
+LIBDLFCN = @LIBDLFCN@
 LIBPLPLOT = @LIBPLPLOT@
-LIBDLFCN = @LIBDLFCN@
+LIBREADLINE = @LIBREADLINE@
 
 # The arguments passed to configure.
 config_opts = @config_opts@
 
 # A shell command to extract the version number from version.h.
 getversion = sed -e '/VERSION/!d' -e 's/.*"\(.*\)".*$$/\1/' -e q
 
 # Look for version.h to get version information.
diff --git a/NEWS b/NEWS
--- a/NEWS
+++ b/NEWS
@@ -1,11 +1,15 @@
 Summary of changes since version 2.0.5:
 --------------------------------------
 
+  * The built-in variable PWD has been removed.  If you need to get
+    the value of the current working directory, use the pwd() function
+    instead.
+
   * New operators.  Octave's parser now recognizes the following
     operators:  << >> += -= *= /= .+= .-= .*= ./= &= |= <<= >>=.  So
     far, there are only a few operations defined that actually use
     them (this should change before 2.1 is released).
 
   * New built-in data types:
 
     logical:
@@ -94,16 +98,21 @@ Summary of changes since version 2.0.5:
     following form:
 
       JAC = f (X, T)
 
     where JAC is the Jacobian matrix of partial derivatives of the
     right-hand-side functions that define the set of differential
     equations with respect to the state vector X.
 
+  * Structure elements completion on the command line actually works
+    now.
+
+  * New configure option, --enable-readline.
+
 Summary of changes for version 2.0.5:
 ------------------------------------
 
   * A `switch' statement is now available.  See the Statements chapter
     in the manual for details.
 
   * Commands like ls, save, and cd may now also be used as formal
     parameters for functions.
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -16,17 +16,17 @@ dnl Copyright (C) 1996, 1997 John W. Eat
 ### FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ### for more details.
 ### 
 ### You should have received a copy of the GNU General Public License
 ### along with Octave; see the file COPYING.  If not, write to the Free
 ### Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ### 02111-1307, USA. 
 
-AC_REVISION($Revision: 1.265 $)
+AC_REVISION($Revision: 1.266 $)
 AC_PREREQ(2.9)
 AC_INIT(src/octave.cc)
 AC_CONFIG_HEADER(config.h)
 
 AC_DEFINE(OCTAVE_SOURCE, 1)
 
 OCTAVE_HOST_TYPE
 
@@ -155,23 +155,23 @@ AC_SUBST(LIBPLPLOT)
 AC_SUBST(PLPLOT_DIR)
 
 ### Allow the user disable support for command line editing using GNU
 ### readline.
 
 READLINE_DIR=readline
 USE_READLINE=true
 LIBREADLINE=-lreadline
-dnl AC_ARG_ENABLE(readline,
-dnl  [  --enable-readline       use readline library (default is yes)],
-dnl  [if test "$enableval" = no; then
-dnl     USE_READLINE=false;
-dnl     LIBREADLINE="";
-dnl     READLINE_DIR="";
-dnl   fi], [])
+AC_ARG_ENABLE(readline,
+  [  --enable-readline       use readline library (default is yes)],
+  [if test "$enableval" = no; then
+     USE_READLINE=false;
+     LIBREADLINE="";
+     READLINE_DIR="";
+   fi], [])
 if $USE_READLINE; then
   AC_DEFINE(USE_READLINE, 1)
 fi
 AC_SUBST(LIBREADLINE)
 AC_SUBST(READLINE_DIR)
 
 ### Make it possible to have Octave's array and matrix classes do bounds
 ### checking on element references.  This slows some operations down a
diff --git a/src/Makefile.in b/src/Makefile.in
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -5,17 +5,17 @@
 # jwe@bevo.che.wisc.edu
 # University of Wisconsin-Madison
 # Department of Chemical Engineering
 
 TOPDIR = ..
 
 srcdir = @srcdir@
 top_srcdir = @top_srcdir@
-VPATH = @srcdir@
+VPATH = @srcdir@:@srcdir@/DLD-FUNCTIONS:@srcdir@/OPERATORS:@srcdir@/TEMPLATE-INST
 
 include $(TOPDIR)/Makeconf
 
 INSTALL = @INSTALL@
 INSTALL_PROGRAM = @INSTALL_PROGRAM@
 INSTALL_DATA = @INSTALL_DATA@
 
 PT_FLAGS = -fexternal-templates -fno-implicit-templates
@@ -34,151 +34,156 @@ ifeq ($(OCTAVE_LITE), true)
     %.oct : pic/%.o
 	  $(SH_LD) $(SH_LDFLAGS) -o $@ $<
   else
     %.oct : %.o
 	  $(SH_LD) $(SH_LDFLAGS) -o $@ $<
   endif
 endif
 
-DLD_SRC := balance.cc chol.cc colloc.cc dassl.cc det.cc eig.cc \
+DLD_XSRC := balance.cc chol.cc colloc.cc dassl.cc det.cc eig.cc \
 	   expm.cc fft.cc fft2.cc filter.cc find.cc fsolve.cc \
 	   fsqp.cc getgrent.cc getpwent.cc getrusage.cc givens.cc \
 	   hess.cc ifft.cc ifft2.cc inv.cc log.cc lpsolve.cc lsode.cc \
 	   lu.cc minmax.cc npsol.cc pinv.cc qpsol.cc qr.cc quad.cc \
 	   qzval.cc rand.cc schur.cc sort.cc svd.cc syl.cc time.cc 
 
-DLD_OBJ := $(patsubst %.cc, %.o, $(DLD_SRC))
+DLD_SRC := $(addprefix DLD-FUNCTIONS/, $(DLD_XSRC))
+
+DLD_OBJ := $(patsubst %.cc, %.o, $(DLD_XSRC))
 
 ifeq ($(OCTAVE_LITE), true)
   OCT_FILES := $(patsubst %.o, %.oct, $(DLD_OBJ))
   ifdef CXXPICFLAG
     DLD_PICOBJ := $(addprefix pic/, $(DLD_OBJ))
   else
     DLD_PICOBJ := $(DLD_OBJ)
   endif
   ifeq ($(WITH_DYNAMIC_LINKING), false)
     DLD_STATIC_OBJ := $(DLD_OBJ)
   endif
 else
   DLD_STATIC_OBJ := $(DLD_OBJ)
 endif
 
-INCLUDES := defun.h defun-dld.h defun-int.h dirfns.h dynamic-ld.h \
-	error.h file-io.h fn-cache.h gripes.h help.h input.h lex.h \
-	load-save.h oct.h oct-fstrm.h oct-hist.h oct-iostrm.h \
-	oct-map.h oct-obj.h oct-prcstrm.h oct-procbuf.h \
-	oct-stdstrm.h oct-stream.h oct-strstrm.h pager.h parse.h \
-	pathlen.h pr-output.h procstream.h pt-base.h pt-cmd.h \
+OV_INCLUDES := ov-re-mat.h ov-cx-mat.h ov-ch-mat.h \
+	ov-list.h ov-struct.h ov-scalar.h ov-range.h \
+	ov-complex.h ov-va-args.h ov-colon.h ov-base.h \
+	ov-str-mat.h ov-bool-mat.h ov-bool.h ov-file.h ov.h \
+	ov-typeinfo.h
+
+PT_INCLUDES := pt-base.h pt-cmd.h \
 	pt-const.h pt-exp-base.h pt-exp.h pt-id.h pt-indir.h \
 	pt-mat.h pt-misc.h pt-mvr-base.h pt-mvr.h \
-	pt-plot.h pt-pr-code.h pt-walk.h sighandlers.h symtab.h \
-	sysdep.h systime.h syswait.h token.h toplev.h \
-	unwind-prot.h utils.h variables.h version.h xdiv.h xpow.h \
-	BaseSLList.h Map.h SLList.h SLStack.h Stack.h ov-re-mat.h \
-	ov-cx-mat.h ov-ch-mat.h ov-list.h ov-struct.h ov-scalar.h \
-	ov-range.h ov-complex.h ov-va-args.h ov-colon.h ov-base.h \
-	ov-str-mat.h ov-bool-mat.h ov-bool.h ov-file.h ov.h \
-	ov-typeinfo.h ops.h oct-sym.h oct-fcn.h oct-builtin.h \
-	oct-mapper.h oct-usr-fcn.h
+	pt-plot.h pt-pr-code.h pt-walk.h 
 
-TI_SRC := Array-oc.cc Array-os.cc Array-tc.cc Map-fnc.cc Map-tc.cc \
-	SLList-expr.cc SLList-misc.cc SLList-plot.cc SLList-tc.cc \
-	SLList-tm.cc SLStack-i.cc SLStack-pc.cc SLStack-str.cc \
-	SLStack-sym.cc SLStack-tok.cc SLStack-ue.cc SLStack-ui.cc
-
-TI_OBJ := $(patsubst %.cc, %.o, $(TI_SRC))
+INCLUDES := BaseSLList.h Map.h SLList.h SLStack.h Stack.h defun-dld.h \
+	defun-int.h defun.h dirfns.h dynamic-ld.h error.h file-io.h \
+	fn-cache.h gripes.h help.h input.h lex.h load-save.h \
+	oct-builtin.h oct-fcn.h oct-fstrm.h oct-hist.h oct-iostrm.h \
+	oct-map.h oct-mapper.h oct-obj.h oct-prcstrm.h oct-procbuf.h \
+	oct-stdstrm.h oct-stream.h oct-strstrm.h oct-sym.h \
+	oct-usr-fcn.h oct.h ops.h pager.h parse.h pathlen.h \
+	pr-output.h procstream.h sighandlers.h symtab.h sysdep.h \
+	systime.h syswait.h token.h toplev.h unwind-prot.h utils.h \
+	variables.h version.h xdiv.h xpow.h $(OV_INCLUDES) $(PT_INCLUDES)
 
-TI_PICOBJ := $(TI_OBJ)
-ifeq ($(SHARED_LIBS), true)
-  ifdef CXXPICFLAG
-    TI_PICOBJ := $(addprefix pic/, $(TI_OBJ))
-  endif
-endif
+TI_XSRC := Array-oc.cc Array-os.cc Array-tc.cc Map-fnc.cc \
+	Map-tc.cc SLList-expr.cc SLList-misc.cc SLList-plot.cc \
+	SLList-tc.cc SLList-tm.cc SLStack-i.cc SLStack-pc.cc \
+	SLStack-str.cc SLStack-sym.cc SLStack-tok.cc \
+	SLStack-ue.cc SLStack-ui.cc
 
-OP_SOURCES := op-b-b.cc op-bm-bm.cc op-cm-cm.cc op-cm-cs.cc \
+TI_SRC := $(addprefix TEMPLATE-INST/, $(TI_XSRC))
+
+OP_XSRC := op-b-b.cc op-bm-bm.cc op-cm-cm.cc op-cm-cs.cc \
 	op-cm-m.cc op-cm-s.cc op-cs-cm.cc op-cs-cs.cc op-cs-m.cc \
 	op-cs-s.cc op-m-cm.cc op-m-cs.cc op-m-m.cc op-m-s.cc \
 	op-s-cm.cc op-s-cs.cc op-s-m.cc op-s-s.cc op-str-str.cc \
 	op-fil-b.cc op-fil-bm.cc op-fil-cm.cc op-fil-cs.cc \
 	op-fil-m.cc op-fil-s.cc op-fil-lis.cc op-fil-rec.cc \
 	op-fil-str.cc
 
+OP_SRC := $(addprefix OPERATORS/, $(OP_XSRC))
+
+OV_SRC := ov-base.cc ov-ch-mat.cc ov-list.cc ov-re-mat.cc \
+	ov-cx-mat.cc ov-range.cc ov-scalar.cc ov-complex.cc \
+	ov-str-mat.cc ov-struct.cc ov-va-args.cc ov-colon.cc \
+	ov-bool-mat.cc ov-bool.cc ov-file.cc ov.cc ov-typeinfo.cc 
+
+PT_SRC := pt-base.cc pt-cmd.cc pt-const.cc pt-exp-base.cc \
+	pt-exp.cc pt-id.cc pt-indir.cc pt-mat.cc pt-misc.cc \
+	pt-mvr-base.cc pt-mvr.cc pt-plot.cc pt-pr-code.cc 
 
 SOURCES := BaseSLList.cc Map.cc SLList.cc SLStack.cc Stack.cc \
 	data.cc defaults.cc dirfns.cc dynamic-ld.cc error.cc \
 	file-io.cc fn-cache.cc gripes.cc help.cc input.cc lex.l \
 	load-save.cc mappers.cc oct-fstrm.cc oct-hist.cc \
 	oct-iostrm.cc oct-map.cc oct-obj.cc oct-prcstrm.cc \
 	oct-procbuf.cc oct-stdstrm.cc oct-stream.cc oct-strstrm.cc \
-	pager.cc parse.y pr-output.cc procstream.cc pt-base.cc \
-	pt-cmd.cc pt-const.cc pt-exp-base.cc pt-exp.cc pt-id.cc \
-	pt-indir.cc pt-mat.cc pt-misc.cc pt-mvr-base.cc \
-	pt-mvr.cc pt-plot.cc pt-pr-code.cc sighandlers.cc \
+	pager.cc parse.y pr-output.cc procstream.cc sighandlers.cc \
 	strcasecmp.c strncase.c strfns.cc strftime.c symtab.cc \
 	syscalls.cc sysdep.cc token.cc toplev.cc unwind-prot.cc \
-	utils.cc variables.cc xdiv.cc xpow.cc ov-base.cc ov-ch-mat.cc \
-	ov-list.cc ov-re-mat.cc ov-cx-mat.cc ov-range.cc ov-scalar.cc \
-	ov-complex.cc ov-str-mat.cc ov-struct.cc ov-va-args.cc \
-	ov-colon.cc ov-bool-mat.cc ov-bool.cc ov-file.cc ov.cc \
-	ov-typeinfo.cc oct-fcn.cc oct-builtin.cc oct-mapper.cc \
-	oct-usr-fcn.cc $(OP_SOURCES)
+	utils.cc variables.cc xdiv.cc xpow.cc oct-fcn.cc \
+	oct-builtin.cc oct-mapper.cc oct-usr-fcn.cc \
+	$(OP_SRC) $(OV_SRC) $(PT_SRC) $(TI_SRC)
 
-OBJECTS_4 := $(SOURCES)
+OBJECTS_4 := $(notdir $(SOURCES))
 OBJECTS_3 := $(patsubst %.l, %.o, $(OBJECTS_4))
 OBJECTS_2 := $(patsubst %.y, %.o, $(OBJECTS_3))
 OBJECTS_1 := $(patsubst %.c, %.o, $(OBJECTS_2))
 OBJECTS := $(patsubst %.cc, %.o, $(OBJECTS_1))
 
 ifeq ($(SHARED_LIBS), true)
   ifdef CXXPICFLAG
     PICOBJ := $(addprefix pic/, $(OBJECTS))
   else
     PICOBJ := $(OBJECTS)
   endif
 endif
 
 # Ugh.
 
-DEP_4 := $(SOURCES) $(DLD_SRC) $(TI_SRC) builtins.cc ops.cc octave.cc
+DEP_5 := $(SOURCES) $(DLD_SRC) builtins.cc ops.cc octave.cc
+DEP_4 := $(notdir $(DEP_5))
 DEP_3 := $(patsubst %.l, %.cc, $(DEP_4))
 DEP_2 := $(patsubst %.y, %.cc, $(DEP_3))
 DEP_1 := $(patsubst %.c, %.d, $(DEP_2))
 MAKEDEPS := $(patsubst %.cc, %.d, $(DEP_1))
 
-DEF_5 := $(SOURCES) $(DLD_SRC) $(TI_SRC)
+DEF_5 := $(SOURCES) $(DLD_SRC)
 DEF_4 := $(addprefix $(srcdir)/, $(DEF_5))
 DEF_3 := $(notdir $(shell grep -l "^DEFUN" $(DEF_4)))
 DEF_2 := $(patsubst %.y, %.df, $(DEF_3))
 DEF_1 := $(patsubst %.l, %.df, $(DEF_2))
 DEF_FILES := $(patsubst %.cc, %.df, $(DEF_1))
 
-VAR_5 := $(SOURCES) $(DLD_SRC) $(TI_SRC)
+VAR_5 := $(SOURCES) $(DLD_SRC)
 VAR_4 := $(addprefix $(srcdir)/, $(VAR_5))
 VAR_3 := $(notdir $(shell egrep -l "^[\t ]*DEF(VAR|CONST)" $(VAR_4)))
 VAR_2 := $(patsubst %.y, %, $(VAR_3))
 VAR_1 := $(patsubst %.l, %, $(VAR_2))
 VAR_FILES := $(patsubst %.cc, %, $(VAR_1))
 
 OCTAVE_LFLAGS = -L../liboctave -L../libcruft -L../readline \
 	-L../kpathsea -L../glob -L../dlfcn -L. $(RLD_FLAG)
 
-OCTAVE_LIBS = -loctinterp -loctave -ltinst -lcruft \
+OCTAVE_LIBS = -loctinterp -loctave -lcruft \
 	$(LIBPLPLOT) $(LIBREADLINE) -lkpathsea -lglob $(LIBDLFCN)
 
-LIBS_TO_INSTALL = liboctinterp.a libtinst.a
+LIBS_TO_INSTALL = liboctinterp.a
 
-SH_LIBS_TO_INSTALL = liboctinterp.$(SHLEXT) libtinst.$(SHLEXT)
+SH_LIBS_TO_INSTALL = liboctinterp.$(SHLEXT)
 
 LIBS = @LIBS@
 
 DISTFILES = Makefile.in ChangeLog mkdefs mkbuiltins mk-oct-links \
 	defaults.h.in oct-conf.h.in octave.gperf oct-gperf.h \
 	octave.cc parse.cc lex.cc y.tab.h \
-	$(INCLUDES) $(DLD_SRC) $(SOURCES) $(TI_SRC)
+	$(INCLUDES) $(DLD_SRC) $(SOURCES)
 
 ifeq ($(SHARED_LIBS), true)
   BINDISTFILES = octave $(OCT_FILES) $(SH_LIBS_TO_INSTALL)
   BINDISTLIBS = $(addprefix src/, $(SH_LIBS_TO_INSTALL))
 else
   BINDISTFILES = octave $(OCT_FILES)
 endif
 
@@ -211,42 +216,30 @@ stamp-picdir:
 	      mkdir pic ; \
 	    fi ; \
 	  fi ; \
 	else \
 	  true ; \
 	fi
 	touch stamp-picdir
 
-libraries: liboctinterp.a libtinst.a stamp-interp stamp-tinst
+libraries: liboctinterp.a stamp-interp
 
 liboctinterp.a: stamp-prereq $(OBJECTS)
 	$(AR) $(ARFLAGS) liboctinterp.a $(OBJECTS)
 	$(RANLIB) liboctinterp.a
 
-libtinst.a: stamp-prereq $(TI_OBJ)
-	$(AR) $(ARFLAGS) libtinst.a $(TI_OBJ)
-	$(RANLIB) libtinst.a
-
 stamp-interp: stamp-prereq $(PICOBJ)
 	if $(SHARED_LIBS); then \
 	  $(SH_LD) $(SH_LDFLAGS) -o liboctinterp.$(SHLEXT) $(PICOBJ) ; \
 	else \
 	  true ; \
 	fi
 	touch stamp-interp
 
-stamp-tinst: stamp-prereq $(TI_PICOBJ)
-	if $(SHARED_LIBS); then \
-	  $(SH_LD) $(SH_LDFLAGS) -o libtinst.$(SHLEXT) $(TI_PICOBJ) ; \
-	else \
-	  true ; \
-	fi
-	touch stamp-tinst
-
 builtins.cc: $(DEF_FILES) mkbuiltins
 	@echo making $@
 	@echo DEF_FILES = $(DEF_FILES)
 	@echo VAR_FILES = $(VAR_FILES)
 	@echo $(DEF_FILES) > def-files
 	@echo $(VAR_FILES) > var-files
 	@$(srcdir)/mkbuiltins def-files var-files > $@.t
 	@$(top_srcdir)/move-if-change $@.t $@
@@ -330,41 +323,41 @@ uninstall:
 	rm -f $(bindir)/octave$(EXE)
 	for f in $(LIBS_TO_INSTALL); do rm -f $(libdir)/$$f; done
 	for f in $(SH_LIBS_TO_INSTALL); do rm -f $(libdir)/$$f; done
 	for f in $(INCLUDES) defaults.h oct-conf.h; do \
 	  rm -f $(octincludedir)/$$f; \
 	done
 .PHONY: uninstall
 
-tags: $(SOURCES) $(DLD_SRC) $(TI_SRC)
-	ctags $(SOURCES) $(DLD_SRC) $(TI_SRC)
+tags: $(SOURCES) $(DLD_SRC)
+	ctags $(SOURCES) $(DLD_SRC)
 
-TAGS: $(SOURCES) $(DLD_SRC) $(TI_SRC)
-	etags $(SOURCES) $(DLD_SRC) $(TI_SRC)
+TAGS: $(SOURCES) $(DLD_SRC)
+	etags $(SOURCES) $(DLD_SRC)
 
 clean:
 	rm -f *.a *.o *.d *.df *.oct pic/*.o
 	rm -f builtins.cc ops.cc defaults.h oct-conf.h def-files var-files
 	if $(SHARED_LIBS); then rm -f *.$(SHLEXT); fi
 .PHONY: clean
 
 mostlyclean:
 	rm -f *.o pic/*.o
 .PHONY: mostlyclean
 
 distclean: clean
 	rm -f Makefile octave .fname so_locations
-	rm -f stamp-picdir stamp-tinst stamp-interp stamp-prereq
+	rm -f stamp-picdir stamp-interp stamp-prereq
 	-rmdir pic
 .PHONY: distclean
 
 maintainer-clean: distclean
 	rm -f tags TAGS y.tab.c y.tab.h y.output yy.lex.c lex.cc parse.cc
-	rm -f oct-gperf.h stamp-picdir stamp-tinst stamp-interp stamp-prereq
+	rm -f oct-gperf.h stamp-picdir stamp-interp stamp-prereq
 	-rmdir pic
 .PHONY: maintainer-clean
 
 dist: parse.cc lex.cc oct-gperf.h
 	ln $(DISTFILES) ../`cat ../.fname`/src
 	rm -f parse.cc lex.cc y.tab.h y.output yy.lex.c
 	rm -f oct-gperf.h defaults.h oct-conf.h *.d *.df builtins.cc
 .PHONY: dist
diff --git a/test/octave.test/system/pwd-1.m b/test/octave.test/system/pwd-1.m
--- a/test/octave.test/system/pwd-1.m
+++ b/test/octave.test/system/pwd-1.m
@@ -1,1 +1,1 @@
-isstr (pwd ()) && strcmp (pwd (), PWD)
+isstr (pwd ())
