# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1225435975 -3600
#      Fri Oct 31 07:52:55 2008 +0100
# Branch release-3-0-x
# Node ID 57c9b3f2b82212325c5c81a9303a28aea5b15da2
# Parent  2415586d0f5a6f3c964de39ae5b43ad26be787bb
__qp__.cc fix

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2008-10-17  John W. Eaton  <jwe@octave.org>
+
+	* DLD-FUNCTIONS/__qp__.cc (qp): Undo part of change from
+	2007-09-04 (compute Y at each iteration).
+
 2008-10-02  John W. Eaton  <jwe@octave.org>
 
 	* pt-arg-list.cc (tree_argument_list::convert_to_const_vector):
 	Don't insert undefined elements in return list.
 
 2008-09-24  Jaroslav Hajek  <highegg@gmail.com>
 
 	Version 3.0.3 released.
diff --git a/src/DLD-FUNCTIONS/__qp__.cc b/src/DLD-FUNCTIONS/__qp__.cc
--- a/src/DLD-FUNCTIONS/__qp__.cc
+++ b/src/DLD-FUNCTIONS/__qp__.cc
@@ -228,16 +228,19 @@ qp (const Matrix& H, const ColumnVector&
 
 	  Matrix Z = null (Aact, rank);
 
 	  octave_idx_type dimZ = n - rank;
 
 	  // FIXME -- still remain to handle the case of
 	  // non-full rank active set matrix.
 
+	  // Computing the Y matrix (orthogonal to Z)
+	  Y = Aact.pseudo_inverse ();
+
 	  // Reduced Hessian
 	  Matrix Zt = Z.transpose ();
 	  Matrix rH = Zt * H * Z;
 
 	  octave_idx_type pR = 0;
 
 	  if (dimZ > 0)
 	    {
@@ -322,17 +325,16 @@ qp (const Matrix& H, const ColumnVector&
 	    // Solution is found because no inequality
 	    // constraints are active.
 	    done = true;
 	  else
 	    {
 	      // Computing the multipliers only for the inequality
 	      // constraints that are active.  We do NOT compute
 	      // multipliers for the equality constraints.
- 	      Y = Aact.pseudo_inverse ();
 	      Matrix Yt = Y.transpose ();
 	      Yt = Yt.extract_n (n_eq, 0, n_act-n_eq, n);
 	      lambda_tmp = Yt * (g + H * p);
 
 	      // Checking the multipliers.  We remove the most
 	      // negative from the set (if any).
 	      double min_lambda = lambda_tmp.min ();
 	      if (min_lambda >= 0)
