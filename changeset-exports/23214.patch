# HG changeset patch
# User Michael D. Godfrey <michaeldgodfrey@gmail.com>
# Date 1487685334 -3600
#      Tue Feb 21 14:55:34 2017 +0100
# Branch stable
# Node ID 76a894168fe5e6b1676ba9713017c5014b368e89
# Parent  b8a186a9760ba793a23723e6d33da335ec1ff717
doc: provide complete examples in plotting documentation (bug #44263)

* doc/interpreter/plot.txi: The plotting example codes were given in a truncated
form.  To be honest with the users, the full examples are provieded without
being too verbose.

diff --git a/doc/interpreter/plot.txi b/doc/interpreter/plot.txi
--- a/doc/interpreter/plot.txi
+++ b/doc/interpreter/plot.txi
@@ -84,16 +84,19 @@ and @ref{Advanced Plotting}.
 
 The @code{plot} function allows you to create simple x-y plots with
 linear axes.  For example,
 
 @example
 @group
 x = -10:0.1:10;
 plot (x, sin (x));
+xlabel ("x");
+ylabel ("sin (x)");
+title ("Simple 2-D Plot");
 @end group
 @end example
 
 @noindent
 displays a sine wave shown in @ref{fig:plot}.  On most systems, this
 command will open a separate plot window to display the graph.
 
 @float Figure,fig:plot
@@ -118,23 +121,29 @@ both of the axes use log scales.
 
 @DOCSTRING(loglog)
 
 The functions @code{bar}, @code{barh}, @code{stairs}, and @code{stem}
 are useful for displaying discrete data.  For example,
 
 @example
 @group
+randn ("state", 1);
 hist (randn (10000, 1), 30);
+xlabel ("Value");
+ylabel ("Count");
+title ("Histogram of 10,000 normally distributed random numbers");
 @end group
 @end example
 
 @noindent
 produces the histogram of 10,000 normally distributed random numbers
-shown in @ref{fig:hist}.
+shown in @ref{fig:hist}.  Note that, @code{randn ("state", 1);} sets
+the start value for @code{randn} so that the returned values are
+always the same as shown.
 
 @float Figure,fig:hist
 @center @image{hist,4in}
 @caption{Histogram.}
 @end float
 
 @DOCSTRING(bar)
 
@@ -172,21 +181,26 @@ produce two-dimensional contour plots fr
 @DOCSTRING(contour3)
 
 The @code{errorbar}, @code{semilogxerr}, @code{semilogyerr}, and
 @code{loglogerr} functions produce plots with error bar markers.  For
 example,
 
 @example
 @group
+rand ("state", 2);
 x = 0:0.1:10;
 y = sin (x);
 lerr = 0.1 .* rand (size (x));
 uerr = 0.1 .* rand (size (x));
 errorbar (x, y, lerr, uerr);
+axis ([0, 10, -1.1, 1.1]);
+xlabel ("x");
+ylabel ("sin (x)");
+title ("Errorbar plot of sin (x)");
 @end group
 @end example
 
 @noindent
 produces the figure shown in @ref{fig:errorbar}.
 
 @float Figure,fig:errorbar
 @center @image{errorbar,4in}
@@ -202,16 +216,17 @@ produces the figure shown in @ref{fig:er
 @DOCSTRING(loglogerr)
 
 Finally, the @code{polar} function allows you to easily plot data in
 polar coordinates.  However, the display coordinates remain rectangular
 and linear.  For example,
 
 @example
 polar (0:0.1:10*pi, 0:0.1:10*pi);
+title ("Example polar plot from 0 to 10*pi");
 @end example
 
 @noindent
 produces the spiral plot shown in @ref{fig:polar}.
 
 @float Figure,fig:polar
 @center @image{polar,4in}
 @caption{Polar plot.}
@@ -313,16 +328,20 @@ The function @code{mesh} produces mesh s
 
 @example
 @group
 tx = ty = linspace (-8, 8, 41)';
 [xx, yy] = meshgrid (tx, ty);
 r = sqrt (xx .^ 2 + yy .^ 2) + eps;
 tz = sin (r) ./ r;
 mesh (tx, ty, tz);
+xlabel ("tx");
+ylabel ("ty");
+zlabel ("tz");
+title ("3-D Sombrero plot");
 @end group
 @end example
 
 @noindent
 produces the familiar ``sombrero'' plot shown in @ref{fig:mesh}.  Note
 the use of the function @code{meshgrid} to create matrices of X and Y
 coordinates to use for plotting the Z data.  The @code{ndgrid} function
 is similar to @code{meshgrid}, but works for N-dimensional matrices.
@@ -338,17 +357,21 @@ plot of contours for the surface.
 The @code{plot3} function displays arbitrary three-dimensional data,
 without requiring it to form a surface.  For example,
 
 @example
 @group
 t = 0:0.1:10*pi;
 r = linspace (0, 1, numel (t));
 z = linspace (0, 1, numel (t));
-plot3 (r.*sin(t), r.*cos(t), z);
+plot3 (r.*sin (t), r.*cos (t), z);
+xlabel ("r.*sin (t)");
+ylabel ("r.*cos (t)");
+zlabel ("z");
+title ("plot3 display of 3-D helix");
 @end group
 @end example
 
 @noindent
 displays the spiral in three dimensions shown in @ref{fig:plot3}.
 
 @float Figure,fig:plot3
 @center @image{plot3,4in}
