# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1272343948 14400
#      Tue Apr 27 00:52:28 2010 -0400
# Node ID 87f879cf48fd9917247944e482f463e397019d81
# Parent  384c514bbae22359f11378c23c069e94f88c94fe
don't alter arg values in call to abs or sign for integer values

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+2010-04-27  John W. Eaton  <jwe@octave.org>
+
+	* intNDArray.cc (intNDArray<T>::abs, intNDArray<T>::signum):
+	Create new vector for return values.  Fixes bug #29685.
+
 2010-04-23  Jaroslav Hajek  <highegg@gmail.com>
 
 	* Sparse.cc (Sparse<T>::assign): Fix typos.
 
 2010-04-20  Jaroslav Hajek  <highegg@gmail.com>
 
 	* Sparse.h (::assign, ::assign1): Remove declarations.
 
diff --git a/liboctave/intNDArray.cc b/liboctave/intNDArray.cc
--- a/liboctave/intNDArray.cc
+++ b/liboctave/intNDArray.cc
@@ -169,33 +169,33 @@ operator >> (std::istream& is, intNDArra
 
 // FIXME -- should abs and signum just be mapper functions?
 
 template <class T>
 intNDArray<T>
 intNDArray<T>::abs (void) const
 {
   octave_idx_type nel = this->nelem ();
-  intNDArray<T> ret (*this);
+  intNDArray<T> ret (this->dims ());
 
   for (octave_idx_type i = 0; i < nel; i++)
     {
       T val = this->elem (i);
       ret.xelem (i) = val.abs ();
     }
 
   return ret;
 }
 
 template <class T>
 intNDArray<T>
 intNDArray<T>::signum (void) const
 {
   octave_idx_type nel = this->nelem ();
-  intNDArray<T> ret (*this);
+  intNDArray<T> ret (this->dims ());
 
   for (octave_idx_type i = 0; i < nel; i++)
     {
       T val = this->elem (i);
       ret.xelem (i) = val.signum ();
     }
 
   return ret;
