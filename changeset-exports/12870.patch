# HG changeset patch
# User Jordi Guti√©rrez Hermoso <jordigh@gmail.com>
# Date 1311314258 18000
#      Fri Jul 22 00:57:38 2011 -0500
# Node ID 39d813616c8faf703c4d1fea25379ad566b25123
# Parent  de9a9719e594fc7da21dc2f7fe8dcdb6508e68ca
Restore the docstrings for internal profiler functions as C++ comments

diff --git a/src/profiler.cc b/src/profiler.cc
--- a/src/profiler.cc
+++ b/src/profiler.cc
@@ -235,16 +235,17 @@ profile_data_accumulator::add_current_ti
   // when entering the function via the non-timing data collection!
   stats_map::iterator pos = data.find (name);
   assert (pos != data.end ());
   pos->second.time += t - last_time;
 }
 
 profile_data_accumulator profiler;
 
+// Enable or disable the profiler data collection.
 DEFUN (__profiler_enable, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Function File} __profiler_enable ()\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
@@ -260,16 +261,17 @@ Undocumented internal function.\n\
       profiler.set_active (args(0).bool_value ());
     }
 
   retval(0) = profiler.is_active ();
 
   return retval;
 }
 
+// Clear all collected profiling data.
 DEFUN (__profiler_reset, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Function File} __profiler_reset ()\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value_list retval;
   const int nargin = args.length ();
@@ -277,16 +279,17 @@ Undocumented internal function.\n\
   if (nargin > 0)
     warning ("profiler_reset: ignoring extra arguments");
 
   profiler.reset ();
 
   return retval;
 }
 
+// Query the timings collected by the profiler.
 DEFUN (__profiler_data, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Function File} __profiler_data ()\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value_list retval;
   const int nargin = args.length ();
