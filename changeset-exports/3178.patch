# HG changeset patch
# User jwe
# Date 898573651 0
#      Tue Jun 23 03:47:31 1998 +0000
# Node ID 09a3064a3a1785825af773235a977b40a00e2480
# Parent  d81db29f8b2b9844dd265627031257d9eefa8b32
[project @ 1998-06-23 03:46:42 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,13 @@
+Thu Jun 18 20:24:40 1998  Roman Hodek <Roman.Hodek@informatik.uni-erlangen.de>
+
+	* configure.in (RLD_FLAG): Set correctly for Linux on all
+	architectures.  From 
+
 Thu May 28 10:17:45 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* configure.in: When checking for glob stuff, make sure that the
 	systsem header file has all the definitions that we need.  If not,
 	set up to use our replacement library.
 
 Mon May 18 11:33:45 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -16,17 +16,17 @@ dnl Copyright (C) 1996, 1997 John W. Eat
 ### FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ### for more details.
 ### 
 ### You should have received a copy of the GNU General Public License
 ### along with Octave; see the file COPYING.  If not, write to the Free
 ### Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ### 02111-1307, USA. 
 
-AC_REVISION($Revision: 1.306 $)
+AC_REVISION($Revision: 1.307 $)
 AC_PREREQ(2.9)
 AC_INIT(src/octave.cc)
 AC_CONFIG_HEADER(config.h)
 
 AC_DEFINE(OCTAVE_SOURCE, 1)
 
 OCTAVE_HOST_TYPE
 
@@ -545,19 +545,17 @@ case "$canonical_host_type" in
   alpha*-dec-osf*)
     CPICFLAG=
     CXXPICFLAG=
     FPICFLAG=
     SH_LDFLAGS="-shared -Xlinker -expect_unresolved -Xlinker '*'"
     SONAME_FLAGS='-Xlinker -soname -Xlinker $@'
     RLD_FLAG='-Xlinker -rpath -Xlinker $(octlibdir)'
   ;;
-changequote(,)dnl
-  i[3456789]86-*-linux*)
-changequote([,])dnl
+  *-*-linux*)
     SONAME_FLAGS='-Xlinker -soname -Xlinker $@'
     RLD_FLAG='-Xlinker -rpath -Xlinker $(octlibdir)'
   ;;
 changequote(,)dnl
   i[3456]86-*-sco3.2v5*)
 changequote([,])dnl
     SH_LDFLAGS=-G
   ;;
diff --git a/doc/liboctave/array.texi b/doc/liboctave/array.texi
--- a/doc/liboctave/array.texi
+++ b/doc/liboctave/array.texi
@@ -1,9 +1,9 @@
-@node Arrays, Matrix and Vector @var{Operations}, Introduction, Top
+@node Arrays, Matrix and Vector Operations, Introduction, Top
 @chapter Arrays
 @cindex arrays
 
 @menu
 * Constructors and Assignment::  
 @end menu
 
 @node Constructors and Assignment,  , Arrays, Arrays
diff --git a/doc/liboctave/factor.texi b/doc/liboctave/factor.texi
--- a/doc/liboctave/factor.texi
+++ b/doc/liboctave/factor.texi
@@ -1,9 +1,9 @@
-@node Matrix Factorizations, Ranges, Matrix and Vector @var{Operations}, Top
+@node Matrix Factorizations, Ranges, Matrix and Vector Operations, Top
 @chapter Matrix Factorizations
 @cindex matrix factorizations
 @cindex factorizations
 
 @deftypefn  {} {}AEPBALANCE (void)
 @deftypefnx  {} {}AEPBALANCE (const Matrix &@var{a}, const char *@var{balance_job})
 @deftypefnx  {} {}AEPBALANCE (const AEPBALANCE &@var{a})
 @end deftypefn
diff --git a/doc/liboctave/liboctave.texi b/doc/liboctave/liboctave.texi
--- a/doc/liboctave/liboctave.texi
+++ b/doc/liboctave/liboctave.texi
@@ -23,17 +23,17 @@
 @end iftex
 
 @defindex op
 
 @c Things like the Octave version number are defined in conf.texi.
 @c This file doesn't include a chapter, so it must not be included
 @c if you want to run the Emacs function texinfo-multiple-files-update.
 
-@include conf.texi
+@c @include conf.texi
 
 @settitle Octave C++ Classes
 
 @ifinfo
 
 Copyright (C) 1996, 1997 John W. Eaton.
 
 Permission is granted to make and distribute verbatim copies of
@@ -93,17 +93,17 @@ library, and how to report bugs.  It cor
 
 @c ------------------------------------------------------------------------
 
 @menu
 * Acknowledgements::            
 * Copying::                     
 * Introduction::                
 * Arrays::                      
-* Matrix and Vector @var{Operations}::  
+* Matrix and Vector Operations::  
 * Matrix Factorizations::       
 * Ranges::                      
 * Nonlinear Functions::         
 * Nonlinear Equations::         
 * Optimization::                
 * Quadrature::                  
 * Ordinary Differential Equations::  
 * Differential Algebraic Equations::  
diff --git a/doc/liboctave/matvec.texi b/doc/liboctave/matvec.texi
--- a/doc/liboctave/matvec.texi
+++ b/doc/liboctave/matvec.texi
@@ -102,17 +102,17 @@ Element by element MDiagArray by MDiagAr
 
 Unary MDiagArray ops.
 
 @deftypefn {} {DiagMatrix} {operator -} (const DiagMatrix &@var{a})
 @end deftypefn
 
 @c ------------------------------------------------------------------------
 
-@node Matrix and Vector @var{Operations}, Matrix Factorizations, Arrays, Top
+@node Matrix and Vector Operations, Matrix Factorizations, Arrays, Top
 @chapter Matrix and Vector Operations
 @cindex matrix manipulations
 @cindex vector manipulations
 
 @deftypefn  {} {}Matrix (void)
 @deftypefnx  {} {}Matrix (int @var{r}, int @var{c})
 @deftypefnx  {} {}Matrix (int @var{r}, int @var{c}, double @var{val})
 @deftypefnx  {} {}Matrix (const Array2<double> &@var{a})
diff --git a/libcruft/ChangeLog b/libcruft/ChangeLog
--- a/libcruft/ChangeLog
+++ b/libcruft/ChangeLog
@@ -1,8 +1,12 @@
+Tue Jun  2 09:57:52 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* specfun/rybesl.f (rybesl): Don't access by(2) unless nb .gt. 1.
+
 Mon May 11 12:33:42 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* fftpack/passb3.f, fftpack/passb5.f, fftpack/passf3.f,
 	fftpack/passf5.f: Use double precision constants in data
 	statements.
 
 Tue Apr 14 14:01:22 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
diff --git a/libcruft/specfun/rybesl.f b/libcruft/specfun/rybesl.f
--- a/libcruft/specfun/rybesl.f
+++ b/libcruft/specfun/rybesl.f
@@ -401,35 +401,36 @@ C---------------------------------------
                H = H*YA1 - YA
                YA = YA1
                YA1 = H
             END IF
 C----------------------------------------------------------------------
 C  Now have first one or two Y's
 C----------------------------------------------------------------------
             BY(1) = YA
-            BY(2) = YA1
-            IF (YA1 .EQ. ZERO) THEN
-                  NCALC = 1
-               ELSE
+            NCALC = 1
+            IF (NB .GT. 1) THEN
+              BY(2) = YA1
+              IF (YA1 .NE. ZERO) THEN
                   AYE = ONE + ALPHA
                   TWOBYX = TWO/EX
                   NCALC = 2
                   DO 400 I = 3, NB
                      IF (TWOBYX .LT. ONE) THEN
                            IF (ABS(BY(I-1))*TWOBYX .GE. XINF/AYE)
      1                                                     GO TO 450
                         ELSE
                            IF (ABS(BY(I-1)) .GE. XINF/AYE/TWOBYX )
      1                                                     GO TO 450
                      END IF
                      BY(I) = TWOBYX*AYE*BY(I-1) - BY(I-2) 
                      AYE = AYE + ONE
                      NCALC = NCALC + 1
   400             CONTINUE
+              END IF
             END IF
   450       DO 460 I = NCALC+1, NB
                BY(I) = ZERO
   460       CONTINUE
          ELSE
             BY(1) = ZERO
             NCALC = MIN(NB,0) - 1
       END IF
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,24 @@
+Mon Jun 22 17:04:27 1998  Tomislav Goles <tom@ait-tech.com>
+
+	* EIG.cc (EIG::init): Move invariant code outside loop.
+
+Thu Jun 18 11:08:23 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* MArray2.cc (MARRAY_A2A2_OP): If operands are empty, make result
+	have the same size as the operands.
+	
+Thu May 28 10:41:04 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* DASSL.cc (DASSL::do_integrate): If an exception occurs in the
+	call to ddassl, set integration_error to 1 before calling the
+	error handler and returning.
+	* LSODE.cc (LSODE::do_integrate): Likewise.
+
 Wed May 27 13:46:30 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* Array2-idx.h (assign): Allow A([],[]) = scalar and, if
 	do_fortran_indexing is set, A([]) = scalar.
 	* Array-idx.h (assign): Allow A([]) = scalar.
 
 Thu May 14 11:50:24 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
diff --git a/liboctave/DASSL.cc b/liboctave/DASSL.cc
--- a/liboctave/DASSL.cc
+++ b/liboctave/DASSL.cc
@@ -271,17 +271,20 @@ DASSL::do_integrate (double tout)
 
 // again:
 
   F77_XFCN (ddassl, DDASSL, (ddassl_f, n, t, px, pxdot, tout, pinfo,
 			     rel_tol, abs_tol, idid, prwork, lrw,
 			     piwork, liw, dummy, idummy, ddassl_j));
 
   if (f77_exception_encountered)
-    (*current_liboctave_error_handler) ("unrecoverable error in dassl");
+    {
+      integration_error = 1;
+      (*current_liboctave_error_handler) ("unrecoverable error in dassl");
+    }
   else
     {
       switch (idid)
 	{
 	case 1: // A step was successfully taken in intermediate-output
 	        // mode. The code has not yet reached TOUT.
 	case 2: // The integration to TSTOP was successfully completed
 	        // (T=TSTOP) by stepping exactly to TSTOP.
diff --git a/liboctave/EIG.cc b/liboctave/EIG.cc
--- a/liboctave/EIG.cc
+++ b/liboctave/EIG.cc
@@ -120,20 +120,21 @@ EIG::init (const Matrix& a)
 		{
 		  if (j+1 >= n)
 		    {
 		      (*current_liboctave_error_handler)
 			("EIG: internal error");
 		      return -1;
 		    }
 
+		  lambda.elem(j) = Complex (wr.elem(j), wi.elem(j));
+		  lambda.elem(j+1) = Complex (wr.elem(j+1), wi.elem(j+1));
+
 		  for (int i = 0; i < n; i++)
 		    {
-		      lambda.elem(j) = Complex (wr.elem(j), wi.elem(j));
-		      lambda.elem(j+1) = Complex (wr.elem(j+1), wi.elem(j+1));
 		      double real_part = vr.elem (i, j);
 		      double imag_part = vr.elem (i, j+1);
 		      v.elem (i, j) = Complex (real_part, imag_part);
 		      v.elem (i, j+1) = Complex (real_part, -imag_part);
 		    }
 		  j++;
 		}
 	    }
diff --git a/liboctave/LSODE.cc b/liboctave/LSODE.cc
--- a/liboctave/LSODE.cc
+++ b/liboctave/LSODE.cc
@@ -247,17 +247,20 @@ LSODE::do_integrate (double tout)
 
  again:
 
   F77_XFCN (lsode, LSODE, (lsode_f, n, xp, t, tout, itol, rel_tol,
 			   abs_tol, itask, istate, iopt, prwork, lrw,
 			   piwork, liw, lsode_j, method_flag));
 
   if (f77_exception_encountered)
-    (*current_liboctave_error_handler) ("unrecoverable error in lsode");
+    {
+      integration_error = 1;
+      (*current_liboctave_error_handler) ("unrecoverable error in lsode");
+    }
   else
     {
       switch (istate)
 	{
 	case -13: // Return requested in user-supplied function.
 	case -6:  // error weight became zero during problem. (solution
 	          // component i vanished, and atol or atol(i) = 0.)
 	case -5:  // repeated convergence failures (perhaps bad jacobian
diff --git a/liboctave/MArray2.cc b/liboctave/MArray2.cc
--- a/liboctave/MArray2.cc
+++ b/liboctave/MArray2.cc
@@ -141,17 +141,17 @@ MARRAY_SA2_OP (/)
     int br = b.rows (); \
     int bc = b.cols (); \
     if (r != br || c != bc) \
       { \
         gripe_nonconformant (#FCN, r, c, br, bc); \
 	return MArray2<T> (); \
       } \
     if (r == 0 || c == 0) \
-      return MArray2<T> (); \
+      return MArray2<T> (r, c); \
     int l = a.length (); \
     DO_VV_OP (OP); \
     return MArray2<T> (result, r, c); \
   }
 
 MARRAY_A2A2_OP (operator +, +)
 MARRAY_A2A2_OP (operator -, -)
 MARRAY_A2A2_OP (product,    *)
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+Thu Jun 18 16:32:15 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* plot/__plt__.m: Don't call usleep.
+
 Mon May 18 11:42:36 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* linear-algebra/dot.m: New function.
 
 	* strings/lower.m, strings/upper.m: New functions, for Matlab
 	compatibility.
 
 Fri May 15 01:16:53 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
diff --git a/scripts/plot/__plt__.m b/scripts/plot/__plt__.m
--- a/scripts/plot/__plt__.m
+++ b/scripts/plot/__plt__.m
@@ -67,23 +67,16 @@ function __plt__ (caller, ...)
 	    y = new;
 	    y_set = 1;
 	  endif
 	else
 	  x = new;
 	  x_set = 1;
 	endif
 
-	## Something fishy is going on.  I don't think this should be
-	## necessary, but without it, sometimes not all the lines from a
-	## given plot command appear on the screen.  Even with it, the
-	## delay might not be long enough for some systems...
-
-	usleep (1e5);
-
       endwhile
 
       ## Handle last plot.
 
       if  (x_set)
 	if (y_set)
 	  __plt2__ (x, y, fmt);
 	else
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,27 @@
+Mon Jun 22 22:13:38 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* variables.cc (is_valid_function): Provide version that takes
+	function name as string.
+
+	* parse.y (binary_expr): Fix thinko that resulted in incorrect
+	evaluation of -x^y.  Thanks to Richard Allan Holcombe
+	<raholcom@unity.ncsu.edu>.
+	(feval): Don't attempt to copy nonexistent arg names.
+
+Mon Jun 22 21:35:50 1998  Richard Allan Holcombe <raholcom@unity.ncsu.edu>
+
+	* xpow.cc (xpow): Improve efficiency for matrix^(scalar int) case.
+
+Thu Jun  4 12:42:46 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* ov-usr-fcn.cc (octave_user_function::octave_all_va_args): 
+	If num_args_passed < num_named_args, create zero length list.
+
 Thu May 14 16:23:15 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* DLD-FUNCTIONS/getrusage.cc: Include sys/types.h too.
 
 Mon May 11 00:38:45 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* pager.cc (Fdiary): Don't forget to set write_to_diary file if
 	just given a file name.
diff --git a/src/ov-usr-fcn.cc b/src/ov-usr-fcn.cc
--- a/src/ov-usr-fcn.cc
+++ b/src/ov-usr-fcn.cc
@@ -166,21 +166,26 @@ octave_user_function::octave_va_arg (voi
   return retval;
 }
 
 octave_value_list
 octave_user_function::octave_all_va_args (void)
 {
   octave_value_list retval;
 
-  retval.resize (num_args_passed - num_named_args);
+  int n = num_args_passed - num_named_args;
 
-  int k = 0;
-  for (int i = num_named_args; i < num_args_passed; i++)
-    retval(k++) = args_passed(i);
+  if (n > 0)
+    {
+      retval.resize (n);
+
+      int k = 0;
+      for (int i = num_named_args; i < num_args_passed; i++)
+	retval(k++) = args_passed(i);
+    }
 
   return retval;
 }
 
 bool
 octave_user_function::takes_var_return (void) const
 {
   return (ret_list && ret_list->takes_varargs ());
diff --git a/src/parse.y b/src/parse.y
--- a/src/parse.y
+++ b/src/parse.y
@@ -26,16 +26,17 @@ Software Foundation, 59 Temple Place - S
 
 %{
 #define YYDEBUG 1
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
+#include <cassert>
 #include <cstdio>
 
 #ifdef YYBYACC
 #include <cstdlib>
 #endif
 
 #include <strstream.h>
 
@@ -615,63 +616,63 @@ postfix_expr	: primary_expr
 		| postfix_expr TRANSPOSE
 		  { $$ = make_postfix_op (TRANSPOSE, $1, $2); }
 		| postfix_expr '.' parsing_indir STRUCT_ELT
 		  { $$ = make_indirect_ref ($1, $4->text ()); }
 		;
 
 prefix_expr	: postfix_expr
 		  { $$ = $1; }
+		| binary_expr
+		  { $$ = $1; }
 		| PLUS_PLUS prefix_expr %prec UNARY
 		  { $$ = make_prefix_op (PLUS_PLUS, $2, $1); }
 		| MINUS_MINUS prefix_expr %prec UNARY
 		  { $$ = make_prefix_op (MINUS_MINUS, $2, $1); }
 		| EXPR_NOT prefix_expr %prec UNARY
 		  { $$ = make_prefix_op (EXPR_NOT, $2, $1); }
 		| '+' prefix_expr %prec UNARY
 		  { $$ = $2; }
 		| '-' prefix_expr %prec UNARY
 		  { $$ = make_prefix_op ('-', $2, $1); }
 		;
 
-binary_expr	: prefix_expr
-		  { $$ = $1; }
-		| binary_expr POW binary_expr
+binary_expr	: prefix_expr POW prefix_expr
 		  { $$ = make_binary_op (POW, $1, $2, $3); }
-		| binary_expr EPOW binary_expr
+		| prefix_expr EPOW prefix_expr
 		  { $$ = make_binary_op (EPOW, $1, $2, $3); }
-		| binary_expr '+' binary_expr
+		| prefix_expr '+' prefix_expr
 		  { $$ = make_binary_op ('+', $1, $2, $3); }
-		| binary_expr '-' binary_expr
+		| prefix_expr '-' prefix_expr
 		  { $$ = make_binary_op ('-', $1, $2, $3); }
-		| binary_expr '*' binary_expr
+		| prefix_expr '*' prefix_expr
 		  { $$ = make_binary_op ('*', $1, $2, $3); }
-		| binary_expr '/' binary_expr
+		| prefix_expr '/' prefix_expr
 		  { $$ = make_binary_op ('/', $1, $2, $3); }
-		| binary_expr EPLUS binary_expr
+		| prefix_expr EPLUS prefix_expr
 		  { $$ = make_binary_op ('+', $1, $2, $3); }
-		| binary_expr EMINUS binary_expr
+		| prefix_expr EMINUS prefix_expr
 		  { $$ = make_binary_op ('-', $1, $2, $3); }
-		| binary_expr EMUL binary_expr
+		| prefix_expr EMUL prefix_expr
 		  { $$ = make_binary_op (EMUL, $1, $2, $3); }
-		| binary_expr EDIV binary_expr
+		| prefix_expr EDIV prefix_expr
 		  { $$ = make_binary_op (EDIV, $1, $2, $3); }
-		| binary_expr LEFTDIV binary_expr
+		| prefix_expr LEFTDIV prefix_expr
 		  { $$ = make_binary_op (LEFTDIV, $1, $2, $3); }
-		| binary_expr ELEFTDIV binary_expr
+		| prefix_expr ELEFTDIV prefix_expr
 		  { $$ = make_binary_op (ELEFTDIV, $1, $2, $3); }
 		;
 
 colon_expr	: colon_expr1
 		  { $$ = finish_colon_expression ($1); }
 		;
 
-colon_expr1	: binary_expr
+colon_expr1	: prefix_expr
 		  { $$ = new tree_colon_expression ($1); }
-		| colon_expr1 ':' binary_expr
+		| colon_expr1 ':' prefix_expr
 		  {
 		    if (! ($$ = $1->append ($3)))
 		      ABORT_PARSE;
 		  }
 		;
 
 simple_expr	: colon_expr
 		  { $$ = $1; }
@@ -2979,32 +2980,37 @@ feval (const octave_value_list& args, in
   octave_value_list retval;
 
   if (args.length () > 0)
     {
       string name = args(0).string_value ();
 
       if (! error_state)
 	{
-	  string_vector arg_names = args.name_tags ();
-
 	  int tmp_nargin = args.length () - 1;
 
 	  octave_value_list tmp_args (tmp_nargin, octave_value ());
 
-	  string_vector tmp_arg_names (tmp_nargin);
-
 	  for (int i = 0; i < tmp_nargin; i++)
+	    tmp_args(i) = args(i+1);
+
+	  string_vector arg_names = args.name_tags ();
+
+	  if (! arg_names.empty ())
 	    {
-	      tmp_args(i) = args(i+1);
-	      tmp_arg_names(i) = arg_names(i+1);
+	      assert (arg_names.length () == tmp_nargin + 1);
+
+	      string_vector tmp_arg_names (tmp_nargin);
+
+	      for (int i = 0; i < tmp_nargin; i++)
+		tmp_arg_names(i) = arg_names(i+1);
+
+	      tmp_args.stash_name_tags (tmp_arg_names);
 	    }
 
-	  tmp_args.stash_name_tags (tmp_arg_names);
-
 	  retval = feval (name, tmp_args, nargout);
 	}
     }
 
   return retval;
 }
 
 DEFUN (feval, args, nargout,
diff --git a/src/variables.cc b/src/variables.cc
--- a/src/variables.cc
+++ b/src/variables.cc
@@ -129,33 +129,20 @@ is_globally_visible (const string& name)
 {
   symbol_record *sr = curr_sym_tab->lookup (name);
   return (sr && sr->is_linked_to_global ());
 }
 
 // Is this octave_value a valid function?
 
 octave_function *
-is_valid_function (const octave_value& arg, const string& warn_for, bool warn)
+is_valid_function (const string& fcn_name, const string& warn_for, bool warn)
 {
   octave_function *ans = 0;
 
-  string fcn_name;
-
-  if (arg.is_string ())
-    fcn_name = arg.string_value ();
-
-  if (fcn_name.empty () || error_state)
-    {
-      if (warn)
-	error ("%s: expecting function name as argument",
-	       warn_for.c_str ());
-      return ans;
-    }
-
   symbol_record *sr = 0;
 
   if (! fcn_name.empty ())
     sr = lookup_by_name (fcn_name);
 
   if (sr)
     {
       octave_value tmp = sr->def ();
@@ -169,16 +156,34 @@ is_valid_function (const octave_value& a
 	       warn_for.c_str (), fcn_name.c_str ());
       ans = 0;
     }
 
   return ans;
 }
 
 octave_function *
+is_valid_function (const octave_value& arg, const string& warn_for, bool warn)
+{
+  octave_function *ans = 0;
+
+  string fcn_name;
+
+  if (arg.is_string ())
+    fcn_name = arg.string_value ();
+
+  if (! error_state)
+    ans = is_valid_function (fcn_name, warn_for, warn);
+  else if (warn)
+    error ("%s: expecting function name as argument", warn_for.c_str ());
+
+  return ans;
+}
+
+octave_function *
 extract_function (const octave_value& arg, const string& warn_for,
 		  const string& fname, const string& header,
 		  const string& trailer)
 {
   octave_function *retval = 0;
 
   retval = is_valid_function (arg, warn_for, 0);
 
diff --git a/src/variables.h b/src/variables.h
--- a/src/variables.h
+++ b/src/variables.h
@@ -48,16 +48,19 @@ extern bool is_text_function_name (const
 extern bool is_mapper_function_name (const string&);
 extern bool is_builtin_function_name (const string&);
 extern bool is_globally_visible (const string&);
 
 extern octave_function *
 is_valid_function (const octave_value&, const string&, bool warn = false); 
 
 extern octave_function *
+is_valid_function (const string&, const string&, bool warn = false); 
+
+extern octave_function *
 extract_function (const octave_value& arg, const string& warn_for,
 		  const string& fname, const string& header,
 		  const string& trailer);
 
 extern string_vector
 get_struct_elts (const string& text);
 
 extern string_vector
diff --git a/src/xpow.cc b/src/xpow.cc
--- a/src/xpow.cc
+++ b/src/xpow.cc
@@ -189,18 +189,29 @@ xpow (const Matrix& a, double b)
 		  if (info == -1)
 		    warning ("inverse: matrix singular to machine\
  precision, rcond = %g", rcond);
 		}
 	      else
 		atmp = a;
 
 	      Matrix result (atmp);
-	      for (int i = 1; i < btmp; i++)
-		result = result * atmp;
+
+	      btmp--;
+
+	      while (btmp > 0)
+		{
+		  if (btmp & 1)
+		    result = result * atmp;
+
+		  btmp >>= 1;
+
+		  if (btmp > 0)
+		    atmp = atmp * atmp;
+		}
 
 	      retval = result;
 	    }
 	}
       else
 	{
 	  EIG a_eig (a);
 	  ComplexColumnVector lambda (a_eig.eigenvalues ());
@@ -374,18 +385,29 @@ xpow (const ComplexMatrix& a, double b)
 		  if (info == -1)
 		    warning ("inverse: matrix singular to machine\
  precision, rcond = %g", rcond);
 		}
 	      else
 		atmp = a;
 
 	      ComplexMatrix result (atmp);
-	      for (int i = 1; i < btmp; i++)
-		result = result * atmp;
+
+	      btmp--;
+
+	      while (btmp > 0)
+		{
+		  if (btmp & 1)
+		    result = result * atmp;
+
+		  btmp >>= 1;
+
+		  if (btmp > 0)
+		    atmp = atmp * atmp;
+		}
 
 	      retval = result;
 	    }
 	}
       else
 	{
 	  EIG a_eig (a);
 	  ComplexColumnVector lambda (a_eig.eigenvalues ());
