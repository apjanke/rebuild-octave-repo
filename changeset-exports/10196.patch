# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1264226310 -3600
#      Sat Jan 23 06:58:30 2010 +0100
# Node ID 69bb6e1e10d2d1daf69699438e7f4ef3824345bd
# Parent  b49d47b637b70bfd3ff5123eecd46bc13a7ff13d
complement->setdiff in pkg.m

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2010-01-23  Jaroslav Hajek  <highegg@gmail.com>
+
+	* pkg/pkg.m: Use setdiff rather than complement.
+
 2010-01-20  John W. Eaton  <jwe@octave.org>
 
 	* gethelp.cc: Untabfy.
 
 2010-01-20  Ben Abbott <bpabbot@mac.com>
 
 	* plot/__go_draw_figure__.m: Reverse order axes are drawn.
 
diff --git a/scripts/pkg/pkg.m b/scripts/pkg/pkg.m
--- a/scripts/pkg/pkg.m
+++ b/scripts/pkg/pkg.m
@@ -659,17 +659,17 @@ function install (files, handle_deps, au
   end_try_catch
 
   ## Check dependencies.
   if (handle_deps)
     ok = true;
     error_text = "";
     for i = 1:length (descriptions)
       desc = descriptions{i};
-      idx2 = complement (i, 1:length(descriptions));
+      idx2 = setdiff (1:length(descriptions), i);
       if (global_install)
 	## Global installation is not allowed to have dependencies on locally
 	## installed packages.
 	idx1 = complement (packages_to_uninstall, 
 			   1:length(global_packages));
 	pseudo_installed_packages = {global_packages{idx1}, ...
 				     descriptions{idx2}};
       else
@@ -776,22 +776,22 @@ function install (files, handle_deps, au
 			       ".autoload"), "wt"));
       descriptions{i}.autoload = 1;
     endif
   endfor
 
   ## Add the packages to the package list.
   try
     if (global_install)
-      idx = complement (packages_to_uninstall, 1:length(global_packages));
+      idx = setdiff (1:length(global_packages), packages_to_uninstall);
       global_packages = save_order ({global_packages{idx}, descriptions{:}});
       save (global_list, "global_packages");
       installed_pkgs_lst = {local_packages{:}, global_packages{:}};
     else
-      idx = complement (packages_to_uninstall, 1:length(local_packages));
+      idx = setdiff (1:length(local_packages), packages_to_uninstall);
       local_packages = save_order ({local_packages{idx}, descriptions{:}});
       save (local_list, "local_packages");
       installed_pkgs_lst = {local_packages{:}, global_packages{:}};
     endif
   catch
     ## Something went wrong, delete tmpdirs.
     for i = 1:length (tmpdirs)
       rm_rf (tmpdirs{i});
@@ -875,17 +875,17 @@ function uninstall (pkgnames, handle_dep
       endif
     else
       ## FIXME: We should have a better error message.
       warning ("some of the packages you want to uninstall are not installed");
     endif
   endif
 
   ## Compute the packages that will remain installed.
-  idx = complement (delete_idx, 1:num_packages);
+  idx = setdiff (1:num_packages, delete_idx);
   remaining_packages = {installed_pkgs_lst{idx}};
 
   ## Check dependencies.
   if (handle_deps)
     error_text = "";
     for i = 1:length (remaining_packages)
       desc = remaining_packages{i};
       bad_deps = get_unsatisfied_deps (desc, remaining_packages);
