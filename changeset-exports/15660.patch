# HG changeset patch
# User Jacob Dawid <jacob.dawid@googlemail.com>
# Date 1328009793 -3600
#      Tue Jan 31 12:36:33 2012 +0100
# Node ID a6df0e2a082ad8c328cfec2351bde089d74faeea
# Parent  739f0f73e772bbb3a008de6ea19608a2e7a57d62
Corrections for windows code.

diff --git a/libqterminal/win32/QWinTerminalImpl.cpp b/libqterminal/win32/QWinTerminalImpl.cpp
--- a/libqterminal/win32/QWinTerminalImpl.cpp
+++ b/libqterminal/win32/QWinTerminalImpl.cpp
@@ -681,46 +681,46 @@ void QConsolePrivate::sendConsoleText (c
           nEvents = 0;
           ZeroMemory (events, sizeof (events));
         }
     }
 }
 
 //////////////////////////////////////////////////////////////////////////////
 
-QUnixTerminalImpl::QUnixTerminalImpl (QWidget* parent)
+QWinTerminalImpl::QWinTerminalImpl (QWidget* parent)
     : d (new QConsolePrivate (this))
 {
 }
 
 //////////////////////////////////////////////////////////////////////////////
 
-QUnixTerminalImpl::QUnixTerminalImpl (const QString& cmd, QWidget* parent)
+QWinTerminalImpl::QWinTerminalImpl (const QString& cmd, QWidget* parent)
     : d (new QConsolePrivate (this, cmd))
 {
 }
 
 //////////////////////////////////////////////////////////////////////////////
 
-QUnixTerminalImpl::~QUnixTerminalImpl (void)
+QWinTerminalImpl::~QWinTerminalImpl (void)
 {
   delete d;
 }
 
 //////////////////////////////////////////////////////////////////////////////
 
-void QUnixTerminalImpl::viewResizeEvent (QConsoleView*, QResizeEvent*)
+void QWinTerminalImpl::viewResizeEvent (QConsoleView*, QResizeEvent*)
 {
   d->updateConsoleSize (true);
   d->grabConsoleBuffer ();
 }
 
 //////////////////////////////////////////////////////////////////////////////
 
-void QUnixTerminalImpl::viewPaintEvent (QConsoleView* w, QPaintEvent* event)
+void QWinTerminalImpl::viewPaintEvent (QConsoleView* w, QPaintEvent* event)
 {
   QPainter p (w);
   int cw = d->m_charSize.width (), ch = d->m_charSize.height ();
   int ascent, stride, cx1, cy1, cx2, cy2, x, y;
   WORD attr = 0;
   QString s;
   bool hasChar = false;
 
@@ -800,30 +800,30 @@ void QUnixTerminalImpl::viewPaintEvent (
   p.setCompositionMode (QPainter::RasterOp_SourceXorDestination);
   p.fillRect ((d->m_cursorPos.x () - d->m_consoleRect.x ()) * cw,
               (d->m_cursorPos.y () - d->m_consoleRect.y ()) * ch,
               cw, ch, d->m_colors[7]);
 }
 
 //////////////////////////////////////////////////////////////////////////////
 
-void QUnixTerminalImpl::wheelEvent (QWheelEvent* event)
+void QWinTerminalImpl::wheelEvent (QWheelEvent* event)
 {
   if (! d->m_inWheelEvent)
     {
       // Forward to the scrollbar (avoid recursion)
       d->m_inWheelEvent = true;
       QApplication::sendEvent (d->m_scrollBar, event);
       d->m_inWheelEvent = false;
     }
 }
 
 //////////////////////////////////////////////////////////////////////////////
 
-bool QUnixTerminalImpl::winEvent (MSG* msg, long* result)
+bool QWinTerminalImpl::winEvent (MSG* msg, long* result)
 {
   switch (msg->message)
     {
     case WM_KEYDOWN:
     case WM_KEYUP:
     //case WM_CHAR:
       // Forward Win32 message to the console window
       PostMessage (d->m_consoleWindow,
@@ -834,41 +834,41 @@ bool QUnixTerminalImpl::winEvent (MSG* m
       return true;
     default:
       return false;
     }
 }
 
 //////////////////////////////////////////////////////////////////////////////
 
-void QUnixTerminalImpl::scrollValueChanged (int value)
+void QWinTerminalImpl::scrollValueChanged (int value)
 {
   d->setScrollValue (value);
 }
 
 //////////////////////////////////////////////////////////////////////////////
 
-void QUnixTerminalImpl::monitorConsole (void)
+void QWinTerminalImpl::monitorConsole (void)
 {
   d->monitorConsole ();
 }
 
 //////////////////////////////////////////////////////////////////////////////
 
-void QUnixTerminalImpl::focusInEvent (QFocusEvent* event)
+void QWinTerminalImpl::focusInEvent (QFocusEvent* event)
 {
   QWidget::focusInEvent (event);
 }
 
 //////////////////////////////////////////////////////////////////////////////
 
-void QUnixTerminalImpl::start (void)
+void QWinTerminalImpl::start (void)
 {
   d->startCommand ();
 }
 
 //////////////////////////////////////////////////////////////////////////////
 
-void QUnixTerminalImpl::sendText (const QString& s)
+void QWinTerminalImpl::sendText (const QString& s)
 {
   d->sendConsoleText (s);
 }
 
