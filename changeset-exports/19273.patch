# HG changeset patch
# User Rik <rik@octave.org>
# Date 1413906069 25200
#      Tue Oct 21 08:41:09 2014 -0700
# Node ID dc64f1c4a33e97a7308800054c028ba109b0a9e8
# Parent  26d1c3b731747d3955873ff0ef613706ede5d86d
doc: Add documentation about finish.m and shutdown procedure to manual.

* basics.txi: Add cindex terms "finish.m", "site exiting file".  Add
paragraph about shutdown procedure and how finish.m is invoked.

* toplev.cc (Fquit): Redo docstring to list 1-argument forms.  Add
info about finish.m being executed.

* toplev.cc (Fatexit): Make first sentence standalone.  Add seealso
link to quit.

diff --git a/doc/interpreter/basics.txi b/doc/interpreter/basics.txi
--- a/doc/interpreter/basics.txi
+++ b/doc/interpreter/basics.txi
@@ -381,16 +381,25 @@ The @code{dump_prefs} function is useful
 to Octave are possible and which are in effect.
 
 @DOCSTRING(dump_prefs)
 
 @node Quitting Octave
 @section Quitting Octave
 @cindex exiting octave
 @cindex quitting octave
+@cindex finish.m
+@cindex site exiting file
+
+Shutdown is initiated with the @code{exit} or @code{quit} commands (they are
+equivalent).  Similar to startup, Octave has a shutdown process that can be
+customized by user script files.  During shutdown Octave will search for the
+script file @file{finish.m} in the function load path.  Commands to save all
+workspace variables or cleanup temporary files may be placed there.  Additional
+functions to execute on shutdown may be registered with @code{atexit}.
 
 @DOCSTRING(quit)
 
 @DOCSTRING(atexit)
 
 @node Getting Help
 @section Commands for Getting Help
 @cindex online help
diff --git a/libinterp/corefcn/toplev.cc b/libinterp/corefcn/toplev.cc
--- a/libinterp/corefcn/toplev.cc
+++ b/libinterp/corefcn/toplev.cc
@@ -779,21 +779,30 @@ clean_up_and_exit (int retval, bool safe
     {
       if (octave_exit)
         (*octave_exit) (retval);
     }
 }
 
 DEFUN (quit, args, ,
        "-*- texinfo -*-\n\
-@deftypefn  {Built-in Function} {} exit (@var{status})\n\
+@deftypefn  {Built-in Function} {} exit\n\
+@deftypefnx {Built-in Function} {} exit (@var{status})\n\
+@deftypefnx {Built-in Function} {} quit\n\
 @deftypefnx {Built-in Function} {} quit (@var{status})\n\
-Exit the current Octave session.  If the optional integer value\n\
-@var{status} is supplied, pass that value to the operating system as the\n\
-Octave's exit status.  The default value is zero.\n\
+Exit the current Octave session.\n\
+\n\
+If the optional integer value @var{status} is supplied, pass that value to\n\
+the operating system as Octave's exit status.  The default value is zero.\n\
+\n\
+When exiting, Octave will attempt to run the m-file @file{finish.m} if it\n\
+exists.  User commands to save the workspace or clean up temporary files\n\
+may be placed in that file.  Alternatively, another m-file may be scheduled\n\
+to run using @code{atexit}.\n\
+@seealso{atexit}\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
   if (! quit_allowed)
     error ("quit: not supported in embedded mode");
   else
     {
@@ -1148,17 +1157,19 @@ octave_remove_atexit_function (const std
   return found;
 }
 
 
 DEFUN (atexit, args, nargout,
        "-*- texinfo -*-\n\
 @deftypefn  {Built-in Function} {} atexit (@var{fcn})\n\
 @deftypefnx {Built-in Function} {} atexit (@var{fcn}, @var{flag})\n\
-Register a function to be called when Octave exits.  For example,\n\
+Register a function to be called when Octave exits.\n\
+\n\
+For example,\n\
 \n\
 @example\n\
 @group\n\
 function last_words ()\n\
   disp (\"Bye bye\");\n\
 endfunction\n\
 atexit (\"last_words\");\n\
 @end group\n\
@@ -1180,16 +1191,17 @@ atexit (\"last_words\", false);\n\
 @noindent\n\
 will remove the function from the list and Octave will not call\n\
 @code{last_words} when it exits.\n\
 \n\
 Note that @code{atexit} only removes the first occurrence of a function\n\
 from the list, so if a function was placed in the list multiple\n\
 times with @code{atexit}, it must also be removed from the list\n\
 multiple times.\n\
+@seealso{quit}\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
   int nargin = args.length ();
 
   if (nargin == 1 || nargin == 2)
     {
