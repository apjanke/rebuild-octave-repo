# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1257154137 -3600
#      Mon Nov 02 10:28:57 2009 +0100
# Node ID 0df32e0b2074031f69f0c13ee9c8b2a1057d93e5
# Parent  82fe4db20decd3d0ee6e12784695543fe635803f
fix base class field assignment

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,14 @@
+2009-11-02  Jaroslav Hajek  <highegg@gmail.com>
+
+	* ov-class.cc (octave_class::unique_parent_class): New method.
+	(octave_class::subsasgn): Use it here.
+	* ov-class.h: Declare it.
+
 2009-11-01  John W. Eaton  <jwe@octave.org>
 
 	* data.cc (get_sort_mode_option): New function.
 	(Fissorted): Handle ascending or descending option.
 
 2009-11-01  John W. Eaton  <jwe@octave.org>
 
 	* load-path.cc (load_path::dir_info::update): Always initialize
diff --git a/src/ov-base.h b/src/ov-base.h
--- a/src/ov-base.h
+++ b/src/ov-base.h
@@ -516,16 +516,19 @@ public:
 
   virtual std::list<std::string> parent_class_name_list (void) const;
 
   virtual string_vector parent_class_names (void) const;
 
   virtual octave_base_value *find_parent_class (const std::string&)
     { return 0; }
 
+  virtual octave_base_value *unique_parent_class (const std::string&)
+    { return 0; }
+
   virtual octave_function *function_value (bool silent = false);
 
   virtual const octave_function *function_value (bool silent = false) const;
 
   virtual octave_user_function *user_function_value (bool silent = false);
 
   virtual octave_user_script *user_script_value (bool silent = false);
 
diff --git a/src/ov-class.cc b/src/ov-class.cc
--- a/src/ov-class.cc
+++ b/src/ov-class.cc
@@ -789,17 +789,17 @@ octave_class::subsasgn (const std::strin
 
 	case '.':
 	  {
 	    // Find the class in which this method resides before 
 	    // attempting to access the requested field.
 
 	    std::string method_class = get_current_method_class ();
 
-	    octave_base_value *obvp = find_parent_class (method_class);
+	    octave_base_value *obvp = unique_parent_class (method_class);
 
 	    if (obvp)
 	      {
 		octave_value_list key_idx = idx.front ();
 
 		assert (key_idx.length () == 1);
 
 		std::string key = key_idx(0).string_value ();
@@ -925,16 +925,54 @@ octave_class::find_parent_class (const s
 	  if (retval)
 	    break;
 	}
     }
 
   return retval;
 }
 
+octave_base_value *
+octave_class::unique_parent_class (const std::string& parent_class_name)
+{
+  octave_base_value* retval = 0;
+
+  if (parent_class_name == class_name ())
+    retval = this;
+  else
+    {
+      for (std::list<std::string>::iterator pit = parent_list.begin ();
+	   pit != parent_list.end ();
+	   pit++)
+	{
+	  Octave_map::iterator smap = map.seek (*pit);
+
+	  Cell& tmp = smap->second;
+
+	  octave_value& vtmp = tmp(0);
+
+	  octave_base_value *obvp = vtmp.internal_rep ();
+
+          // Use find_parent_class first to avoid uniquifying if not necessary.
+	  retval = obvp->find_parent_class (parent_class_name);
+
+	  if (retval)
+            {
+              vtmp.make_unique ();
+              obvp = vtmp.internal_rep ();
+              retval = obvp->unique_parent_class (parent_class_name);
+
+              break;
+            }
+	}
+    }
+
+  return retval;
+}
+
 void
 octave_class::print (std::ostream& os, bool) const
 {
   print_raw (os);
 }
 
 void
 octave_class::print_raw (std::ostream& os, bool) const
diff --git a/src/ov-class.h b/src/ov-class.h
--- a/src/ov-class.h
+++ b/src/ov-class.h
@@ -136,16 +136,18 @@ public:
   std::list<std::string> parent_class_name_list (void) const
     { return parent_list; }
 
   string_vector parent_class_names (void) const
     { return string_vector (parent_list); }
 
   octave_base_value *find_parent_class (const std::string&);
 
+  octave_base_value *unique_parent_class (const std::string&);
+
   void print (std::ostream& os, bool pr_as_read_syntax = false) const;
 
   void print_raw (std::ostream& os, bool pr_as_read_syntax = false) const;
 
   bool print_name_tag (std::ostream& os, const std::string& name) const;
 
   void print_with_name (std::ostream& os, const std::string& name, 
 			bool print_padding = true);
