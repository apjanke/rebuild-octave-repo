# HG changeset patch
# User Mike Miller <mtmiller@octave.org>
# Date 1548999304 28800
#      Thu Jan 31 21:35:04 2019 -0800
# Branch stable
# Node ID df42ea23502f185358798894a38205c3251673f2
# Parent  c3c657ba1e97760aa3f705e7b792b32117fd5959
build: support GNU bison 3.3, silence POSIX compatibility warning (bug #55613)

* acinclude.m4 (OCTAVE_PROG_BISON): Define WARN_YFLAGS to include options to
silence POSIX compatibility warnings from GNU bison.  Use it when testing for
required syntax support.
* Makefile.am (AM_YFLAGS): Include ${WARN_YFLAGS} in the list of options.

diff --git a/Makefile.am b/Makefile.am
--- a/Makefile.am
+++ b/Makefile.am
@@ -30,17 +30,17 @@ export TAR_OPTIONS
 
 version := ${OCTAVE_VERSION}
 api_version := ${OCTAVE_API_VERSION}
 
 ## AM_LIBTOOLFLAGS = --silent
 
 AM_LFLAGS = @LFLAGS@
 
-AM_YFLAGS = -dv
+AM_YFLAGS = -dv ${WARN_YFLAGS}
 
 # Fortran compiler flags.
 
 AM_FFLAGS = ${FPICFLAG} @FFLAGS@
 
 # C compiler flags.
 
 AM_CFLAGS = ${CPICFLAG} ${XTRA_CFLAGS} ${WARN_CFLAGS}
diff --git a/m4/acinclude.m4 b/m4/acinclude.m4
--- a/m4/acinclude.m4
+++ b/m4/acinclude.m4
@@ -3175,23 +3175,31 @@ AC_DEFUN([OCTAVE_PROG_AR], [
     AR_FLAGS="$ARFLAGS"
   fi
 ])
 dnl
 dnl Check for bison.
 dnl
 AC_DEFUN([OCTAVE_PROG_BISON], [
   AC_PROG_YACC
+  WARN_YFLAGS=
 
   case "`$YACC --version`" in
     *bison*) tmp_have_bison=yes ;;
     *) tmp_have_bison=no ;;
   esac
 
   if test $tmp_have_bison = yes; then
+    dnl FIXME: Call GNU bison with the `-Wno-yacc` option, which works with
+    dnl bison 2.5 and all later versions, as recommended by the bison NEWS.
+    dnl This is needed as long as Octave supports Autoconf version 2.69 or
+    dnl older.  In Autoconf 2.70, AC_PROG_YACC no longer adds the `-y`
+    dnl option to emulate POSIX yacc.
+    WARN_YFLAGS="-Wno-yacc"
+
     AC_CACHE_CHECK([syntax of bison api.prefix (or name-prefix) declaration],
                    [octave_cv_bison_api_prefix_decl_style], [
       style="api name"
       quote="quote brace"
       for s in $style; do
         for q in $quote; do
           if test $s = "api"; then
             if test $q = "quote"; then
@@ -3209,17 +3217,17 @@ AC_DEFUN([OCTAVE_PROG_BISON], [
           cat << EOF > conftest.yy
 $def
 %start input
 %%
 input:;
 %%
 EOF
           ## Older versions of bison only warn and exit with success.
-          octave_bison_output=`$YACC conftest.yy 2>&1`
+          octave_bison_output=`$YACC $WARN_YFLAGS conftest.yy 2>&1`
           ac_status=$?
           if test $ac_status -eq 0 && test -z "$octave_bison_output"; then
             octave_cv_bison_api_prefix_decl_style="$s $q"
             break
           fi
         done
         if test -n "$octave_cv_bison_api_prefix_decl_style"; then
           break
@@ -3247,16 +3255,17 @@ understand the '%define api.prefix { PRE
 
 I didn't find bison, or the version of bison that I found does not
 support all the features that are required, but it's only a problem
 if you need to reconstruct parse.cc, which is the case if you're
 building from VCS sources.
 "
     OCTAVE_CONFIGURE_WARNING([warn_bison])
   fi
+  AC_SUBST(WARN_YFLAGS)
 ])
 dnl
 dnl Find find program.
 dnl
 ## Prefer GNU find if found.
 AN_MAKEVAR([FIND],  [OCTAVE_PROG_FIND])
 AN_PROGRAM([gfind], [OCTAVE_PROG_FIND])
 AN_PROGRAM([find],  [OCTAVE_PROG_FIND])
