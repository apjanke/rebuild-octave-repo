# HG changeset patch
# User jwe
# Date 1090941484 0
#      Tue Jul 27 15:18:04 2004 +0000
# Node ID d2a7208f35d40f260728505a6ac74a4cfa2b7b2b
# Parent  f69e95587ba39c4047073ffc76e78853cf5ecdcb
[project @ 2004-07-27 15:18:04 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2004-07-27  David Bateman  <dbateman@free.fr>
+
+	* general/num2str.m: Also insert spaces in output when precision
+	argument is supplied.
+
 2004-07-23  David Bateman  <dbateman@free.fr>
 
 	* general/bitcmp.m, general/bitget.m, general/bitset.m: New functions.
 
 2004-07-22  Etienne Grossmann  <etienne@cs.uky.edu>
 
 	* general/sub2ind.m: Make reshaping index list unnecessary.
 
diff --git a/scripts/general/num2str.m b/scripts/general/num2str.m
--- a/scripts/general/num2str.m
+++ b/scripts/general/num2str.m
@@ -39,17 +39,21 @@ function retval = num2str (x, arg)
     retval = x;
   endif
 
   if (iscomplex (x))
     if (nargin == 2)
       if (isstr (arg))
 	fmt = strcat (arg, "%-+", arg(2:end), "i");
       else
-	fmt = sprintf ("%%.%dg%%-+.%dgi", arg);
+	if (isnumeric (x) && round (x) == x && abs (x) < (10.^arg))
+	  fmt = sprintf ("%%%dd%%-+%ddi  ", arg, arg);
+	else
+	  fmt = sprintf ("%%%d.%dg%%-+%d.%dgi", arg+7, arg, arg+7, arg);
+	endif
       endif
     else
       ## Setup a suitable format string
       if (isnumeric (x) && round (x) == x && abs (x) < 1e10)
 	dgt1 = ceil (log10 (max (max (abs (real (x(:)))),
 				 max (abs (imag (x(:))))))) + 1;
 	dgt2 = dgt1 - (min (real (x(:))) >= 0);
 	fmt = sprintf("%%%dd%%+-%ddi  ", dgt2, dgt1);
@@ -98,17 +102,21 @@ function retval = num2str (x, arg)
 
     tmp(length (tmp)) = "";
     retval = split (tmp, "\n");
   else
     if (nargin == 2)
       if (isstr (arg))
 	fmt = arg;
       else
-	fmt = sprintf ("%%.%dg", arg);
+	if (isnumeric (x) && round (x) == x && abs (x) < (10.^ arg))
+	  fmt = sprintf ("%%%dd  ", arg);
+	else
+	  fmt = sprintf ("%%%d.%dg", arg+7, arg);
+	endif
       endif
     else
       if (isnumeric (x) && round (x) == x && abs (x) < 1e10)
 	if (max (abs (x(:))) == 0)
 	  dgt = 1;
 	else
 	  dgt = floor (log10 (max (abs(x(:))))) + (min (real (x(:))) < 0) + 1;
 	endif
