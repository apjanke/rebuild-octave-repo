# HG changeset patch
# User Rik <rdrider0-list@yahoo.com>
# Date 1242595052 25200
#      Sun May 17 14:17:32 2009 -0700
# Node ID a7a9eecc07b5bb760264e0d540c8457369b97939
# Parent  923c7cb7f13f3774811cf7504a9e0e221ead7c84
Change recommendation for writing documentation to favor @tex
rather than @iftex construction.

diff --git a/doc/ChangeLog b/doc/ChangeLog
--- a/doc/ChangeLog
+++ b/doc/ChangeLog
@@ -1,8 +1,13 @@
+2009-05-17  Rik  <rdrider0-list@yahoo.com>
+
+	* interpreter/tips.txi: Change recommendation to use @tex rather than
+	@iftex construction.
+
 2009-05-17  Rik  <rdrider0-list@yahoo.com>
 
 	* interpreter/*.txi: Simplify TeXinfo files by eliminating redundant @iftex
 	followed by @tex construction.  Also, spellchecked all .txi and .texi files.
 
 2009-05-14  Rik  <rdrider0-list@yahoo.com>
 
 	* interpreter/arith.txi: Update section 17.8 (Mathematical Consants)
diff --git a/doc/interpreter/tips.txi b/doc/interpreter/tips.txi
--- a/doc/interpreter/tips.txi
+++ b/doc/interpreter/tips.txi
@@ -378,17 +378,17 @@ the function is in, its output arguments
 signature.  Typical classes for functions include @code{Function File}
 for standard Octave functions, and @code{Loadable Function} for
 dynamically linked functions.  A skeletal Texinfo documentation string
 therefore looks like this
 
 @example
 @group
 -*- texinfo -*-
-@@deftypefn@{Function File@} @{@@var@{ret@} = @} fn (@dots{})
+@@deftypefn@{Function File@} @{@@var@{ret@} =@} fn (@dots{})
 @@cindex index term
 Help text in Texinfo format.  Code samples should be marked 
 like @@code@{sample of code@} and variables should be marked
 as @@var@{variable@}.
 @@seealso@{fn2@}
 @@end deftypefn
 @end group
 @end example
@@ -402,66 +402,79 @@ functions.  The important aspects of the
 This string signals Octave that the following text is in Texinfo format,
 and should be the first part of any help string in Texinfo format.
 @item @@deftypefn@{class@} @dots{} @@end deftypefn
 The entire help string should be enclosed within the block defined by
 deftypefn.
 @item @@cindex index term
 This generates an index entry, and can be useful when the function is
 included as part of a larger piece of documentation.  It is ignored
-within Octave's help viewer.
+within Octave's help viewer.  Only one index term may appear per line
+but multiple @@cindex lines are valid if the function should be 
+filed under different terms.
 @item @@var@{variable@}
 All variables should be marked with this macro.  The markup of variables
 is then changed appropriately for display.
 @item @@code@{sample of code@}
 All samples of code should be marked with this macro for the same
 reasons as the @@var macro.
 @item @@seealso@{function2@}
 This is a comma separated list of function names that allows cross
 referencing from one function documentation string to another.
 @end table
 
 Texinfo format has been designed to generate output for online viewing
-with text-terminals as well as generating high-quality printed output.
+with text terminals as well as generating high-quality printed output.
 To these ends, Texinfo has commands which control the diversion of parts
 of the document into a particular output processor.  Three formats are
 of importance: info, html and @TeX{}.  These are selected with
 
 @example
 @group
 @@ifinfo
 Text area for info only
 @@end ifinfo
 @end group
 @end example
 
 @example
 @group
 @@ifhtml
-Text area for html only
+Text area for HTML only
 @@end ifhtml
 @end group
 @end example
 
 @example
 @group
-@@iftex
 @@tex
-text for TeX only
+Text area for TeX only
 @@end tex
-@@end iftex
 @end group
 @end example
 
 Note that often @TeX{} output can be used in html documents and so often
 the @code{@@ifhtml} blocks are unnecessary.  If no specific output
 processor is chosen, by default, the text goes into all output
 processors.  It is usual to have the above blocks in pairs to allow the
 same information to be conveyed in all output formats, but with a
-different markup.
+different markup.  Currently, most Octave documentation only makes a
+distinction between @TeX{} and all other formats.  Therefore, the
+following construct is seen repeatedly.
+
+@example
+@group
+@@tex
+text for TeX only
+@@end tex
+@@ifnottex
+text for info, HTML, plaintext
+@@end ifnottex
+@end group
+@end example
 
 Another important feature of Texinfo that is often used in Octave help
 strings is the @code{@@example} environment.  An example of its use is
 
 @example
 @group
 @@example
 @@group
@@ -478,70 +491,74 @@ which produces
 @group
 @code{2 * 2}
 @result{} 4
 @end group
 @end example
 
 The @code{@@group} block prevents the example from being split across a
 page boundary, while the @code{@@result@{@}} macro produces a right
-arrow signifying the result of a command. 
+arrow signifying the result of a command.  If your example is larger than
+20 lines it is better NOT to use grouping so that a reasonable page boundary
+can be calculated.
 
 In many cases a function has multiple ways in which it can be called,
 and the @code{@@deftypefnx} macro can be used to give alternatives.  For
 example
 
 @example
 @group
 -*- texinfo -*-
-@@deftypefn@{Function File@} @{@@var@{a@} = @} fn (@@var@{x@}, @dots{})
-@@deftypefnx@{Function File@} @{@@var@{a@} = @} fn (@@var@{y@}, @dots{})
+@@deftypefn@{Function File@} @{@@var@{a@} =@} fn (@@var@{x@}, @dots{})
+@@deftypefnx@{Function File@} @{@@var@{a@} =@} fn (@@var@{y@}, @dots{})
 Help text in Texinfo format.
 @@end deftypefn
 @end group
 @end example
 
 Many complete examples of Texinfo documentation can be taken from the
 help strings for the Octave functions themselves.  A relatively complete
 example of which is the @code{nchoosek} function.  The Texinfo
-documentation string of @code{nchoosek} is
+documentation string for @code{nchoosek} is
 
 @example
 -*- texinfo -*-
 @@deftypefn @{Function File@} @{@} nchoosek (@@var@{n@}, @@var@{k@})
 
 Compute the binomial coefficient or all combinations of 
 @@var@{n@}.  If @@var@{n@} is a scalar then, calculate the
 binomial coefficient of @@var@{n@} and @@var@{k@}, defined as
 
-@@iftex
 @@tex
 $$
  @{n \choose k@} = @{n (n-1) (n-2) \cdots (n-k+1) \over k!@}
 $$
 @@end tex
-@@end iftex
-@@ifinfo
+@@ifnottex
 
 @@example
 @@group
  /   \
  | n |    n (n-1) (n-2) @dots{} (n-k+1)
  |   |  = -------------------------
  | k |               k!
  \   /
 @@end group
 @@end example
-@@end ifinfo
+@@end ifnottex
 
 If @@var@{n@} is a vector, this generates all combinations
 of the elements of @@var@{n@}, taken @@var@{k@} at a time,
 one row per combination.  The resulting @@var@{c@} has size
 @@code@{[nchoosek (length (@@var@{n@}),@@var@{k@}), @@var@{k@}]@}.
 
+@@code@{nchoosek@} works only for non-negative integer arguments; use
+@@code@{bincoeff@} for non-integer scalar arguments and for using vector
+arguments to compute many coefficients at once.
+
 @@seealso@{bincoeff@}
 @@end deftypefn
 @end example
 
 which demonstrates most of the concepts discussed above.
 @iftex
 This documentation string renders as
 
@@ -561,16 +578,20 @@ This documentation string renders as
            | k |               k!                k! (n-k)!
            \   /
 
      If N is a vector generate all combinations of the
      elements of N, taken K at a time, one row per
      combination.  The resulting C has size `[nchoosek
      (length (N), K), K]'.
 
+     `nchoosek' works only for non-negative integer
+     arguments; use `bincoeff' for non-integer scalar 
+     arguments and for using vector arguments to compute
+     many coefficients at once.
 
      See also: bincoeff.
 @end group
 @end example
 
 using info, whereas in a printed documentation using @TeX{} it will appear
 as
 
@@ -586,12 +607,16 @@ of @var{n} and @var{k}, defined as
 $$
 @end tex
 
 If @var{n} is a vector generate all combinations of the elements
 of @var{n}, taken @var{k} at a time, one row per combination.  The 
 resulting @var{c} has size @code{[nchoosek (length (@var{n}), 
 @var{k}), @var{k}]}.
 
+@code{nchoosek} works only for non-negative integer arguments; use
+@code{bincoeff} for non-integer scalar arguments and for using vector
+arguments to compute many coefficients at once.
+
 @seealso{bincoeff}
 @end deftypefn
 
 @end iftex
diff --git a/scripts/specfun/nchoosek.m b/scripts/specfun/nchoosek.m
--- a/scripts/specfun/nchoosek.m
+++ b/scripts/specfun/nchoosek.m
@@ -19,24 +19,22 @@
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {@var{c} =} nchoosek (@var{n}, @var{k})
 ##
 ## Compute the binomial coefficient or all combinations of @var{n}.
 ## If @var{n} is a scalar then, calculate the binomial coefficient
 ## of @var{n} and @var{k}, defined as
 ##
-## @iftex
 ## @tex
 ## $$
 ##  {n \choose k} = {n (n-1) (n-2) \cdots (n-k+1) \over k!}
 ##                = {n! \over k! (n-k)!}
 ## $$
 ## @end tex
-## @end iftex
 ## @ifnottex
 ##
 ## @example
 ## @group
 ##  /   \
 ##  | n |    n (n-1) (n-2) @dots{} (n-k+1)       n!
 ##  |   |  = ------------------------- =  ---------
 ##  | k |               k!                k! (n-k)!
