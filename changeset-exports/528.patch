# HG changeset patch
# User jwe
# Date 774730430 0
#      Wed Jul 20 18:53:50 1994 +0000
# Node ID e1e6e33e26f8f75419950f5ee17ec6451abbd6fe
# Parent  6898f0c9e096d763d3e56901b48a46cca2fc6910
[project @ 1994-07-20 18:53:50 by jwe]
,.

diff --git a/src/error.cc b/src/error.cc
--- a/src/error.cc
+++ b/src/error.cc
@@ -27,24 +27,27 @@ Software Foundation, 675 Mass Ave, Cambr
 
 #include <stdio.h>
 #include <stdlib.h>
 #include <stdarg.h>
 
 #include "utils.h"
 #include "error.h"
 #include "pager.h"
+#include "oct-obj.h"
+#include "tree-const.h"
+#include "defun.h"
 
 // Current error state.
 int error_state;
 
 static void
 verror (const char *name, const char *fmt, va_list args)
 {
-  if (name != (char *) NULL)
+  if (name)
     fprintf (stderr, "%s: ", name);
 
   vfprintf (stderr, fmt, args);
   fprintf (stderr, "\n");
   fflush (stderr);
 }
 
 void
@@ -110,14 +113,46 @@ panic (const char *fmt, ...)
 
   va_list args;
   va_start (args, fmt);
   verror ("panic", fmt, args);
   va_end (args);
   abort ();
 }
 
+DEFUN ("error", Ferror, Serror, 2, 1,
+  "error (MESSAGE): print MESSAGE and set the error state.\n\
+This should eventually take us up to the top level, possibly\n\
+printing traceback messages as we go.\n\
+\n\
+If MESSAGE ends in a newline character, traceback messages are not\n\
+printed.") 
+{
+  Octave_object retval;
+
+  char *msg = "unspecified_error";
+
+  int nargin = args.length ();
+
+  if (nargin == 2 && args(1).is_defined ())
+    {
+      if (args(1).is_string_type ())
+	{
+	  msg = args(1).string_value ();
+
+	  if (! msg || ! *msg)
+	    return retval;
+	}
+      else if (args(1).is_empty ())
+	return retval;
+    }
+
+  error (msg);
+
+  return retval;
+}
+
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; page-delimiter: "^/\\*" ***
 ;;; End: ***
 */
