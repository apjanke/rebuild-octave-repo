# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1285726921 25200
#      Tue Sep 28 19:22:01 2010 -0700
# Node ID 4cbb08163a1fb9ca7f4c42bf199cc3e50721d8bb
# Parent  35416c9baf76cada668f4470cc9ef3c3554efd96
Use Octave to create pdf versions of plots for documentation.

diff --git a/doc/ChangeLog b/doc/ChangeLog
--- a/doc/ChangeLog
+++ b/doc/ChangeLog
@@ -1,8 +1,16 @@
+2010-09-28  Rik <octave@nomad.inbox5.com>
+
+	* doc/interpreter/Makefile.am, doc/interpreter/geometryimages.m,
+	doc/interpreter/images.awk, doc/interpreter/interpimages.m,
+	doc/interpreter/plotimages.m, doc/interpreter/sparseimages.m: Use
+	Octave to create pdf versions of plots for documentation rather than
+	Ghostscript via Makefile.
+
 2010-09-28  Rik <octave@nomad.inbox5.com>
 
 	* doc/interpreter/geometryimages.m, doc/interpreter/interpimages.m,
 	doc/interpreter/plotimages.m, doc/interpreter/sparseimages.m: Untabify
 	scripts.
 
 2010-09-27  Rik <octave@nomad.inbox5.com>
 
diff --git a/doc/interpreter/Makefile.am b/doc/interpreter/Makefile.am
--- a/doc/interpreter/Makefile.am
+++ b/doc/interpreter/Makefile.am
@@ -84,19 +84,16 @@ EXAMPLE_FILES = \
 
 
 
 include images.mk
 
 $(srcdir)/images.mk: $(srcdir)/config-images.sh $(srcdir)/images.awk $(srcdir)/images
 	$(srcdir)/config-images.sh $(top_srcdir)
 
-.eps.pdf:
-	if [ -f $< ] ; then $(GHOSTSCRIPT) -dBATCH -dEPSCrop -dNOPAUSE -q -sDEVICE=pdfwrite -sOutputFile=$@ $< ; fi
-
 IMAGES = \
   $(IMAGES_EPS) \
   $(IMAGES_PDF) \
   $(IMAGES_PNG) \
   $(IMAGES_TXT) \
   $(HTMLDIR_IMAGES)
 
 MUNGED_TEXI_SRC = \
diff --git a/doc/interpreter/geometryimages.m b/doc/interpreter/geometryimages.m
--- a/doc/interpreter/geometryimages.m
+++ b/doc/interpreter/geometryimages.m
@@ -12,16 +12,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 function geometryimages (nm, typ)
+  backend ("gnuplot");
   set_print_size ();
   hide_output ();
   if (strcmp (typ, "png"))
     set (0, "defaulttextfontname", "*");
   endif
   if (strcmp (typ, "eps"))
     d_typ = "-depsc2";
   else
diff --git a/doc/interpreter/images.awk b/doc/interpreter/images.awk
--- a/doc/interpreter/images.awk
+++ b/doc/interpreter/images.awk
@@ -20,22 +20,16 @@ BEGIN {
 
     printf ("%s_%s =", ubasename, uext);
     for (j = 2; j <= NF; j++)
       printf (" %s.%s", $j, ext);
     printf ("\n");
 
     printf ("IMAGES_%s += $(%s_%s)\n", uext, ubasename, uext);
 
-    # Skip building pdf images in Octave
-    # Use Makefile rule to transform .eps files to .pdf
-    if (ext == "pdf") {
-      continue;
-    }
-
     if (ext == "png") {
       printf ("HTMLDIR_IMAGES += ");
       for (j = 2; j <= NF; j++)
         printf (" octave.html/%s.png", $j);
       printf ("\n");
     }
 
     for (j = 2; j <= NF; j++) {
diff --git a/doc/interpreter/interpimages.m b/doc/interpreter/interpimages.m
--- a/doc/interpreter/interpimages.m
+++ b/doc/interpreter/interpimages.m
@@ -12,16 +12,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 function interpimages (nm, typ)
+  backend ("gnuplot");
   set_print_size ();
   hide_output ();
   if (strcmp (typ, "png"))
     set (0, "defaulttextfontname", "*");
   endif
   if (strcmp (typ, "eps"))
     d_typ = "-depsc2";
   else
diff --git a/doc/interpreter/plotimages.m b/doc/interpreter/plotimages.m
--- a/doc/interpreter/plotimages.m
+++ b/doc/interpreter/plotimages.m
@@ -12,16 +12,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 function plotimages (nm, typ)
+  backend ("gnuplot");
   set_print_size ();
   hide_output ();
   if (strcmp (typ, "png"))
     set (0, "defaulttextfontname", "*");
   endif
   if (strcmp (typ, "eps"))
     d_typ = "-depsc2";
   else
diff --git a/doc/interpreter/sparseimages.m b/doc/interpreter/sparseimages.m
--- a/doc/interpreter/sparseimages.m
+++ b/doc/interpreter/sparseimages.m
@@ -12,16 +12,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 function sparseimages (nm, typ)
+  backend ("gnuplot");
   set_print_size ();
   if (strcmp (typ, "png"))
     set (0, "defaulttextfontname", "*");
   endif
 
   if (! isempty (findstr (octave_config_info ("DEFS"), "HAVE_COLAMD"))
       && ! isempty (findstr (octave_config_info ("DEFS"), "HAVE_CHOLMOD"))
       && ! isempty (findstr (octave_config_info ("DEFS"), "HAVE_UMFPACK")))
@@ -67,17 +68,17 @@ function gplotimages (nm, typ)
   A = sparse ([2,6,1,3,2,4,3,5,4,6,1,5],
               [1,1,2,2,3,3,4,4,5,5,6,6], 1, 6, 6);
   xy = [0,4,8,6,4,2;5,0,5,7,5,7]';
   gplot (A, xy)
   print (cstrcat (nm, ".", typ), d_typ)
   hide_output ();
 endfunction
 
-function txtimages(nm,n,typ)
+function txtimages(nm, n, typ)
   a = 10*speye(n) + sparse(1:n,ceil([1:n]/2),1,n,n) + ...
       sparse(ceil([1:n]/2),1:n,1,n,n);
   if (strcmp (nm, "gplot") || strcmp (nm, "grid"))
     fid = fopen (sprintf ("%s.txt", nm), "wt");
     fputs (fid, "\n");
     fputs (fid, "+---------------------------------+\n");
     fputs (fid, "| Image unavailable in text mode. |\n");
     fputs (fid, "+---------------------------------+\n");
@@ -94,17 +95,17 @@ function txtimages(nm,n,typ)
         [r2,p2,q2]=chol(a);
         printsparse(r2,cstrcat("spcholperm.",typ));
       endif
       ## printf("Text NNZ: Matrix %d, Chol %d, PermChol %d\n",nnz(a),nnz(r1),nnz(r2));
     endif
   endif
 endfunction
 
-function otherimages(nm,n,typ)
+function otherimages(nm, n, typ)
   hide_output ();
   if (strcmp (typ, "eps"))
     d_typ = "-depsc2";
   else
     d_typ = cstrcat ("-d", typ);
   endif
 
   a = 10*speye(n) + sparse(1:n,ceil([1:n]/2),1,n,n) + ...
@@ -130,17 +131,17 @@ function otherimages(nm,n,typ)
         print(cstrcat("spcholperm.",typ), d_typ)
         hide_output ();
       endif
       ## printf("Image NNZ: Matrix %d, Chol %d, PermChol %d\n",nnz(a),nnz(r1),nnz(r2));
     endif
   endif
 endfunction
 
-function printsparse(a,nm)
+function printsparse(a, nm)
   fid = fopen (nm,"wt");
   fputs (fid, "\n");
   for i = 1:size(a,1)
     if (rem(i,5) == 0)
       fprintf (fid,"         %2d - ", i);
     else
       fprintf (fid,"            | ");
     endif
@@ -168,17 +169,17 @@ function printsparse(a,nm)
       fprintf(fid,"%2d",j);
     else
       fprintf(fid,"  ");
     endif
   endfor
   fclose(fid);
 endfunction
 
-function femimages (nm,typ)
+function femimages (nm, typ)
   hide_output ();
   if (strcmp (typ, "eps"))
     d_typ = "-depsc2";
   else
     d_typ = cstrcat ("-d", typ);
   endif
 
   if (!isempty(findstr(octave_config_info ("DEFS"),"HAVE_COLAMD")) &&
@@ -284,17 +285,17 @@ function sombreroimage (nm, typ)
     endif
 
     x = y = linspace (-8, 8, 41)';
     [xx, yy] = meshgrid (x, y);
     r = sqrt (xx .^ 2 + yy .^ 2) + eps;
     z = sin (r) ./ r;
     unwind_protect
       mesh (x, y, z);
-      title ("Sorry, graphics not available because octave was\\ncompiled without the sparse matrix implementation.");
+      title ("Sorry, graphics are unavailable because Octave was\ncompiled without a sparse matrix implementation.");
     unwind_protect_cleanup
       print (cstrcat (nm, ".", typ), d_typ);
       hide_output ();
     end_unwind_protect
   endif
 endfunction
 
 ## generate something for the texinfo @image command to process
