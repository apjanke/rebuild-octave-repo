# HG changeset patch
# User jwe
# Date 1162438431 0
#      Thu Nov 02 03:33:51 2006 +0000
# Node ID e0065af38cf4eec3da8d0c299b7214e467b94693
# Parent  e49ad821587e010e4362cce13a4d50fcb22bbedc
[project @ 2006-11-02 03:33:50 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,10 +1,14 @@
 2006-11-01  John W. Eaton  <jwe@octave.org>
 
+	* configure.in: Check for PCRE macros we use.  Warn if regex
+	library is not found.  Print hdf5, zlib, umfpack, colamd, ccolamd,
+	cholmod, and cxsparse warnings when we detect the problems.
+
 	* run-octave.in: Handle quoted args properly in exec call?
 
 2006-10-29  John W. Eaton  <jwe@octave.org>
 
 	* run-octave.in: Handle spaces in directory names.
 
 2006-10-28  Michael Goffioul  <michael.goffioul@swing.be>
 
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -24,17 +24,17 @@ dnl Copyright (C) 1996, 1997 John W. Eat
 ### Preserve CFLAGS and CXXFLAGS from the environment before doing
 ### anything else because we don't know which macros might call
 ### AC_PROG_CC or AC_PROG_CXX.
 
 EXTERN_CFLAGS="$CFLAGS"
 EXTERN_CXXFLAGS="$CXXFLAGS"
 
 AC_INIT
-AC_REVISION($Revision: 1.541 $)
+AC_REVISION($Revision: 1.542 $)
 AC_PREREQ(2.57)
 AC_CONFIG_SRCDIR([src/octave.cc])
 AC_CONFIG_HEADER(config.h)
 
 OCTAVE_HOST_TYPE
 
 AC_DEFINE(OCTAVE_SOURCE, 1, [Define if this is Octave.])
   
@@ -429,39 +429,54 @@ AC_SUBST(REGEX_LIBS)
 WITH_PCRE_CONFIG=no
 AC_CHECK_HEADER(pcre.h, WITH_PCRE=yes, WITH_PCRE=no)
 if test $WITH_PCRE = no ; then
   AC_CHECK_PROG(WITH_PCRE_CONFIG, pcre-config, yes, no)
   if test $WITH_PCRE_CONFIG = yes ; then
     WITH_PCRE=yes
   fi
 fi
+AC_CACHE_CHECK([whether pcre.h has the macros we need],
+	       [ac_cv_pcre_h_macros_present],
+               [AC_EGREP_CPP([PCRE_HAS_MACROS_WE_NEED], [
+#include <pcre.h>
+#if defined (PCRE_INFO_NAMECOUNT) \
+  && defined (PCRE_INFO_NAMEENTRYSIZE) \
+  && defined (PCRE_INFO_NAMETABLE)
+PCRE_HAS_MACROS_WE_NEED
+#endif], ac_cv_pcre_h_macros_present=yes, ac_cv_pcre_h_macros_present=no)])
+WITH_PCRE="$ac_cv_pcre_h_macros_present"
 if test $WITH_PCRE = yes ; then
   AC_CHECK_LIB(pcre, pcre_compile, WITH_PCRE=yes, WITH_PCRE=no)
   if test $WITH_PCRE = yes ; then
     AC_DEFINE(HAVE_PCRE, 1, [Define if PCRE is available.])
     if test $WITH_PCRE_CONFIG = yes ; then
       REGEX_LIBS=`pcre-config --cflags --libs`
     else
       REGEX_LIBS="-lpcre"
     fi
-  else
-    warn_pcre="PCRE library not found.  This will result in some loss of functionality for the regular expression matching functions."
-    AC_MSG_WARN($warn_pcre)
   fi
 fi
+if test $WITH_PCRE = no; then
+  warn_pcre="PCRE library not found.  This will result in some loss of functionality for the regular expression matching functions."
+  AC_MSG_WARN($warn_pcre)
+fi
 AC_CHECK_FUNCS(regexec, WITH_REGEX=yes , [
   AC_CHECK_LIB(regex, regexec, WITH_REGEX=yes, WITH_REGEX=no)])
 if test $WITH_REGEX = yes ; then
   AC_DEFINE(HAVE_REGEX, 1, [Define if regex is available.])
   if test $WITH_PCRE = no ; then
     AC_CHECK_FUNCS(regexec, REGEX_LIBS= , [
       AC_CHECK_LIB(regex, regexec, REGEX_LIBS="-lregex")])
   fi
 fi
+if test $WITH_REGEX = no; then
+  warn_regex="regular expression functions not found.  The regular expression matching functions will be disabled."
+  AC_MSG_WARN($warn_regex)
+fi
 
 ### Check for ZLIB library.
 
 WITH_ZLIB=true
 AC_ARG_WITH(zlib,
   [AS_HELP_STRING([--without-zlib], [don't use zlib])],
   with_zlib=$withval, with_zlib=yes)
 
@@ -510,19 +525,21 @@ if $WITH_ZLIB; then
 	AC_CHECK_LIB($hdf5_lib, H5Gget_num_objs, [
 	  AC_DEFINE(HAVE_H5GGET_NUM_OBJS, 1, [Define if HDF5 has H5Gget_num_objs.])])])])
   fi
 
   if $WITH_HDF5; then
     true
   else
     warn_hdf5="HDF5 library not found.  Octave will not be able to save or load HDF5 data files."
+    AC_MSG_WARN($warn_hdf5)
   fi
 else
   warn_zlib="ZLIB library not found.  Octave will not be able to save or load compressed data files or HDF5 files."
+  AC_MSG_WARN($warn_zlib)
 fi
 
 
 # Checks for FFTW header and library.
 
 # subdirectories of libcruft to build if they aren't found on the system:
 FFT_DIR="fftpack"
 AC_SUBST(FFT_DIR)
@@ -543,16 +560,19 @@ if test "$with_fftw" = yes; then
   if test "$have_fftw3_header" = yes; then
     AC_CHECK_LIB(fftw3, fftw_plan_dft_1d, [FFTW_LIBS="-lfftw3"; with_fftw3=yes])
   fi
 fi
 
 if test "$with_fftw" = yes && test "$with_fftw3" = yes; then
   FFT_DIR=''
   AC_DEFINE(HAVE_FFTW3, 1, [Define if the FFTW3 library is used.])
+else
+  warn_fftw="FFTW library not found.  Octave will use the (slower) FFTPACK library instead."
+  AC_MSG_RESULT($warn_fftw)
 fi
 
 # Checks for GLPK header and library.
 
 AC_ARG_WITH(glpk,
   [AS_HELP_STRING([--without-glpk], [don't use GLPK])],
   with_glpk=$withval, with_glpk=yes)
 
@@ -563,19 +583,23 @@ elif test "$with_glpk" != no; then
   glpk_lib="$with_glpk"
 fi
 
 GLPK_LIBS=
 if test -n "$glpk_lib"; then
   AC_CHECK_LIB($glpk_lib, glp_lpx_simplex, [
     AC_CHECK_HEADERS(glpk.h, [
       GLPK_LIBS="-l$glpk_lib"
-      AC_DEFINE(HAVE_GLPK, 1, [Define if GLPK is available.])])])
+      AC_DEFINE(HAVE_GLPK, 1, [Define if GLPK is available.])], [
+      glpk_missing=yes])])
 fi
 AC_SUBST(GLPK_LIBS)
+if test "$glpk_missing" = yes; then
+  warn_glpk="GLPK library not found.  The glpk function for solving linear programs will be disabled."
+fi
 
 # Checks for CURL header and library.
 
 AC_ARG_WITH(curl,
   [AS_HELP_STRING([--without-curl], [don't use CURL])],
   with_curl=$withval, with_curl=yes)
 
 curl_lib=
@@ -585,19 +609,24 @@ elif test "$with_curl" != no; then
   curl_lib="$with_curl"
 fi
 
 CURL_LIBS=
 if test -n "$curl_lib"; then
   AC_CHECK_LIB($curl_lib, curl_easy_escape, [
     AC_CHECK_HEADERS(curl/curl.h, [
       CURL_LIBS="-l$curl_lib"
-      AC_DEFINE(HAVE_CURL, 1, [Define if CURL is available.])])])
+      AC_DEFINE(HAVE_CURL, 1, [Define if CURL is available.])], [
+      curl_missing=yes])])
 fi
 AC_SUBST(CURL_LIBS)
+if test "$curl_missing" = yes; then
+  warn_curl="cURL library not found.  The urlread and urlwrite functions will be disabled."
+fi
+
 
 OCTAVE_IEEE754_DATA_FORMAT
 
 # ----------------------------------------------------------------------
 
 ### We need these before trying to find libf2c.
 
 OCTAVE_PROG_AR
@@ -832,16 +861,19 @@ if test "$with_umfpack" = yes && test "$
       LIBS="$LIBS $UMFPACK_LIBS $AMD_LIBS $BLAS_LIBS $FLIBS"
       OCTAVE_UMFPACK_SEPERATE_SPLIT
       LIBS=$OLD_LIBS
       TEXINFO_UMFPACK="@set HAVE_UMFPACK"
       warn_umfpack=
     fi
     break])
 fi
+if test -n "$warn_umfpack"; then
+  AC_MSG_WARN($warn_umfpack)
+fi
 
 AC_SUBST(TEXINFO_UMFPACK)
 
 COLAMD_LIBS=
 AC_SUBST(COLAMD_LIBS)
 
 AC_ARG_WITH(colamd,
   [AS_HELP_STRING([--without-colamd],
@@ -855,16 +887,19 @@ if test "$with_colamd" = yes; then
     AC_CHECK_LIB(colamd, colamd, [COLAMD_LIBS="-lcolamd"; with_colamd=yes])
     if test "$with_colamd" = yes; then
       AC_DEFINE(HAVE_COLAMD, 1, [Define if the COLAMD library is used.])
       TEXINFO_COLAMD="@set HAVE_COLAMD"
       warn_colamd=
     fi
     break])
 fi 
+if test -n "$warn_colamd"; then
+  AC_MSG_WARN($warn_colamd)
+fi
 
 AC_SUBST(TEXINFO_COLAMD)
 
 CCOLAMD_LIBS=
 AC_SUBST(CCOLAMD_LIBS)
 
 AC_ARG_WITH(ccolamd,
   [AS_HELP_STRING([--without-ccolamd],
@@ -877,16 +912,19 @@ if test "$with_ccolamd" = yes; then
   AC_CHECK_HEADERS([ufsparse/ccolamd.h ccolamd/ccolamd.h ccolamd.h], [
     AC_CHECK_LIB(ccolamd, ccolamd, [CCOLAMD_LIBS="-lccolamd"; with_ccolamd=yes])
     if test "$with_ccolamd" = yes; then
       AC_DEFINE(HAVE_CCOLAMD, 1, [Define if the CCOLAMD library is used.])
       warn_ccolamd=
     fi
     break])
 fi 
+if test -n "$warn_ccolamd"; then
+  AC_MSG_WARN($warn_ccolamd)
+fi
 
 CHOLMOD_LIBS=
 AC_SUBST(CHOLMOD_LIBS)
 
 AC_ARG_WITH(cholmod,
   [AS_HELP_STRING([--without-cholmod],
      [don't use CHOLMOD, disable some sparse functionality])],
   with_cholmod=$withval, with_cholmod=yes)
@@ -919,17 +957,20 @@ if test "$with_cholmod" = yes && test "$
     fi
 
     if test "$with_cholmod" = yes; then
       AC_DEFINE(HAVE_CHOLMOD, 1, [Define if the CHOLMOD library is used.])
       TEXINFO_CHOLMOD="@set HAVE_CHOLMOD"
       warn_cholmod=
     fi
     break])
-fi 
+fi
+if test -n "$warn_cholmod"; then
+  AC_MSG_WARN($warn_cholmod)
+fi
 
 AC_SUBST(TEXINFO_CHOLMOD)
 
 CXSPARSE_LIBS=
 AC_SUBST(CXSPARSE_LIBS)
 
 AC_ARG_WITH(cxsparse,
   [AS_HELP_STRING([--without-cxsparse],
@@ -942,16 +983,19 @@ if test "$with_cxsparse" = yes; then
   AC_CHECK_HEADERS([ufsparse/cs.h cxsparse/cs.h cs.h], [
     AC_CHECK_LIB(cxsparse, cs_di_sqr, [CXSPARSE_LIBS="-lcxsparse"; with_cxsparse=yes])
     if test "$with_cxsparse" = yes; then
       AC_DEFINE(HAVE_CXSPARSE, 1, [Define if the CXSparse library is used.])
       warn_cxsparse=
     fi
     break])
 fi
+if test -n "$warn_cxsparse"; then
+  AC_MSG_WARN($warn_cxsparse)
+fi
 
 ### Handle shared library options.
 
 ### Enable creation of static libraries.
 
 AC_ARG_ENABLE(static,
   [AS_HELP_STRING([--enable-static], [create static libraries])],
   [if test "$enableval" = no; then STATIC_LIBS=false;
@@ -2052,21 +2096,36 @@ if test -n "$warn_cholmod"; then
   warn_msg_printed=true
 fi
 
 if test -n "$warn_cxsparse"; then
   AC_MSG_WARN($warn_cxsparse)
   warn_msg_printed=true
 fi
 
+if test -n "$warn_fftw"; then
+  AC_MSG_WARN($warn_fftw)
+  warn_msg_printed=true
+fi
+
+if test -n "$warn_glpk"; then
+  AC_MSG_WARN($warn_glpk)
+  warn_msg_printed=true
+fi
+
 if test -n "$warn_hdf5"; then
   AC_MSG_WARN($warn_hdf5)
   warn_msg_printed=true
 fi
 
+if test -n "$warn_regex"; then
+  AC_MSG_WARN($warn_regex)
+  warn_msg_printed=true
+fi
+
 if test -n "$warn_pcre"; then
   AC_MSG_WARN($warn_pcre)
   warn_msg_printed=true
 fi
 
 if test -n "$warn_zlib"; then
   AC_MSG_WARN($warn_zlib)
   warn_msg_printed=true
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,14 @@
+2006-11-01  John W. Eaton  <jwe@octave.org>
+
+	* ov.h (octave_value::idx_type_value): New function.
+	* data.cc (fill_matrix, Flinspace, Freshape): Use idx_type_value
+	instead of int_value to extract size args.
+
 2006-10-31  John W. Eaton  <jwe@octave.org>
 
 	* ov-range.h (octave_range::empty_clone): Return octave_matrix
 	object instead of octave_range.
 
 2006-10-29  Juhani Saastamoinen  <juhani@cs.joensuu.fi>
 
 	* ls-mat5.cc (read_mat5_tag): Declare bytes as int32_t, not just int. 
diff --git a/src/data.cc b/src/data.cc
--- a/src/data.cc
+++ b/src/data.cc
@@ -1460,17 +1460,17 @@ fill_matrix (const octave_value_list& ar
       break;
 
     default:
       {
 	dims.resize (nargin);
 
 	for (int i = 0; i < nargin; i++)
 	  {
-	    dims(i) = args(i).is_empty () ? 0 : args(i).int_value ();
+	    dims(i) = args(i).is_empty () ? 0 : args(i).idx_type_value ();
 
 	    if (error_state)
 	      {
 		error ("%s: expecting scalar integer arguments", fcn);
 		break;
 	      }
 	  }
       }
@@ -1577,17 +1577,17 @@ fill_matrix (const octave_value_list& ar
       break;
 
     default:
       {
 	dims.resize (nargin);
 
 	for (int i = 0; i < nargin; i++)
 	  {
-	    dims(i) = args(i).is_empty () ? 0 : args(i).int_value ();
+	    dims(i) = args(i).is_empty () ? 0 : args(i).idx_type_value ();
 
 	    if (error_state)
 	      {
 		error ("%s: expecting scalar integer arguments", fcn);
 		break;
 	      }
 	  }
       }
@@ -1655,17 +1655,17 @@ fill_matrix (const octave_value_list& ar
       break;
 
     default:
       {
 	dims.resize (nargin);
 
 	for (int i = 0; i < nargin; i++)
 	  {
-	    dims(i) = args(i).is_empty () ? 0 : args(i).int_value ();
+	    dims(i) = args(i).is_empty () ? 0 : args(i).idx_type_value ();
 
 	    if (error_state)
 	      {
 		error ("%s: expecting scalar integer arguments", fcn);
 		break;
 	      }
 	  }
       }
@@ -1719,17 +1719,17 @@ fill_matrix (const octave_value_list& ar
       break;
 
     default:
       {
 	dims.resize (nargin);
 
 	for (int i = 0; i < nargin; i++)
 	  {
-	    dims(i) = args(i).is_empty () ? 0 : args(i).int_value ();
+	    dims(i) = args(i).is_empty () ? 0 : args(i).idx_type_value ();
 
 	    if (error_state)
 	      {
 		error ("%s: expecting scalar integer arguments", fcn);
 		break;
 	      }
 	  }
       }
@@ -2261,26 +2261,26 @@ value of 100 is used.\n\
 \n\
 The @code{linspace} function always returns a row vector.\n\
 @end deftypefn")
 {
   octave_value retval;
 
   int nargin = args.length ();
 
-  int npoints = 100;
+  octave_idx_type npoints = 100;
 
   if (nargin != 2 && nargin != 3)
     {
       print_usage ();
       return retval;
     }
 
   if (nargin == 3)
-    npoints = args(2).int_value ();
+    npoints = args(2).idx_type_value ();
 
   if (! error_state)
     {
       octave_value arg_1 = args(0);
       octave_value arg_2 = args(1);
 
       if (arg_1.is_complex_type () || arg_2.is_complex_type ())
 	{
@@ -2420,17 +2420,17 @@ by an empty argument.\n\
 	      }
 	    else
 	      {
 		empty_dim = i;
 		new_size(i-1) = 1;
 	      }
 	  else
 	    {
-	      new_size(i-1) = args(i).int_value ();
+	      new_size(i-1) = args(i).idx_type_value ();
 
 	      if (error_state)
 		break;
 	    }
 	}
 
       if (! error_state && (empty_dim > 0))
 	{
diff --git a/src/ov.h b/src/ov.h
--- a/src/ov.h
+++ b/src/ov.h
@@ -567,16 +567,28 @@ public:
   long int
   long_value (bool req_int = false, bool frc_str_conv = false) const
     { return rep->long_value (req_int, frc_str_conv); }
 
   unsigned long int
   ulong_value (bool req_int = false, bool frc_str_conv = false) const
     { return rep->ulong_value (req_int, frc_str_conv); }
 
+  octave_idx_type
+  idx_type_value (bool req_int = false, bool frc_str_conv = false) const
+    {
+#if SIZEOF_OCTAVE_IDX_TYPE == SIZEOF_LONG
+      return long_value (req_int, frc_str_conv);
+#elif SIZEOF_OCTAVE_IDX_TYPE == SIZEOF_INT
+      return int_value (req_int, frc_str_conv);
+#else
+#error "no octave_value extractor for octave_idx_type"
+#endif
+    }
+
   double double_value (bool frc_str_conv = false) const
     { return rep->double_value (frc_str_conv); }
 
   double scalar_value (bool frc_str_conv = false) const
     { return rep->scalar_value (frc_str_conv); }
 
   Cell cell_value (void) const;
 
