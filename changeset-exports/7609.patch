# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1205958042 14400
#      Wed Mar 19 16:20:42 2008 -0400
# Node ID 7e6002d15d4d811b6d7e77b3ce767914db2b3354
# Parent  49810341db91514ef81921f6356a5524754a14fd
octave_env::do_base_pathname: handle rooted relativel names

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+2008-03-19  John W. Eaton  <jwe@octave.org>
+
+	* oct-env.cc (octave_env::do_base_pathname): Also handle rooted
+	relative filenames.
+
 2008-03-19  David Bateman  <dbateman@free.fr>
 
 	* Array.cc (assignN): If orig_empty allow assignment like
 	a(1:10,1)=1:10
 
 	* Sparse.h (template <class U, class F> Sparse<U> map (F fcn)
 	const): New template function.
 	* MSparse.h (template <class U, class F> MSparse<U> map (F fcn)
diff --git a/liboctave/oct-env.cc b/liboctave/oct-env.cc
--- a/liboctave/oct-env.cc
+++ b/liboctave/oct-env.cc
@@ -294,17 +294,17 @@ octave_env::do_rooted_relative_pathname 
 
 // Return the `basename' of the pathname in STRING (the stuff after
 // the last directory separator).  If STRING is not a full pathname,
 // simply return it.
 
 std::string
 octave_env::do_base_pathname (const std::string& s) const
 {
-  if (! do_absolute_pathname (s))
+  if (! (do_absolute_pathname (s) || do_rooted_relative_pathname (s)))
     return s;
 
   size_t pos = s.find_last_of (file_ops::dir_sep_chars);
 
   if (pos == NPOS)
     return s;
   else
     return s.substr (pos+1);
