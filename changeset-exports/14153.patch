# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1325860876 18000
#      Fri Jan 06 09:41:16 2012 -0500
# Branch stable
# Node ID 06aa17228706cf39cf84d3cfbc15588e87628c91
# Parent  933bf1b4ab29afd7a860583e25374500771200f2
use gnulib::fopen

* oct-md5.cc (oct_md5_file): Use gnulib::fopen.
* kpse.cc: Don't play #define tricks with fopen.
(fopen): Delete.
(xfopen): Use gnulib::fopen.
* oct-parse.yy (get_help_from_file): Use gnulib::fopen.

diff --git a/liboctave/kpse.cc b/liboctave/kpse.cc
--- a/liboctave/kpse.cc
+++ b/liboctave/kpse.cc
@@ -220,20 +220,16 @@ extern "C" {
   DEBUGF_START (); gnulib::fprintf (stderr, str, e1); DEBUGF_END ()
 #define DEBUGF2(str, e1, e2)                                            \
   DEBUGF_START (); gnulib::fprintf (stderr, str, e1, e2); DEBUGF_END ()
 #define DEBUGF3(str, e1, e2, e3)                                        \
   DEBUGF_START (); gnulib::fprintf (stderr, str, e1, e2, e3); DEBUGF_END ()
 #define DEBUGF4(str, e1, e2, e3, e4)                                    \
   DEBUGF_START (); gnulib::fprintf (stderr, str, e1, e2, e3, e4); DEBUGF_END ()
 
-#undef fopen
-#define fopen kpse_fopen_trace
-static FILE *fopen (const char *filename, const char *mode);
-
 #endif /* not NO_DEBUG */
 
 #ifdef KPSE_DEBUG
 static unsigned int kpathsea_debug = 0;
 #endif
 
 #if defined (WIN32) && !defined (__MINGW32__)
 
@@ -357,21 +353,25 @@ kpse_is_env_sep (char c)
 
 static FILE *
 xfopen (const std::string& filename, const char *mode)
 {
   FILE *f;
 
   assert (! filename.empty () && mode);
 
-  f = fopen (filename.c_str (), mode);
+  f = gnulib::fopen (filename.c_str (), mode);
 
   if (! f)
     FATAL_PERROR (filename.c_str ());
 
+  if (KPSE_DEBUG_P (KPSE_DEBUG_FOPEN))
+    DEBUGF3 ("fopen (%s, %s) => 0x%lx\n", filename.c_str (), mode,
+             reinterpret_cast<unsigned long> (f));
+
   return f;
 }
 
 /* A single (key,value) pair.  */
 
 struct hash_element_type
 {
   std::string key;
@@ -2441,38 +2441,16 @@ xclosedir (DIR *d)
 {
   int ret = gnulib::closedir (d);
 
   if (ret != 0)
     FATAL ("closedir failed");
 }
 #endif
 
-/* Help the user discover what's going on.  */
-
-#ifdef KPSE_DEBUG
-
-/* If the real definitions of fopen or fclose are macros, we lose -- the
-   #undef won't restore them. */
-
-static FILE *
-fopen (const char *filename, const char *mode)
-{
-#undef fopen
-  FILE *ret = fopen (filename, mode);
-
-  if (KPSE_DEBUG_P (KPSE_DEBUG_FOPEN))
-    DEBUGF3 ("fopen (%s, %s) => 0x%lx\n", filename, mode,
-             reinterpret_cast<unsigned long> (ret));
-
-  return ret;
-}
-
-#endif
-
 /* Implementation of a linked list of strings.  */
 
 /* Add the new string STR to the end of the list L.  */
 
 static void
 str_llist_add (str_llist_type *l, const std::string& str)
 {
   str_llist_elt_type *e;
diff --git a/liboctave/oct-md5.cc b/liboctave/oct-md5.cc
--- a/liboctave/oct-md5.cc
+++ b/liboctave/oct-md5.cc
@@ -57,17 +57,17 @@ oct_md5 (const std::string str)
   return oct_md5_result_to_str (buf);
 }
 
 std::string
 oct_md5_file (const std::string file)
 {
   std::string retval;
 
-  FILE *ifile = fopen (file.c_str (), "rb");
+  FILE *ifile = gnulib::fopen (file.c_str (), "rb");
 
   if (ifile)
     {
       unsigned char buf[16];
 
       int errflag = md5_stream (ifile, buf);
 
       gnulib::fclose (ifile);
diff --git a/src/oct-parse.yy b/src/oct-parse.yy
--- a/src/oct-parse.yy
+++ b/src/oct-parse.yy
@@ -3607,17 +3607,17 @@ get_help_from_file (const std::string& n
   std::string retval;
 
   file = fcn_file_in_path (nm);
 
   if (! file.empty ())
     {
       symbol_found = true;
 
-      FILE *fptr = fopen (file.c_str (), "r");
+      FILE *fptr = gnulib::fopen (file.c_str (), "r");
 
       if (fptr)
         {
           unwind_protect frame;
           frame.add_fcn (safe_fclose, fptr);
 
           bool eof;
           retval = gobble_leading_white_space (fptr, eof);
