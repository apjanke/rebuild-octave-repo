# HG changeset patch
# User jwe
# Date 1194386787 0
#      Tue Nov 06 22:06:27 2007 +0000
# Node ID 60a1165732f969d6c1934936f7bd08c7c8761501
# Parent  22397f0fb0b21be4d33466d5522c5005c7febc02
[project @ 2007-11-06 22:05:18 by jwe]

diff --git a/scripts/image/colormap.m b/scripts/image/colormap.m
--- a/scripts/image/colormap.m
+++ b/scripts/image/colormap.m
@@ -65,13 +65,13 @@ function cmap = colormap (map)
       endif
       ## Set the new color map
       set (gcf (), "colormap", map);
     endif
 
   endif
 
   ## Return current color map.
-  if (nargout > 0)
+  if (nargout > 0 || (nargout == 0 && nargin == 0))
     cmap = get (gcf (), "colormap");
   endif
 
 endfunction
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,17 @@
+2007-11-06  Kai Habel  <kai.habel@gmx.de>
+
+	* graphics.h.in (class surface::properties): New properties, 
+	cdata, facecolor, facealpha, edgecolor, linestyle,
+	linewidth, marker, markeredgecolor, markerfacecolor, markersize.
+	* graphics.cc (surface::properties::properties,
+	surface::properties::set, surface::properties::get,
+	surface::properties::factory_defaults): Handle new properities.
+
 2007-11-06  David Bateman  <dbateman@free.fr>
 
 	* OPERATORS/op-bm-bm.cc (matrix_to_bool_matrix,
 	scalar_to_bool_matrix): New type conversion functions.
 	(install_bm_bm_ops): Install new type conversions functions.
 
 2007-11-06  Michael Goffioul <michael.goffioul@gmail.com>
 
diff --git a/src/graphics.cc b/src/graphics.cc
--- a/src/graphics.cc
+++ b/src/graphics.cc
@@ -2247,17 +2247,17 @@ patch::properties::get (const property_n
     retval = zdata;
   else if (name.compare ("faces"))
     retval = faces;
   else if (name.compare ("vertices"))
     retval = vertices;
   else if (name.compare ("facecolor"))
     retval = facecolor;
   else if (name.compare ("facealpha"))
-    retval = facecolor;
+    retval = facealpha;
   else if (name.compare ("egdecolor"))
     retval = edgecolor;
   else if (name.compare ("linestyle"))
     retval = linestyle;
   else if (name.compare ("linewidth"))
     retval = linewidth;
   else if (name.compare ("marker"))
     retval = marker;
@@ -2279,19 +2279,19 @@ patch::properties::factory_defaults (voi
   property_list::pval_map_type m;
 
   m["cdata"] = Matrix ();
   m["xdata"] = Matrix ();
   m["ydata"] = Matrix ();
   m["zdata"] = Matrix ();
   m["faces"] = Matrix ();
   m["vertices"] = Matrix ();
-  m["facecolor"] = color_property();
+  m["facecolor"] = color_property ();
   m["facealpha"] = 1.0;
-  m["edgecolor"] = color_property("black");
+  m["edgecolor"] = color_property ("black");
   m["linestyle"] = "-";
   m["linewidth"] = 0.5;
   m["marker"] = "none";
   m["markeredgecolor"] = "auto";
   m["markerfacecolor"] = "none";
   m["markersize"] = 1;
 
 
@@ -2303,16 +2303,26 @@ std::string patch::properties::go_name (
 // ---------------------------------------------------------------------
 
 surface::properties::properties (const graphics_handle& mh,
 				 const graphics_handle& p)
   : base_properties (go_name, mh, p),
     xdata (Matrix ()),
     ydata (Matrix ()),
     zdata (Matrix ()),
+    cdata (Matrix ()),
+    facecolor (radio_values ("{flat}|none|interp")),
+    facealpha (1.0),
+    edgecolor (color_values(0, 0, 0), radio_values ("flat|none|interp")),
+    linestyle ("-"),
+    linewidth (0.5),
+    marker ("none"),
+    markeredgecolor ("auto"),
+    markerfacecolor ("none"),
+    markersize (1),
     keylabel ("")
 { }
 
 void
 surface::properties::set (const property_name& name,
 			  const octave_value& val)
 {
   bool modified = true;
@@ -2327,16 +2337,36 @@ surface::properties::set (const property
       modified = false;
     }
   else if (name.compare ("xdata"))
     set_xdata (val);
   else if (name.compare ("ydata"))
     set_ydata (val);
   else if (name.compare ("zdata"))
     set_zdata (val);
+  else if (name.compare ("cdata"))
+    set_cdata (val);
+  else if (name.compare ("facecolor"))
+    set_facecolor (val);
+  else if (name.compare ("facealpha"))
+    set_facealpha (val);
+  else if (name.compare ("edgecolor"))
+    set_edgecolor (val);
+  else if (name.compare ("linestyle"))
+    set_linestyle (val);
+  else if (name.compare ("linewidth"))
+    set_linewidth (val);
+  else if (name.compare ("marker"))
+    set_marker (val);
+  else if (name.compare ("markeredgecolor"))
+    set_markeredgecolor (val);
+  else if (name.compare ("markerfacecolor"))
+    set_markerfacecolor (val);
+  else if (name.compare ("markersize"))
+    set_markersize (val);
   else if (name.compare ("keylabel"))
     set_keylabel (val);
   else
     {
       modified = false;
       warning ("set: invalid property `%s'", name.c_str ());
     }
 
@@ -2351,16 +2381,26 @@ surface::properties::get (void) const
 
   m.assign ("type", type);
   m.assign ("parent", parent.as_octave_value ());
   m.assign ("children", children);
   m.assign ("__modified__", __modified__);
   m.assign ("xdata", xdata);
   m.assign ("ydata", ydata);
   m.assign ("zdata", zdata);
+  m.assign ("cdata", cdata);
+  m.assign ("facecolor", facecolor);
+  m.assign ("facealpha", facealpha);
+  m.assign ("edgecolor", edgecolor);
+  m.assign ("linestyle", linestyle);
+  m.assign ("linewidth", linewidth);
+  m.assign ("marker", marker);
+  m.assign ("markeredgecolor", markeredgecolor);
+  m.assign ("markerface", markerfacecolor);
+  m.assign ("markersize", markersize);
   m.assign ("keylabel", keylabel);
 
   return m;
 }
 
 octave_value
 surface::properties::get (const property_name& name) const
 {
@@ -2375,32 +2415,62 @@ surface::properties::get (const property
   else if (name.compare ("__modified__"))
     retval = __modified__;
   else if (name.compare ("xdata"))
     retval = xdata;
   else if (name.compare ("ydata"))
     retval = ydata;
   else if (name.compare ("zdata"))
     retval = zdata;
+  else if (name.compare ("cdata"))
+    retval = cdata;
+  else if (name.compare ("facecolor"))
+    retval = facecolor;
+  else if (name.compare ("facealpha"))
+    retval = facealpha;
+  else if (name.compare ("edgecolor"))
+    retval = edgecolor;
+  else if (name.compare ("linestyle"))
+    retval = linestyle;
+  else if (name.compare ("linewidth"))
+    retval = linewidth;
+  else if (name.compare ("marker"))
+    retval = marker;
+  else if (name.compare ("markeredgecolor"))
+    retval = markeredgecolor;
+  else if (name.compare ("markerfacecolor"))
+    retval = markerfacecolor;
+  else if (name.compare ("markersize"))
+    retval = markersize;
   else if (name.compare ("keylabel"))
     retval = keylabel;
   else
     warning ("get: invalid property `%s'", name.c_str ());
 
   return retval;
 }
 
 property_list::pval_map_type
 surface::properties::factory_defaults (void)
 {
   property_list::pval_map_type m;
 
   m["xdata"] = Matrix ();
   m["ydata"] = Matrix ();
   m["zdata"] = Matrix ();
+  m["cdata"] = Matrix ();
+  m["facecolor"] = color_property ();
+  m["facealpha"] = 1.0;
+  m["edgecolor"] = color_property ("black");
+  m["linestyle"] = "-";
+  m["linewidth"] = 0.5;
+  m["marker"] = "none";
+  m["markeredgecolor"] = "auto";
+  m["markerfacecolor"] = "none";
+  m["markersize"] = 1;
   m["keylabel"] = "";
 
   return m;
 }
 
 std::string surface::properties::go_name ("surface");
 
 // ---------------------------------------------------------------------
diff --git a/src/graphics.h.in b/src/graphics.h.in
--- a/src/graphics.h.in
+++ b/src/graphics.h.in
@@ -1693,16 +1693,26 @@ public:
 
     // See the genprops.awk script for an explanation of the
     // properties declarations.
 
     BEGIN_PROPERTIES
       octave_value xdata
       octave_value ydata
       octave_value zdata
+      octave_value cdata
+      color_property facecolor a
+      octave_value facealpha
+      color_property edgecolor a
+      octave_value linestyle
+      octave_value linewidth
+      octave_value marker
+      octave_value markeredgecolor
+      octave_value markerfacecolor
+      octave_value markersize
       octave_value keylabel
     END_PROPERTIES
 
     static std::string go_name;
   };
 
 private:
   properties xproperties;
