# HG changeset patch
# User Carlo de Falco <carlo.defalco@polimi.it>
# Date 1443757843 -7200
#      Fri Oct 02 05:50:43 2015 +0200
# Node ID 6256f6e366ac3b366462604a0fdd31507b68b039
# Parent  b70cc4bd8109b0f7784874a5f13e32ec1f3786da
Fix copyright text in private ode functions

* script/ode/private/*.m: Fox the copyright text.

diff --git a/scripts/ode/private/AbsRel_Norm.m b/scripts/ode/private/AbsRel_Norm.m
--- a/scripts/ode/private/AbsRel_Norm.m
+++ b/scripts/ode/private/AbsRel_Norm.m
@@ -1,8 +1,28 @@
+## Copyright (C) 2013, Roberto Porcu' <roberto.porcu@polimi.it>
+## Copyright (C) 2014, Jacopo Corno <jacopo.corno@gmail.com>
+##
+## This file is part of Octave.
+##
+## Octave is free software; you can redistribute it and/or modify it
+## under the terms of the GNU General Public License as published by
+## the Free Software Foundation; either version 3 of the License, or (at
+## your option) any later version.
+##
+## Octave is distributed in the hope that it will be useful, but
+## WITHOUT ANY WARRANTY; without even the implied warranty of
+## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+## General Public License for more details.
+##
+## You should have received a copy of the GNU General Public License
+## along with Octave; see the file COPYING.  If not, see
+## <http://www.gnu.org/licenses/>.
+
+
 function res = AbsRel_Norm (x, x_old, AbsTol, RelTol, normcontrol, y)
 
   n = length (x);
 
   if (nargin == 5)
     y = zeros (size (x));
   elseif (nargin != 6)
     error ("OdePkg:InvalidArgument",
diff --git a/scripts/ode/private/hermite_quartic_interpolation.m b/scripts/ode/private/hermite_quartic_interpolation.m
--- a/scripts/ode/private/hermite_quartic_interpolation.m
+++ b/scripts/ode/private/hermite_quartic_interpolation.m
@@ -1,23 +1,25 @@
-## Copyright (C) 2014, Jacopo Corno <jacopo.corno@gmail.com>
-## OdePkg - A package for solving ordinary differential equations and more
+## Copyright (C) 2015 Jacopo Corno <jacopo.corno@gmail.com>
+##
+## This file is part of Octave.
 ##
-## This program is free software; you can redistribute it and/or modify
-## it under the terms of the GNU General Public License as published by
-## the Free Software Foundation; either version 2 of the License, or
-## (at your option) any later version.
+## Octave is free software; you can redistribute it and/or modify it
+## under the terms of the GNU General Public License as published by
+## the Free Software Foundation; either version 3 of the License, or (at
+## your option) any later version.
 ##
-## This program is distributed in the hope that it will be useful,
-## but WITHOUT ANY WARRANTY; without even the implied warranty of
-## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-## GNU General Public License for more details.
+## Octave is distributed in the hope that it will be useful, but
+## WITHOUT ANY WARRANTY; without even the implied warranty of
+## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
-## along with this program; If not, see <http://www.gnu.org/licenses/>.
+## along with Octave; see the file COPYING.  If not, see
+## <http://www.gnu.org/licenses/>.
 
 
 ## -*- texinfo -*-
 ## @deftypefn {Command} {[@var{x_out}] =}
 ## hermite_quartic_interpolation (@var{t}, @var{x}, @var{der}, @var{t_out})
 ##
 ## This function file can be called by a ODE solver function in order to
 ## interpolate the solution at the time @var{t_out} using 4th order
diff --git a/scripts/ode/private/integrate_adaptive.m b/scripts/ode/private/integrate_adaptive.m
--- a/scripts/ode/private/integrate_adaptive.m
+++ b/scripts/ode/private/integrate_adaptive.m
@@ -1,23 +1,25 @@
 ## Copyright (C) 2013, Roberto Porcu' <roberto.porcu@polimi.it>
-## OdePkg - A package for solving ordinary differential equations and more
+##
+## This file is part of Octave.
 ##
-## This program is free software; you can redistribute it and/or modify
-## it under the terms of the GNU General Public License as published by
-## the Free Software Foundation; either version 2 of the License, or
-## (at your option) any later version.
+## Octave is free software; you can redistribute it and/or modify it
+## under the terms of the GNU General Public License as published by
+## the Free Software Foundation; either version 3 of the License, or (at
+## your option) any later version.
 ##
-## This program is distributed in the hope that it will be useful,
-## but WITHOUT ANY WARRANTY; without even the implied warranty of
-## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-## GNU General Public License for more details.
+## Octave is distributed in the hope that it will be useful, but
+## WITHOUT ANY WARRANTY; without even the implied warranty of
+## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
-## along with this program; If not, see <http://www.gnu.org/licenses/>.
+## along with Octave; see the file COPYING.  If not, see
+## <http://www.gnu.org/licenses/>.
 
 
 ## -*- texinfo -*-
 ## @deftypefn {Command} {[@var{t}, @var{y}] =}
 ## integrate_adaptive (@var{@@stepper}, @var{order}, @var{@@fun}, @var{tspan},
 ## @var{x0}, @var{options})
 ##
 ## This function file can be called by a ODE solver function in order to
diff --git a/scripts/ode/private/integrate_const.m b/scripts/ode/private/integrate_const.m
--- a/scripts/ode/private/integrate_const.m
+++ b/scripts/ode/private/integrate_const.m
@@ -1,24 +1,25 @@
 ## Copyright (C) 2013, Roberto Porcu' <roberto.porcu@polimi.it>
-## OdePkg - A package for solving ordinary differential equations and more
+##
+## This file is part of Octave.
 ##
-## This program is free software; you can redistribute it and/or modify
-## it under the terms of the GNU General Public License as published by
-## the Free Software Foundation; either version 2 of the License, or
-## (at your option) any later version.
+## Octave is free software; you can redistribute it and/or modify it
+## under the terms of the GNU General Public License as published by
+## the Free Software Foundation; either version 3 of the License, or (at
+## your option) any later version.
 ##
-## This program is distributed in the hope that it will be useful,
-## but WITHOUT ANY WARRANTY; without even the implied warranty of
-## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-## GNU General Public License for more details.
+## Octave is distributed in the hope that it will be useful, but
+## WITHOUT ANY WARRANTY; without even the implied warranty of
+## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
-## along with this program; If not, see <http://www.gnu.org/licenses/>.
-
+## along with Octave; see the file COPYING.  If not, see
+## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Command} {[@var{t}, @var{y}] =} integrate_const (@var{@@stepper},
 ## @var{@@fun}, @var{tspan}, @var{x0}, @var{dt}, @var{options})
 ##
 ## This function file can be called by an ODE solver function in order to
 ## integrate the set of ODEs on the interval @var{[t0,t1]} with a
 ## constant timestep @var{dt}.
diff --git a/scripts/ode/private/integrate_n_steps.m b/scripts/ode/private/integrate_n_steps.m
--- a/scripts/ode/private/integrate_n_steps.m
+++ b/scripts/ode/private/integrate_n_steps.m
@@ -1,24 +1,25 @@
 ## Copyright (C) 2013, Roberto Porcu' <roberto.porcu@polimi.it>
-## OdePkg - A package for solving ordinary differential equations and more
+##
+## This file is part of Octave.
 ##
-## This program is free software; you can redistribute it and/or modify
-## it under the terms of the GNU General Public License as published by
-## the Free Software Foundation; either version 2 of the License, or
-## (at your option) any later version.
+## Octave is free software; you can redistribute it and/or modify it
+## under the terms of the GNU General Public License as published by
+## the Free Software Foundation; either version 3 of the License, or (at
+## your option) any later version.
 ##
-## This program is distributed in the hope that it will be useful,
-## but WITHOUT ANY WARRANTY; without even the implied warranty of
-## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-## GNU General Public License for more details.
+## Octave is distributed in the hope that it will be useful, but
+## WITHOUT ANY WARRANTY; without even the implied warranty of
+## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
-## along with this program; If not, see <http://www.gnu.org/licenses/>.
-
+## along with Octave; see the file COPYING.  If not, see
+## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Command} {[@var{t}, @var{y}] =} integrate_n_steps
 ## (@var{@@stepper}, @var{@@fun}, @var{t0}, @var{x0}, @var{dt}, @var{n},
 ## @var{options})
 ##
 ## This function file can be called by an ODE solver function in order to
 ## integrate the set of ODEs on the interval @var{[t0,t0 + n*dt]} with a
diff --git a/scripts/ode/private/kahan.m b/scripts/ode/private/kahan.m
--- a/scripts/ode/private/kahan.m
+++ b/scripts/ode/private/kahan.m
@@ -1,24 +1,25 @@
 ## Copyright (C) 2013, Roberto Porcu' <roberto.porcu@polimi.it>
-## OdePkg - A package for solving ordinary differential equations and more
+##
+## This file is part of Octave.
 ##
-## This program is free software; you can redistribute it and/or modify
-## it under the terms of the GNU General Public License as published by
-## the Free Software Foundation; either version 2 of the License, or
-## (at your option) any later version.
+## Octave is free software; you can redistribute it and/or modify it
+## under the terms of the GNU General Public License as published by
+## the Free Software Foundation; either version 3 of the License, or (at
+## your option) any later version.
 ##
-## This program is distributed in the hope that it will be useful,
-## but WITHOUT ANY WARRANTY; without even the implied warranty of
-## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-## GNU General Public License for more details.
+## Octave is distributed in the hope that it will be useful, but
+## WITHOUT ANY WARRANTY; without even the implied warranty of
+## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
-## along with this program; If not, see <http://www.gnu.org/licenses/>.
-
+## along with Octave; see the file COPYING.  If not, see
+## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Command} {[@var{sum}] =} kahan (@var{sum},
 ## @var{comp}, @var{temp})
 ## @deftypefnx {Command} {[@var{sum}, @var{comp}] =} kahan (@var{sum},
 ## @var{comp}, @var{temp})
 ##
 ## This function is the implementation of the Kahan summation algorithm,
diff --git a/scripts/ode/private/ode_struct_value_check.m b/scripts/ode/private/ode_struct_value_check.m
--- a/scripts/ode/private/ode_struct_value_check.m
+++ b/scripts/ode/private/ode_struct_value_check.m
@@ -1,11 +1,10 @@
 ## Copyright (C) 2006-2012, Thomas Treichl <treichl@users.sourceforge.net>
 ## Copyright (C) 2013, Roberto Porcu' <roberto.porcu@polimi.it>
-## OdePkg - A package for solving ordinary differential equations and more
 ##
 ## This file is part of Octave.
 ##
 ## Octave is free software; you can redistribute it and/or modify it
 ## under the terms of the GNU General Public License as published by
 ## the Free Software Foundation; either version 3 of the License, or (at
 ## your option) any later version.
 ##
@@ -13,17 +12,16 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
-
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {[@var{}] =}
 ## ode_struct_value_check (@var{arg}, [@var{"solver"}])
 ##
 ## If this function is called with one input argument of type structure array
 ## then check the field names and the field values of the OdePkg structure
 ## @var{arg}. Optionally if this function is called with a second input
 ## argument @var{"solver"} of type string that specifies the name of a valid
diff --git a/scripts/ode/private/odepkg_event_handle.m b/scripts/ode/private/odepkg_event_handle.m
--- a/scripts/ode/private/odepkg_event_handle.m
+++ b/scripts/ode/private/odepkg_event_handle.m
@@ -1,136 +1,134 @@
-%# Copyright (C) 2006-2012, Thomas Treichl <treichl@users.sourceforge.net>
-%# OdePkg - A package for solving ordinary differential equations and more
-%#
-%# This program is free software; you can redistribute it and/or modify
-%# it under the terms of the GNU General Public License as published by
-%# the Free Software Foundation; either version 2 of the License, or
-%# (at your option) any later version.
-%#
-%# This program is distributed in the hope that it will be useful,
-%# but WITHOUT ANY WARRANTY; without even the implied warranty of
-%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-%# GNU General Public License for more details.
-%#
-%# You should have received a copy of the GNU General Public License
-%# along with this program; If not, see <http://www.gnu.org/licenses/>.
+## Copyright (C) 2006-2012, Thomas Treichl <treichl@users.sourceforge.net>
+##
+## This file is part of Octave.
+##
+## Octave is free software; you can redistribute it and/or modify it
+## under the terms of the GNU General Public License as published by
+## the Free Software Foundation; either version 3 of the License, or (at
+## your option) any later version.
+##
+## Octave is distributed in the hope that it will be useful, but
+## WITHOUT ANY WARRANTY; without even the implied warranty of
+## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+## General Public License for more details.
+##
+## You should have received a copy of the GNU General Public License
+## along with Octave; see the file COPYING.  If not, see
+## <http://www.gnu.org/licenses/>.
 
-%# -*- texinfo -*-
-%# @deftypefn {Function File} {[@var{sol}] =} odepkg_event_handle (@var{@@fun}, @var{time}, @var{y}, @var{flag}, [@var{par1}, @var{par2}, @dots{}])
-%#
-%# Return the solution of the event function that is specified as the first input argument @var{@@fun} in form of a function handle. The second input argument @var{time} is of type double scalar and specifies the time of the event evaluation, the third input argument @var{y} either is of type double column vector (for ODEs and DAEs) and specifies the solutions or is of type cell array (for IDEs and DDEs) and specifies the derivatives or the history values, the third input argument @var{flag} is of type string and can be of the form 
-%# @table @option
-%# @item  @code{"init"}
-%# then initialize internal persistent variables of the function @command{odepkg_event_handle} and return an empty cell array of size 4,
-%# @item  @code{"calc"}
-%# then do the evaluation of the event function and return the solution @var{sol} as type cell array of size 4,
-%# @item  @code{"done"}
-%# then cleanup internal variables of the function @command{odepkg_event_handle} and return an empty cell array of size 4.
-%# @end table
-%# Optionally if further input arguments @var{par1}, @var{par2}, @dots{} of any type are given then pass these parameters through @command{odepkg_event_handle} to the event function.
-%#
-%# This function is an OdePkg internal helper function therefore it should never be necessary that this function is called directly by a user. There is only little error detection implemented in this function file to achieve the highest performance.
-%# @end deftypefn
-%#
-%# @seealso{odepkg}
+## -*- texinfo -*-
+## @deftypefn {Function File} {[@var{sol}] =} odepkg_event_handle (@var{@@fun}, @var{time}, @var{y}, @var{flag}, [@var{par1}, @var{par2}, @dots{}])
+##
+## Return the solution of the event function that is specified as the first input argument @var{@@fun} in form of a function handle. The second input argument @var{time} is of type double scalar and specifies the time of the event evaluation, the third input argument @var{y} either is of type double column vector (for ODEs and DAEs) and specifies the solutions or is of type cell array (for IDEs and DDEs) and specifies the derivatives or the history values, the third input argument @var{flag} is of type string and can be of the form 
+## @table @option
+## @item  @code{"init"}
+## then initialize internal persistent variables of the function @command{odepkg_event_handle} and return an empty cell array of size 4,
+## @item  @code{"calc"}
+## then do the evaluation of the event function and return the solution @var{sol} as type cell array of size 4,
+## @item  @code{"done"}
+## then cleanup internal variables of the function @command{odepkg_event_handle} and return an empty cell array of size 4.
+## @end table
+## Optionally if further input arguments @var{par1}, @var{par2}, @dots{} of any type are given then pass these parameters through @command{odepkg_event_handle} to the event function.
+##
+## This function is an OdePkg internal helper function therefore it should never be necessary that this function is called directly by a user. There is only little error detection implemented in this function file to achieve the highest performance.
+## @end deftypefn
+##
+## @seealso{odepkg}
 
 function [vretval] = odepkg_event_handle (vevefun, vt, vy, vflag, varargin)
 
-  %# No error handling has been implemented in this function to achieve
-  %# the highest performance available.
+  ## No error handling has been implemented in this function to achieve
+  ## the highest performance available.
 
-  %# vretval{1} is true or false; either to terminate or to continue
-  %# vretval{2} is the index information for which event occured
-  %# vretval{3} is the time information column vector
-  %# vretval{4} is the line by line result information matrix
+  ## vretval{1} is true or false; either to terminate or to continue
+  ## vretval{2} is the index information for which event occured
+  ## vretval{3} is the time information column vector
+  ## vretval{4} is the line by line result information matrix
 
-  %# These persistent variables are needed to store the results and the
-  %# time value from the processing in the time stamp before, veveold
-  %# are the results from the event function, vtold the time stamp,
-  %# vretcell the return values cell array, vyold the result of the ode
-  %# and vevecnt the counter for how often this event handling
-  %# has been called
+  ## These persistent variables are needed to store the results and the
+  ## time value from the processing in the time stamp before, veveold
+  ## are the results from the event function, vtold the time stamp,
+  ## vretcell the return values cell array, vyold the result of the ode
+  ## and vevecnt the counter for how often this event handling
+  ## has been called
   persistent veveold;  persistent vtold;
   persistent vretcell; persistent vyold;
   persistent vevecnt;
 
-  %# Call the event function if an event function has been defined to
-  %# initialize the internal variables of the event function an to get
-  %# a value for veveold
+  ## Call the event function if an event function has been defined to
+  ## initialize the internal variables of the event function an to get
+  ## a value for veveold
   if (strcmp (vflag, 'init'))
 
     if (~iscell (vy))
       vinpargs = {vevefun, vt, vy};
     else
       vinpargs = {vevefun, vt, vy{1}, vy{2}};
-      vy = vy{1}; %# Delete cell element 2
+      vy = vy{1}; ## Delete cell element 2
     end
     if (nargin > 4)
       vinpargs = {vinpargs{:}, varargin{:}};
     end
     [veveold, vterm, vdir] = feval (vinpargs{:});
 
-    %# We assume that all return values must be column vectors
+    ## We assume that all return values must be column vectors
     veveold = veveold(:)'; vterm = vterm(:)'; vdir = vdir(:)';
     vtold = vt; vyold = vy; vevecnt = 1; vretcell = cell (1,4);
 
-  %# Process the event, find the zero crossings either for a rising
-  %# or for a falling edge
+  ## Process the event, find the zero crossings either for a rising
+  ## or for a falling edge
   elseif (isempty (vflag))
 
     if (~iscell (vy))
       vinpargs = {vevefun, vt, vy};
     else
       vinpargs = {vevefun, vt, vy{1}, vy{2}};
-      vy = vy{1}; %# Delete cell element 2
+      vy = vy{1}; ## Delete cell element 2
     end
     if (nargin > 4)
       vinpargs = {vinpargs{:}, varargin{:}};
     end
     [veve, vterm, vdir] = feval (vinpargs{:});
 
-    %# We assume that all return values must be column vectors
+    ## We assume that all return values must be column vectors
     veve = veve(:)'; vterm = vterm(:)'; vdir = vdir(:)';
 
-    %# Check if one or more signs of the event has changed
+    ## Check if one or more signs of the event has changed
     vsignum = (sign (veveold) ~= sign (veve));
-    if (any (vsignum))         %# One or more values have changed
-      vindex = find (vsignum); %# Get the index of the changed values
+    if (any (vsignum))         ## One or more values have changed
+      vindex = find (vsignum); ## Get the index of the changed values
 
       if (any (vdir(vindex) == 0))
-        %# Rising or falling (both are possible)
-        %# Don't change anything, keep the index
+        ## Rising or falling (both are possible)
+        ## Don't change anything, keep the index
       elseif (any (vdir(vindex) == sign (veve(vindex))))
-        %# Detected rising or falling, need a new index
+        ## Detected rising or falling, need a new index
         vindex = find (vdir == sign (veve));
       else
-        %# Found a zero crossing but must not be notified
+        ## Found a zero crossing but must not be notified
         vindex = [];
       end
 
-      %# Create new output values if a valid index has been found
+      ## Create new output values if a valid index has been found
       if (~isempty (vindex))
-        %# Change the persistent result cell array
-        vretcell{1} = any (vterm(vindex));    %# Stop integration or not
-        vretcell{2}(vevecnt,1) = vindex(1,1); %# Take first event found
-        %# Calculate the time stamp when the event function returned 0 and
-        %# calculate new values for the integration results, we do both by
-        %# a linear interpolation
+        ## Change the persistent result cell array
+        vretcell{1} = any (vterm(vindex));    ## Stop integration or not
+        vretcell{2}(vevecnt,1) = vindex(1,1); ## Take first event found
+        ## Calculate the time stamp when the event function returned 0 and
+        ## calculate new values for the integration results, we do both by
+        ## a linear interpolation
         vtnew = vt - veve(1,vindex) * (vt - vtold) / (veve(1,vindex) - veveold(1,vindex));
         vynew = (vy - (vt - vtnew) * (vy - vyold) / (vt - vtold))';
         vretcell{3}(vevecnt,1) = vtnew;
         vretcell{4}(vevecnt,:) = vynew;
         vevecnt = vevecnt + 1;
-      end %# if (~isempty (vindex))
+      end ## if (~isempty (vindex))
 
-    end %# Check for one or more signs ...
+    end ## Check for one or more signs ...
     veveold = veve; vtold = vt; vretval = vretcell; vyold = vy;
 
-  elseif (strcmp (vflag, 'done')) %# Clear this event handling function
+  elseif (strcmp (vflag, 'done')) ## Clear this event handling function
     clear ('veveold', 'vtold', 'vretcell', 'vyold', 'vevecnt');
     vretcell = cell (1,4);
 
   end
-
-%# Local Variables: ***
-%# mode: octave ***
-%# End: ***
diff --git a/scripts/ode/private/runge_kutta_45_dorpri.m b/scripts/ode/private/runge_kutta_45_dorpri.m
--- a/scripts/ode/private/runge_kutta_45_dorpri.m
+++ b/scripts/ode/private/runge_kutta_45_dorpri.m
@@ -1,23 +1,25 @@
 ## Copyright (C) 2013, Roberto Porcu' <roberto.porcu@polimi.it>
-## OdePkg - A package for solving ordinary differential equations and more
+##
+## This file is part of Octave.
 ##
-## This program is free software; you can redistribute it and/or modify
-## it under the terms of the GNU General Public License as published by
-## the Free Software Foundation; either version 2 of the License, or
-## (at your option) any later version.
+## Octave is free software; you can redistribute it and/or modify it
+## under the terms of the GNU General Public License as published by
+## the Free Software Foundation; either version 3 of the License, or (at
+## your option) any later version.
 ##
-## This program is distributed in the hope that it will be useful,
-## but WITHOUT ANY WARRANTY; without even the implied warranty of
-## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-## GNU General Public License for more details.
+## Octave is distributed in the hope that it will be useful, but
+## WITHOUT ANY WARRANTY; without even the implied warranty of
+## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
-## along with this program; If not, see <http://www.gnu.org/licenses/>.
+## along with Octave; see the file COPYING.  If not, see
+## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Command} {[@var{t_next}, @var{x_next}] =}
 ## runge_kutta_45_dorpri (@var{@@fun}, @var{t}, @var{x}, @var{dt},
 ## [@var{options}, @var{k_vals_in}])
 ## @deftypefnx {Command} {[@var{t_next}, @var{x_next}, @var{x_est}] =}
 ## runge_kutta_45_dorpri (@var{@@fun}, @var{t}, @var{x}, @var{dt},
 ## [@var{options}, @var{k_vals_in}])
@@ -58,23 +60,24 @@
 ## of the previous step to use in a FSAL scheme.
 ## @end deftypefn
 ##
 ## @seealso{odepkg}
 
 function varargout = runge_kutta_45_dorpri (f, t, x, dt, varargin)
 
   options = varargin{1};
-  k = zeros (size (x, 1), 4);
+  k = zeros (rows (x), 6);
 
   if (nargin == 5) # only the options are passed
     k(:,1) = feval (f, t , x, options.vfunarguments{:});
   elseif (nargin == 6) # both the options and the k values are passed
     k(:,1) = varargin{2}(:,end); # FSAL property
   endif
+  
   k(:,1) = feval (f, t, x, options.vfunarguments{:});
   k(:,2) = feval (f, t + (1/5)*dt, ...
                   x + dt * (1/5)*k(:,1), ...
                   options.vfunarguments{:});
   k(:,3) = feval (f, t + (3/10)*dt, ...
                   x + dt * ((3/40)*k(:,1) + (9/40)*k(:,2)), ...
                   options.vfunarguments{:});
   k(:,4) = feval (f, t + (4/5)*dt, ...
@@ -107,11 +110,8 @@ function varargout = runge_kutta_45_dorp
     varargout{3} = x + dt * ((5179/57600)*k(:,1) + (7571/16695)*k(:,3)
                              + (393/640)*k(:,4) - (92097/339200)*k(:,5)
                              + (187/2100)*k(:,6) + (1/40)*k(:,7)); # x_est
     varargout{4} = k;
   endif
 
 endfunction
 
-## Local Variables: ***
-## mode: octave ***
-## End: ***
diff --git a/scripts/ode/private/starting_stepsize.m b/scripts/ode/private/starting_stepsize.m
--- a/scripts/ode/private/starting_stepsize.m
+++ b/scripts/ode/private/starting_stepsize.m
@@ -1,24 +1,25 @@
 ## Copyright (C) 2013, Roberto Porcu' <roberto.porcu@polimi.it>
-## OdePkg - A package for solving ordinary differential equations and more
+##
+## This file is part of Octave.
 ##
-## This program is free software; you can redistribute it and/or modify
-## it under the terms of the GNU General Public License as published by
-## the Free Software Foundation; either version 2 of the License, or
-## (at your option) any later version.
+## Octave is free software; you can redistribute it and/or modify it
+## under the terms of the GNU General Public License as published by
+## the Free Software Foundation; either version 3 of the License, or (at
+## your option) any later version.
 ##
-## This program is distributed in the hope that it will be useful,
-## but WITHOUT ANY WARRANTY; without even the implied warranty of
-## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-## GNU General Public License for more details.
+## Octave is distributed in the hope that it will be useful, but
+## WITHOUT ANY WARRANTY; without even the implied warranty of
+## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
-## along with this program; If not, see <http://www.gnu.org/licenses/>.
-
+## along with Octave; see the file COPYING.  If not, see
+## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Command} {[@var{h}] =} starting_stepsize (@var{order},
 ## @var{@@fun}, @var{t0}, @var{x0})
 ##
 ## This function file can be used to determine a good initial step for an ODE
 ## solver of order @var{order}. The algorithm is that one described in [1].
 ##
