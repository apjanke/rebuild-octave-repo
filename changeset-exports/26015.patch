# HG changeset patch
# User Rik <rik@octave.org>
# Date 1541200049 25200
#      Fri Nov 02 16:07:29 2018 -0700
# Node ID 2e97124a71dafee3e5b35757593ae17ca1f7b98b
# Parent  cf133c4f9efd593e467ad5a42d79935b39cbcfc8
waitbar.m: Redo %!demos to be slower with qt toolkit and display better (bug #54935).

* waitbar.m: Insert pause statements into %!demo blocks 1-2 when using the qt
toolkit.  Position the waitbar above the other window figure in %!demo #4.
Decrease the iterations in demo #4 from 9 to 7 because the changes couldn't be
seen with the naked eye.  Increase the length of the existing pause in demo #4.

diff --git a/scripts/gui/waitbar.m b/scripts/gui/waitbar.m
--- a/scripts/gui/waitbar.m
+++ b/scripts/gui/waitbar.m
@@ -205,37 +205,52 @@ function updatecancelbutton (hf, dummy, 
 
 endfunction
 
 
 %!demo
 %! h = waitbar (0, '0.00%');
 %! for i = 0:0.01:1
 %!   waitbar (i, h, sprintf ('%.2f%%', 100*i));
+%!   if (strcmp (graphics_toolkit (), "qt"))
+%!     pause (0.01);
+%!   endif
 %! endfor
 %! close (h);
 
 %!demo
 %! h = waitbar (0, 'please wait...');
 %! for i = 0:0.01:0.6
 %!   waitbar (i);
+%!   if (strcmp (graphics_toolkit (), "qt"))
+%!     pause (0.01);
+%!   endif
 %! endfor
 %! i = 0.3;
 %! waitbar (i, h, 'don''t you hate taking a step backward?');
 %! pause (0.5);
 %! for i = i:0.005:0.7
 %!   waitbar (i, h);
+%!   if (strcmp (graphics_toolkit (), "qt"))
+%!     pause (0.01);
+%!   endif
 %! endfor
 %! waitbar (i, h, 'or stalling?');
 %! pause (1);
-%! for i = i:0.003:0.8
+%! for i = i:0.003:0.85
 %!   waitbar (i, h, 'just a little longer now');
+%!   if (strcmp (graphics_toolkit (), "qt"))
+%!     pause (0.01);
+%!   endif
 %! endfor
 %! for i = i:0.001:1
 %!   waitbar (i, h, 'please don''t be impatient');
+%!   if (strcmp (graphics_toolkit (), "qt"))
+%!     pause (0.01);
+%!   endif
 %! endfor
 %! close (h);
 
 %!demo
 %! h1 = waitbar (0, 'Waitbar #1');
 %! h2 = waitbar (0, 'Waitbar #2');
 %! h2pos = get (h2, 'position');
 %! h2pos(1) = h2pos(1) + (h2pos(3) + 50);
@@ -248,25 +263,30 @@ endfunction
 %!   pause (0.5);
 %! endfor
 %! pause (0.5);
 %! close (h1);
 %! close (h2);
 
 %!demo
 %! clf ();
-%! niter = 9;
+%! niter = 7;
 %! l = 1;
 %! xx = [0 l];
 %! yy = [0 0];
 %! hli = plot (xx, yy);
+%! pos1 = get (gcf, "position");
 %!
-%! disp ("Push the cancel to stop the process.");
-%! hf = waitbar(0,"0","Name","Building Koch curve ...",...
-%!              "createcancelbtn", "setappdata (gcbf,'interrupt', true)");
+%! disp ("Push the <cancel> button to stop the process.");
+%! hf = waitbar (0,"0","Name","Building Koch curve ...",...
+%!               "createcancelbtn", "setappdata (gcbf,'interrupt', true)");
+%! 
+%! pos2 = get (hf, "position");
+%! set (hf, "position", [pos1(1)+(pos1(3)-pos2(3))/2, pos1(2)+pos1(4), pos2(3:4)]);
+%! 
 %! for ii = 1:niter
 %!   ## Check cancel request
 %!   if (! ishghandle (hf))
 %!     break;
 %!   elseif (getappdata (hf, "interrupt"))
 %!     delete (hf);
 %!     break;
 %!   else
@@ -277,24 +297,24 @@ endfunction
 %!   l /= 3;
 %!   theta = angle (complex (diff (xx), diff (yy)));
 %!
 %!   xy = @(th, x0, y0) [cos(th) -sin(th) x0
 %!                       sin(th) cos(th) y0] * [0 l l*3/2      2*l;
 %!                                              0 0 l*(3)^.5/2 0;
 %!                                              1 1 1          1];
 %!   tmp = arrayfun (xy, theta, xx(1:end-1), yy(1:end-1),
-%!                  "uniformoutput", false);
+%!                   "uniformoutput", false);
 %!
 %!   tmp = cell2mat (tmp);
 %!   xx = [tmp(1,:) xx(end)];
 %!   yy = [tmp(2,:) yy(end)];
 %!   set (hli, "xdata", xx, "ydata", yy);
 %!   drawnow ();
-%!   pause (0.5);
+%!   pause (0.75);
 %! endfor
 %!
 %! if (ishghandle (hf))
 %!   delete (hf);
 %! endif
 
 ## Test input validation
 %!error <FRAC must be between 0 and 1> waitbar (-0.5)
