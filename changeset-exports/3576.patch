# HG changeset patch
# User jwe
# Date 949662754 0
#      Fri Feb 04 11:12:34 2000 +0000
# Node ID 168277402d7c6aaac612e4277f7b4d9b7c7da012
# Parent  7576a76f6d7bc696ed1a2402c996d9203dc2298e
[project @ 2000-02-04 11:09:38 by jwe]

diff --git a/doc/interpreter/munge-texi.cc b/doc/interpreter/munge-texi.cc
--- a/doc/interpreter/munge-texi.cc
+++ b/doc/interpreter/munge-texi.cc
@@ -43,17 +43,17 @@ fatal (const std::string& msg)
 static void
 usage (void)
 {
   std::cerr << "usage: munge-texi -d DOCSTRING-FILE file ...\n";
   exit (1);
 }
 
 static std::string
-extract_symbol_name (istream& is)
+extract_symbol_name (std::istream& is)
 {
   std::string symbol_name;
 
   int c;
   while ((c = is.get ()) != EOF && c != '\n')
     symbol_name += (char) c;
 
   return symbol_name;
diff --git a/scripts/gethelp.cc b/scripts/gethelp.cc
--- a/scripts/gethelp.cc
+++ b/scripts/gethelp.cc
@@ -141,16 +141,16 @@ main (int argc, char **argv)
     }
   else
     name = argv[1];
 
   std::string help_text = extract_help_text ();  
 
   if (! help_text.empty ())
     {
-      cout << "" << name << "\n" << help_text;
+      std::cout << "" << name << "\n" << help_text;
 
       if (help_text[help_text.length () - 1] != '\n')
-	cout << "\n";
+	std::cout << "\n";
     }
 
   return 0;
 }
diff --git a/src/Map.h b/src/Map.h
--- a/src/Map.h
+++ b/src/Map.h
@@ -96,20 +96,20 @@ struct CHNode
 
   ~CHNode (void) { }
 
   // The nodes are linked together serially via a version of a trick
   // used in some vtables: odd pointers are actually links to the next
   // table entry.  Not terrible, but not wonderful either.
 
   int goodCHptr (void)
-    { return (((X_CAST (unsigned long, this)) & 1) == 0); }
+    { return ((((unsigned long) this) & 1) == 0); }
 
   unsigned int CHptr_to_index (void)
-    { return (X_CAST (unsigned long, this)) >> 1; }
+    { return (((unsigned long) this) >> 1); }
 };
 
 #ifndef DEFAULT_INITIAL_CAPACITY
 #define DEFAULT_INITIAL_CAPACITY 8
 #endif
 
 template <class C>
 class CHMap : public Map<C>
