# HG changeset patch
# User jwe
# Date 1067293056 0
#      Mon Oct 27 22:17:36 2003 +0000
# Node ID fe70d807464479a444b8b710cbcc8608640deac9
# Parent  78e34346f6fd0f45c9efc752ceaa015e0bd6abca
[project @ 2003-10-27 22:17:36 by jwe]

diff --git a/libcruft/ChangeLog b/libcruft/ChangeLog
--- a/libcruft/ChangeLog
+++ b/libcruft/ChangeLog
@@ -1,10 +1,12 @@
 2003-10-27  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* misc/f77-fcn.h: Only use inline if this is C++.
+
 	* misc/f77-fcn.c (xstopx): Return type is now F77_RET_T.
 	Use F77_RETURN.
 	* misc/machar.c (machar): Likewise.
 
 	* misc/f77-fcn.h (F77_CHAR_ARG, F77_CONST_CHAR_ARG, F77_CHAR_ARG2,
 	F77_CONST_CHAR_ARG2, F77_CXX_STRING_ARG, F77_CHAR_ARG_LEN,
 	F77_CHAR_ARG_DECL, F77_CONST_CHAR_ARG_DECL, F77_CHAR_ARG_LEN_DECL,
 	F77_RET_T, F77_RETURN): New macros.
diff --git a/libcruft/misc/f77-fcn.h b/libcruft/misc/f77-fcn.h
--- a/libcruft/misc/f77-fcn.h
+++ b/libcruft/misc/f77-fcn.h
@@ -113,34 +113,42 @@ union octave_cray_descriptor
     unsigned off : 6;
     unsigned len : 26;
     unsigned add : 32;
   } mask;
 };
 
 typedef void *octave_cray_ftn_ch_dsc;
 
-static inline octave_cray_ftn_ch_dsc
+#ifdef __cplusplus
+#define OCTAVE_F77_FCN_INLINE inline
+#endif
+
+static OCTAVE_F77_FCN_INLINE octave_cray_ftn_ch_dsc
 octave_make_cray_ftn_ch_dsc (char *ptr_arg, unsigned long len_arg)
 {
   octave_cray_descriptor desc;
   desc.ptr = ptr_arg;
   desc.mask.len = len_arg << 3;
   return *((octave_cray_fortran_character_descriptor *) &f);
 }
 
-static inline octave_cray_ftn_ch_dsc
+static OCTAVE_F77_FCN_INLINE octave_cray_ftn_ch_dsc
 octave_make_cray_const_ftn_ch_dsc (const char *ptr_arg, unsigned long len_arg)
 {
   octave_cray_descriptor desc;
   desc.const_ptr = ptr_arg;
   desc.mask.len = len_arg << 3;
   return *((octave_cray_fcd *) &f);
 }
 
+#ifdef __cplusplus
+#undef OCTAVE_F77_FCN_INLINE
+#endif
+
 #elif defined (F77_USES_VISUAL_FORTRAN_CALLING_CONVENTION)
 
 #define F77_CHAR_ARG(x) x, strlen (x)
 #define F77_CONST_CHAR_ARG(x) F77_CHAR_ARG (x)
 #define F77_CHAR_ARG2(x, l) x, l
 #define F77_CONST_CHAR_ARG2(x, l) F77_CHAR_ARG2 (x, l)
 #define F77_CXX_STRING_ARG(x) F77_CONST_CHAR_ARG2 (x.c_str (), x.length ())
 #define F77_CHAR_ARG_LEN(l)
