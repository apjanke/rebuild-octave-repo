# HG changeset patch
# User jwe
# Date 981732503 0
#      Fri Feb 09 15:28:23 2001 +0000
# Node ID c1c532a0acb207fa58bc298cf3092fc5312e3ec3
# Parent  1e0d844b8f540884c5a93a9c3a2ab5028da73702
[project @ 2001-02-09 15:28:23 by jwe]

diff --git a/scripts/strings/base2dec.m b/scripts/strings/base2dec.m
--- a/scripts/strings/base2dec.m
+++ b/scripts/strings/base2dec.m
@@ -39,17 +39,17 @@
 ## @example
 ## base2dec ("yyyzx", "xyz")
 ##      @result{} 123
 ## @end example
 ##
 ## @end deftypefn
 ## @seealso{dec2base, dec2bin, bin2dec, hex2dec, dec2hex}
 
-## Author: Daniel Calvelo <>
+## Author: Daniel Calvelo <dcalvelo@yahoo.com>
 ## Adapted-by: Paul Kienzle <pkienzle@kienzle.powernet.co.uk>
 
 function out = base2dec (d, base)
 
   if (nargin != 2)
     usage ("n = base2dec('d', base)");
   endif
 
diff --git a/scripts/strings/bin2dec.m b/scripts/strings/bin2dec.m
--- a/scripts/strings/bin2dec.m
+++ b/scripts/strings/bin2dec.m
@@ -28,17 +28,17 @@
 ## @end example
 ##
 ## If @var{s} is a string matrix, returns a column vector of converted
 ## numbers, one per row of @var{s}.  Invalid rows evaluate to NaN.
 ## @end deftypefn
 ##
 ## @seealso{dec2hex, base2dec, dec2base, bin2dec, dec2bin}
 
-## Author: Daniel Calvelo
+## Author: Daniel Calvelo <dcalvelo@yahoo.com>
 ## Adapted-by: Paul Kienzle <pkienzle@kienzle.powernet.co.uk>
 
 function d = bin2dec (h)
 
   if (nargin != 1)
     usage ("bin2dec (b)");
   else
     d = base2dec (h, 2);
diff --git a/scripts/strings/dec2base.m b/scripts/strings/dec2base.m
--- a/scripts/strings/dec2base.m
+++ b/scripts/strings/dec2base.m
@@ -37,17 +37,17 @@
 ## @example
 ## dec2base (123, "aei")
 ##      @result{} "eeeia"
 ## @end example
 ## @end deftypefn
 ##
 ## @seealso{base2dec, dec2bin, bin2dec, hex2dec, dec2hex}
 
-## Author: Daniel Calvelo <>
+## Author: Daniel Calvelo <dcalvelo@yahoo.com>
 ## Adapted-by: Paul Kienzle <pkienzle@kienzle.powernet.co.uk>
 
 function out = dec2base (d, base)
 
   if (nargin != 2)
     usage("dec2base (n, base)");
   endif
 
diff --git a/scripts/strings/dec2bin.m b/scripts/strings/dec2bin.m
--- a/scripts/strings/dec2bin.m
+++ b/scripts/strings/dec2bin.m
@@ -28,17 +28,17 @@
 ## @end example
 ##
 ## If @var{n} is a vector, returns a string matrix, one row per value,
 ## padded with leading zeros to the width of the largest value.
 ## @end deftypefn
 ##
 ## @seealso{bin2dec, dec2base, base2dec, hex2dec, dec2hex}
 
-## Author: Daniel Calvelo
+## Author: Daniel Calvelo <dcalvelo@yahoo.com>
 ## 2001-02-02 Paul Kienzle <pkienzle@kienzle.powernet.co.uk>
 
 function h = dec2bin (d)
 
   if (nargin != 1)
     usage ("dec2bin (b)");
   else
     h = dec2base (d, 2);
diff --git a/scripts/strings/dec2hex.m b/scripts/strings/dec2hex.m
--- a/scripts/strings/dec2hex.m
+++ b/scripts/strings/dec2hex.m
@@ -28,17 +28,17 @@
 ## @end example
 ##
 ## If @var{n} is a vector, returns a string matrix, one row per value,
 ## padded with leading zeros to the width of the largest value.
 ## @end deftypefn
 ##
 ## @seealso{hex2dec, dec2base, base2dec, bin2dec, dec2bin}
 
-## Author: Daniel Calvelo
+## Author: Daniel Calvelo <dcalvelo@yahoo.com>
 ## Adapted-by: Paul Kienzle <pkienzle@kienzle.powernet.co.uk>
 
 function h = dec2hex (d)
 
   if (nargin != 1)
     usage ("dec2hex (b)");
   else
     h = dec2base (d, 16);
diff --git a/scripts/strings/hex2dec.m b/scripts/strings/hex2dec.m
--- a/scripts/strings/hex2dec.m
+++ b/scripts/strings/hex2dec.m
@@ -30,17 +30,17 @@
 ## @end example
 ##
 ## If @var{s} is a string matrix, returns a column vector of converted
 ## numbers, one per row of @var{s}.  Invalid rows evaluate to NaN.
 ## @end deftypefn
 ##
 ## @seealso{dec2hex, base2dec, dec2base, bin2dec, dec2bin}
 
-## Author: Daniel Calvelo
+## Author: Daniel Calvelo <dcalvelo@yahoo.com>
 ## Adapted-by: Paul Kienzle <pkienzle@kienzle.powernet.co.uk>
 
 function d = hex2dec (h)
 
   if (nargin != 1)
     usage ("hex2dec (b)");
   else
     d = base2dec (h, 16);
