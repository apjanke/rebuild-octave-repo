# HG changeset patch
# User jwe
# Date 1076958800 0
#      Mon Feb 16 19:13:20 2004 +0000
# Node ID 0ff45249d3219889793285c19a854c00959e1aa3
# Parent  ccfbd6047a540b272b3ba1443d5bc76cc350f35e
[project @ 2004-02-16 19:13:20 by jwe]

diff --git a/liboctave/oct-fftw.cc b/liboctave/oct-fftw.cc
--- a/liboctave/oct-fftw.cc
+++ b/liboctave/oct-fftw.cc
@@ -102,18 +102,18 @@ fftw_plan
 octave_fftw_planner::create_plan (int dir, const int rank,
 				  const dim_vector dims, int howmany,
 				  int stride, int dist, 
 				  const Complex *in, Complex *out)
 {
   int which = (dir == FFTW_FORWARD) ? 0 : 1;
   fftw_plan *cur_plan_p = &plan[which];
   bool create_new_plan = false;
-  char in_align = ((int) in) & 0xF;
-  char out_align = ((int) out) & 0xF;
+  char in_align = (static_cast<int> (in)) & 0xF;
+  char out_align = (static_cast<int (out)) & 0xF;
 
   if (plan[which] == 0 || d[which] != dist || s[which] != stride ||
       r[which] != rank || h[which] != howmany ||
       ialign[which] != in_align || oalign[which] != out_align)
     create_new_plan = true;
   else
     // We still might not have the same shape of array
     for (int i = 0; i < rank; i++)
@@ -139,35 +139,35 @@ octave_fftw_planner::create_plan (int di
       // Note reversal of dimensions for column major storage in FFTW
       OCTAVE_LOCAL_BUFFER (int, tmp, rank);
       for (int i = 0, j = rank-1; i < rank; i++, j--)
 	tmp[i] = dims(j);
 
       *cur_plan_p =
 	fftw_plan_many_dft (rank, tmp, howmany,
 	      reinterpret_cast<fftw_complex *> (const_cast<Complex *> (in)),
-	      NULL, stride, dist, reinterpret_cast<fftw_complex *> (out),
-	      NULL, stride, dist, dir, plan_flags);
+	      0, stride, dist, reinterpret_cast<fftw_complex *> (out),
+	      0, stride, dist, dir, plan_flags);
 
       if (*cur_plan_p == 0)
 	(*current_liboctave_error_handler) ("Error creating fftw plan");
     }
 
   return *cur_plan_p;
 }
  
 fftw_plan
 octave_fftw_planner::create_plan (const int rank, const dim_vector dims, 
 				  int howmany, int stride, int dist, 
 				  const double *in, Complex *out)
 {
   fftw_plan *cur_plan_p = &rplan;
   bool create_new_plan = false;
-  char in_align = ((int) in) & 0xF;
-  char out_align = ((int) out) & 0xF;
+  char in_align = (static_cast<int> (in)) & 0xF;
+  char out_align = (static_cast<int (out)) & 0xF;
 
   if (rplan == 0 || rd != dist || rs != stride ||
       rr != rank || rh != howmany ||
       rialign != in_align || roalign != out_align)
     create_new_plan = true;
   else
     // We still might not have the same shape of array
     for (int i = 0; i < rank; i++)
@@ -193,18 +193,18 @@ octave_fftw_planner::create_plan (const 
       // Note reversal of dimensions for column major storage in FFTW
       OCTAVE_LOCAL_BUFFER (int, tmp, rank);
       for (int i = 0, j = rank-1; i < rank; i++, j--)
 	tmp[i] = dims(j);
 
       *cur_plan_p =
 	fftw_plan_many_dft_r2c (rank, tmp, howmany,
 	      (const_cast<double *> (in)),
-	      NULL, stride, dist, reinterpret_cast<fftw_complex *> (out),
-	      NULL, stride, dist, plan_flags);
+	      0, stride, dist, reinterpret_cast<fftw_complex *> (out),
+	      0, stride, dist, plan_flags);
 
       if (*cur_plan_p == 0)
 	(*current_liboctave_error_handler) ("Error creating fftw plan");
     }
 
   return *cur_plan_p;
 }
 
