# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1365323350 14400
#      Sun Apr 07 04:29:10 2013 -0400
# Node ID 38ed6bdd1f7f8a8421bf146acfa88130327249e8
# Parent  246d25c8761b698825f6ed10cb8502c5e6e09af4
move signal/slot connections from main window to sub window where possible

* main-window.cc (main_window::construct): Move the following
signal/slot connections to their respective sub-windows.
main_window::settings_changed to _file_editor::notice_settings.
main_window::settings_changed to command_window::notice_settings.
main_window::settings_changed to
file_browser_window::notice_settings.
file_browser_window::open_file to main_window::open_file.
file_browser_window::displayed_directory_changed to
main_window::set_current_working_directory.
main_window::relay_command_signal to command_window::relay_command.
history_window::command_create_script to main_window::new_file.

diff --git a/libgui/src/files-dockwidget.cc b/libgui/src/files-dockwidget.cc
--- a/libgui/src/files-dockwidget.cc
+++ b/libgui/src/files-dockwidget.cc
@@ -42,16 +42,22 @@ files_dock_widget::files_dock_widget (QW
   setWindowIcon (QIcon(":/actions/icons/logo.png"));
   setWindowTitle (tr ("File Browser"));
   setStatusTip (tr ("Browse your files."));
 
   QWidget *container = new QWidget (this);
 
   setWidget (container);
 
+  connect (this, SIGNAL (open_file (const QString&)),
+           parent (), SLOT (open_file (const QString&)));
+
+  connect (this, SIGNAL (displayed_directory_changed (const QString&)),
+           parent (), SLOT (set_current_working_directory (const QString&)));
+
   // Create a toolbar
   _navigation_tool_bar = new QToolBar ("", container);
   _navigation_tool_bar->setAllowedAreas (Qt::TopToolBarArea);
   _navigation_tool_bar->setMovable (false);
   _navigation_tool_bar->setIconSize (QSize (20, 20));
 
   _directory_icon = QIcon(":/actions/icons/up.png");
   _directory_up_action = new QAction (_directory_icon, "", _navigation_tool_bar);
diff --git a/libgui/src/history-dockwidget.cc b/libgui/src/history-dockwidget.cc
--- a/libgui/src/history-dockwidget.cc
+++ b/libgui/src/history-dockwidget.cc
@@ -36,18 +36,21 @@ along with Octave; see the file COPYING.
 #include "history-dockwidget.h"
 
 history_dock_widget::history_dock_widget (QWidget *p)
   : octave_dock_widget (p)
 {
   setObjectName ("HistoryDockWidget");
   setStatusTip (tr ("Browse and search the command history."));
 
-  connect (this, SIGNAL (information (QString)),
-           p, SLOT (report_status_message (QString)));
+  connect (this, SIGNAL (command_create_script (const QString&)),
+           p, SLOT (new_file (const QString&)));
+
+  connect (this, SIGNAL (information (const QString&)),
+           p, SLOT (report_status_message (const QString&)));
 
   connect (this, SIGNAL (command_double_clicked (const QString&)),
            p, SLOT (handle_command_double_clicked (const QString&)));
 
   construct ();
 }
 
 void
diff --git a/libgui/src/m-editor/file-editor.cc b/libgui/src/m-editor/file-editor.cc
--- a/libgui/src/m-editor/file-editor.cc
+++ b/libgui/src/m-editor/file-editor.cc
@@ -796,16 +796,19 @@ file_editor::construct ()
   QVBoxLayout *vbox_layout = new QVBoxLayout ();
   vbox_layout->addWidget (_menu_bar);
   vbox_layout->addWidget (_tool_bar);
   vbox_layout->addWidget (_tab_widget);
   vbox_layout->setMargin (0);
   editor_widget->setLayout (vbox_layout);
   setWidget (editor_widget);
 
+  connect (parent (), SIGNAL (settings_changed (const QSettings *)),
+           this, SLOT (notice_settings (const QSettings *)));
+
   connect (new_action,
            SIGNAL (triggered ()), this, SLOT (request_new_file ()));
   connect (open_action,
            SIGNAL (triggered ()), this, SLOT (request_open_file ()));
   connect (undo_action,
            SIGNAL (triggered ()), this, SLOT (request_undo ()));
   connect (redo_action,
            SIGNAL (triggered ()), this, SLOT (request_redo ()));
diff --git a/libgui/src/main-window.cc b/libgui/src/main-window.cc
--- a/libgui/src/main-window.cc
+++ b/libgui/src/main-window.cc
@@ -604,42 +604,19 @@ main_window::construct ()
 
   construct_menu_bar ();
 
   construct_tool_bar ();
 
   connect (qApp, SIGNAL (aboutToQuit ()),
            this, SLOT (prepare_for_quit ()));
 
-#ifdef HAVE_QSCINTILLA
-  connect (this, SIGNAL (settings_changed (const QSettings *)),
-           _file_editor, SLOT (notice_settings (const QSettings *)));
-#endif
-
-  connect (this, SIGNAL (settings_changed (const QSettings *)),
-           command_window, SLOT (notice_settings (const QSettings *)));
-
-  connect (this, SIGNAL (settings_changed (const QSettings *)),
-           file_browser_window, SLOT (notice_settings (const QSettings *)));
-
   connect (this, SIGNAL (settings_changed (const QSettings *)),
            this, SLOT (notice_settings (const QSettings *)));
 
-  connect (file_browser_window, SIGNAL (open_file (QString)),
-           this, SLOT (open_file (QString)));
-
-  connect (file_browser_window, SIGNAL (displayed_directory_changed(QString)),
-           this, SLOT (set_current_working_directory(QString)));
-
-  connect (this, SIGNAL (relay_command_signal (const QString&)),
-           command_window, SLOT (relay_command (const QString&)));
-
-  connect (history_window, SIGNAL (command_create_script (const QString&)),
-           this, SLOT (new_file (const QString&)));
-
   setWindowTitle ("Octave");
 
   setDockOptions (QMainWindow::AnimatedDocks
                   | QMainWindow::AllowNestedDocks
                   | QMainWindow::AllowTabbedDocks);
 
   addDockWidget (Qt::RightDockWidgetArea, command_window);
   addDockWidget (Qt::RightDockWidgetArea, doc_browser_window);
diff --git a/libgui/src/terminal-dockwidget.cc b/libgui/src/terminal-dockwidget.cc
--- a/libgui/src/terminal-dockwidget.cc
+++ b/libgui/src/terminal-dockwidget.cc
@@ -33,19 +33,25 @@ terminal_dock_widget::terminal_dock_widg
   terminal.setObjectName ("OctaveTerminal");
   terminal.setFocusPolicy (Qt::StrongFocus);
 
   setObjectName ("TerminalDockWidget");
   setWindowIcon (QIcon(":/actions/icons/logo.png"));
   setWindowTitle (tr ("Command Window"));
   setWidget (&terminal);
 
+  connect (parent (), SIGNAL (settings_changed (const QSettings *)),
+           this, SLOT (notice_settings (const QSettings *)));
+
   connect (this, SIGNAL (visibilityChanged (bool)),
            this, SLOT (handle_visibility (bool)));
 
+  connect (parent (), SIGNAL (relay_command_signal (const QString&)),
+           this, SLOT (relay_command (const QString&)));
+
   // topLevelChanged is emitted when floating property changes (floating
   // = true)
   connect (this, SIGNAL (topLevelChanged (bool)),
            this, SLOT (top_level_changed (bool)));
 
   // Forward signals to QTerminal widget.
 
   connect (this, SIGNAL (notice_settings_signal (const QSettings *)),
