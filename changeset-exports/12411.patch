# HG changeset patch
# User Ben Abbott  <bpabbott@mac.com>
# Date 1297170581 18000
#      Tue Feb 08 08:09:41 2011 -0500
# Node ID 88a8248f5b97c6805e3e931353d9cb106b43a22e
# Parent  5252f12537f8a1006ea81c9b76ebba108d663788
README.MacOS: Add detail.

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,12 +1,16 @@
 2011-02-08  John W. Eaton  <jwe@octave.org>
 
 	* NEWS: Add note about subfunctions.
 
+2011-02-08  Ben Abbott  <bpabbott@mac.com>
+
+	* README.MacOS: Add detail.
+
 2011-02-06  John W. Eaton  <jwe@octave.org>
 
 	* PROJECTS, README.devel: Use maintainers@octave.org instead of
 	octave-maintainers@octave.org.
 
 2010-02-05  Rik  <octave@nomad.inbox5.com>
 
 	* PROJECTS: Point to maintained list on Octave Wiki.
diff --git a/README.MacOS b/README.MacOS
--- a/README.MacOS
+++ b/README.MacOS
@@ -48,27 +48,33 @@ AT&T Research provides versions of gfort
 with gcc tool set bundled with Xcode.
 
   http://r.research.att.com/tools/
 
 Alternatively, the Fink and MacPorts package managers provide more recent
 versions of gcc which include gfortan. Those may be used to build the sources
 as well. However, care must be taken.
 
-  * The same compiler must be used to build all the dependencies. This is
-    necessary to to avoid conflicts between the compiler libraries such as
+  * The same compiler must be used to build all all of Octave's sources. This
+    is necessary to to avoid conflicts between the compiler libraries such as
     libstdc++. For a successful build the first file in LDFLAGS must refer to
     this library. For example, if building with gcc-4.5 obtained from MacPorts
     LDFLAGS would begin as,
 
       export LDFLAGS="/opt/local/lib/gcc45/libstdc++.6.dylib [...]"
 
   * As of MacOS 10.6.6, the 64bit BLAS routines that are part of Apple's vecLib
     (framework accelerate) are not functioning correctly.  As a work around, an
-    alternative BLAS/LAPACK library, such as ATLAS, must be used.
+    alternative BLAS/LAPACK library, such as ATLAS, must be used. A bug report 
+    has been filed with Apple.
+
+      http://bugreport.apple.com
+      Title: "64 bit ABI issue with libBLAS.dylib"
+      Problem ID: 7850167
+      Date: April 11, 2010 at 12:04 AM
 
 
 2.2 Manual Package Management
 -----------------------------
 
 Instructions for building Octave are available on the web at the link below.
 
     http://wiki.octave.org/wiki.pl?BuildFromSource
@@ -80,50 +86,87 @@ 2.2.1 Critical Dependencies
 ---------------------------
 
 The minimal dependencies needed to build Octave's snap-shots are listed below.
 
   * Xcode
 
   * gfortran: Available from http://r.reseach.att.com/tools
 
-  * gnu sed: Availabel from http://www.gnu.org/software/sed/
+  * gnu sed: Available from http://www.gnu.org/software/sed/
 
       ./configure --prefix=/usr
       make
       make install
 
   * fftw3: Available from http://www.fftw.org/download.html
 
       export F77="/usr/bin/gfortran"
-      export CFLAGS="-arch i686 -arch x86_64"
+      export CFLAGS="-m32"
       export FFLAGS="$CFLAGS"
-      export LDLAGS="$CFLAGS"
+      export LDFLAGS="$CFLAGS"
       ./configure --disable-dependency-tracking
       make
       sudo make install
       make clean
       ./configure --enable-float --disable-dependency-tracking
       make
       sudo make install
 
+    For a 64bit build, the CFLAGS must be modified.
+
+      export CFLAGS="-arch i686 -arch x86_64"
+
+  * blas/lapack
+
+    - For 64 bit, a non-Xcode 64 bit Atlas may be used. Alternatively,
+      a wrapper for Apple's vecLib framework may be used.
+
+      https://mailman.cae.wisc.edu/pipermail/octave-maintainers/2011-January/022541.html
+
 A fully functional Octave requires additional dependencies. See the link below
 for the details.
 
     http://wiki.octave.org/wiki.pl?BuildFromSource
 
+TODO - Modify the configure script to test for 64 bit vecLib bug. When the bug
+       is present, apply the wrapper solution.
+
+
 2.2.2 Building Octave as a 32bit Application
 --------------------------------------------
 
 The commands below are sufficient to build a 32bit Octave.
 
+  export FC="/usr/bin/gfortran"
   export CFLAGS="-m32"
-  export FFLAGS="-m32 -ff2c"
-  export CPPFLAGS="-m32 -D_REENTRANT"
-  export LDFLAGS="-m32"
+  export FFLAGS="$CFLAGS -ff2c"
+  export CPPFLAGS="$CFLAGS -D_REENTRANT -D__LISTS__"
+  export LDFLAGS="$CFLAGS"
+  ./configure --disable-readline --disable-docs
+  make
+
+Octave provides an interegrated tests suite.
+
+  make check
+
+Octave may be run withou installing the application using the utility below.
+
+  ./run-octave
+
+2.2.3 Building Octave as a 64bit Application
+--------------------------------------------
+
+The commands below are sufficient to build a 64bit Octave.
+
+  export FC="/usr/bin/gfortran"
+  export CFLAGS="-arch x86_64"
+  export FFLAGS="$CFLAGS"
+  export CPPFLAGS="$CFLAGS -D_REENTRANT -D__LISTS__"
+  export LDFLAGS="$CFLAGS"
   ./configure --disable-readline --disable-docs
   make
 
 Octave provides an interegrated tests suite.
 
   make check
 
 Octave may be run withou installing the application using the utility below.
@@ -137,26 +180,27 @@ 2.3 Building With Dependencies Satisfied
 To install and setup the Fink package manager see the on line documentation.
 
   http://www.finkproject.org/
 
 Currently, Fink does not have a package available for Octave versions above
 3.0.x. These instructions will allow the developers sources to be build and
 run, but will not permit Octave to be installed in the usual Fink way.
 
-TODO - when a Fink package is developed for Octave 3.4.x, modify these 
+TODO - When a Fink package is developed for Octave 3.4.x, modify these 
        instructions to model the MacPorts secion.
 
 
 2.3.1 Dependencies
 ------------------
 
 To build Octave's sources the list of Fink packages below need to be installed.
 
   aquaterm
+  arpack
   autoconf (>= 2.6.0)
   automake (>= 1.11)
   fftw3 (>= 3.1.1)
   fftw3-shlibs (>= 3.1.1)
   flex >= 2.5.30
   fltk-aqua-shlibs 
   glpk-dev
   glpk-shlibs
@@ -203,17 +247,17 @@ archive, ./autogen.sh must be run prior 
 
   export FINK_PREFIX="/sw"
   export PREFIX="/usr/local/bin"
 
   export OPTFLAGS="-O2 -g"
   export LDFLAGS="-L$FINK_PREFIX/lib -L/usr/lib -m32"
   export CFLAGS="-I$FINK_PREFIX/include $OPTFLAGS -m32"
   export CXXFLAGS=$CFLAGS
-  export CPPFLAGS=$CXXFLAGS 
+  export CPPFLAGS="$CXXFLAGS -D__LISTS__"
   export ACLOCAL_FLAGS="-I$FINK_PREFIX/share/aclocal"
   export PKG_CONFIG_PATH="$FINK_PREFIX/lib/pkgconfig"
   export PATH="$FINK_PREFIX/var/lib/fink/path-prefix-10.6/:$PATH"
   export MACOSX_DEPLOYMENT_TARGET=10.5
   export PATH="$FINK_PREFIX/lib/flex/bin:$PATH"
   export CPPFLAGS="-I$FINK_PREFIX/lib/flex/include $CPPFLAGS"
   export LDFLAGS="-L$FINK_PREFIX/lib/flex/lib $LDFLAGS"
   export CC="gcc-4.2"
@@ -229,17 +273,17 @@ archive, ./autogen.sh must be run prior 
 
   ./configure --prefix=$PREFIX \
               --libexecdir='${prefix}/lib' \
               --with-blas="-Wl,-framework -Wl,vecLib"
   make
 
 Note: This approach to building Octave does not support "make install".
 
-TODO - develop a Fink package for Octave 3.4.x.
+TODO - Develop a Fink package for Octave 3.4.x.
 
 
 2.4 Building With Dependencies Satisfied by MacPorts
 ----------------------------------------------------
 
 To install and setup the MacPorts package manager see the online documentation
 
     http://guide.macports.org/
