# HG changeset patch
# User Ben Abbott <bpabbott@mac.com>
# Date 1268957315 14400
#      Thu Mar 18 20:08:35 2010 -0400
# Node ID dfc662a47b7a85a74ec0c7dfb34faf17e64a00c4
# Parent  9c4f403bec2bbf17e08e39b5d32069431303cec0
print.m: Add '-append' option.

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2010-03-18  Petr Mikulik <mikulik@physics.muni.cz>
+
+	* /plot/print.m: Add '-append' option.
+
 2010-03-18  Ben Abbott <bpabbott@mac.com>
 
 	* /plot/print.m: print.m: Detabify.
 
 2010-03-16  Jaroslav Hajek  <highegg@gmail.com>
 
 	* general/nthroot.m: Remove.
 	* general/module.mk: Update.
diff --git a/scripts/plot/print.m b/scripts/plot/print.m
--- a/scripts/plot/print.m
+++ b/scripts/plot/print.m
@@ -105,17 +105,17 @@
 ##     Scalable vector graphics
 ##   @item pdf
 ##     Portable document format
 ##   @end table
 ##
 ##   If the device is omitted, it is inferred from the file extension,
 ## or if there is no filename it is sent to the printer as postscript.
 ##
-## @item -d@var{gs_device}
+## @item -d@var{ghostscript_device}
 ##   Additional devices are supported by Ghostscript.
 ## Some examples are;
 ##
 ##   @table @code
 ##   @item ljet2p 
 ##     HP LaserJet IIP
 ##   @item ljet3 
 ##     HP LaserJet III
@@ -134,16 +134,20 @@
 ##   For a complete list, type `system ("gs -h")' to see what formats
 ## and devices are available.
 ##
 ##   When the ghostscript is sent to a printer the size is determined
 ## by the figure's "papersize" property.  When the ghostscript output 
 ## is sent to a file the size is determined by the figure's
 ## "paperposition" property.
 ##
+## @itemx -append
+##   Appends the output to a pre-existing file. Presently only PDF,
+## and Postscript files are supported.
+##
 ## @itemx -r@var{NUM}
 ##   Resolution of bitmaps in pixels per inch.  For both metafiles and 
 ## SVG the default is the screen resolution, for other it is 150 dpi.
 ## To specify screen resolution, use "-r0".
 ##
 ## @item -tight
 ##   Forces a tight bounding box for eps-files.  Since the ghostscript
 ## devices are conversion of an eps-file, this option works the those
@@ -172,16 +176,17 @@
 ## Author: Daniel Heiserer <Daniel.heiserer@physik.tu-muenchen.de>
 ## Adapted-By: jwe
 
 function print (varargin)
 
   persistent warn_on_inconsistent_orientation = true
   orientation = "";
   use_color = 0; # 0=default, -1=mono, +1=color
+  append_to_file = 0;
   force_solid = 0; # 0=default, -1=dashed, +1=solid
   fontsize = "";
   font = "";
   canvas_size = "";
   name = "";
   devopt = "";
   printer = "";
   debug = false;
@@ -213,16 +218,18 @@ function print (varargin)
     ##   plot(...); print(...);
     drawnow ();
 
     for i = 1:nargin
       arg = varargin{i};
       if (ischar (arg))
         if (strcmp (arg, "-color"))
           use_color = 1;
+        elseif (strcmp (arg, "-append"))
+          append_to_file = 1;
         elseif (strcmp (arg, "-mono"))
           use_color = -1;
         elseif (strcmp (arg, "-solid"))
           force_solid = 1;
         elseif (strcmp (arg, "-dashed"))
           force_solid = -1;
         elseif (strcmp (arg, "-portrait"))
           orientation = "portrait";
@@ -297,16 +304,30 @@ function print (varargin)
         error ("print: no format specified");
       else
         dev = tolower (name(dot+1:end));
       endif
     else
       dev = devopt;
     endif
 
+    if (append_to_file)
+      if (any (strcmpi (dev, {"ps", "ps2", "psc", "psc2", "pdf"})))
+        if (have_ghostscript)
+          file_exists = ((numel (dir (name)) == 1) && (! isdir (name)));
+          if (! file_exists)
+            append_to_file = 0;
+          end
+        end
+      else
+        warning ("print.m: appended output is not supported for device '%s'", dev)
+        append_to_file = 0;
+      endif
+    endif
+
     if (strcmp (dev, "tex"))
       dev = "epslatex";
       ## gnuplot 4.0 wants ".eps" in the output name    
       if (! __gnuplot_has_feature__ ("epslatex_implies_eps_filesuffix"))
         name = cstrcat (name(1:dot), "eps");
       endif
     elseif (strcmp (dev, "ill"))
       dev = "aifm";
@@ -630,21 +651,44 @@ function print (varargin)
           set (gcf, "paperposition", paperposition_in_inches([2, 1, 4, 3]));
         else
           set (gcf, "paperposition", paperposition_in_inches);
         endif
       endif
       if (use_color < 0)
         [objs_with_color, color_of_objs] = convert_color2mono (gcf);
       endif
+    if (append_to_file)
+         appended_file_name = name;
+         if (index(termn, "pdf"))
+           name = cstrcat (tmpnam, ".pdf");
+           temp_name = cstrcat (tmpnam, ".pdf");
+           ghostscript_device = "pdfwrite";
+         else
+           name = cstrcat (tmpnam, ".ps");
+           temp_name = cstrcat (tmpnam, ".ps");
+           ghostscript_device = "pswrite";
+         endif
+    endif
       if (debug)
         drawnow (new_terminal, name, mono, debug_file);
       else
         drawnow (new_terminal, name, mono);
       endif
+      if (append_to_file)
+        ghostscript_options = "-q -dBATCH -dSAFER -dNOPAUSE";
+        command = sprintf ("%s %s -sDEVICE=%s -sOutputFile=%s %s %s -q", ...
+                    ghostscript_binary, ghostscript_options, ghostscript_device,  ...
+                    temp_name, appended_file_name, name);
+        status1 = system (command);
+        status2 = system (sprintf ("mv %s %s", temp_name, appended_file_name));
+        if (status1 != 0 || status2 != 0)
+          error ("print.m: output failed to append to '%s'.", appended_file_name);
+        endif
+      endif
     unwind_protect_cleanup
       ## FIXME - it would be nice to delete "__pixels_per_inch__" property here.
       if (restore_properties)
         props = fieldnames (p);
         for n = 1:numel(props)
           set (gcf, props{n}, p.(props{n}))
         endfor
       endif
