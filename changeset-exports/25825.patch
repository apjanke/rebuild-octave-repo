# HG changeset patch
# User Marco Caliari <marco.caliari@univr.it>
# Date 1535030830 -7200
#      Thu Aug 23 15:27:10 2018 +0200
# Branch stable
# Node ID b7e0ed1b2b32995ac2a7fc9ffda805a9d017d66b
# Parent  182a8207a31333ff977038c8578275c1c01ddad2
Fix inaccurate result of gammainc for x large (bug #54550).

* gammainc.m: Remove condition "| (a < 5)" from case 8, add a BIST test.

diff --git a/scripts/specfun/gammainc.m b/scripts/specfun/gammainc.m
--- a/scripts/specfun/gammainc.m
+++ b/scripts/specfun/gammainc.m
@@ -197,17 +197,17 @@ function y = gammainc (x, a, tail = "low
   endif
 
   ## For a < 2, x < 0, we increment a by 2 and use a recurrence formula after
   ## the computations.
 
   flag_a_small = todo & (abs (a) > 0) & (abs (a) < 2) & (x < 0);
   a(flag_a_small) += 2;
 
-  flag_s = (((x + 0.25 < a) | (x < 0) | (a < 5)) & (x > -20)) | (abs (x) < 1);
+  flag_s = (((x + 0.25 < a) | (x < 0)) & (x > -20)) | (abs (x) < 1);
 
   ## Case 8: x, a relatively small.
   idx = todo & flag_s;
   if (any (idx))
     y(idx) = gammainc_s (x(idx), a(idx), tail);
     todo(idx) = false;
   endif
 
@@ -332,17 +332,17 @@ function y = gammainc_an (x, a, tail)
     y .*= exp (-x);
   elseif (strcmp (tail, "scaledlower"))
     y = (1 - exp (-x) .* y) ./ D(x, a);
   elseif (strcmp (tail, "scaledupper"))
     y .*= exp (-x) ./ D(x, a);
   endif
 endfunction
 
-## x + 0.25 < a | x < 0 | x not real | abs(x) < 1 | a < 5.
+## x + 0.25 < a | x < 0 | abs(x) < 1.
 ## Numerical Recipes in Fortran 77 (6.2.5)
 ## series
 function y = gammainc_s (x, a, tail)
   if (strcmp (tail, "scaledlower") || strcmp (tail, "scaledupper"))
     y = ones (size (x), class (x));
     term = x ./ (a + 1);
   else
     ## Of course it is possible to scale at the end, but some tests fail.
@@ -489,17 +489,23 @@ endfunction
 %!         -10*eps);
 ## Matlab is better here than Octave
 %!assert (gammainc (751, 750, "upper"), 0.4805914320558831327179457887, -12*eps)
 %!assert (gammainc (200, 200, "upper"), 0.49059658199276367497217454, -5*eps)
 %!assert (gammainc (200, 200), 0.509403418007236325027825459574527043, -5*eps)
 %!assert (gammainc (200, 200, "scaledupper"), 17.3984438553791505135122900,
 %!       -2*eps)
 %!assert (gammainc (200, 200, "scaledlower"), 18.065406676779221643065, -7*eps)
-%!assert (gammainc (201, 200, "upper"), 0.46249244908276709524913736667, -7*eps)
+%!assert (gammainc (201, 200, "upper"), 0.46249244908276709524913736667,
+%!        -7*eps)
+%!assert <*54550> (gammainc (77, 2), 1)
+
+%!assert (gammainc (77, 2, "upper"), 0, -eps)
+%!assert (gammainc (1000, 3.1), 1)
+%!assert (gammainc (1000, 3.1, "upper"), 0)
 
 ## Test small argument
 %!assert (gammainc ([1e-05, 1e-07,1e-10,1e-14], 0.1), ...
 %!        [0.33239840504050, 0.20972940370977, 0.10511370061022, ...
 %!        0.041846517936723], 1e-13);
 
 %!assert (gammainc ([1e-05, 1e-07,1e-10,1e-14], 0.2), ...
 %!        [0.10891226058559, 0.043358823442178, 0.010891244210402, ...
