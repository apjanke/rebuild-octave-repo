# HG changeset patch
# User Jacob Dawid <jacob.dawid@googlemail.com>
# Date 1311083623 -7200
#      Tue Jul 19 15:53:43 2011 +0200
# Node ID bace956a37249c8e3d372c6323bb1d86572da059
# Parent  86adc9c4ec4bd1eec4bf8582f7f6c0076488015e
Put history model part into OctaveLink.

diff --git a/gui/src/HistoryDockWidget.cpp b/gui/src/HistoryDockWidget.cpp
--- a/gui/src/HistoryDockWidget.cpp
+++ b/gui/src/HistoryDockWidget.cpp
@@ -21,42 +21,24 @@
 
 HistoryDockWidget::HistoryDockWidget (QWidget * parent):QDockWidget (parent)
 {
   setObjectName ("HistoryDockWidget");
   construct ();
 }
 
 void
-HistoryDockWidget::handleListViewItemDoubleClicked (QModelIndex modelIndex)
-{
-  QString command = m_historyListModel->data (modelIndex, 0).toString ();
-  emit commandDoubleClicked (command);
-}
-
-void
 HistoryDockWidget::construct ()
 {
-  m_historyListModel = new QStringListModel ();
   m_historyListView = new QListView (this);
-  m_historyListView->setModel (m_historyListModel);
+  m_historyListView->setModel (OctaveLink::instance ()->historyModel());
   m_historyListView->setAlternatingRowColors (true);
   m_historyListView->setEditTriggers (QAbstractItemView::NoEditTriggers);
   QHBoxLayout *layout = new QHBoxLayout ();
 
   setWindowTitle (tr ("Command History"));
   setWidget (new QWidget ());
 
   layout->addWidget (m_historyListView);
   layout->setMargin (2);
 
   widget ()->setLayout (layout);
-  //connect (m_historyListView, SIGNAL (doubleClicked (QModelIndex)), this,
-  //	   SLOT (handleListViewItemDoubleClicked (QModelIndex)));
 }
-
-void
-HistoryDockWidget::updateHistory (QStringList history)
-{/*
-  m_historyListModel->setStringList (history);
-  emit information (tr ("History updated."));
-  */
-}
diff --git a/gui/src/HistoryDockWidget.h b/gui/src/HistoryDockWidget.h
--- a/gui/src/HistoryDockWidget.h
+++ b/gui/src/HistoryDockWidget.h
@@ -16,31 +16,26 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
 #ifndef HISTORYDOCKWIDGET_H
 #define HISTORYDOCKWIDGET_H
 
 #include <QDockWidget>
 #include <QListView>
-#include <QStringListModel>
+#include "OctaveLink.h"
 
 class HistoryDockWidget:public QDockWidget
 {
 Q_OBJECT
 public:
   HistoryDockWidget (QWidget *parent = 0);
   void updateHistory (QStringList history);
 
 signals:
   void information (QString message);
-  void commandDoubleClicked (QString command);
-
-private slots:
-  void handleListViewItemDoubleClicked (QModelIndex modelIndex);
 
 private:
   void construct ();
   QListView *m_historyListView;
-  QStringListModel *m_historyListModel;
 };
 
 #endif // HISTORYDOCKWIDGET_H
diff --git a/gui/src/MainWindow.cpp b/gui/src/MainWindow.cpp
--- a/gui/src/MainWindow.cpp
+++ b/gui/src/MainWindow.cpp
@@ -252,18 +252,16 @@ MainWindow::construct ()
   setStatusBar (m_statusBar);
 
   readSettings ();
 
   connect (m_filesDockWidget, SIGNAL (openFile (QString)), this,
 	   SLOT (handleOpenFileRequest (QString)));
   connect (m_historyDockWidget, SIGNAL (information (QString)), this,
 	   SLOT (reportStatusMessage (QString)));
-  connect (m_historyDockWidget, SIGNAL (commandDoubleClicked (QString)), this,
-	   SLOT (handleCommandDoubleClicked (QString)));
   connect (m_variablesDockWidget, SIGNAL (saveWorkspace ()), this,
 	   SLOT (handleSaveWorkspaceRequest ()));
   connect (m_variablesDockWidget, SIGNAL (loadWorkspace ()), this,
 	   SLOT (handleLoadWorkspaceRequest ()));
   connect (m_variablesDockWidget, SIGNAL (clearWorkspace ()), this,
 	   SLOT (handleClearWorkspaceRequest ()));
 
   openWebPage ("http://www.gnu.org/software/octave/doc/interpreter/");
diff --git a/gui/src/MainWindow.h b/gui/src/MainWindow.h
--- a/gui/src/MainWindow.h
+++ b/gui/src/MainWindow.h
@@ -151,23 +151,17 @@ protected:
 	QList < SymbolRecord > symbolTable =
 	  OctaveLink::instance ()->currentSymbolTable ();
 	if (symbolTable.size ())
 	  {
 	    m_mainWindow->variablesDockWidget ()->
 	      setVariablesList (symbolTable);
 	  }
 
-	// Collect history list.
-        QStringList history = OctaveLink::instance ()->currentHistory ();
-        if (history.length ())
-	  {
-            m_mainWindow->historyDockWidget ()->updateHistory (history);
-	  }
-
+        OctaveLink::instance ()->updateHistoryModel ();
 	usleep (100000);
       }
   }
 private:
   MainWindow * m_mainWindow;
 };
 
 #endif // MAINWINDOW_H
diff --git a/gui/src/OctaveLink.cpp b/gui/src/OctaveLink.cpp
--- a/gui/src/OctaveLink.cpp
+++ b/gui/src/OctaveLink.cpp
@@ -27,16 +27,17 @@ 02110-1301, USA.
 OctaveLink
   OctaveLink::m_singleton;
 
 
 OctaveLink::OctaveLink ():QObject (), m_previousHistoryLength (0)
 {
   m_symbolTableSemaphore = new QSemaphore (1);
   m_historySemaphore = new QSemaphore (1);
+  m_historyModel = new QStringListModel (this);
 }
 
 OctaveLink::~OctaveLink ()
 {
 }
 
 int
 OctaveLink::readlineEventHook ()
@@ -113,56 +114,54 @@ OctaveLink::fetchSymbolTable ()
   std::list < SymbolRecord >::iterator iterator;
   for (iterator = allVariables.begin (); iterator != allVariables.end ();
        iterator++)
     m_symbolTableBuffer.append (iterator->dup ());
   m_symbolTableSemaphore->release ();
   emit symbolTableChanged ();
 }
 
-
-void
-OctaveLink::fetchHistory ()
-{
-  int currentLen = command_history::length ();
-  if (currentLen != m_previousHistoryLength)
-    {
-      m_historySemaphore->acquire ();
-      for (int i = m_previousHistoryLength; i < currentLen; i++)
-	{
-          QString entry = QString(command_history::get_entry (i).c_str());
-          if (!entry.startsWith ("#"))
-            m_historyBuffer.append (entry);
-	}
-      m_historySemaphore->release ();
-      m_previousHistoryLength = currentLen;
-      emit historyChanged ();
-    }
-}
-
 QList < SymbolRecord > OctaveLink::currentSymbolTable ()
 {
   QList < SymbolRecord > m_symbolTableCopy;
 
   // Generate a deep copy of the current symbol table.
   m_symbolTableSemaphore->acquire ();
   foreach (SymbolRecord symbolRecord, m_symbolTableBuffer)
     m_symbolTableCopy.append (symbolRecord.dup ());
   m_symbolTableSemaphore->release ();
 
   return m_symbolTableCopy;
 }
 
-QStringList
-OctaveLink::currentHistory ()
+
+void
+OctaveLink::updateHistoryModel ()
 {
-  m_historySemaphore->acquire ();
-  QStringList historyBuffer = m_historyBuffer;
-  m_historySemaphore->release ();
-  return historyBuffer;
+  // TODO: Use the following code to update the history model.
+  /*
+  int currentLen = command_history::length ();
+  if (currentLen != m_previousHistoryLength)
+    {
+      m_historySemaphore->acquire ();
+      for (int i = m_previousHistoryLength; i < currentLen; i++)
+        {
+          QString entry = QString(command_history::get_entry (i).c_str());
+          if (!entry.startsWith ("#"))
+            m_historyBuffer.append (entry);
+        }
+      m_historySemaphore->release ();
+      m_previousHistoryLength = currentLen;
+    }
+    */
+}
+
+QStringListModel *
+OctaveLink::historyModel ()
+{
+  return m_historyModel;
 }
 
 void
 OctaveLink::processOctaveServerData ()
 {
   fetchSymbolTable ();
-  fetchHistory ();
 }
diff --git a/gui/src/OctaveLink.h b/gui/src/OctaveLink.h
--- a/gui/src/OctaveLink.h
+++ b/gui/src/OctaveLink.h
@@ -74,16 +74,17 @@
 #include <QMutex>
 #include <QFileInfo>
 #include <QList>
 #include <QString>
 #include <QStringList>
 #include <QVector>
 #include <QSemaphore>
 #include <QObject>
+#include <QStringListModel>
 
 typedef symbol_table::symbol_record SymbolRecord;
 typedef octave_value OctaveValue;
 
 /**
   * \class OctaveLink
   * Manages a link to an octave instance.
   */
@@ -102,53 +103,44 @@ public:
   octaveValueAsQString (OctaveValue octaveValue);
 
   /**
     * Returns a copy of the current symbol table buffer.
     * \return Copy of the current symbol table buffer.
     */
   QList < SymbolRecord > currentSymbolTable ();
 
-  /**
-    * Returns a copy of the current history buffer.
-    * \return Copy of the current history buffer.
-    */
-  QStringList
-  currentHistory ();
+  void
+  updateHistoryModel ();
+
+  QStringListModel *
+  historyModel ();
 
   void
   processOctaveServerData ();
 
   /**
     * Updates the current symbol table with new data
     * from octave.
     */
   void
   fetchSymbolTable ();
 
-  /**
-    * Updates the current history buffer with new data
-    * from octave.
-    */
-  void
-  fetchHistory ();
-
 signals:
   void
   symbolTableChanged ();
-  void
-  historyChanged ();
 
 private:
   OctaveLink ();
   ~OctaveLink ();
 
   /** Variable related member variables. */
   QSemaphore * m_symbolTableSemaphore;
   QList < SymbolRecord > m_symbolTableBuffer;
 
   /** History related member variables. */
+  QStringListModel *m_historyModel;
   QSemaphore *m_historySemaphore;
   QStringList m_historyBuffer;
   int m_previousHistoryLength;
   static OctaveLink m_singleton;
 };
 #endif // OCTAVELINK_H
