# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1454561089 18000
#      Wed Feb 03 23:44:49 2016 -0500
# Node ID 7f35125714b43aa57267974a48cec503ec93a773
# Parent  c784207fe0b69db2e2eb183570372f92c716a09e
don't install some internal headers and template sources

* sparse-chol-inst.cc: Delete.
Instantiate needed classes and functions in sparse-chol.cc.

* sparse-lu-inst.cc: Delete.
Instantiate needed classes and functions in sparse-lu.cc.

* sparse-qr-inst.cc: Delete.
Instantiate needed classes and functions in sparse-qr.cc.

* sighandlers.h: Include sys/types.h.
Don't include syswait.h or siglist.h

* sparse-chol.h, sparse-qr.h: Don't include oct-sparse.h.

* symbfact.cc, sparse-dmsolve.cc: Include oct-sparse.h.
* octave.cc: Include siglist.h.

* liboctave/numeric/module.mk: Don't install sparse-chol.cc,
sparse-lu.cc, or sparse-qr.cc with header files.

* liboctave/util/module.mk: Don't install oct-sparse.h.

* liboctave/system/module.mk: Don't install pathlen.h, sysdir.h, or
syswait.h header files.

diff --git a/libinterp/corefcn/sighandlers.h b/libinterp/corefcn/sighandlers.h
--- a/libinterp/corefcn/sighandlers.h
+++ b/libinterp/corefcn/sighandlers.h
@@ -31,21 +31,19 @@ Free Software Foundation, Inc.
 // This file should always be included after config.h!
 
 #if ! defined (octave_sighandlers_h)
 #define octave_sighandlers_h 1
 
 // Include signal.h, not csignal since the latter might only define
 // the ANSI standard C signal interface.
 
+#include <sys/types.h>
 #include <signal.h>
 
-#include "syswait.h"
-#include "siglist.h"
-
 #include "base-list.h"
 
 typedef void sig_handler (int);
 
 // FIXME: the data should probably be private...
 
 struct
 octave_interrupt_handler
diff --git a/libinterp/dldfcn/symbfact.cc b/libinterp/dldfcn/symbfact.cc
--- a/libinterp/dldfcn/symbfact.cc
+++ b/libinterp/dldfcn/symbfact.cc
@@ -20,20 +20,21 @@ along with Octave; see the file COPYING.
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
-#include "sparse-chol.h"
+#include "oct-locbuf.h"
+#include "oct-sparse.h"
 #include "oct-spparms.h"
+#include "sparse-chol.h"
 #include "sparse-util.h"
-#include "oct-locbuf.h"
 
 #include "ov-re-sparse.h"
 #include "ov-cx-sparse.h"
 #include "defun-dld.h"
 #include "error.h"
 #include "errwarn.h"
 #include "ovl.h"
 #include "utils.h"
diff --git a/libinterp/octave.cc b/libinterp/octave.cc
--- a/libinterp/octave.cc
+++ b/libinterp/octave.cc
@@ -69,16 +69,17 @@ along with Octave; see the file COPYING.
 #include "options-usage.h"
 #include "ov.h"
 #include "ov-classdef.h"
 #include "ov-range.h"
 #include "toplev.h"
 #include "parse.h"
 #include "procstream.h"
 #include "sighandlers.h"
+#include "siglist.h"
 #include "sysdep.h"
 #include "unwind-prot.h"
 #include "utils.h"
 #include "variables.h"
 #include <version.h>
 
 // Kluge.
 extern "C" F77_RET_T
diff --git a/liboctave/numeric/module.mk b/liboctave/numeric/module.mk
--- a/liboctave/numeric/module.mk
+++ b/liboctave/numeric/module.mk
@@ -102,21 +102,24 @@ NUMERIC_SRC = \
   liboctave/numeric/DASPK.cc \
   liboctave/numeric/DASRT.cc \
   liboctave/numeric/DASSL.cc \
   liboctave/numeric/dbleAEPBAL.cc \
   liboctave/numeric/dbleCHOL.cc \
   liboctave/numeric/dbleGEPBAL.cc \
   liboctave/numeric/dbleHESS.cc \
   liboctave/numeric/dbleLU.cc \
+  liboctave/numeric/EIG.cc \
+  liboctave/numeric/LSODE.cc \
+  liboctave/numeric/ODES.cc \
+  liboctave/numeric/Quad.cc \
   liboctave/numeric/dbleQR.cc \
   liboctave/numeric/dbleQRP.cc \
   liboctave/numeric/dbleSCHUR.cc \
   liboctave/numeric/dbleSVD.cc \
-  liboctave/numeric/EIG.cc \
   liboctave/numeric/fCmplxAEPBAL.cc \
   liboctave/numeric/fCmplxCHOL.cc \
   liboctave/numeric/fCmplxGEPBAL.cc \
   liboctave/numeric/fCmplxHESS.cc \
   liboctave/numeric/fCmplxLU.cc \
   liboctave/numeric/fCmplxQR.cc \
   liboctave/numeric/fCmplxQRP.cc \
   liboctave/numeric/fCmplxSCHUR.cc \
@@ -128,37 +131,31 @@ NUMERIC_SRC = \
   liboctave/numeric/floatHESS.cc \
   liboctave/numeric/floatLU.cc \
   liboctave/numeric/floatQR.cc \
   liboctave/numeric/floatQRP.cc \
   liboctave/numeric/floatSCHUR.cc \
   liboctave/numeric/floatSVD.cc \
   liboctave/numeric/lo-mappers.cc \
   liboctave/numeric/lo-specfun.cc \
-  liboctave/numeric/LSODE.cc \
   liboctave/numeric/oct-convn.cc \
   liboctave/numeric/oct-fftw.cc \
   liboctave/numeric/oct-norm.cc \
   liboctave/numeric/oct-rand.cc \
   liboctave/numeric/oct-spparms.cc \
-  liboctave/numeric/ODES.cc \
-  liboctave/numeric/Quad.cc \
-  liboctave/numeric/sparse-chol-inst.cc \
-  liboctave/numeric/sparse-lu-inst.cc \
-  liboctave/numeric/sparse-qr-inst.cc \
+  liboctave/numeric/sparse-chol.cc \
+  liboctave/numeric/sparse-lu.cc \
+  liboctave/numeric/sparse-qr.cc \
   $(NUMERIC_C_SRC)
 
 LIBOCTAVE_TEMPLATE_SRC += \
   liboctave/numeric/base-lu.cc \
   liboctave/numeric/base-qr.cc \
   liboctave/numeric/bsxfun-defs.cc \
   liboctave/numeric/eigs-base.cc \
-  liboctave/numeric/sparse-chol.cc \
-  liboctave/numeric/sparse-lu.cc \
-  liboctave/numeric/sparse-qr.cc \
   liboctave/numeric/sparse-dmsolve.cc
 
 ## Special rules for sources which must be built before rest of compilation.
 $(LIBOCTAVE_OPT_INC) : %.h : %.in
 	$(AM_V_GEN)rm -f $@-t $@ && \
 	$(PERL) $(top_srcdir)/build-aux/mk-opts.pl --opt-class-header $< > $@-t && \
 	mv $@-t $@
 
diff --git a/liboctave/numeric/sparse-chol-inst.cc b/liboctave/numeric/sparse-chol-inst.cc
deleted file mode 100644
--- a/liboctave/numeric/sparse-chol-inst.cc
+++ /dev/null
@@ -1,38 +0,0 @@
-/*
-
-Copyright (C) 2016 John W. Eaton
-
-This file is part of Octave.
-
-Octave is free software; you can redistribute it and/or modify it
-under the terms of the GNU General Public License as published by the
-Free Software Foundation; either version 3 of the License, or (at your
-option) any later version.
-
-Octave is distributed in the hope that it will be useful, but WITHOUT
-ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
-FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
-for more details.
-
-You should have received a copy of the GNU General Public License
-along with Octave; see the file COPYING.  If not, see
-<http://www.gnu.org/licenses/>.
-
-*/
-
-#ifdef HAVE_CONFIG_H
-#include <config.h>
-#endif
-
-#include "sparse-chol.h"
-#include "sparse-chol.cc"
-
-template class sparse_chol<SparseMatrix>;
-
-template class sparse_chol<SparseComplexMatrix>;
-
-template SparseMatrix
-chol2inv<SparseMatrix> (const SparseMatrix& r);
-
-template SparseComplexMatrix
-chol2inv<SparseComplexMatrix> (const SparseComplexMatrix& r);
diff --git a/liboctave/numeric/sparse-chol.cc b/liboctave/numeric/sparse-chol.cc
--- a/liboctave/numeric/sparse-chol.cc
+++ b/liboctave/numeric/sparse-chol.cc
@@ -561,8 +561,20 @@ chol2inv (const chol_type& r)
 // different from the default).
 
 template <>
 sparse_chol<SparseComplexMatrix>::sparse_chol (const SparseComplexMatrix& a,
                                                octave_idx_type& info)
   : rep (new typename
          sparse_chol<SparseComplexMatrix>::sparse_chol_rep (a, info, true, false))
 { }
+
+// Instantiations we need.
+
+template class sparse_chol<SparseMatrix>;
+
+template class sparse_chol<SparseComplexMatrix>;
+
+template SparseMatrix
+chol2inv<SparseMatrix> (const SparseMatrix& r);
+
+template SparseComplexMatrix
+chol2inv<SparseComplexMatrix> (const SparseComplexMatrix& r);
diff --git a/liboctave/numeric/sparse-chol.h b/liboctave/numeric/sparse-chol.h
--- a/liboctave/numeric/sparse-chol.h
+++ b/liboctave/numeric/sparse-chol.h
@@ -23,17 +23,16 @@ along with Octave; see the file COPYING.
 */
 
 #if ! defined (octave_sparse_chol_h)
 #define octave_sparse_chol_h 1
 
 #include "CSparse.h"
 #include "dColVector.h"
 #include "dSparse.h"
-#include "oct-sparse.h"
 
 // If the sparse matrix classes become templated on the element type
 // (i.e., sparse_matrix<double>), then it might be best to make the
 // template parameter of this class also be the element type instead
 // of the matrix type.
 
 template <typename chol_type>
 class
diff --git a/liboctave/numeric/sparse-dmsolve.cc b/liboctave/numeric/sparse-dmsolve.cc
--- a/liboctave/numeric/sparse-dmsolve.cc
+++ b/liboctave/numeric/sparse-dmsolve.cc
@@ -24,21 +24,22 @@ along with Octave; see the file COPYING.
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <vector>
 
 #include "MArray.h"
 #include "MSparse.h"
-#include "sparse-qr.h"
 #include "MatrixType.h"
+#include "oct-inttypes.h"
+#include "oct-locbuf.h"
 #include "oct-sort.h"
-#include "oct-locbuf.h"
-#include "oct-inttypes.h"
+#include "oct-sparse.h"
+#include "sparse-qr.h"
 
 template <typename T>
 static MSparse<T>
 dmsolve_extract (const MSparse<T> &A, const octave_idx_type *Pinv,
                  const octave_idx_type *Q, octave_idx_type rst,
                  octave_idx_type rend, octave_idx_type cst,
                  octave_idx_type cend, octave_idx_type maxnz = -1,
                  bool lazy = false)
diff --git a/liboctave/numeric/sparse-lu-inst.cc b/liboctave/numeric/sparse-lu-inst.cc
deleted file mode 100644
--- a/liboctave/numeric/sparse-lu-inst.cc
+++ /dev/null
@@ -1,32 +0,0 @@
-/*
-
-Copyright (C) 2016 John W. Eaton
-
-This file is part of Octave.
-
-Octave is free software; you can redistribute it and/or modify it
-under the terms of the GNU General Public License as published by the
-Free Software Foundation; either version 3 of the License, or (at your
-option) any later version.
-
-Octave is distributed in the hope that it will be useful, but WITHOUT
-ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
-FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
-for more details.
-
-You should have received a copy of the GNU General Public License
-along with Octave; see the file COPYING.  If not, see
-<http://www.gnu.org/licenses/>.
-
-*/
-
-#ifdef HAVE_CONFIG_H
-#include <config.h>
-#endif
-
-#include "sparse-lu.h"
-#include "sparse-lu.cc"
-
-template class sparse_lu<SparseMatrix>;
-
-template class sparse_lu<SparseComplexMatrix>;
diff --git a/liboctave/numeric/sparse-lu.cc b/liboctave/numeric/sparse-lu.cc
--- a/liboctave/numeric/sparse-lu.cc
+++ b/liboctave/numeric/sparse-lu.cc
@@ -885,8 +885,14 @@ sparse_lu<lu_type>::Pc_vec (void) const
 }
 
 template <typename lu_type>
 PermMatrix
 sparse_lu<lu_type>::Pc_mat (void) const
 {
   return PermMatrix (Q, true);
 }
+
+// Instantiations we need.
+
+template class sparse_lu<SparseMatrix>;
+
+template class sparse_lu<SparseComplexMatrix>;
diff --git a/liboctave/numeric/sparse-qr-inst.cc b/liboctave/numeric/sparse-qr-inst.cc
deleted file mode 100644
--- a/liboctave/numeric/sparse-qr-inst.cc
+++ /dev/null
@@ -1,32 +0,0 @@
-/*
-
-Copyright (C) 2016 John W. Eaton
-
-This file is part of Octave.
-
-Octave is free software; you can redistribute it and/or modify it
-under the terms of the GNU General Public License as published by the
-Free Software Foundation; either version 3 of the License, or (at your
-option) any later version.
-
-Octave is distributed in the hope that it will be useful, but WITHOUT
-ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
-FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
-for more details.
-
-You should have received a copy of the GNU General Public License
-along with Octave; see the file COPYING.  If not, see
-<http://www.gnu.org/licenses/>.
-
-*/
-
-#ifdef HAVE_CONFIG_H
-#include <config.h>
-#endif
-
-#include "sparse-qr.h"
-#include "sparse-qr.cc"
-
-template class sparse_qr<SparseMatrix>;
-
-template class sparse_qr<SparseComplexMatrix>;
diff --git a/liboctave/numeric/sparse-qr.cc b/liboctave/numeric/sparse-qr.cc
--- a/liboctave/numeric/sparse-qr.cc
+++ b/liboctave/numeric/sparse-qr.cc
@@ -21,18 +21,19 @@ along with Octave; see the file COPYING.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "lo-error.h"
+#include "oct-locbuf.h"
+#include "oct-sparse.h"
 #include "sparse-qr.h"
-#include "oct-locbuf.h"
 
 template <typename SPARSE_T>
 class
 cxsparse_types
 {
 public:
   typedef void symbolic_type;
   typedef void numeric_type;
@@ -2247,8 +2248,14 @@ qrsolve (const SparseComplexMatrix& a, c
 }
 
 SparseComplexMatrix
 qrsolve (const SparseComplexMatrix& a, const SparseComplexMatrix& b,
          octave_idx_type& info)
 {
   return sparse_qr<SparseComplexMatrix>::solve<SparseComplexMatrix, SparseComplexMatrix> (a, b, info);
 }
+
+// Instantiations we need.
+
+template class sparse_qr<SparseMatrix>;
+
+template class sparse_qr<SparseComplexMatrix>;
diff --git a/liboctave/numeric/sparse-qr.h b/liboctave/numeric/sparse-qr.h
--- a/liboctave/numeric/sparse-qr.h
+++ b/liboctave/numeric/sparse-qr.h
@@ -23,17 +23,16 @@ along with Octave; see the file COPYING.
 
 #if ! defined (octave_sparse_qr_h)
 #define octave_sparse_qr_h 1
 
 #include "dMatrix.h"
 #include "CMatrix.h"
 #include "dSparse.h"
 #include "CSparse.h"
-#include "oct-sparse.h"
 
 // If the sparse matrix classes become templated on the element type
 // (i.e., sparse_matrix<double>), then it might be best to make the
 // template parameter of this class also be the element type instead
 // of the matrix type.
 
 template <typename SPARSE_T>
 class
diff --git a/liboctave/system/module.mk b/liboctave/system/module.mk
--- a/liboctave/system/module.mk
+++ b/liboctave/system/module.mk
@@ -5,33 +5,36 @@ SYSTEM_INC = \
   liboctave/system/lo-sysdep.h \
   liboctave/system/mach-info.h \
   liboctave/system/oct-env.h \
   liboctave/system/oct-group.h \
   liboctave/system/oct-openmp.h \
   liboctave/system/oct-passwd.h \
   liboctave/system/oct-syscalls.h \
   liboctave/system/oct-time.h \
-  liboctave/system/oct-uname.h \
+  liboctave/system/oct-uname.h
+
+NOINSTALL_SYSTEM_INC = \
   liboctave/system/pathlen.h \
   liboctave/system/sysdir.h \
   liboctave/system/syswait.h
 
 SYSTEM_SRC = \
   liboctave/system/dir-ops.cc \
   liboctave/system/file-ops.cc \
   liboctave/system/file-stat.cc \
   liboctave/system/lo-sysdep.cc \
   liboctave/system/mach-info.cc \
   liboctave/system/oct-env.cc \
   liboctave/system/oct-group.cc \
   liboctave/system/oct-passwd.cc \
   liboctave/system/oct-syscalls.cc \
   liboctave/system/oct-time.cc \
-  liboctave/system/oct-uname.cc
+  liboctave/system/oct-uname.cc \
+  $(NOINSTALL_SYSTEM_INC)
 
 noinst_LTLIBRARIES += liboctave/system/libsystem.la
 
 liboctave_system_libsystem_la_SOURCES = $(SYSTEM_SRC)
 
 liboctave_system_libsystem_la_CPPFLAGS = $(liboctave_liboctave_la_CPPFLAGS)
 
 liboctave_system_libsystem_la_CFLAGS = $(liboctave_liboctave_la_CFLAGS)
diff --git a/liboctave/util/module.mk b/liboctave/util/module.mk
--- a/liboctave/util/module.mk
+++ b/liboctave/util/module.mk
@@ -24,28 +24,30 @@ UTIL_INC = \
   liboctave/util/oct-inttypes.h \
   liboctave/util/oct-locbuf.h \
   liboctave/util/oct-mutex.h \
   liboctave/util/oct-refcount.h \
   liboctave/util/oct-rl-edit.h \
   liboctave/util/oct-rl-hist.h \
   liboctave/util/oct-shlib.h \
   liboctave/util/oct-sort.h \
-  liboctave/util/oct-sparse.h \
   liboctave/util/pathsearch.h \
   liboctave/util/lo-regexp.h \
   liboctave/util/singleton-cleanup.h \
   liboctave/util/sparse-sort.h \
   liboctave/util/sparse-util.h \
   liboctave/util/statdefs.h \
   liboctave/util/str-vec.h \
   liboctave/util/sun-utils.h \
   liboctave/util/unwind-prot.h \
   liboctave/util/url-transfer.h
 
+NOINSTALL_UTIL_INC = \
+  liboctave/util/oct-sparse.h
+
 UTIL_C_SRC = \
   liboctave/util/f2c-main.c \
   liboctave/util/lo-cutils.c \
   liboctave/util/oct-rl-edit.c \
   liboctave/util/oct-rl-hist.c
 
 UTIL_SRC = \
   liboctave/util/cmd-edit.cc \
@@ -65,17 +67,18 @@ UTIL_SRC = \
   liboctave/util/pathsearch.cc \
   liboctave/util/lo-regexp.cc \
   liboctave/util/singleton-cleanup.cc \
   liboctave/util/sparse-sort.cc \
   liboctave/util/sparse-util.cc \
   liboctave/util/str-vec.cc \
   liboctave/util/unwind-prot.cc \
   liboctave/util/url-transfer.cc \
-  $(UTIL_C_SRC)
+  $(UTIL_C_SRC) \
+  $(NOINSTALL_UTIL_INC)
 
 LIBOCTAVE_TEMPLATE_SRC += \
   liboctave/util/oct-sort.cc
 
 EXTRA_DIST += \
   liboctave/util/kpse.cc
 
 noinst_LTLIBRARIES += liboctave/util/libutil.la
