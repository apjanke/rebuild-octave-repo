# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1289985344 18000
#      Wed Nov 17 04:15:44 2010 -0500
# Node ID 9c19b450b254f4abda5db5a85faa21c0ca42b561
# Parent  fd18ba11af577b57414d8ef6523c3b68062aa4e7
strchr.m: style fixes

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,12 +1,16 @@
 2010-11-17  Kim Hansen  <kim@ange.dk>
 
 	* strings/strchr.m: New tests.
 
+2010-11-17  John W. Eaton  <jwe@octave.org>
+
+	* strings/strchr.m: Style fixes.
+
 2010-11-16  Ben Abbott <bpabbott@mac.com>
 
 	* miscellaneous/unimplemented.m: Update unimplemented functions list.
 
 2010-11-15  Rik  <octave@nomad.inbox5.com>
 
 	* plot/saveas.m: Add function name to error messages.  Use semicolons
 	to prevent unnecessary output.  Use common terms 'ext' for extension
diff --git a/scripts/strings/strchr.m b/scripts/strings/strchr.m
--- a/scripts/strings/strchr.m
+++ b/scripts/strings/strchr.m
@@ -15,20 +15,19 @@
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {@var{idx} =} strchr (@var{str}, @var{chars})
 ## @deftypefnx {Function File} {@var{idx} =} strchr (@var{str}, @var{chars}, @var{n})
 ## @deftypefnx {Function File} {@var{idx} =} strchr (@var{str}, @var{chars}, @var{n}, @var{direction})
-## Search for the string @var{str} for occurrences of characters from the set
-## @var{chars}.
-## The return value, as well as the @var{n} and @var{direction} arguments behave
-## identically as in @code{find}.
+## Search for the string @var{str} for occurrences of characters from
+## the set @var{chars}.  The return value, as well as the @var{n} and
+## @var{direction} arguments behave identically as in @code{find}.
 ##
 ## This will be faster than using regexp in most cases.
 ##
 ## @seealso{find}
 ## @end deftypefn
 
 function varargout = strchr (str, chars, varargin)
   if (nargin < 2 || ! ischar (str) || ! ischar (chars))
@@ -39,22 +38,24 @@ function varargout = strchr (str, chars,
   elseif (length (chars) <= 6)
     ## With a few characters, it pays off to build the mask incrementally.
     ## We do it via a for loop to save memory.
     mask = str == chars(1);
     for i = 2:length (chars)
       mask |= str == chars(i);
     endfor
   else
-    ## Index the str into a mask of valid values. This is slower than it could be
-    ## because of the +1 issue.
+    ## Index the str into a mask of valid values.  This is slower than
+    ## it could be because of the +1 issue.
     f = false (1, 256);
     f(chars + 1) = true;
-    si = uint32 (str); # default goes via double - unnecessarily long.
-    ++si; # in-place
+    ## Default goes via double -- unnecessarily long.
+    si = uint32 (str);
+    ## in-place
+    ++si;
     mask = reshape (f(si), size (str));
   endif
   varargout = cell (1, nargout);
   varargout{1} = [];
   [varargout{:}] = find (mask, varargin{:});
 endfunction 
 
 %!assert(strchr("Octave is the best software",""),zeros(1,0))
