# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1267637550 18000
#      Wed Mar 03 12:32:30 2010 -0500
# Node ID 8a551f02f10d56a860137d04283b6f47de412fd7
# Parent  5af0b4bb384d14efd7e449fdb7caae553cfd2f82
oct-convn.cc (convolve): cast int constant to octave_idx_type in call to std::max

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+2010-03-03  John W. Eaton  <jwe@octave.org>
+
+	* oct-convn.cc (convolve): Cast int constant to octave_idx_type in
+	call to std::max.
+
 2010-03-03  Jaroslav Hajek  <highegg@gmail.com>
 
 	* oct-convn.cc (convolve_2d_axpy_kernel, convolve_2d_axpy): Remove.
 	(convolve_2d): Forward to Fortran implementations, add inner flag.
 	(convolve_nd): Handle inner-convolution case.
 	(convolve): Ditto.
 
 2010-03-02  Jaroslav Hajek  <highegg@gmail.com>
diff --git a/liboctave/oct-convn.cc b/liboctave/oct-convn.cc
--- a/liboctave/oct-convn.cc
+++ b/liboctave/oct-convn.cc
@@ -113,19 +113,21 @@ convolve (const MArray<T>& a, const MArr
 
   int nd = std::max (a.ndims (), b.ndims ());
   const dim_vector adims = a.dims ().redim (nd), bdims = b.dims ().redim (nd);
   dim_vector cdims = dim_vector::alloc (nd);
 
   for (int i = 0; i < nd; i++)
     {
       if (ct == convn_valid)
-        cdims(i) = std::max (adims(i) - bdims(i) + 1, 0);
+        cdims(i) = std::max (adims(i) - bdims(i) + 1,
+                             static_cast<octave_idx_type> (0));
       else
-        cdims(i) = std::max (adims(i) + bdims(i) - 1, 0);
+        cdims(i) = std::max (adims(i) + bdims(i) - 1,
+                             static_cast<octave_idx_type> (0));
     }
 
   MArray<T> c (cdims, T());
 
   convolve_nd<T, R> (a.fortran_vec (), adims, adims.cumulative (),
                      b.fortran_vec (), bdims, bdims.cumulative (),
                      c.fortran_vec (), cdims.cumulative (), nd, ct == convn_valid);
 
