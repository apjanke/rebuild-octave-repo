# HG changeset patch
# User Rik <rik@octave.org>
# Date 1389937447 28800
#      Thu Jan 16 21:44:07 2014 -0800
# Node ID 2ed9498e4a74be0c8e58244ea05c2fc1c0ea9cca
# Parent  4718af222d9dc7dbd9b5932d1725c9a1864831d8
Change diagonal of FaceColor interpolation for patch objects to match Matlab.

* gl-render.cc (draw_patch): Reverse order of vertices passed to OpenGL for
FaceColor tesselator.

diff --git a/libinterp/corefcn/gl-render.cc b/libinterp/corefcn/gl-render.cc
--- a/libinterp/corefcn/gl-render.cc
+++ b/libinterp/corefcn/gl-render.cc
@@ -2332,16 +2332,24 @@ opengl_renderer::draw_patch (const patch
           for (int i = 0; i < nf; i++)
             {
               if (clip_f(i))
                 continue;
 
               tess.begin_polygon (true);
               tess.begin_contour ();
 
+              // Add vertices in reverse order for Matlab compatibility
+              for (int j = count_f(i)-1; j > 0; j--)
+                {
+                  vertex_data::vertex_data_rep *vv = vdata[i+j*fr].get_rep ();
+
+                  tess.add_vertex (vv->coords.fortran_vec (), vv);
+                }
+
               if (count_f(i) > 0)
                 {
                   vertex_data::vertex_data_rep *vv = vdata[i].get_rep ();
 
                   if (fc_mode == 1)
                     {
                       // For "flat" shading, use color of 1st vertex.
                       Matrix col = vv->color;
@@ -2362,24 +2370,16 @@ opengl_renderer::draw_patch (const patch
                               glMaterialfv (LIGHT_MODE, GL_DIFFUSE, cb);
                             }
                         }
                     }
 
                   tess.add_vertex (vv->coords.fortran_vec (), vv);
                 }
 
-              // Add remaining vertices.
-              for (int j = 1; j < count_f(i); j++)
-                {
-                  vertex_data::vertex_data_rep *vv = vdata[i+j*fr].get_rep ();
-
-                  tess.add_vertex (vv->coords.fortran_vec (), vv);
-                }
-
               tess.end_contour ();
               tess.end_polygon ();
             }
 
           if (fl_mode > 0)
             glDisable (GL_LIGHTING);
         }
       else
