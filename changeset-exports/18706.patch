# HG changeset patch
# User Rik <rik@octave.org>
# Date 1398871448 25200
#      Wed Apr 30 08:24:08 2014 -0700
# Node ID ec55f6870efb550e590197b504e968668576c0e2
# Parent  60df2fd04293d2d5bec8d7d034a11d8b1013de5a
Fix incorrect log axis minor ticks when axis range > 8 orders of magnitude (bug #39449).

* graphics.cc (axes::properties::calc_ticks_and_lims): Always use a tick
separation of 1 order of magnitude for logscale plots.

diff --git a/libinterp/corefcn/graphics.cc b/libinterp/corefcn/graphics.cc
--- a/libinterp/corefcn/graphics.cc
+++ b/libinterp/corefcn/graphics.cc
@@ -6419,46 +6419,44 @@ axes::properties::calc_ticks_and_lims (a
     return;
 
   double lo = (lims.get ().matrix_value ()) (0);
   double hi = (lims.get ().matrix_value ()) (1);
   bool is_negative = lo < 0 && hi < 0;
   double tmp;
   // FIXME: should this be checked for somewhere else? (i.e. set{x,y,z}lim)
   if (hi < lo)
-    {
-      tmp = hi;
-      hi = lo;
-      lo = tmp;
-    }
+    std::swap (hi, lo);
 
   if (is_logscale)
     {
       if (is_negative)
         {
           tmp = hi;
           hi = std::log10 (-lo);
           lo = std::log10 (-tmp);
         }
       else
         {
           hi = std::log10 (hi);
           lo = std::log10 (lo);
         }
     }
 
-  double tick_sep = calc_tick_sep (lo , hi);
-
-  if (is_logscale && ! (xisinf (hi) || xisinf (lo)))
-    {
-      // FIXME: what if (hi-lo) < tick_sep?
-      //         ex: loglog ([1 1.1])
-      tick_sep = std::max (tick_sep, 1.);
-      tick_sep = std::ceil (tick_sep);
-    }
+  double tick_sep;
+  
+  if (is_logscale)
+    {
+      if (! (xisinf (hi) || xisinf (lo)))
+        tick_sep = 1;  // Tick is every order of magnitude (bug #39449)
+      else
+        tick_sep = 0;
+    }
+  else
+    tick_sep = calc_tick_sep (lo , hi);
 
   int i1 = static_cast<int> (gnulib::floor (lo / tick_sep));
   int i2 = static_cast<int> (std::ceil (hi / tick_sep));
 
   if (limmode_is_auto)
     {
       // adjust limits to include min and max tics
       Matrix tmp_lims (1,2);
