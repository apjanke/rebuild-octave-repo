# HG changeset patch
# User Rik <rik@octave.org>
# Date 1529040238 25200
#      Thu Jun 14 22:23:58 2018 -0700
# Node ID 12bbea4dc840edb1ed261e7bd223bff9912157e9
# Parent  0e510279e3b90ef2f86a8ef6f654b83df85cfcc7
bitset.m: Return [] for empty input for Matlab compatibility (bug #54110).

* bitset.m: Test for special case of empty input and immediately return and
empty value.  Add BIST test for new behavior.

diff --git a/scripts/general/bitset.m b/scripts/general/bitset.m
--- a/scripts/general/bitset.m
+++ b/scripts/general/bitset.m
@@ -66,18 +66,23 @@ function C = bitset (A, n, val = true)
     error ("bitset: A must be >= 0");
   endif
 
   [size_err, A, n, val] = common_size (A, n, val);
   if (size_err)
     error ("bitset: A, N, and VAL must be the same size or scalar");
   endif
 
+  ## Special case of empty input
+  if (isempty (A))
+    C = [];
+    return;
+  endif
+
   sz = size (A);
-
   cl = class (A);
 
   if (isfloat (A) && isreal (A))
     Bmax = flintmax (cl);
     Amax = ceil (log2 (Bmax));
   elseif (isinteger (A))
     Bmax = intmax (cl);
     Amax = ceil (log2 (Bmax));
@@ -115,16 +120,18 @@ endfunction
 %! pfx = {"", "u"};
 %! for i = 1:2
 %!   for prec = [8, 16, 32, 64]
 %!     fcn = str2func (sprintf ("%sint%d", pfx{i}, prec));
 %!     assert (bitset (fcn ([0, 10]), [3, 3]), fcn ([4, 14]));
 %!   endfor
 %! endfor
 
+%!assert (bitset ([], 1), [])
+
 %!assert <*36458> (bitset (uint8 ([1, 2;3 4]), 1, [0 1; 0 1]),
 %!                 uint8 ([0, 3; 2 5]))
 
 %!assert (bitset (1:5, 1), [1, 3, 3, 5, 5])
 %!assert (bitset (1:5, 1, [1, 1, 1, 1, 1]), [1, 3, 3, 5, 5])
 %!assert <*54110> (bitset (1:5, 1, 1), [1, 3, 3, 5, 5])
 %!assert (bitset (1:5, 1, [1, 1, 1, 1, 0]), [1, 3, 3, 5, 4])
 
