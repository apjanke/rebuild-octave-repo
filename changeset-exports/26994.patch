# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1553729187 0
#      Wed Mar 27 23:26:27 2019 +0000
# Node ID 734901c8979e99b70b68bced64ad3baf92f8447c
# Parent  05f389459461e3ccb8569ce7f0ba66cbd8a6f541
# Parent  119353eb6b38574df630d3163d4e8b2e30cc293d
maint: Merge stable to default.

diff --git a/.hgignore b/.hgignore
--- a/.hgignore
+++ b/.hgignore
@@ -94,17 +94,17 @@ syntax: regexp
 
 # DOCSTRINGS files built in the source tree
 (^|/)(libinterp|scripts)/DOCSTRINGS$
 
 # Generated HTML directories
 (^|/)doc/interpreter/octave\.html/
 (^|/)doc/liboctave/liboctave\.html/
 
-# Miscellaneous auto-generated files 
+# Miscellaneous auto-generated files
 (^|/)doc/interpreter/octave\.dvi$
 (^|/)doc/interpreter/octave\.ps$
 (^|/)doc/interpreter/doc-cache$
 (^|/)doc/interpreter/octave_interpreter\.q(ch|hc)$
 
 # Images and scripts for documentation
 ^doc/interpreter/images\.mk$
 (^|/)doc/interpreter/.*\.eps$
diff --git a/libinterp/corefcn/graphics.cc b/libinterp/corefcn/graphics.cc
--- a/libinterp/corefcn/graphics.cc
+++ b/libinterp/corefcn/graphics.cc
@@ -9564,18 +9564,18 @@ patch::properties::update_data (void)
               else
                 valid_vert = idx(ii,jj);
             }
         }
     }
 
   // check coplanarity for 3D-faces with more than 3 corners
   int fcmax = idx.rows ();
-  if (fcmax > 3 && vert.columns () > 2 &&
-      ! (facecolor_is ("none") && edgecolor_is ("none")))
+  if (fcmax > 3 && vert.columns () > 2
+      && ! (facecolor_is ("none") && edgecolor_is ("none")))
     {
       for (octave_idx_type jj = 0; jj < idx.columns (); jj++)
         {
           if (octave::math::isnan (idx(3,jj)))
             continue;
 
           // find first element that is NaN to get number of corners
           octave_idx_type nc = 3;
diff --git a/scripts/plot/util/print.m b/scripts/plot/util/print.m
--- a/scripts/plot/util/print.m
+++ b/scripts/plot/util/print.m
@@ -1011,17 +1011,17 @@ function cmd = pstoedit (opts, devopt, d
 
   if (isempty (opts.pstoedit_binary))
     error ("print:nopstoedit", ...
            ["print.m: 'pstoedit' is required for specified output format, ", ...
             "but binary is not available in PATH"]);
   endif
 
   dos_shell = (ispc () && ! isunix ());
-  
+
   if (! do_svg)
     if (dos_shell)
       cmd = sprintf ("%s -f %s 2> NUL", opts.pstoedit_binary, devopt);
     else
       cmd = sprintf ("%s -f %s 2> /dev/null", opts.pstoedit_binary, devopt);
       endi;f
     endif
   else
diff --git a/src/octave-svgconvert.cc b/src/octave-svgconvert.cc
--- a/src/octave-svgconvert.cc
+++ b/src/octave-svgconvert.cc
@@ -760,17 +760,17 @@ read from stdin\n\
   if(! document.setContent (&file, false, &msg))
     {
       std::cerr << "Failed to parse XML contents" << std::endl
                 << msg.toStdString ();
       std::cerr << doc;
       file.close();
       return -1;
     }
-  
+
   file.close ();
 
   // Format
   if (strcmp (argv[2], "pdf") != 0 && strcmp (argv[2], "svg") != 0)
     {
       std::cerr << "Unhandled output file format " << argv[2] << "\n";
       std::cerr << doc;
       return -1;
