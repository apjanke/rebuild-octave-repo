# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1283323797 -7200
#      Wed Sep 01 08:49:57 2010 +0200
# Node ID 1d761a30c3fb5338c6e739b13549c959c5f4bd74
# Parent  3cb4889dd6f7a7fd4eed61ebe3050a8d83f82801
support file IDs in dlmwrite

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2010-09-01  Jaroslav Hajek  <highegg@gmail.com>
+
+	* io/dlmwrite.m: Support file IDs.
+
 2010-07-07  David Bateman  <dbateman@free.fr>
 
 	* miscellaneous/what.m: Off by one error.
 
 	* plot/__go_draw_axes__.m: Improve matlab compatibility for "."
 	marker.
 
 2010-08-31  Ben Abbott <bpabbott@mac.com>
diff --git a/scripts/io/dlmwrite.m b/scripts/io/dlmwrite.m
--- a/scripts/io/dlmwrite.m
+++ b/scripts/io/dlmwrite.m
@@ -18,16 +18,18 @@
 
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {} dlmwrite (@var{file}, @var{a})
 ## @deftypefnx {Function File} {} dlmwrite (@var{file}, @var{a}, @var{delim}, @var{r}, @var{c})
 ## @deftypefnx {Function File} {} dlmwrite (@var{file}, @var{a}, @var{key}, @var{val} @dots{})
 ## @deftypefnx {Function File} {} dlmwrite (@var{file}, @var{a}, "-append", @dots{})
 ## Write the matrix @var{a} to the named file using delimiters.
 ##
+## @var{file} should be a file name or writable file ID given by @code{fopen}.
+##
 ## The parameter @var{delim} specifies the delimiter to use to separate
 ## values on a row.
 ##
 ## The value of @var{r} specifies the number of delimiter-only lines to
 ## add to the start of the file.
 ##
 ## The value of @var{c} specifies the number of delimiters to prepend to
 ## each line of data.
@@ -148,17 +150,25 @@ function dlmwrite (file, a, varargin)
       elseif (i == 3)
         c = varargin{i};
       else
         print_usage();
       endif
     endif
   endwhile
 
-  [fid, msg] = fopen (file, opentype);
+  if (ischar (file))
+    [fid, msg] = fopen (file, opentype);
+  elseif (isscalar (file) && isnumeric (file))
+    fid = file;
+    msg = "invalid file number";
+  else
+    error ("dlmwrite: file must be a string file ID");
+  endif
+
   if (fid < 0)
     error (msg);
   else
     if (r > 0)
       fprintf (fid, "%s",
                repmat ([repmat(delim, 1, c + columns(a)-1), newline], 1, r));
     endif
     if (iscomplex (a))
