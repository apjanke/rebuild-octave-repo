# HG changeset patch
# User jwe
# Date 1144090671 0
#      Mon Apr 03 18:57:51 2006 +0000
# Node ID 4ff0cb3e1dd158a6a6b8af6738f21527a9ce5c89
# Parent  f0fbefd984f6cfec6fde6df815696645952b3fe5
[project @ 2006-04-03 18:57:50 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,12 @@
+2006-04-03  David Bateman  <dbateman@free.fr>
+
+	* ls-hdf5.h (hdf5_fstreambase::open): Remove unused arg prot.
+
 2006-03-30  Bill Denney  <denney@seas.upenn.edu>
 
  	* data.cc: Include numel in @seealso.
 
 2006-03-30  David Bateman  <dbateman@free.fr>
 
 	* DLD-FUNCTIONS/fftw_wisdom.cc: Don't attempt to save wisdom to
 	an empty filename or invalid filename.
diff --git a/src/ls-hdf5.h b/src/ls-hdf5.h
--- a/src/ls-hdf5.h
+++ b/src/ls-hdf5.h
@@ -62,17 +62,17 @@ public:
       if (file_id >= 0)
 	{
 	  if (H5Fclose (file_id) < 0)
 	    std::ios::setstate (std::ios::badbit);
 	  file_id = -1;
 	}
     }
 
-  void open (const char *name, int mode, int prot = 0)
+  void open (const char *name, int mode, int)
     {
       clear ();
 
       if (mode & std::ios::in)
 	file_id = H5Fopen (name, H5F_ACC_RDONLY, H5P_DEFAULT);
       else if (mode & std::ios::out)
 	file_id = H5Fcreate (name, H5F_ACC_TRUNC, H5P_DEFAULT, H5P_DEFAULT);
 
diff --git a/test/ChangeLog b/test/ChangeLog
--- a/test/ChangeLog
+++ b/test/ChangeLog
@@ -1,8 +1,13 @@
+2006-04-03  David Bateman  <dbateman@free.fr>
+
+	* test_number.m: Reverse sense of isscalar and isvector tests
+          for recent changes.
+
 2006-03-21  John W. Eaton  <jwe@octave.org>
 
 	* test_system.m: Use cell arrays of character strings in fnmatch
 	tests.
 
 2006-03-16  John W. Eaton  <jwe@octave.org>
 
 	* test_system.m: End all *pwent tests with a call to endpwent.
diff --git a/test/test_number.m b/test/test_number.m
--- a/test/test_number.m
+++ b/test/test_number.m
@@ -50,30 +50,30 @@
 %!assert(!(isvector ([])));
 
 %% test/octave.test/number/isvector-4.m
 %!assert(!(isvector ([1, 2; 3, 4])));
 
 %% test/octave.test/number/isvector-5.m
 %!test
 %! warn_str_to_num = 0;
-%! assert(!(isvector ("t")));
+%! assert((isvector ("t")));
 
 %% test/octave.test/number/isvector-6.m
 %!test
 %! warn_str_to_num = 0;
-%! assert(!(isvector ("test")));
+%! assert((isvector ("test")));
 
 %% test/octave.test/number/isvector-7.m
 %!assert(!(isvector (["test"; "ing"])));
 
 %% test/octave.test/number/isvector-8.m
 %!test
 %! s.a = 1;
-%! assert(!(isvector (s)));
+%! assert((isvector (s)));
 
 %% test/octave.test/number/isvector-9.m
 %!error isvector ();
 
 %% test/octave.test/number/isvector-10.m
 %!error isvector ([1, 2], 2);
 
 %% test/octave.test/number/isscalar-1.m
@@ -86,28 +86,28 @@
 %!assert(!(isscalar ([])));
 
 %% test/octave.test/number/isscalar-4.m
 %!assert(!(isscalar ([1, 2; 3, 4])));
 
 %% test/octave.test/number/isscalar-5.m
 %!test
 %! warn_str_to_num = 0;
-%! assert(!(isscalar ("t")));
+%! assert((isscalar ("t")));
 
 %% test/octave.test/number/isscalar-6.m
 %!assert(!(isscalar ("test")));
 
 %% test/octave.test/number/isscalar-7.m
 %!assert(!(isscalar (["test"; "ing"])));
 
 %% test/octave.test/number/isscalar-8.m
 %!test
 %! s.a = 1;
-%! assert(!(isscalar (s)));
+%! assert((isscalar (s)));
 
 %% test/octave.test/number/isscalar-9.m
 %!error isscalar ();
 
 %% test/octave.test/number/isscalar-10.m
 %!error isscalar (1, 2);
 
 %% test/octave.test/number/issquare-1.m
