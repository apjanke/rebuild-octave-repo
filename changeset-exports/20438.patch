# HG changeset patch
# User Juan Pablo Carbajal <ajuanpi+dev@gmail.com>
# Date 1438636934 -7200
#      Mon Aug 03 23:22:14 2015 +0200
# Node ID e59a44fa74ff447ed95d821fd9f97f40069edb00
# Parent  c3b2ec6a1586790f40899cbb32d0b8a70db67fb2
union.m: Matlab compatible output when mixed input and one is empty (bug #45685).

* union.m: add BIST tests for mixed cell/matrix inputs.

* validasetargs.m: Check for cases of cellstr and empty array and coerce empty
array into cellstr.

diff --git a/scripts/set/private/validsetargs.m b/scripts/set/private/validsetargs.m
--- a/scripts/set/private/validsetargs.m
+++ b/scripts/set/private/validsetargs.m
@@ -26,16 +26,20 @@ function [x, y] = validsetargs (caller, 
   if (nargin == 3)
     icx = iscellstr (x);
     icy = iscellstr (y);
     if (icx || icy)
       if (icx && ischar (y))
         y = cellstr (y);
       elseif (icy && ischar (x))
         x = cellstr (x);
+      elseif (icy && isempty (x))
+        x = {};
+      elseif (icx && isempty (y))
+        y = {};
       elseif (! (icx && icy))
         error ("%s: cell array of strings cannot be combined with a nonstring value", caller);
       endif
     elseif (! (isallowedarraytype (x) && isallowedarraytype (y)))
       error ("%s: A and B must be arrays or cell arrays of strings", caller);
     endif
   elseif (nargin == 4)
     if (! strcmpi (byrows_arg, "rows"))
diff --git a/scripts/set/union.m b/scripts/set/union.m
--- a/scripts/set/union.m
+++ b/scripts/set/union.m
@@ -89,16 +89,24 @@ endfunction
 
 %!test
 %! a = [3, 1, 4, 1, 5];
 %! b = [1, 2, 3, 4];
 %! [y, ia, ib] = union (a, b.');
 %! assert (y, [1; 2; 3; 4; 5]);
 %! assert (y, sort ([a(ia)'; b(ib)']));
 
+## Test empty cell string array unions
+%!assert (union ({}, []), cell (0,1))
+%!assert (union ([], {}), cell (0,1))
+%!assert (union ([], {'a', 'b'}), {'a';'b'})
+%!assert (union ({'a', 'b'}, []), {'a';'b'})
+%!assert (union (['a', 'b'], {}), {'ab'})
+%!assert (union ({}, ['a', 'b']), {'ab'})
+
 ## Test common input validation for set routines contained in validsetargs
 %!error <cell array of strings cannot be combined> union ({"a"}, 1)
 %!error <A and B must be arrays or cell arrays> union (@sin, 1)
 %!error <invalid option: columns> union (1, 2, "columns")
 %!error <cells not supported with "rows"> union ({"a"}, {"b"}, "rows")
 %!error <A and B must be arrays or cell arrays> union (@sin, 1, "rows")
 %!error <A and B must be 2-dimensional matrices> union (rand(2,2,2), 1, "rows")
 %!error <number of columns in A and B must match> union ([1 2], 1, "rows")
