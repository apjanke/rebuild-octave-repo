# HG changeset patch
# User Rik <rik@octave.org>
# Date 1456159956 28800
#      Mon Feb 22 08:52:36 2016 -0800
# Node ID 241666557fec5f2561461729c2003f98f321719e
# Parent  8880d93010d8c7a5cb53f3e465658015a2446fe9
edit.m: Improve docstring.

* edit.m: Improve docstring.  Use 'retval' instead of 'ret' for return arg.

diff --git a/scripts/miscellaneous/edit.m b/scripts/miscellaneous/edit.m
--- a/scripts/miscellaneous/edit.m
+++ b/scripts/miscellaneous/edit.m
@@ -14,17 +14,18 @@
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {} {} edit @var{name}
 ## @deftypefnx {} {} edit @var{field} @var{value}
-## @deftypefnx {} {@var{value} =} edit get @var{field}
+## @deftypefnx {} {@var{value} =} edit ("get", @var{field})
+## @deftypefnx {} {@var{value} =} edit ("get", "all")
 ## Edit the named function, or change editor settings.
 ##
 ## If @code{edit} is called with the name of a file or function as its
 ## argument it will be opened in the text editor defined by @env{EDITOR}.
 ##
 ## @itemize @bullet
 ## @item
 ## If the function @var{name} is available in a file on your path and that
@@ -55,21 +56,22 @@
 ##
 ## @strong{Warning:} You may need to clear @var{name} before the new definition
 ## is available.  If you are editing a .cc file, you will need to execute
 ## @code{mkoctfile @file{@var{name}.cc}} before the definition will be
 ## available.
 ## @end itemize
 ##
 ## If @code{edit} is called with @var{field} and @var{value} variables, the
-## value of the control field @var{field} will be set to @var{value}.  If an
-## output argument is requested and the first input argument is @code{get}
+## value of the control field @var{field} will be set to @var{value}.
+##
+## If an output argument is requested and the first input argument is @code{get}
 ## then @code{edit} will return the value of the control field @var{field}.
 ## If the control field does not exist, edit will return a structure
-## containing all fields and values.  Thus, @code{edit get all} returns a
+## containing all fields and values.  Thus, @code{edit ("get", "all"} returns a
 ## complete control structure.
 ##
 ## The following control fields are used:
 ##
 ## @table @samp
 ## @item home
 ## This is the location of user local m-files.  Be sure it is in your path.
 ## The default is @file{~/octave}.
@@ -96,17 +98,17 @@
 ## @item pd
 ## Public domain.
 ##
 ## @item "text"
 ## Your own default copyright and license.
 ## @end table
 ##
 ## Unless you specify @samp{pd}, edit will prepend the copyright statement
-## with "Copyright (C) yyyy Function Author".
+## with "Copyright (C) YYYY Author".
 ##
 ## @item mode
 ## This value determines whether the editor should be started in async mode
 ## (editor is started in the background and Octave continues) or sync mode
 ## (Octave waits until the editor exits).  Set it to @qcode{"sync"} to start
 ## the editor in sync mode.  The default is @qcode{"async"}
 ## (@pxref{XREFsystem,,system}).
 ##
@@ -116,17 +118,17 @@
 ## @end table
 ## @end deftypefn
 
 ## Author: Paul Kienzle <pkienzle@users.sf.net>
 
 ## Original version by Paul Kienzle distributed as free software in the
 ## public domain.
 
-function ret = edit (varargin)
+function retval = edit (varargin)
 
   ## Pick up globals or default them.
 
   persistent FUNCTION = struct ("HOME",
                                 fullfile (get_home_directory (), "octave"),
                                 "AUTHOR", default_user(1),
                                 "EMAIL", [],
                                 "LICENSE", "GPL",
@@ -193,19 +195,19 @@ function ret = edit (varargin)
           else
             stateval = eval (stateval);
           endif
         endif
         FUNCTION.EDITINPLACE = stateval;
         return;
       case "GET"
         if (isfield (FUNCTION, toupper (stateval)))
-          ret = FUNCTION.(toupper (stateval));
+          retval = FUNCTION.(toupper (stateval));
         else
-          ret = FUNCTION;
+          retval = FUNCTION;
         endif
         return;
       otherwise
         ## If none of the states match, assume both inputs are actually
         ## filenames to be opened.
         editfilelist = varargin;
     endswitch
   elseif (nargin > 2)
@@ -468,18 +470,17 @@ SUCH DAMAGE.\
         if (any (exists == [2, 103]))
           code = ['\ ', strrep(type(name){1}, "\n", "\n// ")];
         else
           code = " ";
         endif
         body = ["#include <octave/oct.h>\n\n"             ...
                 "DEFUN_DLD(" name ", args, nargout,\n"    ...
                 "          \"-*- texinfo -*-\\n\\\n"      ...
-                "@deftypefn {} "         ...
-                "{@var{retval} =} " name                  ...
+                "@deftypefn {} {@var{retval} =} " name    ...
                 " (@var{input1}, @var{input2})\\n\\\n"    ...
                 "@seealso{}\\n\\\n@end deftypefn\")\n{\n" ...
                 "  octave_value_list retval;\n"           ...
                 "  int nargin = args.length ();\n\n"      ...
                 code, "\n  return retval;\n}\n"];
 
         text = [comment, body];
       case "m"
