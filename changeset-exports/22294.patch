# HG changeset patch
# User Rik <rik@octave.org>
# Date 1471230471 25200
#      Sun Aug 14 20:07:51 2016 -0700
# Node ID 446b542fd082593daa49195914538368383abf91
# Parent  ca8b8f12bd169e9e2802691579ca91dfe7370ba4
Change default axes color to (0.15, 0.15, 0.15).

* graphics.in.h: Change xcolor, ycolor, zcolor default value to
(0.15, 0.15, 0.15).

* graphics.cc (axes::proerties::set_defaults): Change xcolor, ycolor, zcolor
default value to (0.15, 0.15, 0.15).  Alphabetize most properties.  Add
defaults for all properties (some were not initialized).

diff --git a/libinterp/corefcn/graphics.cc b/libinterp/corefcn/graphics.cc
--- a/libinterp/corefcn/graphics.cc
+++ b/libinterp/corefcn/graphics.cc
@@ -4768,113 +4768,151 @@ axes::properties::set_title (const octav
   xset (title.handle_value (), "autopos_tag", "title");
   update_title_position ();
 }
 
 void
 axes::properties::set_defaults (base_graphics_object& bgo,
                                 const std::string& mode)
 {
-  box = "on";
-  colororder = default_colororder ();
-  // Note: dataspectratio will be set through update_aspectratios
-  dataaspectratiomode = "auto";
-  layer = "bottom";
+  // FIXME: Should this have all properties in it?
+  // Including ones we do don't implement?
 
   Matrix tlim (1, 2, 0.0);
   tlim(1) = 1;
   alim = tlim;
   xlim = tlim;
   ylim = tlim;
   zlim = tlim;
 
-  Matrix cl (1, 2, 0.0);
-  cl(1) = 1;
-  clim = cl;
-
+  alimmode = "auto";
+  climmode = "auto";
   xlimmode = "auto";
   ylimmode = "auto";
   zlimmode = "auto";
-  climmode = "auto";
-  alimmode = "auto";
-
-  xgrid = "off";
-  ygrid = "off";
-  zgrid = "off";
-  xminorgrid = "off";
-  yminorgrid = "off";
-  zminorgrid = "off";
-  xtick = Matrix ();
-  ytick = Matrix ();
-  ztick = Matrix ();
-  xtickmode = "auto";
-  ytickmode = "auto";
-  ztickmode = "auto";
-  xminortick = "off";
-  yminortick = "off";
-  zminortick = "off";
-  xticklabel = "";
-  yticklabel = "";
-  zticklabel = "";
-  xticklabelmode = "auto";
-  yticklabelmode = "auto";
-  zticklabelmode = "auto";
-
-  ticklabelinterpreter = "tex";
-
-  color = color_values ("white");
-  xcolor = color_values ("black");
-  ycolor = color_values ("black");
-  zcolor = color_values ("black");
-  xscale = "linear";
-  yscale = "linear";
-  zscale = "linear";
-  xdir = "normal";
-  ydir = "normal";
-  zdir = "normal";
-  yaxislocation = "left";
-  xaxislocation = "bottom";
-
-  Matrix tview (1, 2, 0.0);
-  tview(1) = 90;
-  view = tview;
-
-  nextplot = "replace";
 
   ambientlightcolor = Matrix (1, 3, 1.0);
 
+  box = "on";
+  boxstyle = "back";
+
   // Note: camera properties (not mode) will be set in update_transform
   camerapositionmode = "auto";
   cameratargetmode = "auto";
   cameraupvectormode = "auto";
   cameraviewanglemode = "auto";
 
+  Matrix cl (1, 2, 0.0);
+  cl(1) = 1;
+  clim = cl;
+
+  clippingstyle = "3dbox";
+
+  color = color_values ("white");
+  colororder = default_colororder ();
+  colororderindex = 1.0;
+
+  // Note: dataspectratio (not mode) will be set through update_aspectratios
+  dataaspectratiomode = "auto";
+
   drawmode = "normal";
 
   fontangle = "normal";
   fontname = OCTAVE_DEFAULT_FONTNAME;
   fontsize = 10;
   fontunits = "points";
+  fontsmoothing = "on";
   fontweight = "normal";
 
+  gridalpha = 0.15;
+  gridalphamode = "auto";
+  gridcolor = color_values (0.15, 0.15, 0.15);
+  gridcolormode = "auto";
   gridlinestyle = "-";
+   
+  labelfontsizemultiplier = 1.1; 
+
+  layer = "bottom";
+
   linestyleorder = "-";
+  linestyleorderindex = 1.0;
+
   linewidth = 0.5;
+
+  minorgridalpha = 0.25;
+  minorgridalphamode = "auto";
+  minorgridcolor = color_values (0.1, 0.1, 0.1);
+  minorgridcolormode = "auto";
   minorgridlinestyle = ":";
 
+  nextplot = "replace";
+
   // Note: plotboxaspectratio will be set through update_aspectratios
   plotboxaspectratiomode = "auto";
   projection = "orthographic";
 
+  sortmethod = "depth";
+
   tickdir = "in";
   tickdirmode = "auto";
+  ticklabelinterpreter = "tex";
   ticklength = default_axes_ticklength ();
 
   tightinset = Matrix (1, 4, 0.0);
 
+  titlefontsizemultiplier = 1.1; 
+  titlefontweight = "bold"; 
+
+  Matrix tview (1, 2, 0.0);
+  tview(1) = 90;
+  view = tview;
+
+  xaxislocation = "bottom";
+
+  xcolor = color_values (0.15, 0.15, 0.15);
+  xcolormode = "auto";
+  xdir = "normal";
+  xgrid = "off";
+  xminorgrid = "off";
+  xminortick = "off";
+  xscale = "linear";
+  xtick = Matrix ();
+  xticklabel = "";
+  xticklabelmode = "auto";
+  xticklabelrotation = 0.0;
+  xtickmode = "auto";
+
+  yaxislocation = "left";
+
+  ycolor = color_values (0.15, 0.15, 0.15);
+  ycolormode = "auto";
+  ydir = "normal";
+  ygrid = "off";
+  yminorgrid = "off";
+  yminortick = "off";
+  yscale = "linear";
+  ytick = Matrix ();
+  yticklabel = "";
+  yticklabelmode = "auto";
+  yticklabelrotation = 0.0;
+  ytickmode = "auto";
+
+  zcolor = color_values (0.15, 0.15, 0.15);
+  zcolormode = "auto";
+  zdir = "normal";
+  zgrid = "off";
+  zminorgrid = "off";
+  zminortick = "off";
+  zscale = "linear";
+  ztick = Matrix ();
+  zticklabel = "";
+  zticklabelmode = "auto";
+  zticklabelrotation = 0.0;
+  ztickmode = "auto";
+
   sx = "linear";
   sy = "linear";
   sz = "linear";
 
   visible = "on";
 
   // Replace/Reset preserves Position and Units properties
   if (mode != "replace" && mode != "reset")
diff --git a/libinterp/corefcn/graphics.in.h b/libinterp/corefcn/graphics.in.h
--- a/libinterp/corefcn/graphics.in.h
+++ b/libinterp/corefcn/graphics.in.h
@@ -3870,49 +3870,49 @@ public:
       array_property tightinset r , Matrix (1, 4, 0.0)
       handle_property title SOf , gh_manager::make_graphics_handle ("text", __myhandle__, false, false, false)
       double_property titlefontsizemultiplier , 1.1
       radio_property titlefontweight , "{bold}|normal"
       // FIXME: uicontextmenu should be moved here.
       radio_property units SU , "{normalized}|inches|centimeters|points|pixels|characters"
       array_property view u , default_axes_view ()
       radio_property xaxislocation u , "{bottom}|top|zero"
-      color_property xcolor m , color_values (0, 0, 0)
+      color_property xcolor m , color_values (0.15, 0.15, 0.15)
       radio_property xcolormode , "{auto}|manual"
       radio_property xdir u , "{normal}|reverse"
       bool_property xgrid , "off"
       handle_property xlabel SOf , gh_manager::make_graphics_handle ("text", __myhandle__, false, false, false)
       row_vector_property xlim mu , default_lim ()
       radio_property xlimmode al , "{auto}|manual"
       bool_property xminorgrid , "off"
       bool_property xminortick , "off"
       radio_property xscale alu , "{linear}|log"
       row_vector_property xtick mu , default_axes_tick ()
       // FIXME: should be kind of string array.
       any_property xticklabel S , ""
       radio_property xticklabelmode u , "{auto}|manual"
       double_property xticklabelrotation , 0.0
       radio_property xtickmode u , "{auto}|manual"
       radio_property yaxislocation u , "{left}|right|zero"
-      color_property ycolor m , color_values (0, 0, 0)
+      color_property ycolor m , color_values (0.15, 0.15, 0.15)
       radio_property ycolormode , "{auto}|manual"
       radio_property ydir u , "{normal}|reverse"
       bool_property ygrid , "off"
       handle_property ylabel SOf , gh_manager::make_graphics_handle ("text", __myhandle__, false, false, false)
       row_vector_property ylim mu , default_lim ()
       radio_property ylimmode al , "{auto}|manual"
       bool_property yminorgrid , "off"
       bool_property yminortick , "off"
       radio_property yscale alu , "{linear}|log"
       row_vector_property ytick mu , default_axes_tick ()
       any_property yticklabel S , ""
       radio_property yticklabelmode u , "{auto}|manual"
       double_property yticklabelrotation , 0.0
       radio_property ytickmode u , "{auto}|manual"
-      color_property zcolor m , color_values (0, 0, 0)
+      color_property zcolor m , color_values (0.15, 0.15, 0.15)
       radio_property zcolormode , "{auto}|manual"
       radio_property zdir u , "{normal}|reverse"
       bool_property zgrid , "off"
       handle_property zlabel SOf , gh_manager::make_graphics_handle ("text", __myhandle__, false, false, false)
       row_vector_property zlim mu , default_lim ()
       radio_property zlimmode al , "{auto}|manual"
       bool_property zminorgrid , "off"
       bool_property zminortick , "off"
