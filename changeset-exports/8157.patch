# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1222667877 -7200
#      Mon Sep 29 07:57:57 2008 +0200
# Node ID c0b8546c00202759898630af2798dc0ab55e7284
# Parent  2bc8ec18b2ea010fed1ef69bcb24ec2e816e3410
add missing return in Array<T>::delete_elements_2

diff --git a/liboctave/Array.cc b/liboctave/Array.cc
--- a/liboctave/Array.cc
+++ b/liboctave/Array.cc
@@ -1550,16 +1550,18 @@ Array<T>::maybe_delete_elements_2 (idx_v
   else if (! idx_arg.orig_empty ())
     {
       // Reshape to row vector for Matlab compatibility.
 
       n = nr * nc;
       nr = 1;
       nc = n;
     }
+  else
+    return;
 
   idx_arg.sort (true);
 
   if (idx_arg.is_colon_equiv (n, 1))
     {
       if (nr == 1)
         resize_no_fill (1, 0);
       else if (nc == 1)
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+2008-09-29  Jaroslav Hajek  <highegg@gmail.com>
+
+	* Array.cc (Array<T>::maybe_delete_elements_2(idx_vector&)): Return on
+	empty index vector.
+
 2008-09-26  Jaroslav Hajek  <highegg@gmail.com>
 
 	* Array.cc (assign1, assign2, assignN): Do not call
 	maybe_delete_elements.
 	(maybe_delete_elements (Array<idx_vector>&)): Call the 1D and 2D
 	special handlers if possible.
 	* Sparse.cc (assign1, assign2, assignN): Do not call
 	maybe_delete_elements.
