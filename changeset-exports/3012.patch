# HG changeset patch
# User jwe
# Date 865277893 0
#      Mon Jun 02 18:58:13 1997 +0000
# Node ID 0ea30e0e86ccfc9a50f3281ecd7ce52c874cd0ea
# Parent  2ad9af85b89b49b47834b9f66104794d4daa7ee3
[project @ 1997-06-02 18:57:07 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,13 @@
+Mon Jun  2 13:56:26 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* configure.in: Move checks for RANLIB, AR, and ARFLAGS before
+	checks for libf2c.
+
 Fri May 30 14:59:59 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* configure.in: Fix typo in check for $with_f77.
 
 Thu May 22 16:48:34 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* configure.in (AC_OUTPUT): Remove duplicate entry for emacs/Makefile.
 
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -16,17 +16,17 @@ dnl Copyright (C) 1996, 1997 John W. Eat
 ### FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ### for more details.
 ### 
 ### You should have received a copy of the GNU General Public License
 ### along with Octave; see the file COPYING.  If not, write to the Free
 ### Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ### 02111-1307, USA. 
 
-AC_REVISION($Revision: 1.269 $)
+AC_REVISION($Revision: 1.270 $)
 AC_PREREQ(2.9)
 AC_INIT(src/octave.cc)
 AC_CONFIG_HEADER(config.h)
 
 AC_DEFINE(OCTAVE_SOURCE, 1)
 
 OCTAVE_HOST_TYPE
 
@@ -306,16 +306,30 @@ case "$canonical_host_type" in
     LD_STATIC_FLAG=-static
   ;;
 esac
 if test -n "$LD_STATIC_FLAG"; then
   AC_MSG_RESULT([defining LD_STATIC_FLAG to be $LD_STATIC_FLAG])
 fi
 AC_SUBST(LD_STATIC_FLAG)
 
+### We need these before trying to find libf2c.
+
+if test -z "$AR"; then
+  AR=ar
+fi
+AC_SUBST(AR)
+
+if test -z "$ARFLAGS"; then
+  ARFLAGS="rc"
+fi
+AC_SUBST(ARFLAGS)
+
+AC_PROG_RANLIB
+
 ### If we haven't been forced to use a particular Fortran compiler,
 ### try to find one using any one of several common Un*x Fortran
 ### compiler names.  Put fc last to avoid confusion with some vendor's
 ### /bin/sh fc builtin.
 ###
 ###    f77 : most Unix systems
 ###    xlf : IBM / AIX
 ###   cf77 : Cray / Unicos
@@ -405,17 +419,16 @@ else
   else
     AC_CHECK_PROG(F2C, f2c, f2c, [])
     if test -n "$F2C"; then
       have_f2c=true
     fi
   fi
 fi
 
-
 f77_rules_frag=/dev/null
 if $have_fortran_compiler; then
   f77_rules_frag=Makefrag.f77
 changequote(,)dnl
   cat << \EOF > $f77_rules_frag
 
 %.c : %.f
 
@@ -656,30 +669,16 @@ AC_CHECK_SIZEOF(long)
 
 AC_ALLOCA
 AC_C_CONST
 
 ### See if we should define NPOS.
 
 OCTAVE_STRING_NPOS
 
-### We need these before trying to find libf2c.
-
-if test -z "$AR"; then
-  AR=ar
-fi
-AC_SUBST(AR)
-
-if test -z "$ARFLAGS"; then
-  ARFLAGS="rc"
-fi
-AC_SUBST(ARFLAGS)
-
-AC_PROG_RANLIB
-
 ### Checks for header files.
 
 AC_HEADER_STDC
 AC_HEADER_DIRENT
 AC_HEADER_TIME
 AC_HEADER_SYS_WAIT
 
 AC_CHECK_HEADERS(assert.h curses.h fcntl.h float.h floatingpoint.h \
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,12 @@
+Mon Jun  2 12:44:14 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* lo-mappers.cc (fix): Use floor and ceil instead of casting to int.
+
 Thu May 22 16:20:43 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* cmd-edit.h, cmd-edit.cc: Rename set_paren_string_delimiters to
 	set_basic_quote_characters, to match new version of readline.
 
 	* cmd-edit.cc (do_restore_terminal_state): Call readline function
 	for restoring terminal state through rl_deprep_term_function, now
 	declared in readline.h
diff --git a/liboctave/lo-mappers.cc b/liboctave/lo-mappers.cc
--- a/liboctave/lo-mappers.cc
+++ b/liboctave/lo-mappers.cc
@@ -78,17 +78,17 @@ double
 conj (double x)
 {
   return x;
 }
 
 double
 fix (double x)
 {
-  return static_cast<int> (x);
+  return x > 0 ? floor (x) : ceil (x);
 }
 
 double
 imag (double x)
 {
 #if defined (HAVE_ISNAN)
   return xisnan (x) ? octave_NaN : 0.0;
 #else
@@ -272,18 +272,17 @@ Complex
 ceil (const Complex& x)
 {
   return Complex (ceil (real (x)), ceil (imag (x)));
 }
 
 Complex
 fix (const Complex& x)
 {
-  return Complex (static_cast<int> (real (x)),
-		  static_cast<int> (imag (x)));
+  return Complex (fix (real (x)), fix (imag (x)));
 }
 
 Complex
 floor (const Complex& x)
 {
   return Complex (floor (real (x)), floor (imag (x)));
 }
 
