# HG changeset patch
# User Torsten <mttl@mailbox.org>
# Date 1546706513 -3600
#      Sat Jan 05 17:41:53 2019 +0100
# Branch stable
# Node ID aced09cc1721fa38faaacb63bb45fcb0630ac8e2
# Parent  a3a0dbd54a77fcee0c6f7ba9c8a448188066b7f8
fix utilize pointer before verifying in find dialog (bug #55347)

* find-dialog.cc (find_dialog): test _edit_area against nullptr before use;
  (handle_selection_changed): dito;
  (find): immediately return if _edit_area is the nullptr and remove other
  tests that were alreday existing in this methods;
  (do_replace): test _edit_area against nullptr before use;

diff --git a/libgui/src/m-editor/find-dialog.cc b/libgui/src/m-editor/find-dialog.cc
--- a/libgui/src/m-editor/find-dialog.cc
+++ b/libgui/src/m-editor/find-dialog.cc
@@ -117,17 +117,18 @@ namespace octave
 
     _extension = new QWidget (this);
     _whole_words_check_box = new QCheckBox (tr ("&Whole words"));
     _regex_check_box = new QCheckBox (tr ("Regular E&xpressions"));
     _backward_check_box = new QCheckBox (tr ("Search &backward"));
     _search_selection_check_box = new QCheckBox (tr ("Search se&lection"));
 #if defined (HAVE_QSCI_FINDSELECTION)
     _search_selection_check_box->setCheckable (true);
-    _search_selection_check_box->setEnabled (edit_area->hasSelectedText ());
+    if (edit_area)
+      _search_selection_check_box->setEnabled (edit_area->hasSelectedText ());
 #else
     _search_selection_check_box->setCheckable (false);
     _search_selection_check_box->setEnabled (false);
 #endif
 
     _edit_area = edit_area;
     connect (_find_next_button,   SIGNAL (clicked ()),
              this,                SLOT (find_next ()));
@@ -240,17 +241,17 @@ namespace octave
   }
 #else
   void find_dialog::handle_selection_changed (bool /* has_selected */) { }
 #endif
 
   // initialize search text with selected text if this is in one single line
   void find_dialog::init_search_text (void)
   {
-    if (_edit_area->hasSelectedText ())
+    if (_edit_area && _edit_area->hasSelectedText ())
       {
         int lbeg, lend, cbeg, cend;
         _edit_area->getSelection (&lbeg,&cbeg,&lend,&cend);
         if (lbeg == lend)
           _search_line_edit->setText (_edit_area->selectedText ());
       }
 
     // set focus to "Find what" and select all text
@@ -269,16 +270,19 @@ namespace octave
 
   void find_dialog::find_prev (void)
   {
     find (_backward_check_box->isChecked ());
   }
 
   void find_dialog::find (bool forward)
   {
+    if (! _edit_area)
+      return;
+
     int line, col;
     line = col = -1;
     bool do_wrap = _wrap_check_box->isChecked ();
     bool do_forward = forward;
 
     if (_rep_all)
       {
         if (_rep_all == 1)
@@ -321,68 +325,69 @@ namespace octave
                 currpos -= (_search_line_edit->text ().length ());
                 if (currpos < 0)
                   currpos = 0;
                 _edit_area->lineIndexFromPosition (currpos, &line,&col);
               }
           }
       }
 
-    if (_edit_area)
+    if (_edit_area->hasSelectedText ()
+        && _search_selection_check_box->isChecked ())
       {
-        if (_edit_area->hasSelectedText ()
-            && _search_selection_check_box->isChecked ())
-          {
 #if defined (HAVE_QSCI_FINDSELECTION)
-            if (_find_result_available)
-              _find_result_available = _edit_area->findNext ();
-            else
-              _find_result_available
-                = _edit_area->findFirstInSelection (
-                                                    _search_line_edit->text (),
-                                                    _regex_check_box->isChecked (),
-                                                    _case_check_box->isChecked (),
-                                                    _whole_words_check_box->isChecked (),
-                                                    do_forward,
-                                                    true
+        if (_find_result_available)
+          _find_result_available = _edit_area->findNext ();
+        else
+          _find_result_available
+            = _edit_area->findFirstInSelection (
+                                                _search_line_edit->text (),
+                                                _regex_check_box->isChecked (),
+                                                _case_check_box->isChecked (),
+                                                _whole_words_check_box->isChecked (),
+                                                do_forward,
+                                                true
 #if defined (HAVE_QSCI_VERSION_2_6_0)
-                                                    , true
+                                                , true
 #endif
-                                                   );
+                                               );
 #endif
-          }
-        else
-          {
-            _find_result_available
-              = _edit_area->findFirst (_search_line_edit->text (),
-                                       _regex_check_box->isChecked (),
-                                       _case_check_box->isChecked (),
-                                       _whole_words_check_box->isChecked (),
-                                       do_wrap,
-                                       do_forward,
-                                       line,col,
-                                       true
+      }
+    else
+      {
+        _find_result_available
+          = _edit_area->findFirst (_search_line_edit->text (),
+                                   _regex_check_box->isChecked (),
+                                   _case_check_box->isChecked (),
+                                   _whole_words_check_box->isChecked (),
+                                   do_wrap,
+                                   do_forward,
+                                   line,col,
+                                   true
 #if defined (HAVE_QSCI_VERSION_2_6_0)
-                                       , true
+                                    , true
 #endif
-                                      );
-          }
+                                  );
       }
 
+
     if (_find_result_available)
       _from_start_check_box->setChecked (0);
     else if (! _rep_all)
       no_matches_message ();
   }
 
   void find_dialog::do_replace (void)
   {
-    _rep_active = true;  // changes in selection not made by the user
-    _edit_area->replace (_replace_line_edit->text ());
-    _rep_active = false;
+    if (_edit_area)
+      {
+        _rep_active = true;  // changes in selection not made by the user
+        _edit_area->replace (_replace_line_edit->text ());
+        _rep_active = false;
+      }
   }
 
   void find_dialog::replace (void)
   {
     if (_edit_area)
       {
         // The following line is a workaround for the issue that when replacing
         // a text with a new one with different size within the selection,
