# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1420183131 18000
#      Fri Jan 02 02:18:51 2015 -0500
# Node ID 0f7788e2d677095f2a7888132f5fe5f1a24deb55
# Parent  ef6875adb053c7862d9dec2e6a54e16c470268aa
* audiodevinfo.cc: Use "||" and "&&", not "or" and "and".

diff --git a/libinterp/dldfcn/audiodevinfo.cc b/libinterp/dldfcn/audiodevinfo.cc
--- a/libinterp/dldfcn/audiodevinfo.cc
+++ b/libinterp/dldfcn/audiodevinfo.cc
@@ -1079,17 +1079,17 @@ audioplayer::stop (void)
 bool
 audioplayer::isplaying (void)
 {
   if (this->get_stream () == 0)
     return false;
 
   PaError err;
   err = Pa_IsStreamActive (stream);
-  if (err != 0 and err != 1)
+  if (err != 0 && err != 1)
     {
       error ("audiorecorder: Error checking stream activity status");
       return false;
     }
 
   return (err == 1);
 }
 
@@ -1378,17 +1378,17 @@ int
 audiorecorder::get_id (void)
 {
   return this->id;
 }
 
 void
 audiorecorder::set_channels (int channels)
 {
-  assert (channels == 1 or channels == 2);
+  assert (channels == 1 || channels == 2);
   this->channels = channels;
 }
 
 int
 audiorecorder::get_channels (void)
 {
   return this->channels;
 }
@@ -1485,17 +1485,17 @@ audiorecorder::getplayer (void)
 bool
 audiorecorder::isrecording (void)
 {
   if (this->get_stream () == 0)
     return false;
 
   PaError err;
   err = Pa_IsStreamActive (stream);
-  if (err != 0 and err != 1)
+  if (err != 0 && err != 1)
     {
       error ("audiorecorder: Error checking stream activity status");
       return false;
     }
 
   return (err == 1);
 }
 
@@ -2329,18 +2329,18 @@ Undocumented internal function.\n\
     {
       audioplayer *player = get_player (args(0));
       if (args(1).is_matrix_type ())
         {
           unsigned int start, end;
           RowVector range = args(1).row_vector_value ();
           start = range.elem (0) - 1;
           end = range.elem (1) - 1;
-          if (start > player->get_total_samples () or
-              start > end or end > player->get_total_samples ())
+          if (start > player->get_total_samples ()
+              || start > end || end > player->get_total_samples ())
             error ("audioplayer: invalid range specified for playback");
           player->set_sample_number (start);
           player->set_end_sample (end);
         }
       else
         {
           unsigned int start;
           start = args(1).int_value () - 1;
@@ -2376,18 +2376,18 @@ Undocumented internal function.\n\
     {
       audioplayer *player = get_player (args(0));
       if (args(1).is_matrix_type ())
         {
           unsigned int start, end;
           RowVector range = args(1).row_vector_value ();
           start = range.elem (0) - 1;
           end = range.elem (1) - 1;
-          if (start > player->get_total_samples () or
-              start > end or end > player->get_total_samples ())
+          if (start > player->get_total_samples ()
+              || start > end || end > player->get_total_samples ())
             error ("audioplayer: invalid range specified for playback");
           player->set_sample_number (start);
           player->set_end_sample (end);
         }
       else
         {
           unsigned int start;
           start = args(1).int_value () - 1;
