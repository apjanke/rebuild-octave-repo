# HG changeset patch
# User jwe
# Date 796539641 0
#      Thu Mar 30 05:00:41 1995 +0000
# Node ID d94bcafabac2eb4967287251a3112462b3b9ebbc
# Parent  669750cfad844a92ccb30bdcfbded6bee9834571
[project @ 1995-03-30 04:57:32 by jwe]

diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -16,17 +16,17 @@ dnl Copyright (C) 1992, 1993, 1994, 1995
 ### ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 ### FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ### for more details.
 ### 
 ### You should have received a copy of the GNU General Public License
 ### along with Octave; see the file COPYING.  If not, write to the Free
 ### Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
 
-AC_REVISION($Revision: 1.105 $)
+AC_REVISION($Revision: 1.106 $)
 AC_PREREQ(2.0)
 AC_INIT(src/octave.cc)
 AC_CONFIG_HEADER(config.h)
 
 AC_DEFINE(OCTAVE_SOURCE, 1)
 
 AC_CANONICAL_HOST
 if test -z "$host"; then
@@ -336,17 +336,16 @@ esac
 
 AC_SUBST(GCC_IEEE_FP_FLAG)
 
 ### Special checks for odd OS specific things.
 
 AC_ISC_POSIX
 AC_MINIX
 AC_AIX
-AC_FUNC_STRFTIME
 AC_CHECK_LIB(sun, getpwnam)
 
 ### How big are ints and how are they oriented?  These could probably
 ### be eliminated in favor of run-time checks.
 
 AC_CHECK_SIZEOF(short)
 AC_CHECK_SIZEOF(int)
 AC_CHECK_SIZEOF(long)
@@ -636,16 +635,17 @@ esac
 
 AC_CHECK_FUNCS(acosh asinh atanh erf erfc)
 
 CFLAGS="$XCFLAGS"
 
 ### Checks for OS specific cruft.
 
 AC_STRUCT_TM
+AC_STRUCT_TIMEZONE
 AC_FUNC_SETVBUF_REVERSED
 TERMLIBS=""
 for termlib in termcap terminfo curses termlib ; do
   AC_CHECK_LIB(${termlib}, main, [TERMLIBS="${TERMLIBS} -l${termlib}"])
   case "${TERMLIBS}" in
     *-l${termlib}*)
       AC_MSG_RESULT([defining TERMLIBS to be $TERMLIBS])
       break
diff --git a/src/Makefile.in b/src/Makefile.in
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -75,22 +75,22 @@ TI_SRC := Array-tc.cc Map-tc.cc DLList-f
 
 TI_OBJ := $(patsubst %.cc, %.o, $(TI_SRC))
 
 SOURCES := acosh.c arith-ops.cc asinh.c atanh.c data.cc dirfns.cc \
 	dynamic-ld.cc erf.c erfc.c error.cc file-io.cc fnmatch.c \
 	getopt.c getopt1.c gripes.cc help.cc idx-vector.cc \
 	input.cc lex.l load-save.cc mappers.cc octave.cc \
 	octave-hist.cc oct-obj.cc pager.cc parse.y pr-output.cc \
-	procstream.cc sighandlers.cc strcasecmp.c strncase.c strfns.cc \
-	symtab.cc sysdep.cc tc-rep.cc tc-rep-ass.cc tc-rep-idx.cc \
-	tempname.c timefns.cc tempnam.c token.cc tree-base.cc \
-	tree-cmd.cc tree-const.cc tree-expr.cc tree-misc.cc \
-	tree-plot.cc unwind-prot.cc user-prefs.cc utils.cc \
-	variables.cc xdiv.cc xpow.cc Map.cc SLStack.cc
+	procstream.cc sighandlers.cc strcasecmp.c strncase.c \
+	strfns.cc strftime.c symtab.cc sysdep.cc tc-rep.cc \
+	tc-rep-ass.cc tc-rep-idx.cc tempname.c timefns.cc tempnam.c \
+	token.cc tree-base.cc tree-cmd.cc tree-const.cc tree-expr.cc \
+	tree-misc.cc tree-plot.cc unwind-prot.cc user-prefs.cc \
+	utils.cc variables.cc xdiv.cc xpow.cc Map.cc SLStack.cc
 
 OBJECTS_4 := $(SOURCES) builtins.o
 OBJECTS_3 := $(patsubst %.l, %.o, $(OBJECTS_4))
 OBJECTS_2 := $(patsubst %.y, %.o, $(OBJECTS_3))
 OBJECTS_1 := $(patsubst %.c, %.o, $(OBJECTS_2))
 OBJECTS := $(patsubst %.cc, %.o, $(OBJECTS_1))
 
 # Ugh.
diff --git a/src/pr-output.cc b/src/pr-output.cc
--- a/src/pr-output.cc
+++ b/src/pr-output.cc
@@ -49,22 +49,25 @@ Software Foundation, 675 Mass Ave, Cambr
 
 // Current format string for real numbers and the real part of complex
 // numbers.
 static char *curr_real_fmt = 0;
 
 // Current format string for the imaginary part of complex numbers.
 static char *curr_imag_fmt = 0;
 
-// Nonzero means don\'t do any fancy formatting.
+// Nonzero means don't do any fancy formatting.
 static int free_format = 0;
 
 // Nonzero means print plus sign for nonzero, blank for zero.
 static int plus_format = 0;
 
+// Nonzero means don't put newlines around the column number headers.
+static int compact_format = 0;
+
 // Nonzero means always print like dollars and cents.
 static int bank_format = 0;
 
 // Nonzero means use an e format.
 static int print_e = 0;
 
 // Nonzero means print E instead of e for exponent field.
 static int print_big_e = 0;
@@ -873,16 +876,39 @@ print_empty_matrix (ostream& os, int nr,
     {
       os << "[]";
       if (user_pref.print_empty_dimensions)
 	os << "(" << nr << "x" << nc << ")";
       os << "\n";
     }
 }
 
+static void
+pr_col_num_header (ostream& os, int total_width, int max_width,
+		   int lim, int col)
+{
+  if (total_width > max_width && user_pref.split_long_rows)
+    {
+      if (col != 0 && ! compact_format)
+	os << "\n";
+
+      int num_cols = lim - col;
+
+      if (num_cols == 1)
+	os << " Column " << col + 1 << ":\n";
+      else if (num_cols == 2)
+	os << " Columns " << col + 1 << " and " << lim << ":\n";
+      else
+	os << " Columns " << col + 1 << " through " << lim << ":\n";
+
+      if (! compact_format)
+	os << "\n";
+    }
+}
+
 void
 octave_print_internal (ostream& os, double d, int pr_as_read_syntax)
 {
   if (plus_format)
     {
       if (d == 0.0)
 	os << " ";
       else
@@ -997,31 +1023,17 @@ octave_print_internal (ostream& os, cons
 	    }
 	}
       else
 	{
 	  for (int col = 0; col < nc; col += inc)
 	    {
 	      int lim = col + inc < nc ? col + inc : nc;
 
-	      if (total_width > max_width && user_pref.split_long_rows)
-		{
-		  if (col != 0)
-		    os << "\n";
-
-		  int num_cols = lim - col;
-		  if (num_cols == 1)
-		    os << " Column " << col + 1 << ":\n\n";
-		  else if (num_cols == 2)
-		    os << " Columns " << col + 1 << " and " << lim
-		      << ":\n\n";
-		  else
-		    os << " Columns " << col + 1 << " through " << lim
-		      << ":\n\n";
-		}
+	      pr_col_num_header (os, total_width, max_width, lim, col);
 
 	      for (int i = 0; i < nr; i++)
 		{
 		  for (int j = col; j < lim; j++)
 		    {
 		      os << "  ";
 
 		      pr_float (os, m.elem (i, j), fw);
@@ -1156,31 +1168,17 @@ octave_print_internal (ostream& os, cons
 	    }
 	}
       else
 	{
 	  for (int col = 0; col < nc; col += inc)
 	    {
 	      int lim = col + inc < nc ? col + inc : nc;
 
-	      if (total_width > max_width && user_pref.split_long_rows)
-		{
-		  if (col != 0)
-		    os << "\n";
-
-		  int num_cols = lim - col;
-		  if (num_cols == 1)
-		    os << " Column " << col + 1 << ":\n\n";
-		  else if (num_cols == 2)
-		    os << " Columns " << col + 1 << " and " << lim
-		      << ":\n\n";
-		  else
-		    os << " Columns " << col + 1 << " through " << lim
-		      << ":\n\n";
-		}
+	      pr_col_num_header (os, total_width, max_width, lim, col);
 
 	      for (int i = 0; i < nr; i++)
 		{
 		  for (int j = col; j < lim; j++)
 		    {
 		      os << "  ";
 
 		      pr_complex (os, cm.elem (i, j));
@@ -1260,31 +1258,17 @@ octave_print_internal (ostream& os, cons
 		inc++;
 	    }
 
 	  int col = 0;
 	  while (col < num_elem)
 	    {
 	      int lim = col + inc < num_elem ? col + inc : num_elem;
 
-	      if (total_width > max_width && user_pref.split_long_rows)
-		{
-		  if (col != 0)
-		    os << "\n";
-
-		  int num_cols = lim - col;
-		  if (num_cols == 1)
-		    os << " Column " << col + 1 << ":\n\n";
-		  else if (num_cols == 2)
-		    os << " Columns " << col + 1 << " and " << lim
-		      << ":\n\n";
-		  else
-		    os << " Columns " << col + 1 << " through " << lim
-		      << ":\n\n";
-		}
+	      pr_col_num_header (os, total_width, max_width, lim, col);
 
 	      for (int i = col; i < lim; i++)
 		{
 		  double val = base + i * increment;
 		  os << "  ";
 		  pr_float (os, val, fw);
 		}
 
@@ -1413,19 +1397,23 @@ set_format_style (int argc, char **argv)
 	      free_format = 1;
 	    }
 	  else if (strcmp (*argv, "none") == 0)
 	    {
 	      init_format_state ();
 	      free_format = 1;
 	    }
 	  else if (strcmp (*argv, "compact") == 0)
-	    error ("format: format state `compact' not implemented yet");
+	    {
+	      compact_format = 1;
+	    }
 	  else if (strcmp (*argv, "loose") == 0)
-	    error ("format: format state `loose' not implemented yet");
+	    {
+	      compact_format = 0;
+	    }
 	  else
 	    error ("format: unrecognized format state `%s'", *argv);
 	}
       else
 	usage ("format [format_state]");
     }
   else
     {
