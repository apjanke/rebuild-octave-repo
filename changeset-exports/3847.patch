# HG changeset patch
# User jwe
# Date 997464024 0
#      Fri Aug 10 17:20:24 2001 +0000
# Node ID 92fb162eba24201c9ad374258b198b0cfe693e19
# Parent  08cd791cd6134f0a9be37666ed6ad3d122af9aa5
[project @ 2001-08-10 17:18:17 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,17 @@
+2001-08-10  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* mkoctfile.in: Substitute F2C and F2CFLAGS. Make it possible to
+	use f2c and a C compile to compiling Fortran source files.  Print
+	warnings and error message on stderr, not stdout.  Issue warnings
+	if it is not possible to comiple Fortran, C, or C++ files.
+
+	* configure.in (%.c : %.f): Don't use cat in F2C rule.
+
 2001-07-27  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* Makeconf.in (do-subst-config-vals): Substitute DEPEND_FLAGS and
 	DEPEND_EXTRA_SED_PATTERN.
 	* mkoctfile.in: Handle --depend.
 
 2001-07-25  Rafael Laboissiere  <rafael@laboissiere.net>
 
diff --git a/INSTALL.Windows b/INSTALL.Windows
--- a/INSTALL.Windows
+++ b/INSTALL.Windows
@@ -1,8 +1,14 @@
+*** PLEASE NOTE: This information is mostly out of date.  It would be
+*** useful for someone who uses Octave on Windows to take over
+*** mainenance of this and other files related to running Octave on
+*** Windows systems.
+
+
 Instructions for installing Octave on Windows NT/95 systems using the
 beta 18 release of the gnu-win32 tools from Cygnus Support.
 
 1. Install the Cygnus gnu-win32 tools.  You only need the user tools,
    but you can install the full development kit instead (either will
    work -- the development kit contains all the user tools plus the
    GNU compilers and other development tools that are not needed to
    just run Octave).  The gnu-win32 tools are available from
diff --git a/README.Windows b/README.Windows
--- a/README.Windows
+++ b/README.Windows
@@ -1,8 +1,14 @@
+*** PLEASE NOTE: This information is mostly out of date.  It would be
+*** useful for someone who uses Octave on Windows to take over
+*** mainenance of this and other files related to running Octave on
+*** Windows systems.
+
+
 Octave has been ported to Windows NT and Windows 95 using the gnu-win32
 tools from Cygnus Support.  If you would like to volunteer to work on
 improving this port, please contact bug-octave@bevo.che.wisc.edu.
 
 The directory ftp://ftp.che.wisc.edu/pub/octave/BINARIES/gnu-win32
 contains a binary distribution of Octave for Windows NT/95 along with
 installation instructions.  Unless you are interested in doing some
 hacking, you should use the binary releases.
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -16,17 +16,17 @@ dnl Copyright (C) 1996, 1997 John W. Eat
 ### FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ### for more details.
 ### 
 ### You should have received a copy of the GNU General Public License
 ### along with Octave; see the file COPYING.  If not, write to the Free
 ### Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ### 02111-1307, USA. 
 
-AC_REVISION($Revision: 1.349 $)
+AC_REVISION($Revision: 1.350 $)
 AC_PREREQ(2.9)
 AC_INIT(src/octave.cc)
 AC_CONFIG_HEADER(config.h)
 
 AC_DEFINE(OCTAVE_SOURCE, 1)
 
 OCTAVE_HOST_TYPE
 
@@ -538,17 +538,17 @@ EOF
   if test -z "$FLIBS"; then
     warn_f2c_no_lib="I found f2c but not libf2c.a, or libF77.a and libI77.a"
     AC_MSG_WARN($warn_f2c_no_lib)
   fi
   f77_rules_frag=Makefrag.f77
   cat << \EOF > $f77_rules_frag
 
 %.c : %.f
-	cat $< | $(F2C) $(F2CFLAGS) > $(@F)
+	$(F2C) $(F2CFLAGS) < $< > $(@F)
 
 %.o : %.f
 
 EOF
 else
   AC_MSG_WARN([in order to build octave, you must have a compatible])
   AC_MSG_WARN([Fortran compiler or f2c installed and in your path.])
   AC_MSG_ERROR([See the file INSTALL for more information.])
diff --git a/mkoctfile.in b/mkoctfile.in
--- a/mkoctfile.in
+++ b/mkoctfile.in
@@ -7,16 +7,18 @@
 
 set -e
 
 # Default values for these variables are filled in when Octave is
 # compiled. 
 
 : ${CPPFLAGS=%OCTAVE_CONF_CPPFLAGS%}
 : ${INCFLAGS=%OCTAVE_CONF_MKOCTFILE_INCFLAGS%}
+: ${F2C=%OCTAVE_CONF_F2C%}
+: ${F2CFLAGS=%OCTAVE_CONF_F2CFLAGS%}
 : ${F77=%OCTAVE_CONF_F77%}
 : ${FFLAGS=%OCTAVE_CONF_FFLAGS%}
 : ${FPICFLAG=%OCTAVE_CONF_FPICFLAG%}
 : ${CC=%OCTAVE_CONF_CC%}
 : ${CFLAGS=%OCTAVE_CONF_CFLAGS%}
 : ${CPICFLAG=%OCTAVE_CONF_CPICFLAG%}
 : ${CXX=%OCTAVE_CONF_CXX%}
 : ${CXXFLAGS=%OCTAVE_CONF_CXXFLAGS%}
@@ -51,17 +53,17 @@ defs=
 ldflags=
 dbg=:
 strip=false
 link=true
 depend=false
 compile=true
 
 if [ $# -eq 0 ]; then
-  echo $usage_msg
+  echo $usage_msg 1>&2
   exit 1
 fi
 
 while [ $# -gt 0 ]; do
   file=
   case "$1" in
     *.c)
       file=$1
@@ -78,17 +80,17 @@ while [ $# -gt 0 ]; do
     *.o)
       file=$1
       objfiles="$objfiles $file"
     ;;
     -d | --debug | -v | --verbose)
       dbg=echo
     ;;
     -h | -\? | --help)
-      echo $usage_msg
+      echo $usage_msg 1>&2
       cat << EOF
 
 Options:
 
   -h, -?, --help          Print this message.
 
   -IDIR                   Add -IDIR to compile commands.
 
@@ -103,38 +105,39 @@ Options:
 
   -c                      Compile, but do not link.
 
   -o FILE, --output FILE  Output file name.  Default extension is .oct.
 
   -p VAR, --print VAR     Print configuration variable VAR.  Recognized
                           variables are:
 
-			    CPPFLAGS    CXX
-			    INCFLAGS	CXXFLAGS
-			    F77		CXXPICFLAG
-			    FFLAGS	XTRA_CFLAGS
-			    FPICFLAG	XTRA_CXXFLAGS
-			    CC		SHLEXT
-			    CFLAGS	SH_LD
-			    CPICFLAG	SH_LDFLAGS
-
+                            CPPFLAGS    CPICFLAG
+                            INCFLAGS    CXX
+                            F2C         CXXFLAGS
+                            F2CFLAGS    CXXPICFLAG
+                            F77         XTRA_CFLAGS
+                            FFLAGS      XTRA_CXXFLAGS
+                            FPICFLAG    SHLEXT
+                            CC          SH_LD
+                            CFLAGS      SH_LDFLAGS
+                            
   -s, --strip             Strip output file.
 
   -v, --verbose           Echo commands as they are executed.
 
   FILE                    Compile or link FILE.  Recognized file types are:
 
-			    .c    C source
-			    .cc   C++ source
-			    .C    C++ source
-			    .cpp  C++ source
-			    .f    Fortran source
-			    .F    Fortran source
-			    .o    object file
+                            .c    C source
+                            .cc   C++ source
+                            .C    C++ source
+                            .cpp  C++ source
+                            .f    Fortran source
+                            .F    Fortran source
+                            .o    object file
 
 EOF
       exit 0
     ;;
     -I*)
       incflags="$incflags $1"
     ;;
     -D*)
@@ -147,37 +150,37 @@ EOF
       depend=true
       compile=false
     ;;
     -o | --output)
       shift
       if [ $# -gt 0 ]; then
         octfile=`echo $1 | sed 's,\.[^.]*$,,'`.oct
       else
-        echo "mkoctfile: output file name missing"
+        echo "mkoctfile: output file name missing" 1>&2
       fi
     ;;
     -p | --print)
       shift
       if [ $# -gt 0 ]; then
         eval echo \${$1}
         exit 0
       else
-        echo "mkprdmod: --print requires argument"
+        echo "mkoctfile: --print requires argument" 1>&2
         exit 1
       fi
     ;;
     -s | --strip)
       strip=true
     ;;
     -c)
       link=false
     ;;
     *)
-      echo "mkoctfile: unrecognized argument $1"
+      echo "mkoctfile: unrecognized argument $1" 1>&2
       exit 1
     ;;
   esac
   if [ -n "$file" ]; then
     if [ -z "$octfile" ]; then
       octfile=`echo $file | sed 's,\.[^.]*$,,'`.oct
     fi
   fi
@@ -186,41 +189,42 @@ done
 
 # Generate dependency files for C and C++ files.
 
 if $depend; then
   if [ -n "$cfiles" ]; then
     for f in $cfiles; do
       b=`echo $f | sed 's,\.c$,,'`
       d=$b.d
-
-      $dbg rm -f $d
-      eval rm -f $d
+      cmd="rm -f $d"
+      $dbg $cmd
+      eval $cmd
       cmd="$CC $DEPEND_FLAGS $CPPFLAGS $ALL_CFLAGS $f | sed $DEPEND_EXTRA_SED_PATTERN -e 's,^[^:]*/\(.*\.o\):,\1:,' -e 's,$b\.o,pic/& & $d,g' > $d-t && mv $d-t $d"
       $dbg $cmd
       eval $cmd
     done
   fi
 
   if [ -n "$ccfiles" ]; then
     for f in $ccfiles; do
       case $f in
-	*.cc)
-	  b=`echo $f | sed 's,\.cc$,,'`
-	;;
-	*.C)
-	  b=`echo $f | sed 's,\.C$,,'`
-	;;
-	*.cpp)
-	  b=`echo $f | sed 's,\.cpp$,,'`
-	;;
+        *.cc)
+          b=`echo $f | sed 's,\.cc$,,'`
+        ;;
+        *.C)
+          b=`echo $f | sed 's,\.C$,,'`
+        ;;
+        *.cpp)
+          b=`echo $f | sed 's,\.cpp$,,'`
+        ;;
       esac
       d=$b.d
-      $dbg rm -f $d
-      eval rm -f $d
+      cmd="rm -f $d"
+      $dbg $cmd
+      eval $cmd
       cmd="$CXX $DEPEND_FLAGS $CPPFLAGS $ALL_CXXFLAGS $f | sed $DEPEND_EXTRA_SED_PATTERN -e 's,^[^:]*/\(.*\.o\):,\1:,' -e 's,$b\.o,pic/& & $d,g' > $d-t && mv $d-t $d"
       $dbg $cmd
       eval $cmd
     done
   fi
   # If generating dependencies, that's all we do.
   exit 0
 fi
@@ -233,73 +237,98 @@ if [ -n "$f77files" ]; then
     case $f in
       *.f)
         b=`echo $f | sed 's,\.f$,,'`
       ;;
       *.F)
         b=`echo $f | sed 's,\.F$,,'`
       ;;
     esac
-    o=$b.o
-    objfiles="$objfiles $o"
-    $dbg $F77 -c $FPICFLAG $ALL_FFLAGS $f -o $o
-    eval $F77 -c $FPICFLAG $ALL_FFLAGS $f -o $o
+    if [ -n "$F77" ]; then
+      o=$b.o
+      objfiles="$objfiles $o"
+      cmd="$F77 -c $FPICFLAG $ALL_FFLAGS $f -o $o"
+      $dbg $cmd
+      eval $cmd
+    elif [ -n "$F2C" ]; then
+      c=$b.c
+      cfiles="$cfiles $c"
+      cmd="$F2C $F2CFLAGS < $f > $c"
+      $dbg $cmd
+      eval $cmd
+    else
+      echo "mkoctfile: no way to compile Fortran file $f" 1>&2
+    fi
   done
 fi
 
 if [ -n "$cfiles" ]; then
   for f in $cfiles; do
-    b=`echo $f | sed 's,\.c$,,'`
-    o=$b.o
-    objfiles="$objfiles $o"
-    $dbg $CC -c $CPPFLAGS $CPICFLAG $ALL_CFLAGS $incflags $defs $f -o $o
-    eval $CC -c $CPPFLAGS $CPICFLAG $ALL_CFLAGS $incflags $defs $f -o $o
+    if [ -n  "$CC" ]; then
+      b=`echo $f | sed 's,\.c$,,'`
+      o=$b.o
+      objfiles="$objfiles $o"
+      cmd="$CC -c $CPPFLAGS $CPICFLAG $ALL_CFLAGS $incflags $defs $f -o $o"
+      $dbg $cmd
+      eval $cmd
+    else
+      echo "mkoctfile: no way to compile C++ file $f" 1>&2
+    fi
   done
 fi
 
 if [ -n "$ccfiles" ]; then
   for f in $ccfiles; do
-    case $f in
-      *.cc)
-        b=`echo $f | sed 's,\.cc$,,'`
-      ;;
-      *.C)
-        b=`echo $f | sed 's,\.C$,,'`
-      ;;
-      *.cpp)
-        b=`echo $f | sed 's,\.cpp$,,'`
-      ;;
-    esac
-    o=$b.o
-    objfiles="$objfiles $o"
-    $dbg $CXX -c $CPPFLAGS $CXXPICFLAG $ALL_CXXFLAGS $incflags $defs $f -o $o
-    eval $CXX -c $CPPFLAGS $CXXPICFLAG $ALL_CXXFLAGS $incflags $defs $f -o $o
+    if [ -n "$CXX" ]; then
+      case $f in
+	*.cc)
+	  b=`echo $f | sed 's,\.cc$,,'`
+	;;
+	*.C)
+	  b=`echo $f | sed 's,\.C$,,'`
+	;;
+	*.cpp)
+	  b=`echo $f | sed 's,\.cpp$,,'`
+	;;
+      esac
+      o=$b.o
+      objfiles="$objfiles $o"
+      cmd="$CXX -c $CPPFLAGS $CXXPICFLAG $ALL_CXXFLAGS $incflags $defs $f -o $o"
+      $dbg $cmd
+      eval $cmd
+    else
+      echo "mkoctfile: no way to compile C++ file $f" 1>&2
+    fi
   done
 fi
 
 ## Uncomment the following group of lines if you get `Text file busy'
 ## errors from ld.  This may happen if the .oct file is currently
 ## running while you are trying to recompile it.  We try moving first,
 ## since on some systems (HP-UX, maybe others) it is possible to
 ## rename running programs but not remove them.
 
 ## if [ -f "$octfile" ]; then
-##   $dbg "mv $octfile $octfile.bak"
-##   mv $octfile $octfile.bak
-##   $dbg "rm -f $octfile.bak"
-##   rm -f $octfile.bak
+##   cmd="mv $octfile $octfile.bak"
+##   $dbg $cmd
+##   eval $cmd
+##   cmd="rm -f $octfile.bak"
+##   $dbg $cmd
+##   eval $cmd
 ## fi
 
 # Link all the object files.
 
 if $link; then
-  $dbg $SH_LD $SH_LDFLAGS -o $octfile $objfiles $ldflags
-  eval $SH_LD $SH_LDFLAGS -o $octfile $objfiles $ldflags
+  cmd="$SH_LD $SH_LDFLAGS -o $octfile $objfiles $ldflags"
+  $dbg $cmd
+  eval $cmd
 
 # Maybe strip it.
 
-if $strip; then
-  $dbg strip $octfile
-  eval strip $octfile
-fi
+  if $strip; then
+    cmd="strip $octfile"
+    $dbg $cmd
+    eval $cmd
+  fi
 fi
 
 exit 0
