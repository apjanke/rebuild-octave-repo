# HG changeset patch
# User Rik <rik@octave.org>
# Date 1471818292 25200
#      Sun Aug 21 15:24:52 2016 -0700
# Node ID e6df1ddfc3cff4d1de78c1e3cd71635d51b4115e
# Parent  4304656d413d2c772659bf9bc8a1702fce5f940b
Change DefaultAxesBox property to "off".

* NEWS: Announce change.  Wrap lines to 72 characters.

* graphics.cc (axes::properties::set_defaults): Change default "box" to "off".

* graphics.in.h (axes properties): Change default "box" to "off".

* contour3.m, isosurface.m, plot.m, private/__ezplot__.m, quiver3.m, ribbon.m,
scatter3.m, slice.m, surface.m, tetramesh.m, trimesh.m, trisurf.m: Remove
code to force 'box' to 'off'.

diff --git a/NEWS b/NEWS
--- a/NEWS
+++ b/NEWS
@@ -17,23 +17,24 @@ Summary of important user-visible change
     Examples: 0b101 == 5 or 0B1100_0001 == 0xC1
 
  ** The default colormap is now set to "viridis" which is also the
     default colormap in matplotlib.  This new colormap fixes some of the
     main issues with the old default colormap "jet" such as its bad
     "luminance profile" and is also more similar to Matlab's new default
     colormap "parula".
 
- ** The graphics command "hold on" now ensures that each new plot added to
-    an existing plot has a different color or linestyle according to the
-    "ColorOrder" and/or "LineStyleOrder" properties.  This is equivalent
-    to the old command "hold all" and was made for Matlab compatibility.
-    Existing code *may* produce differently colored plots if it did not
-    specify the color for a plot and relied on each new plot having the
-    default first color in the "ColorOrder" property.
+ ** The graphics command "hold on" now ensures that each new plot added
+    to an existing plot has a different color or linestyle according to
+    the "ColorOrder" and/or "LineStyleOrder" properties.  This is
+    equivalent to the old command "hold all" and was made for Matlab
+    compatibility.  Existing code *may* produce differently colored
+    plots if it did not specify the color for a plot and relied on each
+    new plot having the default first color in the "ColorOrder"
+    property.
 
  ** When starting, Octave now looks in the function path for a file
     startup.m and executes any commands found there.  This change was
     made to accommodate Matlab users.  Octave has it's own configuration
     system based on the file .octaverc which is preferred.
 
  ** Octal ('\NNN') and hex ('\xNN') escape sequences in single quoted
     strings are now interpreted by the function do_string_escapes().
@@ -97,31 +98,37 @@ Summary of important user-visible change
 
  ** The axes properties "TitleFontSizeMultiplier" and "TitleFontWeight"
     are now implemented which control the default appearance of text
     created with title() appear.
     The axes property "LabelFontSizeMultiplier" is now implemented
     which controls the default appearance of text created with
     xlabel(), ylabel(), or zlabel().
 
+ ** The graphics property "box" for axes now defaults to "off".
+    To obtain equivalent plots to previous versions of Octave use
+      set (0, "DefaultAxesBox", "off");
+    in your .octaverc file.
+
  ** The graphics property "erasemode" has been hidden, and will
     eventually be removed.  This property has also been removed
     from Matlab, and was never implemented in Octave.
 
- ** The graphics property "graphicssmothing" for figures now controls whether
-    anti-aliasing will be use for lines.  The default is "on".
+ ** The graphics property "graphicssmothing" for figures now controls
+    whether anti-aliasing will be used for lines.  The default is "on".
 
  ** The value "zero" for the axes properties "xaxislocation" and
     "yaxislocation" has been deprecated and will be removed from
     Octave 4.6.  Use "origin" instead.
 
  ** The publish function allows easy publication of Octave script files
-    in HTML or other formats, including figures and output created by this
-    script.  It comes with its counterpart grabcode, which lets one literally
-    grab the HTML published code from a remote website, for example.
+    in HTML or other formats, including figures and output created by
+    this script.  It comes with its counterpart grabcode, which lets one
+    literally grab the HTML published code from a remote website, for
+    example.
 
  ** Other new functions added in 4.2:
 
       audioformats
       camlight
       condeig
       deg2rad
       dialog
diff --git a/libinterp/corefcn/graphics.cc b/libinterp/corefcn/graphics.cc
--- a/libinterp/corefcn/graphics.cc
+++ b/libinterp/corefcn/graphics.cc
@@ -4786,17 +4786,17 @@ axes::properties::set_defaults (base_gra
   alimmode = "auto";
   climmode = "auto";
   xlimmode = "auto";
   ylimmode = "auto";
   zlimmode = "auto";
 
   ambientlightcolor = Matrix (1, 3, 1.0);
 
-  box = "on";
+  box = "off";
   boxstyle = "back";
 
   // Note: camera properties (not mode) will be set in update_transform
   camerapositionmode = "auto";
   cameratargetmode = "auto";
   cameraupvectormode = "auto";
   cameraviewanglemode = "auto";
 
diff --git a/libinterp/corefcn/graphics.in.h b/libinterp/corefcn/graphics.in.h
--- a/libinterp/corefcn/graphics.in.h
+++ b/libinterp/corefcn/graphics.in.h
@@ -3807,17 +3807,17 @@ public:
 
     // Programming note: Keep property list sorted if new ones are added.
 
     BEGIN_PROPERTIES (axes)
       radio_property activepositionproperty , "{outerposition}|position"
       row_vector_property alim m , default_lim ()
       radio_property alimmode , "{auto}|manual"
       color_property ambientlightcolor , color_values (1, 1, 1)
-      bool_property box , "on"
+      bool_property box , "off"
       radio_property boxstyle , "{back}|full"
       array_property cameraposition m , Matrix (1, 3, 0.0)
       radio_property camerapositionmode , "{auto}|manual"
       array_property cameratarget m , Matrix (1, 3, 0.0)
       radio_property cameratargetmode , "{auto}|manual"
       array_property cameraupvector m , Matrix (1, 3, 0.0)
       radio_property cameraupvectormode , "{auto}|manual"
       double_property cameraviewangle m , 6.6086
diff --git a/scripts/plot/draw/contour3.m b/scripts/plot/draw/contour3.m
--- a/scripts/plot/draw/contour3.m
+++ b/scripts/plot/draw/contour3.m
@@ -76,17 +76,17 @@ function [c, h] = contour3 (varargin)
     [ctmp, htmp] = __contour__ (hax, "auto", varargin{:});
   unwind_protect_cleanup
     if (! isempty (oldfig))
       set (0, "currentfigure", oldfig);
     endif
   end_unwind_protect
 
   if (! ishold ())
-    set (hax, "view", [-37.5, 30], "box", "off",
+    set (hax, "view", [-37.5, 30],
               "xgrid", "on", "ygrid", "on", "zgrid", "on");
   endif
 
   if (nargout > 0)
     c = ctmp;
     h = htmp;
   endif
 
diff --git a/scripts/plot/draw/isosurface.m b/scripts/plot/draw/isosurface.m
--- a/scripts/plot/draw/isosurface.m
+++ b/scripts/plot/draw/isosurface.m
@@ -188,17 +188,17 @@ function varargout = isosurface (varargi
       else
         ec = "none";
       endif
       pa = patch ("Faces", fvc.faces, "Vertices", fvc.vertices,
                   "FaceVertexCData", fc,
                   "FaceColor", "flat", "EdgeColor", ec,
                   "FaceLighting", "gouraud");
       if (! ishold ())
-        set (hax, "View", [-37.5, 30], "Box", "off");
+        set (hax, "View", [-37.5, 30]);
       endif
       isonormals (x, y, z, v, pa);
       lights = findobj (hax, "Type", "light");
       if (isempty (lights))
         camlight ();
       endif
 
     case 1
diff --git a/scripts/plot/draw/plot.m b/scripts/plot/draw/plot.m
--- a/scripts/plot/draw/plot.m
+++ b/scripts/plot/draw/plot.m
@@ -215,16 +215,20 @@ function h = plot (varargin)
 
   oldfig = [];
   if (! isempty (hax))
     oldfig = get (0, "currentfigure");
   endif
   unwind_protect
     hax = newplot (hax);
     htmp = __plt__ ("plot", hax, varargin{:});
+
+    if (! ishold ())
+      set (hax, "box", "on");
+    endif
   unwind_protect_cleanup
     if (! isempty (oldfig))
       set (0, "currentfigure", oldfig);
     endif
   end_unwind_protect
 
   if (nargout > 0)
     h = htmp;
diff --git a/scripts/plot/draw/private/__ezplot__.m b/scripts/plot/draw/private/__ezplot__.m
--- a/scripts/plot/draw/private/__ezplot__.m
+++ b/scripts/plot/draw/private/__ezplot__.m
@@ -444,17 +444,16 @@ function [h, needusage] = __ezplot__ (pl
         endif
       endif
     elseif (isplot3)
       if (animate)
         ## draw animation, then replace with true plot3
         comet3 (hax, X, Y, Z, .05);
       endif
       h = feval (pltfunc, hax, X, Y, Z);
-      set (hax, "box", "off");
       grid (hax, "on");
       zlabel (hax, "z");
     else  # mesh and surf plots
       h = feval (pltfunc, hax, X, Y, Z);
       ## FIXME: surf, mesh should really do a better job of setting zlim
       if (! parametric)
         axis (hax, domain);
       endif
diff --git a/scripts/plot/draw/quiver3.m b/scripts/plot/draw/quiver3.m
--- a/scripts/plot/draw/quiver3.m
+++ b/scripts/plot/draw/quiver3.m
@@ -78,17 +78,17 @@ function h = quiver3 (varargin)
   if (! isempty (hax))
     oldfig = get (0, "currentfigure");
   endif
   unwind_protect
     hax = newplot (hax);
     htmp = __quiver__ (hax, true, varargin{:});
 
     if (! ishold (hax))
-      set (hax, "view", [-37.5, 30], "box", "off",
+      set (hax, "view", [-37.5, 30],
                 "xgrid", "on", "ygrid", "on", "zgrid", "on");
     endif
   unwind_protect_cleanup
     if (! isempty (oldfig))
       set (0, "currentfigure", oldfig);
     endif
   end_unwind_protect
 
diff --git a/scripts/plot/draw/ribbon.m b/scripts/plot/draw/ribbon.m
--- a/scripts/plot/draw/ribbon.m
+++ b/scripts/plot/draw/ribbon.m
@@ -90,17 +90,17 @@ function h = ribbon (varargin)
       yy = x(:,c);
       xx = [c - width / 2, c + width / 2];
       [xx, yy] = meshgrid (xx, yy);
       cc = repmat (c, size (zz));
       htmp(c) = surface (xx, yy, zz, cc);
     endfor
 
     if (! ishold ())
-      set (hax, "view", [-37.5, 30], "box", "off",
+      set (hax, "view", [-37.5, 30],
                 "xgrid", "on", "ygrid", "on", "zgrid", "on");
     endif
 
   unwind_protect_cleanup
     if (! isempty (oldfig))
       set (0, "currentfigure", oldfig);
     endif
   end_unwind_protect
diff --git a/scripts/plot/draw/scatter3.m b/scripts/plot/draw/scatter3.m
--- a/scripts/plot/draw/scatter3.m
+++ b/scripts/plot/draw/scatter3.m
@@ -78,17 +78,17 @@ function retval = scatter3 (varargin)
     oldfig = get (0, "currentfigure");
   endif
   unwind_protect
     hax = newplot (hax);
 
     htmp = __scatter__ (hax, 3, "scatter3", varargin{:});
 
     if (! ishold (hax))
-      set (hax, "view", [-37.5, 30], "box", "off",
+      set (hax, "view", [-37.5, 30],
                 "xgrid", "on", "ygrid", "on", "zgrid", "on");
     endif
   unwind_protect_cleanup
     if (! isempty (oldfig))
       set (0, "currentfigure", oldfig);
     endif
   end_unwind_protect
 
diff --git a/scripts/plot/draw/slice.m b/scripts/plot/draw/slice.m
--- a/scripts/plot/draw/slice.m
+++ b/scripts/plot/draw/slice.m
@@ -179,17 +179,17 @@ function h = slice (varargin)
         endfor
       endif
     else
       vi = interp3 (x, y, z, v, sx, sy, sz);
       htmp = surface (sx, sy, sz, vi);
     endif
 
     if (! ishold ())
-      set (hax, "view", [-37.5, 30.0], "box", "off",
+      set (hax, "view", [-37.5, 30.0],
                 "xgrid", "on", "ygrid", "on", "zgrid", "on");
     endif
 
   unwind_protect_cleanup
     if (! isempty (oldfig))
       set (0, "currentfigure", oldfig);
     endif
   end_unwind_protect
diff --git a/scripts/plot/draw/surface.m b/scripts/plot/draw/surface.m
--- a/scripts/plot/draw/surface.m
+++ b/scripts/plot/draw/surface.m
@@ -182,17 +182,17 @@ function [h, bad_usage] = __surface__ (a
     other_args = varargin(firststring:end);
   else
     other_args = {};  # make a default surface object.
   endif
   h = __go_surface__ (ax, "xdata", x, "ydata", y, "zdata", z, "cdata", c,
                       other_args{:});
 
   if (! ishold ())
-    set (ax, "view", [0, 90], "box", "off");
+    set (ax, "view", [0, 90]);
   endif
 
 endfunction
 
 
 ## Functional tests for surface() are in surf.m, surfc.m, surfl.m, and pcolor.m
 %!test
 %! hf = figure ("visible", "off");
diff --git a/scripts/plot/draw/tetramesh.m b/scripts/plot/draw/tetramesh.m
--- a/scripts/plot/draw/tetramesh.m
+++ b/scripts/plot/draw/tetramesh.m
@@ -101,17 +101,17 @@ function h = tetramesh (varargin)
       th = [1 2 3; 2 3 4; 3 4 1; 4 1 2];
       hvec(i) = patch ("Faces", th, "Vertices", X(T(i, :), :),
                        "FaceColor", cmap(C(i), :), "FaceAlpha", 1.0,
                        prop{:});
     endfor
   endif
 
   if (! ishold ())
-    set (hax, "view", [-37.5, 30], "box", "off");
+    set (hax, "view", [-37.5, 30]);
   endif
 
   if (nargout > 0)
     h = hvec;
   endif
 
 endfunction
 
diff --git a/scripts/plot/draw/trimesh.m b/scripts/plot/draw/trimesh.m
--- a/scripts/plot/draw/trimesh.m
+++ b/scripts/plot/draw/trimesh.m
@@ -79,17 +79,17 @@ function h = trimesh (tri, x, y, z, vara
 
     hax = newplot ();
 
     ## Tag object as "trimesh" so that hidden() can find it.
     htmp = patch ("Vertices", [x(:), y(:), z(:)], "Faces", tri,
                   "FaceVertexCdata", c, "EdgeColor", "flat", "FaceColor", "w",
                   "Tag", "trimesh", varargin{:});
     if (! ishold ())
-      set (hax, "view", [-37.5, 30], "box", "off",
+      set (hax, "view", [-37.5, 30],
                 "xgrid", "on", "ygrid", "on", "zgrid", "on");
     endif
   endif
 
   if (nargout > 0)
     h = htmp;
   endif
 
diff --git a/scripts/plot/draw/trisurf.m b/scripts/plot/draw/trisurf.m
--- a/scripts/plot/draw/trisurf.m
+++ b/scripts/plot/draw/trisurf.m
@@ -74,17 +74,17 @@ function h = trisurf (tri, x, y, z, vara
   endif
 
   hax = newplot ();
 
   htmp = patch ("Faces", tri, "Vertices", [x(:), y(:), z(:)],
                 "FaceVertexCData", c, varargin{:});
 
   if (! ishold ())
-    set (hax, "view", [-37.5, 30], "box", "off",
+    set (hax, "view", [-37.5, 30],
               "xgrid", "on", "ygrid", "on", "zgrid", "on");
   endif
 
   if (nargout > 0)
     h = htmp;
   endif
 
 endfunction
