# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1333652147 25200
#      Thu Apr 05 11:55:47 2012 -0700
# Node ID c67822beb7a422edf95419bbf95ddb5391e0eea2
# Parent  8c988dabbe8e61bac8067cb251689b674e07b857
maint: Backed out changeset 8c988dabbe8e

diff --git a/doc/interpreter/strings.txi b/doc/interpreter/strings.txi
--- a/doc/interpreter/strings.txi
+++ b/doc/interpreter/strings.txi
@@ -64,29 +64,29 @@ Types}, for more information about creat
 @end menu
 
 @node Escape Sequences in String Constants
 @section Escape Sequences in String Constants
 @cindex escape sequence notation
 In double-quoted strings, the backslash character is used to introduce
 @dfn{escape sequences} that represent other characters.  For example,
 @samp{\n} embeds a newline character in a double-quoted string and
-@samp{\"} embeds a double quote character.  In single-quoted strings, the
-backslash is not a special character.  An example showing the difference is
+@samp{\"} embeds a double quote character.  In single-quoted strings, backslash
+is not a special character.  Here is an example showing the difference:
 
 @example
 @group
 toascii ("\n")
     @result{} 10
 toascii ('\n')
     @result{} [ 92 110 ]
 @end group
 @end example
 
-Below is a table of all escape sequences recognized by Octave (within
+Here is a table of all the escape sequences used in Octave (within
 double quoted strings).  They are the same as those used in the C 
 programming language.
 
 @table @code
 @item \\
 Represents a literal backslash, @samp{\}.
 
 @item \"
@@ -142,31 +142,23 @@ example,
 
 @example
 @group
 'I can''t escape'
     @result{} I can't escape
 @end group
 @end example
 
-In scripts the two different string types can be distinguished, if necessary,
+In scripts the two different string types can be distinguished if necessary
 by using @code{is_dq_string} and @code{is_sq_string}.
 
 @DOCSTRING(is_dq_string)
 
 @DOCSTRING(is_sq_string)
 
-The use of double quotes for strings with escape sequences and single quotes
-for verbatim input is quite straightforward.  However, @sc{matlab} behavior
-is inconsistent in this regard and in certain instances will do escape sequence
-processing even within single quotes.  When absolute compatibility is essential
-Octave can perform the same processing.
-
-@DOCSTRING(single_quote_escape_processing)
-
 @node Character Arrays
 @section Character Arrays
 
 The string representation used by Octave is an array of characters, so
 internally the string "dddddddddd" is actually a row vector of length 10
 containing the value 100 in all places (100 is the ASCII code of "d").  This
 lends itself to the obvious generalization to character matrices.  Using a
 matrix of characters, it is possible to represent a collection of same-length
diff --git a/src/octave.cc b/src/octave.cc
--- a/src/octave.cc
+++ b/src/octave.cc
@@ -610,17 +610,16 @@ maximum_braindamage (void)
   bind_internal_variable ("crash_dumps_octave_core", false);
   bind_internal_variable ("default_save_options", "-mat-binary");
   bind_internal_variable ("do_braindead_shortcircuit_evaluation", true);
   bind_internal_variable ("fixed_point_format", true);
   bind_internal_variable ("history_timestamp_format_string",
                          "%%-- %D %I:%M %p --%%");
   bind_internal_variable ("page_screen_output", false);
   bind_internal_variable ("print_empty_dimensions", false);
-  bind_internal_variable ("single_quote_escape_processing", true);
 
   disable_warning ("Octave:abbreviated-property-match");
   disable_warning ("Octave:fopen-file-in-path");
   disable_warning ("Octave:function-name-clash");
   disable_warning ("Octave:load-file-in-path");
   disable_warning ("Octave:possible-matlab-short-circuit-operator");
 }
 
diff --git a/src/ov.cc b/src/ov.cc
--- a/src/ov.cc
+++ b/src/ov.cc
@@ -82,19 +82,16 @@ along with Octave; see the file COPYING.
 #include "gripes.h"
 #include "pager.h"
 #include "parse.h"
 #include "pr-output.h"
 #include "symtab.h"
 #include "utils.h"
 #include "variables.h"
 
-// Expand escape sequences even in single quoted strings (Matlab compatibility)
-bool Vsingle_quote_escape_processing = false;
-
 // We are likely to have a lot of octave_value objects to allocate, so
 // make the grow_size large.
 DEFINE_OCTAVE_ALLOCATOR2(octave_value, 1024);
 
 // FIXME
 
 // Octave's value type.
 
@@ -3042,47 +3039,8 @@ Return true if @var{x} is a double-quote
 %!assert (is_dq_string ("foo"), true)
 %!assert (is_dq_string ('foo'), false)
 %!assert (is_dq_string (1.0), false)
 %!assert (is_dq_string ({2.0}), false)
 
 %!error is_dq_string ()
 %!error is_dq_string ("foo", 2)
 */
-
-DEFUN (single_quote_escape_processing, args, nargout,
-  "-*- texinfo -*-\n\
-@deftypefn  {Built-in Function} {@var{val} =} single_quote_escape_processing ()\n\
-@deftypefnx {Built-in Function} {@var{old_val} =} single_quote_escape_processing (@var{new_val})\n\
-@deftypefnx {Built-in Function} {} single_quote_escape_processing (@var{new_val}, \"local\")\n\
-Query or set the internal variable that controls whether Octave processes\n\
-escape sequences within single quoted strings.\n\
-\n\
-Ordinarily, escape sequences such as \"\\n\" => newline are only processed\n\
-in double quoted strings.  However, @sc{matlab} performs escape sequence\n\
-processing even for single quoted strings for certain functions.  This\n\
-variable enables @sc{matlab} compatibility for these instances:\n\
-\n\
-@table @code\n\
-@item printf\n\
-@itemx sprintf\n\
-@itemx fprintf\n\
-Process format specification string @var{template}.\n\
-\n\
-@item error\n\
-Process format specification string @var{template}.\n\
-\n\
-@item regexp\n\
-@itemx regexpi\n\
-Process pattern string @var{pat}.\n\
-\n\
-@item regexprep\n\
-Process pattern string @var{pat} and replacement string @var{repstr}.\n\
-@end table\n\
-\n\
-When called from inside a function with the \"local\" option, the variable is\n\
-changed locally for the function and any subroutines it calls.  The original\n\
-variable value is restored when exiting the function.\n\
-@seealso{printf, sprintf, fprintf, error, regexp, regexpi, regexprep}\n\
-@end deftypefn")
-{
-  return SET_INTERNAL_VARIABLE (single_quote_escape_processing);
-}
diff --git a/src/ov.h b/src/ov.h
--- a/src/ov.h
+++ b/src/ov.h
@@ -1382,12 +1382,9 @@ DEF_VALUE_EXTRACTOR (SparseBoolMatrix, s
 template<> \
 inline VALUE octave_value_extract<VALUE> (const octave_value&) \
   { assert (false); return DEFVAL; }
 
 DEF_DUMMY_VALUE_EXTRACTOR (char, 0)
 DEF_DUMMY_VALUE_EXTRACTOR (octave_value, octave_value ())
 #undef DEF_DUMMY_VALUE_EXTRACTOR
 
-// Expand escape sequences even in single quoted strings (Matlab compatibility)
-extern bool Vsingle_quote_escape_processing;
-
 #endif
