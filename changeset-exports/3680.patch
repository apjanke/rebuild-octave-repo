# HG changeset patch
# User jwe
# Date 960494777 0
#      Thu Jun 08 20:06:17 2000 +0000
# Node ID b8b0f5ff28e2d33ac53dd7de4ef7397b991b2810
# Parent  0f319a2fca1276e0eeb2d1a46b9fe4d6ea2ed3fd
[project @ 2000-06-08 20:06:17 by jwe]

diff --git a/liboctave/Array2-idx.h b/liboctave/Array2-idx.h
--- a/liboctave/Array2-idx.h
+++ b/liboctave/Array2-idx.h
@@ -660,16 +660,21 @@ assign (Array2<LT>& lhs, const Array2<RT
 				  lhs.d2 = lhs.length ();
 				}
 			    }
 			  else if (lhs_is_empty && idx_i.is_colon ())
 			    {
 			      lhs.d1 = rhs.d1;
 			      lhs.d2 = rhs.d2;
 			    }
+			  else if (lhs_is_empty && idx_i.one_zero_only ())
+			    {
+			      lhs.d1 = idx_nr;
+			      lhs.d2 = idx_nc;
+			    }
 			  else if (rhs_nr == 1
 				   && (idx_nr == 1 || lhs_len == 1))
 			    {
 			      lhs.d1 = 1;
 			      lhs.d2 = lhs.length ();
 			    }
 			  else if (rhs_nc == 1
 				   && (idx_nc == 1 || lhs_len == 1))
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,17 @@
+2000-06-08  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* Array2-idx.h (assign): Allow x(bool) = RHS to succeed if x is
+	previously undefined and set size of x to size of bool index.
+	* idx-vector.cc (IDX_VEC_REP::maybe_convert_one_zero_to_idx):
+	Allow z_len to be zero.
+	(IDX_VEC_REP::freeze): If z_len is zero, set frozen_at_z_len to len.
+	If frozen, don't assert that frozen_at_z_len == z_len.
+
 2000-05-20  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* oct-rl-edit.c (octave_rl_clear_screen): Call _rl_clear_screen
 	instead of rl_clear_screen.
 
 2000-05-11  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* Array-d.cc: Instantiate ArrayN<double> here too.
diff --git a/liboctave/idx-vector.cc b/liboctave/idx-vector.cc
--- a/liboctave/idx-vector.cc
+++ b/liboctave/idx-vector.cc
@@ -400,17 +400,17 @@ IDX_VEC_REP::init_state (void)
     }
 
   initialized = 1;
 }
 
 void
 IDX_VEC_REP::maybe_convert_one_zero_to_idx (int z_len)
 {
-  if (one_zero && z_len == len)
+  if (one_zero && (z_len == len || z_len == 0))
     {
       if (num_ones == 0)
 	{
 	  len = 0;
 	  max_val = 0;
 	  min_val = 0;
 	  delete [] data;
 	  data = 0;
@@ -580,20 +580,17 @@ IDX_VEC_REP::print (std::ostream& os) co
     os << data[ii] << "\n";
   return os;
 }
 
 int
 IDX_VEC_REP::freeze (int z_len, const char *tag, int resize_ok)
 {
   if (frozen)
-    {
-      assert (frozen_at_z_len == z_len);
-      return frozen_len;
-    }
+    return frozen_len;
 
   frozen_len = -1;
 
   if (colon)
     frozen_len = z_len;
   else
     {
       if (len == 0)
@@ -628,17 +625,18 @@ IDX_VEC_REP::freeze (int z_len, const ch
 	      initialized = 0;
 	    }
 	  else
 	    frozen_len = length (z_len);
 	}
     }
 
   frozen = 1;
-  frozen_at_z_len = z_len;
+
+  frozen_at_z_len = z_len ? z_len : len;
 
   return frozen_len;
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
