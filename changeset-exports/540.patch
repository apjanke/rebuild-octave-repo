# HG changeset patch
# User jwe
# Date 774835289 0
#      Fri Jul 22 00:01:29 1994 +0000
# Node ID c07674bbc3b1ba408447dbc07820ec88af07a77c
# Parent  5ec10a984241bc21734f6307494160c81ef41251
[project @ 1994-07-21 23:59:00 by jwe]

diff --git a/src/dassl.cc b/src/dassl.cc
--- a/src/dassl.cc
+++ b/src/dassl.cc
@@ -168,18 +168,18 @@ where x, xdot, and res are vectors, and 
 
 typedef void (ODE_options::*d_set_opt_mf) (double);
 typedef double (ODE_options::*d_get_opt_mf) (void);
 
 #define MAX_TOKENS 3
 
 struct DAE_OPTIONS
 {
-  char *keyword;
-  char *kw_tok[MAX_TOKENS + 1];
+  const char *keyword;
+  const char *kw_tok[MAX_TOKENS + 1];
   int min_len[MAX_TOKENS + 1];
   int min_toks_to_match;
   d_set_opt_mf d_set_fcn;
   d_get_opt_mf d_get_fcn;
 };
 
 static DAE_OPTIONS dassl_option_table [] =
 {
@@ -222,17 +222,17 @@ print_dassl_option_list (void)
 
   output_buf << "\n"
 	     << "Options for dassl include:\n\n"
 	     << "  keyword                                  value\n"
 	     << "  -------                                  -----\n\n";
 
   DAE_OPTIONS *list = dassl_option_table;
 
-  char *keyword;
+  const char *keyword;
   while ((keyword = list->keyword) != 0)
     {
       output_buf.form ("  %-40s ", keyword);
 
       double val = (dassl_opts.*list->d_get_fcn) ();
       if (val < 0.0)
 	output_buf << "computed automatically";
       else
diff --git a/src/defun-int.h b/src/defun-int.h
--- a/src/defun-int.h
+++ b/src/defun-int.h
@@ -46,28 +46,33 @@ Software Foundation, 675 Mass Ave, Cambr
 #define DEFALIAS_INTERNAL(alias, name)
 
 #endif /* ! MAKE_BUILTINS */
 
 #define DECLARE_FUN(fname) \
   Octave_object \
   fname (const Octave_object& args, int nargout)
 
+// XXX FIXME XXX -- eliminate the need for these in the functions that
+// use them?
+
 #define DEFINE_ARGV(warnfor) \
   int argc = args.length (); \
+  int save_argc = argc; \
   char **argv = make_argv (args, warnfor); \
+  char **save_argv = argv; \
   if (error_state) \
     return retval
 
 #define DELETE_ARGV \
   do \
     { \
-      while (--argc) \
-	delete [] argv[argc]; \
-      delete [] argv; \
+      while (--save_argc >= 0) \
+	delete [] save_argv[save_argc]; \
+      delete [] save_argv; \
     } \
   while (0)
 
 #endif
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
diff --git a/src/fsolve.cc b/src/fsolve.cc
--- a/src/fsolve.cc
+++ b/src/fsolve.cc
@@ -167,18 +167,18 @@ where y and x are vectors.")
 
 typedef void (NLEqn_options::*d_set_opt_mf) (double);
 typedef double (NLEqn_options::*d_get_opt_mf) (void);
 
 #define MAX_TOKENS 1
 
 struct NLEQN_OPTIONS
 {
-  char *keyword;
-  char *kw_tok[MAX_TOKENS + 1];
+  const char *keyword;
+  const char *kw_tok[MAX_TOKENS + 1];
   int min_len[MAX_TOKENS + 1];
   int min_toks_to_match;
   d_set_opt_mf d_set_fcn;
   d_get_opt_mf d_get_fcn;
 };
 
 static NLEQN_OPTIONS fsolve_option_table [] =
 {
@@ -203,17 +203,17 @@ print_fsolve_option_list (void)
 
   output_buf << "\n"
 	     << "Options for fsolve include:\n\n"
 	     << "  keyword                                  value\n"
 	     << "  -------                                  -----\n\n";
 
   NLEQN_OPTIONS *list = fsolve_option_table;
 
-  char *keyword;
+  const char *keyword;
   while ((keyword = list->keyword) != 0)
     {
       output_buf.form ("  %-40s ", keyword);
 
       double val = (fsolve_opts.*list->d_get_fcn) ();
       if (val < 0.0)
 	output_buf << "computed automatically";
       else
diff --git a/src/lsode.cc b/src/lsode.cc
--- a/src/lsode.cc
+++ b/src/lsode.cc
@@ -149,18 +149,18 @@ where xdot and x are vectors and t is a 
 
 typedef void (ODE_options::*d_set_opt_mf) (double);
 typedef double (ODE_options::*d_get_opt_mf) (void);
 
 #define MAX_TOKENS 3
 
 struct ODE_OPTIONS
 {
-  char *keyword;
-  char *kw_tok[MAX_TOKENS + 1];
+  const char *keyword;
+  const char *kw_tok[MAX_TOKENS + 1];
   int min_len[MAX_TOKENS + 1];
   int min_toks_to_match;
   d_set_opt_mf d_set_fcn;
   d_get_opt_mf d_get_fcn;
 };
 
 static ODE_OPTIONS lsode_option_table [] =
 {
@@ -209,17 +209,17 @@ print_lsode_option_list (void)
 
   output_buf << "\n"
 	     << "Options for lsode include:\n\n"
 	     << "  keyword                                  value\n"
 	     << "  -------                                  -----\n\n";
 
   ODE_OPTIONS *list = lsode_option_table;
 
-  char *keyword;
+  const char *keyword;
   while ((keyword = list->keyword) != 0)
     {
       output_buf.form ("  %-40s ", keyword);
 
       double val = (lsode_opts.*list->d_get_fcn) ();
       if (val < 0.0)
 	output_buf << "computed automatically";
       else
diff --git a/src/npsol.cc b/src/npsol.cc
--- a/src/npsol.cc
+++ b/src/npsol.cc
@@ -517,18 +517,18 @@ typedef void (NPSOL_options::*d_set_opt_
 typedef void (NPSOL_options::*i_set_opt_mf) (int);
 typedef double (NPSOL_options::*d_get_opt_mf) (void);
 typedef int (NPSOL_options::*i_get_opt_mf) (void);
 
 #define MAX_TOKENS 5
 
 struct NPSOL_OPTIONS
 {
-  char *keyword;
-  char *kw_tok[MAX_TOKENS + 1];
+  const char *keyword;
+  const char *kw_tok[MAX_TOKENS + 1];
   int min_len[MAX_TOKENS + 1];
   int min_toks_to_match;
   d_set_opt_mf d_set_fcn;
   i_set_opt_mf i_set_fcn;
   d_get_opt_mf d_get_fcn;
   i_get_opt_mf i_get_fcn;
 };
 
@@ -669,17 +669,17 @@ print_npsol_option_list (void)
 
   output_buf << "\n"
 	     << "Options for npsol include:\n\n"
 	     << "  keyword                                  value\n"
 	     << "  -------                                  -----\n\n";
 
   NPSOL_OPTIONS *list = npsol_option_table;
 
-  char *keyword;
+  const char *keyword;
   while ((keyword = list->keyword) != 0)
     {
       output_buf.form ("  %-40s ", keyword);
       if (list->d_get_fcn)
 	{
 	  double val = (npsol_opts.*list->d_get_fcn) ();
 	  if (val < 0.0)
 	    output_buf << "computed automatically";
diff --git a/src/qpsol.cc b/src/qpsol.cc
--- a/src/qpsol.cc
+++ b/src/qpsol.cc
@@ -221,18 +221,18 @@ typedef void (QPSOL_options::*d_set_opt_
 typedef void (QPSOL_options::*i_set_opt_mf) (int);
 typedef double (QPSOL_options::*d_get_opt_mf) (void);
 typedef int (QPSOL_options::*i_get_opt_mf) (void);
 
 #define MAX_TOKENS 2
 
 struct QPSOL_OPTIONS
 {
-  char *keyword;
-  char *kw_tok[MAX_TOKENS + 1];
+  const char *keyword;
+  const char *kw_tok[MAX_TOKENS + 1];
   int min_len[MAX_TOKENS + 1];
   int min_toks_to_match;
   d_set_opt_mf d_set_fcn;
   i_set_opt_mf i_set_fcn;
   d_get_opt_mf d_get_fcn;
   i_get_opt_mf i_get_fcn;
 };
 
@@ -277,17 +277,17 @@ print_qpsol_option_list (void)
 
   output_buf << "\n"
 	     << "Options for qpsol include:\n\n"
 	     << "  keyword                                  value\n"
 	     << "  -------                                  -----\n\n";
 
   QPSOL_OPTIONS *list = qpsol_option_table;
 
-  char *keyword;
+  const char *keyword;
   while ((keyword = list->keyword) != 0)
     {
       output_buf.form ("  %-40s ", keyword);
       if (list->d_get_fcn)
 	{
 	  double val = (qpsol_opts.*list->d_get_fcn) ();
 	  if (val < 0.0)
 	    output_buf << "computed automatically";
diff --git a/src/quad.cc b/src/quad.cc
--- a/src/quad.cc
+++ b/src/quad.cc
@@ -201,18 +201,18 @@ at which the integrand is singular.")
 
 typedef void (Quad_options::*d_set_opt_mf) (double);
 typedef double (Quad_options::*d_get_opt_mf) (void);
 
 #define MAX_TOKENS 2
 
 struct QUAD_OPTIONS
 {
-  char *keyword;
-  char *kw_tok[MAX_TOKENS + 1];
+  const char *keyword;
+  const char *kw_tok[MAX_TOKENS + 1];
   int min_len[MAX_TOKENS + 1];
   int min_toks_to_match;
   d_set_opt_mf d_set_fcn;
   d_get_opt_mf d_get_fcn;
 };
 
 static QUAD_OPTIONS quad_option_table [] =
 {
@@ -243,17 +243,17 @@ print_quad_option_list (void)
 
   output_buf << "\n"
 	     << "Options for quad include:\n\n"
 	     << "  keyword                                  value\n"
 	     << "  -------                                  -----\n\n";
 
   QUAD_OPTIONS *list = quad_option_table;
 
-  char *keyword;
+  const char *keyword;
   while ((keyword = list->keyword) != 0)
     {
       output_buf.form ("  %-40s ", keyword);
 
       double val = (quad_opts.*list->d_get_fcn) ();
       if (val < 0.0)
 	output_buf << "computed automatically";
       else
