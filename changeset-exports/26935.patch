# HG changeset patch
# User Rik <rik@octave.org>
# Date 1552930418 25200
#      Mon Mar 18 10:33:38 2019 -0700
# Node ID d17eecaf4a149ae891992a77eba3d4a097bbd4cc
# Parent  1771bed3848244f10adfdac2b993f5c480d04579
Don't issue warning about unsupported latex when printing with -dpdflatexstandalone (bug #55946).

* warning_ids.m: Document new warning ID "Octave:text_interpreter".
* print.m: Disable warning "Octave:text_interpreter" temporarily using "local"
argument when printing to a latex format.

* __gnuplot_draw_axes__.m (do_tics_1, __maybe_munge_text__): Check warning
state of "Octave:text_interpreter" before issuing a warning about either axes
ticklabels or text objects using the latex interpreter.

diff --git a/scripts/help/warning_ids.m b/scripts/help/warning_ids.m
--- a/scripts/help/warning_ids.m
+++ b/scripts/help/warning_ids.m
@@ -190,16 +190,23 @@
 ## If the @code{Octave:future-time-stamp} warning is enabled, Octave
 ## will print a warning if it finds a function file with a time stamp
 ## that is in the future.
 ## By default, the @code{Octave:future-time-stamp} warning is enabled.
 ##
 ## @item Octave:glyph-render
 ## By default, the @code{Octave:glyph-render} warning is enabled.
 ##
+## @item Octave:text_interpreter
+## If the @code{Octave:text_interpreter} warning is enabled, a warning is
+## printed when the @qcode{"interpreter"} property of a text graphics object
+## is set to the unsupported value of @qcode{"latex"}.  Even when enabled,
+## the warning message is printed just once per Octave session.
+## By default, the @code{Octave:glyph-render} warning is enabled.
+##
 ## @item Octave:imag-to-real
 ## If the @code{Octave:imag-to-real} warning is enabled, a warning is
 ## printed for implicit conversions of complex numbers to real numbers.
 ## By default, the @code{Octave:imag-to-real} warning is disabled.
 ##
 ## @item Octave:language-extension
 ## Print warnings when using features that are unique to the Octave
 ## language and that may still be missing in @sc{matlab}.
diff --git a/scripts/plot/util/print.m b/scripts/plot/util/print.m
--- a/scripts/plot/util/print.m
+++ b/scripts/plot/util/print.m
@@ -654,16 +654,19 @@ function rgbout = print (varargin)
         set (hlist(! haxes), "fontsize", fontsize);
         set (hlist(haxes), "fontsize", fontsize);
       endif
     endif
 
     ## When exporting latex files use "latex" for the ticklabelinterpreter.
     ## It will format tick labels in log axes correctly
     if (strfind (opts.devopt, "latex"))
+      ## Disable warnings about Latex being unsupported since Octave will be
+      ## passing Latex code directly to interpreter with no rendering.
+      warning ("off", "Octave:text_interpreter", "local");
       h = findall (opts.figure, "type", "axes");
       for n = 1:numel (h)
         if (ishghandle (h(n)))
           props(end+1).h = h(n);
           props(end).name = "ticklabelinterpreter";
           props(end).value = {get(h(n), "ticklabelinterpreter")};
           set (h(n), "ticklabelinterpreter", "latex");
         endif
diff --git a/scripts/plot/util/private/__gnuplot_draw_axes__.m b/scripts/plot/util/private/__gnuplot_draw_axes__.m
--- a/scripts/plot/util/private/__gnuplot_draw_axes__.m
+++ b/scripts/plot/util/private/__gnuplot_draw_axes__.m
@@ -2249,18 +2249,22 @@ function do_tics_1 (ticmode, tics, mtics
     mirror = "nomirror";
   endif
   if (strcmp (interpreter, "tex"))
     for n = 1 : numel (labels)
       labels{n} = __tex2enhanced__ (labels{n}, fontname, false, false);
     endfor
   elseif (strcmp (interpreter, "latex"))
     if (! warned_latex)
-      warning ("latex markup not supported for tick marks");
-      warned_latex = true;
+      do_warn = (warning ("query", "Octave:text_interpreter")).state;
+      if (strcmp (do_warn, "on"))
+        warning ("Octave:text_interpreter",
+                 "latex markup not supported for tick marks");
+        warned_latex = true;
+      endif
     endif
   endif
   if (strcmp (scale, "log"))
     num_mtics = 10;
     if (any (strcmp (gnuplot_term, {"cairolatex", "eepic", "epslatex", ...
         "latex", "pslatex", "pstex", "pstricks", "texdraw", "tikz"})))
       fmt = "$10^{%T}$";
     else
@@ -2416,18 +2420,22 @@ function [str, f, s] = __maybe_munge_tex
         for n = 1:numel (str)
           str{n} = __tex2enhanced__ (str{n}, fnt, it, bld);
         endfor
       else
         str = __tex2enhanced__ (str, fnt, it, bld);
       endif
     elseif (strcmp (ntrp, "latex"))
       if (! warned_latex)
-        warning ("latex markup not supported for text objects");
-        warned_latex = true;
+        do_warn = (warning ("query", "Octave:text_interpreter")).state;
+        if (strcmp (do_warn, "on"))
+          warning ("Octave:text_interpreter",
+                   "latex markup not supported for text objects");
+          warned_latex = true;
+        endif
       endif
     endif
   endif
 
 endfunction
 
 function str = __tex2enhanced__ (str, fnt, it, bld)
   persistent sym = __setup_sym_table__ ();
