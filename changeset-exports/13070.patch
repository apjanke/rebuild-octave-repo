# HG changeset patch
# User Jordi Guti√©rrez Hermoso <jordigh@gmail.com>
# Date 1315078658 18000
#      Sat Sep 03 14:37:38 2011 -0500
# Node ID a0d854f079d239909d1b9830ca529e7dcabf575e
# Parent  48c94e21b57f3ee825035486c6165fc456a6d732
codesprint: Fix building of docs for new bicg functions

diff --git a/scripts/linear-algebra/bicg.m b/scripts/linear-algebra/bicg.m
--- a/scripts/linear-algebra/bicg.m
+++ b/scripts/linear-algebra/bicg.m
@@ -46,17 +46,17 @@
 ##     @item 3: the algorithm reached stagnation
 ##   @end itemize
 ##   (the value 2 is unused but skipped for compatibility).
 ##   @item @var{relres} is the final value of the relative residual.
 ##   @item @var{iter} is the number of iterations performed. 
 ##   @item @var{resvec} is a vector containing the relative residual at each iteration.
 ##   @end itemize
 ##
-##   @seealso{pcg,cgs,bigcstab,gmres}
+##   @seealso{pcg,cgs,bicgstab,gmres}
 ##
 ## @end deftypefn
 
 
 function [x, flag, res1, k, resvec] = bicg (A, b, tol, maxit, M1, M2, x0)
 
   if ((nargin >= 2) && isvector (full (b)))
     
diff --git a/scripts/linear-algebra/module.mk b/scripts/linear-algebra/module.mk
--- a/scripts/linear-algebra/module.mk
+++ b/scripts/linear-algebra/module.mk
@@ -1,11 +1,12 @@
 FCN_FILE_DIRS += linear-algebra
 
 linear_algebra_FCN_FILES = \
+	linear-algebra/bicg.m \
   linear-algebra/commutation_matrix.m \
   linear-algebra/cond.m \
   linear-algebra/condest.m \
   linear-algebra/cross.m \
   linear-algebra/duplication_matrix.m \
   linear-algebra/expm.m \
   linear-algebra/housh.m \
   linear-algebra/isdefinite.m \
diff --git a/scripts/sparse/bicgstab.m b/scripts/sparse/bicgstab.m
--- a/scripts/sparse/bicgstab.m
+++ b/scripts/sparse/bicgstab.m
@@ -21,19 +21,27 @@
 ##  
 ## @deftypefn {Function File} {@var{x} =} bicgstab (@var{A}, @var{b}, @var{rtol}, @var{maxit}, @var{M1}, @var{M2}, @var{x0})
 ## @deftypefnx {Function File} {@var{x} =} bicgstab (@var{A}, @var{b}, @var{rtol}, @var{maxit}, @var{P})
 ## @deftypefnx {Function File} {[@var{x}, @var{flag}, @var{relres}, @var{iter}, @var{resvec}] =} bicgstab (@var{A}, @var{b}, ...)
 ##
 ##   Solve @code{A x = b} using the stabilizied Bi-conjugate gradient iterative method.
 ##
 ##   @itemize @minus
-##   @item @var{rtol} is the relative tolerance, if not given or set to [] the default value 1e-6 is used.
-##   @item @var{maxit} the maximum number of outer iterations, if not given or set to [] the default value @code{min (20, numel (b))} is used.
-##   @item @var{x0} the initial guess, if not given or set to [] the default value @code{zeros (size (b))} is used. 
+##
+##   @item @var{rtol} is the relative tolerance, if not given or set to
+##   [] the default value 1e-6 is used.
+##
+##   @item @var{maxit} the maximum number of outer iterations, if not
+##   given or set to [] the default value @code{min (20, numel (b))} is
+##   used.
+##
+##   @item @var{x0} the initial guess, if not given or set to [] the
+##   default value @code{zeros (size (b))} is used.
+##
 ##   @end itemize
 ##
 ##   @var{A} can be passed as a matrix or as a function handle or 
 ##   inline function @code{f} such that @code{f(x) = A*x}.
 ##
 ##   The preconditioner @var{P} is given as @code{P = M1 * M2}. 
 ##   Both @var{M1} and @var{M2} can be passed as a matrix or as a function handle or 
 ##   inline function @code{g} such that @code{g(x) = M1 \ x} or @code{g(x) = M2 \ x}.
@@ -48,17 +56,17 @@
 ##     @item 3: the algorithm reached stagnation
 ##   @end itemize
 ##   (the value 2 is unused but skipped for compatibility).
 ##   @item @var{relres} is the final value of the relative residual.
 ##   @item @var{iter} is the number of iterations performed. 
 ##   @item @var{resvec} is a vector containing the relative residual at each iteration.
 ##   @end itemize
 ##
-##   @seealso{pcg,cgs,bigc,gmres}
+##   @seealso{pcg,cgs,bicg,gmres}
 ##
 ## @end deftypefn
 
 function [x, flag, relres, iter, resvec] = bicgstab (A, b, tol, maxit, 
                                                      M1, M2, x0)
 
   if ((nargin >= 2) && (nargin <= 7) && isvector (full (b)))
     
