# HG changeset patch
# User jwe
# Date 1142978036 0
#      Tue Mar 21 21:53:56 2006 +0000
# Node ID 3d8d8ce93c2c93edb46b233ed9c56025875f56d3
# Parent  1199fc86582db1b9b7f6fb5bc3b825f62072438d
[project @ 2006-03-21 21:53:56 by jwe]

diff --git a/doc/ChangeLog b/doc/ChangeLog
--- a/doc/ChangeLog
+++ b/doc/ChangeLog
@@ -1,8 +1,17 @@
+2006-03-21  John W. Eaton  <jwe@octave.org>
+
+	* interpreter/sparse.txi: Temporarily omit figures.
+	* interpreter/Makefile.in: Temporarily omit actions for making figures.
+
+	* interpreter/Makefile.in (real-pdf): Depend on stamp-eps
+	(stamp-pdf): Depend on real-pdf.  Touch stamp-pdf here.
+	(real-pdf): Not here.
+
 2006-03-16  David Bateman  <dbateman@free.fr>
 
 	* interpreter/images/sparseimages.m: set terminal type to dummy to
 	direct output to terminal rather than X11.
 	* interpreter/sparse.txi: Update docs for new QR solvers.
 	
 2006-03-09  David Bateman  <dbateman@free.fr>
 
diff --git a/doc/interpreter/Makefile.in b/doc/interpreter/Makefile.in
--- a/doc/interpreter/Makefile.in
+++ b/doc/interpreter/Makefile.in
@@ -42,16 +42,17 @@ TEXINFO := $(MAIN_TEXINFO) $(SUB_TEXINFO
 
 FORMATTED = octave.dvi octave.ps octave.pdf \
 	octave.info octave.info-[0-9]* \
 	octave.html octave_*.html
 
 MAN_BASE := mkoctfile octave octave-bug octave-config
 MAN_SRC := $(addsuffix .1, $(MAN_BASE))
 
+# XXX FIXME XXX -- need to include generated figures here...
 DISTFILES = Makefile.in dir munge-texi.cc $(MAN_SRC) \
   $(SOURCES) $(TEXINFO) $(FORMATTED)
 
 # Look for version.h to get version information.
 xfiles := $(TOPDIR)/src/version.h $(srcdir)/$(TOPDIR)/src/version.h
 
 version_file := $(firstword $(foreach file, $(xfiles), $(wildcard $(file))))
 
@@ -114,36 +115,35 @@ octave.pdf: stamp-pdf $(TEXINFO)
 HTML/index.html: stamp-png $(TEXINFO)
 	-$(MAKEINFO) --html --ifinfo --output=HTML -I.. -I$(srcdir)/.. $(MAIN_TEXINFO)
 	$(INSTALL_DATA) *.png ./HTML
 
 check: all
 .PHONY: check
 
 stamp-png:
-	make -C $(IMAGEDIR) png
+##	make -C $(IMAGEDIR) png
 	touch $@
 
 stamp-eps:
-	make -C $(IMAGEDIR) eps
+##	make -C $(IMAGEDIR) eps
+	touch $@
+
+stamp-pdf: real-pdf
 	touch $@
 
-stamp-pdf: stamp-eps
-	make -C ./ real-pdf
-
-real-pdf:
-	for F in $(wildcard *.eps); do \
-	  G=`basename $$F .eps`.pdf; \
-	  gs -dBATCH -dEPSCrop -dNOPAUSE -q -sDEVICE=pdfwrite \
-	    -sOutputFile=$$G $$F; \
-	done
-	touch $@
+real-pdf: stamp-eps
+##	for F in $(wildcard *.eps); do \
+##	  G=`basename $$F .eps`.pdf; \
+##	  gs -dBATCH -dEPSCrop -dNOPAUSE -q -sDEVICE=pdfwrite \
+##	    -sOutputFile=$$G $$F; \
+##	done
 
 stamp-txt:
-	make -C $(IMAGEDIR) txt
+##	make -C $(IMAGEDIR) txt
 	touch $@
 
 install install-strip: all
 	$(top_srcdir)/mkinstalldirs $(DESTDIR)$(man1dir) $(DESTDIR)$(infodir)
 	@if test -d $(DESTDIR)$(man1dir); then \
 	  for f in $(MAN_BASE); do \
 	    rm -f $(DESTDIR)$(man1dir)/$$f$(man1ext); \
 	    echo "installing $(srcdir)/$$f.1 in $(DESTDIR)$(man1dir)"; \
diff --git a/doc/interpreter/sparse.txi b/doc/interpreter/sparse.txi
--- a/doc/interpreter/sparse.txi
+++ b/doc/interpreter/sparse.txi
@@ -322,28 +322,30 @@ avoided. However, incorrectly defining t
 incorrect results from solutions of linear equations, and so it is
 entirely the responsibility of the user to correctly identify the
 matrix type
 
 There are several graphical means of finding out information about
 sparse matrices. The first is the @dfn{spy} command, which displays
 the structure of the non-zero elements of the
 matrix. @xref{fig:spmatrix}, for an exaple of the use of
-@dfn{spy}.More advanced graphical information can be obtained with the
+@dfn{spy}.  More advanced graphical information can be obtained with the
 @dfn{treeplot}, @dfn{etreeplot} and @dfn{gplot} commands.
 
 @float Figure,fig:spmatrix
+@ifset INCLUDE_FIGURES
 @ifinfo
 @example
 @include spmatrix.txt
 @end example
 @end ifinfo
 @ifset htmltex
 @image{spmatrix,8cm}
 @end ifset
+@end ifest
 @caption{Structure of simple sparse matrix.}
 @end float
 
 One use of sparse matrices is in graph theory, where the
 interconnections between nodes is represented as an adjacency
 matrix. That is, if the i-th node in a graph is connected to the j-th
 node. Then the ij-th node (and in the case of undirected graphs the
 ji-th node) of the sparse adjacency matrix is non-zero. If each node
@@ -362,17 +364,19 @@ gplot(A,xy)
 
 which creates an adjacency matrix @code{A} where node 1 is connected
 to nodes 2 and 6, node 2 with nodes 1 and 3, etc. The co-ordinates of
 the nodes are given in the n-by-2 matrix @code{xy}.
 @ifset htmltex 
 @xref{fig:gplot}.
 
 @float Figure,fig:gplot
+@ifset INCLUDE_FIGURES
 @image{gplot,8cm}
+@end ifset
 @caption{Simple use of the @dfn{gplot} command.}
 @end float
 @end ifset
 
 The dependencies between the nodes of a Cholesky factorization can be
 calculated in linear time without explicitly needing to calculate the
 Cholesky factorization by the @code{etree} command. This command
 returns the elimination tree of the matrix and can be displayed
@@ -574,24 +578,26 @@ then @dfn{symamd} or @dfn{csymamd} shoul
 @dfn{colamd} or @dfn{ccolamd} should be used. For completeness
 the reordering functions @dfn{colperm} and @dfn{randperm} are
 also available.
 
 @xref{fig:simplematrix}, for an example of the structure of a simple 
 positive definite matrix.
 
 @float Figure,fig:simplematrix
+@ifset INCLUDE_FIGURES
 @ifinfo
 @example
 @include spmatrix.txt
 @end example
 @end ifinfo
 @ifset htmltex
 @image{spmatrix,8cm}
 @end ifset
+@end ifset
 @caption{Structure of simple sparse matrix.}
 @end float
 
 The standard Cholesky factorization of this matrix, can be
 obtained by the same command that would be used for a full
 matrix. This can be visualized with the command 
 @code{r = chol(A); spy(r);}.
 @ifset HAVE_CHOLMOD
@@ -639,36 +645,40 @@ non-zero terms which is a significant im
 The Cholesky factorization itself can be used to determine the
 appropriate sparsity preserving reordering of the matrix during the
 factorization, In that case this might be obtained with three return
 arguments as r@code{[r, p, q] = chol(A); spy(r)}.
 
 @ifset HAVE_CHOLMOD
 @ifset HAVE_COLAMD
 @float Figure,fig:simplechol
+@ifset INCLUDE_FIGURES
 @ifinfo
 @example
 @include spchol.txt
 @end example
 @end ifinfo
 @ifset htmltex
 @image{spchol,8cm}
 @end ifset
+@end ifset
 @caption{Structure of the un-permuted Cholesky factorization of the above matrix.}
 @end float
 
 @float Figure,fig:simplecholperm
+@ifset INCLUDE_FIGURES
 @ifinfo
 @example
 @include spcholperm.txt
 @end example
 @end ifinfo
 @ifset htmltex
 @image{spcholperm,8cm}
 @end ifset
+@end ifset
 @caption{Structure of the permuted Cholesky factorization of the above matrix.}
 @end float
 @end ifset
 @end ifset
 
 In the case of an asymmetric matrix, the appropriate sparsity
 preserving permutation is @dfn{colamd} and the factorization using
 this reordering can be visualized using the command @code{q =
@@ -1026,17 +1036,19 @@ value in the z-axis for each simplex ver
 @end example
 
 
 @ifset htmltex
 @ifset HAVE_CHOLMOD
 @ifset HAVE_UMFPACK
 @ifset HAVE_COLAMD
 @float Figure,fig:femmodel
+@ifset INCLUDE_FIGURES
 @image{grid,8cm}
+@end ifset
 @caption{Example finite element model the showing triangular elements. 
 The height of each vertex corresponds to the solution value.}
 @end float
 @end ifset
 @end ifset
 @end ifset
 @end ifset
 
