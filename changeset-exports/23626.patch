# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1497644756 14400
#      Fri Jun 16 16:25:56 2017 -0400
# Node ID fea9218bd43dc0b2022c4830fcff1871969d8e72
# Parent  b0a2367823f594e4fc7413fb3ced7440405174dc
avoid potential memory error on exit

* ov-base.h (DEFINE_OV_TYPEID_FUNCTIONS_AND_DATA): Use dynamically
allocated object for exemplar.

diff --git a/libinterp/octave-value/ov-base.h b/libinterp/octave-value/ov-base.h
--- a/libinterp/octave-value/ov-base.h
+++ b/libinterp/octave-value/ov-base.h
@@ -165,18 +165,17 @@ DEF_CLASS_TO_BTYP (char, btyp_char);
     static const std::string c_name;
 
 #define DEFINE_OV_TYPEID_FUNCTIONS_AND_DATA(t, n, c)                    \
   int t::t_id (-1);                                                     \
   const std::string t::t_name (n);                                      \
   const std::string t::c_name (c);                                      \
   void t::register_type (void)                                          \
   {                                                                     \
-    static t exemplar;                                                  \
-    octave_value v (&exemplar, true);                                   \
+    octave_value v (new t ());                                          \
     t_id = octave_value_typeinfo::register_type (t::t_name, t::c_name, v); \
   }
 
 // A base value type, so that derived types only have to redefine what
 // they need (if they are derived from octave_base_value instead of
 // octave_value).
 
 class
