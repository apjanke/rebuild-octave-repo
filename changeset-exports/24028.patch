# HG changeset patch
# User Torsten <mttl@mailbox.org>
# Date 1505001396 -7200
#      Sun Sep 10 01:56:36 2017 +0200
# Node ID ca4ab27152a9af04c42f99c68ea76155ea91d43d
# Parent  fbdefffeaa2134c447dcaec8f6988e41efff148b
variable editor: remove & when reading names from tabs (bugs #51851, #51905)

* variable-editor.cc (real_var_name): reading tab text and removing any
  & that might have been inserted by KDE;
  (edit_variable, selected_to_octave, double_click, save, transposeContent, up):
  use new function instead of reading the tab text directly as variable name

* variable-editor.h: new function real_var_name

diff --git a/libgui/src/variable-editor.cc b/libgui/src/variable-editor.cc
--- a/libgui/src/variable-editor.cc
+++ b/libgui/src/variable-editor.cc
@@ -128,28 +128,38 @@ variable_editor::variable_editor (QWidge
 }
 
 variable_editor::~variable_editor (void)
 {
   // m_tool_bar and m_tab_widget are contained within m_main
   delete m_main;
 }
 
+// Returns the real variable name from the tab addressed by 'index'
+// cleaned from '&' possible inserted by KDE
+QString
+variable_editor::real_var_name (int index)
+{
+  QString var_name = m_tab_widget->tabText (index);
+  var_name.remove (QChar ('&'));
+  return var_name;
+}
+
 void
 variable_editor::edit_variable (const QString& name)
 {
   if (m_stylesheet.isEmpty ())
     {
       QSettings *settings = resource_manager::get_settings ();
       notice_settings (settings);
     }
 
   const int tab_count = m_tab_widget->count ();
   for (int i = 0; i < tab_count; ++i)
-    if (m_tab_widget->tabText (i) == name)
+    if (real_var_name (i) == name)
       {
         m_tab_widget->setCurrentIndex (i);
         return;  // already open
       }
 
   QWidget *page = new QWidget;  // Do not set parent.
 
   QVBoxLayout *vbox = new QVBoxLayout (page);
@@ -690,17 +700,17 @@ variable_editor::rowmenu_requested (cons
   //             view->verticalHeader ()->sectionSize (index));
 
   menu->exec (view->mapToGlobal (menupos));
 }
 
 void
 variable_editor::double_click (const QModelIndex& idx)
 {
-  QString name = m_tab_widget->tabText (m_tab_widget->currentIndex ());
+  QString name = real_var_name (m_tab_widget->currentIndex ());
   QTableView *const table = get_table_data (m_tab_widget).m_table;
   variable_editor_model *const model =
     qobject_cast<variable_editor_model *> (table->model ());
   if (model->requires_sub_editor (idx))
     {
       if (model ->editor_type_matrix (idx))
         edit_variable (name +
                        model->parens ()
@@ -714,17 +724,17 @@ variable_editor::double_click (const QMo
       */
 
     }
 }
 
 void
 variable_editor::save (void)
 {
-  QString name = m_tab_widget->tabText (m_tab_widget->currentIndex ());
+  QString name = real_var_name (m_tab_widget->currentIndex ());
   QString file =
     QFileDialog::getSaveFileName (this,
                                   tr ("Save Variable %1 As").arg (name),
                                   ".", 0, 0,
                                   QFileDialog::DontUseNativeDialog);
   // FIXME: Type? binary, float-binary, ascii, text, hdf5, matlab format?
   if (! file.isEmpty ())
     // FIXME: Use octave_value::save_*?
@@ -915,25 +925,25 @@ variable_editor::createVariable (void)
 {
   // FIXME: unnamed1..n if exist ('unnamed', 'var')
   relay_command ("unnamed = %1");
 }
 
 void
 variable_editor::transposeContent (void)
 {
-  QString name = m_tab_widget->tabText (m_tab_widget->currentIndex ());
+  QString name = real_var_name (m_tab_widget->currentIndex ());
   emit command_requested (QString ("%1 = %1';").arg (name));
   emit updated ();
 }
 
 void
 variable_editor::up (void)
 {
-  QString name = m_tab_widget->tabText (m_tab_widget->currentIndex ());
+  QString name = real_var_name (m_tab_widget->currentIndex ());
   // FIXME: is there a better way?
   if (name.endsWith (')') || name.endsWith ('}'))
     {
       qDebug () << "up";
       name.remove (QRegExp ("(\\(|\\{)[^({]*(\\)|\\})$"));
       edit_variable (name);
       //emit command_requested (QString ("openvar ('%1');").arg (name));
     }
@@ -1030,17 +1040,17 @@ variable_editor::octave_to_coords (QStri
     }
 
   return output;
 }
 
 QString
 variable_editor::selected_to_octave (void)
 {
-  QString name = m_tab_widget->tabText (m_tab_widget->currentIndex ());
+  QString name = real_var_name (m_tab_widget->currentIndex ());
   QTableView *view = get_table_data (m_tab_widget).m_table;
   QItemSelectionModel *sel = view->selectionModel ();
 
   if (! sel->hasSelection ())
     return name;  // Nothing selected
 
   QList<QModelIndex> indices = sel->selectedIndexes ();  // it's indices!
 
diff --git a/libgui/src/variable-editor.h b/libgui/src/variable-editor.h
--- a/libgui/src/variable-editor.h
+++ b/libgui/src/variable-editor.h
@@ -118,16 +118,19 @@ private:
 
   // If use_terminal_font is true then this will be different since
   // "font" will contain the terminal font.
   QFont m_sel_font;
   QList<QColor> m_table_colors;
 
   QList<int> octave_to_coords (QString&);
 
+  // Get the real variable name from the tab text
+  QString real_var_name (int index);
+
   // Convert selection to an Octave expression.
   QString selected_to_octave (void);
 
   void update_colors (void);
 
   void construct_tool_bar (void);
 };
 
