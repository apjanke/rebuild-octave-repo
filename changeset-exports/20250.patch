# HG changeset patch
# User Rik <rik@octave.org>
# Date 1433891459 25200
#      Tue Jun 09 16:10:59 2015 -0700
# Branch stable
# Node ID 209ee4a730f6cb6941d5d38e70ee9a350fface23
# Parent  6fe746def1aa2ab7ad0508c742651fea41d2db07
Convert double Octave vectors to double Java vectors (bug #45264).

* ov-java.cc (unbox): Add missing IF_UNBOX_PRIMITIVE_ARRAY macro instantiation
for double values.

diff --git a/libinterp/octave-value/ov-java.cc b/libinterp/octave-value/ov-java.cc
--- a/libinterp/octave-value/ov-java.cc
+++ b/libinterp/octave-value/ov-java.cc
@@ -1291,17 +1291,18 @@ unbox (JNIEnv* jni_env, const octave_val
           const JAVA_TYPE* jv = reinterpret_cast<const JAVA_TYPE*> (v.data ()); \
           jni_env->Set ## JAVA_TYPE_CAP ## ArrayRegion (jarr, 0, v.numel (), jv); \
           jobj = reinterpret_cast<jobject> (jarr); \
           jcls = jni_env->GetObjectClass (jobj); \
         }
 
       // Note that we do NOT handle char here because they are unboxed
       // into a String[], not into a char array
-           IF_UNBOX_PRIMITIVE_ARRAY(bool,   bool_,   bool,   jboolean, Boolean)
+           IF_UNBOX_PRIMITIVE_ARRAY(double,      ,       ,   jdouble,  Double)
+      else IF_UNBOX_PRIMITIVE_ARRAY(bool,   bool_,   bool,   jboolean, Boolean)
       else IF_UNBOX_PRIMITIVE_ARRAY(float,  float_,  Float,  jfloat,   Float)
       else IF_UNBOX_PRIMITIVE_ARRAY(int8,   int8_,   int8,   jbyte,    Byte)
       else IF_UNBOX_PRIMITIVE_ARRAY(uint8,  uint8_,  uint8,  jbyte,    Byte)
       else IF_UNBOX_PRIMITIVE_ARRAY(int16,  int16_,  int16,  jshort,   Short)
       else IF_UNBOX_PRIMITIVE_ARRAY(uint16, uint16_, uint16, jshort,   Short)
       else IF_UNBOX_PRIMITIVE_ARRAY(int32,  int32_,  int32,  jint,     Int)
       else IF_UNBOX_PRIMITIVE_ARRAY(uint32, uint32_, uint32, jint,     Int)
       else IF_UNBOX_PRIMITIVE_ARRAY(int64,  int64_,  int64,  jlong,    Long)
