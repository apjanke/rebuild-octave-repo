# HG changeset patch
# User David Bateman <dbateman@free.fr>
# Date 1246509089 -7200
#      Thu Jul 02 06:31:29 2009 +0200
# Branch release-3-2-x
# Node ID ee264f77eaed9731990eadcea8cc324f55c5e602
# Parent  2de1ae881ceab58cff5912aad21d9e95c65c663b
Fix 'format rat' for values like '1 - eps'

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,14 @@
+2008-07-01  David Bateman  <dbateman@free.fr>
+	
+	* pr-output.cc (static inline std::string rational_approx (double, 
+	int)): Test for underflow of fractional part of rational approximation
+	earlier in the loop.
+
 2009-07-01  Joe Rothweiler <octaveuser@sensicomm.com>
 
 	* input.cc (raw_mode): Use TCSADRAIN if no wait.
 
 2009-06-30  Jaroslav Hajek  <highegg@gmail.com>
 
 	* symtab.h (force_variable): Remove assertion.
 
diff --git a/src/pr-output.cc b/src/pr-output.cc
--- a/src/pr-output.cc
+++ b/src/pr-output.cc
@@ -266,16 +266,25 @@ rational_approx (double val, int len)
       s = buf2.str();
 
       while (1)
 	{
 	  double flip = 1. / frac;
 	  double step = xround (flip);
 	  double nextn = n;
 	  double nextd = d;
+
+	  // Have we converged to 1/intmax ?
+	  if (m > 100 || fabs (frac) < 1 / static_cast<double>(INT_MAX))
+	    {
+	      lastn = n;
+	      lastd = d;
+	      break;
+	    }
+
 	  frac = flip - step;
 	  n = n * step + lastn;
 	  d = d * step + lastd;
 	  lastn = nextn;
 	  lastd = nextd;
 
 	  std::ostringstream buf;
 	  buf.flags (std::ios::fixed);
@@ -290,24 +299,16 @@ rational_approx (double val, int len)
 		  m > 1) 
 		break;
 	    }
 	  else if (buf.str().length() > static_cast<unsigned int>(len) && 
 		   m > 1) 
 	    break;
 
 	  s = buf.str();
-
-	  // Have we converged to 1/intmax ?
-	  if (m > 100 || fabs (frac) < 1 / static_cast<double>(INT_MAX))
-	    {
-	      lastn = n;
-	      lastd = d;
-	      break;
-	    }
 	}
 
       if (lastd < 0.)
 	{
 	  // Move sign to the top
 	  lastd = - lastd;
 	  lastn = - lastn;
 	  std::ostringstream buf;
