# HG changeset patch
# User Rik <rik@octave.org>
# Date 1378436270 25200
#      Thu Sep 05 19:57:50 2013 -0700
# Node ID 1a4d036e14564d09c26f5c60140455e8cbd595a2
# Parent  50b2863d10a6693ce763a5ddbbec5600c86d7e0a
struct2hdl.m: Eliminate some arrayfun instances for perforance.

* scripts/plot/struct2hdl.m: Use ismember or struct array indexing
to replace arrayfun instances.

diff --git a/scripts/plot/struct2hdl.m b/scripts/plot/struct2hdl.m
--- a/scripts/plot/struct2hdl.m
+++ b/scripts/plot/struct2hdl.m
@@ -186,17 +186,17 @@ function [h, sout] = createaxes (s, p, p
       endif
     endfor
     h = axes (propval{:}, "parent", par);
 
     if (isfield (s.properties, "__plotyy_axes__"))
       plty = s.properties.__plotyy_axes__;
       addproperty ("__plotyy_axes__", h, "any");
       tmp = [p [s.handle; h]];
-      tst = arrayfun (@(x) any (plty == x), tmp(1:2:end));
+      tst = ismember (tmp(1:2:end), plty);
       if (sum (tst) == numel (plty))
         for ii = 1:numel (plty)
           plty(ii) = tmp(find (tmp == plty(ii)) + 1);
         endfor
         for ii = 1:numel (plty)
           set (plty(ii), "__plotyy_axes__", plty);
         endfor
       endif
@@ -448,17 +448,18 @@ function [h, sout, pout] = createhg_hile
     ## FIXME - here we don't have access to brothers so we first create all
     ## the barseries of the bargroup (but the last), then retrieve information,
     ## and rebuild the whole bargroup.
     ## The duplicate are deleted after calling "setprops"
 
     bargroup = s.properties.bargroup;
     oldh = s.handle;
 
-    temp = arrayfun (@(x) any(x == bargroup), [p(1:2:end) oldh]);
+    temp = ismember ([p(1:2:end) oldh], bargroup);
+
     tst = sum (temp) == length (bargroup);
 
     if (isscalar (bargroup) || !tst)
       xdata = s.properties.xdata;
       ydata = s.properties.ydata;
 
       h = bar (xdata, ydata);
 
@@ -542,17 +543,21 @@ function [h, sout, pout] = createhg_hile
   sout = s;
   pout = p;
 endfunction
 
 function setprops (s, h, p, hilev)
   more off;
   if (strcmpi (s.properties.tag, ""))
     specs = s.children(s.special);
-    hdls = arrayfun (@(x) x.handle, specs);
+    if (isempty (specs))
+      hdls = [];
+    else
+      hdls = [specs.handle];
+    endif
     nh = length (hdls);
     msg = "";
     if (! nh)
       set (h, s.properties);
     else
       ## Specials are objects that where automatically constructed with
       ## current object. Among them are "x(yz)labels", "title", high
       ## level hggroup children
