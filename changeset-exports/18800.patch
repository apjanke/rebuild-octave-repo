# HG changeset patch
# User Philip Nienhuis <prnienhuis@users.sf.net>
# Date 1400011364 -7200
#      Tue May 13 22:02:44 2014 +0200
# Node ID 8354510f95ab189880508abaffd7109dc71e49a8
# Parent  9cf6d5868d212579df65cb6a63e29e7423f9c4b6
textscan.m: properly process "emptyvalue" (bug #42343).

* textscan.m: properly process "emptyvalue".  Add %!tests.

diff --git a/scripts/io/textscan.m b/scripts/io/textscan.m
--- a/scripts/io/textscan.m
+++ b/scripts/io/textscan.m
@@ -311,23 +311,25 @@ function [C, position] = textscan (fid, 
     ## Find end of first line
     eoi = index (str, eol_char);
     if (eoi)
       ## str contains an EOL, proceed with assessing nr. of columns
       ncols = countcols (C, str(1 : eoi-1), delimiter, whitespace);
       ## See if lowermost data row must be completed
       pad = mod (numel (C{1}), ncols);
       if (pad)
-        ## Textscan returns NaNs for empty fields
-        C(1) = [C{1}; NaN(ncols - pad, 1)]; 
-      endif
-      ## Replace NaNs with EmptyValue, if any
-      ipos = find (strcmpi (args, "emptyvalue"));
-      if (ipos)
-        C{1}(find (isnan (C{1}))) = args{ipos+1};
+        ## Pad output with emptyvalues (rest has been done by stread.m)
+        emptv = find (strcmpi (args, "emptyvalue"));
+        if (isempty (emptv))
+          ## By default textscan returns NaNs for empty fields
+          C(1) = [C{1}; NaN(ncols - pad, 1)];
+        else
+          ## Otherwise return supplied emptyvalue. Pick last occurrence
+          C(1) = [C{1}; repmat(args{emptv(end)+1}, ncols - pad, 1)];
+        endif
       endif
       ## Compute nr. of rows
       nrows = floor (numel (C{1}) / ncols);
       ## Reshape C; watch out, transpose needed
       C(1) = reshape (C{1}, ncols, numel (C{1}) / ncols)';
       ## Distribute columns over C and wipe cols 2:end of C{1}
       for ii=2:ncols
         C(ii) = C{1}(:, ii);
@@ -661,8 +663,17 @@ endfunction
 %! fclose (fid);
 %! unlink (f);
 %! assert (msg1, lasterr);
 
 %% Bug #41824
 %!test
 %! assert (textscan ("123", "", "whitespace", " "){:}, 123);
 
+%% Bug #42343-1, just test supplied emptyvalue (actually done by strread.m)
+%!test
+%! assert (textscan (",NaN", "", "delimiter", "," ,"emptyValue" ,Inf), {Inf, NaN});
+
+%% Bug #42343-2, test padding with supplied emptyvalue (done by textscan.m)
+%!test
+%! a = textscan (",1,,4\nInf,  ,NaN", "", "delimiter", ",", "emptyvalue", -10);
+%! assert (cell2mat (a), [-10, 1, -10, 4; Inf, -10, NaN, -10]);
+
