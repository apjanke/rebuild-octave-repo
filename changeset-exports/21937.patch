# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1466157141 14400
#      Fri Jun 17 05:52:21 2016 -0400
# Node ID 55f7de37b6181d091e7d4e12aa65116de60e0439
# Parent  45c5f442628981915d103f5028146d0114903dbe
maint: Strip trailing whitespace from source files.

diff --git a/libinterp/corefcn/jit-typeinfo.cc b/libinterp/corefcn/jit-typeinfo.cc
--- a/libinterp/corefcn/jit-typeinfo.cc
+++ b/libinterp/corefcn/jit-typeinfo.cc
@@ -464,17 +464,17 @@ octave_jit_call (octave_builtin::fcn fn,
         err_bad_result ();
 
       octave_value result = ovl.xelem(0);
       octave_base_value *ret = result.internal_rep ();
       ret->grab ();
       return ret;
     }
 
-  if (! (ovl.empty () 
+  if (! (ovl.empty ()
          || (ovl.length () == 1 && ovl.xelem (0).is_undefined ())))
     err_bad_result ();
 
   return 0;
 }
 
 // -------------------- jit_range --------------------
 bool
diff --git a/libinterp/corefcn/ls-mat5.cc b/libinterp/corefcn/ls-mat5.cc
--- a/libinterp/corefcn/ls-mat5.cc
+++ b/libinterp/corefcn/ls-mat5.cc
@@ -1992,17 +1992,17 @@ save_mat5_array_length (const float* /* 
       //     else if (max_val < 4294967295UL && min_val > -1)
       //       size = 4;
       //     else if (max_val < 128 && min_val >= -128)
       //       size = 1;
       //     else if (max_val < 32768 && min_val >= -32768)
       //       size = 2;
       //     else if (max_val <= 2147483647L && min_val >= -2147483647L)
       //       size = 4;
-      //   
+      //
 
       // Round nel up to nearest even number of elements.
       // Take into account short tags for 4 byte elements.
       return PAD ((nel > 0 && nel * size <= 4 ? 4 : 8) + nel * size);
     }
   else
     return 8;
 }
diff --git a/libinterp/corefcn/syscalls.cc b/libinterp/corefcn/syscalls.cc
--- a/libinterp/corefcn/syscalls.cc
+++ b/libinterp/corefcn/syscalls.cc
@@ -78,17 +78,17 @@ mk_stat_map (const octave::sys::base_fil
   m.assign ("atime", fs.atime ());
   m.assign ("mtime", fs.mtime ());
   m.assign ("ctime", fs.ctime ());
 
   if (have_blksize)
     m.assign ("blksize", fs.blksize ());
   else
     m.assign ("blksize", nan);
-  
+
   if (have_blocks)
     m.assign ("blocks", fs.blocks ());
   else
     m.assign ("blocks", nan);
 
   return m;
 }
 
diff --git a/libinterp/dldfcn/__voronoi__.cc b/libinterp/dldfcn/__voronoi__.cc
--- a/libinterp/dldfcn/__voronoi__.cc
+++ b/libinterp/dldfcn/__voronoi__.cc
@@ -329,17 +329,17 @@ Undocumented internal function.\n\
     warning ("%s: qhull did not free %d bytes of long memory (%d pieces)",
              caller.c_str (), totlong, curlong);
 
   return retval;
 
 #else
 
   octave_unused_parameter (args);
-  
+
   std::string caller
     = (args.length () > 0
        ? args(0).xstring_value ("__voronoi__: CALLER must be a string")
        : std::string ("__voronoi__"));
 
   err_disabled_feature (caller, "Qhull");
 
 #endif
diff --git a/libinterp/dldfcn/symbfact.cc b/libinterp/dldfcn/symbfact.cc
--- a/libinterp/dldfcn/symbfact.cc
+++ b/libinterp/dldfcn/symbfact.cc
@@ -375,17 +375,17 @@ cleanup:
     error (err_msg.c_str ());
 
   return retval;
 
 #else
 
   octave_unused_parameter (args);
   octave_unused_parameter (nargout);
-  
+
   err_disabled_feature ("symbfact", "CHOLMOD");
 
 #endif
 }
 
 /*
 %!testif HAVE_CHOLMOD
 %! A = sparse (magic (3));
diff --git a/liboctave/numeric/lo-mappers.h b/liboctave/numeric/lo-mappers.h
--- a/liboctave/numeric/lo-mappers.h
+++ b/liboctave/numeric/lo-mappers.h
@@ -236,17 +236,17 @@ namespace octave
 
       if (x < 0.0f)
         tmp = -1.0f;
       else if (x > 0.0f)
         tmp = 1.0f;
 
       return isnan (x) ? octave::numeric_limits<float>::NaN () : tmp;
     }
-       
+
     template <typename T>
     std::complex<T>
     signum (const std::complex<T>& x)
     {
       T tmp = abs (x);
 
       return tmp == 0 ? 0.0 : x / tmp;
     }
@@ -545,17 +545,17 @@ OCTAVE_DEPRECATED ("use 'octave::math::p
 inline bool xpositive_sign (double x) { return octave::math::positive_sign (x); }
 OCTAVE_DEPRECATED ("use 'octave::math::positive_sign' instead")
 inline bool xpositive_sign (float x) { return octave::math::positive_sign (x); }
 
 OCTAVE_DEPRECATED ("use 'octave::math::signum' instead")
 inline double signum (double x) { return octave::math::signum (x); }
 OCTAVE_DEPRECATED ("use 'octave::math::signum' instead")
 inline float signum (float x) { return octave::math::signum (x); }
-       
+
 template <typename T>
 OCTAVE_DEPRECATED ("use 'octave::math::signum' instead")
 std::complex<T>
 signum (const std::complex<T>& x)
 {
   return octave::math::signum (x);
 }
 
@@ -566,30 +566,30 @@ inline float xtrunc (float x) { return o
 
 template <typename T>
 OCTAVE_DEPRECATED ("use 'octave::math::trunc' instead")
 std::complex<T>
 xtrunc (const std::complex<T>& x)
 {
   return octave::math::trunc (x);
 }
-    
+
 OCTAVE_DEPRECATED ("use 'octave::math::fix' instead")
 inline double fix (double x) { return octave::math::fix (x); }
 OCTAVE_DEPRECATED ("use 'octave::math::fix' instead")
 inline float fix (float x) { return octave::math::fix (x); }
 
 template <typename T>
 OCTAVE_DEPRECATED ("use 'octave::math::fix' instead")
 std::complex<T>
 fix (const std::complex<T>& x)
 {
   return octave::math::fix (x);
 }
-    
+
 OCTAVE_DEPRECATED ("use 'octave::math::floor' instead")
 inline double xfloor (double x) { return octave::math::floor (x); }
 OCTAVE_DEPRECATED ("use 'octave::math::floor' instead")
 inline float xfloor (float x) { return octave::math::floor (x); }
 
 template <typename T>
 OCTAVE_DEPRECATED ("use 'octave::math::floor' instead")
 std::complex<T>
diff --git a/liboctave/system/oct-syscalls.h b/liboctave/system/oct-syscalls.h
--- a/liboctave/system/oct-syscalls.h
+++ b/liboctave/system/oct-syscalls.h
@@ -80,17 +80,17 @@ namespace octave
 
     extern OCTAVE_API int wexitstatus (int status);
 
     extern OCTAVE_API int wnohang (void);
 
     extern OCTAVE_API int wstopsig (int status);
 
     extern OCTAVE_API int wtermsig (int status);
-    
+
     extern OCTAVE_API int wuntraced (void);
 
     extern OCTAVE_API int kill (pid_t, int);
     extern OCTAVE_API int kill (pid_t, int, std::string&);
 
     extern OCTAVE_API pid_t
     popen2 (const std::string&, const string_vector&, bool, int *);
 
diff --git a/liboctave/system/oct-time.h b/liboctave/system/oct-time.h
--- a/liboctave/system/oct-time.h
+++ b/liboctave/system/oct-time.h
@@ -440,17 +440,17 @@ namespace octave
           m_isrss (0), m_minflt (0), m_majflt (0), m_nswap (0),
           m_inblock (0), m_oublock (0), m_msgsnd (0), m_msgrcv (0),
           m_nsignals (0), m_nvcsw (0), m_nivcsw (0)
       {
         stamp ();
       }
 
       resource_usage (const resource_usage& ru)
-        : m_cpu (ru.m_cpu), m_maxrss (ru.m_maxrss), 
+        : m_cpu (ru.m_cpu), m_maxrss (ru.m_maxrss),
           m_ixrss (ru.m_ixrss), m_idrss (ru.m_idrss),
           m_isrss (ru.m_isrss), m_minflt (ru.m_minflt),
           m_majflt (ru.m_majflt), m_nswap (ru.m_nswap),
           m_inblock (ru.m_inblock), m_oublock (ru.m_oublock),
           m_msgsnd (ru.m_msgsnd), m_msgrcv (ru.m_msgrcv),
           m_nsignals (ru.m_nsignals), m_nvcsw (ru.m_nvcsw),
           m_nivcsw (ru.m_nivcsw)
       { }
diff --git a/liboctave/wrappers/dirent-wrappers.c b/liboctave/wrappers/dirent-wrappers.c
--- a/liboctave/wrappers/dirent-wrappers.c
+++ b/liboctave/wrappers/dirent-wrappers.c
@@ -47,17 +47,17 @@ octave_readdir_wrapper (void *dir)
   return d_ent ? d_ent->d_name : 0;
 }
 
 void
 octave_rewinddir_wrapper (void *dir)
 {
   rewinddir ((DIR *) dir);
 }
-  
+
 int
 octave_closedir_wrapper (void *dir)
 {
   return closedir ((DIR *) dir);
 }
 
 // Define NAME_MAX, the maximum length of a single component in a
 // filename.  No such limit may exist, or may vary depending on the
diff --git a/liboctave/wrappers/dirent-wrappers.h b/liboctave/wrappers/dirent-wrappers.h
--- a/liboctave/wrappers/dirent-wrappers.h
+++ b/liboctave/wrappers/dirent-wrappers.h
@@ -31,17 +31,17 @@ along with Octave; see the file COPYING.
 extern "C" {
 #endif
 
 extern void *octave_opendir_wrapper (const char *dname);
 
 extern char *octave_readdir_wrapper (void *dir);
 
 extern void octave_rewinddir_wrapper (void *dir);
-  
+
 extern int octave_closedir_wrapper (void *dir);
 
 extern unsigned int octave_name_max_wrapper (void);
 
 #if defined __cplusplus
 }
 #endif
 
diff --git a/liboctave/wrappers/fcntl-wrappers.h b/liboctave/wrappers/fcntl-wrappers.h
--- a/liboctave/wrappers/fcntl-wrappers.h
+++ b/liboctave/wrappers/fcntl-wrappers.h
@@ -55,14 +55,14 @@ extern int octave_o_rdonly_wrapper (void
 
 extern int octave_o_rdwr_wrapper (void);
 
 extern int octave_o_sync_wrapper (void);
 
 extern int octave_o_trunc_wrapper (void);
 
 extern int octave_o_wronly_wrapper (void);
-  
+
 #if defined __cplusplus
 }
 #endif
 
 #endif
diff --git a/liboctave/wrappers/glob-wrappers.h b/liboctave/wrappers/glob-wrappers.h
--- a/liboctave/wrappers/glob-wrappers.h
+++ b/liboctave/wrappers/glob-wrappers.h
@@ -39,17 +39,17 @@ octave_glob_wrapper (const char *pattern
 
 extern int octave_glob_num_matches (void *glob_info);
 
 extern char **octave_glob_match_list (void *glob_info);
 
 extern void octave_globfree_wrapper (void *glob_info);
 
 extern int octave_glob_nosort_wrapper (void);
-  
+
 extern int
 octave_fnmatch_wrapper (const char *pattern, const char *name, int flags);
 
 extern int octave_fnm_nomatch_wrapper (void);
 
 extern int octave_fnm_pathname_wrapper (void);
 
 extern int octave_fnm_noescape_wrapper (void);
diff --git a/liboctave/wrappers/nproc-wrapper.h b/liboctave/wrappers/nproc-wrapper.h
--- a/liboctave/wrappers/nproc-wrapper.h
+++ b/liboctave/wrappers/nproc-wrapper.h
@@ -28,17 +28,17 @@ extern "C" {
 #endif
 
 enum octave_nproc_query
 {
   OCTAVE_NPROC_ALL,
   OCTAVE_NPROC_CURRENT,
   OCTAVE_NPROC_CURRENT_OVERRIDABLE
 };
-  
+
 extern unsigned long int
 octave_num_processors_wrapper (enum octave_nproc_query);
 
 #if defined __cplusplus
 }
 #endif
 
 #endif
diff --git a/liboctave/wrappers/stat-wrappers.c b/liboctave/wrappers/stat-wrappers.c
--- a/liboctave/wrappers/stat-wrappers.c
+++ b/liboctave/wrappers/stat-wrappers.c
@@ -94,34 +94,34 @@ octave_stat_wrapper (const char *fname, 
                      dev_t *dev, nlink_t *nlink, uid_t *uid,
                      gid_t *gid, off_t *size, time_t *atime,
                      time_t *mtime, time_t *ctime, dev_t *rdev,
                      long *blksize, long *blocks)
 {
   struct stat buf;
 
   int status = stat (fname, &buf);
-    
+
   assign_stat_fields (&buf, mode, ino, dev, nlink, uid, gid, size,
                       atime, mtime, ctime, rdev, blksize, blocks);
 
   return status;
 }
 
 int
 octave_lstat_wrapper (const char *lname, mode_t *mode, ino_t *ino,
                       dev_t *dev, nlink_t *nlink, uid_t *uid,
                       gid_t *gid, off_t *size, time_t *atime,
                       time_t *mtime, time_t *ctime, dev_t *rdev,
                       long *blksize, long *blocks)
 {
   struct stat buf;
 
   int status = lstat (lname, &buf);
-    
+
   assign_stat_fields (&buf, mode, ino, dev, nlink, uid, gid, size,
                       atime, mtime, ctime, rdev, blksize, blocks);
 
   return status;
 }
 
 int
 octave_fstat_wrapper (int fid, mode_t *mode, ino_t *ino,
diff --git a/liboctave/wrappers/unistd-wrappers.c b/liboctave/wrappers/unistd-wrappers.c
--- a/liboctave/wrappers/unistd-wrappers.c
+++ b/liboctave/wrappers/unistd-wrappers.c
@@ -210,17 +210,17 @@ octave_stdin_fileno (void)
   return STDIN_FILENO;
 }
 
 int
 octave_stdout_fileno (void)
 {
   return STDOUT_FILENO;
 }
-  
+
 int
 octave_symlink_wrapper (const char *nm1, const char *nm2)
 {
   return symlink (nm1, nm2);
 }
 
 int
 octave_unlink_wrapper (const char *nm)
diff --git a/liboctave/wrappers/unistd-wrappers.h b/liboctave/wrappers/unistd-wrappers.h
--- a/liboctave/wrappers/unistd-wrappers.h
+++ b/liboctave/wrappers/unistd-wrappers.h
@@ -79,17 +79,17 @@ extern int octave_pipe_wrapper (int *fd)
 
 extern int octave_rmdir_wrapper (const char *nm);
 
 extern pid_t octave_setsid_wrapper (void);
 
 extern int octave_stdin_fileno (void);
 
 extern int octave_stdout_fileno (void);
-  
+
 extern int octave_symlink_wrapper (const char *nm1, const char *nm2);
 
 extern int octave_unlink_wrapper (const char *nm);
 
 extern pid_t octave_vfork_wrapper (void);
 
 #if defined __cplusplus
 }
diff --git a/liboctave/wrappers/wait-wrappers.h b/liboctave/wrappers/wait-wrappers.h
--- a/liboctave/wrappers/wait-wrappers.h
+++ b/liboctave/wrappers/wait-wrappers.h
@@ -45,17 +45,17 @@ extern bool octave_wifexited_wrapper (in
 
 extern bool octave_wifsignaled_wrapper (int status);
 
 extern bool octave_wifstopped_wrapper (int status);
 
 extern int octave_wexitstatus_wrapper (int status);
 
 extern int octave_wnohang_wrapper (void);
-  
+
 extern int octave_wstopsig_wrapper (int status);
 
 extern int octave_wtermsig_wrapper (int status);
 
 extern int octave_wuntraced_wrapper (void);
 
 #if defined __cplusplus
 }
diff --git a/scripts/general/inputParser.m b/scripts/general/inputParser.m
--- a/scripts/general/inputParser.m
+++ b/scripts/general/inputParser.m
@@ -255,17 +255,17 @@
 ## Author: Carnë Draug <carandraug@octave.org>
 
 classdef inputParser < handle
   properties
     ## FIXME: set input checking for these properties
     CaseSensitive = false;
     FunctionName  = "";
     KeepUnmatched = false;
-    PartialMatching = false; # FIXME: unimplemented (and default should be true) 
+    PartialMatching = false; # FIXME: unimplemented (and default should be true)
     StructExpand    = true;
   endproperties
 
   properties (SetAccess = protected)
     Parameters    = cell ();
     Results       = struct ();
     Unmatched     = struct ();
     UsingDefaults = cell ();
diff --git a/scripts/gui/dialog.m b/scripts/gui/dialog.m
--- a/scripts/gui/dialog.m
+++ b/scripts/gui/dialog.m
@@ -42,17 +42,17 @@
 ## callback
 ##
 ## @item integerhandle
 ## off
 ##
 ## @item inverthardcopy
 ## off
 ##
-## @item menubar 
+## @item menubar
 ## none
 ##
 ## @item numbertitle
 ## off
 ##
 ## @item paperpositionmode
 ## auto
 ##
@@ -61,17 +61,17 @@
 ##
 ## @item visible
 ## on
 ##
 ## @item windowstyle
 ## modal
 ##
 ## @end table
-## 
+##
 ##
 ## Multiple property-value pairs may be specified for the dialog object, but
 ## they must appear in pairs.
 ##
 ## The return value @var{h} is a graphics handle to the created figure.
 ## object.
 ##
 ## Examples:
@@ -107,18 +107,19 @@ function h = dialog (varargin)
     "handlevisibility", "callback", ...
     "integerhandle", "off", ...
     "inverthardcopy", "off", ...
     "menubar", "none", ...
     "numbertitle", "off", ...
     "paperpositionmode", "auto", ...
     "resize", "off", ...
     "toolbar", "none", ...
-    "visible", "on", 
+    "visible", "on",
     "windowstyle", "modal", ...
     varargin{:} );
-    
+
   if (nargout > 0)
     h = tmph;
-  endif 
+  endif
+
 endfunction
 
 
diff --git a/scripts/miscellaneous/mkdir.m b/scripts/miscellaneous/mkdir.m
--- a/scripts/miscellaneous/mkdir.m
+++ b/scripts/miscellaneous/mkdir.m
@@ -84,16 +84,16 @@ endfunction
 %! dir1 = tempname ();
 %! dir2 = "%_unlikely_name_%";
 %! dir = fullfile (dir1, dir2);
 %! unwind_protect
 %!   status = mkdir (dir);
 %!   assert (status);
 %!   assert (isdir (dir));
 %! unwind_protect_cleanup
-%!   confirm_recursive_rmdir (false, "local"); 
+%!   confirm_recursive_rmdir (false, "local");
 %!   rmdir (dir1, "s");
 %! end_unwind_protect
 
 ## Test input validation
 %!error mkdir ()
 %!error mkdir ("a", "b", "c")
 
diff --git a/scripts/optimization/fsolve.m b/scripts/optimization/fsolve.m
--- a/scripts/optimization/fsolve.m
+++ b/scripts/optimization/fsolve.m
@@ -250,17 +250,17 @@ function [x, fvec, info, output, fjac] =
     ## factorization of the Jacobian to avoid solving a full system in each
     ## step.  In this case, we pass a triangular matrix to __dogleg__.
     useqr = updating && m >= n && n > 10;
 
     if (useqr)
       ## FIXME: Currently, pivoting is mostly useless because the \ operator
       ## cannot exploit the resulting props of the triangular factor.
       ## Unpivoted QR is significantly faster so it doesn't seem right to pivot
-      ## just to get invariance.  Original MINPACK didn't pivot either, 
+      ## just to get invariance.  Original MINPACK didn't pivot either,
       ## at least when qr updating was used.
       [q, r] = qr (fjac, 0);
     endif
 
     if (autoscale)
       ## Get column norms, use them as scaling factors.
       jcn = norm (fjac, 'columns').';
       if (niter == 1)
diff --git a/scripts/plot/appearance/legend.m b/scripts/plot/appearance/legend.m
--- a/scripts/plot/appearance/legend.m
+++ b/scripts/plot/appearance/legend.m
@@ -794,17 +794,17 @@ function [hleg, hleg_obj, hplot, labels]
           hplt = hplots(k);
           typ = get (hplt, "type");
           ## For an hggroup, find an underlying primitive object
           if (strcmp (typ, "hggroup"))
             for hgkid = get (hplt, "children").'
               hgkid_type = get (hgkid, "type");
               if (any (strcmp (hgkid_type, {"line","patch","surface"})))
                 typ = hgkid_type;
-                hplt = hgkid; 
+                hplt = hgkid;
                 break;
               endif
             endfor
           endif
 
           switch (typ)
 
             case "line"
diff --git a/scripts/plot/appearance/text.m b/scripts/plot/appearance/text.m
--- a/scripts/plot/appearance/text.m
+++ b/scripts/plot/appearance/text.m
@@ -298,17 +298,17 @@ endfunction
 %!   assert (get (h(2), "string"), "string2");
 %!
 %!   ## Test special keyword processing
 %!   h = text (0.5, 0.5, "default");
 %!   assert (get (h, "string"), "default");
 %!   h = text (0.5, 0.5, "factory");
 %!   assert (get (h, "string"), "factory");
 %!
-%!   ## Test special null ("") string 
+%!   ## Test special null ("") string
 %!   h = text (0.5, 0.5, "");
 %!   assert (get (h, "string"), "");
 %!
 %! unwind_protect_cleanup
 %!   close (hf);
 %! end_unwind_protect
 
 ## Tests repeated with cell input ##
diff --git a/scripts/plot/draw/colorbar.m b/scripts/plot/draw/colorbar.m
--- a/scripts/plot/draw/colorbar.m
+++ b/scripts/plot/draw/colorbar.m
@@ -311,17 +311,17 @@ function update_colorbar_clim (hax, d, h
     if (vert)
       set (hi, "ydata", [cmin, cmax]);
       set (hiax, "ylim", cext);
     else
       set (hi, "xdata", [cmin, cmax]);
       set (hiax, "xlim", cext);
     endif
   endif
-  
+
 endfunction
 
 function update_colorbar_cmap (hf, d, hi, vert, init_sz)
   persistent sz = init_sz;
 
   if (ishandle (hf) && strcmp (get (hf, "type"), "figure")
       && (isempty (gcbf ()) || strcmp (get (gcbf (), "beingdeleted"), "off")))
     clen = rows (get (hf, "colormap"));
diff --git a/scripts/plot/draw/light.m b/scripts/plot/draw/light.m
--- a/scripts/plot/draw/light.m
+++ b/scripts/plot/draw/light.m
@@ -37,17 +37,17 @@
 ##
 ## Lighting is only supported for graphics toolkits supporting OpenGL (i.e.
 ## @qcode{"fltk"} and @qcode{"qt"}).
 ##
 ## The following properties specific to the light object can be passed with
 ## their respective values:
 ##
 ## @table @asis
-## @item @qcode{"Color":} The color of the light object can be passed as an 
+## @item @qcode{"Color":} The color of the light object can be passed as an
 ## RGB-vector (e.g. @qcode{[1 0 0]} for red) or as a string (e.g. @qcode{"r"}
 ## for red).  The default color is white (@qcode{[1 1 1]}).
 ##
 ## @item @qcode{"Position":} The direction from which the light emanates as an
 ## 1x3-vector.  The default direction is @qcode{[1 0 1]}.
 ##
 ## @item @qcode{"Style":} This string defines whether the light emanates from a
 ## light source at infinite distance (@qcode{"infinite"}) or from a local point
diff --git a/scripts/plot/util/axes.m b/scripts/plot/util/axes.m
--- a/scripts/plot/util/axes.m
+++ b/scripts/plot/util/axes.m
@@ -100,17 +100,17 @@ function restack_axes (h, cf)
   show = get (0, "showhiddenhandles");
   unwind_protect
     set (0, "showhiddenhandles", "on");
     ch = get (cf, "children");
     axidx = isaxes (ch);
     hax = ch(axidx);
     ## Stack the legend associated with this axes on top of the axes itself
     hleg = hax(strcmp (get (hax, "tag"), "legend"));
-    if (any (hleg)) 
+    if (any (hleg))
       ## Get field "handle" from structure stored in "userdata" property
       if (isscalar (hleg))
         hlegaxes = get (hleg, "userdata").handle;
       else
         hlegaxes = [[get(hleg, "userdata"){:}].handle](:);
       endif
       hleg = hleg(hlegaxes == h);
       h = [hleg; h];
@@ -129,29 +129,29 @@ endfunction
 %! unwind_protect
 %!   hax1 = axes ();
 %!   plot (1:10, "b");
 %!   hleg1 = legend ("hax1");
 %!   hax2 = axes ();
 %!   plot (10:-1:1, "r");
 %!   hleg2 = legend ("hax2");
 %!
-%!   ch = allchild (hf); 
-%!   hax = ch(isaxes (ch)); 
+%!   ch = allchild (hf);
+%!   hax = ch(isaxes (ch));
 %!   assert (find (hax == hax2) < find (hax == hax1));
 %!   assert (find (hax == hleg1) < find (hax == hax1));
 %!   assert (find (hax == hleg2) < find (hax == hax2));
 %!
 %!   axes (hax1);
-%!   ch = allchild (hf); 
-%!   hax = ch(isaxes (ch)); 
+%!   ch = allchild (hf);
+%!   hax = ch(isaxes (ch));
 %!   assert (find (hax == hax2) > find (hax == hax1));
 %!   assert (find (hax == hleg1) < find (hax == hax1));
 %!
 %!   axes (hax2);
-%!   ch = allchild (hf); 
-%!   hax = ch(isaxes (ch)); 
+%!   ch = allchild (hf);
+%!   hax = ch(isaxes (ch));
 %!   assert (find (hax == hax2) < find (hax == hax1));
 %!   assert (find (hax == hleg2) < find (hax == hax2));
 %! unwind_protect_cleanup
 %!   close (hf);
 %! end_unwind_protect
 
diff --git a/scripts/plot/util/ishghandle.m b/scripts/plot/util/ishghandle.m
--- a/scripts/plot/util/ishghandle.m
+++ b/scripts/plot/util/ishghandle.m
@@ -27,24 +27,24 @@
 ## @seealso{ishandle}
 ## @end deftypefn
 
 function retval = ishghandle (h, type = "")
 
   if (nargin < 1 || nargin > 2)
     print_usage ();
   endif
-  
+
   if (nargin == 2 && (! ischar (type) || ! isrow (type)))
     error ("ishghandle: TYPE must be a string");
   endif
-  
+
   ## Octave has no Simulink equivalent so it is sufficient to call ishandle.
   retval = ishandle (h);
-  
+
   if (nargin == 2 && any (retval))
     typematch = strcmpi (get (h(retval), "type"), type);
     retval(retval) = typematch;
   endif
 
 endfunction
 
 
