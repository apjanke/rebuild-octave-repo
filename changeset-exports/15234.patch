# HG changeset patch
# User Max Brister <max@2bass.com>
# Date 1345931565 21600
#      Sat Aug 25 15:52:45 2012 -0600
# Node ID ffa0b85a87f447d8f371fb4a345c935243e6a5f1
# Parent  c27a1e131b16b7c2a1a3b2149921362377239780
pt-jit.cc (jit_info::compile): Fix compile error with OCTAVE_JIT_DEBUG defined

diff --git a/libinterp/interp-core/pt-jit.cc b/libinterp/interp-core/pt-jit.cc
--- a/libinterp/interp-core/pt-jit.cc
+++ b/libinterp/interp-core/pt-jit.cc
@@ -1706,21 +1706,22 @@ jit_info::compile (tree_jit& tjit, tree&
   try
     {
       jit_convert conv (tee, for_bounds);
       jit_infer infer (conv.get_factory (), conv.get_blocks (),
                        conv.get_variable_map ());
 
       infer.infer ();
 #ifdef OCTAVE_JIT_DEBUG
-      jit_block *entry_block = infer.get_blocks ().front ();
+      jit_block_list& blocks = infer.get_blocks ();
+      jit_block *entry_block = blocks.front ();
       entry_block->label ();
       std::cout << "-------------------- Compiling tree --------------------\n";
       std::cout << tee.str_print_code () << std::endl;
-      entry_block->print (std::cout, "octave jit ir");
+      blocks.print (std::cout, "octave jit ir");
 #endif
 
       jit_factory& factory = conv.get_factory ();
       jit_convert_llvm to_llvm;
       llvm_function = to_llvm.convert (tjit.get_module (), infer.get_blocks (),
                                        factory.constants ());
       arguments = to_llvm.get_arguments ();
       bounds = conv.get_bounds ();
@@ -1733,27 +1734,26 @@ jit_info::compile (tree_jit& tjit, tree&
 #endif
     }
 
   if (llvm_function)
     {
 #ifdef OCTAVE_JIT_DEBUG
       std::cout << "-------------------- llvm ir --------------------";
       llvm::raw_os_ostream llvm_cout (std::cout);
-      function->print (llvm_cout);
+      llvm_function->print (llvm_cout);
       std::cout << std::endl;
-      llvm::verifyFunction (*function);
+      llvm::verifyFunction (*llvm_function);
 #endif
 
       tjit.optimize (llvm_function);
 
 #ifdef OCTAVE_JIT_DEBUG
       std::cout << "-------------------- optimized llvm ir "
                 << "--------------------\n";
-      llvm::raw_os_ostream llvm_cout (std::cout);
       llvm_function->print (llvm_cout);
       llvm_cout.flush ();
       std::cout << std::endl;
 #endif
 
       void *void_fn = engine->getPointerToFunction (llvm_function);
       function = reinterpret_cast<jited_function> (void_fn);
     }
