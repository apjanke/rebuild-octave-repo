# HG changeset patch
# User Rik <rik@octave.org>
# Date 1448900408 28800
#      Mon Nov 30 08:20:08 2015 -0800
# Node ID 8513c84a13cbfc46a7bf7a5f1f0d95af429c02a8
# Parent  29861f5f28c5d23acd8b300108099823a53ad678
Use parser string concatenation rather than strcat() for performance in m-files.

* __file_filter__.m, __get_funcname__.m, uigetfile.m, uiputfile.m,
__makeinfo__.m, print_usage.m, fix_version.m, axis.m, __add_datasource__.m,
print.m, __gnuplot_draw_axes__.m, __gnuplot_print__.m, __opengl_print__.m,
__print_parse_opts__.m, saveas.m, html_compare_plot_demos.m:
Use parser string concatenation rather than strcat() for performance in m-files.

diff --git a/scripts/gui/private/__file_filter__.m b/scripts/gui/private/__file_filter__.m
--- a/scripts/gui/private/__file_filter__.m
+++ b/scripts/gui/private/__file_filter__.m
@@ -46,20 +46,20 @@ function [retval, defname, defdir] = __f
         if (isempty (retval{i, 2}))
           retval{i, 2} = __default_filtername__ (retval{i, 1});
         endif
       endfor
     endif
   elseif (ischar (file_filter))
     [defdir, fname, fext] = fileparts (file_filter);
     if (! strcmp (fname, "*"))
-      defname = strcat (fname, fext);
+      defname = [fname, fext];
     endif
-    if ((length (fext) > 0) && (! strcmp(fext, '.*')))
-      fext = strcat ("*", fext);
+    if ((length (fext) > 0) && (! strcmp (fext, ".*")))
+      fext = ["*" fext];
       retval = {fext, __default_filtername__(fext)};
     endif
   endif
 
   retval(end+1,:) = {"*", __default_filtername__("*")};
 
 endfunction
 
diff --git a/scripts/gui/private/__get_funcname__.m b/scripts/gui/private/__get_funcname__.m
--- a/scripts/gui/private/__get_funcname__.m
+++ b/scripts/gui/private/__get_funcname__.m
@@ -25,20 +25,20 @@
 ## @end deftypefn
 
 ## Author: Andreas Weber
 
 function funcname = __get_funcname__ (basename)
 
   if (! __octave_link_enabled__ ())
     tk = graphics_toolkit ();
-    funcname = strcat ("__", basename, "_", tk, "__");
+    funcname = [ "__" basename "_" tk "__"];
     if (numel (tk) > 0 && ! strcmp (tk, "fltk")
         && ! __is_function__ (funcname))
       warning ("%s: no implementation for toolkit '%s', using 'fltk' instead",
                basename, tk);
     endif
-    funcname = strcat ("__", basename, "_fltk__");
+    funcname = ["__" basename "_fltk__"];
   else
     funcname = "";
   endif
 
 endfunction
diff --git a/scripts/gui/uigetfile.m b/scripts/gui/uigetfile.m
--- a/scripts/gui/uigetfile.m
+++ b/scripts/gui/uigetfile.m
@@ -133,17 +133,17 @@ function [retfile, retpath, retindex] = 
         fname = fext = "";
       else
         [fdir, fname, fext] = fileparts (varargin{3});
       endif
       if (length (fdir) > 0)
         outargs{6} = fdir;
       endif
       if (length (fname) > 0 || length (fext) > 0)
-        outargs{3} = strcat (fname, fext);
+        outargs{3} = [fname fext];
       endif
     elseif (! isempty (args{3}))
       print_usage ();
     endif
   endif
 
   if (stridx)
     ## string arguments ("position" or "multiselect")
diff --git a/scripts/gui/uiputfile.m b/scripts/gui/uiputfile.m
--- a/scripts/gui/uiputfile.m
+++ b/scripts/gui/uiputfile.m
@@ -95,17 +95,17 @@ function [retfile, retpath, retindex] = 
         fname = fext = "";
       else
         [fdir, fname, fext] = fileparts (varargin{3});
       endif
       if (! isempty (fdir))
         outargs{6} = fdir;
       endif
       if (! isempty (fname) || ! isempty (fext))
-        outargs{3} = strcat (fname, fext);
+        outargs{3} = [fname fext];
       endif
     elseif (! isempty (varargin{3}))
       print_usage ();
     endif
   endif
 
   if (__octave_link_enabled__ ())
     [retfile, retpath, retindex] = __octave_link_file_dialog__ (outargs{:});
diff --git a/scripts/help/__makeinfo__.m b/scripts/help/__makeinfo__.m
--- a/scripts/help/__makeinfo__.m
+++ b/scripts/help/__makeinfo__.m
@@ -72,21 +72,19 @@ function [retval, status] = __makeinfo__
     error ("__makeinfo__: second input argument must be a string");
   endif
 
   ## NOTE: The 3rd argument is used by Octave-Forge function
   ##       generate_package_html, not by core Octave.  This functionality
   ##       can only be removed when that function has been updated.
   if (nargin < 3)
     if (strcmpi (output_type, "plain text"))
-      fsee_also = @(T) strcat ...
-          ("\nSee also:", sprintf (" %s,", T{:})(1:end-1), "\n");
+      fsee_also = @(T) ["\nSee also:", sprintf(" %s,", T{:})(1:end-1), "\n"];
     else
-      fsee_also = @(T) strcat ...
-          ("\nSee also:", sprintf (" @ref{%s},", T{:})(1:end-1), "\n");
+      fsee_also = @(T) ["\nSee also:", sprintf(" @ref{%s},", T{:})(1:end-1), "\n"];
     endif
   endif
 
   if (! isa (fsee_also, "function_handle"))
     error ("__makeinfo__: third input argument must be a function handle");
   endif
 
   ## Formatting in m-files has an extra space at the beginning of every line.
diff --git a/scripts/help/print_usage.m b/scripts/help/print_usage.m
--- a/scripts/help/print_usage.m
+++ b/scripts/help/print_usage.m
@@ -111,19 +111,19 @@ function [retval, status] = get_usage_te
   if (! isempty (def_idx))
     endf_idx = strfind (help_text, "@end def");
     def_idx = sort ([def_idx, endf_idx]);
     endl_idx = find (help_text == "\n");
     buffer = "";
     for k = 1:length (def_idx)
       endl = endl_idx(find (endl_idx > def_idx(k), 1));
       if (isempty (endl))
-        buffer = strcat (buffer, help_text (def_idx(k):end), "\n");
+        buffer = [buffer, help_text(def_idx(k):end), "\n"];
       else
-        buffer = strcat (buffer, help_text (def_idx(k):endl));
+        buffer = [buffer, help_text(def_idx(k):endl)];
       endif
     endfor
   else
     [retval, status] = get_usage_plain_text (help_text, max_len);
   endif
 
   ## Run makeinfo to generate plain text
   [retval, status] = __makeinfo__ (buffer, "plain text");
diff --git a/scripts/pkg/private/fix_version.m b/scripts/pkg/private/fix_version.m
--- a/scripts/pkg/private/fix_version.m
+++ b/scripts/pkg/private/fix_version.m
@@ -24,17 +24,17 @@
 
 ## Make sure the version string v is a valid x.y.z version string
 ## Examples: "0.1" => "0.1.0", "monkey" => error(...).
 function out = fix_version (v)
 
   if (regexp (v, '^\d+(\.\d+){1,2}$') == 1)
     parts = ostrsplit (v, '.', true);
     if (numel (parts) == 2)
-      out = strcat (v, ".0");
+      out = [v ".0"];
     else
       out = v;
     endif
   else
     error ("bad version string: %s", v);
   endif
 
 endfunction
diff --git a/scripts/plot/appearance/axis.m b/scripts/plot/appearance/axis.m
--- a/scripts/plot/appearance/axis.m
+++ b/scripts/plot/appearance/axis.m
@@ -317,29 +317,29 @@ function limits = __axis__ (ca, ax, vara
   endif
 
 endfunction
 
 function lims = __get_tight_lims__ (ca, ax)
 
   ## Get the limits for axis ("tight").
   ## AX should be one of "x", "y", or "z".
-  kids = findobj (ca, "-property", strcat (ax, "data"));
+  kids = findobj (ca, "-property", [ax "data"]);
   ## The data properties for hggroups mirror their children.
   ## Exclude the redundant hgroup values.
   hg_kids = findobj (kids, "type", "hggroup");
   kids = setdiff (kids, hg_kids);
   if (isempty (kids))
     ## Return the current limits.
-    lims = get (ca, strcat (ax, "lim"));
+    lims = get (ca, [ax "lim"]);
   else
-    data = get (kids, strcat (ax, "data"));
+    data = get (kids, [ax "data"]);
     types = get (kids, "type");
 
-    scale = get (ca, strcat (ax, "scale"));
+    scale = get (ca, [ax "scale"]);
     if (! iscell (data))
       data = {data};
     endif
 
     ## Extend image data one pixel
     idx = strcmp (types, "image");
     if (any (idx) && (ax == "x" || ax == "y"))
       imdata = data(idx);
diff --git a/scripts/plot/draw/private/__add_datasource__.m b/scripts/plot/draw/private/__add_datasource__.m
--- a/scripts/plot/draw/private/__add_datasource__.m
+++ b/scripts/plot/draw/private/__add_datasource__.m
@@ -23,17 +23,17 @@
 
 function newargs = __add_datasource__ (fcn, h, data, varargin)
 
   if (ischar (data))
     data = {data};
   endif
 
   for i = 1 : numel (data)
-    addproperty (strcat (data{i}, "datasource"), h, "string", "");
+    addproperty ([data{i} "datasource"], h, "string", "");
   endfor
 
   i = 0;
   newargs = {};
   while (i < numel (varargin))
     arg = varargin{++i};
     if (i != numel (varargin) && ischar (arg)
         && length (arg) > 9 && strcmpi (arg(end-9:end), "datasource"))
diff --git a/scripts/plot/util/print.m b/scripts/plot/util/print.m
--- a/scripts/plot/util/print.m
+++ b/scripts/plot/util/print.m
@@ -498,29 +498,29 @@ function cmd = epstool (opts, filein, fi
     filein = [tempname() ".eps"];
     if (dos_shell)
       cleanup = sprintf ("& del %s ", strrep (filein, '/', '\'));
     else
       cleanup = sprintf ("; rm %s ", filein);
     endif
   else
     pipein = false;
-    filein = strcat ("'", strtrim (filein), "'");
+    filein = ["'" strtrim(filein) "'"];
   endif
   if (strcmp (fileout, "-"))
     pipeout = true;
     fileout = [tempname() ".eps"];
     if (dos_shell)
       cleanup = [cleanup, sprintf("& del %s ", strrep (fileout, '/', '\'))];
     else
       cleanup = [cleanup, sprintf("; rm %s ", fileout)];
     endif
   else
     pipeout = false;
-    fileout = strcat ("'", strtrim (fileout), "'");
+    fileout = ["'" strtrim(fileout) "'"];
   endif
 
   if (! isempty (opts.preview) && opts.tight_flag)
     warning ("print:previewandtight",
              "print.m: eps preview may not be combined with -tight");
   endif
   if (! isempty (opts.preview) || opts.tight_flag)
     if (! isempty (opts.epstool_binary))
@@ -643,27 +643,27 @@ function cmd = fig2dev (opts, devopt)
   endif
 endfunction
 
 function latex_standalone (opts)
   n = find (opts.name == ".", 1, "last");
   if (! isempty (n))
     opts.name = opts.name(1:n-1);
   endif
-  latexfile = strcat (opts.name, ".tex");
+  latexfile = [opts.name ".tex"];
   switch (opts.devopt)
     case {"pdflatexstandalone"}
       packages = "\\usepackage{graphicx,color}";
-      graphicsfile = strcat (opts.name, "-inc.pdf");
+      graphicsfile = [opts.name "-inc.pdf"];
     case {"pslatexstandalone"}
       packages = "\\usepackage{epsfig,color}";
-      graphicsfile = strcat (opts.name, "-inc.ps");
+      graphicsfile = [opts.name "-inc.ps"];
     otherwise
       packages = "\\usepackage{epsfig,color}";
-      graphicsfile = strcat (opts.name, "-inc.eps");
+      graphicsfile = [opts.name "-inc.eps"];
   endswitch
   papersize = sprintf ("\\usepackage[papersize={%.2fbp,%.2fbp},text={%.2fbp,%.2fbp}]{geometry}",
                        fix (opts.canvas_size), fix (opts.canvas_size));
   prepend = {"\\documentclass{minimal}";
              packages;
              papersize;
              "\\begin{document}";
              "\\centering"};
diff --git a/scripts/plot/util/private/__gnuplot_draw_axes__.m b/scripts/plot/util/private/__gnuplot_draw_axes__.m
--- a/scripts/plot/util/private/__gnuplot_draw_axes__.m
+++ b/scripts/plot/util/private/__gnuplot_draw_axes__.m
@@ -938,17 +938,17 @@ function __gnuplot_draw_axes__ (h, plot_
 
            facesame = true;
            if (! isequal (pt, pt2) && isfield (obj, "markerfacecolor")
                && ! strcmp (obj.markerfacecolor, "none"))
              if (strcmp (obj.markerfacecolor, "auto")
                  || ! isnumeric (obj.markerfacecolor)
                  || (isnumeric (obj.markerfacecolor)
                      && isequal (color, obj.markerfacecolor)))
-               style = strcat (style, "points");
+               style = [style "points"];
                if (isfield (obj, "markersize"))
                  if (length (mdat) == nc)
                    m = mdat(i);
                  else
                    m = mdat;
                  endif
                  ps = sprintf ("pointsize %f", m / 3);
                else
@@ -992,17 +992,17 @@ function __gnuplot_draw_axes__ (h, plot_
              if (facesame && ! isempty (pt)
                  && (strcmp (obj.markeredgecolor, "auto")
                      || ! isnumeric (obj.markeredgecolor)
                      || (isnumeric (obj.markeredgecolor)
                          && isequal (color, obj.markeredgecolor))))
                if (sidx == 1 && ((length (style) == 5
                         && strncmp (style, "lines", 5))
                        || isempty (style)))
-                 style = strcat (style, "points");
+                 style = [style, "points"];
                  if (isfield (obj, "markersize"))
                    if (length (mdat) == nc)
                      m = mdat(i);
                    else
                      m = mdat;
                    endif
                    ps = sprintf ("pointsize %f", m / 3);
                  else
@@ -1862,17 +1862,17 @@ function style = do_linestyle_command (o
     if (! isequal (pt, pt2) && isfield (obj, "markerfacecolor")
         && ! strcmp (obj.markerfacecolor, "none"))
       if (strcmp (obj.markerfacecolor, "auto")
           || ! isnumeric (obj.markerfacecolor)
           || (isnumeric (obj.markerfacecolor)
               && isequal (color, obj.markerfacecolor)))
         if (! isempty (pt2))
           fprintf (plot_stream, " pointtype %s", pt2);
-          style{sidx} = strcat (style{sidx}, "points");
+          style{sidx} = [style{sidx} "points"];
         endif
         if (isfield (obj, "markersize"))
           fprintf (plot_stream, " pointsize %f", obj.markersize / 3);
         endif
       else
         facesame = false;
         if (! found_style)
           fputs (plot_stream, " default");
@@ -1904,17 +1904,17 @@ function style = do_linestyle_command (o
       if (facesame && ! isempty (pt)
           && (strcmp (obj.markeredgecolor, "auto")
               || ! isnumeric (obj.markeredgecolor)
               || (isnumeric (obj.markeredgecolor)
                   && isequal (color, obj.markeredgecolor))))
         if (sidx == 1 && ((length (style{sidx}) == 5
             && strncmp (style{sidx}, "lines", 5)) || isempty (style{sidx})))
           if (! isempty (pt))
-            style{sidx} = strcat (style{sidx}, "points");
+            style{sidx} = [style{sidx} "points"];
             fprintf (plot_stream, " pointtype %s", pt);
           endif
           if (isfield (obj, "markersize"))
             fprintf (plot_stream, " pointsize %f", obj.markersize / 3);
           endif
         endif
       else
         if (! found_style)
@@ -2168,17 +2168,17 @@ function do_tics_1 (ticmode, tics, mtics
   if (strcmp (scale, "log"))
     num_mtics = 10;
     if (any (strcmp (gnuplot_term, {"tikz", "pstex", "pslatex", "epslatex"})))
       fmt = "$10^{%T}$";
     else
       fmt = "10^{%T}";
     endif
     if (sgn < 0)
-      fmt = strcat ("-", fmt);
+      fmt = ["-" fmt];
     endif
   else
     fmt = "%g";
     num_mtics = 5;
   endif
   colorspec = get_text_colorspec (color, mono);
   fprintf (plot_stream, "set format %s \"%s\";\n", ax, fmt);
   if (strcmpi (ticmode, "manual"))
diff --git a/scripts/plot/util/private/__gnuplot_print__.m b/scripts/plot/util/private/__gnuplot_print__.m
--- a/scripts/plot/util/private/__gnuplot_print__.m
+++ b/scripts/plot/util/private/__gnuplot_print__.m
@@ -96,17 +96,17 @@ function opts = __gnuplot_print__ (opts)
       endif
       if (__gnuplot_has_feature__ ("epslatex_implies_eps_filesuffix"))
         suffix = "tex";
       else
         ## Gnuplot 4.0 wants a ".eps" suffix.
         suffix = "eps";
       endif
       local_drawnow ([term " " gp_opts],
-                     strcat (name, ".", suffix), opts);
+                     [name "." suffix], opts);
     case "tikz"
       if (__gnuplot_has_terminal__ ("tikz"))
         local_drawnow (["lua tikz " gp_opts], opts.name, opts);
       else
         error (sprintf ("print:no%soutput", opts.devopt),
                "print.m: '%s' output is not available for gnuplot-%s",
                upper (opts.devopt), __gnuplot_version__ ());
       endif
diff --git a/scripts/plot/util/private/__opengl_print__.m b/scripts/plot/util/private/__opengl_print__.m
--- a/scripts/plot/util/private/__opengl_print__.m
+++ b/scripts/plot/util/private/__opengl_print__.m
@@ -85,17 +85,17 @@ function opts = __opengl_print__ (opts)
     case fig2dev_devices
       cmd_pstoedit = opts.pstoedit_cmd (opts, "fig");
       cmd_fig2dev = opts.fig2dev_cmd (opts, opts.devopt);
       if (strcmp (opts.devopt, "pstex"))
         [~, ~, ext] = fileparts (opts.name);
         if (any (strcmpi (ext, {".ps", ".tex", "."})))
           opts.name = opts.name(1:end-numel(ext));
         endif
-        opts.name = strcat (opts.name, ".ps");
+        opts.name = [opts.name ".ps"];
         cmd = sprintf ("%s | %s > %s", cmd_pstoedit, cmd_fig2dev, opts.name);
         gl2ps_device = {"eps"};
         pipeline = {cmd};
         cmd_fig2dev = opts.fig2dev_cmd (opts, "pstex_t");
         gl2ps_device{2} = "eps";
         pipeline{2} = sprintf ("%s | %s > %s", cmd_pstoedit,
                                cmd_fig2dev, strrep(opts.name, ".ps", ".tex"));
       else
diff --git a/scripts/plot/util/private/__print_parse_opts__.m b/scripts/plot/util/private/__print_parse_opts__.m
--- a/scripts/plot/util/private/__print_parse_opts__.m
+++ b/scripts/plot/util/private/__print_parse_opts__.m
@@ -258,17 +258,17 @@ function arg_st = __print_parse_opts__ (
   match = strcmpi (dev_list, arg_st.devopt);
   if (any (match))
     default_suffix = suffixes{match};
   else
     default_suffix = arg_st.devopt;
   endif
 
   if (dot == 0 && ! isempty (arg_st.name))
-    arg_st.name = strcat (arg_st.name, ".", default_suffix);
+    arg_st.name = [arg_st.name "." default_suffix];
   endif
 
   if (arg_st.append_to_file)
     if (isempty (arg_st.name))
       arg_st.append_to_file = false;
     elseif (any (strcmpi (arg_st.devopt, {"eps", "eps2", "epsc", "epsc2", ...
                                           "ps", "ps2", "psc", "psc2", "pdf"})))
       have_ghostscript = ! isempty (__ghostscript_binary__ ());
@@ -455,17 +455,17 @@ function cmd = __quote_path__ (cmd)
   if (! isempty (cmd))
     is_quoted = all (cmd([1, end]) == "'");
     if (! is_quoted)
       dos_shell = ! isunix () && ispc ();
       if (dos_shell && any (cmd == "/"))
         cmd = strrep (cmd, "/", "\\");
       endif
       if (any (cmd == " "))
-        cmd = strcat ('"', strrep (cmd, '"', '""') ,'"');
+        cmd = ['"' strrep(cmd, '"', '""') '"'];
       endif
     endif
   endif
 endfunction
 
 function gs = __ghostscript_binary__ ()
 
   persistent ghostscript_binary = ""
@@ -594,17 +594,17 @@ function [papersize, paperposition] = gs
     papersize(papersize=="-") = "";
     papersize = strrep (papersize, "us", "");
     switch (papersize)
       case "a"
         papersize = "letter";
       case {"b", "tabloid"}
         papersize = "11x17";
       case {"c", "d", "e"}
-        papersize = strcat ("arch", papersize);
+        papersize = ["arch" papersize];
     endswitch
     if (strncmp (papersize, "arch", 4))
       papersize(end) = upper (papersize(end));
     endif
   endif
 
 endfunction
 
diff --git a/scripts/plot/util/saveas.m b/scripts/plot/util/saveas.m
--- a/scripts/plot/util/saveas.m
+++ b/scripts/plot/util/saveas.m
@@ -91,18 +91,18 @@ function saveas (h, filename, fmt = "pdf
   if (nargin == 3)
     if (! ischar (filename))
       error ("saveas: EXT must be a string");
     endif
 
     [~, ~, ext] = fileparts (filename);
 
     if (isempty (ext))
-      filename = strcat (filename, ".", fmt);
+      filename = [filename "." fmt];
     endif
   endif
 
-  prt_opt = strcat ("-d", tolower (fmt));
+  prt_opt = ["-d" tolower(fmt)];
 
   print (fig, filename, prt_opt);
 
 endfunction
 
diff --git a/scripts/testfun/private/html_compare_plot_demos.m b/scripts/testfun/private/html_compare_plot_demos.m
--- a/scripts/testfun/private/html_compare_plot_demos.m
+++ b/scripts/testfun/private/html_compare_plot_demos.m
@@ -90,26 +90,26 @@ function html_compare_plot_demos (toolki
              datestr (now (), 0), mfilename, version);
 
     ## Create table header
     fprintf (fid, "<table border='1'><tr>\n");
     for t = 1:numel(toolkits)
       ## set default
       column_header = upper (toolkits{t});
       if (isfield (in, toolkits{t}))
-        column_header = strcat (column_header, in.(toolkits{t}));
+        column_header = [column_header, in.(toolkits{t})];
       endif
       fprintf (fid, '<th>%s <a href="%s/diary.log">diary</a></th>\n', ...
                     column_header, toolkits{t});
     endfor
     fprintf (fid, "</tr>\n");
 
-    for m = 1:numel(in.figfiles)
+    for m = 1:numel (in.figfiles)
       [~, file] = fileparts (in.figfiles{m});
-      fn = strcat (file, ".", in.fmt);
+      fn = [file "." in.fmt];
       fprintf (fid, "<tr>\n");
       for k = toolkits
         ffn = fullfile (k{:}, fn);
         fprintf (fid, "  <td>%s<br>", ffn);
         if (exist (ffn, "file"))
           fprintf (fid, "<img src='%s' style='width: %dpx;'>", ...
                         ffn, in.column_width);
         else
