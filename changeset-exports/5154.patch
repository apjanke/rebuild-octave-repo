# HG changeset patch
# User jwe
# Date 1109021008 0
#      Mon Feb 21 21:23:28 2005 +0000
# Node ID 9cb38bfb04eacfb6aa51d5a04b86c9484efb8d2e
# Parent  ee2af1e830b28e1ccb69bf341032cae95666ffbc
[project @ 2005-02-21 21:23:28 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,15 @@
+2005-02-21  David Bateman  <dbateman@free.fr>
+
+	* statistics/distributions/poisson_rnd.m: fix for lambda of zero.
+	From Mark van Rossum <mvanross@inf.ed.ac.uk>.
+	Fix for row vectors with at least one element of lambda not in
+	(0, Inf).
+
 2005-02-21  John W. Eaton  <jwe@octave.org>
 
 	* statistics/base/qqplot.m: Use feval instead of eval.
 
 	* plot/grid.m, plot/plot_border.m, plot/title.m, plot/top_title.m,
 	plot/__axis_label__.m: Issue replot command.
 
 2005-02-09  John W. Eaton  <jwe@octave.org>
diff --git a/scripts/statistics/distributions/poisson_rnd.m b/scripts/statistics/distributions/poisson_rnd.m
--- a/scripts/statistics/distributions/poisson_rnd.m
+++ b/scripts/statistics/distributions/poisson_rnd.m
@@ -61,17 +61,17 @@ function rnd = poisson_rnd (l, r, c)
   elseif (nargin == 1)
     sz = size (l);
   else
     usage ("poisson_rnd (lambda, r, c)");
   endif
 
   if (isscalar (l))
 
-    if (!(l > 0) | !(l < Inf))
+    if (!(l >= 0) | !(l < Inf))
       rnd = NaN * ones (sz);
     elseif ((l > 0) & (l < Inf))
       num = zeros (sz);
       sum = - log (1 - rand (sz)) ./ l;
       while (1)
 	ind = find (sum < 1);
 	if (any (ind))
           sum(ind) = (sum(ind) - log (1 - rand (size (ind))) / l);
@@ -82,31 +82,31 @@ function rnd = poisson_rnd (l, r, c)
       endwhile
       rnd = num;
     else
       rnd = zeros (sz);
     endif
   else
     rnd = zeros (sz);
 
-    k = find (!(l > 0) | !(l < Inf));
+    k = find (!(l >= 0) | !(l < Inf));
     if (any (k))
       rnd(k) = NaN;
     endif
 
     k = find ((l > 0) & (l < Inf));
     if (any (k))
       l = l(k);
       num = zeros (size (k));
       sum = - log (1 - rand (size (k))) ./ l;
       while (1)
 	ind = find (sum < 1);
 	if (any (ind))
           sum(ind) = (sum(ind)
-                      - log (1 - rand (length (ind), 1)) ./ l(ind));
+                      - log (1 - rand (size (ind))) ./ l(ind));
           num(ind) = num(ind) + 1;
 	else
           break;
 	endif
       endwhile
       rnd(k) = num;
     endif
   endif
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,15 @@
 2005-02-21  John W. Eaton  <jwe@octave.org>
 
+	* ov-builtin.cc (octave_builtin::subsref): If nargout is 0 and we
+	have additional indexing to perform, set it to 1 before calling
+	do_multi_index_op.
+	* ov-usr-fcn.cc (octave_user_function::subsref): Likewise.
+
 	* DLD-FUNCTIONS/gplot.l (send_to_plot_stream):
 	Replot with no previous plot is a no-op.
 	(makeplot): Likewise.
 	(Vautomatic_replot): Don't use this variable in low-level functions.
 
 2005-02-18  John W. Eaton  <jwe@octave.org>
 
 	* Makefile.in (oct-gperf.h): Remove -E from list of gperf options.
diff --git a/src/ov-builtin.cc b/src/ov-builtin.cc
--- a/src/ov-builtin.cc
+++ b/src/ov-builtin.cc
@@ -56,17 +56,21 @@ octave_builtin::subsref (const std::stri
 			 const std::list<octave_value_list>& idx,
 			 int nargout)
 {
   octave_value_list retval;
 
   switch (type[0])
     {
     case '(':
-      retval = do_multi_index_op (nargout, idx.front ());
+      {
+	int tmp_nargout = (type.length () > 0 && nargout == 0) ? 1 : nargout;
+
+	retval = do_multi_index_op (tmp_nargout, idx.front ());
+      }
       break;
 
     case '{':
     case '.':
       {
 	std::string nm = type_name ();
 	error ("%s cannot be indexed with %c", nm.c_str (), type[0]);
       }
diff --git a/src/ov-usr-fcn.cc b/src/ov-usr-fcn.cc
--- a/src/ov-usr-fcn.cc
+++ b/src/ov-usr-fcn.cc
@@ -289,17 +289,21 @@ octave_user_function::subsref (const std
 			       const std::list<octave_value_list>& idx,
 			       int nargout)
 {
   octave_value_list retval;
 
   switch (type[0])
     {
     case '(':
-      retval = do_multi_index_op (nargout, idx.front ());
+      {
+	int tmp_nargout = (type.length () > 0 && nargout == 0) ? 1 : nargout;
+
+	retval = do_multi_index_op (tmp_nargout, idx.front ());
+      }
       break;
 
     case '{':
     case '.':
       {
 	std::string nm = type_name ();
 	error ("%s cannot be indexed with %c", nm.c_str (), type[0]);
       }
