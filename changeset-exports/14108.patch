# HG changeset patch
# User Ben Abbott  <bpabbott@mac.com>
# Date 1324833529 18000
#      Sun Dec 25 12:18:49 2011 -0500
# Branch stable
# Node ID 5be545210fe395113e3bf8a3091bc691ef8e6e60
# Parent  3eee907d79c70fe3d3325630a7e209cb32cf350d
Trisurf() improvements.

* __go_draw_axes__.m: Revert changeset 595ee644fa6f.
  Properly identify RGB cdata [1x3] for patches.
* trisurf.m: Correct bugs in converting between facevertexcdata and cdata.
  This allows caxis auto to function correctly, and properly fixes bug 35144.
  Add demos to explicitly test facecolor = "flat" and "interp".

diff --git a/scripts/plot/private/__go_draw_axes__.m b/scripts/plot/private/__go_draw_axes__.m
--- a/scripts/plot/private/__go_draw_axes__.m
+++ b/scripts/plot/private/__go_draw_axes__.m
@@ -689,35 +689,22 @@ function __go_draw_axes__ (h, plot_strea
                            && (size (obj.cdata, 2) == 1
                                || size (obj.cdata, 2) == 3)))
                      ccol = cdat (i, :);
                    elseif (ndims (obj.cdata) == 3)
                      ccol = permute (cdat (:, i, :), [1, 3, 2]);
                    else
                      ccol = cdat;
                    endif
-                   if (strncmp (obj.facecolor, "interp", 6) && nd == 3
-                       && numel (xcol) == 3 && isempty (ccol))
-                     ## FIXME - Use isonormals to render interpolated
-                     ##         triangular patches.
-                     obj.facecolor = "flat";
-                   endif
                    if (strncmp (obj.facecolor, "flat", 4))
-                     if (numel (ccol) == 3)
+                     if (isequal (size (ccol), [1, 3]))
+                       ## RGB Triplet
                        color = ccol;
                      elseif (nd == 3 && numel (xcol) == 3)
-                       if (isempty (ccol))
-                         z = mean (zcol);
-                         nr = size (cmap, 1);
-                         r = interp1 (linspace (clim(1), clim(2), nr),
-                                      (1:nr), z, "nearest", "extrap");
-                         color = cmap (r, :);
-                       else
-                         ccdat = ccol * ones (3,1);
-                       endif
+                       ccdat = ccol;
                      else
                        if (cdatadirect)
                          r = round (ccol);
                        else
                          r = 1 + round ((size (cmap, 1) - 1)
                                         * (ccol - clim(1))/(clim(2) - clim(1)));
                        endif
                        r = max (1, min (r, size (cmap, 1)));
diff --git a/scripts/plot/private/__patch__.m b/scripts/plot/private/__patch__.m
--- a/scripts/plot/private/__patch__.m
+++ b/scripts/plot/private/__patch__.m
@@ -269,18 +269,20 @@ function args = setdata (args)
 
   if (size(fvc, 1) == nc || size (fvc, 1) == 1)
     c = reshape (fvc, [1, size(fvc)]);
   else
     if (size(fvc, 2) == 3)
       c = cat(3, reshape (fvc(idx, 1), size(idx)),
               reshape (fvc(idx, 2), size(idx)),
               reshape (fvc(idx, 3), size(idx)));
-    else
-      c = [];
+    elseif (isempty (fvc))
+      c = []
+    else ## if (size (fvc, 2) == 1)
+      c = permute (fvc(faces), [2, 1]);
     endif
   endif
   args = {"xdata", x, "ydata", y, "zdata", z, "cdata", c, args{:}};
 endfunction
 
 function args = setvertexdata (args)
   args = delfields (args, {"vertices", "faces", "facevertexcdata"});
   ## Remove the readonly fields as well
@@ -330,20 +332,18 @@ function args = setvertexdata (args)
   else
     vert = [x(:), y(:)];
   endif
   faces = reshape (1:numel(x), nr, nc);
   faces = faces';
 
   if (ndims (c) == 3)
     fvc = reshape (c, size (c, 1) * size (c, 2), size(c, 3));
-  elseif (isvector (c))
+  else
     fvc = c(:);
-  else
-    fvc = c.'(:);
   endif
 
   args = {"faces", faces, "vertices", vert, "facevertexcdata", fvc, args{:}};
 endfunction
 
 function update_data (h, d)
   update_handle (h, false);
 endfunction
diff --git a/scripts/plot/trisurf.m b/scripts/plot/trisurf.m
--- a/scripts/plot/trisurf.m
+++ b/scripts/plot/trisurf.m
@@ -66,16 +66,37 @@ function h = trisurf (tri, x, y, z, vara
     if (! ishold ())
       set (gca(), "view", [-37.5, 30],
            "xgrid", "on", "ygrid", "on", "zgrid", "on");
     endif
   endif
 
 endfunction
 
+%!demo
+%! clf
+%! N = 31;
+%! [x, y] = meshgrid (1:N);
+%! tri = delaunay (x, y);
+%! z = peaks (N);
+%! h = trisurf (tri, x, y, z, "facecolor", "interp");
+%! axis tight
+%! zlim auto
+%! title (sprintf ("facecolor = %s", get (h, "facecolor")))
+
+%!demo
+%! clf
+%! N = 31;
+%! [x, y] = meshgrid (1:N);
+%! tri = delaunay (x, y);
+%! z = peaks (N);
+%! h = trisurf (tri, x, y, z, "facecolor", "flat");
+%! axis tight
+%! zlim auto
+%! title (sprintf ("facecolor = %s", get (h, "facecolor")))
 
 %!demo
 %! clf
 %! old_state = rand ("state");
 %! restore_state = onCleanup (@() rand ("state", old_state));
 %! rand ("state", 10);
 %! N = 10;
 %! x = 3 - 6 * rand (N, N);
