# HG changeset patch
# User Mike Miller <mtmiller@octave.org>
# Date 1465578753 25200
#      Fri Jun 10 10:12:33 2016 -0700
# Node ID e3b5d927dc811ff7671dfe459cb0989c83b0c574
# Parent  4d4e3e1723d1ae81fd0d4b9349f4e7d13803e438
doc: Describe error IDs in Raising Errors subsection

* errors.txi (Raising Errors): Move paragraph about error identifiers here
instead of the Catching Errors subsection.

diff --git a/doc/interpreter/errors.txi b/doc/interpreter/errors.txi
--- a/doc/interpreter/errors.txi
+++ b/doc/interpreter/errors.txi
@@ -68,16 +68,25 @@ function f (arg1)
 endfunction
 @end group
 @end example
 
 When the @code{error} function is called, it prints the given message
 and returns to the Octave prompt.  This means that no code following
 a call to @code{error} will be executed.
 
+It is also possible to assign an identification string to an error.
+If an error has such an ID the user can catch this error
+as will be described in the next section.  To assign an ID to an error,
+simply call @code{error} with two string arguments, where the first
+is the identification string, and the second is the actual error.  Note
+that error IDs are in the format @qcode{"NAMESPACE:ERROR-NAME"}.  The namespace
+@qcode{"Octave"} is used for Octave's own errors.  Any other string is available
+as a namespace for user's own errors.
+
 @DOCSTRING(error)
 
 Since it is common to use errors when there is something wrong with
 the input to a function, Octave supports functions to simplify such code.
 When the @code{print_usage} function is called, it reads the help text
 of the function calling @code{print_usage}, and presents a useful error.
 If the help text is written in Texinfo it is possible to present an
 error message that only contains the function prototypes as described
@@ -189,25 +198,16 @@ catch err
 end_try_catch
 @end group
 @end example
 
 @DOCSTRING(lasterror)
 
 @DOCSTRING(lasterr)
 
-It is also possible to assign an identification string to an error.
-If an error has such an ID the user can catch this error
-as will be shown in the next example.  To assign an ID to an error,
-simply call @code{error} with two string arguments, where the first
-is the identification string, and the second is the actual error.  Note
-that error IDs are in the format @qcode{"NAMESPACE:ERROR-NAME"}.  The namespace
-@qcode{"Octave"} is used for Octave's own errors.  Any other string is available
-as a namespace for user's own errors.
-
 The next example counts indexing errors.  The errors are caught using the
 field identifier of the structure returned by the function @code{lasterror}.
 
 @example
 @group
 number_of_errors = 0;
 for n = 1:100
   try
