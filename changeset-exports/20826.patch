# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1449610497 18000
#      Tue Dec 08 16:34:57 2015 -0500
# Node ID 779898f2a02a51213ef0bef9d9374d61eb09e878
# Parent  66cd994d1b790ea7f42e8bc149d2e248788a3b87
tag error and usage functions with noreturn attribute

* error.h, error.cc (vusage, usage, verror, error, verror_with_cfn,
error_with_cfn, vparse_error, parse_error, vusage_with_id,
usage_with_id, verror_with_id, error_with_id, verror_with_id_cfn,
error_with_id_cfn, vparse_error_with_id, parse_error_with_id):
Tag with GCC_ATTR_NORETURN.

diff --git a/libinterp/corefcn/error.cc b/libinterp/corefcn/error.cc
--- a/libinterp/corefcn/error.cc
+++ b/libinterp/corefcn/error.cc
@@ -392,26 +392,33 @@ message_with_id (const char *name, const
   va_list args;
   va_start (args, fmt);
   vmessage_with_id (name, id, fmt, args);
   va_end (args);
 }
 
 static void
 usage_1 (octave_execution_exception& e, const char *id,
+         const char *fmt, va_list args) GCC_ATTR_NORETURN;
+
+static void
+usage_1 (octave_execution_exception& e, const char *id,
          const char *fmt, va_list args)
 {
   verror (true, std::cerr, "usage", id, fmt, args);
 
   maybe_enter_debugger (e);
 
   throw e;
 }
 
 static void
+usage_1 (const char *id, const char *fmt, va_list args) GCC_ATTR_NORETURN;
+
+static void
 usage_1 (const char *id, const char *fmt, va_list args)
 {
   octave_execution_exception e = make_execution_exception ("usage");
 
   usage_1 (e, id, fmt, args);
 }
 
 void
@@ -442,32 +449,38 @@ usage_with_id (const char *id, const cha
   va_start (args, fmt);
   vusage_with_id (id, fmt, args);
   va_end (args);
 }
 
 static void
 error_1 (octave_execution_exception& e, std::ostream& os,
          const char *name, const char *id, const char *fmt,
-         va_list args, bool with_cfn = false)
+         va_list args, bool with_cfn = false) GCC_ATTR_NORETURN;
+
+static void
+error_1 (octave_execution_exception& e, std::ostream& os,
+         const char *name, const char *id, const char *fmt,
+         va_list args, bool with_cfn)
 {
   bool show_stack_trace = false;
 
   if (fmt)
     {
       if (*fmt)
         {
           size_t len = strlen (fmt);
 
           if (len > 0)
             {
               if (fmt[len - 1] == '\n')
                 {
                   if (len > 1)
                     {
+                      // FIXME: This is a memory leak.
                       char *tmp_fmt = strsave (fmt);
                       tmp_fmt[len - 1] = '\0';
                       verror (true, os, name, id, tmp_fmt, args, with_cfn);
                       delete [] tmp_fmt;
                     }
 
                   // If format ends with newline, suppress stack trace.
                   e.set_stack_trace ();
@@ -489,17 +502,22 @@ error_1 (octave_execution_exception& e, 
 
   maybe_enter_debugger (e, show_stack_trace);
 
   throw e;
 }
 
 static void
 error_1 (std::ostream& os, const char *name, const char *id,
-         const char *fmt, va_list args, bool with_cfn = false)
+         const char *fmt, va_list args,
+         bool with_cfn = false) GCC_ATTR_NORETURN;
+
+static void
+error_1 (std::ostream& os, const char *name, const char *id,
+         const char *fmt, va_list args, bool with_cfn)
 {
   octave_execution_exception e = make_execution_exception ("error");
 
   error_1 (e, os, name, id, fmt, args, with_cfn);
 }
 
 void
 verror (const char *fmt, va_list args)
diff --git a/libinterp/corefcn/error.h b/libinterp/corefcn/error.h
--- a/libinterp/corefcn/error.h
+++ b/libinterp/corefcn/error.h
@@ -38,72 +38,72 @@ extern OCTINTERP_API void reset_error_ha
 
 extern OCTINTERP_API int warning_enabled (const std::string& id);
 
 extern OCTINTERP_API void
 vmessage (const char *name, const char *fmt, va_list args);
 
 extern OCTINTERP_API void message (const char *name, const char *fmt, ...);
 
-extern OCTINTERP_API void vusage (const char *fmt, va_list args);
-extern OCTINTERP_API void usage (const char *fmt, ...);
+extern OCTINTERP_API void vusage (const char *fmt, va_list args) GCC_ATTR_NORETURN;
+extern OCTINTERP_API void usage (const char *fmt, ...) GCC_ATTR_NORETURN;
 
 extern OCTINTERP_API void vwarning (const char *fmt, va_list args);
 extern OCTINTERP_API void warning (const char *fmt, ...);
 
-extern OCTINTERP_API void verror (const char *fmt, va_list args);
-extern OCTINTERP_API void error (const char *fmt, ...);
+extern OCTINTERP_API void verror (const char *fmt, va_list args) GCC_ATTR_NORETURN;
+extern OCTINTERP_API void error (const char *fmt, ...) GCC_ATTR_NORETURN;
 
 extern OCTINTERP_API void verror (octave_execution_exception&,
-                                  const char *fmt, va_list args);
+                                  const char *fmt, va_list args) GCC_ATTR_NORETURN;
 extern OCTINTERP_API void error (octave_execution_exception&,
-                                 const char *fmt, ...);
+                                 const char *fmt, ...) GCC_ATTR_NORETURN;
 
-extern OCTINTERP_API void verror_with_cfn (const char *fmt, va_list args);
-extern OCTINTERP_API void error_with_cfn (const char *fmt, ...);
+extern OCTINTERP_API void verror_with_cfn (const char *fmt, va_list args) GCC_ATTR_NORETURN;
+extern OCTINTERP_API void error_with_cfn (const char *fmt, ...) GCC_ATTR_NORETURN;
 
-extern OCTINTERP_API void vparse_error (const char *fmt, va_list args);
-extern OCTINTERP_API void parse_error (const char *fmt, ...);
+extern OCTINTERP_API void vparse_error (const char *fmt, va_list args) GCC_ATTR_NORETURN;
+extern OCTINTERP_API void parse_error (const char *fmt, ...) GCC_ATTR_NORETURN;
 
 extern OCTINTERP_API void
 vmessage_with_id (const char *id, const char *name,
                   const char *fmt, va_list args);
 
 extern OCTINTERP_API void
 message_with_id (const char *id, const char *name, const char *fmt, ...);
 
 extern OCTINTERP_API void
-vusage_with_id (const char *id, const char *fmt, va_list args);
+vusage_with_id (const char *id, const char *fmt, va_list args) GCC_ATTR_NORETURN;
 
 extern OCTINTERP_API void
-usage_with_id (const char *id, const char *fmt, ...);
+usage_with_id (const char *id, const char *fmt, ...) GCC_ATTR_NORETURN;
 
 extern OCTINTERP_API void
 vwarning_with_id (const char *id, const char *fmt, va_list args);
 
 extern OCTINTERP_API void
 warning_with_id (const char *id, const char *fmt, ...);
 
 extern OCTINTERP_API void
-verror_with_id (const char *id, const char *fmt, va_list args);
+verror_with_id (const char *id, const char *fmt, va_list args) GCC_ATTR_NORETURN;
 
 extern OCTINTERP_API void
-error_with_id (const char *id, const char *fmt, ...);
+error_with_id (const char *id, const char *fmt, ...) GCC_ATTR_NORETURN;
 
 extern OCTINTERP_API void
-verror_with_id_cfn (const char *id, const char *fmt, va_list args);
+verror_with_id_cfn (const char *id, const char *fmt, va_list args) GCC_ATTR_NORETURN;
 
 extern OCTINTERP_API void
-error_with_id_cfn (const char *id, const char *fmt, ...);
+error_with_id_cfn (const char *id, const char *fmt, ...) GCC_ATTR_NORETURN;
 
 extern OCTINTERP_API void
-vparse_error_with_id (const char *id, const char *fmt, va_list args);
+vparse_error_with_id (const char *id, const char *fmt, va_list args) GCC_ATTR_NORETURN;
 
 extern OCTINTERP_API void
-parse_error_with_id (const char *id, const char *fmt, ...);
+parse_error_with_id (const char *id, const char *fmt, ...) GCC_ATTR_NORETURN;
 
 extern OCTINTERP_API void panic (const char *fmt, ...) GCC_ATTR_NORETURN;
 
 // Helper function for print_usage defined in defun.cc.
 extern OCTINTERP_API void defun_usage_message (const std::string& msg);
 
 extern OCTINTERP_API octave_value_list
 set_warning_state (const std::string& id, const std::string& state);
