# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1473168118 14400
#      Tue Sep 06 09:21:58 2016 -0400
# Node ID 455bb5c0e03ce24697625ae1d5e3b97e00fe7de5
# Parent  5a838a892adbd8bdceea63e77bc50d18c95620e4
* null-assign.tst: Update subsasgn test (bug #48867)

diff --git a/test/null-assign.tst b/test/null-assign.tst
--- a/test/null-assign.tst
+++ b/test/null-assign.tst
@@ -50,21 +50,32 @@
 %! a = ones (3); b{1} = []; fail ("a(:,1:3) = b{1}", ".");
 %!test
 %! a = ones (3); b.x = []; fail ("a(:,1:3) = b.x", ".");
 
 ## filtering a null matrix through a function should not delete
 %!test
 %! a = ones (3); fail ("a(:,1:3) = double ([])");
 
-## subsasgn should work the same way
+## for compatibility with Matlab, subsasgn allows any 0x0 double array
+## but not other empty arrays (bug #48867)
+%!test
+%! a = ones (3);
+%! a = subsasgn (a, substruct ('()', {':',1:2}), []);
+%! assert (size (a), [3,1]);
 %!test
-%! a = ones (3); a = subsasgn (a, substruct ('()', {':',1:2}), []); assert (size (a), [3,1]);
+%! a = ones (3); b = zeros (0, 0);
+%! a = subsasgn (a, substruct ('()', {':',1:2}), b);
+%! assert (size (a), [3,1]);
 %!test
-%! a = ones (3); b = []; fail ("subsasgn (a, substruct ('()', {':',1:2}), b)", ".");
+%! a = ones (3); b = zeros (0, 0, 2);
+%! fail ("subsasgn (a, substruct ('()', {':',1:2}), b)", ".");
+%!test
+%! a = ones (3); b = zeros (0, 0, "uint8");
+%! fail ("subsasgn (a, substruct ('()', {':',1:2}), b)", ".");
 
 %!test
 %! classes = {@int8, @int16, @int32, @int64, ...
 %!   @uint8, @uint16, @uint32, @uint64, ...
 %!   @single, @double, @logical};
 %! for i = 1:numel (classes)
 %!   cls = classes{i};
 %!   x = cls ([1, 2, 3]);
