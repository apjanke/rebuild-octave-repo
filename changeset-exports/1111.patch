# HG changeset patch
# User jwe
# Date 792821011 0
#      Wed Feb 15 04:03:31 1995 +0000
# Node ID 2a36b558ab5549228dd5669680eaa69e5d2f3bf3
# Parent  456368d90bc73f1a021c0731b71fb055c04966e2
[project @ 1995-02-15 04:01:38 by jwe]

diff --git a/src/dirfns.cc b/src/dirfns.cc
--- a/src/dirfns.cc
+++ b/src/dirfns.cc
@@ -68,16 +68,17 @@ Free Software Foundation, Inc.
 #include <ndir.h>
 #endif
 #endif
 
 #include "statdefs.h"
 #include "procstream.h"
 #include "tree-const.h"
 #include "oct-obj.h"
+#include "sysdep.h"
 #include "octave.h"
 #include "dirfns.h"
 #include "pager.h"
 #include "error.h"
 #include "utils.h"
 #include "defun.h"
 
 extern "C"
@@ -297,17 +298,17 @@ get_working_directory (const char *for_w
       the_current_working_directory = 0;
     }
 
   if (! the_current_working_directory)
     {
       char *directory;
 
       the_current_working_directory = new char [MAXPATHLEN];
-      directory = getcwd (the_current_working_directory, MAXPATHLEN);
+      directory = octave_getcwd (the_current_working_directory, MAXPATHLEN);
       if (! directory)
 	{
 	  message (for_whom, the_current_working_directory);
 	  delete [] the_current_working_directory;
 	  the_current_working_directory = 0;
 	  return 0;
 	}
     }
@@ -339,31 +340,31 @@ change_to_directory (const char *newdir)
 	if (len_t > 1)
 	  {
 	    --len_t;
 	    if (t[len_t] == '/')
 	      t[len_t] = '\0';
 	  }
       }
 
-      if (chdir (t) < 0)
+      if (octave_chdir (t) < 0)
 	{
 	  delete [] t;
 	  return 0;
 	}
 
       if (the_current_working_directory)
 	strcpy (the_current_working_directory, t);
 
       delete [] t;
       return 1;
     }
   else
     {
-      if (chdir (newdir) < 0)
+      if (octave_chdir (newdir) < 0)
 	return 0;
       else
 	return 1;
     }
 }
 
 DEFUN_TEXT ("cd", Fcd, Scd, 2, 1,
   "cd [dir]\n\
@@ -465,17 +466,17 @@ DEFUN ("pwd", Fpwd, Spwd, 1, 0,
   "pwd (): print current working directory")
 {
   Octave_object retval;
   char *directory;
 
   if (verbatim_pwd)
     {
       char *buffer = new char [MAXPATHLEN];
-      directory = getcwd (buffer, MAXPATHLEN);
+      directory = octave_getcwd (buffer, MAXPATHLEN);
 
       if (!directory)
 	{
 	  warning ("pwd: can't find working directory!");
 	  delete buffer;
 	}
     }
   else
diff --git a/src/sysdep.cc b/src/sysdep.cc
--- a/src/sysdep.cc
+++ b/src/sysdep.cc
@@ -358,16 +358,48 @@ kbhit (void)
 {
   int c;
   raw_mode (1);
   c = cin.get ();
   raw_mode (0);
   return c;
 }
 
+char *
+octave_getcwd (const char *buf, int len)
+{
+#if defined (EMX)
+  return _getcwd2 (buf, len);
+#else
+  return getcwd (buf, len);
+#endif
+}
+
+int
+octave_chdir (const char *path)
+{
+#if defined (EMX)
+  int retval = -1;
+
+  if (strlen (path) == 2 && path[1] == ':')
+    {
+      char *upper_case_dir_name = strupr (path);
+      _chdrive (upper_case_dir_name[0]);
+      if (_getdrive () == upper_case_dir_name[0])
+	retval = _chdir2 ("/");
+    }
+  else
+    retval = _chdir2 (path);
+
+  return retval;
+#else
+  return chdir (path);
+#endif
+}
+
 DEFUN ("clc", Fclc, Sclc, 0, 0,
   "clc (): clear screen")
 {
   Octave_object retval;
 
   rl_beg_of_line ();
   rl_kill_line (1);
 
