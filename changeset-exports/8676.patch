# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1233814769 18000
#      Thu Feb 05 01:19:29 2009 -0500
# Node ID 22462fd58e660c76192e3565e29f87feb788e174
# Parent  43c6012bd4c2046948113c3c56c515c7d24d9172
require HDF5 v1.6 API

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,13 @@
+2009-02-05  John W. Eaton  <jwe@octave.org>
+
+	* aclocal.m4 (OCTAVE_HDF5_HAS_REQUIRED_API): New macro.
+	* configure.in: Use it in HDF5 check.
+
 2009-02-04  Benjamin Lindner  <lindnerben@gmx.net>
 
 	* configure.in: Use separate cases for *-*-mingw* and *-*-cygwin*
 	to set variables related to creating shared libraries.
 
 2009-02-03  Jaroslav Hajek  <highegg@gmail.com>
 
 	* aclocal.m4 (AC_CHECK_QHULL_OK): New macro, based on suggestion by
diff --git a/aclocal.m4 b/aclocal.m4
--- a/aclocal.m4
+++ b/aclocal.m4
@@ -914,16 +914,35 @@ AC_DEFUN([OCTAVE_HDF5_DLL], [
       AC_TRY_LINK([#include <hdf5.h>], [hid_t x = H5T_NATIVE_DOUBLE; return x],
         octave_cv_hdf5_dll=yes,
 	octave_cv_hdf5_dll=no)
       CFLAGS=$CFLAGS_old])])
   if test "$octave_cv_hdf5_dll" = yes; then
     AC_DEFINE(_HDF5USEDLL_, 1, [Define if using HDF5 dll (Win32)])
   fi])
 dnl
+dnl Check whether HDF5 library has version 1.6 API functions.
+dnl
+AC_DEFUN([OCTAVE_HDF5_HAS_REQUIRED_API], [
+  AC_CACHE_CHECK([whether HDF5 library has required API],
+    octave_cv_hdf5_has_required_api, [
+    AC_TRY_LINK([
+#define H5_USE_16_API 1
+#include <hdf5.h>
+], [
+  H5Eset_auto (0, 0);], [
+      octave_cv_hdf5_has_required_api=yes], [
+      octave_cv_hdf5_has_required_api=no])])
+  if test "$octave_cv_hdf5_has_required_api" = "no"; then
+    WITH_HDF5=false
+    warn_hdf5="HDF5 library does not provide the version 1.6 API.  Octave will not be able to save or load HDF5 data files."
+    AC_MSG_WARN($warn_hdf5)
+  fi
+])
+dnl
 dnl Check for the QHull version.
 dnl
 AC_DEFUN(AC_CHECK_QHULL_VERSION,
 [AC_MSG_CHECKING([for qh_qhull in -lqhull with qh_version])
 AC_CACHE_VAL(octave_cv_lib_qhull_version,  [
 cat > conftest.c <<EOF
 #include <stdio.h>
 char *qh_version = "version";
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -542,31 +542,31 @@ if $WITH_ZLIB; then
   HDF5_LIBS=
   WITH_HDF5=false
   if test -n "$hdf5_lib"; then
     AC_CHECK_LIB($hdf5_lib, H5Pcreate, [
       AC_CHECK_HEADERS(hdf5.h, [
         WITH_HDF5=true
         HDF5_LIBS="-l$hdf5_lib"
         LIBS="$HDF5_LIBS $LIBS"
-        AC_DEFINE(HAVE_HDF5, 1, [Define if HDF5 is available.])
 	AC_CHECK_LIB($hdf5_lib, H5Gget_num_objs, [
-	  AC_DEFINE(HAVE_H5GGET_NUM_OBJS, 1, [Define if HDF5 has H5Gget_num_objs.])])])])
+          OCTAVE_HDF5_HAS_REQUIRED_API
+          if test $WITH_HDF5; then
+            AC_DEFINE(HAVE_HDF5, 1, [Define if HDF5 is available.])
+	    AC_DEFINE(HAVE_H5GGET_NUM_OBJS, 1, [Define if HDF5 has H5Gget_num_objs.])
+	  fi])])])
   fi
 
   if $WITH_HDF5; then
     case "$canonical_host_type" in
       *-*-msdosmsvc)
         OCTAVE_HDF5_DLL
         ;;
     esac
     true
-  else
-    warn_hdf5="HDF5 library not found.  Octave will not be able to save or load HDF5 data files."
-    AC_MSG_WARN($warn_hdf5)
   fi
 else
   warn_zlib="ZLIB library not found.  Octave will not be able to save or load compressed data files or HDF5 files."
   AC_MSG_WARN($warn_zlib)
 fi
 
 
 # Checks for FFTW header and library.
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,17 @@
+2009-02-05  John W. Eaton  <jwe@octave.org>
+
+	* oct-hdf5.h: New file.
+	* ls-hdf5.cc, ov-base.h, ov.h: Include oct-hdf5.h instead of hdf5.h.
+	* ls-hdf5.h: Include oct-hdf5.h.
+	* load-save.cc: Include ls-hdf5.h instead of hdf5.h.
+	* ov-base-sparse.cc, load-save.cc:
+	Don't protect #include "ls-hdf5.h" with #ifdef.
+
 2009-02-04  Kai Habel  <kai.habel@gmx.de>
 
 	* gl-render.cc (opengl_renderer::draw (surface::properties)):
 	Normalize surface normals. Correct calculation of diffuse lighting.
 	* gl-render.cc (opengl_renderer::draw (patch::properties)):
 	Correct calculation of diffuse lighting.
 
 2009-02-04  John W. Eaton  <jwe@octave.org>
diff --git a/src/load-save.cc b/src/load-save.cc
--- a/src/load-save.cc
+++ b/src/load-save.cc
@@ -34,20 +34,16 @@ along with Octave; see the file COPYING.
 #include <cctype>
 
 #include <fstream>
 #include <iomanip>
 #include <iostream>
 #include <sstream>
 #include <string>
 
-#ifdef HAVE_HDF5
-#include <hdf5.h>
-#endif
-
 #include "byte-swap.h"
 #include "data-conv.h"
 #include "file-ops.h"
 #include "file-stat.h"
 #include "glob-match.h"
 #include "lo-mappers.h"
 #include "mach-info.h"
 #include "oct-env.h"
@@ -70,19 +66,17 @@ along with Octave; see the file COPYING.
 #include "symtab.h"
 #include "sysdep.h"
 #include "unwind-prot.h"
 #include "utils.h"
 #include "variables.h"
 #include "version.h"
 #include "dMatrix.h"
 
-#ifdef HAVE_HDF5
 #include "ls-hdf5.h"
-#endif
 #include "ls-mat-ascii.h"
 #include "ls-mat4.h"
 #include "ls-mat5.h"
 #include "ls-oct-ascii.h"
 #include "ls-oct-binary.h"
 
 #ifdef HAVE_ZLIB
 #include "zfstream.h"
diff --git a/src/ls-hdf5.cc b/src/ls-hdf5.cc
--- a/src/ls-hdf5.cc
+++ b/src/ls-hdf5.cc
@@ -33,18 +33,16 @@ along with Octave; see the file COPYING.
 #include <cctype>
 
 #include <fstream>
 #include <iomanip>
 #include <iostream>
 #include <string>
 #include <vector>
 
-#include <hdf5.h>
-
 #include "byte-swap.h"
 #include "data-conv.h"
 #include "file-ops.h"
 #include "glob-match.h"
 #include "lo-mappers.h"
 #include "mach-info.h"
 #include "oct-env.h"
 #include "oct-time.h"
diff --git a/src/ls-hdf5.h b/src/ls-hdf5.h
--- a/src/ls-hdf5.h
+++ b/src/ls-hdf5.h
@@ -20,16 +20,18 @@ along with Octave; see the file COPYING.
 
 */
 
 #if !defined (octave_ls_hdf5_h)
 #define octave_ls_hdf5_h 1
 
 #if defined (HAVE_HDF5)
 
+#include "oct-hdf5.h"
+
 // first, we need to define our own dummy stream subclass, since
 // HDF5 needs to do its own file i/o
 
 // hdf5_fstreambase is used for both input and output streams, modeled
 // on the fstreambase class in <fstream.h>
 
 class hdf5_fstreambase : virtual public std::ios
 {
diff --git a/src/oct-hdf5.h b/src/oct-hdf5.h
new file mode 100644
--- /dev/null
+++ b/src/oct-hdf5.h
@@ -0,0 +1,42 @@
+/*
+
+Copyright (C) 2009 John W. Eaton
+
+This file is part of Octave.
+
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
+
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
+
+You should have received a copy of the GNU General Public License
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
+
+*/
+
+#if !defined (octave__hdf5_h)
+#define octave_hdf5_h 1
+
+#if defined (HAVE_HDF5)
+
+#if !defined (H5_USE_16_API)
+#define H5_USE_16_API 1
+#endif
+
+#include <hdf5.h>
+
+#endif
+
+#endif
+
+/*
+;;; Local Variables: ***
+;;; mode: C++ ***
+;;; End: ***
+*/
diff --git a/src/ov-base-sparse.cc b/src/ov-base-sparse.cc
--- a/src/ov-base-sparse.cc
+++ b/src/ov-base-sparse.cc
@@ -31,19 +31,17 @@ along with Octave; see the file COPYING.
 #include "oct-obj.h"
 #include "ov-base.h"
 #include "quit.h"
 #include "pr-output.h"
 
 #include "byte-swap.h"
 #include "ls-oct-ascii.h"
 #include "ls-utils.h"
-#if defined (HAVE_HDF5)
 #include "ls-hdf5.h"
-#endif
 
 #include "boolSparse.h"
 #include "ov-base-sparse.h"
 #include "pager.h"
 
 template <class T>
 octave_value
 octave_base_sparse<T>::do_index_op (const octave_value_list& idx, 
diff --git a/src/ov-base.h b/src/ov-base.h
--- a/src/ov-base.h
+++ b/src/ov-base.h
@@ -25,27 +25,24 @@ along with Octave; see the file COPYING.
 #define octave_base_value_h 1
 
 #include <cstdlib>
 
 #include <iostream>
 #include <list>
 #include <string>
 
-#if defined (HAVE_HDF5)
-#include <hdf5.h>
-#endif
-
 #include "Range.h"
 #include "data-conv.h"
 #include "mxarray.h"
 #include "mx-base.h"
 #include "str-vec.h"
 
 #include "error.h"
+#include "oct-hdf5.h"
 
 class Cell;
 class Octave_map;
 class octave_value;
 class octave_value_list;
 class octave_stream;
 class octave_function;
 class octave_user_function;
diff --git a/src/ov.h b/src/ov.h
--- a/src/ov.h
+++ b/src/ov.h
@@ -25,30 +25,27 @@ along with Octave; see the file COPYING.
 #define octave_value_h 1
 
 #include <cstdlib>
 
 #include <iostream>
 #include <string>
 #include <list>
 
-#if defined (HAVE_HDF5)
-#include <hdf5.h>
-#endif
-
 #include "Range.h"
 #include "data-conv.h"
 #include "idx-vector.h"
 #include "mach-info.h"
 #include "mxarray.h"
 #include "mx-base.h"
 #include "oct-alloc.h"
 #include "oct-time.h"
 #include "str-vec.h"
 
+#include "oct-hdf5.h"
 #include "oct-sort.h"
 
 class Cell;
 class Octave_map;
 class octave_stream;
 class octave_function;
 class octave_user_function;
 class octave_fcn_handle;
