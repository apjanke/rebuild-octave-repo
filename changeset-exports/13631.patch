# HG changeset patch
# User Jacob Dawid <jacob.dawid@googlemail.com>
# Date 1313708660 -7200
#      Fri Aug 19 01:04:20 2011 +0200
# Node ID 9ad313bcee2d070631cbc7f6661e971239c728c9
# Parent  36377bdd91f70cc5a80128af9f8e9a63e9443837
Possible fixed Andriys bug with russian symbols.

diff --git a/gui/src/FileEditorMdiSubWindow.cpp b/gui/src/FileEditorMdiSubWindow.cpp
--- a/gui/src/FileEditorMdiSubWindow.cpp
+++ b/gui/src/FileEditorMdiSubWindow.cpp
@@ -368,16 +368,17 @@ FileEditorMdiSubWindow::construct ()
   m_editor->setCaretLineBackgroundColor(QColor(255,255,200));
   m_editor->setBraceMatching (QsciScintilla::SloppyBraceMatch);
   m_editor->setAutoIndent (true);
   m_editor->setIndentationWidth (2);
   m_editor->setIndentationsUseTabs (false);
   m_editor->autoCompleteFromAll();
   m_editor->setAutoCompletionSource(QsciScintilla::AcsAPIs);
   m_editor->setAutoCompletionThreshold (3);
+  m_editor->setUtf8 (true);
 
   // The Actions
 
   // Theme icons with QStyle icons as fallback
   QAction *closeAction = new QAction (
         QIcon::fromTheme("window-close",style->standardIcon (QStyle::SP_DialogCloseButton)),
         tr("&Close File"), m_toolBar);
   QAction *newAction = new QAction (
diff --git a/gui/src/OctaveTerminal.cpp b/gui/src/OctaveTerminal.cpp
--- a/gui/src/OctaveTerminal.cpp
+++ b/gui/src/OctaveTerminal.cpp
@@ -50,16 +50,17 @@ OctaveTerminal::openTerminal ()
   m_session->setTitle (Session::NameRole, "QTerminalWidget");
   m_session->setProgram ("/bin/bash");
   m_session->setArguments (QStringList ());
   m_session->setAutoClose (true);
   m_session->setFlowControlEnabled (true);
   m_session->setDarkBackground (true);
 
   connect (m_session, SIGNAL(receivedData(QByteArray)), this, SLOT(handleReceivedData(QByteArray)));
+
   int fdm, fds;
   if (openpty (&fdm, &fds, 0, 0, 0) < 0)
     {
       assert (0);
     }
   dup2 (fds, 0);
   dup2 (fds, 1);
   dup2 (fds, 2);
@@ -80,17 +81,17 @@ OctaveTerminal::keyPressEvent (QKeyEvent
         if (verticalScrollBar ())
           verticalScrollBar ()->setValue (verticalScrollBar ()->value () + 10);
         break;
     }
 
   //QByteArray textToSend;
 
   //textToSend += QString::fromUtf8());
-  m_session->sendText(keyEvent->text ());
+  m_session->sendText (keyEvent->text ());
 
   /*
   bool emitKeyPressSignal = true;
 
   if (event->modifiers () == Qt::ControlModifier)
     {
       switch (event->key ())
     {
