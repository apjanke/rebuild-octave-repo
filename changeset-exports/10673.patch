# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1275388141 -7200
#      Tue Jun 01 12:29:01 2010 +0200
# Node ID b17a966099edd2355fb63e3d9cad576dfaccbedb
# Parent  1cd7c39a96eec432eeab9a8054a791204542b6e0
remove deprecated Array method

diff --git a/liboctave/Array.cc b/liboctave/Array.cc
--- a/liboctave/Array.cc
+++ b/liboctave/Array.cc
@@ -1665,45 +1665,16 @@ template <class T>
 T *
 Array<T>::fortran_vec (void)
 {
   make_unique ();
 
   return slice_data;
 }
 
-template <class T>
-void
-Array<T>::maybe_delete_dims (void)
-{
-  int nd = dimensions.length ();
-
-  dim_vector new_dims (1, 1);
-
-  bool delete_dims = true;
-
-  for (int i = nd - 1; i >= 0; i--)
-    {
-      if (delete_dims)
-        {
-          if (dimensions(i) != 1)
-            {
-              delete_dims = false;
-
-              new_dims = dim_vector (i + 1, dimensions(i));
-            }
-        }
-      else
-        new_dims(i) = dimensions(i);
-    }
-
-  if (nd != new_dims.length ())
-    dimensions = new_dims;
-}
-
 // Non-real types don't have NaNs.
 template <class T>
 inline bool
 sort_isnan (typename ref_param<T>::type)
 {
   return false;
 }
 
diff --git a/liboctave/Array.h b/liboctave/Array.h
--- a/liboctave/Array.h
+++ b/liboctave/Array.h
@@ -454,18 +454,16 @@ public:
   const T *fortran_vec (void) const { return data (); }
 
   T *fortran_vec (void);
 
   bool is_shared (void) { return rep->count > 1; }
 
   int ndims (void) const { return dimensions.length (); }
 
-  void maybe_delete_dims (void);
-
   // Indexing without resizing.
 
   Array<T> index (const idx_vector& i) const;
 
   Array<T> index (const idx_vector& i, const idx_vector& j) const;
 
   Array<T> index (const Array<idx_vector>& ia) const;
 
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,14 @@
+2010-06-01  Jaroslav Hajek  <highegg@gmail.com>
+
+	* Array.cc (Array<T>::maybe_delete_dims): Remove method (makes no
+	longer sense).
+	* Array.h: Update decls.
+
 2010-05-20  Jaroslav Hajek  <highegg@gmail.com>
 
 	* dim-vector.h (dim_vector::compute_index (const octave_idx_type *,
 	int)): New method overload.
 	(dim_vector::compute_index, dim_vector::cum_compute_index,
 	dim_vector::increment_index): Add missing const qualifiers.
 
 	* Array-util.cc (compute_index (..., const dim_vector&)): Rewrite,
