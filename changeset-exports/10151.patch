# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1264016893 18000
#      Wed Jan 20 14:48:13 2010 -0500
# Node ID c2f1cdb59821b6a7e71b6a89c992d20dd316bcb0
# Parent  3778ea95adea2b2921f43fe10b7bd8b00fd82f22
datetick: make form argument optional

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2010-01-20  John W. Eaton  <jwe@octave.org>
+
+	* time/datetick.m: Make form arg optional.
+	From Philip Nienhuis <pr.nienhuis@hccnet.nl>.
+
 2010-01-20  David Bateman  <dbateman@free.fr>
 
 	* plot/__go_draw_axes__.m: Correct an error in drawing of patch
 	objects where unrequested markers were drawn.
 
 
 	* plot/__go_draw_figure__.m: Also plot white foreground and
 	background colors.
diff --git a/scripts/time/datetick.m b/scripts/time/datetick.m
--- a/scripts/time/datetick.m
+++ b/scripts/time/datetick.m
@@ -12,17 +12,18 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {} datetick (@var{form})
+## @deftypefn {Function File} {} datetick ()
+## @deftypefnx {Function File} {} datetick (@var{form})
 ## @deftypefnx {Function File} {} datetick (@var{axis}, @var{form})
 ## @deftypefnx {Function File} {} datetick (@dots{}, "keeplimits")
 ## @deftypefnx {Function File} {} datetick (@dots{}, "keepticks")
 ## @deftypefnx {Function File} {} datetick (@dots{ax}, @dots{})
 ## Adds date formatted tick labels to an axis.  The axis the apply the
 ## ticks to is determined by @var{axis} that can take the values "x",
 ## "y" or "z".  The default value is "x".  The formatting of the labels is
 ## determined by the variable @var{form}, that can either be a string in
@@ -30,27 +31,24 @@
 ## be accepted by @code{datestr}.
 ## @seealso{datenum, datestr}
 ## @end deftypefn
 
 function datetick (varargin)
 
   [h, varargin, nargin] = __plt_get_axis_arg__ ("datetick", varargin{:});
 
-  if (nargin < 1)
-    print_usage ();
-  else
-    oldh = gca ();
-    unwind_protect
-      axes (h);
-      __datetick__ (varargin{:});
-    unwind_protect_cleanup
-      axes (oldh);
-    end_unwind_protect
-  endif
+  oldh = gca ();
+  unwind_protect
+    axes (h);
+    __datetick__ (varargin{:});
+  unwind_protect_cleanup
+    axes (oldh);
+  end_unwind_protect
+
 endfunction
 
 %!demo
 %! yr = 1900:10:2000;
 %! pop = [76.094, 92.407, 106.461, 123.077 131.954, 151.868, 179.979, ...
 %!        203.984, 227.225, 249.623, 282.224];
 %! plot (datenum (yr, 1, 1), pop);
 %! title ("US population (millions)");
@@ -99,22 +97,24 @@ function __datetick__ (varargin)
 
   ## Don't publish the existence of this variable for use with dateaxis
   if (length (varargin) > 0)
     startdate = varargin{1};
   else
     startdate = [];
   endif
 
-  if (isnumeric (form))
-    if (! isscalar (form) || floor (form) != form || form < 0)
-      error ("datetick: expecting form argument to be a positive integer");
+  if (! isempty (form))
+    if (isnumeric (form))
+      if (! isscalar (form) || floor (form) != form || form < 0)
+        error ("datetick: expecting form argument to be a positive integer");
+      endif
+    elseif (! ischar (form))
+      error ("datetick: expecting valid date format string");
     endif
-  elseif (! ischar (form) && !isempty (form))
-    error ("datetick: expecting valid date format string");
   endif
 
   if (keeptick)
     ticks = get (gca (), strcat (ax, "tick"))
   else
     ## Need to do our own axis tick position calculation as
     ## year, etc, don't fallback on nice datenum values.
     objs = findall (gca());
@@ -187,16 +187,18 @@ function __datetick__ (varargin)
       form = 13;
     elseif r < 2
       ## hours
       form = 15;
     elseif r < 15
       ## days
       form = 8;
     elseif r < 365
+      ## FIXME -- FORM should be 19 for European users who use dd/mm
+      ## instead of mm/dd.  How can that be determined automatically?
       ## months
       form = 6;
     elseif r < 90*12
       ## quarters
       form = 27;
     else
       ## years
       form = 10;
