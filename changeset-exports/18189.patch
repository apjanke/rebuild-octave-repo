# HG changeset patch
# User Rik <rik@octave.org>
# Date 1388628650 28800
#      Wed Jan 01 18:10:50 2014 -0800
# Node ID f24d5bd050d9bbf774b8fbc2ee9722b59d2f5fc5
# Parent  f09abe022c960cd9e088173925e1ce87f9e6dbc6
cell2mat.m: Change error message when input is not a cell array.

* cell2mat.m: Change error message when input is not a cell array.

diff --git a/scripts/general/cell2mat.m b/scripts/general/cell2mat.m
--- a/scripts/general/cell2mat.m
+++ b/scripts/general/cell2mat.m
@@ -33,17 +33,17 @@ function m = cell2mat (c)
   endif
 
   nb = numel (c);
 
   if (nb == 0)
     m = [];
   else
     if (! iscell (c))
-      error ("cell2mat: C is not a cell array");
+      error ("cell2mat: C must be a cell array");
     endif
 
     ## Check first for valid matrix types
     valid = cellfun ("isnumeric", c);
     valid = cellfun ("islogical", c(! valid));
     valid = cellfun ("isclass", c(! valid), "char");
     if (! all (valid(:)))
       valid = cellfun ("isclass", c, "cell");
@@ -110,13 +110,13 @@ endfunction
 %! c = mat2cell (m, [1 2 1], [1 2 2], [3 1 1 1], [4 1 2], [3 1 4]);
 %! assert (cell2mat (c), m);
 %!test
 %! m = {1, 2, 3};
 %! assert (cell2mat (mat2cell (m, 1, [1 1 1])), m);
 
 %!error cell2mat ()
 %!error cell2mat (1,2)
-%!error <C is not a cell array> cell2mat ([1,2])
+%!error <C must be a cell array> cell2mat ([1,2])
 %!error <mixed cells, structs, and matrices> cell2mat ({[1], struct()})
 %!error <mixed cells, structs, and matrices> cell2mat ({[1], {1}})
 %!error <mixed cells, structs, and matrices> cell2mat ({struct(), {1}})
 
