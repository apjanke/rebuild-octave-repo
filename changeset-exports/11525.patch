# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1295004006 18000
#      Fri Jan 14 06:20:06 2011 -0500
# Node ID ab231f944252e12883ddb72e078b84112d626ce8
# Parent  bd6e37860be57134ed556ecbcf885395ad2fbed2
avoid exposing gnulib:: in header files

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+2011-01-14  John W. Eaton  <jwe@octave.org>
+
+	* lo-mappers.cc (xfloor): Move function body here from
+	lo-mappers.h to avoid exposing gnulib:: in a header file.
+
 2011-01-14  John W. Eaton  <jwe@octave.org>
 
 	* file-stat.cc (mode_as_string): Call strmode instead of mode_string.
 
 	* filemode.h, filemode.c: Delete.
 	* Makefile.am (INCS): Remove filemode.h from the list.
 	(LIBOCTAVE_C_SOURCES): Remove filemode.c from the list.
 
diff --git a/liboctave/lo-mappers.cc b/liboctave/lo-mappers.cc
--- a/liboctave/lo-mappers.cc
+++ b/liboctave/lo-mappers.cc
@@ -43,16 +43,21 @@ along with Octave; see the file COPYING.
 // lo-mappers.h.
 
 double
 xtrunc (double x)
 {
   return gnulib::trunc (x);
 }
 
+double xfloor (double x)
+{
+  return gnulib::floor (x);
+}
+
 double
 xround (double x)
 {
   return gnulib::round (x);
 }
 
 double 
 xroundb (double x)
diff --git a/liboctave/lo-mappers.h b/liboctave/lo-mappers.h
--- a/liboctave/lo-mappers.h
+++ b/liboctave/lo-mappers.h
@@ -28,17 +28,17 @@ along with Octave; see the file COPYING.
 
 #include "oct-cmplx.h"
 #include "lo-math.h"
 
 // Double Precision 
 extern OCTAVE_API double xtrunc (double x);
 inline double xcopysign (double x, double y) { return copysign (x, y); }
 inline double xceil (double x) { return ceil (x); }
-inline double xfloor (double x) { return gnulib::floor (x); }
+extern OCTAVE_API double xfloor (double x);
 inline double arg (double x) { return atan2 (0.0, x); }
 inline double conj (double x) { return x; }
 inline double fix (double x) { return xtrunc (x); }
 inline double imag (double) { return 0.0; }
 inline double real (double x) { return x; }
 extern OCTAVE_API double xround (double x);
 extern OCTAVE_API double xroundb (double x);
 extern OCTAVE_API double signum (double x);
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2011-01-14  John W. Eaton  <jwe@octave.org>
+
+	* sighandlers.cc (BADSIG, BLOCK_SIGNAL, SIGCHLD, BLOCK_CHILD,
+	UNBLOCK_CHILD): Move macro definitions here from sighandlers.h.
+
 2011-01-14  John W. Eaton  <jwe@octave.org>
 
 	* Update copyright notices for 2011.
 
 2011-01-13  John W. Eaton  <jwe@octave.org>
 
 	* file-io.cc (mkstemp): Delete.
 	Delete decl for mkstemps.
diff --git a/src/sighandlers.cc b/src/sighandlers.cc
--- a/src/sighandlers.cc
+++ b/src/sighandlers.cc
@@ -68,16 +68,38 @@ static bool Vdebug_on_interrupt = false;
 static bool Vsighup_dumps_octave_core = true;
 
 // Similar to Vsighup_dumps_octave_core, but for SIGTERM signal.
 static bool Vsigterm_dumps_octave_core = true;
 
 // List of signals we have caught since last call to octave_signal_handler.
 static bool octave_signals_caught[NSIG];
 
+// Signal handler return type.
+#ifndef BADSIG
+#define BADSIG (void (*)(int))-1
+#endif
+
+#define BLOCK_SIGNAL(sig, nvar, ovar) \
+  do \
+    { \
+      gnulib::sigemptyset (&nvar); \
+      gnulib::sigaddset (&nvar, sig); \
+      gnulib::sigemptyset (&ovar); \
+      gnulib::sigprocmask (SIG_BLOCK, &nvar, &ovar); \
+    } \
+  while (0)
+
+#if !defined (SIGCHLD) && defined (SIGCLD)
+#define SIGCHLD SIGCLD
+#endif
+
+#define BLOCK_CHILD(nvar, ovar) BLOCK_SIGNAL (SIGCHLD, nvar, ovar)
+#define UNBLOCK_CHILD(ovar) gnulib::sigprocmask (SIG_SETMASK, &ovar, 0)
+
 // Called from octave_quit () to actually do something about the signals
 // we have caught.
 
 void
 octave_signal_handler (void)
 {
   // The list of signals is relatively short, so we will just go
   // linearly through the list.
diff --git a/src/sighandlers.h b/src/sighandlers.h
--- a/src/sighandlers.h
+++ b/src/sighandlers.h
@@ -38,38 +38,16 @@ Free Software Foundation, Inc.
 
 #include <signal.h>
 
 #include "syswait.h"
 #include "siglist.h"
 
 #include "base-list.h"
 
-// Signal handler return type.
-#ifndef BADSIG
-#define BADSIG (void (*)(int))-1
-#endif
-
-#define BLOCK_SIGNAL(sig, nvar, ovar) \
-  do \
-    { \
-      gnulib::sigemptyset (&nvar); \
-      gnulib::sigaddset (&nvar, sig); \
-      gnulib::sigemptyset (&ovar); \
-      gnulib::sigprocmask (SIG_BLOCK, &nvar, &ovar); \
-    } \
-  while (0)
-
-#if !defined (SIGCHLD) && defined (SIGCLD)
-#define SIGCHLD SIGCLD
-#endif
-
-#define BLOCK_CHILD(nvar, ovar) BLOCK_SIGNAL (SIGCHLD, nvar, ovar)
-#define UNBLOCK_CHILD(ovar) gnulib::sigprocmask (SIG_SETMASK, &ovar, 0)
-
 typedef void sig_handler (int);
 
 // FIXME -- the data should probably be private...
 
 struct
 octave_interrupt_handler
 {
 #ifdef SIGINT
