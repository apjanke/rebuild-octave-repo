# HG changeset patch
# User jwe
# Date 1192035815 0
#      Wed Oct 10 17:03:35 2007 +0000
# Node ID 9325d3f604a32ba4922749d5a1cb2657104cadc1
# Parent  cc049a392a97ae15bce619e20b45b73a05eb938c
[project @ 2007-10-10 17:03:34 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2007-10-10  Kim Hansen  <kimhanse@gmail.com>
+
+        * data.cc (Fsqueeze): Document 2d behaviour.
+        * ov-range.h (octave_range::squeeze): New function.
+
 2007-10-09  John W. Eaton  <jwe@octave.org>
 
 	* DLD-FUNCTIONS/urlwrite.cc (urlget_cleanup): New function.
 	(urlget): Protect call to curl_easy_perform with
 	BEGIN_INTERRUPT_IMMEDIATELY_IN_FOREIGN_CODE and
 	END_INTERRUPT_IMMEDIATELY_IN_FOREIGN_CODE.
 
 2007-10-09  David Bateman  <dbateman@free.fr>
diff --git a/src/data.cc b/src/data.cc
--- a/src/data.cc
+++ b/src/data.cc
@@ -2574,16 +2574,18 @@ by an empty argument.\n\
 
   return retval;
 }
 
 DEFUN (squeeze, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} squeeze (@var{x})\n\
 Remove singleton dimensions from @var{x} and return the result.\n\
+Note that for compatibility with @sc{Matlab}, all objects have\n\
+a minimum of two dimensions.\n\
 @end deftypefn")
 {
   octave_value retval;
 
   if (args.length () == 1)
     retval = args(0).squeeze ();
   else
     print_usage ();    
diff --git a/src/ov-range.h b/src/ov-range.h
--- a/src/ov-range.h
+++ b/src/ov-range.h
@@ -115,16 +115,18 @@ public:
   size_t byte_size (void) const { return 3 * sizeof (double); }
 
   octave_value reshape (const dim_vector& new_dims) const
     { return NDArray (array_value().reshape (new_dims)); }
 
   octave_value permute (const Array<int>& vec, bool inv = false) const
     { return NDArray (array_value().permute (vec, inv)); }
 
+  octave_value squeeze (void) const { return range; }
+
   bool is_defined (void) const { return true; }
 
   bool is_constant (void) const { return true; }
 
   bool is_range (void) const { return true; }
 
   octave_value all (int dim = 0) const;
 
