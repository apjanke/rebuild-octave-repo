# HG changeset patch
# User jwe
# Date 1106844995 0
#      Thu Jan 27 16:56:35 2005 +0000
# Node ID 2d03212b76b4de13c51537e617024869fd48f103
# Parent  500f3031866df4ee4091fb8a89c4405e40daa7d1
[project @ 2005-01-27 16:56:26 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2005-01-27  David Bateman  <dbateman@free.fr>
+
+	* ov-mapper.cc (octave_mapper::apply): Only work on real arguments
+	if c_c_map_fcn or d_d_map_fcn or d_b_map_fcn is defined.xo
+
 2005-01-26  Joel Andersson  <snprintf@gmail.com>
 
 	* help.cc (keywords): Document endswitch.
 
 2005-01-21  John W. Eaton  <jwe@octave.org>
 
 	* DLD-FUNCTIONS/filter.cc (filter): Avoid slow Marray indexing ops.
 
diff --git a/src/ov-mapper.cc b/src/ov-mapper.cc
--- a/src/ov-mapper.cc
+++ b/src/ov-mapper.cc
@@ -107,17 +107,19 @@ any_element_greater_than (const NDArray&
 octave_value
 octave_mapper::apply (const octave_value& arg) const
 {
   octave_value retval;
 
   // XXX FIXME XXX -- is_real_type can return true.  Should it really
   // work that way?
 
-  if (arg.is_real_type () && ! (arg.is_string () && ch_map_fcn))
+  if (arg.is_real_type ()
+      && (c_c_map_fcn || d_d_map_fcn || d_b_map_fcn)
+      && ! (arg.is_string () && ch_map_fcn))
     {
       if (arg.is_scalar_type ())
 	{
 	  double d = arg.double_value ();
 
 	  if (can_ret_cmplx_for_real && (d < lower_limit || d > upper_limit))
 	    {
 	      if (c_c_map_fcn)
