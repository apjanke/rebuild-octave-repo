# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1497997575 14400
#      Tue Jun 20 18:26:15 2017 -0400
# Node ID bd77ab816e439a1144a5b78f99fb3efae91bf338
# Parent  21b2816820cfedbf8e845edadcfc27ac8dc9e2e0
eliminate obsolete file lo-math.h

* lo-math.h: Delete.
* liboctave/util/module.mk: Update.
* configure.ac: Delete check for obsolete file sunmath.h.
* mk-opts.pl: Emit #include <cmath>, not #include "lo-math.h".

Change all uses to include <cmath> instead of "lo-math.h".

diff --git a/build-aux/mk-opts.pl b/build-aux/mk-opts.pl
--- a/build-aux/mk-opts.pl
+++ b/build-aux/mk-opts.pl
@@ -369,19 +369,20 @@ sub emit_opt_class_header
 
   print <<"_END_EMIT_OPT_CLASS_HEADER_";
 // DO NOT EDIT!
 // Generated automatically from $DEFN_FILE.
 
 #if ! defined (octave_${CLASS_NAME}_h)
 #define octave_${CLASS_NAME}_h 1
 
+#include <cmath>
+
 #include <limits>
 
-#include "lo-math.h"
 $INCLUDE
 
 class
 $CLASS_NAME
 {
 public:
 
   $CLASS_NAME (void)
diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -2275,17 +2275,17 @@ OCTAVE_CHECK_LIB_TERMLIB
 AC_HEADER_DIRENT
 AC_HEADER_SYS_WAIT
 
 ## C headers
 
 dnl Use multiple AC_CHECKs to avoid line continuations '\' in list
 AC_CHECK_HEADERS([curses.h direct.h dlfcn.h floatingpoint.h fpu_control.h])
 AC_CHECK_HEADERS([grp.h ieeefp.h inttypes.h locale.h memory.h ncurses.h])
-AC_CHECK_HEADERS([poll.h pthread.h pwd.h sunmath.h sys/ioctl.h])
+AC_CHECK_HEADERS([poll.h pthread.h pwd.h sys/ioctl.h])
 AC_CHECK_HEADERS([sys/param.h sys/poll.h sys/resource.h])
 AC_CHECK_HEADERS([sys/select.h sys/stropts.h termcap.h])
 
 ## Find a termio header to include.
 
 AC_CHECK_HEADERS([termios.h], have_termios_h=yes, have_termios_h=no)
 AC_CHECK_HEADERS([termio.h], have_termio_h=yes, have_termio_h=no)
 AC_CHECK_HEADERS([sgtty.h], have_sgtty_h=yes, have_sgtty_h=no)
diff --git a/libinterp/corefcn/__dsearchn__.cc b/libinterp/corefcn/__dsearchn__.cc
--- a/libinterp/corefcn/__dsearchn__.cc
+++ b/libinterp/corefcn/__dsearchn__.cc
@@ -19,22 +19,22 @@ along with Octave; see the file COPYING.
 <http://www.gnu.org/licenses/>.
 
 */
 
 #if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
+#include <cmath>
+
 #include <iostream>
 #include <fstream>
 #include <string>
 
-#include "lo-math.h"
-
 #include "defun.h"
 #include "error.h"
 #include "ovl.h"
 
 DEFUN (__dsearchn__, args, ,
        doc: /* -*- texinfo -*-
 @deftypefn {} {[@var{idx}, @var{d}] =} dsearch (@var{x}, @var{xi})
 Undocumented internal function.
diff --git a/libinterp/corefcn/data.cc b/libinterp/corefcn/data.cc
--- a/libinterp/corefcn/data.cc
+++ b/libinterp/corefcn/data.cc
@@ -32,17 +32,16 @@ along with Octave; see the file COPYING.
 #include <cstdint>
 #include <ctime>
 
 #include <algorithm>
 #include <limits>
 #include <string>
 
 #include "lo-ieee.h"
-#include "lo-math.h"
 #include "mx-base.h"
 #include "oct-base64.h"
 #include "oct-binmap.h"
 #include "oct-time.h"
 #include "quit.h"
 
 #include "Cell.h"
 #include "data.h"
diff --git a/libinterp/corefcn/max.cc b/libinterp/corefcn/max.cc
--- a/libinterp/corefcn/max.cc
+++ b/libinterp/corefcn/max.cc
@@ -20,19 +20,20 @@ along with Octave; see the file COPYING.
 <http://www.gnu.org/licenses/>.
 
 */
 
 #if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
+#include <cmath>
+
 #include "lo-ieee.h"
 #include "lo-mappers.h"
-#include "lo-math.h"
 #include "dNDArray.h"
 #include "CNDArray.h"
 #include "quit.h"
 
 #include "defun.h"
 #include "error.h"
 #include "errwarn.h"
 #include "ovl.h"
diff --git a/libinterp/corefcn/pr-output.cc b/libinterp/corefcn/pr-output.cc
--- a/libinterp/corefcn/pr-output.cc
+++ b/libinterp/corefcn/pr-output.cc
@@ -19,30 +19,31 @@ along with Octave; see the file COPYING.
 <http://www.gnu.org/licenses/>.
 
 */
 
 #if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
+#include <cmath>
+
 #include <iomanip>
 #include <iostream>
 #include <limits>
 #include <list>
 #include <sstream>
 #include <string>
 
 #include "Array-util.h"
 #include "CMatrix.h"
 #include "Range.h"
 #include "cmd-edit.h"
 #include "dMatrix.h"
 #include "lo-mappers.h"
-#include "lo-math.h"
 #include "mach-info.h"
 #include "oct-cmplx.h"
 #include "quit.h"
 
 #include "Cell.h"
 #include "defun.h"
 #include "error.h"
 #include "errwarn.h"
diff --git a/libinterp/corefcn/qz.cc b/libinterp/corefcn/qz.cc
--- a/libinterp/corefcn/qz.cc
+++ b/libinterp/corefcn/qz.cc
@@ -39,17 +39,16 @@ along with Octave; see the file COPYING.
 #  include <iostream>
 #  if defined (DEBUG_EIG)
 #    include <iomanip>
 #  endif
 #endif
 
 #include "f77-fcn.h"
 #include "lo-lapack-proto.h"
-#include "lo-math.h"
 #include "qr.h"
 #include "quit.h"
 
 #include "defun.h"
 #include "error.h"
 #include "errwarn.h"
 #include "ovl.h"
 #if defined (DEBUG) || defined (DEBUG_SORT)
diff --git a/libinterp/corefcn/sysdep.cc b/libinterp/corefcn/sysdep.cc
--- a/libinterp/corefcn/sysdep.cc
+++ b/libinterp/corefcn/sysdep.cc
@@ -19,18 +19,18 @@ along with Octave; see the file COPYING.
 <http://www.gnu.org/licenses/>.
 
 */
 
 #if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
+#include <cmath>
 #include <cstddef>
-//#include <cstdlib>
 
 #include <iostream>
 #include <string>
 
 #if defined (HAVE_TERMIOS_H)
 #  include <termios.h>
 #elif defined (HAVE_TERMIO_H)
 #  include <termio.h>
@@ -56,17 +56,16 @@ along with Octave; see the file COPYING.
 
 #if defined (HAVE_OMP_H)
 #  include <omp.h>
 #endif
 
 #include "cmd-edit.h"
 #include "file-ops.h"
 #include "lo-mappers.h"
-#include "lo-math.h"
 #include "mach-info.h"
 #include "oct-env.h"
 #include "unistd-wrappers.h"
 #include "unsetenv-wrapper.h"
 
 #include "builtin-defun-decls.h"
 #include "Cell.h"
 #include "defun.h"
diff --git a/libinterp/corefcn/tsearch.cc b/libinterp/corefcn/tsearch.cc
--- a/libinterp/corefcn/tsearch.cc
+++ b/libinterp/corefcn/tsearch.cc
@@ -21,18 +21,19 @@ along with Octave; see the file COPYING.
 */
 
 // Author: Andreas Stahel <Andreas.Stahel@hta-bi.bfh.ch>
 
 #if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
+#include <cmath>
+
 #include "lo-ieee.h"
-#include "lo-math.h"
 
 #include "defun.h"
 #include "error.h"
 #include "ovl.h"
 
 inline double max (double a, double b, double c)
 {
   if (a < b)
diff --git a/liboctave/array/Range.cc b/liboctave/array/Range.cc
--- a/liboctave/array/Range.cc
+++ b/liboctave/array/Range.cc
@@ -28,17 +28,16 @@ along with Octave; see the file COPYING.
 
 #include <iostream>
 #include <limits>
 
 #include "Array-util.h"
 #include "Range.h"
 #include "lo-error.h"
 #include "lo-mappers.h"
-#include "lo-math.h"
 #include "lo-utils.h"
 
 bool
 Range::all_elements_are_ints (void) const
 {
   // If the base and increment are ints, the final value in the range
   // will also be an integer, even if the limit is not.  If there is one
   // or fewer elements only the base needs to be an integer
diff --git a/liboctave/numeric/DET.h b/liboctave/numeric/DET.h
--- a/liboctave/numeric/DET.h
+++ b/liboctave/numeric/DET.h
@@ -20,18 +20,19 @@ along with Octave; see the file COPYING.
 
 */
 
 #if ! defined (octave_DET_h)
 #define octave_DET_h 1
 
 #include "octave-config.h"
 
+#include <cmath>
+
 #include "lo-mappers.h"
-#include "lo-math.h"
 #include "oct-cmplx.h"
 
 template <typename T>
 class
 base_det
 {
 public:
 
diff --git a/liboctave/numeric/lo-mappers.h b/liboctave/numeric/lo-mappers.h
--- a/liboctave/numeric/lo-mappers.h
+++ b/liboctave/numeric/lo-mappers.h
@@ -21,20 +21,21 @@ along with Octave; see the file COPYING.
 
 */
 
 #if ! defined (octave_lo_mappers_h)
 #define octave_lo_mappers_h 1
 
 #include "octave-config.h"
 
+#include <cmath>
+
 #include <limits>
 
 #include "lo-ieee.h"
-#include "lo-math.h"
 #include "oct-cmplx.h"
 #include "oct-inttypes-fwd.h"
 
 namespace octave
 {
   namespace math
   {
     extern OCTAVE_API bool isna (double x);
diff --git a/liboctave/numeric/lo-specfun.cc b/liboctave/numeric/lo-specfun.cc
--- a/liboctave/numeric/lo-specfun.cc
+++ b/liboctave/numeric/lo-specfun.cc
@@ -47,17 +47,16 @@ along with Octave; see the file COPYING.
 #include "fCNDArray.h"
 #include "fMatrix.h"
 #include "fNDArray.h"
 #include "fRowVector.h"
 #include "lo-amos-proto.h"
 #include "lo-error.h"
 #include "lo-ieee.h"
 #include "lo-mappers.h"
-#include "lo-math.h"
 #include "lo-slatec-proto.h"
 #include "lo-specfun.h"
 #include "mx-inlines.cc"
 
 namespace octave
 {
   namespace math
   {
diff --git a/liboctave/numeric/randgamma.cc b/liboctave/numeric/randgamma.cc
--- a/liboctave/numeric/randgamma.cc
+++ b/liboctave/numeric/randgamma.cc
@@ -76,18 +76,19 @@ Dirichlet(a1,...,ak) for ai > 0
   r = r / sum(r)
   (from GSL, citing Law & Kelton(1991), Simulation Modeling and Analysis)
 */
 
 #if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
+#include <cmath>
+
 #include "lo-ieee.h"
-#include "lo-math.h"
 #include "randgamma.h"
 #include "randmtzig.h"
 
 #define INFINITE lo_ieee_isinf
 #define RUNI oct_randu()
 #define RNOR oct_randn()
 #define REXP oct_rande()
 
diff --git a/liboctave/numeric/randmtzig.cc b/liboctave/numeric/randmtzig.cc
--- a/liboctave/numeric/randmtzig.cc
+++ b/liboctave/numeric/randmtzig.cc
@@ -151,19 +151,19 @@ along with Octave; see the file COPYING.
    void oct_fill_float_randn (octave_idx_type, float [])
    void oct_fill_float_rande (octave_idx_type, float [])
 */
 
 #if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
+#include <cmath>
 #include <cstdio>
 
-#include "lo-math.h"
 #include "oct-time.h"
 #include "randmtzig.h"
 
 /* FIXME: may want to suppress X86 if sizeof(long) > 4 */
 #if ! defined (USE_X86_32)
 #  if defined (i386) || defined (HAVE_X86_32)
 #    define USE_X86_32 1
 #  else
diff --git a/liboctave/numeric/randpoisson.cc b/liboctave/numeric/randpoisson.cc
--- a/liboctave/numeric/randpoisson.cc
+++ b/liboctave/numeric/randpoisson.cc
@@ -30,22 +30,22 @@ along with Octave; see the file COPYING.
  * LGAMMA: log gamma function
  * INFINITE: function to test whether a value is infinite
  */
 
 #if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
+#include <cmath>
 #include <cstddef>
 
 #include "f77-fcn.h"
 #include "lo-error.h"
 #include "lo-ieee.h"
-#include "lo-math.h"
 #include "randmtzig.h"
 #include "randpoisson.h"
 
 #undef INFINITE
 #define INFINITE lo_ieee_isinf
 #define RUNI oct_randu()
 #define RNOR oct_randn()
 #define LGAMMA xlgamma
diff --git a/liboctave/system/oct-time.cc b/liboctave/system/oct-time.cc
--- a/liboctave/system/oct-time.cc
+++ b/liboctave/system/oct-time.cc
@@ -19,22 +19,22 @@ along with Octave; see the file COPYING.
 <http://www.gnu.org/licenses/>.
 
 */
 
 #if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
+#include <cmath>
+#include <ctime>
+
 #include <limits>
 
-#include <ctime>
-
 #include "lo-error.h"
-#include "lo-math.h"
 #include "lo-utils.h"
 #include "oct-locbuf.h"
 #include "oct-time.h"
 #include "strftime-wrapper.h"
 #include "strptime-wrapper.h"
 #include "time-wrappers.h"
 
 namespace octave
diff --git a/liboctave/util/lo-ieee.cc b/liboctave/util/lo-ieee.cc
--- a/liboctave/util/lo-ieee.cc
+++ b/liboctave/util/lo-ieee.cc
@@ -24,32 +24,31 @@ along with Octave; see the file COPYING.
 #  include "config.h"
 #endif
 
 #include <cmath>
 #include <cstdlib>
 
 #include <limits>
 
+#include "lo-error.h"
+#include "lo-ieee.h"
+#include "mach-info.h"
+
 static double lo_inf;
 static double lo_nan;
 static double lo_na;
 
 static float lo_float_inf;
 static float lo_float_nan;
 static float lo_float_na;
 
 static int lo_ieee_hw;
 static int lo_ieee_lw;
 
-#include "lo-error.h"
-#include "lo-ieee.h"
-#include "lo-math.h"
-#include "mach-info.h"
-
 int
 __lo_ieee_is_NA (double x)
 {
   lo_ieee_double t;
   t.value = x;
   return (__lo_ieee_isnan (x) && t.word[lo_ieee_hw] == LO_IEEE_NA_HW
           && t.word[lo_ieee_lw] == LO_IEEE_NA_LW) ? 1 : 0;
 }
diff --git a/liboctave/util/lo-math.h b/liboctave/util/lo-math.h
deleted file mode 100644
--- a/liboctave/util/lo-math.h
+++ /dev/null
@@ -1,38 +0,0 @@
-/*
-
-Copyright (C) 2007-2017 John W. Eaton
-
-This file is part of Octave.
-
-Octave is free software; you can redistribute it and/or modify it
-under the terms of the GNU General Public License as published by
-the Free Software Foundation; either version 3 of the License, or
-(at your option) any later version.
-
-Octave is distributed in the hope that it will be useful, but
-WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
-
-You should have received a copy of the GNU General Public License
-along with Octave; see the file COPYING.  If not, see
-<http://www.gnu.org/licenses/>.
-
-*/
-
-#if ! defined (octave_lo_math_h)
-#define octave_lo_math_h 1
-
-#include "octave-config.h"
-
-#if defined (__cplusplus)
-#  include <cmath>
-#else
-#  include <math.h>
-#endif
-
-#if defined (HAVE_SUNMATH_H)
-#  include <sunmath.h>
-#endif
-
-#endif
diff --git a/liboctave/util/module.mk b/liboctave/util/module.mk
--- a/liboctave/util/module.mk
+++ b/liboctave/util/module.mk
@@ -8,17 +8,16 @@ UTIL_INC = \
   %reldir%/data-conv.h \
   %reldir%/functor.h \
   %reldir%/glob-match.h \
   %reldir%/lo-array-errwarn.h \
   %reldir%/lo-array-gripes.h \
   %reldir%/lo-cutils.h \
   %reldir%/lo-hash.h \
   %reldir%/lo-ieee.h \
-  %reldir%/lo-math.h \
   %reldir%/lo-regexp.h \
   %reldir%/lo-traits.h \
   %reldir%/lo-utils.h \
   %reldir%/f77-fcn.h \
   %reldir%/lo-error.h \
   %reldir%/quit.h \
   %reldir%/oct-base64.h \
   %reldir%/oct-binmap.h \
diff --git a/liboctave/util/oct-inttypes.h b/liboctave/util/oct-inttypes.h
--- a/liboctave/util/oct-inttypes.h
+++ b/liboctave/util/oct-inttypes.h
@@ -27,17 +27,16 @@ along with Octave; see the file COPYING.
 #include "octave-config.h"
 
 #include <cmath>
 #include <cstdlib>
 
 #include <iosfwd>
 #include <limits>
 
-#include "lo-math.h"
 #include "lo-mappers.h"
 #include "lo-traits.h"
 
 template <typename T> class octave_int;
 
 typedef octave_int<int8_t> octave_int8;
 typedef octave_int<int16_t> octave_int16;
 typedef octave_int<int32_t> octave_int32;
