# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1289439376 18000
#      Wed Nov 10 20:36:16 2010 -0500
# Node ID 2f36145742c9e595b0817623817044e83fa82fa4
# Parent  c7107af0cb5bcf03140562e64d72942402e359bc
eliminate special cases for SCO systems

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,12 @@
+2010-11-10  John W. Eaton  <jwe@octave.org>
+
+	* configure.ac: Eliminate special checks for SCO systems.
+
 2010-11-10  John W. Eaton  <jwe@octave.org>
 
 	* NEWS: Update deprecated function list with dispatch.
 
 2010-11-09  Rik  <octave@nomad.inbox5.com>
 
 	* configure.ac: Fix typo where variable name was missing '$'
 
diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -1727,31 +1727,21 @@ dnl   AC_CHECK_FUNCS(finite isnan isinf)
 dnl
 dnl instead, but that used to fail on some systems...
 dnl
 dnl Also just using AC_CHECK_FUNCS doesn't seem to work to find isinf
 dnl and isnan on Linux systems, so we use AC_CHECK_FUNC, and if that
 dnl fails, we try again by including math.h and invoking the function
 dnl with an argument. 
 
-### I am told that Inf and NaN don't work on m68k HP sytems, and that
-### on SCO systems, isnan and isinf don't work, but they can be
-### replaced by something that does.
+### I am told that Inf and NaN don't work on m68k HP sytems.
 
 case "$canonical_host_type" in
   m68k-hp-hpux*)
   ;;
-  *-*-sco*)
-    AC_MSG_NOTICE([defining SCO to be 1])
-    AC_DEFINE(SCO, 1, [Define if using an SCO system.])
-    AC_MSG_NOTICE([forcing HAVE_ISINF for SCO])
-    AC_DEFINE(HAVE_ISINF, 1, [Define if you have isinf().])
-    AC_MSG_NOTICE([forcing HAVE_ISNAN for SCO])
-    AC_DEFINE(HAVE_ISNAN, 1, [Define if you have isnan().])
-  ;;
   *)
     AC_CHECK_FUNCS(finite isnan isinf signbit)
     AC_CHECK_FUNCS(_finite _isnan)
     AC_CHECK_DECLS(signbit, , , [#include <math.h>])
   ;;
 esac
 
 ### Check for nonstandard but common math functions that we need.
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+2010-11-10  John W. Eaton  <jwe@octave.org>
+
+	* lo-ieee.h: Eliminate special cases for SCO.
+	* lo-ieee.cc (octave_ieee_init): Eliminate special cases for SCO.
+
 2010-11-09  John W. Eaton  <jwe@octave.org>
 
 	* lo-mappers.h (xmod, xrem): Don't copy sign if result is zero.
 
 2010-11-09  John W. Eaton  <jwe@octave.org>
 
 	* lo-mappers.cc, lo-mappers.h (xisnan, xisinf, xfinite, xmod,
 	xrem, floor, ceil, xround, xroundb, signum): Move definitions
diff --git a/liboctave/lo-ieee.cc b/liboctave/lo-ieee.cc
--- a/liboctave/lo-ieee.cc
+++ b/liboctave/lo-ieee.cc
@@ -32,23 +32,17 @@ along with Octave; see the file COPYING.
 #include <floatingpoint.h>
 #endif
 
 #if defined (HAVE_IEEEFP_H)
 #include <ieeefp.h>
 #endif
 
 #if defined (HAVE_NAN_H)
-#if defined (SCO)
-#define _IEEE 1
-#endif
 #include <nan.h>
-#if defined (SCO)
-#undef _IEEE
-#endif
 #endif
 
 #include "lo-error.h"
 #include "lo-ieee.h"
 #include "lo-math.h"
 #include "mach-info.h"
 
 void
@@ -68,20 +62,17 @@ octave_ieee_init (void)
     {
     case oct_mach_info::flt_fmt_ieee_big_endian:
     case oct_mach_info::flt_fmt_ieee_little_endian:
       {
         // Don't optimize away tmp_inf / tmp_inf to generate octave_NaN.
 
         volatile double tmp_inf;
 
-#if defined (SCO)
-        volatile double tmp = 1.0;
-        tmp_inf = 1.0 / (tmp - tmp);
-#elif defined (__alpha__) && defined (__osf__)
+if defined (__alpha__) && defined (__osf__)
         extern unsigned int DINFINITY[2];
         tmp_inf =  (*(X_CAST(double *, DINFINITY)));
 #else
         double tmp = 1e+10;
         tmp_inf = tmp;
         for (;;)
           {
             tmp_inf *= 1e+10;
@@ -122,30 +113,25 @@ octave_ieee_init (void)
         lo_ieee_double t;
         t.word[lo_ieee_hw] = LO_IEEE_NA_HW;
         t.word[lo_ieee_lw] = LO_IEEE_NA_LW;
 
         octave_NA = t.value;
 
         volatile float float_tmp_inf;
 
-#if defined (SCO)
-        volatile float float_tmp = 1.0;
-        float_tmp_inf = 1.0 / (float_tmp - float_tmp);
-#else
         float float_tmp = 1e+10;
         float_tmp_inf = float_tmp;
         for (;;)
           {
             float_tmp_inf *= 1e+10;
             if (float_tmp_inf == float_tmp)
               break;
             float_tmp = float_tmp_inf;
           }
-#endif
 
 #if defined (__NetBSD__)
         octave_Float_NaN = nanf ("");
 #else
         octave_Float_NaN = float_tmp_inf / float_tmp_inf;
 #endif
         octave_Float_Inf = float_tmp_inf;
 
diff --git a/liboctave/lo-ieee.h b/liboctave/lo-ieee.h
--- a/liboctave/lo-ieee.h
+++ b/liboctave/lo-ieee.h
@@ -68,26 +68,16 @@ typedef union
 #define LO_IEEE_NA_LW_OLD 1954
 #define LO_IEEE_NA_HW 0x7FF840F4
 #define LO_IEEE_NA_LW 0x40000000
 #define LO_IEEE_NA_FLOAT   0x7FC207A2
  
 
 extern OCTAVE_API void octave_ieee_init (void);
 
-#if defined (SCO)
-extern int __isnan (double);
-extern int __isinf (double);
-extern int __isnanf (float);
-extern int __isinff (float);
-
-#define isnan(x) (sizeof (x) == sizeof (float) ? __isnanf (x) : __isnan (x))
-#define isinf(x) (sizeof (x) == sizeof (float) ? __isinff (x) : __isinf (x))
-#endif
-
 extern OCTAVE_API int __lo_ieee_isnan (double x);
 extern OCTAVE_API int __lo_ieee_finite (double x);
 extern OCTAVE_API int __lo_ieee_isinf (double x);
 
 extern OCTAVE_API int __lo_ieee_is_NA (double);
 extern OCTAVE_API int __lo_ieee_is_old_NA (double);
 extern OCTAVE_API int __lo_ieee_is_NaN_or_NA (double) GCC_ATTR_DEPRECATED;
 extern OCTAVE_API double __lo_ieee_replace_old_NA (double);
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2010-11-10  John W. Eaton  <jwe@octave.org>
+
+	* sysdep.cc (sysdep_init): Eliminate special case for SCO.
+	(SCO_init): Delete.
+
 2010-11-10  John W. Eaton  <jwe@octave.org>
 
 	* DLD-FUNCTIONS/__dispatch__.cc: Rename from dispatch.cc.
 	Move tests to scripts/deprecated/dispatch.m.
 	(F__dispatch__): Rename from Fdispatch.
 
 	* DLD-FUNCTIONS/module-files: Add __dispatch__.cc to the list.
 	Remove dispatch.cc from the list.
diff --git a/src/sysdep.cc b/src/sysdep.cc
--- a/src/sysdep.cc
+++ b/src/sysdep.cc
@@ -273,42 +273,29 @@ NeXT_init (void)
 #if defined (__EMX__)
 OS2_init (void)
 {
   _control87 ((EM_INVALID | EM_DENORMAL | EM_ZERODIVIDE | EM_OVERFLOW
                | EM_UNDERFLOW | EM_INEXACT), MCW_EM);
 }
 #endif
 
-#if defined (SCO)
-static void
-SCO_init (void)
-{
-#if defined (HAVE_IEEEFP_H)
-  // Disable trapping on common exceptions.
-  fpsetmask (~(FP_X_OFL|FP_X_INV|FP_X_DZ|FP_X_DNML|FP_X_UFL|FP_X_IMP));
-#endif
-}
-#endif
-
 void
 sysdep_init (void)
 {
 #if defined (__386BSD__) || defined (__FreeBSD__) || defined(__NetBSD__)
   BSD_init ();
 #elif defined (__MINGW32__)
   MINGW_init ();
 #elif defined (_MSC_VER)
   MSVC_init ();
 #elif defined (NeXT)
   NeXT_init ();
 #elif defined (__EMX__)
   OS2_init ();
-#elif defined (SCO)
-  SCO_init ();
 #endif
 
   octave_ieee_init ();
 }
 
 void
 sysdep_cleanup (void)
 {
