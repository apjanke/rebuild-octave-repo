# HG changeset patch
# User Marco Caliari <marco.caliari@univr.it>
# Date 1330957987 18000
#      Mon Mar 05 09:33:07 2012 -0500
# Branch stable
# Node ID ec660526ae50c3d3e3b17630b953df4979fdae6f
# Parent  9f7c22795c948c0256f32df7171f06b5a7656cf2
Fix sparse range indexing bug (bug #35570)

* Sparse.cc (Sparse::index): Correctly compute and assign the row and
  column index vectors. Also add a test to check for this bug.

diff --git a/liboctave/Sparse.cc b/liboctave/Sparse.cc
--- a/liboctave/Sparse.cc
+++ b/liboctave/Sparse.cc
@@ -1399,17 +1399,21 @@ Sparse<T>::index (const idx_vector& idx,
           mx_inline_sub (nz_new, retval.xridx (), ridx () + li, lb);
           retval.xcidx(1) = nz_new;
         }
       else if (idx.is_permutation (nel) && idx.is_vector ())
         {
           if (idx.is_range () && idx.increment () == -1)
             {
               retval = Sparse<T> (nr, 1, nz);
-              std::reverse_copy (ridx (), ridx () + nz, retval.ridx ());
+
+              for (octave_idx_type j = 0; j < nz; j++)
+                retval.ridx (j) = nr - ridx (nz - j - 1) - 1;
+
+              copy_or_memcpy (2, cidx (), retval.cidx ());
               std::reverse_copy (data (), data () + nz, retval.data ());
             }
           else
             {
               Array<T> tmp = array_value ();
               tmp = tmp.index (idx);
               retval = Sparse<T> (tmp);
             }
@@ -2721,16 +2725,20 @@ Sparse<T>::array_value () const
 %!test test_sparse_slice([2 2], 21, 4);
 %!test test_sparse_slice([2 2], 22, []);
 %!test test_sparse_slice([2 2], 22, 1);
 %!test test_sparse_slice([2 2], 22, 2);
 %!test test_sparse_slice([2 2], 22, [2,2]);
 %!test test_sparse_slice([2 2], 22, 3);
 %!test test_sparse_slice([2 2], 22, 4);
 
+bug #35570:
+
+%!assert (speye (3,1)(3:-1:1), sparse ([0; 0; 1]))
+
 */
 
 template <class T>
 void
 Sparse<T>::print_info (std::ostream& os, const std::string& prefix) const
 {
   os << prefix << "rep address: " << rep << "\n"
      << prefix << "rep->nzmx:   " << rep->nzmx  << "\n"
