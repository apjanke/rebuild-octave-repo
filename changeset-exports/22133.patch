# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1468773757 14400
#      Sun Jul 17 12:42:37 2016 -0400
# Node ID 59cadee1c74bf59d377f3720651aa7179196ecf2
# Parent  27b63b55bacb2dea24c7869ea9f7464f32e68314
new macros for F77 data types

* f77-fcn.h (F77_DBLE, F77_REAL, F77_DBLE_CMPLX, F77_CMPLX, F77_INT,
F77_INT4, F77_LOGICAL): New macros.

* fortrandemo.cc, __pchip_deriv__.cc, dot.cc, interpreter.cc,
ordschur.cc, qz.cc, CColVector.cc, CMatrix.cc, CNDArray.cc,
CRowVector.cc, CSparse.cc, dColVector.cc, dMatrix.cc, dNDArray.cc,
dRowVector.cc, dSparse.cc, fCColVector.cc, fCMatrix.cc,
fCNDArray.cc, fCRowVector.cc, fColVector.cc, fMatrix.cc,
fNDArray.cc, fRowVector.cc, DASPK.cc, DASRT.cc, DASSL.cc, EIG.cc,
LSODE.cc, Quad.cc, aepbalance.cc, chol.cc, eigs-base.cc, fEIG.cc,
gepbalance.cc, hess.cc, lo-specfun.cc, lu.cc, oct-convn.cc,
oct-rand.cc, qr.cc, qrp.cc, randpoisson.cc, schur.cc, svd.cc:
Use new macros in declarations of Fortran subroutines.

diff --git a/examples/code/fortrandemo.cc b/examples/code/fortrandemo.cc
--- a/examples/code/fortrandemo.cc
+++ b/examples/code/fortrandemo.cc
@@ -1,16 +1,16 @@
 #include <octave/oct.h>
 #include <octave/f77-fcn.h>
 
 extern "C"
 {
   F77_RET_T
   F77_FUNC (fortransub, FORTSUB)
-    (const int&, double*, F77_CHAR_ARG_DECL F77_CHAR_ARG_LEN_DECL);
+    (const F77_INT&, F77_DBLE*, F77_CHAR_ARG_DECL F77_CHAR_ARG_LEN_DECL);
 }
 
 DEFUN_DLD (fortrandemo, args, , "Fortran Demo")
 {
   if (args.length () != 1)
     print_usage ();
 
   NDArray a = args(0).array_value ();
diff --git a/libinterp/corefcn/__pchip_deriv__.cc b/libinterp/corefcn/__pchip_deriv__.cc
--- a/libinterp/corefcn/__pchip_deriv__.cc
+++ b/libinterp/corefcn/__pchip_deriv__.cc
@@ -30,26 +30,26 @@ along with Octave; see the file COPYING.
 #include "errwarn.h"
 #include "ovl.h"
 #include "utils.h"
 #include "f77-fcn.h"
 
 extern "C"
 {
   F77_RET_T
-  F77_FUNC (dpchim, DPCHIM) (const octave_idx_type& n, const double *x,
-                             const double *f, double *d,
-                             const octave_idx_type &incfd,
-                             octave_idx_type *ierr);
+  F77_FUNC (dpchim, DPCHIM) (const F77_INT& n, const F77_DBLE *x,
+                             const F77_DBLE *f, F77_DBLE *d,
+                             const F77_INT &incfd,
+                             F77_INT *ierr);
 
   F77_RET_T
-  F77_FUNC (pchim, PCHIM) (const octave_idx_type& n, const float *x,
-                           const float *f, float *d,
-                           const octave_idx_type& incfd,
-                           octave_idx_type *ierr);
+  F77_FUNC (pchim, PCHIM) (const F77_INT& n, const F77_REAL *x,
+                           const F77_REAL *f, F77_REAL *d,
+                           const F77_INT& incfd,
+                           F77_INT *ierr);
 }
 
 // Wrapper for SLATEC/PCHIP function DPCHIM to calculate the derivates
 // for piecewise polynomials.
 
 DEFUN (__pchip_deriv__, args, ,
        doc: /* -*- texinfo -*-
 @deftypefn {} {} __pchip_deriv__ (@var{x}, @var{y}, @var{dim})
diff --git a/libinterp/corefcn/dot.cc b/libinterp/corefcn/dot.cc
--- a/libinterp/corefcn/dot.cc
+++ b/libinterp/corefcn/dot.cc
@@ -28,55 +28,55 @@ along with Octave; see the file COPYING.
 #include "mx-base.h"
 #include "error.h"
 #include "defun.h"
 #include "parse.h"
 
 extern "C"
 {
   F77_RET_T
-  F77_FUNC (ddot3, DDOT3) (const octave_idx_type&, const octave_idx_type&,
-                           const octave_idx_type&, const double*,
-                           const double*, double*);
+  F77_FUNC (ddot3, DDOT3) (const F77_INT&, const F77_INT&,
+                           const F77_INT&, const F77_DBLE*,
+                           const F77_DBLE*, F77_DBLE*);
 
   F77_RET_T
-  F77_FUNC (sdot3, SDOT3) (const octave_idx_type&, const octave_idx_type&,
-                           const octave_idx_type&, const float*,
-                           const float*, float*);
+  F77_FUNC (sdot3, SDOT3) (const F77_INT&, const F77_INT&,
+                           const F77_INT&, const F77_REAL*,
+                           const F77_REAL*, F77_REAL*);
 
   F77_RET_T
-  F77_FUNC (zdotc3, ZDOTC3) (const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, const Complex*,
-                             const Complex*, Complex*);
+  F77_FUNC (zdotc3, ZDOTC3) (const F77_INT&, const F77_INT&,
+                             const F77_INT&, const F77_DBLE_CMPLX*,
+                             const F77_DBLE_CMPLX*, F77_DBLE_CMPLX*);
 
   F77_RET_T
-  F77_FUNC (cdotc3, CDOTC3) (const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, const FloatComplex*,
-                             const FloatComplex*, FloatComplex*);
+  F77_FUNC (cdotc3, CDOTC3) (const F77_INT&, const F77_INT&,
+                             const F77_INT&, const F77_CMPLX*,
+                             const F77_CMPLX*, F77_CMPLX*);
 
   F77_RET_T
-  F77_FUNC (dmatm3, DMATM3) (const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, const octave_idx_type&,
-                             const double*, const double*, double*);
+  F77_FUNC (dmatm3, DMATM3) (const F77_INT&, const F77_INT&,
+                             const F77_INT&, const F77_INT&,
+                             const F77_DBLE*, const F77_DBLE*, F77_DBLE*);
 
   F77_RET_T
-  F77_FUNC (smatm3, SMATM3) (const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, const octave_idx_type&,
-                             const float*, const float*, float*);
+  F77_FUNC (smatm3, SMATM3) (const F77_INT&, const F77_INT&,
+                             const F77_INT&, const F77_INT&,
+                             const F77_REAL*, const F77_REAL*, F77_REAL*);
 
   F77_RET_T
-  F77_FUNC (zmatm3, ZMATM3) (const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, const octave_idx_type&,
-                             const Complex*, const Complex*, Complex*);
+  F77_FUNC (zmatm3, ZMATM3) (const F77_INT&, const F77_INT&,
+                             const F77_INT&, const F77_INT&,
+                             const F77_DBLE_CMPLX*, const F77_DBLE_CMPLX*, F77_DBLE_CMPLX*);
 
   F77_RET_T
-  F77_FUNC (cmatm3, CMATM3) (const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, const octave_idx_type&,
-                             const FloatComplex*, const FloatComplex*,
-                             FloatComplex*);
+  F77_FUNC (cmatm3, CMATM3) (const F77_INT&, const F77_INT&,
+                             const F77_INT&, const F77_INT&,
+                             const F77_CMPLX*, const F77_CMPLX*,
+                             F77_CMPLX*);
 }
 
 static void
 get_red_dims (const dim_vector& x, const dim_vector& y, int dim,
               dim_vector& z, octave_idx_type& m, octave_idx_type& n,
               octave_idx_type& k)
 {
   int nd = x.ndims ();
diff --git a/libinterp/corefcn/interpreter.cc b/libinterp/corefcn/interpreter.cc
--- a/libinterp/corefcn/interpreter.cc
+++ b/libinterp/corefcn/interpreter.cc
@@ -77,20 +77,22 @@ bool quit_allowed = true;
 // TRUE means we are ready to interpret commands, but not everything
 // is ready for interactive use.
 bool octave_interpreter_ready = false;
 
 // TRUE means we've processed all the init code and we are good to go.
 bool octave_initialized = false;
 
 // Kluge.
-extern "C" F77_RET_T
-F77_FUNC (xerbla, XERBLA) (F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&
-                           F77_CHAR_ARG_LEN_DECL);
+extern "C"
+{
+  F77_RET_T
+  F77_FUNC (xerbla, XERBLA) (F77_CONST_CHAR_ARG_DECL, const F77_INT&
+                             F77_CHAR_ARG_LEN_DECL);
+}
 
 DEFUN (__version_info__, args, ,
        doc: /* -*- texinfo -*-
 @deftypefn {} {retval =} __version_info__ (@var{name}, @var{version}, @var{release}, @var{date})
 Undocumented internal function.
 @end deftypefn */)
 {
   static octave_map vinfo;
diff --git a/libinterp/corefcn/ordschur.cc b/libinterp/corefcn/ordschur.cc
--- a/libinterp/corefcn/ordschur.cc
+++ b/libinterp/corefcn/ordschur.cc
@@ -28,43 +28,43 @@ along with Octave; see the file COPYING.
 #include "error.h"
 #include "ovl.h"
 #include "f77-fcn.h"
 
 extern "C"
 {
   F77_RET_T
   F77_FUNC (dtrsen, DTRSEN) (F77_CONST_CHAR_ARG_DECL, F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type*, const octave_idx_type&,
-                             double*, const octave_idx_type&, double*, const octave_idx_type&,
-                             double*, double*, octave_idx_type&, double&, double&, double*,
-                             const octave_idx_type&, octave_idx_type*,
-                             const octave_idx_type&, octave_idx_type&);
+                             const F77_INT*, const F77_INT&,
+                             F77_DBLE*, const F77_INT&, F77_DBLE*, const F77_INT&,
+                             F77_DBLE*, F77_DBLE*, F77_INT&, F77_DBLE&, F77_DBLE&, F77_DBLE*,
+                             const F77_INT&, F77_INT*,
+                             const F77_INT&, F77_INT&);
 
   F77_RET_T
   F77_FUNC (ztrsen, ZTRSEN) (F77_CONST_CHAR_ARG_DECL, F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type*, const octave_idx_type&,
-                             Complex*, const octave_idx_type&, Complex*, const octave_idx_type&,
-                             Complex*, octave_idx_type&, double&, double&, Complex*,
-                             const octave_idx_type&, octave_idx_type &);
+                             const F77_INT*, const F77_INT&,
+                             F77_DBLE_CMPLX*, const F77_INT&, F77_DBLE_CMPLX*, const F77_INT&,
+                             F77_DBLE_CMPLX*, F77_INT&, F77_DBLE&, F77_DBLE&, F77_DBLE_CMPLX*,
+                             const F77_INT&, F77_INT &);
 
   F77_RET_T
   F77_FUNC (strsen, STRSEN) (F77_CONST_CHAR_ARG_DECL, F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type*, const octave_idx_type&,
-                             float*, const octave_idx_type&, float*, const octave_idx_type&,
-                             float*, float*, octave_idx_type&, float&, float&, float*,
-                             const octave_idx_type&, octave_idx_type*,
-                             const octave_idx_type&, octave_idx_type&);
+                             const F77_INT*, const F77_INT&,
+                             F77_REAL*, const F77_INT&, F77_REAL*, const F77_INT&,
+                             F77_REAL*, F77_REAL*, F77_INT&, F77_REAL&, F77_REAL&, F77_REAL*,
+                             const F77_INT&, F77_INT*,
+                             const F77_INT&, F77_INT&);
 
   F77_RET_T
   F77_FUNC (ctrsen, CTRSEN) (F77_CONST_CHAR_ARG_DECL, F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type*, const octave_idx_type&,
-                             FloatComplex*, const octave_idx_type&, FloatComplex*, const octave_idx_type&,
-                             FloatComplex*, octave_idx_type&, float&, float&, FloatComplex*,
-                             const octave_idx_type&, octave_idx_type &);
+                             const F77_INT*, const F77_INT&,
+                             F77_CMPLX*, const F77_INT&, F77_CMPLX*, const F77_INT&,
+                             F77_CMPLX*, F77_INT&, F77_REAL&, F77_REAL&, F77_CMPLX*,
+                             const F77_INT&, F77_INT &);
 }
 
 DEFUN (ordschur, args, ,
        doc: /* -*- texinfo -*-
 @deftypefn {} {[@var{UR}, @var{SR}] =} ordschur (@var{U}, @var{S}, @var{select})
 Reorders the real Schur factorization (@var{U},@var{S}) obtained with the
 @code{schur} function, so that selected eigenvalues appear in the upper left
 diagonal blocks of the quasi triangular Schur matrix.
diff --git a/libinterp/corefcn/qz.cc b/libinterp/corefcn/qz.cc
--- a/libinterp/corefcn/qz.cc
+++ b/libinterp/corefcn/qz.cc
@@ -60,178 +60,178 @@ typedef octave_idx_type (*sort_function)
                                           const double& ALPHA,
                                           const double& BETA, const double& S,
                                           const double& P);
 
 extern "C"
 {
   F77_RET_T
   F77_FUNC (dggbal, DGGBAL) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type& N, double* A,
-                             const octave_idx_type& LDA, double* B,
-                             const octave_idx_type& LDB, octave_idx_type& ILO,
-                             octave_idx_type& IHI, double* LSCALE,
-                             double* RSCALE, double* WORK,
-                             octave_idx_type& INFO
+                             const F77_INT& N, F77_DBLE* A,
+                             const F77_INT& LDA, F77_DBLE* B,
+                             const F77_INT& LDB, F77_INT& ILO,
+                             F77_INT& IHI, F77_DBLE* LSCALE,
+                             F77_DBLE* RSCALE, F77_DBLE* WORK,
+                             F77_INT& INFO
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (zggbal, ZGGBAL) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type& N, Complex* A,
-                             const octave_idx_type& LDA, Complex* B,
-                             const octave_idx_type& LDB, octave_idx_type& ILO,
-                             octave_idx_type& IHI, double* LSCALE,
-                             double* RSCALE, double* WORK,
-                             octave_idx_type& INFO
+                             const F77_INT& N, F77_DBLE_CMPLX* A,
+                             const F77_INT& LDA, F77_DBLE_CMPLX* B,
+                             const F77_INT& LDB, F77_INT& ILO,
+                             F77_INT& IHI, F77_DBLE* LSCALE,
+                             F77_DBLE* RSCALE, F77_DBLE* WORK,
+                             F77_INT& INFO
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (dggbak, DGGBAK) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type& N,
-                             const octave_idx_type& ILO,
-                             const octave_idx_type& IHI,
-                             const double* LSCALE, const double* RSCALE,
-                             octave_idx_type& M, double* V,
-                             const octave_idx_type& LDV, octave_idx_type& INFO
+                             const F77_INT& N,
+                             const F77_INT& ILO,
+                             const F77_INT& IHI,
+                             const F77_DBLE* LSCALE, const F77_DBLE* RSCALE,
+                             F77_INT& M, F77_DBLE* V,
+                             const F77_INT& LDV, F77_INT& INFO
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (zggbak, ZGGBAK) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type& N,
-                             const octave_idx_type& ILO,
-                             const octave_idx_type& IHI,
-                             const double* LSCALE, const double* RSCALE,
-                             octave_idx_type& M, Complex* V,
-                             const octave_idx_type& LDV, octave_idx_type& INFO
+                             const F77_INT& N,
+                             const F77_INT& ILO,
+                             const F77_INT& IHI,
+                             const F77_DBLE* LSCALE, const F77_DBLE* RSCALE,
+                             F77_INT& M, F77_DBLE_CMPLX* V,
+                             const F77_INT& LDV, F77_INT& INFO
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (dgghrd, DGGHRD) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type& N,
-                             const octave_idx_type& ILO,
-                             const octave_idx_type& IHI, double* A,
-                             const octave_idx_type& LDA, double* B,
-                             const octave_idx_type& LDB, double* Q,
-                             const octave_idx_type& LDQ, double* Z,
-                             const octave_idx_type& LDZ, octave_idx_type& INFO
+                             const F77_INT& N,
+                             const F77_INT& ILO,
+                             const F77_INT& IHI, F77_DBLE* A,
+                             const F77_INT& LDA, F77_DBLE* B,
+                             const F77_INT& LDB, F77_DBLE* Q,
+                             const F77_INT& LDQ, F77_DBLE* Z,
+                             const F77_INT& LDZ, F77_INT& INFO
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (zgghrd, ZGGHRD) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type& N,
-                             const octave_idx_type& ILO,
-                             const octave_idx_type& IHI, Complex* A,
-                             const octave_idx_type& LDA, Complex* B,
-                             const octave_idx_type& LDB, Complex* Q,
-                             const octave_idx_type& LDQ, Complex* Z,
-                             const octave_idx_type& LDZ, octave_idx_type& INFO
+                             const F77_INT& N,
+                             const F77_INT& ILO,
+                             const F77_INT& IHI, F77_DBLE_CMPLX* A,
+                             const F77_INT& LDA, F77_DBLE_CMPLX* B,
+                             const F77_INT& LDB, F77_DBLE_CMPLX* Q,
+                             const F77_INT& LDQ, F77_DBLE_CMPLX* Z,
+                             const F77_INT& LDZ, F77_INT& INFO
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (dhgeqz, DHGEQZ) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type& N,
-                             const octave_idx_type& ILO,
-                             const octave_idx_type& IHI,
-                             double* A, const octave_idx_type& LDA, double* B,
-                             const octave_idx_type& LDB, double* ALPHAR,
-                             double* ALPHAI, double* BETA, double* Q,
-                             const octave_idx_type& LDQ, double* Z,
-                             const octave_idx_type& LDZ, double* WORK,
-                             const octave_idx_type& LWORK,
-                             octave_idx_type& INFO
+                             const F77_INT& N,
+                             const F77_INT& ILO,
+                             const F77_INT& IHI,
+                             F77_DBLE* A, const F77_INT& LDA, F77_DBLE* B,
+                             const F77_INT& LDB, F77_DBLE* ALPHAR,
+                             F77_DBLE* ALPHAI, F77_DBLE* BETA, F77_DBLE* Q,
+                             const F77_INT& LDQ, F77_DBLE* Z,
+                             const F77_INT& LDZ, F77_DBLE* WORK,
+                             const F77_INT& LWORK,
+                             F77_INT& INFO
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (zhgeqz, ZHGEQZ) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type& N,
-                             const octave_idx_type& ILO,
-                             const octave_idx_type& IHI,
-                             Complex* A, const octave_idx_type& LDA,
-                             Complex* B, const octave_idx_type& LDB,
-                             Complex* ALPHA, Complex* BETA, Complex* CQ,
-                             const octave_idx_type& LDQ,
-                             Complex* CZ, const octave_idx_type& LDZ,
-                             Complex* WORK, const octave_idx_type& LWORK,
-                             double* RWORK, octave_idx_type& INFO
+                             const F77_INT& N,
+                             const F77_INT& ILO,
+                             const F77_INT& IHI,
+                             F77_DBLE_CMPLX* A, const F77_INT& LDA,
+                             F77_DBLE_CMPLX* B, const F77_INT& LDB,
+                             F77_DBLE_CMPLX* ALPHA, F77_DBLE_CMPLX* BETA, F77_DBLE_CMPLX* CQ,
+                             const F77_INT& LDQ,
+                             F77_DBLE_CMPLX* CZ, const F77_INT& LDZ,
+                             F77_DBLE_CMPLX* WORK, const F77_INT& LWORK,
+                             F77_DBLE* RWORK, F77_INT& INFO
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (dlag2, DLAG2) (const double* A, const octave_idx_type& LDA,
-                           const double* B, const octave_idx_type& LDB,
-                           const double& SAFMIN, double& SCALE1,
-                           double& SCALE2, double& WR1, double& WR2,
-                           double& WI);
+  F77_FUNC (dlag2, DLAG2) (const F77_DBLE* A, const F77_INT& LDA,
+                           const F77_DBLE* B, const F77_INT& LDB,
+                           const F77_DBLE& SAFMIN, F77_DBLE& SCALE1,
+                           F77_DBLE& SCALE2, F77_DBLE& WR1, F77_DBLE& WR2,
+                           F77_DBLE& WI);
 
   // Van Dooren's code (netlib.org: toms/590) for reordering
   // GEP.  Only processes Z, not Q.
   F77_RET_T
-  F77_FUNC (dsubsp, DSUBSP) (const octave_idx_type& NMAX,
-                             const octave_idx_type& N, double* A,
-                             double* B, double* Z, sort_function,
-                             const double& EPS, octave_idx_type& NDIM,
-                             octave_idx_type& FAIL, octave_idx_type* IND);
+  F77_FUNC (dsubsp, DSUBSP) (const F77_INT& NMAX,
+                             const F77_INT& N, F77_DBLE* A,
+                             F77_DBLE* B, F77_DBLE* Z, sort_function,
+                             const F77_DBLE& EPS, F77_INT& NDIM,
+                             F77_INT& FAIL, F77_INT* IND);
 
   // Documentation for DTGEVC incorrectly states that VR, VL are
   // complex*16; they are declared in DTGEVC as double precision
   // (probably a cut and paste problem fro ZTGEVC).
   F77_RET_T
   F77_FUNC (dtgevc, DTGEVC) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
-                             octave_idx_type* SELECT,
-                             const octave_idx_type& N, double* A,
-                             const octave_idx_type& LDA, double* B,
-                             const octave_idx_type& LDB, double* VL,
-                             const octave_idx_type& LDVL, double* VR,
-                             const octave_idx_type& LDVR,
-                             const octave_idx_type& MM, octave_idx_type& M,
-                             double* WORK, octave_idx_type& INFO
+                             F77_INT* SELECT,
+                             const F77_INT& N, F77_DBLE* A,
+                             const F77_INT& LDA, F77_DBLE* B,
+                             const F77_INT& LDB, F77_DBLE* VL,
+                             const F77_INT& LDVL, F77_DBLE* VR,
+                             const F77_INT& LDVR,
+                             const F77_INT& MM, F77_INT& M,
+                             F77_DBLE* WORK, F77_INT& INFO
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (ztgevc, ZTGEVC) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
-                             octave_idx_type* SELECT,
-                             const octave_idx_type& N, const Complex* A,
-                             const octave_idx_type& LDA,const Complex* B,
-                             const octave_idx_type& LDB, Complex* xVL,
-                             const octave_idx_type& LDVL, Complex* xVR,
-                             const octave_idx_type& LDVR,
-                             const octave_idx_type& MM, octave_idx_type& M,
-                             Complex* CWORK, double* RWORK,
-                             octave_idx_type& INFO
+                             F77_INT* SELECT,
+                             const F77_INT& N, const F77_DBLE_CMPLX* A,
+                             const F77_INT& LDA,const F77_DBLE_CMPLX* B,
+                             const F77_INT& LDB, F77_DBLE_CMPLX* xVL,
+                             const F77_INT& LDVL, F77_DBLE_CMPLX* xVR,
+                             const F77_INT& LDVR,
+                             const F77_INT& MM, F77_INT& M,
+                             F77_DBLE_CMPLX* CWORK, F77_DBLE* RWORK,
+                             F77_INT& INFO
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (xdlamch, XDLAMCH) (F77_CONST_CHAR_ARG_DECL,
-                               double& retval
+                               F77_DBLE& retval
                                F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (xdlange, XDLANGE) (F77_CONST_CHAR_ARG_DECL,
-                               const octave_idx_type&,
-                               const octave_idx_type&, const double*,
-                               const octave_idx_type&, double*, double&
+                               const F77_INT&,
+                               const F77_INT&, const F77_DBLE*,
+                               const F77_INT&, F77_DBLE*, F77_DBLE&
                                F77_CHAR_ARG_LEN_DECL);
 }
 
 // fcrhp, fin, fout, folhp:
 // Routines for ordering of generalized eigenvalues.
 // Return 1 if test is passed, 0 otherwise.
 //   fin:  |lambda| < 1
 //   fout: |lambda| >= 1
diff --git a/liboctave/array/CColVector.cc b/liboctave/array/CColVector.cc
--- a/liboctave/array/CColVector.cc
+++ b/liboctave/array/CColVector.cc
@@ -37,21 +37,21 @@ along with Octave; see the file COPYING.
 #include "oct-cmplx.h"
 
 // Fortran functions we call.
 
 extern "C"
 {
   F77_RET_T
   F77_FUNC (zgemv, ZGEMV) (F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, const octave_idx_type&,
-                           const Complex&, const Complex*,
-                           const octave_idx_type&, const Complex*,
-                           const octave_idx_type&, const Complex&,
-                           Complex*, const octave_idx_type&
+                           const F77_INT&, const F77_INT&,
+                           const F77_DBLE_CMPLX&, const F77_DBLE_CMPLX*,
+                           const F77_INT&, const F77_DBLE_CMPLX*,
+                           const F77_INT&, const F77_DBLE_CMPLX&,
+                           F77_DBLE_CMPLX*, const F77_INT&
                            F77_CHAR_ARG_LEN_DECL);
 }
 
 // Complex Column Vector class
 
 ComplexColumnVector::ComplexColumnVector (const ColumnVector& a)
   : MArray<Complex> (a)
 {
diff --git a/liboctave/array/CMatrix.cc b/liboctave/array/CMatrix.cc
--- a/liboctave/array/CMatrix.cc
+++ b/liboctave/array/CMatrix.cc
@@ -65,206 +65,206 @@ along with Octave; see the file COPYING.
 #include "oct-locbuf.h"
 #include "oct-norm.h"
 
 // Fortran functions we call.
 
 extern "C"
 {
   F77_RET_T
-  F77_FUNC (xilaenv, XILAENV) (const octave_idx_type&,
+  F77_FUNC (xilaenv, XILAENV) (const F77_INT&,
                                F77_CONST_CHAR_ARG_DECL,
                                F77_CONST_CHAR_ARG_DECL,
-                               const octave_idx_type&, const octave_idx_type&,
-                               const octave_idx_type&, const octave_idx_type&,
-                               octave_idx_type&
+                               const F77_INT&, const F77_INT&,
+                               const F77_INT&, const F77_INT&,
+                               F77_INT&
                                F77_CHAR_ARG_LEN_DECL
                                F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (zgebal, ZGEBAL) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, Complex*,
-                             const octave_idx_type&, octave_idx_type&,
-                             octave_idx_type&, double*, octave_idx_type&
+                             const F77_INT&, F77_DBLE_CMPLX*,
+                             const F77_INT&, F77_INT&,
+                             F77_INT&, F77_DBLE*, F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (dgebak, DGEBAK) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, double*,
-                             const octave_idx_type&, double*,
-                             const octave_idx_type&, octave_idx_type&
+                             const F77_INT&, const F77_INT&,
+                             const F77_INT&, F77_DBLE*,
+                             const F77_INT&, F77_DBLE*,
+                             const F77_INT&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (zgemm, ZGEMM) (F77_CONST_CHAR_ARG_DECL,
                            F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, const octave_idx_type&,
-                           const octave_idx_type&, const Complex&,
-                           const Complex*, const octave_idx_type&,
-                           const Complex*, const octave_idx_type&,
-                           const Complex&, Complex*, const octave_idx_type&
+                           const F77_INT&, const F77_INT&,
+                           const F77_INT&, const F77_DBLE_CMPLX&,
+                           const F77_DBLE_CMPLX*, const F77_INT&,
+                           const F77_DBLE_CMPLX*, const F77_INT&,
+                           const F77_DBLE_CMPLX&, F77_DBLE_CMPLX*, const F77_INT&
                            F77_CHAR_ARG_LEN_DECL
                            F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (zgemv, ZGEMV) (F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, const octave_idx_type&,
-                           const Complex&, const Complex*,
-                           const octave_idx_type&, const Complex*,
-                           const octave_idx_type&, const Complex&,
-                           Complex*, const octave_idx_type&
+                           const F77_INT&, const F77_INT&,
+                           const F77_DBLE_CMPLX&, const F77_DBLE_CMPLX*,
+                           const F77_INT&, const F77_DBLE_CMPLX*,
+                           const F77_INT&, const F77_DBLE_CMPLX&,
+                           F77_DBLE_CMPLX*, const F77_INT&
                            F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (xzdotu, XZDOTU) (const octave_idx_type&, const Complex*,
-                             const octave_idx_type&, const Complex*,
-                             const octave_idx_type&, Complex&);
+  F77_FUNC (xzdotu, XZDOTU) (const F77_INT&, const F77_DBLE_CMPLX*,
+                             const F77_INT&, const F77_DBLE_CMPLX*,
+                             const F77_INT&, F77_DBLE_CMPLX&);
 
   F77_RET_T
-  F77_FUNC (xzdotc, XZDOTC) (const octave_idx_type&, const Complex*,
-                             const octave_idx_type&, const Complex*,
-                             const octave_idx_type&, Complex&);
+  F77_FUNC (xzdotc, XZDOTC) (const F77_INT&, const F77_DBLE_CMPLX*,
+                             const F77_INT&, const F77_DBLE_CMPLX*,
+                             const F77_INT&, F77_DBLE_CMPLX&);
 
   F77_RET_T
   F77_FUNC (zsyrk, ZSYRK) (F77_CONST_CHAR_ARG_DECL,
                            F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, const octave_idx_type&,
-                           const Complex&, const Complex*,
-                           const octave_idx_type&, const Complex&,
-                           Complex*, const octave_idx_type&
+                           const F77_INT&, const F77_INT&,
+                           const F77_DBLE_CMPLX&, const F77_DBLE_CMPLX*,
+                           const F77_INT&, const F77_DBLE_CMPLX&,
+                           F77_DBLE_CMPLX*, const F77_INT&
                            F77_CHAR_ARG_LEN_DECL
                            F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (zherk, ZHERK) (F77_CONST_CHAR_ARG_DECL,
                            F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, const octave_idx_type&,
-                           const double&, const Complex*,
-                           const octave_idx_type&, const double&, Complex*,
-                           const octave_idx_type&
+                           const F77_INT&, const F77_INT&,
+                           const F77_DBLE&, const F77_DBLE_CMPLX*,
+                           const F77_INT&, const F77_DBLE&, F77_DBLE_CMPLX*,
+                           const F77_INT&
                            F77_CHAR_ARG_LEN_DECL
                            F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (zgetrf, ZGETRF) (const octave_idx_type&, const octave_idx_type&,
-                             Complex*, const octave_idx_type&,
-                             octave_idx_type*, octave_idx_type&);
+  F77_FUNC (zgetrf, ZGETRF) (const F77_INT&, const F77_INT&,
+                             F77_DBLE_CMPLX*, const F77_INT&,
+                             F77_INT*, F77_INT&);
 
   F77_RET_T
   F77_FUNC (zgetrs, ZGETRS) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&,
-                             Complex*, const octave_idx_type&,
-                             const octave_idx_type*, Complex*,
-                             const octave_idx_type&, octave_idx_type&
+                             const F77_INT&, const F77_INT&,
+                             F77_DBLE_CMPLX*, const F77_INT&,
+                             const F77_INT*, F77_DBLE_CMPLX*,
+                             const F77_INT&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (zgetri, ZGETRI) (const octave_idx_type&, Complex*,
-                             const octave_idx_type&, const octave_idx_type*,
-                             Complex*, const octave_idx_type&,
-                             octave_idx_type&);
+  F77_FUNC (zgetri, ZGETRI) (const F77_INT&, F77_DBLE_CMPLX*,
+                             const F77_INT&, const F77_INT*,
+                             F77_DBLE_CMPLX*, const F77_INT&,
+                             F77_INT&);
 
   F77_RET_T
   F77_FUNC (zgecon, ZGECON) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, Complex*,
-                             const octave_idx_type&, const double&, double&,
-                             Complex*, double*, octave_idx_type&
+                             const F77_INT&, F77_DBLE_CMPLX*,
+                             const F77_INT&, const F77_DBLE&, F77_DBLE&,
+                             F77_DBLE_CMPLX*, F77_DBLE*, F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (zgelsy, ZGELSY) (const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, Complex*,
-                             const octave_idx_type&, Complex*,
-                             const octave_idx_type&, octave_idx_type*,
-                             double&, octave_idx_type&, Complex*,
-                             const octave_idx_type&, double*,
-                             octave_idx_type&);
+  F77_FUNC (zgelsy, ZGELSY) (const F77_INT&, const F77_INT&,
+                             const F77_INT&, F77_DBLE_CMPLX*,
+                             const F77_INT&, F77_DBLE_CMPLX*,
+                             const F77_INT&, F77_INT*,
+                             F77_DBLE&, F77_INT&, F77_DBLE_CMPLX*,
+                             const F77_INT&, F77_DBLE*,
+                             F77_INT&);
 
   F77_RET_T
-  F77_FUNC (zgelsd, ZGELSD) (const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, Complex*,
-                             const octave_idx_type&, Complex*,
-                             const octave_idx_type&, double*, double&,
-                             octave_idx_type&, Complex*,
-                             const octave_idx_type&, double*,
-                             octave_idx_type*, octave_idx_type&);
+  F77_FUNC (zgelsd, ZGELSD) (const F77_INT&, const F77_INT&,
+                             const F77_INT&, F77_DBLE_CMPLX*,
+                             const F77_INT&, F77_DBLE_CMPLX*,
+                             const F77_INT&, F77_DBLE*, F77_DBLE&,
+                             F77_INT&, F77_DBLE_CMPLX*,
+                             const F77_INT&, F77_DBLE*,
+                             F77_INT*, F77_INT&);
 
   F77_RET_T
   F77_FUNC (zpotrf, ZPOTRF) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, Complex*,
-                             const octave_idx_type&, octave_idx_type&
+                             const F77_INT&, F77_DBLE_CMPLX*,
+                             const F77_INT&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (zpocon, ZPOCON) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, Complex*,
-                             const octave_idx_type&, const double&,
-                             double&, Complex*, double*, octave_idx_type&
+                             const F77_INT&, F77_DBLE_CMPLX*,
+                             const F77_INT&, const F77_DBLE&,
+                             F77_DBLE&, F77_DBLE_CMPLX*, F77_DBLE*, F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (zpotrs, ZPOTRS) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&,
-                             const Complex*, const octave_idx_type&, Complex*,
-                             const octave_idx_type&, octave_idx_type&
+                             const F77_INT&, const F77_INT&,
+                             const F77_DBLE_CMPLX*, const F77_INT&, F77_DBLE_CMPLX*,
+                             const F77_INT&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (ztrtri, ZTRTRI) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const Complex*,
-                             const octave_idx_type&, octave_idx_type&
+                             const F77_INT&, const F77_DBLE_CMPLX*,
+                             const F77_INT&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (ztrcon, ZTRCON) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const Complex*,
-                             const octave_idx_type&, double&,
-                             Complex*, double*, octave_idx_type&
+                             const F77_INT&, const F77_DBLE_CMPLX*,
+                             const F77_INT&, F77_DBLE&,
+                             F77_DBLE_CMPLX*, F77_DBLE*, F77_INT&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (ztrtrs, ZTRTRS) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&,
-                             const Complex*, const octave_idx_type&, Complex*,
-                             const octave_idx_type&, octave_idx_type&
+                             const F77_INT&, const F77_INT&,
+                             const F77_DBLE_CMPLX*, const F77_INT&, F77_DBLE_CMPLX*,
+                             const F77_INT&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (zlartg, ZLARTG) (const Complex&, const Complex&, double&,
-                             Complex&, Complex&);
+  F77_FUNC (zlartg, ZLARTG) (const F77_DBLE_CMPLX&, const F77_DBLE_CMPLX&, F77_DBLE&,
+                             F77_DBLE_CMPLX&, F77_DBLE_CMPLX&);
 
   F77_RET_T
   F77_FUNC (ztrsyl, ZTRSYL) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, const Complex*,
-                             const octave_idx_type&, const Complex*,
-                             const octave_idx_type&, const Complex*,
-                             const octave_idx_type&, double&, octave_idx_type&
+                             const F77_INT&, const F77_INT&,
+                             const F77_INT&, const F77_DBLE_CMPLX*,
+                             const F77_INT&, const F77_DBLE_CMPLX*,
+                             const F77_INT&, const F77_DBLE_CMPLX*,
+                             const F77_INT&, F77_DBLE&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (xzlange, XZLANGE) (F77_CONST_CHAR_ARG_DECL,
-                               const octave_idx_type&, const octave_idx_type&,
-                               const Complex*, const octave_idx_type&,
-                               double*, double&
+                               const F77_INT&, const F77_INT&,
+                               const F77_DBLE_CMPLX*, const F77_INT&,
+                               F77_DBLE*, F77_DBLE&
                                F77_CHAR_ARG_LEN_DECL);
 }
 
 static const Complex Complex_NaN_result (octave::numeric_limits<double>::NaN (),
                                          octave::numeric_limits<double>::NaN ());
 
 // Complex Matrix class
 
@@ -1268,23 +1268,23 @@ ComplexMatrix::ifourier2d (void) const
 extern "C"
 {
   // Note that the original complex fft routines were not written for
   // double complex arguments.  They have been modified by adding an
   // implicit double precision (a-h,o-z) statement at the beginning of
   // each subroutine.
 
   F77_RET_T
-  F77_FUNC (zffti, ZFFTI) (const octave_idx_type&, Complex*);
+  F77_FUNC (zffti, ZFFTI) (const F77_INT&, F77_DBLE_CMPLX*);
 
   F77_RET_T
-  F77_FUNC (zfftf, ZFFTF) (const octave_idx_type&, Complex*, Complex*);
+  F77_FUNC (zfftf, ZFFTF) (const F77_INT&, F77_DBLE_CMPLX*, F77_DBLE_CMPLX*);
 
   F77_RET_T
-  F77_FUNC (zfftb, ZFFTB) (const octave_idx_type&, Complex*, Complex*);
+  F77_FUNC (zfftb, ZFFTB) (const F77_INT&, F77_DBLE_CMPLX*, F77_DBLE_CMPLX*);
 }
 
 ComplexMatrix
 ComplexMatrix::fourier (void) const
 {
   ComplexMatrix retval;
 
   octave_idx_type nr = rows ();
diff --git a/liboctave/array/CNDArray.cc b/liboctave/array/CNDArray.cc
--- a/liboctave/array/CNDArray.cc
+++ b/liboctave/array/CNDArray.cc
@@ -191,23 +191,23 @@ ComplexNDArray::ifourierNd (void) const
 extern "C"
 {
   // Note that the original complex fft routines were not written for
   // double complex arguments.  They have been modified by adding an
   // implicit double precision (a-h,o-z) statement at the beginning of
   // each subroutine.
 
   F77_RET_T
-  F77_FUNC (zffti, ZFFTI) (const octave_idx_type&, Complex*);
+  F77_FUNC (zffti, ZFFTI) (const F77_INT&, F77_DBLE_CMPLX*);
 
   F77_RET_T
-  F77_FUNC (zfftf, ZFFTF) (const octave_idx_type&, Complex*, Complex*);
+  F77_FUNC (zfftf, ZFFTF) (const F77_INT&, F77_DBLE_CMPLX*, F77_DBLE_CMPLX*);
 
   F77_RET_T
-  F77_FUNC (zfftb, ZFFTB) (const octave_idx_type&, Complex*, Complex*);
+  F77_FUNC (zfftb, ZFFTB) (const F77_INT&, F77_DBLE_CMPLX*, F77_DBLE_CMPLX*);
 }
 
 ComplexNDArray
 ComplexNDArray::fourier (int dim) const
 {
   dim_vector dv = dims ();
 
   if (dim > dv.ndims () || dim < 0)
diff --git a/liboctave/array/CRowVector.cc b/liboctave/array/CRowVector.cc
--- a/liboctave/array/CRowVector.cc
+++ b/liboctave/array/CRowVector.cc
@@ -36,27 +36,27 @@ along with Octave; see the file COPYING.
 #include "oct-cmplx.h"
 
 // Fortran functions we call.
 
 extern "C"
 {
   F77_RET_T
   F77_FUNC (zgemv, ZGEMV) (F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, const octave_idx_type&,
-                           const Complex&, const Complex*,
-                           const octave_idx_type&, const Complex*,
-                           const octave_idx_type&, const Complex&, Complex*,
-                           const octave_idx_type&
+                           const F77_INT&, const F77_INT&,
+                           const F77_DBLE_CMPLX&, const F77_DBLE_CMPLX*,
+                           const F77_INT&, const F77_DBLE_CMPLX*,
+                           const F77_INT&, const F77_DBLE_CMPLX&, F77_DBLE_CMPLX*,
+                           const F77_INT&
                            F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (xzdotu, XZDOTU) (const octave_idx_type&, const Complex*,
-                             const octave_idx_type&, const Complex*,
-                             const octave_idx_type&, Complex&);
+  F77_FUNC (xzdotu, XZDOTU) (const F77_INT&, const F77_DBLE_CMPLX*,
+                             const F77_INT&, const F77_DBLE_CMPLX*,
+                             const F77_INT&, F77_DBLE_CMPLX&);
 }
 
 // Complex Row Vector class
 
 bool
 ComplexRowVector::operator == (const ComplexRowVector& a) const
 {
   octave_idx_type len = numel ();
diff --git a/liboctave/array/CSparse.cc b/liboctave/array/CSparse.cc
--- a/liboctave/array/CSparse.cc
+++ b/liboctave/array/CSparse.cc
@@ -69,83 +69,83 @@ along with Octave; see the file COPYING.
 #if ! defined (USE_QRSOLVE)
 #  include "sparse-dmsolve.h"
 #endif
 
 // Fortran functions we call.
 extern "C"
 {
   F77_RET_T
-  F77_FUNC (zgbtrf, ZGBTRF) (const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, const octave_idx_type&,
-                             Complex*, const octave_idx_type&,
-                             octave_idx_type*, octave_idx_type&);
+  F77_FUNC (zgbtrf, ZGBTRF) (const F77_INT&, const F77_INT&,
+                             const F77_INT&, const F77_INT&,
+                             F77_DBLE_CMPLX*, const F77_INT&,
+                             F77_INT*, F77_INT&);
 
   F77_RET_T
   F77_FUNC (zgbtrs, ZGBTRS) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, const octave_idx_type&,
-                             const Complex*, const octave_idx_type&,
-                             const octave_idx_type*, Complex*,
-                             const octave_idx_type&, octave_idx_type&
+                             const F77_INT&, const F77_INT&,
+                             const F77_INT&, const F77_INT&,
+                             const F77_DBLE_CMPLX*, const F77_INT&,
+                             const F77_INT*, F77_DBLE_CMPLX*,
+                             const F77_INT&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (zgbcon, ZGBCON) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, Complex*,
-                             const octave_idx_type&, const octave_idx_type*,
-                             const double&, double&, Complex*, double*,
-                             octave_idx_type&
+                             const F77_INT&, const F77_INT&,
+                             const F77_INT&, F77_DBLE_CMPLX*,
+                             const F77_INT&, const F77_INT*,
+                             const F77_DBLE&, F77_DBLE&, F77_DBLE_CMPLX*, F77_DBLE*,
+                             F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (zpbtrf, ZPBTRF) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&,
-                             Complex*, const octave_idx_type&, octave_idx_type&
+                             const F77_INT&, const F77_INT&,
+                             F77_DBLE_CMPLX*, const F77_INT&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (zpbtrs, ZPBTRS) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, Complex*,
-                             const octave_idx_type&, Complex*,
-                             const octave_idx_type&, octave_idx_type&
+                             const F77_INT&, const F77_INT&,
+                             const F77_INT&, F77_DBLE_CMPLX*,
+                             const F77_INT&, F77_DBLE_CMPLX*,
+                             const F77_INT&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (zpbcon, ZPBCON) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&,
-                             Complex*, const octave_idx_type&, const double&,
-                             double&, Complex*, double*, octave_idx_type&
+                             const F77_INT&, const F77_INT&,
+                             F77_DBLE_CMPLX*, const F77_INT&, const F77_DBLE&,
+                             F77_DBLE&, F77_DBLE_CMPLX*, F77_DBLE*, F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (zgttrf, ZGTTRF) (const octave_idx_type&, Complex*, Complex*,
-                             Complex*, Complex*, octave_idx_type*,
-                             octave_idx_type&);
+  F77_FUNC (zgttrf, ZGTTRF) (const F77_INT&, F77_DBLE_CMPLX*, F77_DBLE_CMPLX*,
+                             F77_DBLE_CMPLX*, F77_DBLE_CMPLX*, F77_INT*,
+                             F77_INT&);
 
   F77_RET_T
   F77_FUNC (zgttrs, ZGTTRS) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&,
-                             const Complex*, const Complex*, const Complex*,
-                             const Complex*, const octave_idx_type*,
-                             Complex *, const octave_idx_type&,
-                             octave_idx_type&
+                             const F77_INT&, const F77_INT&,
+                             const F77_DBLE_CMPLX*, const F77_DBLE_CMPLX*, const F77_DBLE_CMPLX*,
+                             const F77_DBLE_CMPLX*, const F77_INT*,
+                             F77_DBLE_CMPLX *, const F77_INT&,
+                             F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (zptsv, ZPTSV) (const octave_idx_type&, const octave_idx_type&,
-                           double*, Complex*, Complex*,
-                           const octave_idx_type&, octave_idx_type&);
+  F77_FUNC (zptsv, ZPTSV) (const F77_INT&, const F77_INT&,
+                           F77_DBLE*, F77_DBLE_CMPLX*, F77_DBLE_CMPLX*,
+                           const F77_INT&, F77_INT&);
 
   F77_RET_T
-  F77_FUNC (zgtsv, ZGTSV) (const octave_idx_type&, const octave_idx_type&,
-                           Complex*, Complex*, Complex*, Complex*,
-                           const octave_idx_type&, octave_idx_type&);
+  F77_FUNC (zgtsv, ZGTSV) (const F77_INT&, const F77_INT&,
+                           F77_DBLE_CMPLX*, F77_DBLE_CMPLX*, F77_DBLE_CMPLX*, F77_DBLE_CMPLX*,
+                           const F77_INT&, F77_INT&);
 }
 
 SparseComplexMatrix::SparseComplexMatrix (const SparseMatrix& a)
   : MSparse<Complex> (a)
 {
 }
 
 SparseComplexMatrix::SparseComplexMatrix (const SparseBoolMatrix& a)
diff --git a/liboctave/array/dColVector.cc b/liboctave/array/dColVector.cc
--- a/liboctave/array/dColVector.cc
+++ b/liboctave/array/dColVector.cc
@@ -37,21 +37,21 @@ along with Octave; see the file COPYING.
 #include "oct-cmplx.h"
 
 // Fortran functions we call.
 
 extern "C"
 {
   F77_RET_T
   F77_FUNC (dgemv, DGEMV) (F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, const octave_idx_type&,
-                           const double&, const double*,
-                           const octave_idx_type&, const double*,
-                           const octave_idx_type&, const double&, double*,
-                           const octave_idx_type&
+                           const F77_INT&, const F77_INT&,
+                           const F77_DBLE&, const F77_DBLE*,
+                           const F77_INT&, const F77_DBLE*,
+                           const F77_INT&, const F77_DBLE&, F77_DBLE*,
+                           const F77_INT&
                            F77_CHAR_ARG_LEN_DECL);
 }
 
 // Column Vector class.
 
 bool
 ColumnVector::operator == (const ColumnVector& a) const
 {
diff --git a/liboctave/array/dMatrix.cc b/liboctave/array/dMatrix.cc
--- a/liboctave/array/dMatrix.cc
+++ b/liboctave/array/dMatrix.cc
@@ -63,187 +63,187 @@ along with Octave; see the file COPYING.
 #include "oct-norm.h"
 #include "quit.h"
 
 // Fortran functions we call.
 
 extern "C"
 {
   F77_RET_T
-  F77_FUNC (xilaenv, XILAENV) (const octave_idx_type&,
+  F77_FUNC (xilaenv, XILAENV) (const F77_INT&,
                                F77_CONST_CHAR_ARG_DECL,
                                F77_CONST_CHAR_ARG_DECL,
-                               const octave_idx_type&, const octave_idx_type&,
-                               const octave_idx_type&, const octave_idx_type&,
-                               octave_idx_type&
+                               const F77_INT&, const F77_INT&,
+                               const F77_INT&, const F77_INT&,
+                               F77_INT&
                                F77_CHAR_ARG_LEN_DECL
                                F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (dgebal, DGEBAL) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, double*,
-                             const octave_idx_type&, octave_idx_type&,
-                             octave_idx_type&, double*, octave_idx_type&
+                             const F77_INT&, F77_DBLE*,
+                             const F77_INT&, F77_INT&,
+                             F77_INT&, F77_DBLE*, F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (dgebak, DGEBAK) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, double*,
-                             const octave_idx_type&, double*,
-                             const octave_idx_type&, octave_idx_type&
+                             const F77_INT&, const F77_INT&,
+                             const F77_INT&, F77_DBLE*,
+                             const F77_INT&, F77_DBLE*,
+                             const F77_INT&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (dgemm, DGEMM) (F77_CONST_CHAR_ARG_DECL,
                            F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, const octave_idx_type&,
-                           const octave_idx_type&, const double&,
-                           const double*, const octave_idx_type&,
-                           const double*, const octave_idx_type&,
-                           const double&, double*, const octave_idx_type&
+                           const F77_INT&, const F77_INT&,
+                           const F77_INT&, const F77_DBLE&,
+                           const F77_DBLE*, const F77_INT&,
+                           const F77_DBLE*, const F77_INT&,
+                           const F77_DBLE&, F77_DBLE*, const F77_INT&
                            F77_CHAR_ARG_LEN_DECL
                            F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (dgemv, DGEMV) (F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, const octave_idx_type&,
-                           const double&, const double*,
-                           const octave_idx_type&, const double*,
-                           const octave_idx_type&, const double&, double*,
-                           const octave_idx_type&
+                           const F77_INT&, const F77_INT&,
+                           const F77_DBLE&, const F77_DBLE*,
+                           const F77_INT&, const F77_DBLE*,
+                           const F77_INT&, const F77_DBLE&, F77_DBLE*,
+                           const F77_INT&
                            F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (xddot, XDDOT) (const octave_idx_type&, const double*,
-                           const octave_idx_type&, const double*,
-                           const octave_idx_type&, double&);
+  F77_FUNC (xddot, XDDOT) (const F77_INT&, const F77_DBLE*,
+                           const F77_INT&, const F77_DBLE*,
+                           const F77_INT&, F77_DBLE&);
 
   F77_RET_T
   F77_FUNC (dsyrk, DSYRK) (F77_CONST_CHAR_ARG_DECL,
                            F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, const octave_idx_type&,
-                           const double&, const double*, const octave_idx_type&,
-                           const double&, double*, const octave_idx_type&
+                           const F77_INT&, const F77_INT&,
+                           const F77_DBLE&, const F77_DBLE*, const F77_INT&,
+                           const F77_DBLE&, F77_DBLE*, const F77_INT&
                            F77_CHAR_ARG_LEN_DECL
                            F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (dgetrf, DGETRF) (const octave_idx_type&, const octave_idx_type&,
-                             double*, const octave_idx_type&,
-                             octave_idx_type*, octave_idx_type&);
+  F77_FUNC (dgetrf, DGETRF) (const F77_INT&, const F77_INT&,
+                             F77_DBLE*, const F77_INT&,
+                             F77_INT*, F77_INT&);
 
   F77_RET_T
   F77_FUNC (dgetrs, DGETRS) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&,
-                             const double*, const octave_idx_type&,
-                             const octave_idx_type*, double*,
-                             const octave_idx_type&, octave_idx_type&
+                             const F77_INT&, const F77_INT&,
+                             const F77_DBLE*, const F77_INT&,
+                             const F77_INT*, F77_DBLE*,
+                             const F77_INT&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (dgetri, DGETRI) (const octave_idx_type&, double*,
-                             const octave_idx_type&, const octave_idx_type*,
-                             double*, const octave_idx_type&,
-                             octave_idx_type&);
+  F77_FUNC (dgetri, DGETRI) (const F77_INT&, F77_DBLE*,
+                             const F77_INT&, const F77_INT*,
+                             F77_DBLE*, const F77_INT&,
+                             F77_INT&);
 
   F77_RET_T
   F77_FUNC (dgecon, DGECON) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, double*,
-                             const octave_idx_type&, const double&, double&,
-                             double*, octave_idx_type*, octave_idx_type&
+                             const F77_INT&, F77_DBLE*,
+                             const F77_INT&, const F77_DBLE&, F77_DBLE&,
+                             F77_DBLE*, F77_INT*, F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (dgelsy, DGELSY) (const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, double*,
-                             const octave_idx_type&, double*,
-                             const octave_idx_type&, octave_idx_type*,
-                             double&, octave_idx_type&, double*,
-                             const octave_idx_type&, octave_idx_type&);
+  F77_FUNC (dgelsy, DGELSY) (const F77_INT&, const F77_INT&,
+                             const F77_INT&, F77_DBLE*,
+                             const F77_INT&, F77_DBLE*,
+                             const F77_INT&, F77_INT*,
+                             F77_DBLE&, F77_INT&, F77_DBLE*,
+                             const F77_INT&, F77_INT&);
 
   F77_RET_T
-  F77_FUNC (dgelsd, DGELSD) (const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, double*,
-                             const octave_idx_type&, double*,
-                             const octave_idx_type&, double*, double&,
-                             octave_idx_type&, double*,
-                             const octave_idx_type&, octave_idx_type*,
-                             octave_idx_type&);
+  F77_FUNC (dgelsd, DGELSD) (const F77_INT&, const F77_INT&,
+                             const F77_INT&, F77_DBLE*,
+                             const F77_INT&, F77_DBLE*,
+                             const F77_INT&, F77_DBLE*, F77_DBLE&,
+                             F77_INT&, F77_DBLE*,
+                             const F77_INT&, F77_INT*,
+                             F77_INT&);
 
   F77_RET_T
   F77_FUNC (dpotrf, DPOTRF) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, double *,
-                             const octave_idx_type&, octave_idx_type&
+                             const F77_INT&, F77_DBLE *,
+                             const F77_INT&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (dpocon, DPOCON) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, double*,
-                             const octave_idx_type&, const double&,
-                             double&, double*, octave_idx_type*,
-                             octave_idx_type&
+                             const F77_INT&, F77_DBLE*,
+                             const F77_INT&, const F77_DBLE&,
+                             F77_DBLE&, F77_DBLE*, F77_INT*,
+                             F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
   F77_RET_T
   F77_FUNC (dpotrs, DPOTRS) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&,
-                             const double*, const octave_idx_type&, double*,
-                             const octave_idx_type&, octave_idx_type&
+                             const F77_INT&, const F77_INT&,
+                             const F77_DBLE*, const F77_INT&, F77_DBLE*,
+                             const F77_INT&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (dtrtri, DTRTRI) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const double*,
-                             const octave_idx_type&, octave_idx_type&
+                             const F77_INT&, const F77_DBLE*,
+                             const F77_INT&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
   F77_RET_T
   F77_FUNC (dtrcon, DTRCON) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const double*,
-                             const octave_idx_type&, double&,
-                             double*, octave_idx_type*, octave_idx_type&
+                             const F77_INT&, const F77_DBLE*,
+                             const F77_INT&, F77_DBLE&,
+                             F77_DBLE*, F77_INT*, F77_INT&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
   F77_RET_T
   F77_FUNC (dtrtrs, DTRTRS) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&,
-                             const double*, const octave_idx_type&, double*,
-                             const octave_idx_type&, octave_idx_type&
+                             const F77_INT&, const F77_INT&,
+                             const F77_DBLE*, const F77_INT&, F77_DBLE*,
+                             const F77_INT&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (dlartg, DLARTG) (const double&, const double&, double&,
-                             double&, double&);
+  F77_FUNC (dlartg, DLARTG) (const F77_DBLE&, const F77_DBLE&, F77_DBLE&,
+                             F77_DBLE&, F77_DBLE&);
 
   F77_RET_T
   F77_FUNC (dtrsyl, DTRSYL) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, const double*,
-                             const octave_idx_type&, const double*,
-                             const octave_idx_type&, const double*,
-                             const octave_idx_type&, double&, octave_idx_type&
+                             const F77_INT&, const F77_INT&,
+                             const F77_INT&, const F77_DBLE*,
+                             const F77_INT&, const F77_DBLE*,
+                             const F77_INT&, const F77_DBLE*,
+                             const F77_INT&, F77_DBLE&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (xdlange, XDLANGE) (F77_CONST_CHAR_ARG_DECL,
-                               const octave_idx_type&, const octave_idx_type&,
-                               const double*, const octave_idx_type&,
-                               double*, double&
+                               const F77_INT&, const F77_INT&,
+                               const F77_DBLE*, const F77_INT&,
+                               F77_DBLE*, F77_DBLE&
                                F77_CHAR_ARG_LEN_DECL);
 }
 
 // Matrix class.
 
 Matrix::Matrix (const RowVector& rv)
   : NDArray (rv)
 {
@@ -948,23 +948,23 @@ Matrix::ifourier2d (void) const
 extern "C"
 {
   // Note that the original complex fft routines were not written for
   // double complex arguments.  They have been modified by adding an
   // implicit double precision (a-h,o-z) statement at the beginning of
   // each subroutine.
 
   F77_RET_T
-  F77_FUNC (zffti, ZFFTI) (const octave_idx_type&, Complex*);
+  F77_FUNC (zffti, ZFFTI) (const F77_INT&, F77_DBLE_CMPLX*);
 
   F77_RET_T
-  F77_FUNC (zfftf, ZFFTF) (const octave_idx_type&, Complex*, Complex*);
+  F77_FUNC (zfftf, ZFFTF) (const F77_INT&, F77_DBLE_CMPLX*, F77_DBLE_CMPLX*);
 
   F77_RET_T
-  F77_FUNC (zfftb, ZFFTB) (const octave_idx_type&, Complex*, Complex*);
+  F77_FUNC (zfftb, ZFFTB) (const F77_INT&, F77_DBLE_CMPLX*, F77_DBLE_CMPLX*);
 }
 
 ComplexMatrix
 Matrix::fourier (void) const
 {
   ComplexMatrix retval;
 
   octave_idx_type nr = rows ();
diff --git a/liboctave/array/dNDArray.cc b/liboctave/array/dNDArray.cc
--- a/liboctave/array/dNDArray.cc
+++ b/liboctave/array/dNDArray.cc
@@ -232,23 +232,23 @@ NDArray::ifourierNd (void) const
 extern "C"
 {
   // Note that the original complex fft routines were not written for
   // double complex arguments.  They have been modified by adding an
   // implicit double precision (a-h,o-z) statement at the beginning of
   // each subroutine.
 
   F77_RET_T
-  F77_FUNC (zffti, ZFFTI) (const octave_idx_type&, Complex*);
+  F77_FUNC (zffti, ZFFTI) (const F77_INT&, F77_DBLE_CMPLX*);
 
   F77_RET_T
-  F77_FUNC (zfftf, ZFFTF) (const octave_idx_type&, Complex*, Complex*);
+  F77_FUNC (zfftf, ZFFTF) (const F77_INT&, F77_DBLE_CMPLX*, F77_DBLE_CMPLX*);
 
   F77_RET_T
-  F77_FUNC (zfftb, ZFFTB) (const octave_idx_type&, Complex*, Complex*);
+  F77_FUNC (zfftb, ZFFTB) (const F77_INT&, F77_DBLE_CMPLX*, F77_DBLE_CMPLX*);
 }
 
 ComplexNDArray
 NDArray::fourier (int dim) const
 {
   dim_vector dv = dims ();
 
   if (dim > dv.ndims () || dim < 0)
diff --git a/liboctave/array/dRowVector.cc b/liboctave/array/dRowVector.cc
--- a/liboctave/array/dRowVector.cc
+++ b/liboctave/array/dRowVector.cc
@@ -36,26 +36,26 @@ along with Octave; see the file COPYING.
 #include "oct-cmplx.h"
 
 // Fortran functions we call.
 
 extern "C"
 {
   F77_RET_T
   F77_FUNC (dgemv, DGEMV) (F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, const octave_idx_type&,
-                           const double&, const double*,
-                           const octave_idx_type&, const double*,
-                           const octave_idx_type&, const double&,
-                           double*, const octave_idx_type&
+                           const F77_INT&, const F77_INT&,
+                           const F77_DBLE&, const F77_DBLE*,
+                           const F77_INT&, const F77_DBLE*,
+                           const F77_INT&, const F77_DBLE&,
+                           F77_DBLE*, const F77_INT&
                            F77_CHAR_ARG_LEN_DECL);
   F77_RET_T
-  F77_FUNC (xddot, XDDOT) (const octave_idx_type&, const double*,
-                           const octave_idx_type&, const double*,
-                           const octave_idx_type&, double&);
+  F77_FUNC (xddot, XDDOT) (const F77_INT&, const F77_DBLE*,
+                           const F77_INT&, const F77_DBLE*,
+                           const F77_INT&, F77_DBLE&);
 }
 
 // Row Vector class.
 
 bool
 RowVector::operator == (const RowVector& a) const
 {
   octave_idx_type len = numel ();
diff --git a/liboctave/array/dSparse.cc b/liboctave/array/dSparse.cc
--- a/liboctave/array/dSparse.cc
+++ b/liboctave/array/dSparse.cc
@@ -64,92 +64,92 @@ along with Octave; see the file COPYING.
 #if ! defined (USE_QRSOLVE)
 #  include "sparse-dmsolve.h"
 #endif
 
 // Fortran functions we call.
 extern "C"
 {
   F77_RET_T
-  F77_FUNC (dgbtrf, DGBTRF) (const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, const octave_idx_type&,
-                             double*, const octave_idx_type&,
-                             octave_idx_type*, octave_idx_type&);
+  F77_FUNC (dgbtrf, DGBTRF) (const F77_INT&, const F77_INT&,
+                             const F77_INT&, const F77_INT&,
+                             F77_DBLE*, const F77_INT&,
+                             F77_INT*, F77_INT&);
 
   F77_RET_T
   F77_FUNC (dgbtrs, DGBTRS) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, const octave_idx_type&,
-                             const double*, const octave_idx_type&,
-                             const octave_idx_type*, double*,
-                             const octave_idx_type&, octave_idx_type&
+                             const F77_INT&, const F77_INT&,
+                             const F77_INT&, const F77_INT&,
+                             const F77_DBLE*, const F77_INT&,
+                             const F77_INT*, F77_DBLE*,
+                             const F77_INT&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (dgbcon, DGBCON) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, double*,
-                             const octave_idx_type&, const octave_idx_type*,
-                             const double&, double&, double*,
-                             octave_idx_type*, octave_idx_type&
+                             const F77_INT&, const F77_INT&,
+                             const F77_INT&, F77_DBLE*,
+                             const F77_INT&, const F77_INT*,
+                             const F77_DBLE&, F77_DBLE&, F77_DBLE*,
+                             F77_INT*, F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (dpbtrf, DPBTRF) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&,
-                             double*, const octave_idx_type&, octave_idx_type&
+                             const F77_INT&, const F77_INT&,
+                             F77_DBLE*, const F77_INT&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (dpbtrs, DPBTRS) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, double*,
-                             const octave_idx_type&, double*,
-                             const octave_idx_type&, octave_idx_type&
+                             const F77_INT&, const F77_INT&,
+                             const F77_INT&, F77_DBLE*,
+                             const F77_INT&, F77_DBLE*,
+                             const F77_INT&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (dpbcon, DPBCON) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&,
-                             double*, const octave_idx_type&,
-                             const double&, double&, double*,
-                             octave_idx_type*, octave_idx_type&
+                             const F77_INT&, const F77_INT&,
+                             F77_DBLE*, const F77_INT&,
+                             const F77_DBLE&, F77_DBLE&, F77_DBLE*,
+                             F77_INT*, F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
   F77_RET_T
-  F77_FUNC (dptsv, DPTSV) (const octave_idx_type&, const octave_idx_type&,
-                           double*, double*, double*, const octave_idx_type&,
-                           octave_idx_type&);
+  F77_FUNC (dptsv, DPTSV) (const F77_INT&, const F77_INT&,
+                           F77_DBLE*, F77_DBLE*, F77_DBLE*, const F77_INT&,
+                           F77_INT&);
 
   F77_RET_T
-  F77_FUNC (dgtsv, DGTSV) (const octave_idx_type&, const octave_idx_type&,
-                           double*, double*, double*, double*,
-                           const octave_idx_type&, octave_idx_type&);
+  F77_FUNC (dgtsv, DGTSV) (const F77_INT&, const F77_INT&,
+                           F77_DBLE*, F77_DBLE*, F77_DBLE*, F77_DBLE*,
+                           const F77_INT&, F77_INT&);
 
   F77_RET_T
-  F77_FUNC (dgttrf, DGTTRF) (const octave_idx_type&, double*, double*,
-                             double*, double*, octave_idx_type*,
-                             octave_idx_type&);
+  F77_FUNC (dgttrf, DGTTRF) (const F77_INT&, F77_DBLE*, F77_DBLE*,
+                             F77_DBLE*, F77_DBLE*, F77_INT*,
+                             F77_INT&);
 
   F77_RET_T
   F77_FUNC (dgttrs, DGTTRS) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&,
-                             const double*, const double*, const double*,
-                             const double*, const octave_idx_type*,
-                             double *, const octave_idx_type&, octave_idx_type&
+                             const F77_INT&, const F77_INT&,
+                             const F77_DBLE*, const F77_DBLE*, const F77_DBLE*,
+                             const F77_DBLE*, const F77_INT*,
+                             F77_DBLE *, const F77_INT&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (zptsv, ZPTSV) (const octave_idx_type&, const octave_idx_type&,
-                           double*, Complex*, Complex*, const octave_idx_type&,
-                           octave_idx_type&);
+  F77_FUNC (zptsv, ZPTSV) (const F77_INT&, const F77_INT&,
+                           F77_DBLE*, F77_DBLE_CMPLX*, F77_DBLE_CMPLX*, const F77_INT&,
+                           F77_INT&);
 
   F77_RET_T
-  F77_FUNC (zgtsv, ZGTSV) (const octave_idx_type&, const octave_idx_type&,
-                           Complex*, Complex*, Complex*, Complex*,
-                           const octave_idx_type&, octave_idx_type&);
+  F77_FUNC (zgtsv, ZGTSV) (const F77_INT&, const F77_INT&,
+                           F77_DBLE_CMPLX*, F77_DBLE_CMPLX*, F77_DBLE_CMPLX*, F77_DBLE_CMPLX*,
+                           const F77_INT&, F77_INT&);
 
 }
 
 SparseMatrix::SparseMatrix (const SparseBoolMatrix &a)
   : MSparse<double> (a.rows (), a.cols (), a.nnz ())
 {
   octave_idx_type nc = cols ();
   octave_idx_type nz = a.nnz ();
diff --git a/liboctave/array/fCColVector.cc b/liboctave/array/fCColVector.cc
--- a/liboctave/array/fCColVector.cc
+++ b/liboctave/array/fCColVector.cc
@@ -37,21 +37,21 @@ along with Octave; see the file COPYING.
 #include "oct-cmplx.h"
 
 // Fortran functions we call.
 
 extern "C"
 {
   F77_RET_T
   F77_FUNC (cgemv, CGEMV) (F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, const octave_idx_type&,
-                           const FloatComplex&, const FloatComplex*,
-                           const octave_idx_type&, const FloatComplex*,
-                           const octave_idx_type&, const FloatComplex&,
-                           FloatComplex*, const octave_idx_type&
+                           const F77_INT&, const F77_INT&,
+                           const F77_CMPLX&, const F77_CMPLX*,
+                           const F77_INT&, const F77_CMPLX*,
+                           const F77_INT&, const F77_CMPLX&,
+                           F77_CMPLX*, const F77_INT&
                            F77_CHAR_ARG_LEN_DECL);
 }
 
 // FloatComplex Column Vector class
 
 FloatComplexColumnVector::FloatComplexColumnVector (const FloatColumnVector& a)
   : MArray<FloatComplex> (a)
 {
diff --git a/liboctave/array/fCMatrix.cc b/liboctave/array/fCMatrix.cc
--- a/liboctave/array/fCMatrix.cc
+++ b/liboctave/array/fCMatrix.cc
@@ -63,208 +63,208 @@ along with Octave; see the file COPYING.
 #include "oct-locbuf.h"
 #include "oct-norm.h"
 
 // Fortran functions we call.
 
 extern "C"
 {
   F77_RET_T
-  F77_FUNC (xilaenv, XILAENV) (const octave_idx_type&,
+  F77_FUNC (xilaenv, XILAENV) (const F77_INT&,
                                F77_CONST_CHAR_ARG_DECL,
                                F77_CONST_CHAR_ARG_DECL,
-                               const octave_idx_type&, const octave_idx_type&,
-                               const octave_idx_type&, const octave_idx_type&,
-                               octave_idx_type&
+                               const F77_INT&, const F77_INT&,
+                               const F77_INT&, const F77_INT&,
+                               F77_INT&
                                F77_CHAR_ARG_LEN_DECL
                                F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (cgebal, CGEBAL) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, FloatComplex*,
-                             const octave_idx_type&, octave_idx_type&,
-                             octave_idx_type&, float*, octave_idx_type&
+                             const F77_INT&, F77_CMPLX*,
+                             const F77_INT&, F77_INT&,
+                             F77_INT&, F77_REAL*, F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (sgebak, SGEBAK) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, float*,
-                             const octave_idx_type&, float*,
-                             const octave_idx_type&, octave_idx_type&
+                             const F77_INT&, const F77_INT&,
+                             const F77_INT&, F77_REAL*,
+                             const F77_INT&, F77_REAL*,
+                             const F77_INT&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (cgemm, CGEMM) (F77_CONST_CHAR_ARG_DECL,
                            F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, const octave_idx_type&,
-                           const octave_idx_type&, const FloatComplex&,
-                           const FloatComplex*, const octave_idx_type&,
-                           const FloatComplex*, const octave_idx_type&,
-                           const FloatComplex&, FloatComplex*,
-                           const octave_idx_type&
+                           const F77_INT&, const F77_INT&,
+                           const F77_INT&, const F77_CMPLX&,
+                           const F77_CMPLX*, const F77_INT&,
+                           const F77_CMPLX*, const F77_INT&,
+                           const F77_CMPLX&, F77_CMPLX*,
+                           const F77_INT&
                            F77_CHAR_ARG_LEN_DECL
                            F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (cgemv, CGEMV) (F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, const octave_idx_type&,
-                           const FloatComplex&, const FloatComplex*,
-                           const octave_idx_type&, const FloatComplex*,
-                           const octave_idx_type&, const FloatComplex&,
-                           FloatComplex*, const octave_idx_type&
+                           const F77_INT&, const F77_INT&,
+                           const F77_CMPLX&, const F77_CMPLX*,
+                           const F77_INT&, const F77_CMPLX*,
+                           const F77_INT&, const F77_CMPLX&,
+                           F77_CMPLX*, const F77_INT&
                            F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (xcdotu, XCDOTU) (const octave_idx_type&, const FloatComplex*,
-                             const octave_idx_type&, const FloatComplex*,
-                             const octave_idx_type&, FloatComplex&);
+  F77_FUNC (xcdotu, XCDOTU) (const F77_INT&, const F77_CMPLX*,
+                             const F77_INT&, const F77_CMPLX*,
+                             const F77_INT&, F77_CMPLX&);
 
   F77_RET_T
-  F77_FUNC (xcdotc, XCDOTC) (const octave_idx_type&, const FloatComplex*,
-                             const octave_idx_type&, const FloatComplex*,
-                             const octave_idx_type&, FloatComplex&);
+  F77_FUNC (xcdotc, XCDOTC) (const F77_INT&, const F77_CMPLX*,
+                             const F77_INT&, const F77_CMPLX*,
+                             const F77_INT&, F77_CMPLX&);
 
   F77_RET_T
   F77_FUNC (csyrk, CSYRK) (F77_CONST_CHAR_ARG_DECL,
                            F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, const octave_idx_type&,
-                           const FloatComplex&, const FloatComplex*,
-                           const octave_idx_type&, const FloatComplex&,
-                           FloatComplex*, const octave_idx_type&
+                           const F77_INT&, const F77_INT&,
+                           const F77_CMPLX&, const F77_CMPLX*,
+                           const F77_INT&, const F77_CMPLX&,
+                           F77_CMPLX*, const F77_INT&
                            F77_CHAR_ARG_LEN_DECL
                            F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (cherk, CHERK) (F77_CONST_CHAR_ARG_DECL,
                            F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, const octave_idx_type&,
-                           const float&, const FloatComplex*,
-                           const octave_idx_type&, const float&,
-                           FloatComplex*, const octave_idx_type&
+                           const F77_INT&, const F77_INT&,
+                           const F77_REAL&, const F77_CMPLX*,
+                           const F77_INT&, const F77_REAL&,
+                           F77_CMPLX*, const F77_INT&
                            F77_CHAR_ARG_LEN_DECL
                            F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (cgetrf, CGETRF) (const octave_idx_type&, const octave_idx_type&,
-                             FloatComplex*, const octave_idx_type&,
-                             octave_idx_type*, octave_idx_type&);
+  F77_FUNC (cgetrf, CGETRF) (const F77_INT&, const F77_INT&,
+                             F77_CMPLX*, const F77_INT&,
+                             F77_INT*, F77_INT&);
 
   F77_RET_T
   F77_FUNC (cgetrs, CGETRS) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&,
-                             FloatComplex*, const octave_idx_type&,
-                             const octave_idx_type*, FloatComplex*,
-                             const octave_idx_type&, octave_idx_type&
+                             const F77_INT&, const F77_INT&,
+                             F77_CMPLX*, const F77_INT&,
+                             const F77_INT*, F77_CMPLX*,
+                             const F77_INT&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (cgetri, CGETRI) (const octave_idx_type&, FloatComplex*,
-                             const octave_idx_type&, const octave_idx_type*,
-                             FloatComplex*, const octave_idx_type&,
-                             octave_idx_type&);
+  F77_FUNC (cgetri, CGETRI) (const F77_INT&, F77_CMPLX*,
+                             const F77_INT&, const F77_INT*,
+                             F77_CMPLX*, const F77_INT&,
+                             F77_INT&);
 
   F77_RET_T
   F77_FUNC (cgecon, CGECON) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, FloatComplex*,
-                             const octave_idx_type&, const float&, float&,
-                             FloatComplex*, float*, octave_idx_type&
+                             const F77_INT&, F77_CMPLX*,
+                             const F77_INT&, const F77_REAL&, F77_REAL&,
+                             F77_CMPLX*, F77_REAL*, F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (cgelsy, CGELSY) (const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, FloatComplex*,
-                             const octave_idx_type&, FloatComplex*,
-                             const octave_idx_type&, octave_idx_type*,
-                             float&, octave_idx_type&, FloatComplex*,
-                             const octave_idx_type&, float*, octave_idx_type&);
+  F77_FUNC (cgelsy, CGELSY) (const F77_INT&, const F77_INT&,
+                             const F77_INT&, F77_CMPLX*,
+                             const F77_INT&, F77_CMPLX*,
+                             const F77_INT&, F77_INT*,
+                             F77_REAL&, F77_INT&, F77_CMPLX*,
+                             const F77_INT&, F77_REAL*, F77_INT&);
 
   F77_RET_T
-  F77_FUNC (cgelsd, CGELSD) (const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, FloatComplex*,
-                             const octave_idx_type&, FloatComplex*,
-                             const octave_idx_type&, float*, float&,
-                             octave_idx_type&, FloatComplex*,
-                             const octave_idx_type&, float*,
-                             octave_idx_type*, octave_idx_type&);
+  F77_FUNC (cgelsd, CGELSD) (const F77_INT&, const F77_INT&,
+                             const F77_INT&, F77_CMPLX*,
+                             const F77_INT&, F77_CMPLX*,
+                             const F77_INT&, F77_REAL*, F77_REAL&,
+                             F77_INT&, F77_CMPLX*,
+                             const F77_INT&, F77_REAL*,
+                             F77_INT*, F77_INT&);
 
   F77_RET_T
   F77_FUNC (cpotrf, CPOTRF) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, FloatComplex*,
-                             const octave_idx_type&, octave_idx_type&
+                             const F77_INT&, F77_CMPLX*,
+                             const F77_INT&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (cpocon, CPOCON) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, FloatComplex*,
-                             const octave_idx_type&, const float&, float&,
-                             FloatComplex*, float*, octave_idx_type&
+                             const F77_INT&, F77_CMPLX*,
+                             const F77_INT&, const F77_REAL&, F77_REAL&,
+                             F77_CMPLX*, F77_REAL*, F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (cpotrs, CPOTRS) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&,
-                             const octave_idx_type&, const FloatComplex*,
-                             const octave_idx_type&, FloatComplex*,
-                             const octave_idx_type&, octave_idx_type&
+                             const F77_INT&,
+                             const F77_INT&, const F77_CMPLX*,
+                             const F77_INT&, F77_CMPLX*,
+                             const F77_INT&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (ctrtri, CTRTRI) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const FloatComplex*,
-                             const octave_idx_type&, octave_idx_type&
+                             const F77_INT&, const F77_CMPLX*,
+                             const F77_INT&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (ctrcon, CTRCON) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const FloatComplex*,
-                             const octave_idx_type&, float&, FloatComplex*,
-                             float*, octave_idx_type&
+                             const F77_INT&, const F77_CMPLX*,
+                             const F77_INT&, F77_REAL&, F77_CMPLX*,
+                             F77_REAL*, F77_INT&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (ctrtrs, CTRTRS) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&,
-                             const FloatComplex*, const octave_idx_type&,
-                             FloatComplex*, const octave_idx_type&,
-                             octave_idx_type&
+                             const F77_INT&, const F77_INT&,
+                             const F77_CMPLX*, const F77_INT&,
+                             F77_CMPLX*, const F77_INT&,
+                             F77_INT&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (clartg, CLARTG) (const FloatComplex&, const FloatComplex&,
-                             float&, FloatComplex&, FloatComplex&);
+  F77_FUNC (clartg, CLARTG) (const F77_CMPLX&, const F77_CMPLX&,
+                             F77_REAL&, F77_CMPLX&, F77_CMPLX&);
 
   F77_RET_T
   F77_FUNC (ctrsyl, CTRSYL) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, const FloatComplex*,
-                             const octave_idx_type&, const FloatComplex*,
-                             const octave_idx_type&, const FloatComplex*,
-                             const octave_idx_type&, float&, octave_idx_type&
+                             const F77_INT&, const F77_INT&,
+                             const F77_INT&, const F77_CMPLX*,
+                             const F77_INT&, const F77_CMPLX*,
+                             const F77_INT&, const F77_CMPLX*,
+                             const F77_INT&, F77_REAL&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (xclange, XCLANGE) (F77_CONST_CHAR_ARG_DECL,
-                               const octave_idx_type&, const octave_idx_type&,
-                               const FloatComplex*, const octave_idx_type&,
-                               float*, float&
+                               const F77_INT&, const F77_INT&,
+                               const F77_CMPLX*, const F77_INT&,
+                               F77_REAL*, F77_REAL&
                                F77_CHAR_ARG_LEN_DECL);
 }
 
 static const FloatComplex FloatComplex_NaN_result (octave::numeric_limits<float>::NaN (),
                                                    octave::numeric_limits<float>::NaN ());
 
 // FloatComplex Matrix class
 
@@ -1268,25 +1268,23 @@ FloatComplexMatrix::ifourier2d (void) co
   return retval;
 }
 
 #else
 
 extern "C"
 {
   F77_RET_T
-  F77_FUNC (cffti, CFFTI) (const octave_idx_type&, FloatComplex*);
+  F77_FUNC (cffti, CFFTI) (const F77_INT&, F77_CMPLX*);
 
   F77_RET_T
-  F77_FUNC (cfftf, CFFTF) (const octave_idx_type&, FloatComplex*,
-                           FloatComplex*);
+  F77_FUNC (cfftf, CFFTF) (const F77_INT&, F77_CMPLX*, F77_CMPLX*);
 
   F77_RET_T
-  F77_FUNC (cfftb, CFFTB) (const octave_idx_type&, FloatComplex*,
-                           FloatComplex*);
+  F77_FUNC (cfftb, CFFTB) (const F77_INT&, F77_CMPLX*, F77_CMPLX*);
 }
 
 FloatComplexMatrix
 FloatComplexMatrix::fourier (void) const
 {
   FloatComplexMatrix retval;
 
   octave_idx_type nr = rows ();
diff --git a/liboctave/array/fCNDArray.cc b/liboctave/array/fCNDArray.cc
--- a/liboctave/array/fCNDArray.cc
+++ b/liboctave/array/fCNDArray.cc
@@ -186,25 +186,25 @@ FloatComplexNDArray::ifourierNd (void) c
   return retval;
 }
 
 #else
 
 extern "C"
 {
   F77_RET_T
-  F77_FUNC (cffti, CFFTI) (const octave_idx_type&, FloatComplex*);
+  F77_FUNC (cffti, CFFTI) (const F77_INT&, F77_CMPLX*);
 
   F77_RET_T
-  F77_FUNC (cfftf, CFFTF) (const octave_idx_type&, FloatComplex*,
-                           FloatComplex*);
+  F77_FUNC (cfftf, CFFTF) (const F77_INT&, F77_CMPLX*,
+                           F77_CMPLX*);
 
   F77_RET_T
-  F77_FUNC (cfftb, CFFTB) (const octave_idx_type&, FloatComplex*,
-                           FloatComplex*);
+  F77_FUNC (cfftb, CFFTB) (const F77_INT&, F77_CMPLX*,
+                           F77_CMPLX*);
 }
 
 FloatComplexNDArray
 FloatComplexNDArray::fourier (int dim) const
 {
   dim_vector dv = dims ();
 
   if (dim > dv.ndims () || dim < 0)
diff --git a/liboctave/array/fCRowVector.cc b/liboctave/array/fCRowVector.cc
--- a/liboctave/array/fCRowVector.cc
+++ b/liboctave/array/fCRowVector.cc
@@ -36,27 +36,27 @@ along with Octave; see the file COPYING.
 #include "oct-cmplx.h"
 
 // Fortran functions we call.
 
 extern "C"
 {
   F77_RET_T
   F77_FUNC (cgemv, CGEMV) (F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, const octave_idx_type&,
-                           const FloatComplex&, const FloatComplex*,
-                           const octave_idx_type&, const FloatComplex*,
-                           const octave_idx_type&, const FloatComplex&,
-                           FloatComplex*, const octave_idx_type&
+                           const F77_INT&, const F77_INT&,
+                           const F77_CMPLX&, const F77_CMPLX*,
+                           const F77_INT&, const F77_CMPLX*,
+                           const F77_INT&, const F77_CMPLX&,
+                           F77_CMPLX*, const F77_INT&
                            F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (xcdotu, XCDOTU) (const octave_idx_type&, const FloatComplex*,
-                             const octave_idx_type&, const FloatComplex*,
-                             const octave_idx_type&, FloatComplex&);
+  F77_FUNC (xcdotu, XCDOTU) (const F77_INT&, const F77_CMPLX*,
+                             const F77_INT&, const F77_CMPLX*,
+                             const F77_INT&, F77_CMPLX&);
 }
 
 // FloatComplex Row Vector class
 
 bool
 FloatComplexRowVector::operator == (const FloatComplexRowVector& a) const
 {
   octave_idx_type len = numel ();
diff --git a/liboctave/array/fColVector.cc b/liboctave/array/fColVector.cc
--- a/liboctave/array/fColVector.cc
+++ b/liboctave/array/fColVector.cc
@@ -37,20 +37,20 @@ along with Octave; see the file COPYING.
 #include "oct-cmplx.h"
 
 // Fortran functions we call.
 
 extern "C"
 {
   F77_RET_T
   F77_FUNC (sgemv, SGEMV) (F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, const octave_idx_type&,
-                           const float&, const float*, const octave_idx_type&,
-                           const float*, const octave_idx_type&, const float&,
-                           float*, const octave_idx_type&
+                           const F77_INT&, const F77_INT&,
+                           const F77_REAL&, const F77_REAL*, const F77_INT&,
+                           const F77_REAL*, const F77_INT&, const F77_REAL&,
+                           F77_REAL*, const F77_INT&
                            F77_CHAR_ARG_LEN_DECL);
 }
 
 // Column Vector class.
 
 bool
 FloatColumnVector::operator == (const FloatColumnVector& a) const
 {
diff --git a/liboctave/array/fMatrix.cc b/liboctave/array/fMatrix.cc
--- a/liboctave/array/fMatrix.cc
+++ b/liboctave/array/fMatrix.cc
@@ -65,188 +65,188 @@ along with Octave; see the file COPYING.
 #include "oct-norm.h"
 #include "quit.h"
 
 // Fortran functions we call.
 
 extern "C"
 {
   F77_RET_T
-  F77_FUNC (xilaenv, XILAENV) (const octave_idx_type&,
+  F77_FUNC (xilaenv, XILAENV) (const F77_INT&,
                                F77_CONST_CHAR_ARG_DECL,
                                F77_CONST_CHAR_ARG_DECL,
-                               const octave_idx_type&, const octave_idx_type&,
-                               const octave_idx_type&, const octave_idx_type&,
-                               octave_idx_type&
+                               const F77_INT&, const F77_INT&,
+                               const F77_INT&, const F77_INT&,
+                               F77_INT&
                                F77_CHAR_ARG_LEN_DECL
                                F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (sgebal, SGEBAL) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, float*,
-                             const octave_idx_type&, octave_idx_type&,
-                             octave_idx_type&, float*, octave_idx_type&
+                             const F77_INT&, F77_REAL*,
+                             const F77_INT&, F77_INT&,
+                             F77_INT&, F77_REAL*, F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (sgebak, SGEBAK) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, float*,
-                             const octave_idx_type&, float*,
-                             const octave_idx_type&, octave_idx_type&
+                             const F77_INT&, const F77_INT&,
+                             const F77_INT&, F77_REAL*,
+                             const F77_INT&, F77_REAL*,
+                             const F77_INT&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (sgemm, SGEMM) (F77_CONST_CHAR_ARG_DECL,
                            F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, const octave_idx_type&,
-                           const octave_idx_type&, const float&, const float*,
-                           const octave_idx_type&, const float*,
-                           const octave_idx_type&, const float&, float*,
-                           const octave_idx_type&
+                           const F77_INT&, const F77_INT&,
+                           const F77_INT&, const F77_REAL&, const F77_REAL*,
+                           const F77_INT&, const F77_REAL*,
+                           const F77_INT&, const F77_REAL&, F77_REAL*,
+                           const F77_INT&
                            F77_CHAR_ARG_LEN_DECL
                            F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (sgemv, SGEMV) (F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, const octave_idx_type&,
-                           const float&, const float*,
-                           const octave_idx_type&, const float*,
-                           const octave_idx_type&, const float&, float*,
-                           const octave_idx_type&
+                           const F77_INT&, const F77_INT&,
+                           const F77_REAL&, const F77_REAL*,
+                           const F77_INT&, const F77_REAL*,
+                           const F77_INT&, const F77_REAL&, F77_REAL*,
+                           const F77_INT&
                            F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (xsdot, XSDOT) (const octave_idx_type&, const float*,
-                           const octave_idx_type&, const float*,
-                           const octave_idx_type&, float&);
+  F77_FUNC (xsdot, XSDOT) (const F77_INT&, const F77_REAL*,
+                           const F77_INT&, const F77_REAL*,
+                           const F77_INT&, F77_REAL&);
 
   F77_RET_T
   F77_FUNC (ssyrk, SSYRK) (F77_CONST_CHAR_ARG_DECL,
                            F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, const octave_idx_type&,
-                           const float&, const float*, const octave_idx_type&,
-                           const float&, float*, const octave_idx_type&
+                           const F77_INT&, const F77_INT&,
+                           const F77_REAL&, const F77_REAL*, const F77_INT&,
+                           const F77_REAL&, F77_REAL*, const F77_INT&
                            F77_CHAR_ARG_LEN_DECL
                            F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (sgetrf, SGETRF) (const octave_idx_type&,
-                             const octave_idx_type&, float*,
-                             const octave_idx_type&,
-                             octave_idx_type*, octave_idx_type&);
+  F77_FUNC (sgetrf, SGETRF) (const F77_INT&,
+                             const F77_INT&, F77_REAL*,
+                             const F77_INT&,
+                             F77_INT*, F77_INT&);
 
   F77_RET_T
   F77_FUNC (sgetrs, SGETRS) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&,
-                             const float*, const octave_idx_type&,
-                             const octave_idx_type*, float*,
-                             const octave_idx_type&, octave_idx_type&
+                             const F77_INT&, const F77_INT&,
+                             const F77_REAL*, const F77_INT&,
+                             const F77_INT*, F77_REAL*,
+                             const F77_INT&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (sgetri, SGETRI) (const octave_idx_type&, float*,
-                             const octave_idx_type&, const octave_idx_type*,
-                             float*, const octave_idx_type&, octave_idx_type&);
+  F77_FUNC (sgetri, SGETRI) (const F77_INT&, F77_REAL*,
+                             const F77_INT&, const F77_INT*,
+                             F77_REAL*, const F77_INT&, F77_INT&);
 
   F77_RET_T
   F77_FUNC (sgecon, SGECON) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, float*,
-                             const octave_idx_type&, const float&, float&,
-                             float*, octave_idx_type*, octave_idx_type&
+                             const F77_INT&, F77_REAL*,
+                             const F77_INT&, const F77_REAL&, F77_REAL&,
+                             F77_REAL*, F77_INT*, F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (sgelsy, SGELSY) (const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, float*,
-                             const octave_idx_type&, float*,
-                             const octave_idx_type&, octave_idx_type*,
-                             float&, octave_idx_type&, float*,
-                             const octave_idx_type&, octave_idx_type&);
+  F77_FUNC (sgelsy, SGELSY) (const F77_INT&, const F77_INT&,
+                             const F77_INT&, F77_REAL*,
+                             const F77_INT&, F77_REAL*,
+                             const F77_INT&, F77_INT*,
+                             F77_REAL&, F77_INT&, F77_REAL*,
+                             const F77_INT&, F77_INT&);
 
   F77_RET_T
-  F77_FUNC (sgelsd, SGELSD) (const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, float*,
-                             const octave_idx_type&, float*,
-                             const octave_idx_type&, float*, float&,
-                             octave_idx_type&, float*,
-                             const octave_idx_type&, octave_idx_type*,
-                             octave_idx_type&);
+  F77_FUNC (sgelsd, SGELSD) (const F77_INT&, const F77_INT&,
+                             const F77_INT&, F77_REAL*,
+                             const F77_INT&, F77_REAL*,
+                             const F77_INT&, F77_REAL*, F77_REAL&,
+                             F77_INT&, F77_REAL*,
+                             const F77_INT&, F77_INT*,
+                             F77_INT&);
 
   F77_RET_T
   F77_FUNC (spotrf, SPOTRF) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, float *,
-                             const octave_idx_type&, octave_idx_type&
+                             const F77_INT&, F77_REAL *,
+                             const F77_INT&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (spocon, SPOCON) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, float*,
-                             const octave_idx_type&, const float&,
-                             float&, float*, octave_idx_type*,
-                             octave_idx_type&
+                             const F77_INT&, F77_REAL*,
+                             const F77_INT&, const F77_REAL&,
+                             F77_REAL&, F77_REAL*, F77_INT*,
+                             F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
   F77_RET_T
   F77_FUNC (spotrs, SPOTRS) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&,
-                             const float*, const octave_idx_type&, float*,
-                             const octave_idx_type&, octave_idx_type&
+                             const F77_INT&, const F77_INT&,
+                             const F77_REAL*, const F77_INT&, F77_REAL*,
+                             const F77_INT&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (strtri, STRTRI) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const float*,
-                             const octave_idx_type&, octave_idx_type&
+                             const F77_INT&, const F77_REAL*,
+                             const F77_INT&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
   F77_RET_T
   F77_FUNC (strcon, STRCON) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const float*,
-                             const octave_idx_type&, float&,
-                             float*, octave_idx_type*, octave_idx_type&
+                             const F77_INT&, const F77_REAL*,
+                             const F77_INT&, F77_REAL&,
+                             F77_REAL*, F77_INT*, F77_INT&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
   F77_RET_T
   F77_FUNC (strtrs, STRTRS) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&,
-                             const octave_idx_type&, const float*,
-                             const octave_idx_type&, float*,
-                             const octave_idx_type&, octave_idx_type&
+                             const F77_INT&,
+                             const F77_INT&, const F77_REAL*,
+                             const F77_INT&, F77_REAL*,
+                             const F77_INT&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (slartg, SLARTG) (const float&, const float&, float&,
-                             float&, float&);
+  F77_FUNC (slartg, SLARTG) (const F77_REAL&, const F77_REAL&, F77_REAL&,
+                             F77_REAL&, F77_REAL&);
 
   F77_RET_T
   F77_FUNC (strsyl, STRSYL) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, const float*,
-                             const octave_idx_type&, const float*,
-                             const octave_idx_type&, const float*,
-                             const octave_idx_type&, float&, octave_idx_type&
+                             const F77_INT&, const F77_INT&,
+                             const F77_INT&, const F77_REAL*,
+                             const F77_INT&, const F77_REAL*,
+                             const F77_INT&, const F77_REAL*,
+                             const F77_INT&, F77_REAL&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (xslange, XSLANGE) (F77_CONST_CHAR_ARG_DECL,
-                               const octave_idx_type&,
-                               const octave_idx_type&, const float*,
-                               const octave_idx_type&, float*, float&
+                               const F77_INT&,
+                               const F77_INT&, const F77_REAL*,
+                               const F77_INT&, F77_REAL*, F77_REAL&
                                F77_CHAR_ARG_LEN_DECL);
 }
 
 // Matrix class.
 
 FloatMatrix::FloatMatrix (const FloatRowVector& rv)
   : FloatNDArray (rv)
 {
@@ -955,25 +955,23 @@ FloatMatrix::ifourier2d (void) const
 extern "C"
 {
   // Note that the original complex fft routines were not written for
   // float complex arguments.  They have been modified by adding an
   // implicit float precision (a-h,o-z) statement at the beginning of
   // each subroutine.
 
   F77_RET_T
-  F77_FUNC (cffti, CFFTI) (const octave_idx_type&, FloatComplex*);
+  F77_FUNC (cffti, CFFTI) (const F77_INT&, F77_CMPLX*);
 
   F77_RET_T
-  F77_FUNC (cfftf, CFFTF) (const octave_idx_type&, FloatComplex*,
-                           FloatComplex*);
+  F77_FUNC (cfftf, CFFTF) (const F77_INT&, F77_CMPLX*, F77_CMPLX*);
 
   F77_RET_T
-  F77_FUNC (cfftb, CFFTB) (const octave_idx_type&, FloatComplex*,
-                           FloatComplex*);
+  F77_FUNC (cfftb, CFFTB) (const F77_INT&, F77_CMPLX*, F77_CMPLX*);
 }
 
 FloatComplexMatrix
 FloatMatrix::fourier (void) const
 {
   FloatComplexMatrix retval;
 
   octave_idx_type nr = rows ();
diff --git a/liboctave/array/fNDArray.cc b/liboctave/array/fNDArray.cc
--- a/liboctave/array/fNDArray.cc
+++ b/liboctave/array/fNDArray.cc
@@ -190,25 +190,25 @@ FloatNDArray::ifourierNd (void) const
 extern "C"
 {
   // Note that the original complex fft routines were not written for
   // float complex arguments.  They have been modified by adding an
   // implicit float precision (a-h,o-z) statement at the beginning of
   // each subroutine.
 
   F77_RET_T
-  F77_FUNC (cffti, CFFTI) (const octave_idx_type&, FloatComplex*);
+  F77_FUNC (cffti, CFFTI) (const F77_INT&, F77_CMPLX*);
 
   F77_RET_T
-  F77_FUNC (cfftf, CFFTF) (const octave_idx_type&, FloatComplex*,
-                           FloatComplex*);
+  F77_FUNC (cfftf, CFFTF) (const F77_INT&, F77_CMPLX*,
+                           F77_CMPLX*);
 
   F77_RET_T
-  F77_FUNC (cfftb, CFFTB) (const octave_idx_type&, FloatComplex*,
-                           FloatComplex*);
+  F77_FUNC (cfftb, CFFTB) (const F77_INT&, F77_CMPLX*,
+                           F77_CMPLX*);
 }
 
 FloatComplexNDArray
 FloatNDArray::fourier (int dim) const
 {
   dim_vector dv = dims ();
 
   if (dim > dv.ndims () || dim < 0)
diff --git a/liboctave/array/fRowVector.cc b/liboctave/array/fRowVector.cc
--- a/liboctave/array/fRowVector.cc
+++ b/liboctave/array/fRowVector.cc
@@ -36,26 +36,26 @@ along with Octave; see the file COPYING.
 #include "oct-cmplx.h"
 
 // Fortran functions we call.
 
 extern "C"
 {
   F77_RET_T
   F77_FUNC (sgemv, SGEMV) (F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, const octave_idx_type&,
-                           const float&, const float*,
-                           const octave_idx_type&, const float*,
-                           const octave_idx_type&, const float&,
-                           float*, const octave_idx_type&
+                           const F77_INT&, const F77_INT&,
+                           const F77_REAL&, const F77_REAL*,
+                           const F77_INT&, const F77_REAL*,
+                           const F77_INT&, const F77_REAL&,
+                           F77_REAL*, const F77_INT&
                            F77_CHAR_ARG_LEN_DECL);
   F77_RET_T
-  F77_FUNC (xsdot, XSDOT) (const octave_idx_type&, const float*,
-                           const octave_idx_type&, const float*,
-                           const octave_idx_type&, float&);
+  F77_FUNC (xsdot, XSDOT) (const F77_INT&, const F77_REAL*,
+                           const F77_INT&, const F77_REAL*,
+                           const F77_INT&, F77_REAL&);
 }
 
 // Row Vector class.
 
 bool
 FloatRowVector::operator == (const FloatRowVector& a) const
 {
   octave_idx_type len = numel ();
diff --git a/liboctave/cruft/misc/f77-fcn.h b/liboctave/cruft/misc/f77-fcn.h
--- a/liboctave/cruft/misc/f77-fcn.h
+++ b/liboctave/cruft/misc/f77-fcn.h
@@ -108,20 +108,27 @@ Use these macros to write C-language fun
 Fortran-style character strings:
 
   F77_CHAR_ARG_DEF(s, len)
   F77_CONST_CHAR_ARG_DEF(s, len)
   F77_CHAR_ARG_LEN_DEF(len)
   F77_CHAR_ARG_USE(s)
   F77_CHAR_ARG_LEN_USE(s, len)
 
-Use this macro to declare the return type of a C-language function
-that is supposed to act like a Fortran subroutine:
+Use these macros for C++ code
 
-  F77_RET_T int
+  F77_INT         Equivalent to Fortran INTEGER type
+  F77_INT4        Equivalent to Fortran INTEGER*4 type
+  F77_DBLE        Equivalent to Fortran DOUBLE PRECISION type
+  F77_REAL        Equivalent to Fortran REAL type
+  F77_CMPLX       Equivalent to Fortran COMPLEX type
+  F77_DBLE_CMPLX  Equivalent to Fortran DOUBLE COMPLEX type
+  F77_LOGICAL     Equivalent to Fortran LOGICAL type
+  F77_RET_T       Return type of a C++ function that acts like a
+                  Fortran subroutine.
 
 Use these macros to return from C-language functions that are supposed
 to act like Fortran subroutines.  F77_NORETURN is intended to be used
 as the last statement of such a function that has been tagged with a
 "noreturn" attribute.  If the compiler supports the "noreturn"
 attribute or if F77_RET_T is void, then it should expand to nothing so
 that we avoid warnings about functions tagged as "noreturn"
 containing a return statement.  Otherwise, it should expand to a
@@ -153,18 +160,16 @@ not returning a value from a function de
 /* Use these macros to write C-language functions that accept
    Fortran-style character strings.  */
 #define F77_CHAR_ARG_DEF(s, len) octave_cray_ftn_ch_dsc s
 #define F77_CONST_CHAR_ARG_DEF(s, len) octave_cray_ftn_ch_dsc s
 #define F77_CHAR_ARG_LEN_DEF(len)
 #define F77_CHAR_ARG_USE(s) s.ptr
 #define F77_CHAR_ARG_LEN_USE(s, len) (s.mask.len >> 3)
 
-/* Use this macro to declare the return type of a C-language function
-   that is supposed to act like a Fortran subroutine.  */
 #define F77_RET_T int
 
 /* Use these macros to return from C-language functions that are
    supposed to act like Fortran subroutines.  F77_NORETURN is intended
    to be used as the last statement of such a function that has been
    tagged with a "noreturn" attribute.  */
 #define F77_RETURN(retval) return retval;
 #if defined (HAVE_OCTAVE_NORETURN_ATTR)
@@ -185,17 +190,17 @@ typedef union
     unsigned off : 6;
     unsigned len : 26;
     unsigned add : 32;
   } mask;
 } octave_cray_descriptor;
 
 typedef void *octave_cray_ftn_ch_dsc;
 
-#if defined (__cplusplus)
+ #if defined (__cplusplus)
 #  define OCTAVE_F77_FCN_INLINE inline
 #else
 #  define OCTAVE_F77_FCN_INLINE
 #endif
 
 static OCTAVE_F77_FCN_INLINE octave_cray_ftn_ch_dsc
 octave_make_cray_ftn_ch_dsc (char *ptr_arg, unsigned long len_arg)
 {
@@ -209,20 +214,18 @@ static OCTAVE_F77_FCN_INLINE octave_cray
 octave_make_cray_const_ftn_ch_dsc (const char *ptr_arg, unsigned long len_arg)
 {
   octave_cray_descriptor desc;
   desc.const_ptr = ptr_arg;
   desc.mask.len = len_arg << 3;
   return *((octave_cray_ftn_ch_dsc *) &desc);
 }
 
-#if defined (__cplusplus)
-#  undef OCTAVE_F77_FCN_INLINE
-#endif
-
+#undef OCTAVE_F77_FCN_INLINE
+  
 #elif defined (F77_USES_VISUAL_FORTRAN_CALLING_CONVENTION)
 
 /* Use these macros to pass character strings from C to Fortran.  */
 #define F77_CHAR_ARG(x) x, strlen (x)
 #define F77_CONST_CHAR_ARG(x) F77_CHAR_ARG (x)
 #define F77_CHAR_ARG2(x, l) x, l
 #define F77_CONST_CHAR_ARG2(x, l) F77_CHAR_ARG2 (x, l)
 #define F77_CXX_STRING_ARG(x) F77_CONST_CHAR_ARG2 (x.c_str (), x.length ())
@@ -268,16 +271,24 @@ octave_make_cray_const_ftn_ch_dsc (const
 #if defined (HAVE_OCTAVE_NORETURN_ATTR)
 #  define F77_NORETURN(retval)
 #else
 #  define F77_NORETURN(retval) return retval;
 #endif
 
 #endif
 
+#define F77_DBLE double
+#define F77_REAL float
+#define F77_DBLE_CMPLX Complex
+#define F77_CMPLX FloatComplex
+#define F77_INT octave_idx_type
+#define F77_INT4 int32_t
+#define F77_LOGICAL octave_idx_type
+
 /* Build a C string local variable CS from the Fortran string parameter S
    declared as F77_CHAR_ARG_DEF(s, len) or F77_CONST_CHAR_ARG_DEF(s, len).
    The string will be cleaned up at the end of the current block.
    Needs to include <cstring> and <vector>.  */
 
 #define F77_CSTRING(s, len, cs) \
  OCTAVE_LOCAL_BUFFER (char, cs, F77_CHAR_ARG_LEN_USE (s, len) + 1); \
  memcpy (cs, F77_CHAR_ARG_USE (s), F77_CHAR_ARG_LEN_USE (s, len)); \
diff --git a/liboctave/numeric/DASPK.cc b/liboctave/numeric/DASPK.cc
--- a/liboctave/numeric/DASPK.cc
+++ b/liboctave/numeric/DASPK.cc
@@ -51,23 +51,23 @@ typedef octave_idx_type (*daspk_psol_ptr
                                            double*, octave_idx_type*,
                                            double*, const double&,
                                            octave_idx_type&, double*,
                                            octave_idx_type*);
 
 extern "C"
 {
   F77_RET_T
-  F77_FUNC (ddaspk, DDASPK) (daspk_fcn_ptr, const octave_idx_type&,
-                             double&, double*, double*, double&,
-                             const octave_idx_type*, const double*,
-                             const double*, octave_idx_type&,
-                             double*, const octave_idx_type&,
-                             octave_idx_type*, const octave_idx_type&,
-                             const double*, const octave_idx_type*,
+  F77_FUNC (ddaspk, DDASPK) (daspk_fcn_ptr, const F77_INT&,
+                             F77_DBLE&, F77_DBLE*, F77_DBLE*, F77_DBLE&,
+                             const F77_INT*, const F77_DBLE*,
+                             const F77_DBLE*, F77_INT&,
+                             F77_DBLE*, const F77_INT&,
+                             F77_INT*, const F77_INT&,
+                             const F77_DBLE*, const F77_INT*,
                              daspk_jac_ptr, daspk_psol_ptr);
 }
 
 static DAEFunc::DAERHSFunc user_fun;
 static DAEFunc::DAEJacFunc user_jac;
 static octave_idx_type nn;
 
 static octave_idx_type
diff --git a/liboctave/numeric/DASRT.cc b/liboctave/numeric/DASRT.cc
--- a/liboctave/numeric/DASRT.cc
+++ b/liboctave/numeric/DASRT.cc
@@ -48,25 +48,25 @@ typedef octave_idx_type (*dasrt_constr_p
                                              const double&, const double*,
                                              const octave_idx_type&,
                                              double*, double*,
                                              octave_idx_type*);
 
 extern "C"
 {
   F77_RET_T
-  F77_FUNC (ddasrt, DDASRT) (dasrt_fcn_ptr, const octave_idx_type&,
-                             double&, double*, double*, const double&,
-                             octave_idx_type*, const double*,
-                             const double*, octave_idx_type&, double*,
-                             const octave_idx_type&, octave_idx_type*,
-                             const octave_idx_type&, double*,
-                             octave_idx_type*, dasrt_jac_ptr,
-                             dasrt_constr_ptr, const octave_idx_type&,
-                             octave_idx_type*);
+  F77_FUNC (ddasrt, DDASRT) (dasrt_fcn_ptr, const F77_INT&,
+                             F77_DBLE&, F77_DBLE*, F77_DBLE*, const F77_DBLE&,
+                             F77_INT*, const F77_DBLE*,
+                             const F77_DBLE*, F77_INT&, F77_DBLE*,
+                             const F77_INT&, F77_INT*,
+                             const F77_INT&, F77_DBLE*,
+                             F77_INT*, dasrt_jac_ptr,
+                             dasrt_constr_ptr, const F77_INT&,
+                             F77_INT*);
 }
 
 static DAEFunc::DAERHSFunc user_fsub;
 static DAEFunc::DAEJacFunc user_jsub;
 static DAERTFunc::DAERTConstrFunc user_csub;
 
 static octave_idx_type nn;
 
diff --git a/liboctave/numeric/DASSL.cc b/liboctave/numeric/DASSL.cc
--- a/liboctave/numeric/DASSL.cc
+++ b/liboctave/numeric/DASSL.cc
@@ -42,23 +42,23 @@ typedef octave_idx_type (*dassl_fcn_ptr)
 typedef octave_idx_type (*dassl_jac_ptr) (const double&, const double*,
                                           const double*, double*,
                                           const double&, double*,
                                           octave_idx_type*);
 
 extern "C"
 {
   F77_RET_T
-  F77_FUNC (ddassl, DDASSL) (dassl_fcn_ptr, const octave_idx_type&,
-                             double&, double*, double*, double&,
-                             const octave_idx_type*, const double*,
-                             const double*, octave_idx_type&,
-                             double*, const octave_idx_type&,
-                             octave_idx_type*, const octave_idx_type&,
-                             const double*, const octave_idx_type*,
+  F77_FUNC (ddassl, DDASSL) (dassl_fcn_ptr, const F77_INT&,
+                             F77_DBLE&, F77_DBLE*, F77_DBLE*, F77_DBLE&,
+                             const F77_INT*, const F77_DBLE*,
+                             const F77_DBLE*, F77_INT&,
+                             F77_DBLE*, const F77_INT&,
+                             F77_INT*, const F77_INT&,
+                             const F77_DBLE*, const F77_INT*,
                              dassl_jac_ptr);
 }
 
 static DAEFunc::DAERHSFunc user_fun;
 static DAEFunc::DAEJacFunc user_jac;
 
 static octave_idx_type nn;
 
diff --git a/liboctave/numeric/EIG.cc b/liboctave/numeric/EIG.cc
--- a/liboctave/numeric/EIG.cc
+++ b/liboctave/numeric/EIG.cc
@@ -29,112 +29,112 @@ along with Octave; see the file COPYING.
 #include "f77-fcn.h"
 #include "lo-error.h"
 
 extern "C"
 {
   F77_RET_T
   F77_FUNC (dgeev, DGEEV) (F77_CONST_CHAR_ARG_DECL,
                            F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, double*,
-                           const octave_idx_type&, double*, double*,
-                           double*, const octave_idx_type&, double*,
-                           const octave_idx_type&, double*,
-                           const octave_idx_type&, octave_idx_type&
+                           const F77_INT&, F77_DBLE*,
+                           const F77_INT&, F77_DBLE*, F77_DBLE*,
+                           F77_DBLE*, const F77_INT&, F77_DBLE*,
+                           const F77_INT&, F77_DBLE*,
+                           const F77_INT&, F77_INT&
                            F77_CHAR_ARG_LEN_DECL
                            F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (zgeev, ZGEEV) (F77_CONST_CHAR_ARG_DECL,
                            F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, Complex*,
-                           const octave_idx_type&, Complex*,
-                           Complex*, const octave_idx_type&, Complex*,
-                           const octave_idx_type&, Complex*,
-                           const octave_idx_type&, double*, octave_idx_type&
+                           const F77_INT&, F77_DBLE_CMPLX*,
+                           const F77_INT&, F77_DBLE_CMPLX*,
+                           F77_DBLE_CMPLX*, const F77_INT&, F77_DBLE_CMPLX*,
+                           const F77_INT&, F77_DBLE_CMPLX*,
+                           const F77_INT&, F77_DBLE*, F77_INT&
                            F77_CHAR_ARG_LEN_DECL
                            F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (dsyev, DSYEV) (F77_CONST_CHAR_ARG_DECL,
                            F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, double*,
-                           const octave_idx_type&, double*, double*,
-                           const octave_idx_type&, octave_idx_type&
+                           const F77_INT&, F77_DBLE*,
+                           const F77_INT&, F77_DBLE*, F77_DBLE*,
+                           const F77_INT&, F77_INT&
                            F77_CHAR_ARG_LEN_DECL
                            F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (zheev, ZHEEV) (F77_CONST_CHAR_ARG_DECL,
                            F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, Complex*,
-                           const octave_idx_type&, double*,
-                           Complex*, const octave_idx_type&, double*,
-                           octave_idx_type&
+                           const F77_INT&, F77_DBLE_CMPLX*,
+                           const F77_INT&, F77_DBLE*,
+                           F77_DBLE_CMPLX*, const F77_INT&, F77_DBLE*,
+                           F77_INT&
                            F77_CHAR_ARG_LEN_DECL
                            F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (dpotrf, DPOTRF) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, double*,
-                             const octave_idx_type&, octave_idx_type&
+                             const F77_INT&, F77_DBLE*,
+                             const F77_INT&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (zpotrf, ZPOTRF) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&,
-                             Complex*, const octave_idx_type&,
-                             octave_idx_type&
+                             const F77_INT&,
+                             F77_DBLE_CMPLX*, const F77_INT&,
+                             F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (dggev, DGGEV) (F77_CONST_CHAR_ARG_DECL,
                            F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&,
-                           double*, const octave_idx_type&,
-                           double*, const octave_idx_type&,
-                           double*, double*, double *, double*,
-                           const octave_idx_type&, double*,
-                           const octave_idx_type&, double*,
-                           const octave_idx_type&, octave_idx_type&
+                           const F77_INT&,
+                           F77_DBLE*, const F77_INT&,
+                           F77_DBLE*, const F77_INT&,
+                           F77_DBLE*, F77_DBLE*, F77_DBLE *, F77_DBLE*,
+                           const F77_INT&, F77_DBLE*,
+                           const F77_INT&, F77_DBLE*,
+                           const F77_INT&, F77_INT&
                            F77_CHAR_ARG_LEN_DECL
                            F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (dsygv, DSYGV) (const octave_idx_type&,
+  F77_FUNC (dsygv, DSYGV) (const F77_INT&,
                            F77_CONST_CHAR_ARG_DECL,
                            F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, double*,
-                           const octave_idx_type&, double*,
-                           const octave_idx_type&, double*, double*,
-                           const octave_idx_type&, octave_idx_type&
+                           const F77_INT&, F77_DBLE*,
+                           const F77_INT&, F77_DBLE*,
+                           const F77_INT&, F77_DBLE*, F77_DBLE*,
+                           const F77_INT&, F77_INT&
                            F77_CHAR_ARG_LEN_DECL
                            F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (zggev, ZGGEV) (F77_CONST_CHAR_ARG_DECL,
                            F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&,
-                           Complex*, const octave_idx_type&,
-                           Complex*, const octave_idx_type&,
-                           Complex*, Complex*, Complex*,
-                           const octave_idx_type&, Complex*,
-                           const octave_idx_type&, Complex*,
-                           const octave_idx_type&, double*, octave_idx_type&
+                           const F77_INT&,
+                           F77_DBLE_CMPLX*, const F77_INT&,
+                           F77_DBLE_CMPLX*, const F77_INT&,
+                           F77_DBLE_CMPLX*, F77_DBLE_CMPLX*, F77_DBLE_CMPLX*,
+                           const F77_INT&, F77_DBLE_CMPLX*,
+                           const F77_INT&, F77_DBLE_CMPLX*,
+                           const F77_INT&, F77_DBLE*, F77_INT&
                            F77_CHAR_ARG_LEN_DECL
                            F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (zhegv, ZHEGV) (const octave_idx_type&,
+  F77_FUNC (zhegv, ZHEGV) (const F77_INT&,
                            F77_CONST_CHAR_ARG_DECL,
                            F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, Complex*,
-                           const octave_idx_type&, Complex*,
-                           const octave_idx_type&, double*, Complex*,
-                           const octave_idx_type&, double*, octave_idx_type&
+                           const F77_INT&, F77_DBLE_CMPLX*,
+                           const F77_INT&, F77_DBLE_CMPLX*,
+                           const F77_INT&, F77_DBLE*, F77_DBLE_CMPLX*,
+                           const F77_INT&, F77_DBLE*, F77_INT&
                            F77_CHAR_ARG_LEN_DECL
                            F77_CHAR_ARG_LEN_DECL);
 }
 
 octave_idx_type
 EIG::init (const Matrix& a, bool calc_ev)
 {
   if (a.any_element_is_inf_or_nan ())
diff --git a/liboctave/numeric/LSODE.cc b/liboctave/numeric/LSODE.cc
--- a/liboctave/numeric/LSODE.cc
+++ b/liboctave/numeric/LSODE.cc
@@ -42,23 +42,23 @@ typedef octave_idx_type (*lsode_jac_ptr)
                                           const double&, double*,
                                           const octave_idx_type&,
                                           const octave_idx_type&,
                                           double*, const octave_idx_type&);
 
 extern "C"
 {
   F77_RET_T
-  F77_FUNC (dlsode, DLSODE) (lsode_fcn_ptr, octave_idx_type&, double*,
-                             double&, double&, octave_idx_type&, double&,
-                             const double*, octave_idx_type&,
-                             octave_idx_type&, octave_idx_type&,
-                             double*, octave_idx_type&, octave_idx_type*,
-                             octave_idx_type&, lsode_jac_ptr,
-                             octave_idx_type&);
+  F77_FUNC (dlsode, DLSODE) (lsode_fcn_ptr, F77_INT&, F77_DBLE*,
+                             F77_DBLE&, F77_DBLE&, F77_INT&, F77_DBLE&,
+                             const F77_DBLE*, F77_INT&,
+                             F77_INT&, F77_INT&,
+                             F77_DBLE*, F77_INT&, F77_INT*,
+                             F77_INT&, lsode_jac_ptr,
+                             F77_INT&);
 }
 
 static ODEFunc::ODERHSFunc user_fun;
 static ODEFunc::ODEJacFunc user_jac;
 static ColumnVector *tmp_x;
 
 static octave_idx_type
 lsode_f (const octave_idx_type& neq, const double& time, double *,
diff --git a/liboctave/numeric/Quad.cc b/liboctave/numeric/Quad.cc
--- a/liboctave/numeric/Quad.cc
+++ b/liboctave/numeric/Quad.cc
@@ -39,46 +39,46 @@ static float_integrand_fcn float_user_fc
 int quad_integration_error = 0;
 
 typedef octave_idx_type (*quad_fcn_ptr) (double*, int&, double*);
 typedef octave_idx_type (*quad_float_fcn_ptr) (float*, int&, float*);
 
 extern "C"
 {
   F77_RET_T
-  F77_FUNC (dqagp, DQAGP) (quad_fcn_ptr, const double&, const double&,
-                           const octave_idx_type&, const double*,
-                           const double&, const double&, double&,
-                           double&, octave_idx_type&, octave_idx_type&,
-                           const octave_idx_type&, const octave_idx_type&,
-                           octave_idx_type&, octave_idx_type*, double*);
+  F77_FUNC (dqagp, DQAGP) (quad_fcn_ptr, const F77_DBLE&, const F77_DBLE&,
+                           const F77_INT&, const F77_DBLE*,
+                           const F77_DBLE&, const F77_DBLE&, F77_DBLE&,
+                           F77_DBLE&, F77_INT&, F77_INT&,
+                           const F77_INT&, const F77_INT&,
+                           F77_INT&, F77_INT*, F77_DBLE*);
 
   F77_RET_T
-  F77_FUNC (dqagi, DQAGI) (quad_fcn_ptr, const double&,
-                           const octave_idx_type&, const double&,
-                           const double&, double&, double&,
-                           octave_idx_type&, octave_idx_type&,
-                           const octave_idx_type&, const octave_idx_type&,
-                           octave_idx_type&, octave_idx_type*, double*);
+  F77_FUNC (dqagi, DQAGI) (quad_fcn_ptr, const F77_DBLE&,
+                           const F77_INT&, const F77_DBLE&,
+                           const F77_DBLE&, F77_DBLE&, F77_DBLE&,
+                           F77_INT&, F77_INT&,
+                           const F77_INT&, const F77_INT&,
+                           F77_INT&, F77_INT*, F77_DBLE*);
 
   F77_RET_T
-  F77_FUNC (qagp, QAGP) (quad_float_fcn_ptr, const float&, const float&,
-                         const octave_idx_type&, const float*, const float&,
-                         const float&, float&, float&, octave_idx_type&,
-                         octave_idx_type&, const octave_idx_type&,
-                         const octave_idx_type&, octave_idx_type&,
-                         octave_idx_type*, float*);
+  F77_FUNC (qagp, QAGP) (quad_float_fcn_ptr, const F77_REAL&, const F77_REAL&,
+                         const F77_INT&, const F77_REAL*, const F77_REAL&,
+                         const F77_REAL&, F77_REAL&, F77_REAL&, F77_INT&,
+                         F77_INT&, const F77_INT&,
+                         const F77_INT&, F77_INT&,
+                         F77_INT*, F77_REAL*);
 
   F77_RET_T
-  F77_FUNC (qagi, QAGI) (quad_float_fcn_ptr, const float&,
-                         const octave_idx_type&, const float&,
-                         const float&, float&, float&, octave_idx_type&,
-                         octave_idx_type&, const octave_idx_type&,
-                         const octave_idx_type&, octave_idx_type&,
-                         octave_idx_type*, float*);
+  F77_FUNC (qagi, QAGI) (quad_float_fcn_ptr, const F77_REAL&,
+                         const F77_INT&, const F77_REAL&,
+                         const F77_REAL&, F77_REAL&, F77_REAL&, F77_INT&,
+                         F77_INT&, const F77_INT&,
+                         const F77_INT&, F77_INT&,
+                         F77_INT*, F77_REAL*);
 }
 
 static octave_idx_type
 user_function (double *x, int& ierr, double *result)
 {
   BEGIN_INTERRUPT_WITH_EXCEPTIONS;
 
 #if defined (__sparc) && defined (__GNUC__)
diff --git a/liboctave/numeric/aepbalance.cc b/liboctave/numeric/aepbalance.cc
--- a/liboctave/numeric/aepbalance.cc
+++ b/liboctave/numeric/aepbalance.cc
@@ -37,79 +37,79 @@ along with Octave; see the file COPYING.
 #include "fCMatrix.h"
 #include "fColVector.h"
 #include "fMatrix.h"
 
 extern "C"
 {
   F77_RET_T
   F77_FUNC (dgebal, DGEBAL) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, double*,
-                             const octave_idx_type&, octave_idx_type&,
-                             octave_idx_type&, double*, octave_idx_type&
+                             const F77_INT&, F77_DBLE*,
+                             const F77_INT&, F77_INT&,
+                             F77_INT&, F77_DBLE*, F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (dgebak, DGEBAK) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, const double*,
-                             const octave_idx_type&, double*,
-                             const octave_idx_type&, octave_idx_type&
+                             const F77_INT&, const F77_INT&,
+                             const F77_INT&, const F77_DBLE*,
+                             const F77_INT&, F77_DBLE*,
+                             const F77_INT&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (sgebal, SGEBAL) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, float*,
-                             const octave_idx_type&, octave_idx_type&,
-                             octave_idx_type&, float*, octave_idx_type&
+                             const F77_INT&, F77_REAL*,
+                             const F77_INT&, F77_INT&,
+                             F77_INT&, F77_REAL*, F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (sgebak, SGEBAK) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, const float*,
-                             const octave_idx_type&, float*,
-                             const octave_idx_type&, octave_idx_type&
+                             const F77_INT&, const F77_INT&,
+                             const F77_INT&, const F77_REAL*,
+                             const F77_INT&, F77_REAL*,
+                             const F77_INT&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (zgebal, ZGEBAL) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, Complex*,
-                             const octave_idx_type&, octave_idx_type&,
-                             octave_idx_type&, double*, octave_idx_type&
+                             const F77_INT&, F77_DBLE_CMPLX*,
+                             const F77_INT&, F77_INT&,
+                             F77_INT&, F77_DBLE*, F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (zgebak, ZGEBAK) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, const double*,
-                             const octave_idx_type&, Complex*,
-                             const octave_idx_type&, octave_idx_type&
+                             const F77_INT&, const F77_INT&,
+                             const F77_INT&, const F77_DBLE*,
+                             const F77_INT&, F77_DBLE_CMPLX*,
+                             const F77_INT&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (cgebal, CGEBAL) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, FloatComplex*,
-                             const octave_idx_type&, octave_idx_type&,
-                             octave_idx_type&, float*, octave_idx_type&
+                             const F77_INT&, F77_CMPLX*,
+                             const F77_INT&, F77_INT&,
+                             F77_INT&, F77_REAL*, F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (cgebak, CGEBAK) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, const float*,
-                             const octave_idx_type&, FloatComplex*,
-                             const octave_idx_type&, octave_idx_type&
+                             const F77_INT&, const F77_INT&,
+                             const F77_INT&, const F77_REAL*,
+                             const F77_INT&, F77_CMPLX*,
+                             const F77_INT&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 }
 
 static inline char
 get_job (bool noperm, bool noscal)
 {
   return noperm ? (noscal ? 'N' : 'S') : (noscal ? 'P' : 'B');
diff --git a/liboctave/numeric/chol.cc b/liboctave/numeric/chol.cc
--- a/liboctave/numeric/chol.cc
+++ b/liboctave/numeric/chol.cc
@@ -48,192 +48,192 @@ along with Octave; see the file COPYING.
 #if ! defined (HAVE_QRUPDATE)
 #  include "qr.h"
 #endif
 
 extern "C"
 {
   F77_RET_T
   F77_FUNC (dpotrf, DPOTRF) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, double*,
-                             const octave_idx_type&, octave_idx_type&
+                             const F77_INT&, F77_DBLE*,
+                             const F77_INT&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (dpotri, DPOTRI) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, double*,
-                             const octave_idx_type&, octave_idx_type&
+                             const F77_INT&, F77_DBLE*,
+                             const F77_INT&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (dpocon, DPOCON) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, double*,
-                             const octave_idx_type&, const double&,
-                             double&, double*, octave_idx_type*,
-                             octave_idx_type&
+                             const F77_INT&, F77_DBLE*,
+                             const F77_INT&, const F77_DBLE&,
+                             F77_DBLE&, F77_DBLE*, F77_INT*,
+                             F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 #if defined (HAVE_QRUPDATE)
 
   F77_RET_T
-  F77_FUNC (dch1up, DCH1UP) (const octave_idx_type&, double*,
-                             const octave_idx_type&, double*, double*);
+  F77_FUNC (dch1up, DCH1UP) (const F77_INT&, F77_DBLE*,
+                             const F77_INT&, F77_DBLE*, F77_DBLE*);
 
   F77_RET_T
-  F77_FUNC (dch1dn, DCH1DN) (const octave_idx_type&, double*,
-                             const octave_idx_type&, double*, double*,
-                             octave_idx_type&);
+  F77_FUNC (dch1dn, DCH1DN) (const F77_INT&, F77_DBLE*,
+                             const F77_INT&, F77_DBLE*, F77_DBLE*,
+                             F77_INT&);
 
   F77_RET_T
-  F77_FUNC (dchinx, DCHINX) (const octave_idx_type&, double*,
-                             const octave_idx_type&, const octave_idx_type&,
-                             double*, double*, octave_idx_type&);
+  F77_FUNC (dchinx, DCHINX) (const F77_INT&, F77_DBLE*,
+                             const F77_INT&, const F77_INT&,
+                             F77_DBLE*, F77_DBLE*, F77_INT&);
 
   F77_RET_T
-  F77_FUNC (dchdex, DCHDEX) (const octave_idx_type&, double*,
-                             const octave_idx_type&, const octave_idx_type&,
-                             double*);
+  F77_FUNC (dchdex, DCHDEX) (const F77_INT&, F77_DBLE*,
+                             const F77_INT&, const F77_INT&,
+                             F77_DBLE*);
 
   F77_RET_T
-  F77_FUNC (dchshx, DCHSHX) (const octave_idx_type&, double*,
-                             const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, double*);
+  F77_FUNC (dchshx, DCHSHX) (const F77_INT&, F77_DBLE*,
+                             const F77_INT&, const F77_INT&,
+                             const F77_INT&, F77_DBLE*);
 #endif
 
   F77_RET_T
   F77_FUNC (spotrf, SPOTRF) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, float*,
-                             const octave_idx_type&, octave_idx_type&
+                             const F77_INT&, F77_REAL*,
+                             const F77_INT&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (spotri, SPOTRI) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, float*,
-                             const octave_idx_type&, octave_idx_type&
+                             const F77_INT&, F77_REAL*,
+                             const F77_INT&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (spocon, SPOCON) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, float*,
-                             const octave_idx_type&, const float&,
-                             float&, float*, octave_idx_type*,
-                             octave_idx_type&
+                             const F77_INT&, F77_REAL*,
+                             const F77_INT&, const F77_REAL&,
+                             F77_REAL&, F77_REAL*, F77_INT*,
+                             F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 #if defined (HAVE_QRUPDATE)
 
   F77_RET_T
-  F77_FUNC (sch1up, SCH1UP) (const octave_idx_type&, float*,
-                             const octave_idx_type&, float*, float*);
+  F77_FUNC (sch1up, SCH1UP) (const F77_INT&, F77_REAL*,
+                             const F77_INT&, F77_REAL*, F77_REAL*);
 
   F77_RET_T
-  F77_FUNC (sch1dn, SCH1DN) (const octave_idx_type&, float*,
-                             const octave_idx_type&, float*, float*,
-                             octave_idx_type&);
+  F77_FUNC (sch1dn, SCH1DN) (const F77_INT&, F77_REAL*,
+                             const F77_INT&, F77_REAL*, F77_REAL*,
+                             F77_INT&);
 
   F77_RET_T
-  F77_FUNC (schinx, SCHINX) (const octave_idx_type&, float*,
-                             const octave_idx_type&, const octave_idx_type&,
-                             float*, float*, octave_idx_type&);
+  F77_FUNC (schinx, SCHINX) (const F77_INT&, F77_REAL*,
+                             const F77_INT&, const F77_INT&,
+                             F77_REAL*, F77_REAL*, F77_INT&);
 
   F77_RET_T
-  F77_FUNC (schdex, SCHDEX) (const octave_idx_type&, float*,
-                             const octave_idx_type&, const octave_idx_type&,
-                             float*);
+  F77_FUNC (schdex, SCHDEX) (const F77_INT&, F77_REAL*,
+                             const F77_INT&, const F77_INT&,
+                             F77_REAL*);
 
   F77_RET_T
-  F77_FUNC (schshx, SCHSHX) (const octave_idx_type&, float*,
-                             const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, float*);
+  F77_FUNC (schshx, SCHSHX) (const F77_INT&, F77_REAL*,
+                             const F77_INT&, const F77_INT&,
+                             const F77_INT&, F77_REAL*);
 #endif
 
   F77_RET_T
   F77_FUNC (zpotrf, ZPOTRF) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, Complex*,
-                             const octave_idx_type&, octave_idx_type&
+                             const F77_INT&, F77_DBLE_CMPLX*,
+                             const F77_INT&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
   F77_RET_T
   F77_FUNC (zpotri, ZPOTRI) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, Complex*,
-                             const octave_idx_type&, octave_idx_type&
+                             const F77_INT&, F77_DBLE_CMPLX*,
+                             const F77_INT&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (zpocon, ZPOCON) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, Complex*,
-                             const octave_idx_type&, const double&,
-                             double&, Complex*, double*, octave_idx_type&
+                             const F77_INT&, F77_DBLE_CMPLX*,
+                             const F77_INT&, const F77_DBLE&,
+                             F77_DBLE&, F77_DBLE_CMPLX*, F77_DBLE*, F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 #if defined (HAVE_QRUPDATE)
 
   F77_RET_T
-  F77_FUNC (zch1up, ZCH1UP) (const octave_idx_type&, Complex*,
-                             const octave_idx_type&, Complex*, double*);
+  F77_FUNC (zch1up, ZCH1UP) (const F77_INT&, F77_DBLE_CMPLX*,
+                             const F77_INT&, F77_DBLE_CMPLX*, F77_DBLE*);
 
   F77_RET_T
-  F77_FUNC (zch1dn, ZCH1DN) (const octave_idx_type&, Complex*,
-                             const octave_idx_type&, Complex*, double*,
-                             octave_idx_type&);
+  F77_FUNC (zch1dn, ZCH1DN) (const F77_INT&, F77_DBLE_CMPLX*,
+                             const F77_INT&, F77_DBLE_CMPLX*, F77_DBLE*,
+                             F77_INT&);
 
   F77_RET_T
-  F77_FUNC (zchinx, ZCHINX) (const octave_idx_type&, Complex*,
-                             const octave_idx_type&, const octave_idx_type&,
-                             Complex*, double*, octave_idx_type&);
+  F77_FUNC (zchinx, ZCHINX) (const F77_INT&, F77_DBLE_CMPLX*,
+                             const F77_INT&, const F77_INT&,
+                             F77_DBLE_CMPLX*, F77_DBLE*, F77_INT&);
 
   F77_RET_T
-  F77_FUNC (zchdex, ZCHDEX) (const octave_idx_type&, Complex*,
-                             const octave_idx_type&, const octave_idx_type&,
-                             double*);
+  F77_FUNC (zchdex, ZCHDEX) (const F77_INT&, F77_DBLE_CMPLX*,
+                             const F77_INT&, const F77_INT&,
+                             F77_DBLE*);
 
   F77_RET_T
-  F77_FUNC (zchshx, ZCHSHX) (const octave_idx_type&, Complex*,
-                             const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, Complex*, double*);
+  F77_FUNC (zchshx, ZCHSHX) (const F77_INT&, F77_DBLE_CMPLX*,
+                             const F77_INT&, const F77_INT&,
+                             const F77_INT&, F77_DBLE_CMPLX*, F77_DBLE*);
 #endif
 
   F77_RET_T
   F77_FUNC (cpotrf, CPOTRF) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, FloatComplex*,
-                             const octave_idx_type&, octave_idx_type&
+                             const F77_INT&, F77_CMPLX*,
+                             const F77_INT&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
   F77_RET_T
   F77_FUNC (cpotri, CPOTRI) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, FloatComplex*,
-                             const octave_idx_type&, octave_idx_type&
+                             const F77_INT&, F77_CMPLX*,
+                             const F77_INT&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (cpocon, CPOCON) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, FloatComplex*,
-                             const octave_idx_type&, const float&,
-                             float&, FloatComplex*, float*, octave_idx_type&
+                             const F77_INT&, F77_CMPLX*,
+                             const F77_INT&, const F77_REAL&,
+                             F77_REAL&, F77_CMPLX*, F77_REAL*, F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 #if defined (HAVE_QRUPDATE)
 
   F77_RET_T
-  F77_FUNC (cch1up, CCH1UP) (const octave_idx_type&, FloatComplex*,
-                             const octave_idx_type&, FloatComplex*, float*);
+  F77_FUNC (cch1up, CCH1UP) (const F77_INT&, F77_CMPLX*,
+                             const F77_INT&, F77_CMPLX*, F77_REAL*);
 
   F77_RET_T
-  F77_FUNC (cch1dn, CCH1DN) (const octave_idx_type&, FloatComplex*,
-                             const octave_idx_type&, FloatComplex*,
-                             float*, octave_idx_type&);
+  F77_FUNC (cch1dn, CCH1DN) (const F77_INT&, F77_CMPLX*,
+                             const F77_INT&, F77_CMPLX*,
+                             F77_REAL*, F77_INT&);
 
   F77_RET_T
-  F77_FUNC (cchinx, CCHINX) (const octave_idx_type&, FloatComplex*,
-                             const octave_idx_type&, const octave_idx_type&,
-                             FloatComplex*, float*, octave_idx_type&);
+  F77_FUNC (cchinx, CCHINX) (const F77_INT&, F77_CMPLX*,
+                             const F77_INT&, const F77_INT&,
+                             F77_CMPLX*, F77_REAL*, F77_INT&);
 
   F77_RET_T
-  F77_FUNC (cchdex, CCHDEX) (const octave_idx_type&, FloatComplex*,
-                             const octave_idx_type&, const octave_idx_type&,
-                             float*);
+  F77_FUNC (cchdex, CCHDEX) (const F77_INT&, F77_CMPLX*,
+                             const F77_INT&, const F77_INT&,
+                             F77_REAL*);
 
   F77_RET_T
-  F77_FUNC (cchshx, CCHSHX) (const octave_idx_type&, FloatComplex*,
-                             const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, FloatComplex*, float*);
+  F77_FUNC (cchshx, CCHSHX) (const F77_INT&, F77_CMPLX*,
+                             const F77_INT&, const F77_INT&,
+                             const F77_INT&, F77_CMPLX*, F77_REAL*);
 #endif
 }
 
 static Matrix
 chol2inv_internal (const Matrix& r, bool is_upper = true)
 {
   Matrix retval;
 
diff --git a/liboctave/numeric/eigs-base.cc b/liboctave/numeric/eigs-base.cc
--- a/liboctave/numeric/eigs-base.cc
+++ b/liboctave/numeric/eigs-base.cc
@@ -44,122 +44,122 @@ along with Octave; see the file COPYING.
 #include "sparse-lu.h"
 
 #if defined (HAVE_ARPACK)
 
 // Arpack and blas fortran functions we call.
 extern "C"
 {
   F77_RET_T
-  F77_FUNC (dsaupd, DSAUPD) (octave_idx_type&,
+  F77_FUNC (dsaupd, DSAUPD) (F77_INT&,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&,
+                             const F77_INT&,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const double&,
-                             double*, const octave_idx_type&, double*,
-                             const octave_idx_type&, octave_idx_type*,
-                             octave_idx_type*, double*, double*,
-                             const octave_idx_type&, octave_idx_type&
+                             const F77_INT&, const F77_DBLE&,
+                             F77_DBLE*, const F77_INT&, F77_DBLE*,
+                             const F77_INT&, F77_INT*,
+                             F77_INT*, F77_DBLE*, F77_DBLE*,
+                             const F77_INT&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (dseupd, DSEUPD) (const octave_idx_type&,
+  F77_FUNC (dseupd, DSEUPD) (const F77_INT&,
                              F77_CONST_CHAR_ARG_DECL,
-                             octave_idx_type*, double*, double*,
-                             const octave_idx_type&, const double&,
+                             F77_INT*, F77_DBLE*, F77_DBLE*,
+                             const F77_INT&, const F77_DBLE&,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&,
+                             const F77_INT&,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const double&, double*,
-                             const octave_idx_type&, double*,
-                             const octave_idx_type&, octave_idx_type*,
-                             octave_idx_type*, double*, double*,
-                             const octave_idx_type&, octave_idx_type&
+                             const F77_INT&, const F77_DBLE&, F77_DBLE*,
+                             const F77_INT&, F77_DBLE*,
+                             const F77_INT&, F77_INT*,
+                             F77_INT*, F77_DBLE*, F77_DBLE*,
+                             const F77_INT&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (dnaupd, DNAUPD) (octave_idx_type&,
+  F77_FUNC (dnaupd, DNAUPD) (F77_INT&,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&,
+                             const F77_INT&,
                              F77_CONST_CHAR_ARG_DECL,
-                             octave_idx_type&, const double&,
-                             double*, const octave_idx_type&, double*,
-                             const octave_idx_type&, octave_idx_type*,
-                             octave_idx_type*, double*, double*,
-                             const octave_idx_type&, octave_idx_type&
+                             F77_INT&, const F77_DBLE&,
+                             F77_DBLE*, const F77_INT&, F77_DBLE*,
+                             const F77_INT&, F77_INT*,
+                             F77_INT*, F77_DBLE*, F77_DBLE*,
+                             const F77_INT&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (dneupd, DNEUPD) (const octave_idx_type&,
+  F77_FUNC (dneupd, DNEUPD) (const F77_INT&,
                              F77_CONST_CHAR_ARG_DECL,
-                             octave_idx_type*, double*, double*,
-                             double*, const octave_idx_type&, const double&,
-                             const double&, double*,
+                             F77_INT*, F77_DBLE*, F77_DBLE*,
+                             F77_DBLE*, const F77_INT&, const F77_DBLE&,
+                             const F77_DBLE&, F77_DBLE*,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&,
+                             const F77_INT&,
                              F77_CONST_CHAR_ARG_DECL,
-                             octave_idx_type&, const double&, double*,
-                             const octave_idx_type&, double*,
-                             const octave_idx_type&, octave_idx_type*,
-                             octave_idx_type*, double*, double*,
-                             const octave_idx_type&, octave_idx_type&
+                             F77_INT&, const F77_DBLE&, F77_DBLE*,
+                             const F77_INT&, F77_DBLE*,
+                             const F77_INT&, F77_INT*,
+                             F77_INT*, F77_DBLE*, F77_DBLE*,
+                             const F77_INT&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (znaupd, ZNAUPD) (octave_idx_type&,
+  F77_FUNC (znaupd, ZNAUPD) (F77_INT&,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&,
+                             const F77_INT&,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const double&,
-                             Complex*, const octave_idx_type&, Complex*,
-                             const octave_idx_type&, octave_idx_type*,
-                             octave_idx_type*, Complex*, Complex*,
-                             const octave_idx_type&, double *, octave_idx_type&
+                             const F77_INT&, const F77_DBLE&,
+                             F77_DBLE_CMPLX*, const F77_INT&, F77_DBLE_CMPLX*,
+                             const F77_INT&, F77_INT*,
+                             F77_INT*, F77_DBLE_CMPLX*, F77_DBLE_CMPLX*,
+                             const F77_INT&, F77_DBLE *, F77_INT&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (zneupd, ZNEUPD) (const octave_idx_type&,
+  F77_FUNC (zneupd, ZNEUPD) (const F77_INT&,
                              F77_CONST_CHAR_ARG_DECL,
-                             octave_idx_type*, Complex*, Complex*,
-                             const octave_idx_type&, const Complex&, Complex*,
+                             F77_INT*, F77_DBLE_CMPLX*, F77_DBLE_CMPLX*,
+                             const F77_INT&, const F77_DBLE_CMPLX&, F77_DBLE_CMPLX*,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&,
+                             const F77_INT&,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const double&,
-                             Complex*, const octave_idx_type&, Complex*,
-                             const octave_idx_type&, octave_idx_type*,
-                             octave_idx_type*, Complex*, Complex*,
-                             const octave_idx_type&, double *, octave_idx_type&
+                             const F77_INT&, const F77_DBLE&,
+                             F77_DBLE_CMPLX*, const F77_INT&, F77_DBLE_CMPLX*,
+                             const F77_INT&, F77_INT*,
+                             F77_INT*, F77_DBLE_CMPLX*, F77_DBLE_CMPLX*,
+                             const F77_INT&, F77_DBLE *, F77_INT&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (dgemv, DGEMV) (F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, const octave_idx_type&,
-                           const double&, const double*,
-                           const octave_idx_type&, const double*,
-                           const octave_idx_type&, const double&, double*,
-                           const octave_idx_type&
+                           const F77_INT&, const F77_INT&,
+                           const F77_DBLE&, const F77_DBLE*,
+                           const F77_INT&, const F77_DBLE*,
+                           const F77_INT&, const F77_DBLE&, F77_DBLE*,
+                           const F77_INT&
                            F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (zgemv, ZGEMV) (F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, const octave_idx_type&,
-                           const Complex&, const Complex*,
-                           const octave_idx_type&, const Complex*,
-                           const octave_idx_type&, const Complex&, Complex*,
-                           const octave_idx_type&
+                           const F77_INT&, const F77_INT&,
+                           const F77_DBLE_CMPLX&, const F77_DBLE_CMPLX*,
+                           const F77_INT&, const F77_DBLE_CMPLX*,
+                           const F77_INT&, const F77_DBLE_CMPLX&, F77_DBLE_CMPLX*,
+                           const F77_INT&
                            F77_CHAR_ARG_LEN_DECL);
 
 }
 
 static void
 warn_convergence (void)
 {
   (*current_liboctave_warning_with_id_handler)
diff --git a/liboctave/numeric/fEIG.cc b/liboctave/numeric/fEIG.cc
--- a/liboctave/numeric/fEIG.cc
+++ b/liboctave/numeric/fEIG.cc
@@ -29,109 +29,109 @@ along with Octave; see the file COPYING.
 #include "f77-fcn.h"
 #include "lo-error.h"
 
 extern "C"
 {
   F77_RET_T
   F77_FUNC (sgeev, SGEEV) (F77_CONST_CHAR_ARG_DECL,
                            F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, float*,
-                           const octave_idx_type&, float*, float*, float*,
-                           const octave_idx_type&, float*,
-                           const octave_idx_type&, float*,
-                           const octave_idx_type&, octave_idx_type&
+                           const F77_INT&, F77_REAL*,
+                           const F77_INT&, F77_REAL*, F77_REAL*, F77_REAL*,
+                           const F77_INT&, F77_REAL*,
+                           const F77_INT&, F77_REAL*,
+                           const F77_INT&, F77_INT&
                            F77_CHAR_ARG_LEN_DECL
                            F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (cgeev, CGEEV) (F77_CONST_CHAR_ARG_DECL,
                            F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, FloatComplex*,
-                           const octave_idx_type&, FloatComplex*, FloatComplex*,
-                           const octave_idx_type&, FloatComplex*,
-                           const octave_idx_type&, FloatComplex*,
-                           const octave_idx_type&, float*, octave_idx_type&
+                           const F77_INT&, F77_CMPLX*,
+                           const F77_INT&, F77_CMPLX*, F77_CMPLX*,
+                           const F77_INT&, F77_CMPLX*,
+                           const F77_INT&, F77_CMPLX*,
+                           const F77_INT&, F77_REAL*, F77_INT&
                            F77_CHAR_ARG_LEN_DECL
                            F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (ssyev, SSYEV) (F77_CONST_CHAR_ARG_DECL,
                            F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, float*,
-                           const octave_idx_type&, float*, float*,
-                           const octave_idx_type&, octave_idx_type&
+                           const F77_INT&, F77_REAL*,
+                           const F77_INT&, F77_REAL*, F77_REAL*,
+                           const F77_INT&, F77_INT&
                            F77_CHAR_ARG_LEN_DECL
                            F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (cheev, CHEEV) (F77_CONST_CHAR_ARG_DECL,
                            F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, FloatComplex*,
-                           const octave_idx_type&, float*, FloatComplex*,
-                           const octave_idx_type&, float*, octave_idx_type&
+                           const F77_INT&, F77_CMPLX*,
+                           const F77_INT&, F77_REAL*, F77_CMPLX*,
+                           const F77_INT&, F77_REAL*, F77_INT&
                            F77_CHAR_ARG_LEN_DECL
                            F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (spotrf, SPOTRF) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, float*,
-                             const octave_idx_type&, octave_idx_type&
+                             const F77_INT&, F77_REAL*,
+                             const F77_INT&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (cpotrf, CPOTRF) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, FloatComplex*,
-                             const octave_idx_type&, octave_idx_type&
+                             const F77_INT&, F77_CMPLX*,
+                             const F77_INT&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (sggev, SGGEV) (F77_CONST_CHAR_ARG_DECL,
                            F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, float*,
-                           const octave_idx_type&, float*,
-                           const octave_idx_type&, float*, float*, float*,
-                           float*, const octave_idx_type&, float*,
-                           const octave_idx_type&, float*,
-                           const octave_idx_type&, octave_idx_type&
+                           const F77_INT&, F77_REAL*,
+                           const F77_INT&, F77_REAL*,
+                           const F77_INT&, F77_REAL*, F77_REAL*, F77_REAL*,
+                           F77_REAL*, const F77_INT&, F77_REAL*,
+                           const F77_INT&, F77_REAL*,
+                           const F77_INT&, F77_INT&
                            F77_CHAR_ARG_LEN_DECL
                            F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (ssygv, SSYGV) (const octave_idx_type&,
+  F77_FUNC (ssygv, SSYGV) (const F77_INT&,
                            F77_CONST_CHAR_ARG_DECL,
                            F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, float*,
-                           const octave_idx_type&, float*,
-                           const octave_idx_type&, float*, float*,
-                           const octave_idx_type&, octave_idx_type&
+                           const F77_INT&, F77_REAL*,
+                           const F77_INT&, F77_REAL*,
+                           const F77_INT&, F77_REAL*, F77_REAL*,
+                           const F77_INT&, F77_INT&
                            F77_CHAR_ARG_LEN_DECL
                            F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (cggev, CGGEV) (F77_CONST_CHAR_ARG_DECL,
                            F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, FloatComplex*,
-                           const octave_idx_type&, FloatComplex*,
-                           const octave_idx_type&, FloatComplex*,
-                           FloatComplex*, FloatComplex*,
-                           const octave_idx_type&, FloatComplex*,
-                           const octave_idx_type&, FloatComplex*,
-                           const octave_idx_type&, float*, octave_idx_type&
+                           const F77_INT&, F77_CMPLX*,
+                           const F77_INT&, F77_CMPLX*,
+                           const F77_INT&, F77_CMPLX*,
+                           F77_CMPLX*, F77_CMPLX*,
+                           const F77_INT&, F77_CMPLX*,
+                           const F77_INT&, F77_CMPLX*,
+                           const F77_INT&, F77_REAL*, F77_INT&
                            F77_CHAR_ARG_LEN_DECL
                            F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (chegv, CHEGV) (const octave_idx_type&,
+  F77_FUNC (chegv, CHEGV) (const F77_INT&,
                            F77_CONST_CHAR_ARG_DECL,
                            F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, FloatComplex*,
-                           const octave_idx_type&, FloatComplex*,
-                           const octave_idx_type&, float*, FloatComplex*,
-                           const octave_idx_type&, float*, octave_idx_type&
+                           const F77_INT&, F77_CMPLX*,
+                           const F77_INT&, F77_CMPLX*,
+                           const F77_INT&, F77_REAL*, F77_CMPLX*,
+                           const F77_INT&, F77_REAL*, F77_INT&
                            F77_CHAR_ARG_LEN_DECL
                            F77_CHAR_ARG_LEN_DECL);
 }
 
 octave_idx_type
 FloatEIG::init (const FloatMatrix& a, bool calc_ev)
 {
   if (a.any_element_is_inf_or_nan ())
diff --git a/liboctave/numeric/gepbalance.cc b/liboctave/numeric/gepbalance.cc
--- a/liboctave/numeric/gepbalance.cc
+++ b/liboctave/numeric/gepbalance.cc
@@ -35,76 +35,76 @@ along with Octave; see the file COPYING.
 #include "fMatrix.h"
 #include "gepbalance.h"
 #include "oct-locbuf.h"
 
 extern "C"
 {
   F77_RET_T
   F77_FUNC (dggbal, DGGBAL) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type& N,
-                             double* A, const octave_idx_type& LDA,
-                             double* B, const octave_idx_type& LDB,
-                             octave_idx_type& ILO, octave_idx_type& IHI,
-                             double* LSCALE, double* RSCALE,
-                             double* WORK, octave_idx_type& INFO
+                             const F77_INT& N,
+                             F77_DBLE* A, const F77_INT& LDA,
+                             F77_DBLE* B, const F77_INT& LDB,
+                             F77_INT& ILO, F77_INT& IHI,
+                             F77_DBLE* LSCALE, F77_DBLE* RSCALE,
+                             F77_DBLE* WORK, F77_INT& INFO
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (dggbak, DGGBAK) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type& N,
-                             const octave_idx_type& ILO,
-                             const octave_idx_type& IHI,
-                             const double* LSCALE, const double* RSCALE,
-                             octave_idx_type& M, double* V,
-                             const octave_idx_type& LDV, octave_idx_type& INFO
+                             const F77_INT& N,
+                             const F77_INT& ILO,
+                             const F77_INT& IHI,
+                             const F77_DBLE* LSCALE, const F77_DBLE* RSCALE,
+                             F77_INT& M, F77_DBLE* V,
+                             const F77_INT& LDV, F77_INT& INFO
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (sggbal, SGGBAL) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type& N, float* A,
-                             const octave_idx_type& LDA, float* B,
-                             const octave_idx_type& LDB,
-                             octave_idx_type& ILO, octave_idx_type& IHI,
-                             float* LSCALE, float* RSCALE,
-                             float* WORK, octave_idx_type& INFO
+                             const F77_INT& N, F77_REAL* A,
+                             const F77_INT& LDA, F77_REAL* B,
+                             const F77_INT& LDB,
+                             F77_INT& ILO, F77_INT& IHI,
+                             F77_REAL* LSCALE, F77_REAL* RSCALE,
+                             F77_REAL* WORK, F77_INT& INFO
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (sggbak, SGGBAK) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type& N,
-                             const octave_idx_type& ILO,
-                             const octave_idx_type& IHI,
-                             const float* LSCALE, const float* RSCALE,
-                             octave_idx_type& M, float* V,
-                             const octave_idx_type& LDV, octave_idx_type& INFO
+                             const F77_INT& N,
+                             const F77_INT& ILO,
+                             const F77_INT& IHI,
+                             const F77_REAL* LSCALE, const F77_REAL* RSCALE,
+                             F77_INT& M, F77_REAL* V,
+                             const F77_INT& LDV, F77_INT& INFO
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (zggbal, ZGGBAL) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type& N, Complex* A,
-                             const octave_idx_type& LDA, Complex* B,
-                             const octave_idx_type& LDB,
-                             octave_idx_type& ILO, octave_idx_type& IHI,
-                             double* LSCALE, double* RSCALE,
-                             double* WORK, octave_idx_type& INFO
+                             const F77_INT& N, F77_DBLE_CMPLX* A,
+                             const F77_INT& LDA, F77_DBLE_CMPLX* B,
+                             const F77_INT& LDB,
+                             F77_INT& ILO, F77_INT& IHI,
+                             F77_DBLE* LSCALE, F77_DBLE* RSCALE,
+                             F77_DBLE* WORK, F77_INT& INFO
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (cggbal, CGGBAL) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type& N,
-                             FloatComplex* A, const octave_idx_type& LDA,
-                             FloatComplex* B, const octave_idx_type& LDB,
-                             octave_idx_type& ILO, octave_idx_type& IHI,
-                             float* LSCALE, float* RSCALE,
-                             float* WORK, octave_idx_type& INFO
+                             const F77_INT& N,
+                             F77_CMPLX* A, const F77_INT& LDA,
+                             F77_CMPLX* B, const F77_INT& LDB,
+                             F77_INT& ILO, F77_INT& IHI,
+                             F77_REAL* LSCALE, F77_REAL* RSCALE,
+                             F77_REAL* WORK, F77_INT& INFO
                              F77_CHAR_ARG_LEN_DECL);
 }
 
 template <>
 octave_idx_type
 gepbalance<Matrix>::init (const Matrix& a, const Matrix& b,
                           const std::string& balance_job)
 {
diff --git a/liboctave/numeric/hess.cc b/liboctave/numeric/hess.cc
--- a/liboctave/numeric/hess.cc
+++ b/liboctave/numeric/hess.cc
@@ -31,129 +31,129 @@ along with Octave; see the file COPYING.
 #include "fMatrix.h"
 #include "hess.h"
 #include "lo-error.h"
 
 extern "C"
 {
   F77_RET_T
   F77_FUNC (dgebal, DGEBAL) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, double*,
-                             const octave_idx_type&, octave_idx_type&,
-                             octave_idx_type&, double*, octave_idx_type&
+                             const F77_INT&, F77_DBLE*,
+                             const F77_INT&, F77_INT&,
+                             F77_INT&, F77_DBLE*, F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (dgehrd, DGEHRD) (const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, double*,
-                             const octave_idx_type&, double*, double*,
-                             const octave_idx_type&, octave_idx_type&);
+  F77_FUNC (dgehrd, DGEHRD) (const F77_INT&, const F77_INT&,
+                             const F77_INT&, F77_DBLE*,
+                             const F77_INT&, F77_DBLE*, F77_DBLE*,
+                             const F77_INT&, F77_INT&);
 
   F77_RET_T
-  F77_FUNC (dorghr, DORGHR) (const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, double*,
-                             const octave_idx_type&, double*, double*,
-                             const octave_idx_type&, octave_idx_type&);
+  F77_FUNC (dorghr, DORGHR) (const F77_INT&, const F77_INT&,
+                             const F77_INT&, F77_DBLE*,
+                             const F77_INT&, F77_DBLE*, F77_DBLE*,
+                             const F77_INT&, F77_INT&);
 
   F77_RET_T
   F77_FUNC (dgebak, DGEBAK) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, double*,
-                             const octave_idx_type&, double*,
-                             const octave_idx_type&, octave_idx_type&
+                             const F77_INT&, const F77_INT&,
+                             const F77_INT&, F77_DBLE*,
+                             const F77_INT&, F77_DBLE*,
+                             const F77_INT&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (sgebal, SGEBAL) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, float*,
-                             const octave_idx_type&, octave_idx_type&,
-                             octave_idx_type&, float*, octave_idx_type&
+                             const F77_INT&, F77_REAL*,
+                             const F77_INT&, F77_INT&,
+                             F77_INT&, F77_REAL*, F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (sgehrd, SGEHRD) (const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, float*,
-                             const octave_idx_type&, float*, float*,
-                             const octave_idx_type&, octave_idx_type&);
+  F77_FUNC (sgehrd, SGEHRD) (const F77_INT&, const F77_INT&,
+                             const F77_INT&, F77_REAL*,
+                             const F77_INT&, F77_REAL*, F77_REAL*,
+                             const F77_INT&, F77_INT&);
 
   F77_RET_T
-  F77_FUNC (sorghr, SORGHR) (const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, float*,
-                             const octave_idx_type&, float*, float*,
-                             const octave_idx_type&, octave_idx_type&);
+  F77_FUNC (sorghr, SORGHR) (const F77_INT&, const F77_INT&,
+                             const F77_INT&, F77_REAL*,
+                             const F77_INT&, F77_REAL*, F77_REAL*,
+                             const F77_INT&, F77_INT&);
 
   F77_RET_T
   F77_FUNC (sgebak, SGEBAK) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, float*,
-                             const octave_idx_type&, float*,
-                             const octave_idx_type&, octave_idx_type&
+                             const F77_INT&, const F77_INT&,
+                             const F77_INT&, F77_REAL*,
+                             const F77_INT&, F77_REAL*,
+                             const F77_INT&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (zgebal, ZGEBAL) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, Complex*,
-                             const octave_idx_type&, octave_idx_type&,
-                             octave_idx_type&, double*, octave_idx_type&
+                             const F77_INT&, F77_DBLE_CMPLX*,
+                             const F77_INT&, F77_INT&,
+                             F77_INT&, F77_DBLE*, F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (zgehrd, ZGEHRD) (const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, Complex*,
-                             const octave_idx_type&, Complex*, Complex*,
-                             const octave_idx_type&, octave_idx_type&);
+  F77_FUNC (zgehrd, ZGEHRD) (const F77_INT&, const F77_INT&,
+                             const F77_INT&, F77_DBLE_CMPLX*,
+                             const F77_INT&, F77_DBLE_CMPLX*, F77_DBLE_CMPLX*,
+                             const F77_INT&, F77_INT&);
 
   F77_RET_T
-  F77_FUNC (zunghr, ZUNGHR) (const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, Complex*,
-                             const octave_idx_type&, Complex*, Complex*,
-                             const octave_idx_type&, octave_idx_type&);
+  F77_FUNC (zunghr, ZUNGHR) (const F77_INT&, const F77_INT&,
+                             const F77_INT&, F77_DBLE_CMPLX*,
+                             const F77_INT&, F77_DBLE_CMPLX*, F77_DBLE_CMPLX*,
+                             const F77_INT&, F77_INT&);
 
   F77_RET_T
   F77_FUNC (zgebak, ZGEBAK) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, double*,
-                             const octave_idx_type&, Complex*,
-                             const octave_idx_type&, octave_idx_type&
+                             const F77_INT&, const F77_INT&,
+                             const F77_INT&, F77_DBLE*,
+                             const F77_INT&, F77_DBLE_CMPLX*,
+                             const F77_INT&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (cgebal, CGEBAL) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, FloatComplex*,
-                             const octave_idx_type&, octave_idx_type&,
-                             octave_idx_type&, float*, octave_idx_type&
+                             const F77_INT&, F77_CMPLX*,
+                             const F77_INT&, F77_INT&,
+                             F77_INT&, F77_REAL*, F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (cgehrd, CGEHRD) (const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, FloatComplex*,
-                             const octave_idx_type&, FloatComplex*,
-                             FloatComplex*, const octave_idx_type&,
-                             octave_idx_type&);
+  F77_FUNC (cgehrd, CGEHRD) (const F77_INT&, const F77_INT&,
+                             const F77_INT&, F77_CMPLX*,
+                             const F77_INT&, F77_CMPLX*,
+                             F77_CMPLX*, const F77_INT&,
+                             F77_INT&);
 
   F77_RET_T
-  F77_FUNC (cunghr, CUNGHR) (const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, FloatComplex*,
-                             const octave_idx_type&, FloatComplex*,
-                             FloatComplex*, const octave_idx_type&,
-                             octave_idx_type&);
+  F77_FUNC (cunghr, CUNGHR) (const F77_INT&, const F77_INT&,
+                             const F77_INT&, F77_CMPLX*,
+                             const F77_INT&, F77_CMPLX*,
+                             F77_CMPLX*, const F77_INT&,
+                             F77_INT&);
 
   F77_RET_T
   F77_FUNC (cgebak, CGEBAK) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, float*,
-                             const octave_idx_type&, FloatComplex*,
-                             const octave_idx_type&, octave_idx_type&
+                             const F77_INT&, const F77_INT&,
+                             const F77_INT&, F77_REAL*,
+                             const F77_INT&, F77_CMPLX*,
+                             const F77_INT&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 }
 
 template <>
 octave_idx_type
 hess<Matrix>::init (const Matrix& a)
 {
diff --git a/liboctave/numeric/lo-specfun.cc b/liboctave/numeric/lo-specfun.cc
--- a/liboctave/numeric/lo-specfun.cc
+++ b/liboctave/numeric/lo-specfun.cc
@@ -49,158 +49,158 @@ along with Octave; see the file COPYING.
 #include "lo-mappers.h"
 #include "lo-math.h"
 
 #include "Faddeeva.hh"
 
 extern "C"
 {
   F77_RET_T
-  F77_FUNC (zbesj, ZBESJ) (const double&, const double&, const double&,
-                           const octave_idx_type&, const octave_idx_type&,
-                           double*, double*, octave_idx_type&,
-                           octave_idx_type&);
+  F77_FUNC (zbesj, ZBESJ) (const F77_DBLE&, const F77_DBLE&, const F77_DBLE&,
+                           const F77_INT&, const F77_INT&,
+                           F77_DBLE*, F77_DBLE*, F77_INT&,
+                           F77_INT&);
 
   F77_RET_T
-  F77_FUNC (zbesy, ZBESY) (const double&, const double&, const double&,
-                           const octave_idx_type&, const octave_idx_type&,
-                           double*, double*, octave_idx_type&, double*,
-                           double*, octave_idx_type&);
+  F77_FUNC (zbesy, ZBESY) (const F77_DBLE&, const F77_DBLE&, const F77_DBLE&,
+                           const F77_INT&, const F77_INT&,
+                           F77_DBLE*, F77_DBLE*, F77_INT&, F77_DBLE*,
+                           F77_DBLE*, F77_INT&);
 
   F77_RET_T
-  F77_FUNC (zbesi, ZBESI) (const double&, const double&, const double&,
-                           const octave_idx_type&, const octave_idx_type&,
-                           double*, double*, octave_idx_type&,
-                           octave_idx_type&);
+  F77_FUNC (zbesi, ZBESI) (const F77_DBLE&, const F77_DBLE&, const F77_DBLE&,
+                           const F77_INT&, const F77_INT&,
+                           F77_DBLE*, F77_DBLE*, F77_INT&,
+                           F77_INT&);
 
   F77_RET_T
-  F77_FUNC (zbesk, ZBESK) (const double&, const double&, const double&,
-                           const octave_idx_type&, const octave_idx_type&,
-                           double*, double*, octave_idx_type&,
-                           octave_idx_type&);
+  F77_FUNC (zbesk, ZBESK) (const F77_DBLE&, const F77_DBLE&, const F77_DBLE&,
+                           const F77_INT&, const F77_INT&,
+                           F77_DBLE*, F77_DBLE*, F77_INT&,
+                           F77_INT&);
 
   F77_RET_T
-  F77_FUNC (zbesh, ZBESH) (const double&, const double&, const double&,
-                           const octave_idx_type&, const octave_idx_type&,
-                           const octave_idx_type&, double*, double*,
-                           octave_idx_type&, octave_idx_type&);
+  F77_FUNC (zbesh, ZBESH) (const F77_DBLE&, const F77_DBLE&, const F77_DBLE&,
+                           const F77_INT&, const F77_INT&,
+                           const F77_INT&, F77_DBLE*, F77_DBLE*,
+                           F77_INT&, F77_INT&);
 
   F77_RET_T
-  F77_FUNC (cbesj, cBESJ) (const FloatComplex&, const float&,
-                           const octave_idx_type&, const octave_idx_type&,
-                           FloatComplex*, octave_idx_type&, octave_idx_type&);
+  F77_FUNC (cbesj, cBESJ) (const F77_CMPLX&, const F77_REAL&,
+                           const F77_INT&, const F77_INT&,
+                           F77_CMPLX*, F77_INT&, F77_INT&);
 
   F77_RET_T
-  F77_FUNC (cbesy, CBESY) (const FloatComplex&, const float&,
-                           const octave_idx_type&, const octave_idx_type&,
-                           FloatComplex*, octave_idx_type&,
-                           FloatComplex*, octave_idx_type&);
+  F77_FUNC (cbesy, CBESY) (const F77_CMPLX&, const F77_REAL&,
+                           const F77_INT&, const F77_INT&,
+                           F77_CMPLX*, F77_INT&,
+                           F77_CMPLX*, F77_INT&);
 
   F77_RET_T
-  F77_FUNC (cbesi, CBESI) (const FloatComplex&, const float&,
-                           const octave_idx_type&, const octave_idx_type&,
-                           FloatComplex*, octave_idx_type&, octave_idx_type&);
+  F77_FUNC (cbesi, CBESI) (const F77_CMPLX&, const F77_REAL&,
+                           const F77_INT&, const F77_INT&,
+                           F77_CMPLX*, F77_INT&, F77_INT&);
 
   F77_RET_T
-  F77_FUNC (cbesk, CBESK) (const FloatComplex&, const float&,
-                           const octave_idx_type&, const octave_idx_type&,
-                           FloatComplex*, octave_idx_type&, octave_idx_type&);
+  F77_FUNC (cbesk, CBESK) (const F77_CMPLX&, const F77_REAL&,
+                           const F77_INT&, const F77_INT&,
+                           F77_CMPLX*, F77_INT&, F77_INT&);
 
   F77_RET_T
-  F77_FUNC (cbesh, CBESH) (const FloatComplex&, const float&,
-                           const octave_idx_type&, const octave_idx_type&,
-                           const octave_idx_type&, FloatComplex*,
-                           octave_idx_type&, octave_idx_type&);
+  F77_FUNC (cbesh, CBESH) (const F77_CMPLX&, const F77_REAL&,
+                           const F77_INT&, const F77_INT&,
+                           const F77_INT&, F77_CMPLX*,
+                           F77_INT&, F77_INT&);
 
   F77_RET_T
-  F77_FUNC (zairy, ZAIRY) (const double&, const double&,
-                           const octave_idx_type&, const octave_idx_type&,
-                           double&, double&, octave_idx_type&,
-                           octave_idx_type&);
+  F77_FUNC (zairy, ZAIRY) (const F77_DBLE&, const F77_DBLE&,
+                           const F77_INT&, const F77_INT&,
+                           F77_DBLE&, F77_DBLE&, F77_INT&,
+                           F77_INT&);
 
   F77_RET_T
-  F77_FUNC (cairy, CAIRY) (const float&, const float&, const octave_idx_type&,
-                           const octave_idx_type&, float&, float&,
-                           octave_idx_type&, octave_idx_type&);
+  F77_FUNC (cairy, CAIRY) (const F77_REAL&, const F77_REAL&, const F77_INT&,
+                           const F77_INT&, F77_REAL&, F77_REAL&,
+                           F77_INT&, F77_INT&);
 
   F77_RET_T
-  F77_FUNC (zbiry, ZBIRY) (const double&, const double&,
-                           const octave_idx_type&, const octave_idx_type&,
-                           double&, double&, octave_idx_type&);
+  F77_FUNC (zbiry, ZBIRY) (const F77_DBLE&, const F77_DBLE&,
+                           const F77_INT&, const F77_INT&,
+                           F77_DBLE&, F77_DBLE&, F77_INT&);
 
   F77_RET_T
-  F77_FUNC (cbiry, CBIRY) (const float&, const float&, const octave_idx_type&,
-                           const octave_idx_type&, float&, float&,
-                           octave_idx_type&);
+  F77_FUNC (cbiry, CBIRY) (const F77_REAL&, const F77_REAL&, const F77_INT&,
+                           const F77_INT&, F77_REAL&, F77_REAL&,
+                           F77_INT&);
 
   F77_RET_T
-  F77_FUNC (xdacosh, XDACOSH) (const double&, double&);
+  F77_FUNC (xdacosh, XDACOSH) (const F77_DBLE&, F77_DBLE&);
 
   F77_RET_T
-  F77_FUNC (xacosh, XACOSH) (const float&, float&);
+  F77_FUNC (xacosh, XACOSH) (const F77_REAL&, F77_REAL&);
 
   F77_RET_T
-  F77_FUNC (xdasinh, XDASINH) (const double&, double&);
+  F77_FUNC (xdasinh, XDASINH) (const F77_DBLE&, F77_DBLE&);
 
   F77_RET_T
-  F77_FUNC (xasinh, XASINH) (const float&, float&);
+  F77_FUNC (xasinh, XASINH) (const F77_REAL&, F77_REAL&);
 
   F77_RET_T
-  F77_FUNC (xdatanh, XDATANH) (const double&, double&);
+  F77_FUNC (xdatanh, XDATANH) (const F77_DBLE&, F77_DBLE&);
 
   F77_RET_T
-  F77_FUNC (xatanh, XATANH) (const float&, float&);
+  F77_FUNC (xatanh, XATANH) (const F77_REAL&, F77_REAL&);
 
   F77_RET_T
-  F77_FUNC (xderf, XDERF) (const double&, double&);
+  F77_FUNC (xderf, XDERF) (const F77_DBLE&, F77_DBLE&);
 
   F77_RET_T
-  F77_FUNC (xerf, XERF) (const float&, float&);
+  F77_FUNC (xerf, XERF) (const F77_REAL&, F77_REAL&);
 
   F77_RET_T
-  F77_FUNC (xderfc, XDERFC) (const double&, double&);
+  F77_FUNC (xderfc, XDERFC) (const F77_DBLE&, F77_DBLE&);
 
   F77_RET_T
-  F77_FUNC (xerfc, XERFC) (const float&, float&);
+  F77_FUNC (xerfc, XERFC) (const F77_REAL&, F77_REAL&);
 
   F77_RET_T
-  F77_FUNC (xdbetai, XDBETAI) (const double&, const double&,
-                               const double&, double&);
+  F77_FUNC (xdbetai, XDBETAI) (const F77_DBLE&, const F77_DBLE&,
+                               const F77_DBLE&, F77_DBLE&);
 
   F77_RET_T
-  F77_FUNC (xbetai, XBETAI) (const float&, const float&,
-                             const float&, float&);
+  F77_FUNC (xbetai, XBETAI) (const F77_REAL&, const F77_REAL&,
+                             const F77_REAL&, F77_REAL&);
 
   F77_RET_T
-  F77_FUNC (xdgamma, XDGAMMA) (const double&, double&);
+  F77_FUNC (xdgamma, XDGAMMA) (const F77_DBLE&, F77_DBLE&);
 
   F77_RET_T
-  F77_FUNC (xgamma, XGAMMA) (const float&, float&);
+  F77_FUNC (xgamma, XGAMMA) (const F77_REAL&, F77_REAL&);
 
   F77_RET_T
-  F77_FUNC (xgammainc, XGAMMAINC) (const double&, const double&, double&);
+  F77_FUNC (xgammainc, XGAMMAINC) (const F77_DBLE&, const F77_DBLE&, F77_DBLE&);
 
   F77_RET_T
-  F77_FUNC (xsgammainc, XSGAMMAINC) (const float&, const float&, float&);
+  F77_FUNC (xsgammainc, XSGAMMAINC) (const F77_REAL&, const F77_REAL&, F77_REAL&);
 
   F77_RET_T
-  F77_FUNC (dlgams, DLGAMS) (const double&, double&, double&);
+  F77_FUNC (dlgams, DLGAMS) (const F77_DBLE&, F77_DBLE&, F77_DBLE&);
 
   F77_RET_T
-  F77_FUNC (algams, ALGAMS) (const float&, float&, float&);
+  F77_FUNC (algams, ALGAMS) (const F77_REAL&, F77_REAL&, F77_REAL&);
 
   F77_RET_T
-  F77_FUNC (psifn, PSIFN) (const float*, const octave_idx_type&,
-                           const octave_idx_type&, const octave_idx_type&,
-                           float*, octave_idx_type*, octave_idx_type*);
+  F77_FUNC (psifn, PSIFN) (const F77_REAL*, const F77_INT&,
+                           const F77_INT&, const F77_INT&,
+                           F77_REAL*, F77_INT*, F77_INT*);
 
   F77_RET_T
-  F77_FUNC (dpsifn, DPSIFN) (const double*, const octave_idx_type&,
-                             const octave_idx_type&, const octave_idx_type&,
-                             double*, octave_idx_type*, octave_idx_type*);
+  F77_FUNC (dpsifn, DPSIFN) (const F77_DBLE*, const F77_INT&,
+                             const F77_INT&, const F77_INT&,
+                             F77_DBLE*, F77_INT*, F77_INT*);
 }
 
 namespace octave
 {
   namespace math
   {
     double
     acosh (double x)
diff --git a/liboctave/numeric/lu.cc b/liboctave/numeric/lu.cc
--- a/liboctave/numeric/lu.cc
+++ b/liboctave/numeric/lu.cc
@@ -36,93 +36,93 @@ along with Octave; see the file COPYING.
 #include "fMatrix.h"
 #include "lo-error.h"
 #include "lu.h"
 #include "oct-locbuf.h"
 
 extern "C"
 {
   F77_RET_T
-  F77_FUNC (dgetrf, DGETRF) (const octave_idx_type&, const octave_idx_type&,
-                             double*, const octave_idx_type&,
-                             octave_idx_type*, octave_idx_type&);
+  F77_FUNC (dgetrf, DGETRF) (const F77_INT&, const F77_INT&,
+                             F77_DBLE*, const F77_INT&,
+                             F77_INT*, F77_INT&);
 
 #if defined (HAVE_QRUPDATE_LUU)
   F77_RET_T
-  F77_FUNC (dlu1up, DLU1UP) (const octave_idx_type&, const octave_idx_type&,
-                             double *, const octave_idx_type&,
-                             double *, const octave_idx_type&,
-                             double *, double *);
+  F77_FUNC (dlu1up, DLU1UP) (const F77_INT&, const F77_INT&,
+                             F77_DBLE *, const F77_INT&,
+                             F77_DBLE *, const F77_INT&,
+                             F77_DBLE *, F77_DBLE *);
 
   F77_RET_T
-  F77_FUNC (dlup1up, DLUP1UP) (const octave_idx_type&, const octave_idx_type&,
-                               double *, const octave_idx_type&,
-                               double *, const octave_idx_type&,
-                               octave_idx_type *, const double *,
-                               const double *, double *);
+  F77_FUNC (dlup1up, DLUP1UP) (const F77_INT&, const F77_INT&,
+                               F77_DBLE *, const F77_INT&,
+                               F77_DBLE *, const F77_INT&,
+                               F77_INT *, const F77_DBLE *,
+                               const F77_DBLE *, F77_DBLE *);
 #endif
 
   F77_RET_T
-  F77_FUNC (sgetrf, SGETRF) (const octave_idx_type&, const octave_idx_type&,
-                             float*, const octave_idx_type&, octave_idx_type*,
-                             octave_idx_type&);
+  F77_FUNC (sgetrf, SGETRF) (const F77_INT&, const F77_INT&,
+                             F77_REAL*, const F77_INT&, F77_INT*,
+                             F77_INT&);
 
 #if defined (HAVE_QRUPDATE_LUU)
   F77_RET_T
-  F77_FUNC (slu1up, SLU1UP) (const octave_idx_type&, const octave_idx_type&,
-                             float *, const octave_idx_type&,
-                             float *, const octave_idx_type&,
-                             float *, float *);
+  F77_FUNC (slu1up, SLU1UP) (const F77_INT&, const F77_INT&,
+                             F77_REAL *, const F77_INT&,
+                             F77_REAL *, const F77_INT&,
+                             F77_REAL *, F77_REAL *);
 
   F77_RET_T
-  F77_FUNC (slup1up, SLUP1UP) (const octave_idx_type&, const octave_idx_type&,
-                               float *, const octave_idx_type&,
-                               float *, const octave_idx_type&,
-                               octave_idx_type *, const float *,
-                               const float *, float *);
+  F77_FUNC (slup1up, SLUP1UP) (const F77_INT&, const F77_INT&,
+                               F77_REAL *, const F77_INT&,
+                               F77_REAL *, const F77_INT&,
+                               F77_INT *, const F77_REAL *,
+                               const F77_REAL *, F77_REAL *);
 #endif
 
   F77_RET_T
-  F77_FUNC (zgetrf, ZGETRF) (const octave_idx_type&, const octave_idx_type&,
-                             Complex*, const octave_idx_type&,
-                             octave_idx_type*, octave_idx_type&);
+  F77_FUNC (zgetrf, ZGETRF) (const F77_INT&, const F77_INT&,
+                             F77_DBLE_CMPLX*, const F77_INT&,
+                             F77_INT*, F77_INT&);
 
 #if defined (HAVE_QRUPDATE_LUU)
   F77_RET_T
-  F77_FUNC (zlu1up, ZLU1UP) (const octave_idx_type&, const octave_idx_type&,
-                             Complex *, const octave_idx_type&,
-                             Complex *, const octave_idx_type&,
-                             Complex *, Complex *);
+  F77_FUNC (zlu1up, ZLU1UP) (const F77_INT&, const F77_INT&,
+                             F77_DBLE_CMPLX *, const F77_INT&,
+                             F77_DBLE_CMPLX *, const F77_INT&,
+                             F77_DBLE_CMPLX *, F77_DBLE_CMPLX *);
 
   F77_RET_T
-  F77_FUNC (zlup1up, ZLUP1UP) (const octave_idx_type&, const octave_idx_type&,
-                               Complex *, const octave_idx_type&,
-                               Complex *, const octave_idx_type&,
-                               octave_idx_type *, const Complex *,
-                               const Complex *, Complex *);
+  F77_FUNC (zlup1up, ZLUP1UP) (const F77_INT&, const F77_INT&,
+                               F77_DBLE_CMPLX *, const F77_INT&,
+                               F77_DBLE_CMPLX *, const F77_INT&,
+                               F77_INT *, const F77_DBLE_CMPLX *,
+                               const F77_DBLE_CMPLX *, F77_DBLE_CMPLX *);
 #endif
 
   F77_RET_T
-  F77_FUNC (cgetrf, CGETRF) (const octave_idx_type&, const octave_idx_type&,
-                             FloatComplex*, const octave_idx_type&,
-                             octave_idx_type*, octave_idx_type&);
+  F77_FUNC (cgetrf, CGETRF) (const F77_INT&, const F77_INT&,
+                             F77_CMPLX*, const F77_INT&,
+                             F77_INT*, F77_INT&);
 
 #if defined (HAVE_QRUPDATE_LUU)
   F77_RET_T
-  F77_FUNC (clu1up, CLU1UP) (const octave_idx_type&, const octave_idx_type&,
-                             FloatComplex *, const octave_idx_type&,
-                             FloatComplex *, const octave_idx_type&,
-                             FloatComplex *, FloatComplex *);
+  F77_FUNC (clu1up, CLU1UP) (const F77_INT&, const F77_INT&,
+                             F77_CMPLX *, const F77_INT&,
+                             F77_CMPLX *, const F77_INT&,
+                             F77_CMPLX *, F77_CMPLX *);
 
   F77_RET_T
-  F77_FUNC (clup1up, CLUP1UP) (const octave_idx_type&, const octave_idx_type&,
-                               FloatComplex *, const octave_idx_type&,
-                               FloatComplex *, const octave_idx_type&,
-                               octave_idx_type *, const FloatComplex *,
-                               const FloatComplex *, FloatComplex *);
+  F77_FUNC (clup1up, CLUP1UP) (const F77_INT&, const F77_INT&,
+                               F77_CMPLX *, const F77_INT&,
+                               F77_CMPLX *, const F77_INT&,
+                               F77_INT *, const F77_CMPLX *,
+                               const F77_CMPLX *, F77_CMPLX *);
 #endif
 }
 
 template <typename T>
 lu<T>::lu (const T& l, const T& u,
                            const PermMatrix& p)
   : a_fact (u), l_fact (l), ipvt (p.transpose ().col_perm_vec ())
 {
diff --git a/liboctave/numeric/oct-convn.cc b/liboctave/numeric/oct-convn.cc
--- a/liboctave/numeric/oct-convn.cc
+++ b/liboctave/numeric/oct-convn.cc
@@ -35,48 +35,48 @@ along with Octave; see the file COPYING.
 // 2d convolution with a matrix kernel.
 template <typename T, typename R>
 static void
 convolve_2d (const T *a, octave_idx_type ma, octave_idx_type na,
              const R *b, octave_idx_type mb, octave_idx_type nb,
              T *c, bool inner);
 
 // Forward instances to our Fortran implementations.
-#define FORWARD_IMPL(T,R,f,F) \
+#define FORWARD_IMPL(T, R, f, F) \
 extern "C" \
 F77_RET_T \
-F77_FUNC (f##conv2o, F##CONV2O) (const octave_idx_type&, \
-                                 const octave_idx_type&, \
-                                 const T*, const octave_idx_type&, \
-                                 const octave_idx_type&, const R*, T *); \
+F77_FUNC (f##conv2o, F##CONV2O) (const F77_INT&, \
+                                 const F77_INT&, \
+                                 const T*, const F77_INT&, \
+                                 const F77_INT&, const R*, T *); \
 \
 extern "C" \
 F77_RET_T \
-F77_FUNC (f##conv2i, F##CONV2I) (const octave_idx_type&, \
-                                 const octave_idx_type&, \
-                                 const T*, const octave_idx_type&, \
-                                 const octave_idx_type&, const R*, T *); \
+F77_FUNC (f##conv2i, F##CONV2I) (const F77_INT&, \
+                                 const F77_INT&, \
+                                 const T*, const F77_INT&, \
+                                 const F77_INT&, const R*, T *); \
 \
 template <> void \
-convolve_2d<T, R> (const T *a, octave_idx_type ma, octave_idx_type na, \
-                   const R *b, octave_idx_type mb, octave_idx_type nb, \
+convolve_2d<T, R> (const T *a, F77_INT ma, F77_INT na, \
+                   const R *b, F77_INT mb, F77_INT nb, \
                    T *c, bool inner) \
 { \
   if (inner) \
     F77_XFCN (f##conv2i, F##CONV2I, (ma, na, a, mb, nb, b, c)); \
   else \
     F77_XFCN (f##conv2o, F##CONV2O, (ma, na, a, mb, nb, b, c)); \
 }
 
-FORWARD_IMPL (double, double, d, D)
-FORWARD_IMPL (float, float, s, S)
-FORWARD_IMPL (Complex, Complex, z, Z)
-FORWARD_IMPL (FloatComplex, FloatComplex, c, C)
-FORWARD_IMPL (Complex, double, zd, ZD)
-FORWARD_IMPL (FloatComplex, float, cs, CS)
+FORWARD_IMPL (F77_DBLE, F77_DBLE, d, D)
+FORWARD_IMPL (F77_REAL, F77_REAL, s, S)
+FORWARD_IMPL (F77_DBLE_CMPLX, F77_DBLE_CMPLX, z, Z)
+FORWARD_IMPL (F77_CMPLX, F77_CMPLX, c, C)
+FORWARD_IMPL (F77_DBLE_CMPLX, F77_DBLE, zd, ZD)
+FORWARD_IMPL (F77_CMPLX, F77_REAL, cs, CS)
 
 template <typename T, typename R>
 void convolve_nd (const T *a, const dim_vector& ad, const dim_vector& acd,
                   const R *b, const dim_vector& bd, const dim_vector& bcd,
                   T *c, const dim_vector& ccd, int nd, bool inner)
 {
   if (nd == 2)
     convolve_2d<T, R> (a, ad(0), ad(1), b, bd(0), bd(1), c, inner);
diff --git a/liboctave/numeric/oct-rand.cc b/liboctave/numeric/oct-rand.cc
--- a/liboctave/numeric/oct-rand.cc
+++ b/liboctave/numeric/oct-rand.cc
@@ -41,41 +41,41 @@ along with Octave; see the file COPYING.
 #include "randgamma.h"
 #include "randmtzig.h"
 #include "randpoisson.h"
 #include "singleton-cleanup.h"
 
 extern "C"
 {
   F77_RET_T
-  F77_FUNC (dgennor, DGENNOR) (const double&, const double&, double&);
+  F77_FUNC (dgennor, DGENNOR) (const F77_DBLE&, const F77_DBLE&, F77_DBLE&);
 
   F77_RET_T
-  F77_FUNC (dgenunf, DGENUNF) (const double&, const double&, double&);
+  F77_FUNC (dgenunf, DGENUNF) (const F77_DBLE&, const F77_DBLE&, F77_DBLE&);
 
   F77_RET_T
-  F77_FUNC (dgenexp, DGENEXP) (const double&, double&);
+  F77_FUNC (dgenexp, DGENEXP) (const F77_DBLE&, F77_DBLE&);
 
   F77_RET_T
-  F77_FUNC (dignpoi, DIGNPOI) (const double&, double&);
+  F77_FUNC (dignpoi, DIGNPOI) (const F77_DBLE&, F77_DBLE&);
 
   F77_RET_T
-  F77_FUNC (dgengam, DGENGAM) (const double&, const double&, double&);
+  F77_FUNC (dgengam, DGENGAM) (const F77_DBLE&, const F77_DBLE&, F77_DBLE&);
 
   F77_RET_T
-  F77_FUNC (setall, SETALL) (const int32_t&, const int32_t&);
+  F77_FUNC (setall, SETALL) (const F77_INT4&, const F77_INT4&);
 
   F77_RET_T
-  F77_FUNC (getsd, GETSD) (int32_t&, int32_t&);
+  F77_FUNC (getsd, GETSD) (F77_INT4&, F77_INT4&);
 
   F77_RET_T
-  F77_FUNC (setsd, SETSD) (const int32_t&, const int32_t&);
+  F77_FUNC (setsd, SETSD) (const F77_INT4&, const F77_INT4&);
 
   F77_RET_T
-  F77_FUNC (setcgn, SETCGN) (const int32_t&);
+  F77_FUNC (setcgn, SETCGN) (const F77_INT4&);
 }
 
 octave_rand *octave_rand::instance = 0;
 
 octave_rand::octave_rand (void)
   : current_distribution (uniform_dist), use_old_generators (false),
     rand_states ()
 {
diff --git a/liboctave/numeric/qr.cc b/liboctave/numeric/qr.cc
--- a/liboctave/numeric/qr.cc
+++ b/liboctave/numeric/qr.cc
@@ -42,237 +42,237 @@ along with Octave; see the file COPYING.
 #include "idx-vector.h"
 #include "lo-error.h"
 #include "oct-locbuf.h"
 #include "qr.h"
 
 extern "C"
 {
   F77_RET_T
-  F77_FUNC (dgeqrf, DGEQRF) (const octave_idx_type&, const octave_idx_type&,
-                             double*, const octave_idx_type&, double*,
-                             double*, const octave_idx_type&,
-                             octave_idx_type&);
+  F77_FUNC (dgeqrf, DGEQRF) (const F77_INT&, const F77_INT&,
+                             F77_DBLE*, const F77_INT&, F77_DBLE*,
+                             F77_DBLE*, const F77_INT&,
+                             F77_INT&);
 
   F77_RET_T
-  F77_FUNC (dorgqr, DORGQR) (const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, double*,
-                             const octave_idx_type&, double*, double*,
-                             const octave_idx_type&, octave_idx_type&);
+  F77_FUNC (dorgqr, DORGQR) (const F77_INT&, const F77_INT&,
+                             const F77_INT&, F77_DBLE*,
+                             const F77_INT&, F77_DBLE*, F77_DBLE*,
+                             const F77_INT&, F77_INT&);
 
 #if defined (HAVE_QRUPDATE)
 
   F77_RET_T
-  F77_FUNC (dqr1up, DQR1UP) (const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, double*,
-                             const octave_idx_type&, double*,
-                             const octave_idx_type&, double*, double*, double*);
+  F77_FUNC (dqr1up, DQR1UP) (const F77_INT&, const F77_INT&,
+                             const F77_INT&, F77_DBLE*,
+                             const F77_INT&, F77_DBLE*,
+                             const F77_INT&, F77_DBLE*, F77_DBLE*, F77_DBLE*);
 
   F77_RET_T
-  F77_FUNC (dqrinc, DQRINC) (const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, double*,
-                             const octave_idx_type&, double*,
-                             const octave_idx_type&, const octave_idx_type&,
-                             const double*, double*);
+  F77_FUNC (dqrinc, DQRINC) (const F77_INT&, const F77_INT&,
+                             const F77_INT&, F77_DBLE*,
+                             const F77_INT&, F77_DBLE*,
+                             const F77_INT&, const F77_INT&,
+                             const F77_DBLE*, F77_DBLE*);
 
   F77_RET_T
-  F77_FUNC (dqrdec, DQRDEC) (const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, double*,
-                             const octave_idx_type&, double*,
-                             const octave_idx_type&, const octave_idx_type&,
-                             double*);
+  F77_FUNC (dqrdec, DQRDEC) (const F77_INT&, const F77_INT&,
+                             const F77_INT&, F77_DBLE*,
+                             const F77_INT&, F77_DBLE*,
+                             const F77_INT&, const F77_INT&,
+                             F77_DBLE*);
 
   F77_RET_T
-  F77_FUNC (dqrinr, DQRINR) (const octave_idx_type&, const octave_idx_type&,
-                             double*, const octave_idx_type&, double*,
-                             const octave_idx_type&, const octave_idx_type&,
-                             const double*, double*);
+  F77_FUNC (dqrinr, DQRINR) (const F77_INT&, const F77_INT&,
+                             F77_DBLE*, const F77_INT&, F77_DBLE*,
+                             const F77_INT&, const F77_INT&,
+                             const F77_DBLE*, F77_DBLE*);
 
   F77_RET_T
-  F77_FUNC (dqrder, DQRDER) (const octave_idx_type&, const octave_idx_type&,
-                             double*, const octave_idx_type&, double*,
-                             const octave_idx_type&, const octave_idx_type&,
-                             double*);
+  F77_FUNC (dqrder, DQRDER) (const F77_INT&, const F77_INT&,
+                             F77_DBLE*, const F77_INT&, F77_DBLE*,
+                             const F77_INT&, const F77_INT&,
+                             F77_DBLE*);
 
   F77_RET_T
-  F77_FUNC (dqrshc, DQRSHC) (const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, double*,
-                             const octave_idx_type&, double*,
-                             const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, double*);
+  F77_FUNC (dqrshc, DQRSHC) (const F77_INT&, const F77_INT&,
+                             const F77_INT&, F77_DBLE*,
+                             const F77_INT&, F77_DBLE*,
+                             const F77_INT&, const F77_INT&,
+                             const F77_INT&, F77_DBLE*);
 
 #endif
 
   F77_RET_T
-  F77_FUNC (sgeqrf, SGEQRF) (const octave_idx_type&, const octave_idx_type&,
-                             float*, const octave_idx_type&, float*, float*,
-                             const octave_idx_type&, octave_idx_type&);
+  F77_FUNC (sgeqrf, SGEQRF) (const F77_INT&, const F77_INT&,
+                             F77_REAL*, const F77_INT&, F77_REAL*, F77_REAL*,
+                             const F77_INT&, F77_INT&);
 
   F77_RET_T
-  F77_FUNC (sorgqr, SORGQR) (const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, float*,
-                             const octave_idx_type&, float*, float*,
-                             const octave_idx_type&, octave_idx_type&);
+  F77_FUNC (sorgqr, SORGQR) (const F77_INT&, const F77_INT&,
+                             const F77_INT&, F77_REAL*,
+                             const F77_INT&, F77_REAL*, F77_REAL*,
+                             const F77_INT&, F77_INT&);
 
 #if defined (HAVE_QRUPDATE)
 
   F77_RET_T
-  F77_FUNC (sqr1up, SQR1UP) (const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, float*,
-                             const octave_idx_type&, float*,
-                             const octave_idx_type&, float*, float*, float*);
+  F77_FUNC (sqr1up, SQR1UP) (const F77_INT&, const F77_INT&,
+                             const F77_INT&, F77_REAL*,
+                             const F77_INT&, F77_REAL*,
+                             const F77_INT&, F77_REAL*, F77_REAL*, F77_REAL*);
 
   F77_RET_T
-  F77_FUNC (sqrinc, SQRINC) (const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, float*,
-                             const octave_idx_type&, float*,
-                             const octave_idx_type&,
-                             const octave_idx_type&, const float*, float*);
+  F77_FUNC (sqrinc, SQRINC) (const F77_INT&, const F77_INT&,
+                             const F77_INT&, F77_REAL*,
+                             const F77_INT&, F77_REAL*,
+                             const F77_INT&,
+                             const F77_INT&, const F77_REAL*, F77_REAL*);
 
   F77_RET_T
-  F77_FUNC (sqrdec, SQRDEC) (const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, float*,
-                             const octave_idx_type&, float*,
-                             const octave_idx_type&,
-                             const octave_idx_type&, float*);
+  F77_FUNC (sqrdec, SQRDEC) (const F77_INT&, const F77_INT&,
+                             const F77_INT&, F77_REAL*,
+                             const F77_INT&, F77_REAL*,
+                             const F77_INT&,
+                             const F77_INT&, F77_REAL*);
 
   F77_RET_T
-  F77_FUNC (sqrinr, SQRINR) (const octave_idx_type&, const octave_idx_type&,
-                             float*, const octave_idx_type&,
-                             float*, const octave_idx_type&,
-                             const octave_idx_type&, const float*, float*);
+  F77_FUNC (sqrinr, SQRINR) (const F77_INT&, const F77_INT&,
+                             F77_REAL*, const F77_INT&,
+                             F77_REAL*, const F77_INT&,
+                             const F77_INT&, const F77_REAL*, F77_REAL*);
 
   F77_RET_T
-  F77_FUNC (sqrder, SQRDER) (const octave_idx_type&, const octave_idx_type&,
-                             float*, const octave_idx_type&,
-                             float*, const octave_idx_type&,
-                             const octave_idx_type&, float*);
+  F77_FUNC (sqrder, SQRDER) (const F77_INT&, const F77_INT&,
+                             F77_REAL*, const F77_INT&,
+                             F77_REAL*, const F77_INT&,
+                             const F77_INT&, F77_REAL*);
 
   F77_RET_T
-  F77_FUNC (sqrshc, SQRSHC) (const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, float*,
-                             const octave_idx_type&, float*,
-                             const octave_idx_type&,
-                             const octave_idx_type&, const octave_idx_type&,
-                             float*);
+  F77_FUNC (sqrshc, SQRSHC) (const F77_INT&, const F77_INT&,
+                             const F77_INT&, F77_REAL*,
+                             const F77_INT&, F77_REAL*,
+                             const F77_INT&,
+                             const F77_INT&, const F77_INT&,
+                             F77_REAL*);
 
 #endif
 
   F77_RET_T
-  F77_FUNC (zgeqrf, ZGEQRF) (const octave_idx_type&, const octave_idx_type&,
-                             Complex*, const octave_idx_type&, Complex*,
-                             Complex*, const octave_idx_type&,
-                             octave_idx_type&);
+  F77_FUNC (zgeqrf, ZGEQRF) (const F77_INT&, const F77_INT&,
+                             F77_DBLE_CMPLX*, const F77_INT&, F77_DBLE_CMPLX*,
+                             F77_DBLE_CMPLX*, const F77_INT&,
+                             F77_INT&);
 
   F77_RET_T
-  F77_FUNC (zungqr, ZUNGQR) (const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, Complex*,
-                             const octave_idx_type&, Complex*, Complex*,
-                             const octave_idx_type&, octave_idx_type&);
+  F77_FUNC (zungqr, ZUNGQR) (const F77_INT&, const F77_INT&,
+                             const F77_INT&, F77_DBLE_CMPLX*,
+                             const F77_INT&, F77_DBLE_CMPLX*, F77_DBLE_CMPLX*,
+                             const F77_INT&, F77_INT&);
 
 #if defined (HAVE_QRUPDATE)
 
   F77_RET_T
-  F77_FUNC (zqr1up, ZQR1UP) (const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, Complex*,
-                             const octave_idx_type&, Complex*,
-                             const octave_idx_type&, Complex*,
-                             Complex*, Complex*, double*);
+  F77_FUNC (zqr1up, ZQR1UP) (const F77_INT&, const F77_INT&,
+                             const F77_INT&, F77_DBLE_CMPLX*,
+                             const F77_INT&, F77_DBLE_CMPLX*,
+                             const F77_INT&, F77_DBLE_CMPLX*,
+                             F77_DBLE_CMPLX*, F77_DBLE_CMPLX*, F77_DBLE*);
 
   F77_RET_T
-  F77_FUNC (zqrinc, ZQRINC) (const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, Complex*,
-                             const octave_idx_type&, Complex*,
-                             const octave_idx_type&, const octave_idx_type&,
-                             const Complex*, double*);
+  F77_FUNC (zqrinc, ZQRINC) (const F77_INT&, const F77_INT&,
+                             const F77_INT&, F77_DBLE_CMPLX*,
+                             const F77_INT&, F77_DBLE_CMPLX*,
+                             const F77_INT&, const F77_INT&,
+                             const F77_DBLE_CMPLX*, F77_DBLE*);
 
   F77_RET_T
-  F77_FUNC (zqrdec, ZQRDEC) (const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, Complex*,
-                             const octave_idx_type&, Complex*,
-                             const octave_idx_type&, const octave_idx_type&,
-                             double*);
+  F77_FUNC (zqrdec, ZQRDEC) (const F77_INT&, const F77_INT&,
+                             const F77_INT&, F77_DBLE_CMPLX*,
+                             const F77_INT&, F77_DBLE_CMPLX*,
+                             const F77_INT&, const F77_INT&,
+                             F77_DBLE*);
 
   F77_RET_T
-  F77_FUNC (zqrinr, ZQRINR) (const octave_idx_type&, const octave_idx_type&,
-                             Complex*, const octave_idx_type&, Complex*,
-                             const octave_idx_type&, const octave_idx_type&,
-                             const Complex*, double*);
+  F77_FUNC (zqrinr, ZQRINR) (const F77_INT&, const F77_INT&,
+                             F77_DBLE_CMPLX*, const F77_INT&, F77_DBLE_CMPLX*,
+                             const F77_INT&, const F77_INT&,
+                             const F77_DBLE_CMPLX*, F77_DBLE*);
 
   F77_RET_T
-  F77_FUNC (zqrder, ZQRDER) (const octave_idx_type&, const octave_idx_type&,
-                             Complex*, const octave_idx_type&, Complex*,
-                             const octave_idx_type&, const octave_idx_type&,
-                             Complex*, double*);
+  F77_FUNC (zqrder, ZQRDER) (const F77_INT&, const F77_INT&,
+                             F77_DBLE_CMPLX*, const F77_INT&, F77_DBLE_CMPLX*,
+                             const F77_INT&, const F77_INT&,
+                             F77_DBLE_CMPLX*, F77_DBLE*);
 
   F77_RET_T
-  F77_FUNC (zqrshc, ZQRSHC) (const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, Complex*,
-                             const octave_idx_type&, Complex*,
-                             const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, Complex*, double*);
+  F77_FUNC (zqrshc, ZQRSHC) (const F77_INT&, const F77_INT&,
+                             const F77_INT&, F77_DBLE_CMPLX*,
+                             const F77_INT&, F77_DBLE_CMPLX*,
+                             const F77_INT&, const F77_INT&,
+                             const F77_INT&, F77_DBLE_CMPLX*, F77_DBLE*);
 
 #endif
 
   F77_RET_T
-  F77_FUNC (cgeqrf, CGEQRF) (const octave_idx_type&, const octave_idx_type&,
-                             FloatComplex*, const octave_idx_type&,
-                             FloatComplex*, FloatComplex*,
-                             const octave_idx_type&, octave_idx_type&);
+  F77_FUNC (cgeqrf, CGEQRF) (const F77_INT&, const F77_INT&,
+                             F77_CMPLX*, const F77_INT&,
+                             F77_CMPLX*, F77_CMPLX*,
+                             const F77_INT&, F77_INT&);
 
   F77_RET_T
-  F77_FUNC (cungqr, CUNGQR) (const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, FloatComplex*,
-                             const octave_idx_type&, FloatComplex*,
-                             FloatComplex*, const octave_idx_type&,
-                             octave_idx_type&);
+  F77_FUNC (cungqr, CUNGQR) (const F77_INT&, const F77_INT&,
+                             const F77_INT&, F77_CMPLX*,
+                             const F77_INT&, F77_CMPLX*,
+                             F77_CMPLX*, const F77_INT&,
+                             F77_INT&);
 
 #if defined (HAVE_QRUPDATE)
 
   F77_RET_T
-  F77_FUNC (cqr1up, CQR1UP) (const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, FloatComplex*,
-                             const octave_idx_type&, FloatComplex*,
-                             const octave_idx_type&, FloatComplex*,
-                             FloatComplex*, FloatComplex*, float*);
+  F77_FUNC (cqr1up, CQR1UP) (const F77_INT&, const F77_INT&,
+                             const F77_INT&, F77_CMPLX*,
+                             const F77_INT&, F77_CMPLX*,
+                             const F77_INT&, F77_CMPLX*,
+                             F77_CMPLX*, F77_CMPLX*, F77_REAL*);
 
   F77_RET_T
-  F77_FUNC (cqrinc, CQRINC) (const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, FloatComplex*,
-                             const octave_idx_type&, FloatComplex*,
-                             const octave_idx_type&,const octave_idx_type&,
-                             const FloatComplex*, float*);
+  F77_FUNC (cqrinc, CQRINC) (const F77_INT&, const F77_INT&,
+                             const F77_INT&, F77_CMPLX*,
+                             const F77_INT&, F77_CMPLX*,
+                             const F77_INT&,const F77_INT&,
+                             const F77_CMPLX*, F77_REAL*);
 
   F77_RET_T
-  F77_FUNC (cqrdec, CQRDEC) (const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, FloatComplex*,
-                             const octave_idx_type&, FloatComplex*,
-                             const octave_idx_type&, const octave_idx_type&,
-                             float*);
+  F77_FUNC (cqrdec, CQRDEC) (const F77_INT&, const F77_INT&,
+                             const F77_INT&, F77_CMPLX*,
+                             const F77_INT&, F77_CMPLX*,
+                             const F77_INT&, const F77_INT&,
+                             F77_REAL*);
 
   F77_RET_T
-  F77_FUNC (cqrinr, CQRINR) (const octave_idx_type&, const octave_idx_type&,
-                             FloatComplex*, const octave_idx_type&,
-                             FloatComplex*, const octave_idx_type&,
-                             const octave_idx_type&, const FloatComplex*,
-                             float*);
+  F77_FUNC (cqrinr, CQRINR) (const F77_INT&, const F77_INT&,
+                             F77_CMPLX*, const F77_INT&,
+                             F77_CMPLX*, const F77_INT&,
+                             const F77_INT&, const F77_CMPLX*,
+                             F77_REAL*);
 
   F77_RET_T
-  F77_FUNC (cqrder, CQRDER) (const octave_idx_type&, const octave_idx_type&,
-                             FloatComplex*, const octave_idx_type&,
-                             FloatComplex*, const octave_idx_type&,
-                             const octave_idx_type&, FloatComplex*, float*);
+  F77_FUNC (cqrder, CQRDER) (const F77_INT&, const F77_INT&,
+                             F77_CMPLX*, const F77_INT&,
+                             F77_CMPLX*, const F77_INT&,
+                             const F77_INT&, F77_CMPLX*, F77_REAL*);
 
   F77_RET_T
-  F77_FUNC (cqrshc, CQRSHC) (const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, FloatComplex*,
-                             const octave_idx_type&, FloatComplex*,
-                             const octave_idx_type&, const octave_idx_type&,
-                             const octave_idx_type&, FloatComplex*,
-                             float*);
+  F77_FUNC (cqrshc, CQRSHC) (const F77_INT&, const F77_INT&,
+                             const F77_INT&, F77_CMPLX*,
+                             const F77_INT&, F77_CMPLX*,
+                             const F77_INT&, const F77_INT&,
+                             const F77_INT&, F77_CMPLX*,
+                             F77_REAL*);
 
 #endif
 }
 
 template <typename T>
 qr<T>::qr (const T& q_arg, const T& r_arg)
   : q (q_arg), r (r_arg)
 {
diff --git a/liboctave/numeric/qrp.cc b/liboctave/numeric/qrp.cc
--- a/liboctave/numeric/qrp.cc
+++ b/liboctave/numeric/qrp.cc
@@ -36,37 +36,37 @@ along with Octave; see the file COPYING.
 #include "fRowVector.h"
 #include "lo-error.h"
 #include "oct-locbuf.h"
 #include "qrp.h"
 
 extern "C"
 {
   F77_RET_T
-  F77_FUNC (dgeqp3, DGEQP3) (const octave_idx_type&, const octave_idx_type&,
-                             double*, const octave_idx_type&,
-                             octave_idx_type*, double*, double*,
-                             const octave_idx_type&, octave_idx_type&);
+  F77_FUNC (dgeqp3, DGEQP3) (const F77_INT&, const F77_INT&,
+                             F77_DBLE*, const F77_INT&,
+                             F77_INT*, F77_DBLE*, F77_DBLE*,
+                             const F77_INT&, F77_INT&);
 
   F77_RET_T
-  F77_FUNC (sgeqp3, SGEQP3) (const octave_idx_type&, const octave_idx_type&,
-                             float*, const octave_idx_type&, octave_idx_type*,
-                             float*, float*, const octave_idx_type&,
-                             octave_idx_type&);
+  F77_FUNC (sgeqp3, SGEQP3) (const F77_INT&, const F77_INT&,
+                             F77_REAL*, const F77_INT&, F77_INT*,
+                             F77_REAL*, F77_REAL*, const F77_INT&,
+                             F77_INT&);
   F77_RET_T
-  F77_FUNC (zgeqp3, ZGEQP3) (const octave_idx_type&, const octave_idx_type&,
-                             Complex*, const octave_idx_type&,
-                             octave_idx_type*, Complex*, Complex*,
-                             const octave_idx_type&, double*,
-                             octave_idx_type&);
+  F77_FUNC (zgeqp3, ZGEQP3) (const F77_INT&, const F77_INT&,
+                             F77_DBLE_CMPLX*, const F77_INT&,
+                             F77_INT*, F77_DBLE_CMPLX*, F77_DBLE_CMPLX*,
+                             const F77_INT&, F77_DBLE*,
+                             F77_INT&);
   F77_RET_T
-  F77_FUNC (cgeqp3, CGEQP3) (const octave_idx_type&, const octave_idx_type&,
-                             FloatComplex*, const octave_idx_type&,
-                             octave_idx_type*, FloatComplex*, FloatComplex*,
-                             const octave_idx_type&, float*, octave_idx_type&);
+  F77_FUNC (cgeqp3, CGEQP3) (const F77_INT&, const F77_INT&,
+                             F77_CMPLX*, const F77_INT&,
+                             F77_INT*, F77_CMPLX*, F77_CMPLX*,
+                             const F77_INT&, F77_REAL*, F77_INT&);
 }
 
 // Specialization.
 
 template <>
 void
 qrp<Matrix>::init (const Matrix& a, type qr_type)
 {
diff --git a/liboctave/numeric/randpoisson.cc b/liboctave/numeric/randpoisson.cc
--- a/liboctave/numeric/randpoisson.cc
+++ b/liboctave/numeric/randpoisson.cc
@@ -43,18 +43,21 @@ along with Octave; see the file COPYING.
 #include "randpoisson.h"
 
 #undef INFINITE
 #define INFINITE lo_ieee_isinf
 #define RUNI oct_randu()
 #define RNOR oct_randn()
 #define LGAMMA xlgamma
 
-F77_RET_T
-F77_FUNC (dlgams, DLGAMS) (const double *, double *, double *);
+extern "C"
+{
+  F77_RET_T
+  F77_FUNC (dlgams, DLGAMS) (const F77_DBLE *, F77_DBLE *, F77_DBLE *);
+}
 
 static double
 xlgamma (double x)
 {
   double result;
 #if defined (HAVE_LGAMMA)
   result = lgamma (x);
 #else
diff --git a/liboctave/numeric/schur.cc b/liboctave/numeric/schur.cc
--- a/liboctave/numeric/schur.cc
+++ b/liboctave/numeric/schur.cc
@@ -39,77 +39,77 @@ typedef octave_idx_type (*float_complex_
 
 extern "C"
 {
   F77_RET_T
   F77_FUNC (dgeesx, DGEESX) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
                              double_selector,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, double*,
-                             const octave_idx_type&, octave_idx_type&,
-                             double*, double*, double*, const octave_idx_type&,
-                             double&, double&, double*, const octave_idx_type&,
-                             octave_idx_type*, const octave_idx_type&,
-                             octave_idx_type*, octave_idx_type&
+                             const F77_INT&, F77_DBLE*,
+                             const F77_INT&, F77_INT&,
+                             F77_DBLE*, F77_DBLE*, F77_DBLE*, const F77_INT&,
+                             F77_DBLE&, F77_DBLE&, F77_DBLE*, const F77_INT&,
+                             F77_INT*, const F77_INT&,
+                             F77_INT*, F77_INT&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (sgeesx, SGEESX) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
                              float_selector,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, float*,
-                             const octave_idx_type&, octave_idx_type&,
-                             float*, float*, float*, const octave_idx_type&,
-                             float&, float&, float*, const octave_idx_type&,
-                             octave_idx_type*, const octave_idx_type&,
-                             octave_idx_type*, octave_idx_type&
+                             const F77_INT&, F77_REAL*,
+                             const F77_INT&, F77_INT&,
+                             F77_REAL*, F77_REAL*, F77_REAL*, const F77_INT&,
+                             F77_REAL&, F77_REAL&, F77_REAL*, const F77_INT&,
+                             F77_INT*, const F77_INT&,
+                             F77_INT*, F77_INT&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (zgeesx, ZGEESX) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
                              complex_selector,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, Complex*,
-                             const octave_idx_type&, octave_idx_type&,
-                             Complex*, Complex*, const octave_idx_type&,
-                             double&, double&, Complex*,
-                             const octave_idx_type&, double*,
-                             octave_idx_type*, octave_idx_type&
+                             const F77_INT&, F77_DBLE_CMPLX*,
+                             const F77_INT&, F77_INT&,
+                             F77_DBLE_CMPLX*, F77_DBLE_CMPLX*, const F77_INT&,
+                             F77_DBLE&, F77_DBLE&, F77_DBLE_CMPLX*,
+                             const F77_INT&, F77_DBLE*,
+                             F77_INT*, F77_INT&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (zrsf2csf, ZRSF2CSF) (const octave_idx_type&, Complex *,
-                                 Complex *, double *, double *);
+  F77_FUNC (zrsf2csf, ZRSF2CSF) (const F77_INT&, F77_DBLE_CMPLX *,
+                                 F77_DBLE_CMPLX *, F77_DBLE *, F77_DBLE *);
   F77_RET_T
   F77_FUNC (cgeesx, CGEESX) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
                              float_complex_selector,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, FloatComplex*,
-                             const octave_idx_type&, octave_idx_type&,
-                             FloatComplex*, FloatComplex*,
-                             const octave_idx_type&, float&, float&,
-                             FloatComplex*, const octave_idx_type&,
-                             float*, octave_idx_type*, octave_idx_type&
+                             const F77_INT&, F77_CMPLX*,
+                             const F77_INT&, F77_INT&,
+                             F77_CMPLX*, F77_CMPLX*,
+                             const F77_INT&, F77_REAL&, F77_REAL&,
+                             F77_CMPLX*, const F77_INT&,
+                             F77_REAL*, F77_INT*, F77_INT&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (crsf2csf, CRSF2CSF) (const octave_idx_type&, FloatComplex *,
-                                 FloatComplex *, float *, float *);
+  F77_FUNC (crsf2csf, CRSF2CSF) (const F77_INT&, F77_CMPLX *,
+                                 F77_CMPLX *, F77_REAL *, F77_REAL *);
 }
 
 // For real types.
 
 template <typename T>
 static octave_idx_type
 select_ana (const T& a, const T&)
 {
diff --git a/liboctave/numeric/svd.cc b/liboctave/numeric/svd.cc
--- a/liboctave/numeric/svd.cc
+++ b/liboctave/numeric/svd.cc
@@ -37,95 +37,95 @@ along with Octave; see the file COPYING.
 #include "oct-locbuf.h"
 #include "svd.h"
 
 extern "C"
 {
   F77_RET_T
   F77_FUNC (dgesvd, DGESVD) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&,
-                             double*, const octave_idx_type&, double*,
-                             double*, const octave_idx_type&, double*,
-                             const octave_idx_type&, double*,
-                             const octave_idx_type&, octave_idx_type&
+                             const F77_INT&, const F77_INT&,
+                             F77_DBLE*, const F77_INT&, F77_DBLE*,
+                             F77_DBLE*, const F77_INT&, F77_DBLE*,
+                             const F77_INT&, F77_DBLE*,
+                             const F77_INT&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (dgesdd, DGESDD) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&,
-                             double*, const octave_idx_type&, double*,
-                             double*, const octave_idx_type&, double*,
-                             const octave_idx_type&, double*,
-                             const octave_idx_type&, octave_idx_type *,
-                             octave_idx_type&
+                             const F77_INT&, const F77_INT&,
+                             F77_DBLE*, const F77_INT&, F77_DBLE*,
+                             F77_DBLE*, const F77_INT&, F77_DBLE*,
+                             const F77_INT&, F77_DBLE*,
+                             const F77_INT&, F77_INT *,
+                             F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (sgesvd, SGESVD) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&,
-                             float*, const octave_idx_type&, float*,
-                             float*, const octave_idx_type&, float*,
-                             const octave_idx_type&, float*,
-                             const octave_idx_type&, octave_idx_type&
+                             const F77_INT&, const F77_INT&,
+                             F77_REAL*, const F77_INT&, F77_REAL*,
+                             F77_REAL*, const F77_INT&, F77_REAL*,
+                             const F77_INT&, F77_REAL*,
+                             const F77_INT&, F77_INT&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (sgesdd, SGESDD) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&,
-                             float*, const octave_idx_type&, float*,
-                             float*, const octave_idx_type&, float*,
-                             const octave_idx_type&, float*,
-                             const octave_idx_type&, octave_idx_type *,
-                             octave_idx_type&
+                             const F77_INT&, const F77_INT&,
+                             F77_REAL*, const F77_INT&, F77_REAL*,
+                             F77_REAL*, const F77_INT&, F77_REAL*,
+                             const F77_INT&, F77_REAL*,
+                             const F77_INT&, F77_INT *,
+                             F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (zgesvd, ZGESVD) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&,
-                             Complex*, const octave_idx_type&,
-                             double*, Complex*, const octave_idx_type&,
-                             Complex*, const octave_idx_type&, Complex*,
-                             const octave_idx_type&, double*, octave_idx_type&
+                             const F77_INT&, const F77_INT&,
+                             F77_DBLE_CMPLX*, const F77_INT&,
+                             F77_DBLE*, F77_DBLE_CMPLX*, const F77_INT&,
+                             F77_DBLE_CMPLX*, const F77_INT&, F77_DBLE_CMPLX*,
+                             const F77_INT&, F77_DBLE*, F77_INT&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (zgesdd, ZGESDD) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&,
-                             Complex*, const octave_idx_type&,
-                             double*, Complex*, const octave_idx_type&,
-                             Complex*, const octave_idx_type&, Complex*,
-                             const octave_idx_type&, double*,
-                             octave_idx_type *, octave_idx_type&
+                             const F77_INT&, const F77_INT&,
+                             F77_DBLE_CMPLX*, const F77_INT&,
+                             F77_DBLE*, F77_DBLE_CMPLX*, const F77_INT&,
+                             F77_DBLE_CMPLX*, const F77_INT&, F77_DBLE_CMPLX*,
+                             const F77_INT&, F77_DBLE*,
+                             F77_INT *, F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
   F77_RET_T
   F77_FUNC (cgesvd, CGESVD) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&,
-                             FloatComplex*, const octave_idx_type&, float*,
-                             FloatComplex*, const octave_idx_type&,
-                             FloatComplex*, const octave_idx_type&,
-                             FloatComplex*, const octave_idx_type&,
-                             float*, octave_idx_type&
+                             const F77_INT&, const F77_INT&,
+                             F77_CMPLX*, const F77_INT&, F77_REAL*,
+                             F77_CMPLX*, const F77_INT&,
+                             F77_CMPLX*, const F77_INT&,
+                             F77_CMPLX*, const F77_INT&,
+                             F77_REAL*, F77_INT&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (cgesdd, CGESDD) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&,
-                             FloatComplex*, const octave_idx_type&, float*,
-                             FloatComplex*, const octave_idx_type&,
-                             FloatComplex*, const octave_idx_type&,
-                             FloatComplex*, const octave_idx_type&,
-                             float*, octave_idx_type *, octave_idx_type&
+                             const F77_INT&, const F77_INT&,
+                             F77_CMPLX*, const F77_INT&, F77_REAL*,
+                             F77_CMPLX*, const F77_INT&,
+                             F77_CMPLX*, const F77_INT&,
+                             F77_CMPLX*, const F77_INT&,
+                             F77_REAL*, F77_INT *, F77_INT&
                              F77_CHAR_ARG_LEN_DECL);
 }
 
 template <typename T>
 T
 svd<T>::left_singular_matrix (void) const
 {
   if (type_computed == svd::sigma_only)
