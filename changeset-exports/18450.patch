# HG changeset patch
# User Mike Miller <mtmiller@ieee.org>
# Date 1392267610 18000
#      Thu Feb 13 00:00:10 2014 -0500
# Branch stable
# Node ID 694e8f0b3862c53c84af76529950358796fcdcc4
# Parent  ff7e7928f1608025db396f471ab070859edad76c
freqz: Make frequency response plot visually compatible with Matlab (bug #41464)

* freqz_plot.m: Eliminate the extraneous "pass band" subplot for visual
compatibility with Matlab. Use y-axis labels instead of legends. Always
autoscale the y-axis. Label the frequency axis in units of normalized
radians or Hz depending on a new optional argument.
* freqz.m: Tell freqz_plot whether the frequency vector is in normalized
radians or Hz.

diff --git a/scripts/signal/freqz.m b/scripts/signal/freqz.m
--- a/scripts/signal/freqz.m
+++ b/scripts/signal/freqz.m
@@ -104,21 +104,24 @@ function [h_r, f_r] = freqz (b, a, n, re
   if (isempty (region))
     if (isreal (b) && isreal (a))
       region = "half";
     else
       region = "whole";
     endif
   endif
   if (isempty (Fs))
+    freq_norm = true;
     if (nargout == 0)
       Fs = 2;
     else
       Fs = 2*pi;
     endif
+  else
+    freq_norm = false;
   endif
 
   a = a(:);
   b = b(:);
 
   if (! isscalar (n))
     ## Explicit frequency vector given
     w = f = n;
@@ -166,17 +169,17 @@ function [h_r, f_r] = freqz (b, a, n, re
   h = hb ./ ha;
 
   if (nargout != 0)
     ## Return values and don't plot.
     h_r = h;
     f_r = f;
   else
     ## Plot and don't return values.
-    freqz_plot (f, h);
+    freqz_plot (f, h, freq_norm);
   endif
 
 endfunction
 
 
 %!test # correct values and fft-polyval consistency
 %! ## butterworth filter, order 2, cutoff pi/2 radians
 %! b = [0.292893218813452  0.585786437626905  0.292893218813452];
diff --git a/scripts/signal/freqz_plot.m b/scripts/signal/freqz_plot.m
--- a/scripts/signal/freqz_plot.m
+++ b/scripts/signal/freqz_plot.m
@@ -12,56 +12,55 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {} freqz_plot (@var{w}, @var{h})
-## Plot the pass band, stop band and phase response of @var{h}.
+## @deftypefn  {Function File} {} freqz_plot (@var{w}, @var{h})
+## @deftypefnx {Function File} {} freqz_plot (@var{w}, @var{h}, @var{freq_hz})
+## Plot the pass band, stop band and phase response of @var{h}.  If the
+## optional @var{freq_norm} argument is true, the frequency vector @var{w}
+## is in units of normalized radians and the x-axis is labeled as such.
 ## @end deftypefn
 
 ## Author: Paul Kienzle <pkienzle@users.sf.net>
 
-function freqz_plot (w, h)
+function freqz_plot (w, h, freq_norm = false)
 
-  if (nargin != 2)
+  if (nargin < 2 || nargin > 3)
     print_usage ();
   endif
 
   n = length (w);
 
   ## ## exclude zero-frequency
   ## h = h (2 : length (h));
   ## w = w (2 : length (w));
   ## n = n-1;
 
   mag = 20 * log10 (abs (h));
   phase = unwrap (arg (h));
-  maxmag = max (mag);
 
-  subplot (3, 1, 1);
-  plot (w, mag);
-  grid ("on");
-  legend ("Pass band (dB)");
-  axis ([w(1), w(n), maxmag-3, maxmag], "labely");
+  if (freq_norm)
+    x_label = "Normalized Frequency (\\times\\pi rad/sample)";
+  else
+    x_label = "Frequency (Hz)";
+  endif
 
-  subplot (3, 1, 2);
+  subplot (2, 1, 1);
   plot (w, mag);
   grid ("on");
-  legend ("Stop band (dB)");
-  if (maxmag - min (mag) > 100)
-    axis ([w(1), w(n), maxmag-100, maxmag], "labely");
-  else
-    axis ("autoy", "labely");
-  endif
+  axis ([w(1), w(n)], "autoy");
+  xlabel (x_label);
+  ylabel ("Magnitude (dB)");
 
-  subplot (3, 1, 3);
+  subplot (2, 1, 2);
   plot (w, phase*360/(2*pi));
   grid ("on");
-  legend ("Phase (degrees)");
-  xlabel ("Frequency");
-  axis ([w(1), w(n)], "autoy", "label");
+  axis ([w(1), w(n)], "autoy");
+  xlabel (x_label);
+  ylabel ("Phase (degrees)");
 
 endfunction
 
