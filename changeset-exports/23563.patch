# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1496960467 14400
#      Thu Jun 08 18:21:07 2017 -0400
# Node ID 614d71cdf6141515131f1fd9ff08fbdb8f0c1072
# Parent  35ee7e8fb33bb208d2db4a12ed4456065acd16c1
maint: Strip trailing whitespace from files.

diff --git a/NEWS b/NEWS
--- a/NEWS
+++ b/NEWS
@@ -43,21 +43,21 @@ Summary of important user-visible change
     be removed from Octave 4.8 (or whatever version is the second major
     release after 4.4):
 
       Function             | Replacement
       ---------------------|------------------
 
  ** Deprecated graphics properties.
 
-    The following properties or allowed corresponding values have been 
-    deprecated in Octave 4.4 and will be removed from Octave 4.8 (or whatever 
+    The following properties or allowed corresponding values have been
+    deprecated in Octave 4.4 and will be removed from Octave 4.8 (or whatever
     version is the second major release after 4.4):
 
-      Object               | Property                | Value   
+      Object               | Property                | Value
       ---------------------|-------------------------|-------------------
       figure               | doublebuffer            |
                            | mincolormap             |
                            | wvisual                 |
                            | wvisualmode             |
                            | xdisplay                |
                            | xvisual                 |
                            | xvisualmode             |
diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -1,24 +1,24 @@
 dnl Process this file with autoconf to produce a configure script.
 dnl
 dnl Copyright (C) 1993-2017 John W. Eaton
 ###
 ### This file is part of Octave.
-### 
+###
 ### Octave is free software; you can redistribute it and/or modify it
 ### under the terms of the GNU General Public License as published by
 ### the Free Software Foundation; either version 3 of the License, or
 ### (at your option) any later version.
-### 
+###
 ### Octave is distributed in the hope that it will be useful, but
 ### WITHOUT ANY WARRANTY; without even the implied warranty of
 ### MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 ### GNU General Public License for more details.
-### 
+###
 ### You should have received a copy of the GNU General Public License
 ### along with Octave; see the file COPYING.  If not, see
 ### <http://www.gnu.org/licenses/>.
 
 AC_PREREQ([2.65])
 AC_INIT([GNU Octave], [4.3.0+], [http://octave.org/bugs.html], [octave])
 
 dnl Note that the version number is duplicated here and in AC_INIT
@@ -335,17 +335,17 @@ AC_ARG_ENABLE([docs],
 ### If possible, use a 64-bit integer type for array dimensions and indexing.
 
 AC_CHECK_SIZEOF([void *])
 if test $ac_cv_sizeof_void_p -ge 8; then
   ENABLE_64=yes
 else
   ENABLE_64=no
 fi
-     
+
 AC_ARG_ENABLE(64,
   [AS_HELP_STRING([--disable-64],
     [don't use 64-bit integers for array dimensions and indexing])],
   [case $enableval in
      yes) ENABLE_64=yes ;;
      no) ENABLE_64=no ;;
      *) AC_MSG_ERROR([bad value $enableval for --enable-64]) ;;
    esac])
diff --git a/doc/interpreter/container.txi b/doc/interpreter/container.txi
--- a/doc/interpreter/container.txi
+++ b/doc/interpreter/container.txi
@@ -540,17 +540,17 @@ be converted to another type of containe
 
 @node containers.Map
 @section containers.Map
 @cindex Map
 @cindex key/value store
 @cindex hash table
 
 @c FIXME: Need to fill in documentation on what a Map is, when to use it over
-@c        other container types, how to perform basic operations with a Map. 
+@c        other container types, how to perform basic operations with a Map.
 
 @c FIXME: Currently have trouble getting documentation for classdef functions.
 @DOCSTRING(containers.Map)
 
 @node Cell Arrays
 @section Cell Arrays
 @cindex cell arrays
 
@@ -1051,25 +1051,25 @@ in@{2@} = inf;
 in@{3@} = "last";
 in@{4@} = "first";
 out = cell (4, 1);
 [out@{1:3@}] = in@{1 : 3@};
 [out@{4:6@}] = in@{[1, 2, 4]@})
      @result{} out =
         @{
            [1,1] =
-         
+
               10   20   30
-         
+
            [2,1] = Inf
            [3,1] = last
            [4,1] =
-         
+
               10   20   30
-         
+
            [5,1] = Inf
            [6,1] = first
         @}
 @end group
 @end example
 
 
 @node Comma Separated Lists Generated from Structure Arrays
diff --git a/doc/interpreter/plot.txi b/doc/interpreter/plot.txi
--- a/doc/interpreter/plot.txi
+++ b/doc/interpreter/plot.txi
@@ -1803,23 +1803,23 @@ is
 @group
 function mycallback (hsrc, evt)
 @dots{}
 endfunction
 @end group
 @end example
 
 @noindent
-where @code{hsrc} is a handle to the source of the callback, and @code{evt} 
-gives some event specific data.  
-
-The function can be provided as a function handle to a plain Octave function, 
-as an anonymous function or as a string representing an Octvae command. The 
-latter syntax is not recommended since syntax errors will only occur when the 
-string is evaluated.  
+where @code{hsrc} is a handle to the source of the callback, and @code{evt}
+gives some event specific data.
+
+The function can be provided as a function handle to a plain Octave function,
+as an anonymous function or as a string representing an Octvae command. The
+latter syntax is not recommended since syntax errors will only occur when the
+string is evaluated.
 @xref{Function Handles Anonymous Functions Inline Functions, , Function Handles section}.
 
 This can then be associated
 with an object either at the objects creation or later with the
 @code{set} function.  For example,
 
 @example
 plot (x, "DeleteFcn", @@(h, e) disp ("Window Deleted"))
@@ -1841,36 +1841,42 @@ function mycallback (h, e, a1)
 endfunction
 @end group
 @end example
 
 The basic callback functions that are available for all graphics objects
 are
 
 @itemize @bullet
-@item CreateFcn: 
-called at the moment of the objects creation.  It is not called if the object is altered in any way, and so it only makes sense to define this callback in the function call that defines the object.  Callbacks that are added to @code{CreateFcn} later with the @code{set} function will never be executed.
-
-@item DeleteFcn: 
+@item CreateFcn:
+called at the moment of the objects creation.  It is not called if the
+object is altered in any way, and so it only makes sense to define this
+callback in the function call that defines the object.  Callbacks that
+are added to @code{CreateFcn} later with the @code{set} function will
+never be executed.
+
+@item DeleteFcn:
 called at the moment an object is deleted.
 
-@item ButtonDownFcn: 
-called if a mouse button is pressed while the pointer is over this object.  Note, that the gnuplot interface does not respect this callback.
+@item ButtonDownFcn:
+called if a mouse button is pressed while the pointer is over this
+object.  Note, that the gnuplot interface does not respect this
+callback.
 @end itemize
 
-@strong{Caution:} the second @code{evt} argument in callback functions is only 
+@strong{Caution:} the second @code{evt} argument in callback functions is only
 loosely implemented in the Qt graphics toolkit:
 
 @itemize @bullet
 @item Mouse click events:
-@code{evt} is a class @code{double} value, 1 for left, 2 for middle and 3 
+@code{evt} is a class @code{double} value, 1 for left, 2 for middle and 3
 for right click.
 
 @item Key press events:
-@code{evt} is a structure with fields @code{Key} (string), @code{Character} 
+@code{evt} is a structure with fields @code{Key} (string), @code{Character}
 (string) and @code{Modifier} (cell array of strings).
 
 @item Other events:
 @code{evt} is a class @code{double} empty matrix.
 @end itemize
 
 
 The object and figure that the event occurred in that resulted in the
diff --git a/libgui/graphics/ObjectProxy.cc b/libgui/graphics/ObjectProxy.cc
--- a/libgui/graphics/ObjectProxy.cc
+++ b/libgui/graphics/ObjectProxy.cc
@@ -111,20 +111,20 @@ namespace QtHandles
     emit sendPrint (file_cmd, term);
   }
 
   uint8NDArray
   ObjectProxy::get_pixels (void)
   {
     uint8NDArray retval;
 
-    // The ObjectProxy is generally ran from the interpreter thread while the 
-    // actual Figure (Object) lives in the gui thread. The following ensures 
-    // synchronous execution of the Figure method and allows retrieving a 
-    // return value.
+    // The ObjectProxy is generally ran from the interpreter thread
+    // while the actual Figure (Object) lives in the gui thread. The
+    // following ensures synchronous execution of the Figure method and
+    // allows retrieving a return value.
 
     Qt::ConnectionType t = Qt::BlockingQueuedConnection;
 
     if (QThread::currentThread () == QCoreApplication::instance ()->thread ())
       t = Qt::DirectConnection;
 
     QMetaObject::invokeMethod (m_object, "slotGetPixels", t,
                                Q_RETURN_ARG (uint8NDArray, retval));
diff --git a/libinterp/corefcn/graphics.in.h b/libinterp/corefcn/graphics.in.h
--- a/libinterp/corefcn/graphics.in.h
+++ b/libinterp/corefcn/graphics.in.h
@@ -2194,17 +2194,17 @@ public:
   { gripe_if_tkit_invalid ("redraw_figure"); }
 
   virtual void print_figure (const graphics_object&, const std::string&,
                              const std::string&,
                              const std::string& = "") const
   { gripe_if_tkit_invalid ("print_figure"); }
 
   virtual uint8NDArray get_pixels (const graphics_object&) const
-  { 
+  {
     gripe_if_tkit_invalid ("get_pixels");
     return uint8NDArray ();
   }
 
   virtual Matrix get_canvas_size (const graphics_handle&) const
   {
     gripe_if_tkit_invalid ("get_canvas_size");
     return Matrix (1, 2, 0.0);
diff --git a/libinterp/dldfcn/__init_fltk__.cc b/libinterp/dldfcn/__init_fltk__.cc
--- a/libinterp/dldfcn/__init_fltk__.cc
+++ b/libinterp/dldfcn/__init_fltk__.cc
@@ -1963,17 +1963,17 @@ public:
       instance->do_print (hnd2idx (gh), cmd, term);
   }
 
   static uint8NDArray get_pixels (const graphics_handle& gh)
   {
     uint8NDArray retval;
     if (instance_ok ())
       retval = instance->do_get_pixels (hnd2idx (gh));
-    
+
     return retval;
   }
 
   static void uimenu_update (const graphics_handle& figh,
                              const graphics_handle& uimenuh, int id)
   {
     if (instance_ok ())
       instance->do_uimenu_update (hnd2idx (figh), uimenuh, id);
diff --git a/libinterp/genprops.awk b/libinterp/genprops.awk
--- a/libinterp/genprops.awk
+++ b/libinterp/genprops.awk
@@ -818,17 +818,17 @@ BEGIN {
         if (index (quals, "u"))
           updater[idx] = "inline";
 
         ## There is an extern updater method that should be called
         ## from the set method
         if (index (quals, "U"))
           updater[idx] = "extern";
 
-        ## The property is deprecated 
+        ## The property is deprecated
         if (index (quals, "d"))
           deprecated[idx] = 1;
 
         ## There is not factory default value
         if (index (quals, "f"))
           factory[idx] = 0;
 
 ##        ## emmit an asignment set function
diff --git a/libinterp/parse-tree/pt-eval.cc b/libinterp/parse-tree/pt-eval.cc
--- a/libinterp/parse-tree/pt-eval.cc
+++ b/libinterp/parse-tree/pt-eval.cc
@@ -823,17 +823,17 @@ namespace octave
                 ult.assign (octave_value::op_asn_eq, val);
 
                 if (loop_body)
                   loop_body->accept (*this);
 
                 if (quit_loop_now ())
                   break;
               }
-          } 
+          }
         else
           {
             // Handle empty cases, while still assigning to loop var.
             ult.assign (octave_value::op_asn_eq, arg);
           }
       }
     else
       error ("invalid type in for loop expression near line %d, column %d",
diff --git a/m4/acinclude.m4 b/m4/acinclude.m4
--- a/m4/acinclude.m4
+++ b/m4/acinclude.m4
@@ -1540,17 +1540,17 @@ AC_DEFUN([OCTAVE_CHECK_QT_VERSION], [AC_
     if test -z "$MOC_QTVER"; then
       AC_CHECK_TOOLS(MOC, [moc])
       if test -n "$MOC" && test -n "$QTCHOOSER"; then
         MOCFLAGS="-qt$qt_version"
       fi
     else
       MOC="$MOC_QTVER"
     fi
-      
+
     AC_CHECK_TOOLS(UIC_QTVER, [uic-qt$qt_version])
     if test -z "$UIC_QTVER"; then
       AC_CHECK_TOOLS(UIC, [uic])
       if test -n "$UIC" && test -n "$QTCHOOSER"; then
         UICFLAGS="-qt$qt_version"
       fi
     else
       UIC="$UIC_QTVER"
diff --git a/scripts/image/getframe.m b/scripts/image/getframe.m
--- a/scripts/image/getframe.m
+++ b/scripts/image/getframe.m
@@ -1,20 +1,20 @@
 ## Copyright (C) 2017 Pantxo Diribarne
-## 
+##
 ## This program is free software; you can redistribute it and/or modify it
 ## under the terms of the GNU General Public License as published by
 ## the Free Software Foundation; either version 3 of the License, or
 ## (at your option) any later version.
-## 
+##
 ## This program is distributed in the hope that it will be useful,
 ## but WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 ## GNU General Public License for more details.
-## 
+##
 ## You should have received a copy of the GNU General Public License
 ## along with this program.  If not, see <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {} {@var{im} =} getframe ()
 ## @deftypefnx {} {@var{im} =} getframe (@var{hax})
 ## @deftypefnx {} {@var{im} =} getframe (@var{hfig})
 ## @deftypefnx {} {@var{im} =} getframe (@dots{}, @var{rect})
@@ -33,17 +33,17 @@
 ## If a graphics handle @var{hfig} to a figure object is provided, the whole
 ## corresponding figure canvas is catured.
 ##
 ## Finally if a second argument @var{rect} is provided, it must be a
 ## four element vector [left bottom width height], defining the region
 ## inside the figure corresponding to @var{hfig} or the parent figure of
 ## @var{hax} to be catured. Whatever the figure @qcode{"units"} property,
 ## @var{rect} must be defined in @strong{pixels}.
-## 
+##
 ## @seealso{im2frame, frame2im}
 ## @end deftypefn
 
 function im = getframe (h = [], rect = [])
   hf = hax = [];
   if (isempty (h))
     hf = get (0, "currentfigure");
     if (isempty (hf))
@@ -75,17 +75,17 @@ function im = getframe (h = [], rect = [
     set (htmp, "units", "pixels");
     pos = get (htmp, "position");
     if (h == hf)
       pos(1:2) = 1;
     endif
   unwind_protect_cleanup
     set (htmp, "units", units)
   end_unwind_protect
-    
+
   if (! isempty (rect))
     xv = [pos(1); pos(1)+pos(3); pos(1)+pos(3); pos(1)];
     yv = [pos(2); pos(2); pos(2)+pos(4); pos(2)+pos(4)];
     x = [rect(1); rect(1)+rect(3); rect(1)+rect(3); rect(1)];
     y = [rect(2); rect(2); rect(2)+rect(4); rect(2)+rect(4)];
     in = inpolygon (x, y, xv, yv);
     if (! all (in))
       error ("getframe: RECT must define a region inside the figure");
@@ -98,26 +98,26 @@ function im = getframe (h = [], rect = [
     try
       cdata = __osmesa_print__ (hf);
     catch
       error ("getframe: couldn't render invisible figure. %s", lasterr ())
     end_try_catch
   else
     cdata = __get_frame__ (hf);
   endif
-  
+
   i1 = max (floor (pos(1)), 1);
   i2 = min (ceil (pos(1)+pos(3)-1), columns (cdata));
   idxx = i1:i2;
   i1 = max (floor (pos(2)), 1);
   i2 = min (ceil (pos(2)+pos(4)-1), rows (cdata));
   idxy = fliplr (rows (cdata) - (i1:i2) + 1);
-  
+
   im = struct ("cdata", cdata(idxy,idxx,:), "colormap", []);
-  
+
 endfunction
 
 %!demo
 %! clf
 %! contourf (rand (5));
 %! drawnow ();
 %! im = getframe ();
 %! imshow (im.cdata);
@@ -171,20 +171,20 @@ endfunction
 %!   hax = axes ("visible", "off", "position", [0 0 1 1]);
 %!   verts = [0 0; .5 0; 1 0; ...
 %!            0 .5; .5 .5; 1 .5; ...
 %!            0 1; .5 1; 1 1];
 %!   faces = [1 2 5 4; 2 3 6 5; 4 5 8 7; 5 6 9 8];
 %!   fvc = [1 0 0; 0 1 0; 0 0 1; 1 0 1];
 %!   patch ("vertices", verts, "faces", faces, "facevertexcdata", fvc, ...
 %!          "facecolor", "flat");
-%!   
+%!
 %!   kk = 1;
 %!   pos = get (hf, "position");
-%!   
+%!
 %!   for jj = [0.05 0.55]
 %!     for ii = [0.05 0.55]
 %!       rect = [ii jj .4 .4].*[pos(3:4) pos(3:4)];
 %!       im = getframe (hax, rect).cdata;
 %!       assert (im(:,:,1) == fvc(kk,1)*255)
 %!       assert (im(:,:,2) == fvc(kk,2)*255)
 %!       assert (im(:,:,3) == fvc(kk,3)*255)
 %!       kk++;
diff --git a/scripts/optimization/fsolve.m b/scripts/optimization/fsolve.m
--- a/scripts/optimization/fsolve.m
+++ b/scripts/optimization/fsolve.m
@@ -230,17 +230,17 @@ function [x, fvec, info, output, fjac] =
   nsuciter = 0;
 
   ## Outer loop.
   while (niter < maxiter && nfev < maxfev && ! info)
 
     ## Calculate function value and Jacobian (possibly via FD).
     if (has_jac)
       [fvec, fjac] = fcn (reshape (x, xsiz));
-      if (! all (size (fjac) == [m, n])) 
+      if (! all (size (fjac) == [m, n]))
         error ("fsolve: Jacobian size should be (%d,%d), not (%d,%d)",
                m, n, rows (fjac), columns (fjac));
       endif
       ## If the Jacobian is sparse, disable Broyden updating.
       if (issparse (fjac))
         updating = false;
       endif
       fvec = fvec(:);
diff --git a/scripts/polynomial/deconv.m b/scripts/polynomial/deconv.m
--- a/scripts/polynomial/deconv.m
+++ b/scripts/polynomial/deconv.m
@@ -40,17 +40,17 @@ function [b, r] = deconv (y, a)
     print_usage ();
   endif
 
   if (! (isvector (y) && isvector (a)))
     error ("deconv: Y and A must be vectors");
   endif
 
   ## Ensure A is oriented as Y.
-  if ((isrow (y) && iscolumn (a)) || (iscolumn (y) && isrow (a))) 
+  if ((isrow (y) && iscolumn (a)) || (iscolumn (y) && isrow (a)))
     a = a.';
   endif
 
   la = length (a);
   ly = length (y);
 
   lb = ly - la + 1;
 
diff --git a/test/for.tst b/test/for.tst
--- a/test/for.tst
+++ b/test/for.tst
@@ -119,38 +119,38 @@
 %!test
 %! parfor i = 1:4
 %!   __printf_assert__ ("%d", i);
 %! endparfor
 %! __printf_assert__ ("\n");
 %! assert (__prog_output_assert__ ("1234"));
 
 %!test <50893>
-%! cnt = 0; 
+%! cnt = 0;
 %! for k = zeros (0,3);
 %!   cnt++;
 %! endfor
 %! assert (cnt, 0);
 %! assert (k, zeros (0,1));
 
 %!test <50893>
-%! cnt = 0; 
+%! cnt = 0;
 %! for k = zeros (3,0);
 %!   cnt++;
 %! endfor
 %! assert (cnt, 0);
 %! assert (k, zeros (1,0));
 
 %!test <50893>
-%! cnt = 0; 
+%! cnt = 0;
 %! for k = zeros (3,0, "uint32");
 %!   cnt++;
 %! endfor
 %! assert (cnt, 0);
 %! assert (k, zeros (1,0, "uint32"));
 
 %!test <50893>
-%! cnt = 0; 
+%! cnt = 0;
 %! for k = cell (0,3);
 %!   cnt++;
 %! endfor
 %! assert (cnt, 0);
 %! assert (k, cell (0,1));
