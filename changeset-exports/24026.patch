# HG changeset patch
# User Rik <rik@octave.org>
# Date 1504902419 25200
#      Fri Sep 08 13:26:59 2017 -0700
# Node ID 1cb94f46466fa2627f04aff02a2c98e19c20cd96
# Parent  1187ad4865fcd4db15c4fe873c2c49003de0c757
Return Inf/-Inf when reading large numbers from files for Matlab compatibility.

* lo-utils.cc (octave_read_fp_value): If failbit is set on stream, check
whether value read was MAX_VAL and convert to Inf if found.  Reset failbit on
stream in this case.

diff --git a/liboctave/util/lo-utils.cc b/liboctave/util/lo-utils.cc
--- a/liboctave/util/lo-utils.cc
+++ b/liboctave/util/lo-utils.cc
@@ -302,19 +302,32 @@ octave_read_fp_value (std::istream& is)
       is.putback (c1);
       is >> val;
       break;
     }
 
   std::ios::iostate status = is.rdstate ();
   if (status & std::ios::failbit)
     {
-      is.clear ();
-      is.seekg (pos);
-      is.setstate (status);
+      // Convert MAX_VAL returned by C++ streams for very large numbers to Inf
+      if (val == std::numeric_limits<T>::max ())
+        {
+          if (neg)
+            val = -std::numeric_limits<T>::infinity ();
+          else
+            val = std::numeric_limits<T>::infinity ();
+          is.clear (status & ~std::ios::failbit);
+        }
+      else
+        {
+          // True error.  Reset stream to original position and pass status on.
+          is.clear ();
+          is.seekg (pos);
+          is.setstate (status);
+        }
     }
 
   return val;
 }
 
 template <typename T>
 std::complex<T>
 octave_read_cx_fp_value (std::istream& is)
