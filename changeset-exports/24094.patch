# HG changeset patch
# User Torsten <mttl@mailbox.org>
# Date 1506239561 -7200
#      Sun Sep 24 09:52:41 2017 +0200
# Node ID 1265c7f0119a75356f1b4950e9a2f8ec819d81bc
# Parent  7d9ba57201b45a9b1b655d75d4bbaeb7313c990e
consistent defaults values for all preferences (bug #52090)

* files-dock-widget.cc (notice_settings): default for syncing octave
  directory with the current browser directory set to true

* main-window.cc (main_window, load_and_display_community_news): set default
  for allowing a web connection to false

* settings-dialog.cc (settings_dialog): fix names of some preferences for
  the variable editor

* variable-editor.cc (notice_settings): use defaults for the used font and
  set the default for autofitting the row height to true

diff --git a/libgui/src/files-dock-widget.cc b/libgui/src/files-dock-widget.cc
--- a/libgui/src/files-dock-widget.cc
+++ b/libgui/src/files-dock-widget.cc
@@ -829,17 +829,17 @@ files_dock_widget::notice_settings (cons
 
   m_file_tree_view->setAlternatingRowColors (
     settings->value (m_columns_shown_keys.at (4),true).toBool ());
   m_file_tree_view->setModel (m_file_system_model);
 
   // enable the buttons to sync octave/browser dir
   // only if this is not done by default
   m_sync_octave_dir
-    = settings->value ("filesdockwidget/sync_octave_directory",false).toBool ();
+    = settings->value ("filesdockwidget/sync_octave_directory",true).toBool ();
   m_sync_octave_directory_action->setEnabled (! m_sync_octave_dir);
   m_sync_browser_directory_action->setEnabled (! m_sync_octave_dir);
 
   if (m_sync_octave_dir)
     display_directory (m_octave_dir);  // sync browser to octave dir
 
 }
 
diff --git a/libgui/src/main-window.cc b/libgui/src/main-window.cc
--- a/libgui/src/main-window.cc
+++ b/libgui/src/main-window.cc
@@ -185,17 +185,17 @@ main_window::main_window (QWidget *p, oc
   bool connect_to_web = true;
   QDateTime last_checked;
   int serial = 0;
   m_active_dock = nullptr;
 
   if (settings)
     {
       connect_to_web
-        = settings->value ("news/allow_web_connection", true).toBool ();
+        = settings->value ("news/allow_web_connection", false).toBool ();
 
       last_checked
         = settings->value ("news/last_time_checked", QDateTime ()).toDateTime ();
 
       serial = settings->value ("news/last_news_item", 0).toInt ();
     }
 
   QDateTime current = QDateTime::currentDateTime ();
@@ -510,17 +510,17 @@ main_window::display_release_notes (void
 
 void
 main_window::load_and_display_community_news (int serial)
 {
   QSettings *settings = resource_manager::get_settings ();
 
   bool connect_to_web
     = (settings
-       ? settings->value ("news/allow_web_connection", true).toBool ()
+       ? settings->value ("news/allow_web_connection", false).toBool ()
        : true);
 
   QString base_url = "http://octave.org";
   QString page = "community-news.html";
 
   QThread *worker_thread = new QThread;
 
   news_reader *reader = new news_reader (base_url, page, serial,
diff --git a/libgui/src/settings-dialog.cc b/libgui/src/settings-dialog.cc
--- a/libgui/src/settings-dialog.cc
+++ b/libgui/src/settings-dialog.cc
@@ -535,17 +535,17 @@ settings_dialog::settings_dialog (QWidge
   read_terminal_colors (settings);
 
   // variable editor
   ui->varedit_columnWidth->setText (settings->value ("variable_editor/column_width", "100").toString ());
   ui->varedit_autoFitColumnWidth->setChecked (settings->value ("variable_editor/autofit_column_width", false).toBool ());
   ui->varedit_autofitType->setCurrentIndex (settings->value ("autofit_type", 0).toInt ());
   ui->varedit_rowHeight->setText (settings->value ("variable_editor/row_height", "2").toString ());
   ui->varedit_rowAutofit->setChecked (settings->value ("variable_editor/autofit_row_height", true).toBool ());
-  ui->varedit_font->setFont (QFont (settings->value ("variable_editor/font", settings->value ("terminal/FontName", "Courier New")).toString ()));
+  ui->varedit_font->setFont (QFont (settings->value ("variable_editor/font_name", settings->value ("terminal/fontName", "Courier New")).toString ()));
   ui->varedit_fontSize->setValue (settings->value ("variable_editor/font_size", QVariant (10)).toInt ());
   ui->varedit_useTerminalFont->setChecked (settings->value ("variable_editor/use_terminal_font", false).toBool ());
   ui->varedit_alternate->setChecked (settings->value ("variable_editor/alternate_rows", QVariant (false)).toBool ());
 
   // variable editor colors
   read_varedit_colors (settings);
 
   // shortcuts
diff --git a/libgui/src/variable-editor.cc b/libgui/src/variable-editor.cc
--- a/libgui/src/variable-editor.cc
+++ b/libgui/src/variable-editor.cc
@@ -343,27 +343,27 @@ void variable_editor::notice_settings (c
   m_use_terminal_font = settings->value ("variable_editor/use_terminal_font",
                                          true).toBool ();
 
   QString font_name;
   int font_size;
 
   if (m_use_terminal_font)
     {
-      font_name = settings->value ("terminal/fontName", "").toString ();
+      font_name = settings->value ("terminal/fontName", "Courier New").toString ();
       font_size = settings->value ("terminal/fontSize", 10).toInt ();
     }
   else
     {
-      font_name = settings->value ("variable_editor/font_name", "").toString ();
+      font_name = settings->value ("variable_editor/font_name", settings->value ("terminal/fontName", "Courier New")).toString ();
       font_size = settings->value ("variable_editor/font_size", 10).toInt ();
     }
   m_font = QFont (font_name, font_size);
 
-  if (settings->value ("variable_editor/autofit_row_height", false).toBool ())
+  if (settings->value ("variable_editor/autofit_row_height", true).toBool ())
     {
       QFontMetrics fm (m_font);
       m_add_font_height = fm.height ();
     }
   else
     m_add_font_height = 0;
 
   for (int i = 0; i < class_chars.length (); i++)
