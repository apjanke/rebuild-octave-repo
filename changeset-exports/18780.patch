# HG changeset patch
# User Rik <rik@octave.org>
# Date 1401038778 25200
#      Sun May 25 10:26:18 2014 -0700
# Branch gui-release
# Node ID bd1fd4ed3d67fb3bfd60184071a96ac5eb5f848d
# Parent  a5286fb173cd8c5ef266b25204e0badbd9b33000
# Parent  6e2b1de8348e3e67e97ebda7ed77500c52577347
maint: Periodic merge of stable -> gui-release.

diff --git a/CITATION b/CITATION
--- a/CITATION
+++ b/CITATION
@@ -1,20 +1,21 @@
 To cite GNU Octave in publications use:
 
-  John W. Eaton, David Bateman, and Søren Hauberg (2009).  GNU Octave version
-  3.0.1 manual: a high-level interactive language for numerical computations.
+  John W. Eaton, David Bateman, Søren Hauberg, Rik Wehbring (2014).
+  GNU Octave version 3.8.1 manual: a high-level interactive language for
+  numerical computations.
   CreateSpace Independent Publishing Platform.  ISBN 1441413006,
   URL http://www.gnu.org/software/octave/doc/interpreter/
 
 A BibTeX entry for LaTeX users is:
 
   @book{,
-    author    = {John W. Eaton and David Bateman and S\oren Hauberg},
-    title     = {{GNU Octave} version 3.0.1 manual: a high-level interactive language for numerical computations},
+    author    = {John W. Eaton, David Bateman, S\oren Hauberg, and Rik Wehbring},
+    title     = {{GNU Octave} version 3.8.1 manual: a high-level interactive language for numerical computations},
     publisher = {CreateSpace Independent Publishing Platform},
-    year      = {2009},
+    year      = {2014},
     note      = {{ISBN} 1441413006},
     url       = {http://www.gnu.org/software/octave/doc/interpreter},
   }
 
 We have invested a lot of time and effort in creating GNU Octave, please cite it
 when using it.  See also `citation pkgname' for citing Octave packages.
diff --git a/etc/CHECKLIST b/etc/CHECKLIST
--- a/etc/CHECKLIST
+++ b/etc/CHECKLIST
@@ -1,12 +1,14 @@
 Things to do before making a release:
 
   * Update the version number and release date in configure.ac.
 
+  * Update version number and release year in CITATION.
+
   * Update the NEWS file.
 
   * Update the NEWS-<VERSION>.html, index.in, news.in, and download.in
     files for the web site.
 
   * Copy tarballs to ftp.gnu.org.
 
   * Post a release announcement to the help@octave.org and
diff --git a/libgui/src/main-window.cc b/libgui/src/main-window.cc
--- a/libgui/src/main-window.cc
+++ b/libgui/src/main-window.cc
@@ -735,16 +735,17 @@ main_window::change_directory (const QSt
   file_browser_window->update_octave_directory (dir);
 }
 
 void
 main_window::browse_for_directory (void)
 {
   QString dir
     = QFileDialog::getExistingDirectory (this, tr ("Browse directories"), 0,
+                                         QFileDialog::ShowDirsOnly |
                                          QFileDialog::DontUseNativeDialog);
 
   set_current_working_directory (dir);
 
   // FIXME: on Windows systems, the command window freezes after the
   // previous actions.  Forcing the focus appears to unstick it.
 
   focus_command_window ();
diff --git a/libinterp/corefcn/data.cc b/libinterp/corefcn/data.cc
--- a/libinterp/corefcn/data.cc
+++ b/libinterp/corefcn/data.cc
@@ -3116,52 +3116,49 @@ complex ([1, 2], [3, 4])\n\
             {
               if (re.numel () == 1)
                 {
                   SparseComplexMatrix result;
                   if (re_val.nnz () == 0)
                     result = Complex (0, 1) * SparseComplexMatrix (im_val);
                   else
                     {
-                      result = SparseComplexMatrix (im_val.dims (), re_val (0));
                       octave_idx_type nr = im_val.rows ();
                       octave_idx_type nc = im_val.cols ();
+                      result = SparseComplexMatrix (nr, nc, re_val(0));
 
                       for (octave_idx_type j = 0; j < nc; j++)
                         {
                           octave_idx_type off = j * nr;
                           for (octave_idx_type i = im_val.cidx (j);
                                i < im_val.cidx (j + 1); i++)
-                            result.data (im_val.ridx (i) + off) =
-                              result.data (im_val.ridx (i) + off) +
+                            result.data (im_val.ridx (i) + off) +=
                               Complex (0, im_val.data (i));
                         }
                     }
                   retval = octave_value (new octave_sparse_complex_matrix (result));
                 }
               else if (im.numel () == 1)
                 {
                   SparseComplexMatrix result;
                   if (im_val.nnz () == 0)
                     result = SparseComplexMatrix (re_val);
                   else
                     {
-                      result = SparseComplexMatrix (re_val.rows (),
-                                                    re_val.cols (),
-                                                    Complex (0, im_val (0)));
                       octave_idx_type nr = re_val.rows ();
                       octave_idx_type nc = re_val.cols ();
+                      result = SparseComplexMatrix (nr, nc,
+                                                    Complex (0, im_val(0)));
 
                       for (octave_idx_type j = 0; j < nc; j++)
                         {
                           octave_idx_type off = j * nr;
                           for (octave_idx_type i = re_val.cidx (j);
                                i < re_val.cidx (j + 1); i++)
-                            result.data (re_val.ridx (i) + off) =
-                              result.data (re_val.ridx (i) + off) +
+                            result.data (re_val.ridx (i) + off) +=
                               re_val.data (i);
                         }
                     }
                   retval = octave_value (new octave_sparse_complex_matrix (result));
                 }
               else
                 {
                   if (re_val.dims () == im_val.dims ())
diff --git a/libinterp/corefcn/graphics.cc b/libinterp/corefcn/graphics.cc
--- a/libinterp/corefcn/graphics.cc
+++ b/libinterp/corefcn/graphics.cc
@@ -9221,26 +9221,27 @@ object, whether 2 or 3.\n\
 @end deftypefn")
 {
   gh_manager::auto_lock guard;
 
   octave_value retval;
 
   int nargin = args.length ();
 
-  if (nargin != 1)
+  if (nargin == 1)
+    {
+      double h = args(0).double_value ();
+      if (! error_state)
+        retval = calc_dimensions (gh_manager::get_object (h));
+      else
+        error ("__calc_dimensions__: expecting graphics handle as only argument");
+    }
+  else
     print_usage ();
 
-  double h = args(0).double_value ();
-
-  if (! error_state)
-    retval = calc_dimensions (gh_manager::get_object (h));
-  else
-    error ("__calc_dimensions__: expecting graphics handle as only argument");
-
   return retval;
 }
 
 DEFUN (__go_axes__, args, ,
        "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} __go_axes__ (@var{parent})\n\
 Undocumented internal function.\n\
 @end deftypefn")
diff --git a/libinterp/parse-tree/lex.ll b/libinterp/parse-tree/lex.ll
--- a/libinterp/parse-tree/lex.ll
+++ b/libinterp/parse-tree/lex.ll
@@ -296,16 +296,28 @@ ANY_INCLUDING_NL (.|{NL})
     // as the first token.
     curr_lexer->reading_script_file = true;
 
     curr_lexer->pop_start_state ();
 
     return curr_lexer->show_token (INPUT_FILE);
   }
 
+<INPUT_FILE_START><<EOF>> {
+    curr_lexer->lexer_debug ("<INPUT_FILE_START><<EOF>>");
+
+    // May be reset later if we see "function" or "classdef" appears
+    // as the first token.
+    curr_lexer->reading_script_file = true;
+
+    curr_lexer->pop_start_state ();
+
+    return curr_lexer->show_token (INPUT_FILE);
+  }
+
 %{
 // Help and other command-style functions.
 %}
 
 %{
 // Commands can be continued on a second line using the ellipsis.
 // If an argument is in construction, it is completed.
 %}
diff --git a/scripts/plot/draw/hist.m b/scripts/plot/draw/hist.m
--- a/scripts/plot/draw/hist.m
+++ b/scripts/plot/draw/hist.m
@@ -152,17 +152,17 @@ function [nn, xx] = hist (varargin)
              (chist(end,:) - sum (isnan (y)))];
   endif
 
   freq = diff (chist);
 
   if (nargin > 2 && ! ischar (varargin{iarg}))
     ## Normalize the histogram.
     norm = varargin{iarg++};
-    freq *= norm / sum (! isnan (y));
+    freq = bsxfun (@times, freq, norm ./ sum (! isnan (y)));
   endif
 
   if (nargout > 0)
     if (arg_is_vector)  
       ## Matlab compatibility requires a row vector return
       nn = freq';  
       xx = x';
     else
@@ -204,9 +204,11 @@ endfunction
 %!   assert (sum (hist ([1:n], n)), n);
 %!   assert (sum (hist ([1:n], [2:n-1])), n);
 %!   assert (sum (hist ([1:n], [1:n])), n);
 %!   assert (sum (hist ([1:n], 29)), n);
 %!   assert (sum (hist ([1:n], 30)), n);
 %! endfor
 %!assert (hist (1,1), 1)
 %!assert (size (hist (randn (750,240), 200)), [200,240])
-
+## Test bug #42394
+%!assert (isempty (hist (rand (10,2), 0:5, 1)), false)
+%!assert (isempty (hist (rand (10,2), 0:5, [1 1])), false)
diff --git a/scripts/plot/draw/private/__bar__.m b/scripts/plot/draw/private/__bar__.m
--- a/scripts/plot/draw/private/__bar__.m
+++ b/scripts/plot/draw/private/__bar__.m
@@ -115,23 +115,27 @@ function varargout = __bar__ (vertical, 
     error ("%s: length of X and Y must be equal", func);
   endif
   if (any (x(2:end) < x(1:end-1)))
     error ("%s: X vector values must be in ascending order", func);
   endif
 
   nbars = columns (y);
 
-  ## Column width is 1 for 'hist*' styles.  Otherwise, same as group width.
-  if (nbars == 1)
+  ## Column width is 1 for 'hist*' styles (bars touch).
+  if (islogical (histc))
+    cwidth = 1;
+    if (nbars == 1)
+      gwidth = 1;
+    else
+      gwidth = width^2;
+    endif
+  elseif (nbars == 1)
     cwidth = 1;
     gwidth = width;
-  elseif (islogical (histc))
-    cwidth = 1;
-    gwidth = width^2;
   else
     cwidth = gwidth = width;
   endif
 
   ## Complicated algorithm sizes bars with unitless parameter width.
   ## If width is 1.0, adjacent bars in a group are touching.
   ## Otherwise, bar size is cwidth and the remaining space is split evenly on
   ## either side of the bar.  For the default 0.8, spacing is [0.1 0.8 0.1].
