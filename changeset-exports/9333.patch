# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1244717041 -7200
#      Thu Jun 11 12:44:01 2009 +0200
# Node ID 3930f8ce64300999939147b5302a2706a1f4fbba
# Parent  bf6da2fbfa4e05ea788082f76cd0219941b89f24
Unpack cs-list and setup nargin for call to subsasgn method

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,12 +1,14 @@
 2009-06-11  Jaroslav Hajek  <highegg@gmail.com>
 
-	* ov-class.cc (subsref): Set up proper nargout for call to subsref
+	* ov-class.cc (octave_class::subsref): Set up proper nargout for call to subsref
 	method.
+	* ov-class.cc (octave_class::subsref): Unpack cs-list and setup nargin
+	for call to subsasgn.
 
 2009-06-10  Jaroslav Hajek  <highegg@gmail.com>
 
 	* ov-base.cc (octave_base_value::numel (const octave_value_list&),
 	octave_base_value::size): New virtual methods.
 	* ov-base.h: Declare them.
 	* ov.h (octave_value::numel (const octave_value_list&)): New method.
 	(octave_value::size): Forward to octave_base_value.
diff --git a/src/ov-class.cc b/src/ov-class.cc
--- a/src/ov-class.cc
+++ b/src/ov-class.cc
@@ -508,17 +508,25 @@ octave_class::subsasgn (const std::strin
   if (! (in_class_method () || called_from_builtin ()))
     {
       octave_value meth = symbol_table::find_method ("subsasgn", class_name ());
 
       if (meth.is_defined ())
 	{
 	  octave_value_list args;
 
-	  args(2) = rhs;
+          if (rhs.is_cs_list ())
+            {
+              octave_value_list lrhs = rhs.list_value ();
+              args.resize (2 + lrhs.length ());
+              for (octave_idx_type i = 0; i < lrhs.length (); i++)
+                args(2+i) = lrhs(i);
+            }
+          else
+            args(2) = rhs;
 
 	  args(1) = make_idx_args (type, idx, "subsasgn");
 
 	  if (error_state)
 	    return octave_value_list ();
 
 	  count++;
 	  args(0) = octave_value (this);
