# HG changeset patch
# User jwe
# Date 1095819493 0
#      Wed Sep 22 02:18:13 2004 +0000
# Node ID 6d481b6e349e8d3cc0993a5ed54b5c3614d7dc39
# Parent  fd5871c5f85b658bea4392e87cc54d0e005d5840
[project @ 2004-09-22 02:18:13 by jwe]

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,15 @@
+2004-09-21  John W. Eaton  <jwe@octave.org>
+
+	* mach-info.h (octave_mach_info::flt_fmt_native): Delete.
+	* mach-info.cc (octave_mach_info::string_to_float_format):
+	For "native", set actual native format.
+	(octave_mach_info::float_format_as_string): Delete flt_fmt_native case.
+
 2004-09-17  David Bateman  <dbateman@free.fr>
 
 	* CmplxSCHUR.cc (CmplxSCHUR::init): New arg, calc_unitary to make the
 	calculation of the unitary matrix optional.
 	* dbleSCHUR.cc (SCHUR::init): Ditto.
 	* CmplxSCHUR.h, dbleSCHUR.h: Update decls.
 
 2004-09-15  David Bateman  <dbateman@free.fr>
diff --git a/liboctave/mach-info.cc b/liboctave/mach-info.cc
--- a/liboctave/mach-info.cc
+++ b/liboctave/mach-info.cc
@@ -196,17 +196,17 @@ oct_mach_info::words_little_endian (void
 }
 
 oct_mach_info::float_format
 oct_mach_info::string_to_float_format (const std::string& s)
 {
   oct_mach_info::float_format retval = oct_mach_info::flt_fmt_unknown;
 
   if (s == "native" || s == "n")
-    retval = oct_mach_info::flt_fmt_native;
+    retval = oct_mach_info::native_float_format ();
   else if (s == "ieee-be" || s == "b")
     retval = oct_mach_info::flt_fmt_ieee_big_endian;
   else if (s == "ieee-le" || s == "l")
     retval = oct_mach_info::flt_fmt_ieee_little_endian;
   else if (s == "vaxd" || s == "d")
     retval = oct_mach_info::flt_fmt_vax_d;
   else if (s == "vaxg" || s == "g")
     retval = oct_mach_info::flt_fmt_vax_g;
@@ -223,20 +223,16 @@ oct_mach_info::string_to_float_format (c
 
 std::string
 oct_mach_info::float_format_as_string (float_format flt_fmt)
 {
   std::string retval = "unknown";
 
   switch (flt_fmt)
     {
-    case flt_fmt_native:
-      retval = "native";
-      break;
-
     case flt_fmt_ieee_big_endian:
       retval = "ieee_big_endian";
       break;
 
     case flt_fmt_ieee_little_endian:
       retval = "ieee_little_endian";
       break;
 
diff --git a/liboctave/mach-info.h b/liboctave/mach-info.h
--- a/liboctave/mach-info.h
+++ b/liboctave/mach-info.h
@@ -31,17 +31,16 @@ oct_mach_info
 protected:
 
   oct_mach_info (void);
 
 public:
 
   enum float_format
     {
-      flt_fmt_native,
       flt_fmt_unknown,
       flt_fmt_ieee_little_endian,
       flt_fmt_ieee_big_endian,
       flt_fmt_vax_d,
       flt_fmt_vax_g,
       flt_fmt_cray
     };
 
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,29 @@
+2004-09-21  John W. Eaton  <jwe@octave.org>
+
+	* oct-fstrm.h (octave_fstream::octave_fstream,
+	octave_fstream::create): Set default float format to actual native
+	format, not flt_fmt_native.
+	* oct-iostrm.h (octave_base_iostream::octave_base_iostream,
+	octave_istream::octave_istream, octave_ostream::octave_ostream):
+	Likewise.
+	* oct-prcstrm.h (octave_iprocstream::octave_iprocstream,
+	octave_oprocstream::octave_oprocstream,
+	octave_iprocstream::create, octave_oprocstream::create):
+	Likewise.
+	* oct-stdstrm.h (octave_stdiostream::octave_stdiostream,
+	octave_stdiostream::create):
+	Likewise.
+	* oct-stream.h (octave_base_stream::octave_base_stream):
+	Likewise.
+	* oct-strstrm.h (octave_base_strstream::octave_base_strstream,
+	octave_istrstream::octave_istrstream, octave_istrstream::create):
+	Likewise.
+
 2004-09-21  David Bateman  <dbateman@free.fr>
 
 	* data.cc (Freshape): Allow a single empty dimension argument
 	to flag unknown dimension and calculate its value from the
 	other dimensions.
 
 2004-09-21  John W. Eaton  <jwe@octave.org>
 
diff --git a/src/oct-fstrm.h b/src/oct-fstrm.h
--- a/src/oct-fstrm.h
+++ b/src/oct-fstrm.h
@@ -30,23 +30,24 @@ Software Foundation, 59 Temple Place - S
 
 class
 octave_fstream : public octave_base_stream
 {
 public:
 
   octave_fstream (const std::string& nm_arg,
 		  std::ios::openmode arg_md = std::ios::in|std::ios::out,
-		  oct_mach_info::float_format flt_fmt =
-		  oct_mach_info::flt_fmt_native);
+		  oct_mach_info::float_format flt_fmt
+		    = oct_mach_info::native_float_format ());
 
   static octave_stream
   create (const std::string& nm_arg,
 	  std::ios::openmode arg_md = std::ios::in|std::ios::out,
-	  oct_mach_info::float_format flt_fmt = oct_mach_info::flt_fmt_native);
+	  oct_mach_info::float_format flt_fmt
+	    = oct_mach_info::native_float_format ());
 
   // Position a stream at OFFSET relative to ORIGIN.
 
   int seek (long offset, int origin);
 
   // Return current stream position.
 
   long tell (void);
diff --git a/src/oct-iostrm.h b/src/oct-iostrm.h
--- a/src/oct-iostrm.h
+++ b/src/oct-iostrm.h
@@ -29,18 +29,18 @@ Software Foundation, 59 Temple Place - S
 
 class
 octave_base_iostream : public octave_base_stream
 {
 public:
 
   octave_base_iostream (const std::string& n = std::string (),
 			std::ios::openmode m = std::ios::in|std::ios::out,
-			oct_mach_info::float_format ff =
-			oct_mach_info::flt_fmt_native)
+			oct_mach_info::float_format ff
+			  = oct_mach_info::native_float_format ())
     : octave_base_stream (m, ff), nm (n) { }
 
   // Position a stream at OFFSET relative to ORIGIN.
 
   int seek (long offset, int origin);
 
   // Return current stream position.
 
@@ -74,18 +74,20 @@ private:
 };
 
 class
 octave_istream : public octave_base_iostream
 {
 public:
 
   octave_istream (std::istream *arg = 0, const std::string& n = std::string ())
-    : octave_base_iostream (n, std::ios::in, oct_mach_info::flt_fmt_native),
-      is (arg) { }
+    : octave_base_iostream (n, std::ios::in,
+			    oct_mach_info::native_float_format ()),
+      is (arg)
+  { }
 
   static octave_stream
   create (std::istream *arg = 0, const std::string& n = std::string ());
 
   // Return non-zero if EOF has been reached on this stream.
 
   bool eof (void) const;
 
@@ -111,18 +113,20 @@ private:
 };
 
 class
 octave_ostream : public octave_base_iostream
 {
 public:
 
   octave_ostream (std::ostream *arg, const std::string& n = std::string ())
-    : octave_base_iostream (n, std::ios::out, oct_mach_info::flt_fmt_native),
-      os (arg) { }
+    : octave_base_iostream (n, std::ios::out,
+			    oct_mach_info::native_float_format ()),
+      os (arg)
+  { }
 
   static octave_stream
   create (std::ostream *arg, const std::string& n = std::string ());
 
   // Return non-zero if EOF has been reached on this stream.
 
   bool eof (void) const;
 
diff --git a/src/oct-prcstrm.h b/src/oct-prcstrm.h
--- a/src/oct-prcstrm.h
+++ b/src/oct-prcstrm.h
@@ -30,22 +30,23 @@ Software Foundation, 59 Temple Place - S
 
 class
 octave_iprocstream : public octave_stdiostream
 {
 public:
 
   octave_iprocstream (const std::string& n,
 		      std::ios::openmode arg_md = std::ios::in,
-		      oct_mach_info::float_format flt_fmt =
-		      oct_mach_info::flt_fmt_native);
+		      oct_mach_info::float_format flt_fmt
+		        = oct_mach_info::native_float_format ());
 
   static octave_stream
   create (const std::string& n, std::ios::openmode arg_md = std::ios::in,
-	  oct_mach_info::float_format flt_fmt = oct_mach_info::flt_fmt_native);
+	  oct_mach_info::float_format flt_fmt
+	    = oct_mach_info::native_float_format ());
 
 protected:
 
   ~octave_iprocstream (void);
 
 private:
 
   // No copying!
@@ -57,22 +58,23 @@ private:
 
 class
 octave_oprocstream : public octave_stdiostream
 {
 public:
 
   octave_oprocstream (const std::string& n,
 		      std::ios::openmode arg_md = std::ios::out,
-		      oct_mach_info::float_format flt_fmt =
-		      oct_mach_info::flt_fmt_native);
+		      oct_mach_info::float_format flt_fmt
+		        = oct_mach_info::native_float_format ());
 
   static octave_stream
   create (const std::string& n, std::ios::openmode arg_md = std::ios::out,
-	  oct_mach_info::float_format flt_fmt = oct_mach_info::flt_fmt_native);
+	  oct_mach_info::float_format flt_fmt
+	    = oct_mach_info::native_float_format ());
 
 protected:
 
   ~octave_oprocstream (void);
 
 private:
 
   // No copying!
diff --git a/src/oct-stdstrm.h b/src/oct-stdstrm.h
--- a/src/oct-stdstrm.h
+++ b/src/oct-stdstrm.h
@@ -28,29 +28,30 @@ Software Foundation, 59 Temple Place - S
 
 class
 octave_stdiostream : public octave_base_stream
 {
 public:
 
   octave_stdiostream (const std::string& n, FILE *f = 0,
 		      std::ios::openmode m = std::ios::in|std::ios::out,
-		      oct_mach_info::float_format ff =
-		      oct_mach_info::flt_fmt_native,
+		      oct_mach_info::float_format ff
+		        = oct_mach_info::native_float_format (),
 		      c_file_ptr_buf::close_fcn cf = c_file_ptr_buf::fclose)
     : octave_base_stream (m, ff), nm (n), md (m), s(0)
   {
     if (f)
       s = new io_c_file_ptr_stream (f, cf);
   }
 
   static octave_stream
   create (const std::string& n, FILE *f = 0,
 	  std::ios::openmode m = std::ios::in|std::ios::out,
-	  oct_mach_info::float_format ff = oct_mach_info::flt_fmt_native,
+	  oct_mach_info::float_format ff
+	    = oct_mach_info::native_float_format (),
 	  c_file_ptr_buf::close_fcn cf = c_file_ptr_buf::fclose)
   {
     return octave_stream (new octave_stdiostream (n, f, m, ff, cf));
   }
 
   // Position a stream at OFFSET relative to ORIGIN.
 
   int seek (long offset, int origin);
diff --git a/src/oct-stream.h b/src/oct-stream.h
--- a/src/oct-stream.h
+++ b/src/oct-stream.h
@@ -318,17 +318,18 @@ private:
 class
 octave_base_stream
 {
 friend class octave_stream;
 
 public:
 
   octave_base_stream (std::ios::openmode arg_md = std::ios::in|std::ios::out,
-		      oct_mach_info::float_format ff = oct_mach_info::flt_fmt_native)
+		      oct_mach_info::float_format ff
+		        = oct_mach_info::native_float_format ())
     : count (0), md (arg_md), flt_fmt (ff), fail (false), open_state (true)
   { }
 
   virtual ~octave_base_stream (void) { }
 
   // The remaining functions are not specific to input or output only,
   // and must be provided by the derived classes.
 
diff --git a/src/oct-strstrm.h b/src/oct-strstrm.h
--- a/src/oct-strstrm.h
+++ b/src/oct-strstrm.h
@@ -30,18 +30,18 @@ Software Foundation, 59 Temple Place - S
 #include "oct-stream.h"
 
 class
 octave_base_strstream : public octave_base_stream
 {
 public:
 
   octave_base_strstream (std::ios::openmode m = std::ios::out,
-			 oct_mach_info::float_format ff =
-			 oct_mach_info::flt_fmt_native)
+			 oct_mach_info::float_format ff
+			   = oct_mach_info::native_float_format ())
     : octave_base_stream (m, ff) { }
 
   // Position a stream at OFFSET relative to ORIGIN.
 
   int seek (long, int);
 
   // Return current stream position.
 
@@ -72,33 +72,35 @@ private:
 
 class
 octave_istrstream : public octave_base_strstream
 {
 public:
 
   octave_istrstream (const char *data,
 		     std::ios::openmode arg_md = std::ios::out,
-		     oct_mach_info::float_format ff =
-		     oct_mach_info::flt_fmt_native)
+		     oct_mach_info::float_format ff
+		       = oct_mach_info::native_float_format ())
     : octave_base_strstream (arg_md, ff), is (data) { }
 
   octave_istrstream (const std::string& data,
 		     std::ios::openmode arg_md = std::ios::out,
-		     oct_mach_info::float_format ff =
-		     oct_mach_info::flt_fmt_native)
+		     oct_mach_info::float_format ff
+		       = oct_mach_info::native_float_format ())
     : octave_base_strstream (arg_md, ff), is (data.c_str ()) { }
 
   static octave_stream
   create (const char *data, std::ios::openmode arg_md = std::ios::out,
-	  oct_mach_info::float_format ff = oct_mach_info::flt_fmt_native);
+	  oct_mach_info::float_format ff
+	    = oct_mach_info::native_float_format ());
 
   static octave_stream
   create (const std::string& data, std::ios::openmode arg_md = std::ios::out,
-	  oct_mach_info::float_format ff = oct_mach_info::flt_fmt_native);
+	  oct_mach_info::float_format ff
+	    = oct_mach_info::native_float_format ());
 
   // Return non-zero if EOF has been reached on this stream.
 
   bool eof (void) const { return is.eof (); }
 
   std::istream *input_stream (void) { return &is; }
 
   std::ostream *output_stream (void) { return 0; }
@@ -125,23 +127,24 @@ private:
 };
 
 class
 octave_ostrstream : public octave_base_strstream
 {
 public:
 
   octave_ostrstream (std::ios::openmode arg_md = std::ios::out,
-		     oct_mach_info::float_format ff =
-		     oct_mach_info::flt_fmt_native)
+		     oct_mach_info::float_format ff
+		       = oct_mach_info::native_float_format ())
     : octave_base_strstream (arg_md, ff) { }
 
   static octave_stream
   create (std::ios::openmode arg_md = std::ios::out,
-	  oct_mach_info::float_format ff = oct_mach_info::flt_fmt_native);
+	  oct_mach_info::float_format ff
+	    = oct_mach_info::native_float_format ());
 
   // Return non-zero if EOF has been reached on this stream.
 
   bool eof (void) const { return os.eof (); }
 
   std::istream *input_stream (void) { return 0; }
 
   std::ostream *output_stream (void) { return &os; }
