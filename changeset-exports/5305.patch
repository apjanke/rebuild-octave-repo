# HG changeset patch
# User jwe
# Date 1114484348 0
#      Tue Apr 26 02:59:08 2005 +0000
# Node ID 539428e4606afecfc01138baf4656595bc36e3c9
# Parent  7b6edb02f8c988954d3efbccd082451c84a40b8e
[project @ 2005-04-26 02:59:08 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,23 @@
+2005-04-25  John W. Eaton  <jwe@octave.org>
+
+	* oct-hist.cc (default_history_file, default_history_size): Now static.
+	* oct-hist.h: Delete decls.
+
+	* oct-hist.cc (default_history_timestamp_format,
+	default_history_timestamp_format): New functions.
+	(Vdefault_history_timestamp_format): New variable.
+	(symbols_of_oct_hist): DEFVAR it.
+	(octave_history_write_timestamp): New function.
+	* oct-hist.h (octave_history_write_timestamp): Provide decl.
+	* toplev.cc (): call octave_history_write_timestamp here.
+	* octave.cc (maximum_braindamage):
+	Bind history_timestamp_format_string here.
+
 2005-04-22  John W. Eaton  <jwe@octave.org>
 
 	* version.h (OCTAVE_VERSION): Now 2.9.2.
 	(OCTAVE_API_VERSION): Now api-v15.
 
 	* pager.cc (default_pager): Also append -X.
 
 	* DLD-FUNCTIONS/dispatch.cc (Fdispatch): Dispatch help on "string"
diff --git a/src/oct-hist.cc b/src/oct-hist.cc
--- a/src/oct-hist.cc
+++ b/src/oct-hist.cc
@@ -48,16 +48,17 @@ Software Foundation, Inc.
 #endif
 #include <unistd.h>
 #endif
 
 #include "cmd-hist.h"
 #include "file-ops.h"
 #include "lo-mappers.h"
 #include "oct-env.h"
+#include "oct-time.h"
 #include "str-vec.h"
 
 #include <defaults.h>
 #include "defun.h"
 #include "error.h"
 #include "gripes.h"
 #include "input.h"
 #include "oct-hist.h"
@@ -75,41 +76,27 @@ Software Foundation, Inc.
 bool input_from_tmp_history_file = false;
 
 // Where history is saved.
 static std::string Vhistory_file;
 
 // The number of lines to keep in the history file.
 static int Vhistory_size;
 
+// The format of the timestamp marker written to the history file when
+// Octave exits.
+static std::string Vhistory_timestamp_format_string;
+
 // TRUE if we are saving history.
 bool Vsaving_history = true;
 
 // Get some default values, possibly reading them from the
 // environment.
 
-int
-default_history_size (void)
-{
-  int size = 1024;
-
-  std::string env_size = octave_env::getenv ("OCTAVE_HISTSIZE");
-
-  if (! env_size.empty ())
-    {
-      int val;
-
-      if (sscanf (env_size.c_str (), "%d", &val) == 1)
-	size = val > 0 ? val : 0;
-    }
-
-  return size;
-}
-
-std::string
+static std::string
 default_history_file (void)
 {
   std::string file;
 
   std::string env_file = octave_env::getenv ("OCTAVE_HISTFILE");
 
   if (! env_file.empty ())
     {
@@ -133,16 +120,45 @@ default_history_file (void)
 	}
       else
 	file = ".octave_hist";
     }
 
   return file;
 }
 
+static int
+default_history_size (void)
+{
+  int size = 1024;
+
+  std::string env_size = octave_env::getenv ("OCTAVE_HISTSIZE");
+
+  if (! env_size.empty ())
+    {
+      int val;
+
+      if (sscanf (env_size.c_str (), "%d", &val) == 1)
+	size = val > 0 ? val : 0;
+    }
+
+  return size;
+}
+
+static std::string
+default_history_timestamp_format (void)
+{
+  return
+    std::string ("# Octave " OCTAVE_VERSION ", %a %b %d %H:%M:%S %Y %Z <")
+    + octave_env::get_user_name ()
+    + std::string ("@")
+    + octave_env::get_host_name ()
+    + std::string (">");
+}
+
 // Display, save, or load history.  Stolen and modified from bash.
 //
 // Arg of -w FILENAME means write file, arg of -r FILENAME
 // means read file, arg of -q means don't number lines.  Arg of N
 // means only display that many items. 
 
 static void
 do_history (int argc, const string_vector& argv)
@@ -528,16 +544,27 @@ do_run_history (int argc, const string_v
 
   // Delete the temporary file.
 
   // XXX FIXME XXX -- should probably be done using an unwind_protect.
 
   unlink (name.c_str ());
 }
 
+void
+octave_history_write_timestamp (void)
+{
+  octave_localtime now;
+
+  std::string timestamp = now.strftime (Vhistory_timestamp_format_string);
+
+  if (! timestamp.empty ())
+    command_history::add (timestamp);
+}
+
 DEFCMD (edit_history, args, ,
   "-*- texinfo -*-\n\
 @deffn {Command} edit_history options\n\
 If invoked with no arguments, @code{edit_history} allows you to edit the\n\
 history list using the editor named by the variable @code{EDITOR}.  The\n\
 commands to be edited are first copied to a temporary file.  When you\n\
 exit the editor, Octave executes the commands that remain in the file.\n\
 It is often more convenient to use @code{edit_history} to define functions \n\
@@ -683,16 +710,34 @@ history_file (void)
       Vhistory_file = s;
       command_history::set_file (file_ops::tilde_expand (s));
     }
 
   return status;
 }
 
 static int
+history_timestamp_format_string (void)
+{
+  int status = 0;
+
+  octave_value v = builtin_any_variable ("history_timestamp_format_string");
+
+  if (v.is_string ())
+    Vhistory_timestamp_format_string = v.string_value ();
+  else
+    {
+      gripe_invalid_value_specified ("history_timestamp_format_string");
+      status = -1;
+    }
+
+  return status;
+}
+
+static int
 saving_history (void)
 {
   Vsaving_history = check_preference ("saving_history");
 
   command_history::ignore_entries (! Vsaving_history);
 
   return 0;
 }
@@ -713,16 +758,31 @@ overridden by the environment variable @
   DEFVAR (history_size, tmp_hist_size, history_size,
     "-*- texinfo -*-\n\
 @defvr {Built-in Variable} history_size\n\
 This variable specifies how many entries to store in the history file.\n\
 The default value is @code{1024}, but may be overridden by the\n\
 environment variable @code{OCTAVE_HISTSIZE}.\n\
 @end defvr");
 
+  DEFVAR (history_timestamp_format_string,
+	  default_history_timestamp_format (),
+	  history_timestamp_format_string,
+    "-*- texinfo -*-\n\
+@defvr {Built-in Variable} history_timestamp_format_string\n\
+This variable specifies the the format string for the comment line\n\
+that is written to the history file when Octave exits.  The format\n\
+string is passed to @code{strftime}.  The default value is\n\
+\n\
+@example\n\
+\"# Octave VERSION, %a %b %d %H:%M:%S %Y %Z <USER@@HOST>\"\n\
+@end example\n\
+@seealso{strftime}\n\
+@end defvr");
+
   DEFVAR (saving_history, true, saving_history,
     "-*- texinfo -*-\n\
 @defvr {Built-in Variable} saving_history\n\
 If the value of @code{saving_history} is nonzero, command entered\n\
 on the command line are saved in the file specified by the variable\n\
 @code{history_file}.\n\
 @end defvr");
 }
diff --git a/src/oct-hist.h b/src/oct-hist.h
--- a/src/oct-hist.h
+++ b/src/oct-hist.h
@@ -22,18 +22,18 @@ Software Foundation, 59 Temple Place - S
 
 #if !defined (octave_octave_hist_h)
 #define octave_octave_hist_h 1
 
 #include <string>
 
 #include "cmd-hist.h"
 
-extern int default_history_size (void);
-extern std::string default_history_file (void);
+// Write timestamp to history file.
+extern void octave_history_write_timestamp (void);
 
 // TRUE means input is coming from temporary history file.
 extern bool input_from_tmp_history_file;
 
 // TRUE if we are saving history.
 extern bool Vsaving_history;
 
 #endif
diff --git a/src/octave.cc b/src/octave.cc
--- a/src/octave.cc
+++ b/src/octave.cc
@@ -428,16 +428,18 @@ maximum_braindamage (void)
   persist = true;
 
   bind_builtin_variable ("PS1", ">> ");
   bind_builtin_variable ("PS2", "");
   bind_builtin_variable ("beep_on_error", true);
   bind_builtin_variable ("crash_dumps_octave_core", false);
   bind_builtin_variable ("default_save_options", "-mat-binary");
   bind_builtin_variable ("fixed_point_format", true);
+  bind_builtin_variable ("history_timestamp_format_string",
+			 "%%-- %D %I:%M %p --%%");
   bind_builtin_variable ("page_screen_output", false);
   bind_builtin_variable ("print_empty_dimensions", false);
   bind_builtin_variable ("warn_function_name_clash", false);
 }
 
 // You guessed it.
 
 int
diff --git a/src/toplev.cc b/src/toplev.cc
--- a/src/toplev.cc
+++ b/src/toplev.cc
@@ -540,25 +540,27 @@ do_octave_atexit (void)
     {
       deja_vu = true;
 
       command_editor::restore_terminal_state ();
 
       // XXX FIXME XXX -- is this needed?  Can it cause any trouble?
       raw_mode (0);
 
+      octave_history_write_timestamp ();
+
       command_history::clean_up_and_save ();
 
       close_files ();
 
       cleanup_tmp_files ();
 
       flush_octave_stdout ();
 
-      if (!quitting_gracefully && (interactive || forced_interactive))
+      if (! quitting_gracefully && (interactive || forced_interactive))
 	std::cout << "\n";
     }
 }
 
 DEFUN (atexit, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} atexit (@var{fcn})\n\
 Register a function to be called when Octave exits.  For example,\n\
