# HG changeset patch
# User jwe
# Date 1140806308 0
#      Fri Feb 24 18:38:28 2006 +0000
# Node ID 6e9a14b3c29997c9a8d122f7237657d59f8fa388
# Parent  7171d19706df9cedee41b196bd6081f6eb94dc75
[project @ 2006-02-24 18:38:28 by jwe]

diff --git a/liboctave/Array.cc b/liboctave/Array.cc
--- a/liboctave/Array.cc
+++ b/liboctave/Array.cc
@@ -3171,16 +3171,18 @@ assignN (Array<LT>& lhs, const Array<RT>
 			      increment_index (result_idx, frozen_len);
 			    }
 			}
 		    }
 		}
 	    }
 	}
 
+      lhs.clear_index ();
+
       if (retval != 0)
 	lhs = lhs.reshape (final_lhs_dims);
     }
 
   if (retval != 0)
     lhs.chop_trailing_singletons ();
 
   lhs.clear_index ();
diff --git a/liboctave/Array.h b/liboctave/Array.h
--- a/liboctave/Array.h
+++ b/liboctave/Array.h
@@ -229,21 +229,21 @@ public:
 	{
 	  if (--rep->count <= 0)
 	    delete rep;
 
 	  rep = a.rep;
 	  rep->count++;
 
 	  dimensions = a.dimensions;
+
+	  idx_count = 0;
+	  idx = 0;
 	}
 
-      idx_count = 0;
-      idx = 0;
-
       return *this;
     }
 
   void fill (const T& val) { make_unique (val); }
 
   octave_idx_type capacity (void) const { return rep->length (); }
   octave_idx_type length (void) const { return capacity (); }
   octave_idx_type nelem (void) const { return capacity (); }
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,14 @@
+2006-02-24  John W. Eaton  <jwe@octave.org>
+
+	* Array.cc (assignN): Clear index before reshaping.
+
+	* Array.h (Array<T>::operator =): Don't set idx to 0 if copying self.
+
 2006-02-20  David Bateman  <dbateman@free.fr>
 
 	* dSparse.cc (dsolve, utsolve, ltsolve): Remove restriction that 
 	matrix must be square in diagonal, permuted diagonal, triangular
 	and permuted triangular back/forward substitution code. Change
 	ambiguous use of no. rows and columns.
 	* CSParse.cc (dsolve, utsolve, ltsolve): ditto.
 	* SparseType.cc (SparseType::SparseType(const SparseMatrix&),
