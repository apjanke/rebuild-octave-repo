# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1518296607 18000
#      Sat Feb 10 16:03:27 2018 -0500
# Node ID 11e359eb63f4476caff7a5d9efa05339b867e00f
# Parent  10c7e236a5678b9e57f4761b6c613b8a91e1f685
move install_builtins function inside symbol_table class

* builtins.h: Move install_builtins decl inside symbol_table class.
* symtab.h (symbol_table::install_builtins): Provide decl.
(symbol_table::symbol_table): Call install_builtins.
* mk-builtins.pl: Define static functions inside octave namespace.
Define install_builtins inside symbol_table class.
* builtins.h: Delete
* libinterp/module.mk: Update.

diff --git a/libinterp/builtins.h b/libinterp/builtins.h
deleted file mode 100644
--- a/libinterp/builtins.h
+++ /dev/null
@@ -1,32 +0,0 @@
-/*
-
-Copyright (C) 1993-2017 John W. Eaton
-
-This file is part of Octave.
-
-Octave is free software: you can redistribute it and/or modify it
-under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
-
-Octave is distributed in the hope that it will be useful, but
-WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
-
-You should have received a copy of the GNU General Public License
-along with Octave; see the file COPYING.  If not, see
-<https://www.gnu.org/licenses/>.
-
-*/
-
-#if ! defined (octave_builtins_h)
-#define octave_builtins_h 1
-
-#include "octave-config.h"
-
-#include "builtin-defun-decls.h"
-
-extern OCTINTERP_API void install_builtins (void);
-
-#endif
diff --git a/libinterp/corefcn/interpreter.cc b/libinterp/corefcn/interpreter.cc
--- a/libinterp/corefcn/interpreter.cc
+++ b/libinterp/corefcn/interpreter.cc
@@ -35,17 +35,16 @@ along with Octave; see the file COPYING.
 #include "lo-blas-proto.h"
 #include "lo-error.h"
 #include "oct-env.h"
 #include "str-vec.h"
 #include "signal-wrappers.h"
 #include "unistd-wrappers.h"
 
 #include "builtin-defun-decls.h"
-#include "builtins.h"
 #include "defaults.h"
 #include "Cell.h"
 #include "call-stack.h"
 #include "defun.h"
 #include "display.h"
 #include "error.h"
 #include "file-io.h"
 #include "graphics.h"
@@ -412,18 +411,16 @@ namespace octave
 
     initialize_error_handlers ();
 
     if (m_app_context)
       install_signal_handlers ();
     else
       quit_allowed = false;
 
-    install_builtins ();
-
     bool line_editing = false;
     bool traditional = false;
 
     if (m_app_context)
       {
         // Embedded interpeters don't execute command line options.
         const cmdline_options& options = m_app_context->options ();
 
diff --git a/libinterp/corefcn/symtab.h b/libinterp/corefcn/symtab.h
--- a/libinterp/corefcn/symtab.h
+++ b/libinterp/corefcn/symtab.h
@@ -54,17 +54,19 @@ namespace octave
     typedef octave::symbol_record symbol_record;
     typedef octave::symbol_scope scope;
     typedef octave::fcn_info fcn_info;
 
     symbol_table (void)
       : m_fcn_table (), m_class_precedence_table (),
         m_parent_map (), m_global_scope ("global scope"),
         m_top_scope ("top scope"), m_current_scope (m_top_scope)
-      { }
+      {
+        install_builtins ();
+      }
 
     // No copying!
 
     symbol_table (const symbol_table&) = delete;
 
     symbol_table& operator = (const symbol_table&) = delete;
 
     ~symbol_table (void) = default;
@@ -705,16 +707,19 @@ namespace octave
       parent_map_iterator;
 
     symbol_scope m_global_scope;
     symbol_scope m_top_scope;
 
     symbol_scope m_current_scope;
 
     octave_value dump_fcn_table_map (void) const;
+
+    // This function is generated automatically by mk-builtins.pl.
+    void install_builtins (void);
   };
 
   extern bool out_of_date_check (octave_value& function,
                                  const std::string& dispatch_type = "",
                                  bool check_relative = true);
 
   extern OCTINTERP_API std::string
   get_dispatch_type (const octave_value_list& args);
diff --git a/libinterp/mk-builtins.pl b/libinterp/mk-builtins.pl
--- a/libinterp/mk-builtins.pl
+++ b/libinterp/mk-builtins.pl
@@ -143,27 +143,28 @@ namespace octave
 elsif ($make_source)
 {
   print "// DO NOT EDIT!  Generated automatically by mk-builtins.pl.
 
 #if defined (HAVE_CONFIG_H)
 #  include \"config.h\"
 #endif
 
-#include \"defun.h\"
+#include \"builtin-defun-decls.h\"
 #include \"help.h\"
 #include \"ovl.h\"
+#include \"symtab.h\"
 #include \"variables.h\"
-#include \"builtin-defun-decls.h\"
-#include \"builtins.h\"
 
 #if defined (quad)
 #  undef quad
 #endif
-";
+
+namespace octave
+{";
 
   @installer_functions = ();
 
   foreach $arg (@ARGV)
   {
     $file = $arg;
 
     if (! -f $file)
@@ -171,28 +172,28 @@ elsif ($make_source)
       $file = "$srcdir/$file";
     }
 
     ($fcn = $arg) =~ s,.*/,,;
     $fcn =~ s/\.(cc|cpp|in\.cc|in\.yy|ll)$//;
     $fcn =~ s/-/_/g;
     $fcn = "install_${fcn}_fcns";
 
-    $fcn_header = "\nstatic void
-$fcn (void)
-{
-  std::string file = \"$arg\";";
+    $fcn_header = "\n  static void
+  $fcn (symbol_table& symtab)
+  {
+    std::string file = \"$arg\";";
 
     open($fh, "<", $file) || die "mk-builtins.pl: failed to open file $file\n";
 
     ## Find DEFUN or DEFALIAS macros and generate the function calls that
     ## install the built-in functions or function aliases.
 
     $type = "";
-    $const = 0;
+    $const_param = "";
     $fname = "";
     $name = "";
     $alias = "";
     $fcn_body = "";
 
     %dispatch_map = ();
 
     while ($line = <$fh>)
@@ -209,17 +210,17 @@ elsif ($make_source)
         $fname = "$3";
         $name = "$2";
       }
       elsif ($line =~ /^ *DEFCONST(FUN|METHOD) *\( *([^ ,]*) *,.*$/)
       {
         $type = "fun";
         $fname = "F$2";
         $name = "$2";
-        $const = 1;
+        $const_param = ", true";
       }
       elsif ($line =~ /^ *DEFALIAS *\( *([^ ,]*) *, *([^ )]*) *\).*$/)
       {
         $type = "alias";
         $alias = "$1";
         $name = "$2";
       }
       elsif ($defun_dld_are_built_in)
@@ -247,33 +248,26 @@ elsif ($make_source)
           @classes = split (/\s+/, $line);
 
           $dispatch_map{$name} = [@classes];
         }
 
         ## We use the name appended to the "external-doc" tag to find
         ## the docstring for aliases to this function.
 
-        if ($const)
-        {
-          $fcn_body .= "\n  install_builtin_function ($fname, \"$name\", file, \"external-doc:$name\", true);"
-        }
-        else
-        {
-          $fcn_body .= "\n  install_builtin_function ($fname, \"$name\", file, \"external-doc:$name\");"
-        }
+        $fcn_body .= "\n    symtab.install_built_in_function (\"$name\", octave_value (new octave_builtin ($fname, \"$name\", file, \"external-doc:$name\")));";
 
         $type = "";
         $fname = "";
         $name = "";
-        $const = 0;
+        $const_param = "";
       }
       elsif ($type eq "alias")
       {
-        $fcn_body .= "\n  alias_builtin (\"$alias\", \"$name\");";
+        $fcn_body .= "\n    symtab.alias_built_in_function (\"$alias\", \"$name\");";
 
         ## Preserve dispatch info (if any) that we have for the
         ## original function.
 
         if (exists $dispatch_map{$name})
         {
           @classes = @{$dispatch_map{$name}};
 
@@ -292,38 +286,38 @@ elsif ($make_source)
     foreach $fcn (sort (keys (%dispatch_map)))
     {
       $dispatch_code = "";
 
       @classes =  @{$dispatch_map{$fcn}};
 
       foreach $class (@classes)
       {
-        $dispatch_code .= "\n  install_builtin_dispatch (\"$fcn\", \"$class\");";
+        $dispatch_code .= "\n    symtab.install_built_in_dispatch (\"$fcn\", \"$class\");";
       }
 
-      if ($dispatch_code)
-        {
-          $fcn_body .= "\n$dispatch_code";
-        }
+    if ($dispatch_code)
+      {
+        $fcn_body .= "\n$dispatch_code";
+      }
     }
 
     if ($fcn_body)
       {
         push (@installer_functions, $fcn);
 
-        print "$fcn_header\n$fcn_body\n}\n";
+        print "$fcn_header\n$fcn_body\n  }\n";
       }
   }
 
   print "
-void
-install_builtins (void)
-{
+  void
+  symbol_table::install_builtins (void)
+  {
 ";
 
   foreach $fcn (@installer_functions)
   {
-    print "  $fcn ();\n"
+    print "    $fcn (*this);\n"
   }
 
-  print "}\n";
+  print "  }\n}\n";
 }
diff --git a/libinterp/module.mk b/libinterp/module.mk
--- a/libinterp/module.mk
+++ b/libinterp/module.mk
@@ -90,17 +90,16 @@ LIBINTERP_BUILT_NODISTFILES = \
   %reldir%/op-kw-docs \
   %reldir%/version.in.h \
   $(LIBINTERP_BUILT_DISTFILES)
 
 GEN_CONFIG_SHELL += \
   %reldir%/mk-version-h.sh
 
 octinclude_HEADERS += \
-  %reldir%/builtins.h \
   %reldir%/build-env.h \
   %reldir%/liboctinterp-build-info.h \
   %reldir%/octave.h \
   $(COREFCN_INC) \
   $(LIBINTERP_OPERATORS_INC) \
   $(OCTAVE_VALUE_INC) \
   $(PARSE_TREE_INC) \
   $(PARSER_INC)
