# HG changeset patch
# User Pantxo Diribarne <pantxo.diribarne@gmail.com>
# Date 1522415708 -7200
#      Fri Mar 30 15:15:08 2018 +0200
# Branch stable
# Node ID 1cd3aeda7598a370dcf00540e4767237d209bc1d
# Parent  85867171af5f4939a76dbdf29e784bcc5cf55062
Allow registering compressed help at run time (bug #53006).

* octave-link.h/cc (octave_link::register_doc, octave_link::unregister_doc):
  New methods.
  (octave_link::do_register_doc, octave_link::do_unregister_doc):
  New virtual methods.

* octave-qt-link.h/cc (octave_qt_link::do_register_doc,
  octave_qt_link::do_unregister_doc): Reimplement methods.
  (register_doc_signal, unregister_doc_signal): New signals.

* main-window.cc/h (handle_register_doc, handle_unregister_doc): New methods.
  (main_window::register_doc_signal,
   main_window::unregister_doc_signal): New signals.
  (main_window::construct_octave_qt_link): Connect qt-link's
   (un)register_doc_signal to corresponding handle_ method.

* documentation-dock-widget.cc/h (documentation_dock_widget::registerDoc,
  documentation_dock_widget::unregisterDoc): New methods.

* documentation.cc/h (documentation::registerDoc, documentation::unregisterDoc):
  New methods.
  (documentation::documentation): Read collection from oct_doc_dir if necessary.
  Make a smart copy of the original collection in a writable file and use the
  latter for further operations.
  (documentation::~documentation): Delete temporary collection file and hidden
  temporary directory.

diff --git a/libgui/src/documentation-dock-widget.cc b/libgui/src/documentation-dock-widget.cc
--- a/libgui/src/documentation-dock-widget.cc
+++ b/libgui/src/documentation-dock-widget.cc
@@ -40,16 +40,22 @@ namespace octave
     setStatusTip (tr ("See the documentation for help."));
 
     m_docs = new octave::documentation (this);
     setWidget (m_docs);
     setFocusProxy (m_docs);
 
     connect (p, SIGNAL (show_doc_signal (const QString&)),
              this, SLOT (showDoc (const QString&)));
+
+    connect (p, SIGNAL (register_doc_signal (const QString&)),
+             this, SLOT (registerDoc (const QString&)));
+
+    connect (p, SIGNAL (unregister_doc_signal (const QString&)),
+             this, SLOT (unregisterDoc (const QString&)));
   }
 
   documentation_dock_widget::~documentation_dock_widget (void)
   {
     if (m_docs)
       delete m_docs;
   }
 
@@ -78,9 +84,19 @@ namespace octave
     // show the doc pane without focus for carrying on typing in the console
     if (! isVisible ())
       setVisible (true);
 
     raise ();
 
     m_docs->load_ref (name);
   }
+
+  void documentation_dock_widget::registerDoc (const QString& name)
+  {
+    m_docs->registerDoc (name);
+  }
+
+  void documentation_dock_widget::unregisterDoc (const QString& name)
+  {
+    m_docs->unregisterDoc (name);
+  }
 }
diff --git a/libgui/src/documentation-dock-widget.h b/libgui/src/documentation-dock-widget.h
--- a/libgui/src/documentation-dock-widget.h
+++ b/libgui/src/documentation-dock-widget.h
@@ -43,16 +43,18 @@ namespace octave
 
   protected slots:
 
     void copyClipboard (void);
     void pasteClipboard (void);
     void selectAll (void);
 
     void showDoc (const QString & name);
+    void registerDoc (const QString & name);
+    void unregisterDoc (const QString & name);
 
   private:
 
     octave::documentation *m_docs;
   };
 }
 
 #endif
diff --git a/libgui/src/documentation.cc b/libgui/src/documentation.cc
--- a/libgui/src/documentation.cc
+++ b/libgui/src/documentation.cc
@@ -19,42 +19,67 @@ along with Octave; see the file COPYING.
 <https://www.gnu.org/licenses/>.
 
 */
 
 #if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
+#include "defaults.h"
+#include "file-ops.h"
+#include "oct-env.h"
+
 #include <QApplication>
 #include <QCompleter>
+#include <QDir>
+#include <QFile>
+#include <QFileInfo>
 #include <QHelpContentWidget>
 #include <QHelpIndexWidget>
 #include <QHelpSearchEngine>
 #include <QHelpSearchQueryWidget>
 #include <QHelpSearchResultWidget>
 #include <QLabel>
 #include <QLineEdit>
+#include <QMessageBox>
 #include <QTabWidget>
-#include <QMessageBox>
 #include <QVBoxLayout>
 
 #include "documentation.h"
 
 namespace octave
 {
   // The documentation splitter, which is the main widget
   // of the doc dock widget
   documentation::documentation (QWidget *p)
     : QSplitter (Qt::Horizontal, p)
   {
+    // Get original collection
     QString collection = getenv ("OCTAVE_QTHELP_COLLECTION");
+    if (collection.isEmpty ())
+      collection = QString::fromStdString (octave::config::oct_doc_dir ()
+                                         + octave::sys::file_ops::dir_sep_str ()
+                                         + "octave_interpreter.qhc");
+
+    // Setup the help engine with the original collection, use a writable copy
+    // of the original collection and load the help data
+    m_help_engine = new QHelpEngine (collection, this);
 
-    // Setup the help engine and load the help data
-    m_help_engine = new QHelpEngine (collection, this);
+    std::string tmpdir (octave::sys::env::getenv ("TMPDIR"));
+    m_collection
+      = QString::fromStdString (octave::sys::tempnam (tmpdir, "oct-qhelp-"));
+
+    if (m_help_engine->copyCollectionFile (m_collection))
+      m_help_engine->setCollectionFile (m_collection);
+    else
+      QMessageBox::warning (this, tr ("Octave Documentation"),
+                            tr ("Could not copy help collection to temporary\n"
+                                "file. Search capabilities may be affected.\n"
+                                "%1").arg (m_help_engine->error ()));
 
     connect(m_help_engine, SIGNAL(setupFinished()),
             m_help_engine->searchEngine(), SLOT(indexDocumentation()));
 
     if (! m_help_engine->setupData())
       {
         QMessageBox::warning (this, tr ("Octave Documentation"),
                               tr ("Could not setup the data required for the\n"
@@ -157,17 +182,35 @@ namespace octave
     // Initial view: Contents
     m_doc_browser->setSource (QUrl (
         "qthelp://org.octave.interpreter-1.0/doc/octave.html/index.html"));
   }
 
   documentation::~documentation (void)
   {
     if (m_help_engine)
-      delete m_help_engine;
+      {
+        delete m_help_engine;
+
+        // Cleanup temporary file and directory
+        QFile file (m_collection);
+        QFileInfo finfo (file);
+        QString bname = finfo.fileName ();
+        QDir dir = finfo.absoluteDir ();
+        dir.setFilter (QDir::Dirs | QDir::NoDotAndDotDot | QDir::Hidden);
+        QStringList namefilter;
+        namefilter.append ("*" + bname + "*");
+        foreach (QFileInfo fi, dir.entryInfoList (namefilter))
+          {
+            QDir tmpdir (fi.absoluteFilePath ());
+            tmpdir.removeRecursively ();
+          }
+
+        file.remove();
+      }
   }
 
   void documentation::global_search (void)
   {
     QList<QHelpSearchQuery> queries
       = m_help_engine->searchEngine ()->queryWidget ()->query ();
     m_help_engine->searchEngine ()->search (queries);
   }
@@ -220,16 +263,57 @@ namespace octave
 
     if (index > -1)
       m_filter->removeItem (index);            // remove if already existing
 
     m_filter->insertItem (0, text);            // (re)insert at beginning
     m_filter->setCurrentIndex (0);
   }
 
+  void documentation::registerDoc (const QString& qch)
+  {
+    if (m_help_engine)
+      {
+        QString ns = m_help_engine->namespaceName (qch);
+        bool do_setup = true;
+        if (m_help_engine->registeredDocumentations ().contains (ns))
+          {
+            if (m_help_engine->documentationFileName (ns) == qch)
+              do_setup = false;
+            else
+              {
+                m_help_engine->unregisterDocumentation (ns);
+                m_help_engine->registerDocumentation (qch);
+              }
+          }
+        else if (! m_help_engine->registerDocumentation (qch))
+          {
+            QMessageBox::warning (this, tr ("Octave Documentation"),
+                                  tr ("Unable to register help file %1.").
+                                  arg (qch));
+            do_setup = false;
+            return;
+          }
+
+        if (do_setup)
+          m_help_engine->setupData();
+      }
+  }
+
+  void documentation::unregisterDoc (const QString& qch)
+  {
+    QString ns = m_help_engine->namespaceName (qch);
+    if (m_help_engine
+        && m_help_engine->registeredDocumentations ().contains (ns)
+        && m_help_engine->documentationFileName (ns) == qch)
+      {
+        m_help_engine->unregisterDocumentation (ns);
+        m_help_engine->setupData ();
+      }
+  }
 
 
   // The documentation browser
   documentation_browser::documentation_browser (QHelpEngine *he, QWidget *p)
     : QTextBrowser (p), m_help_engine (he)
   { }
 
   documentation_browser::~documentation_browser (void)
diff --git a/libgui/src/documentation.h b/libgui/src/documentation.h
--- a/libgui/src/documentation.h
+++ b/libgui/src/documentation.h
@@ -71,28 +71,31 @@ namespace octave
 
     void notice_settings (const QSettings *settings);
 
     void copyClipboard (void);
     void pasteClipboard (void);
     void selectAll (void);
 
     void load_ref (const QString & name);
+    void registerDoc (const QString & name);
+    void unregisterDoc (const QString & name);
 
   private slots:
 
     void global_search (void);
     void global_search_started (void);
     void global_search_finished (int hits);
     void filter_update (const QString& expression);
     void filter_update_history (void);
 
   private:
 
     QHelpEngine *m_help_engine;
     documentation_browser *m_doc_browser;
     QComboBox *m_filter;
+    QString m_collection;
 
   };
 
 }
 
 #endif
diff --git a/libgui/src/main-window.cc b/libgui/src/main-window.cc
--- a/libgui/src/main-window.cc
+++ b/libgui/src/main-window.cc
@@ -1471,16 +1471,26 @@ namespace octave
   }
 
   void main_window::handle_show_doc (const QString& file)
   {
     m_doc_browser_window->setVisible (true);
     emit show_doc_signal (file);
   }
 
+  void main_window::handle_register_doc (const QString& file)
+  {
+    emit register_doc_signal (file);
+  }
+
+  void main_window::handle_unregister_doc (const QString& file)
+  {
+    emit unregister_doc_signal (file);
+  }
+
   void main_window::handle_octave_ready (void)
   {
     // actions after the startup files are executed
     QSettings *settings = resource_manager::get_settings ();
 
     QDir startup_dir = QDir ();    // current octave dir after startup
 
     if (settings)
@@ -1979,16 +1989,24 @@ namespace octave
                                                           int, const QString&)),
                  this,
                  SLOT (handle_update_breakpoint_marker_request (bool, const QString&,
                                                                 int, const QString&)));
 
         connect (m_octave_qt_link,
                  SIGNAL (show_doc_signal (const QString &)),
                  this, SLOT (handle_show_doc (const QString &)));
+
+        connect (m_octave_qt_link,
+                 SIGNAL (register_doc_signal (const QString &)),
+                 this, SLOT (handle_register_doc (const QString &)));
+
+        connect (m_octave_qt_link,
+                 SIGNAL (unregister_doc_signal (const QString &)),
+                 this, SLOT (handle_unregister_doc (const QString &)));
       }
 
     // Defer initializing and executing the interpreter until after the main
     // window and QApplication are running to prevent race conditions
     QTimer::singleShot (0, m_interpreter, SLOT (execute (void)));
   }
 
   QAction* main_window::add_action (QMenu *menu, const QIcon& icon,
diff --git a/libgui/src/main-window.h b/libgui/src/main-window.h
--- a/libgui/src/main-window.h
+++ b/libgui/src/main-window.h
@@ -122,16 +122,18 @@ namespace octave
 
     void settings_changed (const QSettings *);
     void init_terminal_size_signal (void);
     void new_file_signal (const QString&);
     void open_file_signal (const QString&);
     void open_file_signal (const QString& file, const QString& enc, int line);
 
     void show_doc_signal (const QString&);
+    void register_doc_signal (const QString&);
+    void unregister_doc_signal (const QString&);
 
     void insert_debugger_pointer_signal (const QString& file, int line);
     void delete_debugger_pointer_signal (const QString& file, int line);
     void update_breakpoint_marker_signal (bool insert, const QString& file,
                                           int line, const QString& cond);
 
     void copyClipboard_signal (void);
     void pasteClipboard_signal (void);
@@ -238,16 +240,18 @@ namespace octave
 
     void handle_create_filedialog (const QStringList& filters,
                                    const QString& title,
                                    const QString& filename,
                                    const QString& dirname,
                                    const QString& multimode);
 
     void handle_show_doc (const QString& file);
+    void handle_register_doc (const QString& file);
+    void handle_unregister_doc (const QString& file);
 
     void handle_octave_ready ();
     void handle_octave_finished (int);
 
     //! Find files dialog.
     //!@{
     void find_files (const QString& startdir = QDir::currentPath ());
     void find_files_finished (int) { }
diff --git a/libgui/src/octave-qt-link.cc b/libgui/src/octave-qt-link.cc
--- a/libgui/src/octave-qt-link.cc
+++ b/libgui/src/octave-qt-link.cc
@@ -582,16 +582,26 @@ namespace octave
     emit show_preferences_signal ();
   }
 
   void octave_qt_link::do_show_doc (const std::string& file)
   {
     emit show_doc_signal (QString::fromStdString (file));
   }
 
+  void octave_qt_link::do_register_doc (const std::string& file)
+  {
+    emit register_doc_signal (QString::fromStdString (file));
+  }
+
+  void octave_qt_link::do_unregister_doc (const std::string& file)
+  {
+    emit unregister_doc_signal (QString::fromStdString (file));
+  }
+
   void octave_qt_link::do_edit_variable (const std::string& expr,
                                          const octave_value& val)
   {
     emit edit_variable_signal (QString::fromStdString (expr), val);
   }
 
   void octave_qt_link::do_insert_debugger_pointer (const std::string& file,
                                                    int line)
diff --git a/libgui/src/octave-qt-link.h b/libgui/src/octave-qt-link.h
--- a/libgui/src/octave-qt-link.h
+++ b/libgui/src/octave-qt-link.h
@@ -137,16 +137,18 @@ namespace octave
     void do_set_default_prompts (std::string& ps1, std::string& ps2,
                                  std::string& ps4);
 
     static bool file_in_path (const std::string& file, const std::string& dir);
 
     void do_show_preferences (void);
 
     void do_show_doc (const std::string& file);
+    void do_register_doc (const std::string& file);
+    void do_unregister_doc (const std::string& file);
 
     void do_edit_variable (const std::string& name, const octave_value& val);
 
     void shutdown_confirmation (bool sd) { m_shutdown_confirm_result = sd; }
 
     void lock (void) { m_mutex.lock (); }
     void wait (void) { m_waitcondition.wait (&m_mutex); }
     void unlock (void) { m_mutex.unlock (); }
@@ -191,16 +193,20 @@ namespace octave
 
     void insert_debugger_pointer_signal (const QString&, int);
     void delete_debugger_pointer_signal (const QString&, int);
 
     void show_preferences_signal (void);
 
     void show_doc_signal (const QString& file);
 
+    void register_doc_signal (const QString& file);
+
+    void unregister_doc_signal (const QString& file);
+
     void edit_variable_signal (const QString& name, const octave_value& val);
 
     void refresh_variable_editor_signal (void);
 
     void confirm_shutdown_signal (void);
   };
 }
 
diff --git a/libinterp/corefcn/octave-link.cc b/libinterp/corefcn/octave-link.cc
--- a/libinterp/corefcn/octave-link.cc
+++ b/libinterp/corefcn/octave-link.cc
@@ -427,8 +427,36 @@ Undocumented internal function.
 {
   std::string file;
 
   if (args.length () >= 1)
     file = args(0).string_value();
 
   return ovl (octave_link::show_doc (file));
 }
+
+DEFUN (__octave_link_register_doc__, args, ,
+       doc: /* -*- texinfo -*-
+@deftypefn {} {} __octave_link_register_doc__ (@var{filename})
+Undocumented internal function.
+@end deftypefn */)
+{
+  std::string file;
+
+  if (args.length () >= 1)
+    file = args(0).string_value();
+
+  return ovl (octave_link::register_doc (file));
+}
+
+DEFUN (__octave_link_unregister_doc__, args, ,
+       doc: /* -*- texinfo -*-
+@deftypefn {} {} __octave_link_unregister_doc__ (@var{filename})
+Undocumented internal function.
+@end deftypefn */)
+{
+  std::string file;
+
+  if (args.length () >= 1)
+    file = args(0).string_value();
+
+  return ovl (octave_link::unregister_doc (file));
+}
diff --git a/libinterp/corefcn/octave-link.h b/libinterp/corefcn/octave-link.h
--- a/libinterp/corefcn/octave-link.h
+++ b/libinterp/corefcn/octave-link.h
@@ -421,16 +421,40 @@ public:
   {
     if (enabled ())
       {
         instance->do_show_doc (file);
         return true;
       }
     else
       return false;
+  }
+
+  static bool
+  register_doc (const std::string & file)
+  {
+    if (enabled ())
+      {
+        instance->do_register_doc (file);
+        return true;
+      }
+    else
+      return false;
+  }
+
+  static bool
+  unregister_doc (const std::string & file)
+  {
+    if (enabled ())
+      {
+        instance->do_unregister_doc (file);
+        return true;
+      }
+    else
+      return false;
 
   }
 
   static bool
   edit_variable (const std::string &name, const octave_value& val)
   {
     if (enabled ())
       {
@@ -597,13 +621,17 @@ protected:
 
   virtual void do_set_default_prompts (std::string& ps1, std::string& ps2,
                                        std::string& ps4) = 0;
 
   virtual void do_show_preferences (void) = 0;
 
   virtual void do_show_doc (const std::string& file) = 0;
 
+  virtual void do_register_doc (const std::string& file) = 0;
+
+  virtual void do_unregister_doc (const std::string& file) = 0;
+
   virtual void
   do_edit_variable (const std::string& name, const octave_value& val) = 0;
 };
 
 #endif
diff --git a/run-octave.in b/run-octave.in
--- a/run-octave.in
+++ b/run-octave.in
@@ -102,17 +102,17 @@ fi
 ## in the $builddir/src directory.
 
 OCTAVE_ARCHLIBDIR="$builddir/src"; export OCTAVE_ARCHLIBDIR
 OCTAVE_BINDIR="$builddir/src"; export OCTAVE_BINDIR
 OCTAVE_DEFAULT_QT_SETTINGS="$builddir/libgui/default-qt-settings"; export OCTAVE_DEFAULT_QT_SETTINGS
 OCTAVE_FONTS_DIR="$top_srcdir/etc/fonts"; export OCTAVE_FONTS_DIR
 OCTAVE_JAVA_DIR="$builddir/scripts/java"; export OCTAVE_JAVA_DIR
 OCTAVE_LOCALE_DIR="$builddir/libgui/languages"; export OCTAVE_LOCALE_DIR
-OCTAVE_QTHELP_COLLECTION="$builddir/doc/interpreter/octave_interpreter.qhc"; export OCTAVE_QTHELP_COLLECTION
+OCTAVE_QTHELP_FILE="$builddir/doc/interpreter/octave_interpreter.qch"; export OCTAVE_QTHELP_FILE
 OCTAVE_SITE_INITFILE="$top_srcdir/scripts/startup/site-rcfile"; export OCTAVE_SITE_INITFILE
 OCTAVE_VERSION_INITFILE="$top_srcdir/scripts/startup/version-rcfile"; export OCTAVE_VERSION_INITFILE
 
 if [ "$ADDRESS_SANITIZER_ENABLED" = yes ]; then
   ASAN_OPTIONS=symbolize=1; export ASAN_OPTIONS
 fi
 
 exec $builddir/libtool --mode=execute $driver \
