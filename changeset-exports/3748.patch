# HG changeset patch
# User jwe
# Date 976250614 0
#      Fri Dec 08 04:43:34 2000 +0000
# Node ID 599fb10b454d21095643e729e0bd40bc5c93234d
# Parent  50f30e40abca296e11661fe0a87e5aa82527c0f6
[project @ 2000-12-08 04:43:33 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2000-12-07  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* image/saveimage.m: Don't try to create rawbit image.
+
 2000-11-21  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* Makefile.in (bin-dist): Pass -C to $(MAKE), not -c.
 
 2000-11-16  Paul Kienzle <pkienzle@kienzle.powernet.co.uk>
 
 	* plot/contour.m: Reorder args for Matlab compatibility.
 
diff --git a/scripts/image/saveimage.m b/scripts/image/saveimage.m
--- a/scripts/image/saveimage.m
+++ b/scripts/image/saveimage.m
@@ -128,20 +128,16 @@ function saveimage (filename, img, img_f
   idx = find (map > 1);
   map (idx) = ones (size (idx));
 
   idx = find (map < 0);
   map (idx) = zeros (size (idx));
 
   map = round (255 * map);
 
-  bw = (map_nr == 2
-        && ((map(1,1) == 0 && map(2,1) == 255)
-            || (map(1,1) == 255 && map(2,1) == 0)));
-
   img = round (img');
   [img_nr, img_nc] = size (img);
 
   img_sz = img_nr * img_nc;
   img = reshape (img, img_sz, 1);
 
   idx = find (img > map_nr);
   img (idx) = ones (size (idx)) * map_nr;
@@ -155,53 +151,17 @@ function saveimage (filename, img, img_f
     ## load/save functions, but we need a good way to get username and
     ## hostname information.
 
     time_string = ctime (time ());
     time_string = time_string (1:length (time_string)-1);
     tagline = sprintf ("# Created by Octave %s, %s",
 		       __OCTAVE_VERSION__, time_string);
 
-    if (grey && map_nr == 2 && bw)
-
-      if (map(1) != 0)
-        map = [0; 1];
-      else
-        map = [1; 0];
-      endif
-
-      n_long = rem (img_nc, 8);
-      tmp = zeros (ceil (img_nc/8), img_nr);
-
-      for i = 1:img_nr
-        idx = (i-1)*img_nc+1:i*img_nc;
-        if (n_long > 0)
-          img_row = [map(img(idx)); (zeros (8-n_long, 1))];
-        else
-          img_row = map(img(idx));
-        endif
-	l_img_row = length (img_row);
-        if (img_nc < 8)
-          for j = 1:8
-            tmp(:,i) = tmp(:,i) + img_row (j) * 2^(8-j);
-          endfor
-        else
-          for j = 1:8
-            tmp(:,i) = tmp(:,i) + img_row (j:8:l_img_row) * 2^(8-j);
-          endfor
-        endif
-      endfor
-
-      fid = fopen (filename, "w");
-      fprintf (fid, "P4\n%s\n%d %d\n", tagline, img_nr, img_nc);
-      fwrite (fid, tmp, "char");
-      fprintf (fid, "\n");
-      fclose (fid);
-
-    elseif (grey)
+    if (grey)
 
       fid = fopen (filename, "w");
       fprintf (fid, "P5\n%s\n%d %d\n255\n", tagline, img_nr, img_nc);
       fwrite (fid, map(img), "uchar");
       fprintf (fid, "\n");
       fclose (fid);
 
     else
