# HG changeset patch
# User jwe
# Date 1098121366 0
#      Mon Oct 18 17:42:46 2004 +0000
# Node ID a9f7f67e2b6e693453d1a4bace4e081376ee23e6
# Parent  36f954d8d53af07a1f289302c5b0529d6dcb7d52
[project @ 2004-10-18 17:42:46 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2004-10-18  Oyvind Kristiansen  <oyvinkri@stud.ntnu.no>
+
+	* symtab.cc (symbol_table::parse_whos_line_format): Handle
+	size-of-parameter and center-specific format specifiers.
+
 2004-10-18  John W. Eaton  <jwe@octave.org>
 
 	* pt-plot.cc (handle_plot_data): If plotting data from file,
 	always use "using" clause.
 
 2004-10-12  David Bateman  <dbateman@free.fr>
 
 	* pt-mat.cc (tm_row_const::tm_row_const_rep::do_init_element,
diff --git a/src/symtab.cc b/src/symtab.cc
--- a/src/symtab.cc
+++ b/src/symtab.cc
@@ -1422,32 +1422,41 @@ symbol_table::parse_whos_line_format (Ar
 	  // Insert data into parameter
 	  param.first_parameter_length = 0;
 	  pos = param_string.find (param.command);
 	  if (pos != NPOS)
 	    {
 	      param.parameter_length = param_length(pos);
 	      param.text = param_names(pos);
 	      param.line.assign (param_names (pos).length (), '=');
+
+	      param.parameter_length = (a > param.parameter_length ? 
+		                       a : param.parameter_length);
+	      if((param.command == 's') && (param.modifier == 'c') && (b > 0))
+	      {
+		param.first_parameter_length = b;
+	      }
 	    }
 	  else
 	    {
 	      error ("whos_line_format: '%c' is not a command",
 		     param.command);
 	      error_encountered = true;
 	    }
 
 	  if (param.command == 's')
 	    {
 	      // Have to calculate space needed for printing matrix dimensions
 	      // Space needed for Size column is hard to determine in prior,
 	      // because it depends on dimensions to be shown. That is why it is
 	      // recalculated for each Size-command
-	      int j, first = 0, rest = 0, total = 0;
+	      int j, first, rest = 0, total;
 	      param.dimensions = c;
+	      first = param.first_parameter_length;
+	      total = param.parameter_length;
 	     
 	      for (j = 0; j < len; j++)
 	      {
 		int first1 = symbols(j)->dimensions_string_req_first_space (param.dimensions);
 		int total1 = symbols(j)->dimensions_string_req_total_space (param.dimensions);
 		int rest1 = total1 - first1;
 		rest = (rest1 > rest ? rest1 : rest);
 		first = (first1 > first ? first1 : first);
