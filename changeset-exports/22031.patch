# HG changeset patch
# User Mike Miller <mtmiller@octave.org>
# Date 1467516579 25200
#      Sat Jul 02 20:29:39 2016 -0700
# Node ID 2cfbb6b25428d3d9a8dc7656c091cad9dccfb738
# Parent  3a4742ebaf635f19c1a4c6bb3661f229fb3671df
mkoctfile: support more file extensions for C++ sources (bug #48381)

* mkoctfile.in.cc (help_msg, main): Add support for C++ source files ending
with a .cp, .CPP, .cxx, or .c++ suffix (corresponding to gcc).
(main): Use CXX when generating dependency files for C++ sources.
* mkoctfile.1: Add .cp, .CPP, .cxx, and .c++ to the list of recognized
C++ source file suffixes.

diff --git a/doc/interpreter/mkoctfile.1 b/doc/interpreter/mkoctfile.1
--- a/doc/interpreter/mkoctfile.1
+++ b/doc/interpreter/mkoctfile.1
@@ -125,18 +125,22 @@ Print configuration variable \fIVAR\fP. 
 Echo commands as they are executed.
 .TP
 .B file
 Compile or link file.  Recognized file types are
 .RS
 .Vb
    .c    C source
    .cc   C++ source
+   .cp   C++ source
+   .cpp  C++ source
+   .CPP  C++ source
+   .cxx  C++ source
+   .c++  C++ source
    .C    C++ source
-   .cpp  C++ source
    .f    Fortran source (fixed form)
    .F    Fortran source (fixed form)
    .f90  Fortran source (free form)
    .F90  Fortran source (free form)
    .o    object file
    .a    library file
 .Ve
 .RE
diff --git a/src/mkoctfile.in.cc b/src/mkoctfile.in.cc
--- a/src/mkoctfile.in.cc
+++ b/src/mkoctfile.in.cc
@@ -313,18 +313,22 @@ static std::string help_msg =
 "  -s, --strip             Strip output file.\n"
 "\n"
 "  -v, --verbose           Echo commands as they are executed.\n"
 "\n"
 "  FILE                    Compile or link FILE.  Recognized file types are:\n"
 "\n"
 "                            .c    C source\n"
 "                            .cc   C++ source\n"
+"                            .cp   C++ source\n"
+"                            .cpp  C++ source\n"
+"                            .CPP  C++ source\n"
+"                            .cxx  C++ source\n"
+"                            .c++  C++ source\n"
 "                            .C    C++ source\n"
-"                            .cpp  C++ source\n"
 "                            .f    Fortran source (fixed form)\n"
 "                            .F    Fortran source (fixed form)\n"
 "                            .f90  Fortran source (free form)\n"
 "                            .F90  Fortran source (free form)\n"
 "                            .o    object file\n"
 "                            .a    library file\n"
 #if defined (_MSC_VER)
 "                            .lib  library file\n"
@@ -429,18 +433,20 @@ main (int argc, char **argv)
     {
       std::string arg = argv[i];
 
       if (ends_with (arg, ".c"))
         {
           file = arg;
           cfiles.push_back (file);
         }
-      else if (ends_with (arg, ".cc") || ends_with (arg, ".C")
-               || ends_with (arg, ".cpp"))
+      else if (ends_with (arg, ".cc") || ends_with (arg, ".cp")
+               || ends_with (arg, ".cpp") || ends_with (arg, ".CPP")
+               || ends_with (arg, ".cxx") || ends_with (arg, ".c++")
+               || ends_with (arg, ".C"))
         {
           file = arg;
           ccfiles.push_back (file);
         }
       else if (ends_with (arg, ".f") || ends_with (arg, ".F")
                || ends_with (arg, "f90") || ends_with (arg, ".F90"))
         {
           file = arg;
@@ -634,17 +640,17 @@ main (int argc, char **argv)
           fo.close ();
         }
 
       for (it = ccfiles.begin (); it != ccfiles.end (); ++it)
         {
           std::string f = *it, dfile = basename (f, true) + ".d", line;
 
           octave_unlink_wrapper (dfile.c_str ());
-          std::string cmd = vars["CC"] + " "
+          std::string cmd = vars["CXX"] + " "
                             + vars["DEPEND_FLAGS"] + " "
                             + vars["CPPFLAGS"] + " "
                             + vars["ALL_CXXFLAGS"] + " "
                             + incflags  + " " + defs + " " + quote_path (f);
 
           FILE *fd = popen (cmd.c_str (), "r");
           std::ofstream fo (dfile.c_str ());
           size_t pos;
