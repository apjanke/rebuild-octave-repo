# HG changeset patch
# User Lachlan Andrew <lachlanbis@gmail.com>
# Date 1446437687 28800
#      Sun Nov 01 20:14:47 2015 -0800
# Branch stable
# Node ID 78b3e9868b67ba1e42e0cd2966960cce4d59f316
# Parent  77b104cad58e887ba95f4176989803bcab25b3d4
Fix segfault with 'dbclear all' (bug #41843).

* debug.cc (do_remove_all_breakpoints_in_file_1): Delete function.
* debug.cc (do_remove_all_breakpoints_in_file): Incorporate
do_remove_all_breakpoints_in_file_1 into function.  Don't do a loop
over all subfcns since remove_all_breakpoints(file) already does that.

diff --git a/libinterp/corefcn/debug.cc b/libinterp/corefcn/debug.cc
--- a/libinterp/corefcn/debug.cc
+++ b/libinterp/corefcn/debug.cc
@@ -469,66 +469,38 @@ bp_table::do_remove_breakpoint (const st
         error ("remove_breakpoint: unable to find the requested function\n");
     }
 
   tree_evaluator::debug_mode = bp_table::have_breakpoints () || Vdebugging;
 
   return retval;
 }
 
-bp_table::intmap
-bp_table::do_remove_all_breakpoints_in_file_1 (octave_user_code *fcn,
-                                               const std::string& fname)
-{
-  intmap retval;
-
-  std::string file = fcn->fcn_file_name ();
-
-  tree_statement_list *cmds = fcn->body ();
-
-  if (cmds)
-    {
-      retval = cmds->remove_all_breakpoints (file);
-
-      bp_set_iterator it = bp_set.find (fname);
-      if (it != bp_set.end ())
-        bp_set.erase (it);
-    }
-
-  return retval;
-}
-
+// Remove all breakpoints from a file, including those in subfunctions
 bp_table::intmap
 bp_table::do_remove_all_breakpoints_in_file (const std::string& fname,
                                              bool silent)
 {
   intmap retval;
 
   octave_user_code *dbg_fcn = get_user_code (fname);
 
   if (dbg_fcn)
     {
-      retval = do_remove_all_breakpoints_in_file_1 (dbg_fcn, fname);
-
-      // Order is not important here.
+      std::string file = dbg_fcn->fcn_file_name ();
 
-      typedef std::map<std::string, octave_value>::const_iterator
-        subfcns_const_iterator;
-
-      std::map<std::string, octave_value> subfcns = dbg_fcn->subfunctions ();
+      tree_statement_list *cmds = dbg_fcn->body ();
 
-      for (subfcns_const_iterator p = subfcns.begin ();
-           p != subfcns.end (); p++)
+      if (cmds)
         {
-          octave_user_code *dbg_subfcn = p->second.user_code_value ();
+          retval = cmds->remove_all_breakpoints (file);
 
-          intmap tmp = do_remove_all_breakpoints_in_file_1 (dbg_subfcn, fname);
-
-          // Merge new list with retval.
-          retval.insert (tmp.begin (), tmp.end ());
+          bp_set_iterator it = bp_set.find (fname);
+          if (it != bp_set.end ())
+            bp_set.erase (it);
         }
     }
   else if (! silent)
     error ("remove_all_breakpoint_in_file: "
            "unable to find the requested function\n");
 
   tree_evaluator::debug_mode = bp_table::have_breakpoints () || Vdebugging;
 
