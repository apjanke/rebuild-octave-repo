# HG changeset patch
# User Rik <rik@octave.org>
# Date 1513716375 28800
#      Tue Dec 19 12:46:15 2017 -0800
# Node ID 96a2281689861af0ddfed4255d0087f950b6cb91
# Parent  6cf385e26616b9e329b1300499a82c170607779c
cla.m: Overhaul function for greater Matlab compatibility.

* cla.m: Use more Tex features in docstring.  Use input variable "hax",
"do_reset" rather than varargin for clarity.  Reset "ColorOrderIndex",
"LineStyleOrderIndex" properties to 1.  Re-write BIST tests to test
new behavior.

diff --git a/scripts/plot/util/cla.m b/scripts/plot/util/cla.m
--- a/scripts/plot/util/cla.m
+++ b/scripts/plot/util/cla.m
@@ -16,63 +16,67 @@
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {} {} cla
 ## @deftypefnx {} {} cla reset
 ## @deftypefnx {} {} cla (@var{hax})
 ## @deftypefnx {} {} cla (@var{hax}, "reset")
-## Clear the current axes.
+## Clear the current or specified (@var{hax}) axes object.
 ##
 ## @code{cla} operates by deleting child graphic objects with visible
-## handles (HandleVisibility = @qcode{"on"}).
+## handles (@code{HandleVisibility} = @qcode{"on"}).  This typically clears the
+## axes of any visual objects, but leaves in place axes limits, tick marks and
+## labels, camera view, etc.  In addition, the automatic coloring and styling
+## of lines is reset by changing the axes properties @code{ColorOrderIndex},
+## @code{LinestyleOrderIndex} to 1.
 ##
 ## If the optional argument @qcode{"reset"} is specified, delete all child
-## objects including those with hidden handles and reset all axes properties
+## objects, including those with hidden handles, and reset all axes properties
 ## to their defaults.  However, the following properties are not reset:
-## Position, Units.
+## @code{Position}, @code{Units}.
 ##
 ## If the first argument @var{hax} is an axes handle, then operate on
 ## this axes rather than the current axes returned by @code{gca}.
 ## @seealso{clf, delete, reset}
 ## @end deftypefn
 
 ## Author: Ben Abbott <bpabbott@mac.com>
 ## Created: 2008-10-03
 
-function cla (varargin)
+function cla (hax, do_reset = false)
 
   if (nargin > 2)
     print_usage ();
-  elseif (nargin == 0)
+  endif
+
+  if (nargin == 0)
     hax = gca;
-    do_reset = false;
   elseif (nargin == 1)
-    if (isscalar (varargin{1}) && isaxes (varargin{1}))
-      hax = varargin{1};
-      do_reset = false;
-    elseif (ischar (varargin{1}) && strcmpi (varargin{1}, "reset"))
+    if (isscalar (hax) && isaxes (hax))
+      ## Normal case : cla (hax) without reset
+    elseif (ischar (hax) && strcmpi (hax, "reset"))
       hax = gca;
       do_reset = true;
     else
       print_usage ();
     endif
   else
-    if (isscalar (varargin{1}) && isaxes (varargin{1})
-        && ischar (varargin{2}) && strcmpi (varargin{2}, "reset"))
-      hax = varargin{1};
+    if (isscalar (hax) && isaxes (hax)
+        && ischar (do_reset) && strcmpi (do_reset, "reset"))
       do_reset = true;
     else
       print_usage ();
     endif
   endif
 
   if (! do_reset)
     delete (get (hax, "children"));
+    set (hax, "colororderindex", 1, "linestyleorderindex", 1);
   else
     delete (allchild (hax));
     reset (hax);
   endif
 
 endfunction
 
 
@@ -87,21 +91,28 @@ endfunction
 %!   close (hf);
 %! end_unwind_protect
 
 %!test
 %! hf = figure ("visible", "off");
 %! unwind_protect
 %!   hax = gca;
 %!   plot (hax, 1:10);
+%!   assert (get (hax, "colororderindex"), 2);
 %!   set (hax, "ticklabelinterpreter", "none");
 %!   cla (hax);
 %!   kids = get (hax, "children");
 %!   assert (numel (kids), 0);
+%!   assert (get (hax, "colororderindex"), 1);
 %!   assert (get (hax, "ticklabelinterpreter"), "none");
-%!   plot (hax, 1:10);
+%!
+%!   hp = plot (hax, 1:10, "handlevisibility", "off");
+%!   cla (hax);
+%!   assert (ishghandle (hp), true);
+%!
 %!   cla (hax, "reset");
 %!   kids = get (hax, "children");
 %!   assert (numel (kids), 0);
+%!   assert (ishghandle (hp), false);
 %!   assert (get (hax, "ticklabelinterpreter"), "tex");
 %! unwind_protect_cleanup
 %!   close (hf);
 %! end_unwind_protect
