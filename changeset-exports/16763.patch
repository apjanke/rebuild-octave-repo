# HG changeset patch
# User Stefan Mahr <dac922@gmx.de>
# Date 1371377239 -7200
#      Sun Jun 16 12:07:19 2013 +0200
# Node ID 70ea511edbc4e60d2df3ae0b7f2341e7e6fb7102
# Parent  42555422e326f2977f916f2780bb97d19653726e
strjoin.m: delimiter can include escape sequences (matlab compatibility)

diff --git a/scripts/strings/strjoin.m b/scripts/strings/strjoin.m
--- a/scripts/strings/strjoin.m
+++ b/scripts/strings/strjoin.m
@@ -22,21 +22,22 @@
 ## @deftypefnx {Function File} {@var{str} =} strjoin (@var{cstr}, @var{delimiter})
 ## Joins the elements of the cell-string array, @var{cstr}, into a single
 ## string.
 ##
 ## If no @var{delimiter} is specified, the elements of @var{cstr}
 ## seperated by a space.
 ##
 ## If @var{delimiter} is specified as a string, the cell-string array is
-## joined using the string.
+## joined using the string. Escape sequences are supported.
 ##
 ## If @var{delimiter} is a cell-string array whose length is one less
 ## than @var{cstr}, then the elemennts of @var{cstr} are joined by
-## interleaving the cell-string elements of @var{delimiter}.
+## interleaving the cell-string elements of @var{delimiter}. Escape
+## sequences are not supported.
 ##
 ## @example
 ## @group
 ## strjoin (@{'Octave','Scilab','Lush','Yorick'@}, '*')
 ##       @result{} 'Octave*Scilab*Lush*Yorick'
 ## @end group
 ## @end example
 ## @seealso {strsplit}
@@ -53,16 +54,17 @@ function rval = strjoin (cstr, delimiter
   endif
 
   if (numel (cstr) == 1)
     rval = cstr{1};
     return
   endif
 
   if (ischar (delimiter))
+    delimiter = do_string_escapes (delimiter);
     delimiter = {delimiter};
   end
  
   num = numel (cstr); 
   if (numel (delimiter) == 1 && num > 1)
     delimiter = repmat (delimiter, 1, num);
     delimiter(end) = {""};
   elseif (numel (delimiter) != num - 1)
@@ -77,8 +79,10 @@ function rval = strjoin (cstr, delimiter
 endfunction
 
 %!assert (strjoin ({"hello"}, "-"), "hello")
 %!assert (strjoin ({"hello", "world"}), "hello world")
 %!assert (strjoin ({"Octave", "Scilab", "Lush", "Yorick"}, "*"),
 %!  "Octave*Scilab*Lush*Yorick")
 %!assert (strjoin ({"space", "comma", "dash", "semicolon", "done"},
 %!  {" ", ",", "-", ";"}), "space comma,dash-semicolon;done")
+%!assert (strjoin ({'Octave','Scilab'},'\n'), "Octave\nScilab")
+%!assert (strjoin ({'Octave','Scilab'},{'\n'}), "Octave\\nScilab")
