# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1361912580 18000
#      Tue Feb 26 16:03:00 2013 -0500
# Node ID 053b0364b5070abd6942abd5a36a3b21d26f5988
# Parent  210039e91ad6d0a4b8c6004348307b906d0cca3c
localize use of yy_fatal_error with lexical_feedback member function

* lex.h, lex.ll (lexical_feedback::fatal_error): New function.
(YY_FATAL_ERROR): Use it.

diff --git a/libinterp/parse-tree/lex.h b/libinterp/parse-tree/lex.h
--- a/libinterp/parse-tree/lex.h
+++ b/libinterp/parse-tree/lex.h
@@ -286,16 +286,18 @@ public:
   void gripe_matlab_incompatible_operator (const std::string& op);
 
   void push_token (token *);
 
   token *current_token (void);
 
   void display_token (int tok);
 
+  void fatal_error (const char *msg);
+
   void lexer_debug (const char *pattern, const char *text);
 
   // TRUE means that we should convert spaces to a comma inside a
   // matrix definition.
   bool convert_spaces_to_comma;
 
   // GAG.  Stupid kludge so that [[1,2][3,4]] will work.
   bool do_comma_insert;
diff --git a/libinterp/parse-tree/lex.ll b/libinterp/parse-tree/lex.ll
--- a/libinterp/parse-tree/lex.ll
+++ b/libinterp/parse-tree/lex.ll
@@ -108,23 +108,17 @@ along with Octave; see the file COPYING.
 // Try to avoid crashing out completely on fatal scanner errors.
 // The call to yy_fatal_error should never happen, but it avoids a
 // 'static function defined but not used' warning from gcc.
 
 #ifdef YY_FATAL_ERROR
 #undef YY_FATAL_ERROR
 #endif
 #define YY_FATAL_ERROR(msg) \
-  do \
-    { \
-      error (msg); \
-      OCTAVE_QUIT; \
-      yy_fatal_error (msg); \
-    } \
-  while (0)
+  curr_lexer->fatal_error (msg)
 
 #define DISPLAY_TOK_AND_RETURN(tok) \
   do \
     { \
       int tok_val = tok; \
       if (Vdisplay_tokens) \
         curr_lexer->display_token (tok_val); \
       if (lexer_debug_flag) \
@@ -3704,16 +3698,26 @@ display_state (int state)
 
     default:
       std::cerr << "UNKNOWN START STATE!" << std::endl;
       break;
     }
 }
 
 void
+lexical_feedback::fatal_error (const char *msg)
+{
+  error (msg);
+
+  OCTAVE_QUIT;
+
+  yy_fatal_error (msg);
+}
+
+void
 lexical_feedback::lexer_debug (const char *pattern, const char *text)
 {
   std::cerr << std::endl;
 
   display_state (YY_START);
 
   std::cerr << "P: " << pattern << std::endl;
   std::cerr << "T: " << text << std::endl;
