# HG changeset patch
# User jwe
# Date 1189709355 0
#      Thu Sep 13 18:49:15 2007 +0000
# Node ID 5c9c49c51302f6ec8d220ae665055580b59c156b
# Parent  76e3d985ae5627b36e4513e66244894c4e698dd1
[project @ 2007-09-13 18:49:15 by jwe]

diff --git a/doc/interpreter/var.txi b/doc/interpreter/var.txi
--- a/doc/interpreter/var.txi
+++ b/doc/interpreter/var.txi
@@ -181,29 +181,29 @@ persistent a
 persistent a b
 persistent c = 2
 persistent d = 3 e f = 5
 @end group
 @end example
 
 The behavior of persistent variables is equivalent to the behavior of
 static variables in C. The command @code{static} in octave is also
-recognized and is equivalent to @code{persistent}. Unlike global
-variables, every initialization statement will re-initialize the
-variable. For example, after executing the following code
+recognized and is equivalent to @code{persistent}. Like global
+variables, a persistent variable may only be initialized once.
+For example, after executing the following code
 
 @example
 @group
 persistent pvar = 1
 persistent pvar = 2
 @end group
 @end example
 
 @noindent
-the value of the persistent variable @code{pvar} is 2.
+the value of the persistent variable @code{pvar} is 1, not 2.
 
 @node Status of Variables
 @section Status of Variables
 
 When creating simple one-shot programs it can be very convenient to
 see which variables are available at the prompt. The function @code{who}
 and its siblings @code{whos} and @code{whos_line_format} will show
 different information about what is in memory, as the following shows.
