# HG changeset patch
# User Torsten <ttl@justmail.de>
# Date 1393179504 -3600
#      Sun Feb 23 19:18:24 2014 +0100
# Branch gui-release
# Node ID 713193ffc8c4825f827a0007e769ee109460edc4
# Parent  ed670b8128e068ff4e633a9b61d9f38866ae0c02
allow to select mutliple files in the editors open file dialog (bug #41664)

* file-editor.cc (request_open_file (void)): allow to select multiple files
  in the open file dialog, connect filesSelected signal to new slot;
  (request_open_files): slot for the open file dialogs signal filesSelected

* file-editor.h: new slot request_open_files

diff --git a/libgui/src/m-editor/file-editor.cc b/libgui/src/m-editor/file-editor.cc
--- a/libgui/src/m-editor/file-editor.cc
+++ b/libgui/src/m-editor/file-editor.cc
@@ -206,20 +206,21 @@ file_editor::request_open_file (void)
 
   // Giving trouble under KDE (problem is related to Qt signal handling on unix,
   // see https://bugs.kde.org/show_bug.cgi?id=260719 ,
   // it had/has no effect on Windows, though)
   fileDialog->setOption(QFileDialog::DontUseNativeDialog, true);
 
   fileDialog->setAcceptMode (QFileDialog::AcceptOpen);
   fileDialog->setViewMode (QFileDialog::Detail);
+  fileDialog->setFileMode (QFileDialog::ExistingFiles);
   fileDialog->setDirectory (ced);
 
-  connect (fileDialog, SIGNAL (fileSelected (const QString&)),
-           this, SLOT (request_open_file (const QString&)));
+  connect (fileDialog, SIGNAL (filesSelected (const QStringList&)),
+           this, SLOT (request_open_files (const QStringList&)));
 
   fileDialog->setWindowModality (Qt::NonModal);
   fileDialog->setAttribute (Qt::WA_DeleteOnClose);
   fileDialog->show ();
 }
 
 // Check whether this file is already open in the editor.
 QWidget *
@@ -261,16 +262,23 @@ file_editor::call_custom_editor (const Q
 
       return true;
     }
 
   return false;
 }
 
 void
+file_editor::request_open_files (const QStringList& open_file_names)
+{
+  for (int i = 0; i < open_file_names.count (); i++)
+    request_open_file (open_file_names.at (i));
+}
+
+void
 file_editor::request_open_file (const QString& openFileName, int line,
                                 bool debug_pointer,
                                 bool breakpoint_marker, bool insert)
 {
   if (call_custom_editor (openFileName, line))
     return;   // custom editor called
 
   if (openFileName.isEmpty ())
diff --git a/libgui/src/m-editor/file-editor.h b/libgui/src/m-editor/file-editor.h
--- a/libgui/src/m-editor/file-editor.h
+++ b/libgui/src/m-editor/file-editor.h
@@ -180,16 +180,17 @@ public slots:
 
 
 protected slots:
   void copyClipboard ();
   void pasteClipboard ();
 
 private slots:
 
+  void request_open_files (const QStringList&);
   void request_open_file (const QString& fileName, int line = -1,
                           bool debug_pointer = false,
                           bool breakpoint_marker = false, bool insert = true);
   void request_preferences (bool);
   void request_styles_preferences (bool);
   void restore_create_file_setting ();
 
 private:
