# HG changeset patch
# User jwe
# Date 1014434599 0
#      Sat Feb 23 03:23:19 2002 +0000
# Node ID 24bf1bcbba8a374e7a8a6cc1145209f9c024cdbd
# Parent  da64ef591f18155bb7b1cfddb093d6cd5b7211d2
[project @ 2002-02-23 03:23:19 by jwe]

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,14 @@
+2002-02-22  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* oct-fftw.cc (octave_fftw::fft2d): Avoid having to find a
+	definition for NULL by passing 0 as the last arg to fftwnd_one.
+	(octave_fftw::ifft2d): Likewise.
+
 2002-02-22  Paul Kienzle <pkienzle@jazz.ncnr.nist.gov>
 
 	* lo-mappers.cc (arg): Simply call atan2 (0.0, x).
 
 2001-12-17  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* data-conv.cc (LS_DO_READ): Don't do anything unless len > 0.
 	(LS_DO_WRITE): Likewise.
diff --git a/liboctave/oct-fftw.cc b/liboctave/oct-fftw.cc
--- a/liboctave/oct-fftw.cc
+++ b/liboctave/oct-fftw.cc
@@ -149,27 +149,27 @@ octave_fftw::ifft (const Complex *in, Co
   return 0;
 }
 
 int
 octave_fftw::fft2d (Complex *inout, size_t nr, size_t nc)
 {
   fftwnd_one (fftw_planner.create_plan2d (FFTW_FORWARD, nr, nc),
               reinterpret_cast<fftw_complex *> (inout),
-              NULL);
+              0);
 
   return 0;
 }
 
 int
 octave_fftw::ifft2d (Complex *inout, size_t nr, size_t nc)
 {
   fftwnd_one (fftw_planner.create_plan2d (FFTW_BACKWARD, nr, nc),
               reinterpret_cast<fftw_complex *> (inout),
-              NULL);
+              0);
 
   const size_t npts = nr * nc;
   const Complex scale = npts;
   for (size_t i = 0; i < npts; i++)
     inout[i] /= scale;
 
   return 0;
 }
