# HG changeset patch
# User jwe
# Date 778960072 0
#      Wed Sep 07 17:47:52 1994 +0000
# Node ID 991303b21bae39bb35660fb0e971b95dcfdee538
# Parent  053fed68f70d6b835b7f65d6f2779450745d138f
[project @ 1994-09-07 17:47:52 by jwe]

diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -16,17 +16,17 @@ dnl Octave is distributed in the hope th
 dnl ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 dnl FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 dnl for more details.
 dnl 
 dnl You should have received a copy of the GNU General Public License
 dnl along with Octave; see the file COPYING.  If not, write to the Free
 dnl Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
 dnl
-AC_REVISION($Revision: 1.40 $)dnl
+AC_REVISION($Revision: 1.41 $)dnl
 AC_PREREQ(1.8)dnl
 AC_INIT(src/octave.cc)
 AC_CONFIG_HEADER(config.h)
 dnl
 AC_DEFINE(OCTAVE_SOURCE, 1)dnl
 dnl
 dnl See if we were given the target host type.  If not, use
 dnl config.guess to try to guess the target host type.
@@ -664,16 +664,36 @@ dnl UGLY_DEFS for that.
 dnl
 UGLY_DEFS="$DEFS"
 AC_VERBOSE([setting UGLY_DEFS to be $UGLY_DEFS])
 AC_SUBST(UGLY_DEFS)dnl
 dnl
 dnl Maybe add -Wall to compiler flags now that we're done feature
 dnl testing. 
 dnl
+dnl To get gcc and g++ to be really picky, try these adding these
+dnl options to CFLAGS and CXXFLAGS along with -Wall:
+dnl
+dnl   -ansi
+dnl   -pedantic
+dnl   -Wwrite-strings
+dnl   -Wid-clash-31
+dnl   -Wpointer-arith
+dnl   -Wcast-qual
+dnl   -Wenum-clash
+dnl   -Wcast-align
+dnl   -Wtraditional
+dnl   -Wstrict-prototypes
+dnl   -Wmissing-prototypes
+dnl   -Wnested-externs
+dnl   -Woverloaded-virtual
+dnl   -Winline
+dnl   -felide-constructors
+dnl   -fnonnull-objects
+dnl
 if $ADD_CXX_WALL; then
   CXXFLAGS="$CXXFLAGS -Wall"
   AC_VERBOSE([adding -Wall to CXXFLAGS])
 fi
 if $ADD_CC_WALL; then
   CFLAGS="$CFLAGS -Wall"
   AC_VERBOSE([adding -Wall to CFLAGS])
 fi
