# HG changeset patch
# User Ben Abbott  <bpabbott@mac.com>
# Date 1297257258 18000
#      Wed Feb 09 08:14:18 2011 -0500
# Branch release-3-4-x
# Node ID 54009686c6dc8760ccdd55aa74726ae09ac7c897
# Parent  9b3e17b892b4ba793162c216241ab05215e3574c
README.MacOS: Spelling corrections.

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,12 @@
+2011-02-09  Ben Abbott  <bpabbott@mac.com>
+
+	* README.MacOS: Spelling corrections.
+
 2011-02-08  Ben Abbott  <bpabbott@mac.com>
 
 	* README.MacOS: Fix FFTW CCFLAGS.
 
 2010-02-08  Rik  <octave@nomad.inbox5.com>
 
 	* NEWS: Use indentation of 2 spaces rather than 3 in code examples.
 
diff --git a/README.MacOS b/README.MacOS
--- a/README.MacOS
+++ b/README.MacOS
@@ -37,29 +37,29 @@ Building on MacOS can vary significantly
 instructions document the procedure for MacOS 10.6.X.
 
 
 2.1 Developer's Tools
 ---------------------
 
 Apple's Xcode Developer's Tools must be installed to build Octave on MacOS X.
 
-A fortran compilar is also required to build Octave.
+A fortran compiler is also required to build Octave.
 
 AT&T Research provides versions of gfortran which have been patched to work
 with gcc tool set bundled with Xcode.
 
   http://r.research.att.com/tools/
 
 Alternatively, the Fink and MacPorts package managers provide more recent
 versions of gcc which include gfortan. Those may be used to build the sources
 as well. However, care must be taken.
 
   * The same compiler must be used to build all all of Octave's sources. This
-    is necessary to to avoid conflicts between the compiler libraries such as
+    is necessary to avoid conflicts between the compiler libraries such as
     libstdc++. For a successful build the first file in LDFLAGS must refer to
     this library. For example, if building with gcc-4.5 obtained from MacPorts
     LDFLAGS would begin as,
 
       export LDFLAGS="/opt/local/lib/gcc45/libstdc++.6.dylib [...]"
 
   * As of MacOS 10.6.6, the 64bit BLAS routines that are part of Apple's vecLib
     (framework accelerate) are not functioning correctly.  As a work around, an
@@ -74,17 +74,17 @@ as well. However, care must be taken.
 
 2.2 Manual Package Management
 -----------------------------
 
 Instructions for building Octave are available on the web at the link below.
 
     http://wiki.octave.org/wiki.pl?BuildFromSource
 
-In additionn, those wishing to build on MacOS X (10.6.x) should read section
+In addition, those wishing to build on MacOS X (10.6.x) should read section
 2.1 above.
 
 2.2.1 Critical Dependencies
 ---------------------------
 
 The minimal dependencies needed to build Octave's snap-shots are listed below.
 
   * Xcode
@@ -135,59 +135,59 @@ The commands below are sufficient to bui
   export FC="/usr/bin/gfortran"
   export CFLAGS="-m32"
   export FFLAGS="$CFLAGS -ff2c"
   export CPPFLAGS="$CFLAGS -D_REENTRANT -D__LISTS__"
   export LDFLAGS="$CFLAGS"
   ./configure --disable-readline --disable-docs
   make
 
-Octave provides an interegrated tests suite.
+Octave provides an integrated tests suite.
 
   make check
 
-Octave may be run withou installing the application using the utility below.
+Octave may be run without installing the application using the utility below.
 
   ./run-octave
 
 2.2.3 Building Octave as a 64bit Application
 --------------------------------------------
 
 The commands below are sufficient to build a 64bit Octave.
 
   export FC="/usr/bin/gfortran"
   export CFLAGS="-arch x86_64"
   export FFLAGS="$CFLAGS"
   export CPPFLAGS="$CFLAGS -D_REENTRANT -D__LISTS__"
   export LDFLAGS="$CFLAGS"
   ./configure --disable-readline --disable-docs
   make
 
-Octave provides an interegrated tests suite.
+Octave provides an integrated tests suite.
 
   make check
 
-Octave may be run withou installing the application using the utility below.
+Octave may be run without installing the application using the utility below.
 
   ./run-octave
 
 
 2.3 Building With Dependencies Satisfied by Fink
 ------------------------------------------------
 
 To install and setup the Fink package manager see the on line documentation.
 
   http://www.finkproject.org/
 
 Currently, Fink does not have a package available for Octave versions above
 3.0.x. These instructions will allow the developers sources to be build and
 run, but will not permit Octave to be installed in the usual Fink way.
 
 TODO - When a Fink package is developed for Octave 3.4.x, modify these 
-       instructions to model the MacPorts secion.
+       instructions to model the MacPorts section.
 
 
 2.3.1 Dependencies
 ------------------
 
 To build Octave's sources the list of Fink packages below need to be installed.
 
   aquaterm
@@ -281,22 +281,22 @@ 2.4 Building With Dependencies Satisfied
 ----------------------------------------------------
 
 To install and setup the MacPorts package manager see the online documentation
 
     http://guide.macports.org/
 
 Using MacPorts, two approaches are described. The first describes how to build
 and locally install Octave from a formal snapshot of the developer's sources or
-from the developer's sources themselves. This is intended to the causual Octave
+from the developer's sources themselves. This is intended to the casual Octave
 developer, or for users who want to live on the bleeding edge.
 
 The second describes an approach for building Octave which is intended for
 active developers. In this case, MacPorts is used to satisfy Octave's
-dependencies, but MacPorts does not build Octave. Futher a direct install of
+dependencies, but MacPorts does not build Octave. Further a direct install of
 Octave is not possible (i.e. cannot "make install").
 
 
 2.4.1 Building and Installing Octave
 ------------------------------------
 
 With MacPorts building the developer's sources is convenient. MacPorts includes
 a port file for octave-devel. To build and run the most recent development
@@ -311,17 +311,17 @@ port file repository (link below).
 
     http://guide.macports.org/#development.local-repositories
 
 The octave-devel port file may be used as an initial starting point. The port
 file is accessible from the web at the link below.
 
     http://trac.macports.org/browser/trunk/dports/math/octave-devel/Portfile
 
-It is also available locally at the location below. The parametere ${prefix} is
+It is also available locally at the location below. The parameter ${prefix} is
 corresponds to where MacPorts is install, which by default is "/opt/local".
 
     ${prefix}/var/macports/sources/rsync.macports.org/release/ports/math/octave-devel/Portfile
 
 The local source tarball must be placed in the location below, where ${name}
 and ${distname} are each specified in the port file.
 
     ${prefix}/var/macports/distfiles/${name}/${disname}.tar.gz
@@ -349,17 +349,17 @@ This will remove Octave and leave its de
 built from the local mercurial archive by typing the commands below, where the
 configure options mentioned above are substituted for the parameter
 ${config_opts}. If the sources being built are from the mercurial archive, then
 ./autogen.sh must be run prior to ./configure.
 
     ./configure ${config_opts}
     make
 
-Octave's intergrated tests may be run.
+Octave's integrated tests may be run.
 
     make check
 
 However, "make install" should not be run as it may damage or corrupt the
 MacPorts installation. To run Octave, type the command below from the root of
 the mercurial archive.
 
     ./run-octave
