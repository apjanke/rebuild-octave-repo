# HG changeset patch
# User jwe
# Date 851034955 0
#      Thu Dec 19 22:35:55 1996 +0000
# Node ID c454cd888adace11eea02ac29b637cd9f935b009
# Parent  9705ea40f0a27afdaa5e6948008aeb0cd3a9bc47
[project @ 1996-12-19 22:35:54 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,13 @@
+Thu Dec 19 16:18:59 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* aclocal.m4 (OCTAVE_FLIBS): Only add -Xlinker args if compiler is
+	gcc.
+
 Sat Dec 14 09:46:50 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* README.Linux: New file.
 	* octMakefile.in: Distribute it.
 
 Fri Dec 13 22:37:49 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* configure.in (TERMLIBS): Look for termcap and terminfo after
diff --git a/README.Linux b/README.Linux
--- a/README.Linux
+++ b/README.Linux
@@ -95,25 +95,38 @@ the location of the specs file by runnin
 
 My system doesn't have g77
 --------------------------
 
 A binary release of g77 that should work with gcc 2.7.2 is available
 from sunsite.unc.edu in the directory /pub/Linux/devel/lang/fortran.
 There is also a Debian package for g77.
 
+Problems with g77 on Debian 1.2 systems (and possibly others)
+-------------------------------------------------------------
+
+The location of the compiler binaries has changed, so the g77 0.5.18
+package can not be used without modification.  The problem is that the
+Debian package was built for gcc 2.7.2 and not 2.7.2.1 and the f771
+backend is installed in the wrong directory.
+
+Version 0.5.19 of g77 has just been released.  A fixed Debian package
+may be made available soon.  Until then, you can make things work by
+copying f771 and libf2c.a from /usr/lib/gcc-lib/i486-linux/2.7.2 to
+/usr/lib/gcc-lib/i486-linux/2.7.2.1.
+
 Upgrading your compiler and libraries
 -------------------------------------
 
 Installing libg++ on a Linux system is not as simple as it should be,
 because libg++ shares some basic I/O code with the Linux C library,
 and they must be compatible.  You should get and read the release
 notes for the compiler and libraries.
 
 If you have comments or suggestions for this document, please contact
 bug-octave@bevo.che.wisc.edu.
 
 John W. Eaton
 jwe@bevo.che.wisc.edu
 University of Wisconsin-Madison
 Department of Chemical Engineering
 
-Tue Dec 17 13:24:52 1996
+Thu Dec 19 13:07:46 1996
diff --git a/aclocal.m4 b/aclocal.m4
--- a/aclocal.m4
+++ b/aclocal.m4
@@ -129,17 +129,21 @@ ld_run_path=`echo $foutput | \
   sed -n -e 's/.*\(LD_RUN_PATH *= *[^ ]*\).*/\1/p' | \
   sed -e 's/LD_RUN_PATH *= *//'`
 dnl
 dnl We are only supposed to find this on Solaris systems, and this
 dnl substitution is probably only going to work with gcc on those
 dnl systems...
 dnl
 if test -n "$ld_run_path"; then
-  ld_run_path="-Xlinker -R -Xlinker $ld_run_path"
+  if test "$ac_cv_prog_gcc" = yes; then
+    ld_run_path="-Xlinker -R -Xlinker $ld_run_path"
+  else
+    ld_run_path="-R $ld_run_path"
+  fi
 fi
 dnl
 flibs=
 lflags=
 dnl
 dnl If want_arg is set, we know we want the arg to be added to the list,
 dnl so we don't have to examine it.
 dnl
@@ -169,17 +173,21 @@ for arg in $foutput; do
 	  for f in $lflags; do
 	    if test x$arg = x$f; then
 	      exists=true
 	    fi
 	  done
 	  if $exists; then
 	    arg=
 	  else
-	    lflags="$lflags -Xlinker $arg"
+	    if test "$ac_cv_prog_gcc" = yes; then
+	      lflags="$lflags -Xlinker $arg"
+	    else
+	      lflags="$lflags $arg"
+	    fi
 	  fi
 	;;
 	-lang*)
 	  arg=
 	;;
 	-[lLR])
 	  want_arg=$arg
 	  arg=
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,16 @@
+Thu Dec 19 12:13:42 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* oct-stream.cc (octave_base_stream::do_scanf):
+	Don't treat %l{e,f,g} differently from %{e,f,g}.
+	(octave_base_stream::do_oscanf): Likewise.
+
+	* sighandlers.cc (sigchld_handler): Fix typos.
+
 Wed Dec 18 20:17:23 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* file-io.cc (Ffgetl, Ffgets): Also return number of characters	read.
 
 	* ov-range.cc (octave_range::not): New function.
 	* ov-range.h (octave_range::uminus): New function.
 
 	* BaseSLList.cc: Include error.h.
diff --git a/src/oct-stream.cc b/src/oct-stream.cc
--- a/src/oct-stream.cc
+++ b/src/oct-stream.cc
@@ -882,19 +882,21 @@ do_scanf_conv (istream& is, const char *
 	data[idx++] = *(valptr);
     }
 }
 
 template void
 do_scanf_conv (istream&, const char*, int*, Matrix&, double*, int&,
 	       int, int, bool);
 
+#if 0
 template void
 do_scanf_conv (istream&, const char*, float*, Matrix&, double*, int&,
 	       int, int, bool);
+#endif
 
 template void
 do_scanf_conv (istream&, const char*, double*, Matrix&, double*, int&,
 	       int, int, bool);
 
 
 octave_value
 octave_base_stream::do_scanf (scanf_format_list& fmt_list,
@@ -977,30 +979,20 @@ octave_base_stream::do_scanf (scanf_form
 
 		    do_scanf_conv (is, fmt, &tmp, mval, data, count,
 				   nr, max_size, discard);
 		  }
 		  break;
 
 		case 'e': case 'f': case 'g':
 		  {
-		    if (elt->modifier == 'l')
-		      {
-			double tmp;
-
-			do_scanf_conv (is, fmt, &tmp, mval, data,
-				       count, nr, max_size, discard); 
-		      }
-		    else
-		      {
-			float tmp;
-
-			do_scanf_conv (is, fmt, &tmp, mval, data,
-				       count, nr, max_size, discard); 
-		      }
+		    double tmp;
+
+		    do_scanf_conv (is, fmt, &tmp, mval, data, count,
+				   nr, max_size, discard);
 		  }
 		  break;
 
 		case 'c':
 		  is.unsetf (ios::skipws);
 		  // Fall through...
 
 		case 's':
@@ -1226,18 +1218,20 @@ do_oscanf_num_conv (istream& is, const c
     error ("fscanf: conversion failed");
 
   return retval;
 }
 
 template octave_value
 do_oscanf_num_conv (istream&, const char*, int*, bool);
 
+#if 0
 template octave_value
 do_oscanf_num_conv (istream&, const char*, float*, bool);
+#endif
 
 template octave_value
 do_oscanf_num_conv (istream&, const char*, double*, bool);
 
 static inline octave_value
 do_oscanf_str_conv (istream& is, const char *fmt, char *sptr,
 		    int maxlen, bool discard)
 {
@@ -1293,28 +1287,19 @@ octave_base_stream::do_oscanf (const sca
 		int tmp;
 
 		retval = do_oscanf_num_conv (is, fmt, &tmp, discard);
 	      }
 	      break;
 
 	    case 'e': case 'f': case 'g':
 	      {
-		if (elt->modifier == 'l')
-		  {
-		    double tmp;
-
-		    retval = do_oscanf_num_conv (is, fmt, &tmp, discard);
-		  }
-		else
-		  {
-		    float tmp;
-
-		    retval = do_oscanf_num_conv (is, fmt, &tmp, discard);
-		  }
+		double tmp;
+
+		retval = do_oscanf_num_conv (is, fmt, &tmp, discard);
 	      }
 	      break;
 
 	    case 'c':
 	      {
 		is.unsetf (ios::skipws);
 
 		int width = elt->width ? elt->width : 1;
diff --git a/src/sighandlers.cc b/src/sighandlers.cc
--- a/src/sighandlers.cc
+++ b/src/sighandlers.cc
@@ -189,17 +189,17 @@ generic_sig_handler (int sig)
 static RETSIGTYPE
 sigchld_handler (int /* sig */)
 {
 #if defined (__EMX__)
   volatile octave_interrupt_handler *saved_interrupt_handler
      = octave_ignore_interrupts ();
 
   volatile sig_handler *saved_sigchld_handler
-    = octave_set_sighanlder (SIGCHLD, SIG_IGN);
+    = octave_set_signal_hanlder (SIGCHLD, SIG_IGN);
 #endif
 
   int n = octave_child_list::length ();
 
   if (n == 0)
     {
       waitpid (-1, 0, WNOHANG);
     }
@@ -226,17 +226,17 @@ sigchld_handler (int /* sig */)
 
 		  break;
 		}
 	    }
 	}
     }
 
 #if defined (__EMX__)
-  octave_set_inerrupt_handler (saved_interrupt_handler);
+  octave_set_interrupt_handler (saved_interrupt_handler);
 
   octave_set_signal_handler (SIGCHLD, saved_sigchld_handler);
 #endif
 
   MAYBE_UNBLOCK_SIGNAL (SIGCHLD);
 
   MAYBE_REINSTALL_SIGHANDLER (SIGCHLD, sigchld_handler);
 
