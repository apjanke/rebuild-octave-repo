# HG changeset patch
# User jwe
# Date 1179260247 0
#      Tue May 15 20:17:27 2007 +0000
# Node ID 0d69a50fc5a9f02d7896c55f2dccd9149c599717
# Parent  545847da3b88e75ecad2c81d83b317bc8d3a4114
[project @ 2007-05-15 20:17:27 by jwe]

diff --git a/doc/interpreter/data.txi b/doc/interpreter/data.txi
--- a/doc/interpreter/data.txi
+++ b/doc/interpreter/data.txi
@@ -47,16 +47,17 @@ use of the following functions.
 
 @DOCSTRING(cast)
 
 @menu
 * Numeric Objects::             
 * Missing Data::                
 * String Objects::              
 * Data Structure Objects::      
+* Cell Array Objects::          
 @end menu
 
 @node Numeric Objects
 @subsection Numeric Objects
 @cindex numeric constant
 @cindex numeric value
 
 Octave's built-in numeric objects include real, complex, and integer
diff --git a/doc/interpreter/numbers.txi b/doc/interpreter/numbers.txi
--- a/doc/interpreter/numbers.txi
+++ b/doc/interpreter/numbers.txi
@@ -429,16 +429,20 @@ when converted.
 @DOCSTRING(int64)
 
 @DOCSTRING(uint64)
 
 @DOCSTRING(intmax)
 
 @DOCSTRING(intmin)
 
+@menu
+* Integer Arithmetic::
+@end menu
+
 @node Integer Arithmetic
 @subsection Integer Arithmetic
 
 While many numerical computations can't be carried out in integers,
 Octave does support basic operations like addition and multiplication
 on integers. The operators @code{+}, @code{-}, @code{.*}, and @code{./}
 works on integers of the same type. So, it is possible to add two 32 bit
 integers, but not to add a 32 bit integer and a 16 bit integer.
diff --git a/doc/interpreter/octave.texi b/doc/interpreter/octave.texi
--- a/doc/interpreter/octave.texi
+++ b/doc/interpreter/octave.texi
@@ -401,17 +401,16 @@ Linear Algebra
 * Functions of a Matrix::       
 
 Sparse Matrices
 
 * Basics::
 * Sparse Linear Algebra::
 * Iterative Techniques::
 * Real Life Example::
-* Function Reference::
 
 Quadrature
 
 * Functions of One Variable::   
 * Orthogonal Collocation::      
 
 Differential Equations
 
@@ -536,18 +535,18 @@ Installing Octave
 Emacs Octave Support
 
 * Installing EOS::              
 * Using Octave Mode::           
 * Running Octave From Within Emacs::  
 * Using the Emacs Info Reader for Octave::  
 
 @c Grammar
-
-* Keywords::                    
+@c 
+@c * Keywords::                    
 
 @end detailmenu
 @end menu
 
 @c ------------------------------------------------------------------------
 
 @include preface.texi
 @include intro.texi
diff --git a/doc/interpreter/strings.txi b/doc/interpreter/strings.txi
--- a/doc/interpreter/strings.txi
+++ b/doc/interpreter/strings.txi
@@ -116,18 +116,19 @@ For example, the expression
 [ "foo" , "bar" , "baz" ]
 @end example
 
 @noindent
 produces the string whose contents are @samp{foobarbaz}.  @xref{Numeric
 Data Types}, for more information about creating matrices.
 
 @menu
-* Creating Strings::            
-* Searching and Replacing::     
+* Creating Strings:: 
+* Comparing Strings::           
+* Manipulating Strings::     
 * String Conversions::          
 * Character Class Functions::   
 @end menu
 
 @node Creating Strings
 @section Creating Strings
 
 The easiest way to create a string is, as illustrated in the introduction,
