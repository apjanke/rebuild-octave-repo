# HG changeset patch
# User Carnë Draug <carandraug@octave.org>
# Date 1422916082 0
#      Mon Feb 02 22:28:02 2015 +0000
# Node ID b95aab49b6beb88f87b6a2532e3cbafd70930f67
# Parent  5b4fd7ebcfc6ea6dfa34abb18e1f134d3c43ed87
imformats: memory lock function to prevent "registry" of imageIO to be cleared

* image/imformats.m: imformats has a persistent variable that keeps a list of
supported formats with their respective reading and writing functions.
Packages are recommended to register new formats via calls to imformats().
To prevent reseting its state each time a user calls "clear all" we must lock
it to memory.

diff --git a/scripts/image/imformats.m b/scripts/image/imformats.m
--- a/scripts/image/imformats.m
+++ b/scripts/image/imformats.m
@@ -70,16 +70,17 @@
 
 ## Author: Carnë Draug <carandraug@octave.org>
 
 function varargout = imformats (arg1, arg2, arg3)
   if (nargin > 3)
     print_usage ();
   endif
 
+  mlock (); # prevent formats to be removed by "clear all"
   persistent formats = default_formats ();
 
   if (nargin == 0 && nargout == 0)
     error ("imformats: pretty print not yet implemented.");
   elseif (nargin >= 1)
     if (isstruct (arg1))
       arrayfun (@is_valid_format, arg1);
       ## FIXME: what is the return value in this situation?
