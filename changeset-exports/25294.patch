# HG changeset patch
# User Rik <rik@octave.org>
# Date 1524359506 25200
#      Sat Apr 21 18:11:46 2018 -0700
# Node ID 01ad54f997f5e37233fd3c3fa46d7434163b3bee
# Parent  affd44707573471b636cbfdfbfa0d398e1be6b59
Allow filenames which begin with a '.' to be returned from mfilename (bug #53707).

* oct-parse.in.yy (Fmfilename): Improve docstring.  Check that the position
of a '.' is not the first character before removing the "extension" from
the filename.

diff --git a/libinterp/parse-tree/oct-parse.in.yy b/libinterp/parse-tree/oct-parse.in.yy
--- a/libinterp/parse-tree/oct-parse.in.yy
+++ b/libinterp/parse-tree/oct-parse.in.yy
@@ -5087,23 +5087,26 @@ namespace octave
 
 DEFMETHOD (mfilename, interp, args, ,
            doc: /* -*- texinfo -*-
 @deftypefn  {} {} mfilename ()
 @deftypefnx {} {} mfilename ("fullpath")
 @deftypefnx {} {} mfilename ("fullpathext")
 Return the name of the currently executing file.
 
-When called from outside an m-file return the empty string.
+The base name of the currently executing script or function is returned without
+any extension.  If called from outside an m-file, such as the command line,
+return the empty string.
 
 Given the argument @qcode{"fullpath"}, include the directory part of the
 filename, but not the extension.
 
 Given the argument @qcode{"fullpathext"}, include the directory part of
 the filename and the extension.
+@seealso{inputname, dbstack}
 @end deftypefn */)
 {
   octave_value retval;
 
   int nargin = args.length ();
 
   if (nargin > 1)
     print_usage ();
@@ -5129,17 +5132,17 @@ the filename and the extension.
 
   if (arg == "fullpathext")
     retval = fname;
   else
     {
       size_t dpos = fname.rfind (octave::sys::file_ops::dir_sep_char ());
       size_t epos = fname.rfind ('.');
 
-      if (epos <= dpos)
+      if (epos <= dpos+1)
         epos = std::string::npos;
 
       fname = (epos != std::string::npos) ? fname.substr (0, epos) : fname;
 
       if (arg == "fullpath")
         retval = fname;
       else
         retval = (dpos != std::string::npos) ? fname.substr (dpos+1) : fname;
