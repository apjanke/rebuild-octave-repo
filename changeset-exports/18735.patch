# HG changeset patch
# User Pantxo Diribarne <pantxo.diribarne@gmail.com>
# Date 1398093435 -7200
#      Mon Apr 21 17:17:15 2014 +0200
# Node ID 28eab2d8419058ae3b4b8224dd3be79ea9c0d8fc
# Parent  adb948d7fae4a3ef4d3d5fe340e1bfb7b44d9b77
Add callbacks for root properties format and formatspacing (bug #42135).

* graphics.in.h (root format and formatspacing properties) define custom get and set methods
* graphics.in.h (root format property) replace allowed value "rationale" (not supported by Fformat) by "rat"
* pr-output.cc: new static variable format_string
* pr-output.cc (set_format_style): store the actual current format in format_string
* pr-output.cc (F__compactformat__): new defun to set/get the current Vcompactformat state
* pr-output.cc (F__formatstring__): new defun to set/get the current format string

diff --git a/libinterp/corefcn/graphics.in.h b/libinterp/corefcn/graphics.in.h
--- a/libinterp/corefcn/graphics.in.h
+++ b/libinterp/corefcn/graphics.in.h
@@ -40,16 +40,17 @@ along with Octave; see the file COPYING.
 
 #include "gripes.h"
 #include "oct-handle.h"
 #include "oct-map.h"
 #include "oct-mutex.h"
 #include "oct-refcount.h"
 #include "ov.h"
 #include "txt-eng-ft.h"
+#include "builtin-defun-decls.h"
 
 // FIXME: maybe this should be a configure option?
 // Matlab defaults to "Helvetica", but that causes problems for many
 // gnuplot users.
 #if !defined (OCTAVE_DEFAULT_FONTNAME)
 #define OCTAVE_DEFAULT_FONTNAME "*"
 #endif
 
@@ -3102,58 +3103,106 @@ public:
     void remove_child (const graphics_handle& h);
 
     Matrix get_boundingbox (bool internal = false,
                             const Matrix& parent_pix_size = Matrix ()) const;
 
     // See the genprops.awk script for an explanation of the
     // properties declarations.
 
-    // FIXME: it seems strange to me that the diary, diaryfile,
-    // echo, errormessage, format, formatspacing, language, and
-    // recursionlimit properties are here.
-    // WTF do they have to do with graphics?
-    // Also note that these properties (and the monitorpositions,
+    // FIXME: Matlab defines some root properties and uses them in
+    // the same way that Octave uses an internal static variable to
+    // keep track of state.  set (0, "echo", "on") is equivalent
+    // to Octave's echo ("on"). Properties that still dont have callbacks
+    // are : diary, diaryfileecho, errormessage, language, and recursionlimit.
+    // Note that these properties (and the monitorpositions,
     // pointerlocation, and pointerwindow properties) are not yet used
     // by Octave, so setting them will have no effect, and changes
     // made elswhere (say, the diary or format functions) will not
     // cause these properties to be updated.
-    // ANSWER: Matlab defines these properties and uses them in
-    // the same way that Octave uses an internal static variable to
-    // keep track of state.  set (0, "echo", "on") is equivalent
-    // to Octave's echo ("on").  Maybe someday we can connect callbacks
-    // that actually call Octave's own functions for this.
 
     // Programming note: Keep property list sorted if new ones are added.
 
     BEGIN_PROPERTIES (root_figure, root)
       handle_property callbackobject Sr , graphics_handle ()
       array_property commandwindowsize r , Matrix (1, 2, 0)
       handle_property currentfigure S , graphics_handle ()
       bool_property diary , "off"
       string_property diaryfile , "diary"
       bool_property echo , "off"
       string_property errormessage , ""
       string_property fixedwidthfontname , "Courier"
-      radio_property format , "+|bank|bit|hex|long|longe|longeng|longg|native-bit|native-hex|none|rational|{short}|shorte|shorteng|shortg"
-      radio_property formatspacing , "compact|{loose}"
+      radio_property format gs , "+|bank|bit|hex|long|longe|longeng|longg|native-bit|native-hex|none|rat|{short}|shorte|shorteng|shortg"
+      radio_property formatspacing gs , "compact|{loose}"
       string_property language , "ascii"
       array_property monitorpositions , Matrix (1, 4, 0)
       array_property pointerlocation , Matrix (1, 2, 0)
       double_property pointerwindow r , 0.0
       double_property recursionlimit , 256.0
       double_property screendepth r , default_screendepth ()
       double_property screenpixelsperinch r , default_screenpixelsperinch ()
       array_property screensize r , default_screensize ()
       bool_property showhiddenhandles , "off"
       radio_property units U , "inches|centimeters|normalized|points|{pixels}"
     END_PROPERTIES
 
   private:
     std::list<graphics_handle> cbo_stack;
+  
+    std::string get_formatspacing (void) const
+    {
+      bool iscompact = F__compactformat__ ()(0).bool_value ();
+      if (iscompact)
+        return std::string ("compact");
+      else
+        return std::string ("loose");
+    }
+
+    void set_formatspacing (const octave_value& val)
+    {
+      if (! error_state)
+        {
+          // Input checking and abrev. matching
+          formatspacing.set (val, false);
+          
+          if (! error_state)
+            {
+              std::string strval = formatspacing.current_value ();
+
+              if (strval == "compact")
+                F__compactformat__ (ovl (true));
+              else
+                F__compactformat__ (ovl (false));
+
+              formatspacing.run_listeners ();
+            }
+        }
+    }
+
+    std::string get_format (void) const
+    {
+      return F__formatstring__ ()(0).string_value ();
+    }
+
+    void set_format (const octave_value& val)
+    {
+      if (! error_state)
+        {
+          // Input checking and abrev. matching
+          format.set (val, false);
+          
+          if (! error_state)
+            {
+              Fformat (ovl (format.current_value ()));     
+
+              format.run_listeners ();
+            }
+        }
+    }
+
   };
 
 private:
   properties xproperties;
 
 public:
 
   root_figure (void)
diff --git a/libinterp/corefcn/pr-output.cc b/libinterp/corefcn/pr-output.cc
--- a/libinterp/corefcn/pr-output.cc
+++ b/libinterp/corefcn/pr-output.cc
@@ -3607,30 +3607,35 @@ init_format_state (void)
 
 static void
 set_output_prec_and_fw (int prec, int fw)
 {
   Voutput_precision =  prec;
   Voutput_max_field_width = fw;
 }
 
+static std::string format_string ("short");
+
 static void
 set_format_style (int argc, const string_vector& argv)
 {
   int idx = 1;
+  std::string format;
 
   if (--argc > 0)
     {
       std::string arg = argv[idx++];
+      format = arg;
 
       if (arg == "short")
         {
           if (--argc > 0)
             {
               arg = argv[idx++];
+              format.append (arg);
 
               if (arg == "e")
                 {
                   init_format_state ();
                   print_e = true;
                 }
               else if (arg == "E")
                 {
@@ -3698,16 +3703,17 @@ set_format_style (int argc, const string
           print_eng = true;
           set_output_prec_and_fw (5, 10);
         }
       else if (arg == "long")
         {
           if (--argc > 0)
             {
               arg = argv[idx++];
+              format.append (arg);
 
               if (arg == "e")
                 {
                   init_format_state ();
                   print_e = true;
                 }
               else if (arg == "E")
                 {
@@ -3795,16 +3801,17 @@ set_format_style (int argc, const string
           init_format_state ();
           bit_format = 2;
         }
       else if (arg == "+" || arg == "plus")
         {
           if (--argc > 0)
             {
               arg = argv[idx++];
+              format.append (arg);
 
               if (arg.length () == 3)
                 plus_format_chars = arg;
               else
                 {
                   error ("format: invalid option for plus format");
                   return;
                 }
@@ -3833,31 +3840,40 @@ set_format_style (int argc, const string
       else if (arg == "none")
         {
           init_format_state ();
           free_format = true;
         }
       else if (arg == "compact")
         {
           Vcompact_format = true;
+          return;
         }
       else if (arg == "loose")
         {
           Vcompact_format = false;
+          return;
         }
       else
-        error ("format: unrecognized format state '%s'", arg.c_str ());
+        {
+          error ("format: unrecognized format state '%s'", arg.c_str ());
+          return;
+        }  
     }
   else
     {
       init_format_state ();
       set_output_prec_and_fw (5, 10);
+      format = std::string ("short");
     }
+
+  format_string = format;
 }
 
+
 DEFUN (format, args, ,
        "-*- texinfo -*-\n\
 @deftypefn  {Command} {} format\n\
 @deftypefnx {Command} {} format options\n\
 Reset or specify the format of the output produced by @code{disp} and\n\
 Octave's normal echoing mechanism.  This command only affects the display\n\
 of numbers but not how they are stored or computed.  To change the internal\n\
 representation from the default double use one of the conversion functions\n\
@@ -4032,16 +4048,35 @@ to produce a more readable output with l
   if (error_state)
     return retval;
 
   set_format_style (argc, argv);
 
   return retval;
 }
 
+DEFUN (__compactformat__, args, nargout,
+       "-*- texinfo -*-\n\
+@deftypefn  {Built-in Function} {@var{val} =} __compactformat__ ()\n\
+@deftypefnx {Built-in Function} {} __compactformat__ (@var{TRUE|FALSE})\n\
+Undocumented internal function\n\
+@end deftypefn")
+{
+  return SET_INTERNAL_VARIABLE (compact_format);
+}
+
+DEFUN (__formatstring__, args, nargout,
+       "-*- texinfo -*-\n\
+@deftypefn  {Built-in Function} {@var{val} =} __formatstring__ ()\n\
+Undocumented internal function\n\
+@end deftypefn")
+{
+  return ovl (format_string);
+}
+
 DEFUN (fixed_point_format, args, nargout,
        "-*- texinfo -*-\n\
 @deftypefn  {Built-in Function} {@var{val} =} fixed_point_format ()\n\
 @deftypefnx {Built-in Function} {@var{old_val} =} fixed_point_format (@var{new_val})\n\
 @deftypefnx {Built-in Function} {} fixed_point_format (@var{new_val}, \"local\")\n\
 Query or set the internal variable that controls whether Octave will\n\
 use a scaled format to print matrix values.\n\
 \n\
