# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1481649296 18000
#      Tue Dec 13 12:14:56 2016 -0500
# Branch stable
# Node ID e3fde9f1d47e9e3d7f48e89c76c7f43a80a545b0
# Parent  b3f5fe7e6f756efa97ed09dd4eabae4cb91eb1b3
allow configure test to succeed without implicit fcn decls (bug #49782)

* acinclude.m4 (OCTAVE_CHECK_SIZEOF_FORTRAN_INT): Provide declaration
for test fucntion so that compilation will succeed with
-Werror=implicit-function-declaration.  From Orion Poplawski.

diff --git a/m4/acinclude.m4 b/m4/acinclude.m4
--- a/m4/acinclude.m4
+++ b/m4/acinclude.m4
@@ -1641,22 +1641,23 @@ AC_DEFUN([OCTAVE_CHECK_SIZEOF_FORTRAN_IN
       ]],
       [mv conftest.$ac_objext fintsize.$ac_objext
       ac_octave_save_LIBS="$LIBS"
       LIBS="fintsize.$ac_objext $[]_AC_LANG_PREFIX[]LIBS"
       AC_LANG_PUSH(C)
       AC_RUN_IFELSE([AC_LANG_PROGRAM([[
           #include <assert.h>
           #include <stdint.h>
-          ]], [[
           #if defined (OCTAVE_ENABLE_64)
             typedef int64_t octave_idx_type;
           #else
             typedef int octave_idx_type;
           #endif
+          void F77_FUNC(foo,FOO) (octave_idx_type*, octave_idx_type**, octave_idx_type**);
+          ]], [[
           octave_idx_type n = 2;
           octave_idx_type in[2];
           octave_idx_type out[2];
           in[0] = 13;
           in[0] = 42;
           F77_FUNC(foo,FOO) (&n, &in, &out);
           assert (in[0] == out[0] && in[1] == out[1]);
         ]])],
