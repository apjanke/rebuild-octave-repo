# HG changeset patch
# User Michael Goffioul <michael.goffioul@gmail.com>
# Date 1391187724 18000
#      Fri Jan 31 12:02:04 2014 -0500
# Node ID 9154dc252f47a9fba5eb963140a0271f4556d38e
# Parent  bcd71a2531d3ae751022c16e684bf71270cdd862
Allow empty classdef or methods/properties/... blocks

* oct-parse.in.yy (rule classdef): Add variant without body.
(rule properties_block, rule methods_block, rule events_block,
rule rnum_block): Add empty variant.
(octave_base_parser::make_classdef): Handle case with NULL body.
(octave_base_parser::make_classdef_properties_block): Handle case with
NULL properties list.
(octave_base_parser::make_classdef_methods_block): Handle case with
NULL methods list.
(octave_base_parser::make_classdef_events_block): Handle case with NULL
events list.
(octave_base_parser::make_classdef_enum_block): Handle case with NULL
enum list.

diff --git a/libinterp/parse-tree/oct-parse.in.yy b/libinterp/parse-tree/oct-parse.in.yy
--- a/libinterp/parse-tree/oct-parse.in.yy
+++ b/libinterp/parse-tree/oct-parse.in.yy
@@ -1503,16 +1503,26 @@ classdef        : classdef_beg stash_com
                     lexer.parsing_classdef = false;
 
                     if (! ($$ = parser.make_classdef ($1, $3, $4, $5, $7, $9, $2)))
                       {
                         // make_classdef deleted $3, $4, $5, and $7.
                         ABORT_PARSE;
                       }
                   }
+                | classdef_beg stash_comment opt_attr_list identifier opt_superclass_list opt_sep END
+                  {
+                    lexer.parsing_classdef = false;
+
+                    if (! ($$ = parser.make_classdef ($1, $3, $4, $5, 0, $7, $2)))
+                      {
+                        // make_classdef deleted $3, $4, and $5.
+                        ABORT_PARSE;
+                      }
+                  }
                 ;
 
 opt_attr_list   : // empty
                   { $$ = 0; }
                 | '(' attr_list ')'
                   { $$ = $2; }
                 ;
 
@@ -1593,16 +1603,25 @@ properties_block
                   {
                     if (! ($$ = parser.make_classdef_properties_block
                            ($1, $3, $5, $7, $2)))
                       {
                         // make_classdef_properties_block delete $3 and $5.
                         ABORT_PARSE;
                       }
                   }
+                | PROPERTIES stash_comment opt_attr_list opt_sep END
+                  {
+                    if (! ($$ = parser.make_classdef_properties_block
+                           ($1, $3, 0, $5, $2)))
+                      {
+                        // make_classdef_properties_block delete $3.
+                        ABORT_PARSE;
+                      }
+                  }
                 ;
 
 property_list
                 : class_property
                   { $$ = new tree_classdef_property_list ($1); }
                 | property_list opt_sep class_property
                   {
                     $1->append ($3);
@@ -1623,16 +1642,26 @@ methods_block   : METHODS stash_comment 
                   {
                     if (! ($$ = parser.make_classdef_methods_block
                            ($1, $3, $5, $7, $2)))
                       {
                         // make_classdef_methods_block deleted $3 and $5.
                         ABORT_PARSE;
                       }
                   }
+                | METHODS stash_comment opt_attr_list opt_sep END
+                  {
+                    if (! ($$ = parser.make_classdef_methods_block
+                           ($1, $3, 0, $5, $2)))
+                      {
+                        // make_classdef_methods_block deleted $3.
+                        ABORT_PARSE;
+                      }
+                  }
+                ;
                 ;
 
 method_decl1    : identifier
                   {
                     if (! ($$ = parser.start_classdef_external_method ($1, 0)))
                       ABORT_PARSE;
                   }
                 | identifier param_list
@@ -1687,16 +1716,25 @@ events_block    : EVENTS stash_comment o
                   {
                     if (! ($$ = parser.make_classdef_events_block
                            ($1, $3, $5, $7, $2)))
                       {
                         // make_classdef_events_block deleted $3 and $5.
                         ABORT_PARSE;
                       }
                   }
+                | EVENTS stash_comment opt_attr_list opt_sep END
+                  {
+                    if (! ($$ = parser.make_classdef_events_block
+                           ($1, $3, 0, $5, $2)))
+                      {
+                        // make_classdef_events_block deleted $3.
+                        ABORT_PARSE;
+                      }
+                  }
                 ;
 
 events_list     : class_event
                   { $$ = new tree_classdef_events_list ($1); }
                 | events_list opt_sep class_event
                   {
                     $1->append ($3);
                     $$ = $1;
@@ -1711,16 +1749,25 @@ enum_block      : ENUMERATION stash_comm
                   {
                     if (! ($$ = parser.make_classdef_enum_block
                            ($1, $3, $5, $7, $2)))
                       {
                         // make_classdef_enum_block deleted $3 and $5.
                         ABORT_PARSE;
                       }
                   }
+                | ENUMERATION stash_comment opt_attr_list opt_sep END
+                  {
+                    if (! ($$ = parser.make_classdef_enum_block
+                           ($1, $3, 0, $5, $2)))
+                      {
+                        // make_classdef_enum_block deleted $3.
+                        ABORT_PARSE;
+                      }
+                  }
                 ;
 
 enum_list       : class_enum
                   { $$ = new tree_classdef_enum_list ($1); }
                 | enum_list opt_sep class_enum
                   {
                     $1->append ($3);
                     $$ = $1;
@@ -3129,16 +3176,19 @@ octave_base_parser::make_classdef (token
     bison_error ("invalid classdef definition, the class name must match the file name");
   else if (end_token_ok (end_tok, token::classdef_end))
     {
       octave_comment_list *tc = lexer.comment_buf.get_comment ();
 
       int l = tok_val->line ();
       int c = tok_val->column ();
 
+      if (! body)
+        body = new tree_classdef_body ();
+
       retval = new tree_classdef (a, id, sc, body, lc, tc,
                                   curr_package_name, l, c);
     }
 
   if (! retval)
     {
       delete a;
       delete id;
@@ -3160,16 +3210,19 @@ octave_base_parser::make_classdef_proper
 
   if (end_token_ok (end_tok, token::properties_end))
     {
       octave_comment_list *tc = lexer.comment_buf.get_comment ();
 
       int l = tok_val->line ();
       int c = tok_val->column ();
 
+      if (! plist)
+        plist = new tree_classdef_property_list ();
+
       retval = new tree_classdef_properties_block (a, plist, lc, tc, l, c);
     }
   else
     {
       delete a;
       delete plist;
     }
 
@@ -3187,16 +3240,19 @@ octave_base_parser::make_classdef_method
 
   if (end_token_ok (end_tok, token::methods_end))
     {
       octave_comment_list *tc = lexer.comment_buf.get_comment ();
 
       int l = tok_val->line ();
       int c = tok_val->column ();
 
+      if (! mlist)
+        mlist = new tree_classdef_methods_list ();
+
       retval = new tree_classdef_methods_block (a, mlist, lc, tc, l, c);
     }
   else
     {
       delete a;
       delete mlist;
     }
 
@@ -3214,16 +3270,19 @@ octave_base_parser::make_classdef_events
 
   if (end_token_ok (end_tok, token::events_end))
     {
       octave_comment_list *tc = lexer.comment_buf.get_comment ();
 
       int l = tok_val->line ();
       int c = tok_val->column ();
 
+      if (! elist)
+        elist = new tree_classdef_events_list ();
+
       retval = new tree_classdef_events_block (a, elist, lc, tc, l, c);
     }
   else
     {
       delete a;
       delete elist;
     }
 
@@ -3241,16 +3300,19 @@ octave_base_parser::make_classdef_enum_b
 
   if (end_token_ok (end_tok, token::enumeration_end))
     {
       octave_comment_list *tc = lexer.comment_buf.get_comment ();
 
       int l = tok_val->line ();
       int c = tok_val->column ();
 
+      if (! elist)
+        elist = new tree_classdef_enum_list ();
+
       retval = new tree_classdef_enum_block (a, elist, lc, tc, l, c);
     }
   else
     {
       delete a;
       delete elist;
     }
 
