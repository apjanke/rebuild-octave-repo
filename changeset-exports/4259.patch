# HG changeset patch
# User jwe
# Date 1041528615 0
#      Thu Jan 02 17:30:15 2003 +0000
# Node ID 0493a367de6fef308f4be069baa431ac93950d55
# Parent  b8a4496d7b24ff072e4cc4597129c3ebef80a947
[project @ 2003-01-02 17:30:14 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,18 @@
+2003-01-02  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* plot/__plt2vv__.m: Call undo_string_escapes on fmt arg before eval.
+	* plot/__plt2vm__.m: Likewise.
+	* plot/__plt2ss__.m: Likewise.
+	* plot/__plt2mv__.m: Likewise.
+	* plot/__plt2mm__.m: Likewise.
+	* plot/__errplot__.m: Likewise.
+	* plot/__errcomm__.m: Likewise, for fmt arg passed in by user.
+
 2003-01-01  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* strings/strcmp.m: Handle cell arrays of strings.
 
 2002-12-18  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* general/int2str.m: Handle matrices.
 	* general/num2str.m: Likewise.
diff --git a/scripts/plot/__errcomm__.m b/scripts/plot/__errcomm__.m
--- a/scripts/plot/__errcomm__.m
+++ b/scripts/plot/__errcomm__.m
@@ -55,17 +55,17 @@ function __errcomm__ (caller, varargin)
       endif
       sz = size (a);
       ndata = 1;
       arg1 = a;
       while (nargin)
 	nargin--;
 	a = varargin{k++};
 	if (isstr (a))
-	  fmt = a;
+	  fmt = undo_string_escapes (a);
 	  cmd = "__errplot__ (arg1";
 	  for i = 2:ndata,
 	    cmd = sprintf ("%s, arg%d", cmd, i);
 	  endfor
 	  eval (sprintf ("%s, fmt);", cmd));
 	  break;
 	elseif (isvector (a))
 	  a = a(:);
diff --git a/scripts/plot/__errplot__.m b/scripts/plot/__errplot__.m
--- a/scripts/plot/__errplot__.m
+++ b/scripts/plot/__errplot__.m
@@ -56,56 +56,61 @@ function __errplot__ (varargin)
   fmt = __pltopt__ ("__errplot__", fstr);
 
   nplots = size (arg1, 2);
   len = size (arg1, 1);
 
   if (ndata == 2)
     for i = 1:nplots,
       tmp = [(1:len)', arg1(:,i), arg2(:,i)];
-      cmd = sprintf ("gplot tmp %s", fmt(min(i, rows(fmt)), :) );
+      cmd = sprintf ("gplot tmp %s",
+		     undo_string_escapes (fmt(min(i, rows(fmt)), :)));
       eval (cmd);
     endfor
   elseif (ndata == 3)
     for i = 1:nplots,
       tstr = "tmp =[arg1(:,i)";
       for j = 2:ndata,
        tstr = [tstr, sprintf(", arg%d(:,i)", j)];
       endfor
       tstr = [tstr, "];"];
       eval (tstr);
-      cmd = sprintf ("gplot tmp %s", fmt(min(i, rows(fmt)), :) );
+      cmd = sprintf ("gplot tmp %s",
+		     undo_string_escapes (fmt(min(i, rows(fmt)), :)));
       eval (cmd);
     endfor
   elseif (ndata == 4)
     for i = 1:nplots, # this is getting ugly
       if (index (fmt, "boxxy") || index (fmt, "xyerr"))
        tstr = "tmp = [arg1(:,i), arg2(:,i), arg3(:,i), arg4(:,i)];";
       elseif (index (fmt, "xerr"))
        tstr = "tmp = [arg1(:,i), arg2(:,i), arg1(:,i)-arg3(:,i), arg1(:,i)+arg4(:,i)];";
       else
        tstr = "tmp = [arg1(:,i), arg2(:,i), arg2(:,i)-arg3(:,i), arg2(:,i)+arg4(:,i)];";
       endif
       eval (tstr);
-      cmd = sprintf ("gplot tmp %s", fmt(min(i, rows(fmt)), :) );
+      cmd = sprintf ("gplot tmp %s",
+		     undo_string_escapes (fmt(min(i, rows(fmt)), :)));
       eval (cmd);
     endfor
   elseif (ndata == 6)
     for i = 1:nplots,
       tstr = "tmp = [arg1(:,i), arg2(:,i), arg1(:,i)-arg3(:,i), arg1(:,i)+arg4(:,i), arg2(:,i)-arg5(:,i), arg2(:,i)+arg6(:,i)];";
       eval (tstr);
-      cmd = sprintf ("gplot tmp %s", fmt(min(i, rows(fmt)), :) );
+      cmd = sprintf ("gplot tmp %s",
+		     undo_string_escapes (fmt(min(i, rows(fmt)), :)));
       eval (cmd);
     endfor
   else
     for i = 1:nplots,
       tstr = "tmp = [arg1(:,i)";
       for j = 2:ndata,
        tstr = [tstr, sprintf(", arg%d(:,i)", j)];
       endfor
       tstr = [tstr, "];"];
       eval (tstr);
-      cmd = sprintf ("gplot tmp %s", fmt(min(i, rows(fmt)), :) );
+      cmd = sprintf ("gplot tmp %s",
+		     undo_string_escapes (fmt(min(i, rows(fmt)), :)));
       eval (cmd);
     endfor
   endif
 
 endfunction
diff --git a/scripts/plot/__plt2mm__.m b/scripts/plot/__plt2mm__.m
--- a/scripts/plot/__plt2mm__.m
+++ b/scripts/plot/__plt2mm__.m
@@ -37,23 +37,23 @@ function __plt2mm__ (x, y, fmt)
   [y_nr, y_nc] = size (y);
 
   k = 1;
   fmt_nr = rows (fmt);
   if (x_nr == y_nr && x_nc == y_nc)
     if (x_nc > 0)
       tmp = [x, y];
       cmd = sprintf ("gplot tmp(:,%d:%d:%d) %s", 1, x_nc, x_nc+1,
-                     deblank (fmt (k, :)));
+                     undo_string_escapes (deblank (fmt (k, :))));
       if (k < fmt_nr)
         k++;
       endif
       for i = 2:x_nc
         cmd = sprintf ("%s, tmp(:,%d:%d:%d) %s", cmd, i, x_nc, x_nc+i,
-                       deblank (fmt (k, :)));
+                       undo_string_escapes (deblank (fmt (k, :))));
         if (k < fmt_nr)
           k++;
         endif
       endfor
       eval (cmd);
     else
       error ("__plt2mm__: arguments must be a matrices");
     endif
diff --git a/scripts/plot/__plt2mv__.m b/scripts/plot/__plt2mv__.m
--- a/scripts/plot/__plt2mv__.m
+++ b/scripts/plot/__plt2mv__.m
@@ -54,23 +54,23 @@ function __plt2mv__ (x, y, fmt)
     error ("__plt2mv__: matrix dimensions must match");
   endif
 
   k = 1;
   fmt_nr = rows (fmt);
   if (x_nc > 0)
     tmp = [x, y];
     cmd = sprintf ("gplot tmp(:,%d:%d:%d) %s", 1, x_nc, x_nc+1,
-                   deblank (fmt (k, :)));
+                   undo_string_escapes (deblank (fmt (k, :))));
     if (k < fmt_nr)
       k++;
     endif
     for i = 2:x_nc
       cmd = sprintf ("%s, tmp(:,%d:%d:%d) %s", cmd, i, x_nc-i+1, x_nc+1,
-                     deblank (fmt (k, :)));
+                     undo_string_escapes (deblank (fmt (k, :))));
       if (k < fmt_nr)
         k++;
       endif
     endfor
     eval (cmd);
   else
     error ("__plt2mv__: arguments must be a matrices");
   endif
diff --git a/scripts/plot/__plt2ss__.m b/scripts/plot/__plt2ss__.m
--- a/scripts/plot/__plt2ss__.m
+++ b/scripts/plot/__plt2ss__.m
@@ -35,15 +35,15 @@ function __plt2ss__ (x, y, fmt)
     fmt = fmt (1, :);
   endif
 
   [x_nr, x_nc] = size (x);
   [y_nr, y_nc] = size (y);
 
   if (x_nr == 1 && x_nr == y_nr && x_nc == 1 && x_nc == y_nc)
     tmp = [x, y];
-    cmd = sprintf ("gplot tmp %s", fmt);
+    cmd = sprintf ("gplot tmp %s", undo_string_escapes (fmt));
     eval (cmd);
   else
     error ("__plt2ss__: arguments must be scalars");
   endif
 
 endfunction
diff --git a/scripts/plot/__plt2vm__.m b/scripts/plot/__plt2vm__.m
--- a/scripts/plot/__plt2vm__.m
+++ b/scripts/plot/__plt2vm__.m
@@ -54,23 +54,23 @@ function __plt2vm__ (x, y, fmt)
     error ("__plt2vm__: matrix dimensions must match");
   endif
 
   k = 1;
   fmt_nr = rows (fmt);
   if (y_nc > 0)
     tmp = [x, y];
     cmd = sprintf ("gplot tmp(:,%d:%d:%d) %s", 1, x_nc, x_nc+1,
-                   deblank (fmt (k, :)));
+                   undo_string_escapes (deblank (fmt (k, :))));
     if (k < fmt_nr)
       k++;
     endif
     for i = 2:y_nc
       cmd = sprintf ("%s, tmp(:,%d:%d:%d) %s", cmd, 1, i, i+1,
-                     deblank (fmt (k, :)));
+                     undo_string_escapes (deblank (fmt (k, :))));
       if (k < fmt_nr)
         k++;
       endif
     endfor
     eval (cmd);
   else
     error ("__plt2vm__: arguments must be a matrices");
   endif
diff --git a/scripts/plot/__plt2vv__.m b/scripts/plot/__plt2vv__.m
--- a/scripts/plot/__plt2vv__.m
+++ b/scripts/plot/__plt2vv__.m
@@ -52,12 +52,12 @@ function __plt2vv__ (x, y, fmt)
     y_nc = tmp;
   endif
 
   if (x_nr != y_nr)
     error ("__plt2vv__: vector lengths must match");
   endif
 
   tmp = [x, y];
-  cmd = sprintf ("gplot tmp %s", fmt);
+  cmd = sprintf ("gplot tmp %s", undo_string_escapes (fmt));
   eval (cmd);
 
 endfunction
diff --git a/scripts/plot/axis.m b/scripts/plot/axis.m
--- a/scripts/plot/axis.m
+++ b/scripts/plot/axis.m
@@ -224,17 +224,17 @@ function curr_axis = axis (ax, varargin)
       endif
       if any (ax == "z")
 	gset format z;
       else
 	gset format z "\\0";
       endif
 
     else
-      warning (["unknown axis option '", ax, "'"]);
+      warning ("unknown axis option '%s'", ax);
     endif
 
   elseif (isvector (ax))
 
     len = length (ax);
 
     if (len != 2 && len != 4 && len != 6)
       error ("axis: expecting vector with 2, 4, or 6 elements");
