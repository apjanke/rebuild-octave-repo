# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1202877920 18000
#      Tue Feb 12 23:45:20 2008 -0500
# Node ID d7c5b101bb0f78fb12322f924d41e3941efebbc9
# Parent  8b22207ef9ca72a3be34f331da6aeb039d07f9aa
ilaenv --> xilaenv

diff --git a/libcruft/ChangeLog b/libcruft/ChangeLog
--- a/libcruft/ChangeLog
+++ b/libcruft/ChangeLog
@@ -1,11 +1,12 @@
 2008-02-12  John W. Eaton  <jwe@octave.org>
 
 	* lapack-xtra/xilaenv.f: New wrapper for Fortran function ilaenv.
+	* lapack-xtra/Makefile.in (FSRC): Add it to the list.
 
 2008-02-06  John W. Eaton  <jwe@octave.org>
 
 	* Makerules.in (%.def : %.f): Use mv instead of move-if-change.
 
 2008-02-05  John W. Eaton  <jwe@octave.org>
 
 	* misc/Makefile.in: Unconditionally include $(MAKEDEPS).
diff --git a/libcruft/lapack-xtra/Makefile.in b/libcruft/lapack-xtra/Makefile.in
--- a/libcruft/lapack-xtra/Makefile.in
+++ b/libcruft/lapack-xtra/Makefile.in
@@ -21,13 +21,13 @@
 TOPDIR = ../..
 
 srcdir = @srcdir@
 top_srcdir = @top_srcdir@
 VPATH = @srcdir@
 
 EXTERNAL_DISTFILES = $(DISTFILES)
 
-FSRC = xdlamch.f xdlange.f xzlange.f
+FSRC = xdlamch.f xdlange.f xilaenv.f xzlange.f
 
 include $(TOPDIR)/Makeconf
 
 include ../Makerules
diff --git a/liboctave/CMatrix.cc b/liboctave/CMatrix.cc
--- a/liboctave/CMatrix.cc
+++ b/liboctave/CMatrix.cc
@@ -62,19 +62,19 @@ along with Octave; see the file COPYING.
 // Fortran functions we call.
 
 extern "C"
 {
   F77_RET_T
   F77_FUNC (xilaenv, XILAENV) (const octave_idx_type&, F77_CONST_CHAR_ARG_DECL,
 			       F77_CONST_CHAR_ARG_DECL,
 			       const octave_idx_type&, const octave_idx_type&,
-			       const octave_idx_type&, const octave_idx_type&
-			       F77_CHAR_ARG_LEN_DECL F77_CHAR_ARG_LEN_DECL,
-			       octave_idx_type&);
+			       const octave_idx_type&, const octave_idx_type&,
+			       octave_idx_type&
+			       F77_CHAR_ARG_LEN_DECL F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (zgebal, ZGEBAL) (F77_CONST_CHAR_ARG_DECL,
 			     const octave_idx_type&, Complex*, const octave_idx_type&, octave_idx_type&,
 			     octave_idx_type&, double*, octave_idx_type&
 			     F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
@@ -2498,19 +2498,19 @@ ComplexMatrix::lssolve (const ComplexMat
       // Ask ZGELSD what the dimension of WORK should be.
       octave_idx_type lwork = -1;
 
       Array<Complex> work (1);
 
       octave_idx_type smlsiz;
       F77_FUNC (xilaenv, XILAENV) (9, F77_CONST_CHAR_ARG2 ("ZGELSD", 6),
 				   F77_CONST_CHAR_ARG2 (" ", 1),
-				   0, 0, 0, 0
+				   0, 0, 0, 0, smlsiz
 				   F77_CHAR_ARG_LEN (6)
-				   F77_CHAR_ARG_LEN (1), smlsiz);
+				   F77_CHAR_ARG_LEN (1));
 
       // We compute the size of rwork and iwork because ZGELSD in
       // older versions of LAPACK does not return them on a query
       // call.
       double dminmn = static_cast<double> (minmn);
       double dsmlsizp1 = static_cast<double> (smlsiz+1);
 #if defined (HAVE_LOG2)
       double tmp = log2 (dminmn) / dsmlsizp1 + 1;
diff --git a/liboctave/dMatrix.cc b/liboctave/dMatrix.cc
--- a/liboctave/dMatrix.cc
+++ b/liboctave/dMatrix.cc
@@ -54,23 +54,23 @@ along with Octave; see the file COPYING.
 #if defined (HAVE_FFTW3)
 #include "oct-fftw.h"
 #endif
 
 // Fortran functions we call.
 
 extern "C"
 {
-  octave_idx_type
+  F77_RET_T
   F77_FUNC (xilaenv, XILAENV) (const octave_idx_type&, F77_CONST_CHAR_ARG_DECL,
 			       F77_CONST_CHAR_ARG_DECL,
 			       const octave_idx_type&, const octave_idx_type&,
-			       const octave_idx_type&, const octave_idx_type&
-			       F77_CHAR_ARG_LEN_DECL F77_CHAR_ARG_LEN_DECL,
-			       octave_idx_type&);
+			       const octave_idx_type&, const octave_idx_type&,
+			       octave_idx_type&
+			       F77_CHAR_ARG_LEN_DECL F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (dgebal, DGEBAL) (F77_CONST_CHAR_ARG_DECL,
 			     const octave_idx_type&, double*, const octave_idx_type&, octave_idx_type&,
 			     octave_idx_type&, double*, octave_idx_type&
 			     F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
@@ -2109,19 +2109,19 @@ Matrix::lssolve (const Matrix& b, octave
       // Ask DGELSD what the dimension of WORK should be.
       octave_idx_type lwork = -1;
 
       Array<double> work (1);
 
       octave_idx_type smlsiz;
       F77_FUNC (xilaenv, XILAENV) (9, F77_CONST_CHAR_ARG2 ("DGELSD", 6),
 				   F77_CONST_CHAR_ARG2 (" ", 1),
-				   0, 0, 0, 0
+				   0, 0, 0, 0, smlsiz
 				   F77_CHAR_ARG_LEN (6)
-				   F77_CHAR_ARG_LEN (1), smlsiz);
+				   F77_CHAR_ARG_LEN (1));
 
       // We compute the size of iwork because DGELSD in older versions
       // of LAPACK does not return it on a query call.
       double dminmn = static_cast<double> (minmn);
       double dsmlsizp1 = static_cast<double> (smlsiz+1);
 #if defined (HAVE_LOG2)
       double tmp = log2 (dminmn / dsmlsizp1);
 #else
