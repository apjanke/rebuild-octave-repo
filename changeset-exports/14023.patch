# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1323646115 18000
#      Sun Dec 11 18:28:35 2011 -0500
# Node ID d51b321b5fef9470eae473989d83756ed8e73fec
# Parent  de90542b7afc6f987e9fec8a1e94998bbb1678a6
move base-list.h from src to liboctave

* liboctave/base-list.h: Move here from src/base-list.h.
* liboctave/Makefile.am (INCS): Include base-list.h in the list.
* src/Makefile.am (octinclude_HEADERS): Remove base-list.h in the list.

diff --git a/liboctave/Makefile.am b/liboctave/Makefile.am
--- a/liboctave/Makefile.am
+++ b/liboctave/Makefile.am
@@ -182,16 +182,17 @@ INCS = \
   ODE.h \
   ODEFunc.h \
   ODES.h \
   ODESFunc.h \
   Quad.h \
   Range.h \
   base-dae.h \
   base-de.h \
+  base-list.h \
   base-min.h \
   bsxfun.h \
   byte-swap.h \
   caseless-str.h \
   cmd-edit.h \
   cmd-hist.h \
   data-conv.h \
   dir-ops.h \
diff --git a/src/Makefile.am b/src/Makefile.am
--- a/src/Makefile.am
+++ b/src/Makefile.am
@@ -226,17 +226,16 @@ PT_INCLUDES = \
   pt-select.h \
   pt-stmt.h \
   pt-unop.h \
   pt-walk.h \
   pt.h
 
 octinclude_HEADERS = \
   Cell.h \
-  base-list.h \
   builtins.h \
   c-file-ptr-stream.h \
   comment-list.h \
   cutils.h \
   data.h \
   debug.h \
   defun-dld.h \
   defun-int.h \
diff --git a/src/base-list.h b/src/base-list.h
--- a/src/base-list.h
+++ b/src/base-list.h
@@ -31,17 +31,18 @@ octave_base_list
 {
 public:
 
   typedef typename std::list<elt_type>::iterator iterator;
   typedef typename std::list<elt_type>::const_iterator const_iterator;
 
   bool empty (void) const { return lst.empty (); }
 
-  size_t length (void) const { return lst.size (); }
+  size_t size (void) const { return lst.size (); }
+  size_t length (void) const { return size (); }
 
   iterator erase (iterator pos) { return lst.erase (pos); }
 
   template <class P>
   void remove_if (P pred)
   {
     // We would like to simply call
     //
@@ -85,16 +86,18 @@ public:
 
   // For backward compatibility.
   void append (const elt_type& s) { lst.push_back (s); }
 
 protected:
 
   octave_base_list (void) : lst () { }
 
+  octave_base_list (const std::list<elt_type>& l) : lst (l) { }
+
   octave_base_list (const octave_base_list& bl) : lst (bl.lst) { }
 
   octave_base_list& operator = (const octave_base_list& bl)
     {
       if (this != &bl)
         {
           lst = bl.lst;
         }
