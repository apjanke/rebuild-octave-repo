# HG changeset patch
# User Rik <rik@octave.org>
# Date 1544210179 28800
#      Fri Dec 07 11:16:19 2018 -0800
# Node ID 0a862644da84c234b04728864c393a5529742f41
# Parent  f2d795f07c8469e40596ae443d59b27a8e3c26fd
stemleaf.m: Put error statements first in input validation.

* stemleaf.m: Put error statements first in input validation.

diff --git a/scripts/plot/draw/stemleaf.m b/scripts/plot/draw/stemleaf.m
--- a/scripts/plot/draw/stemleaf.m
+++ b/scripts/plot/draw/stemleaf.m
@@ -150,22 +150,21 @@ function plotstr = stemleaf (x, caption,
 
   if (! ischar (caption))
     error ("stemleaf: CAPTION must be a character array");
   endif
 
   if (nargin == 2)
     stem_step = 10;
   else
-    if (isscalar (stem_sz) && stem_sz >= 0 && isreal (stem_sz))
-      stem_sz = fix (stem_sz);
-      stem_step = 10^(stem_sz+1);
-    else
+    if (! (isscalar (stem_sz) && stem_sz >= 0 && isreal (stem_sz)))
       error ("stemleaf: STEM_SZ must be a real integer >= 0");
     endif
+    stem_sz = fix (stem_sz);
+    stem_step = 10^(stem_sz+1);
   endif
 
   ## Note that IEEE 754 states that -+ 0 should compare equal.  This has
   ## led to C sort (and therefore Octave) treating them as equal.  Thus,
   ## sort([-1 0 -0 1]) yields [-1 0 -0 1], and sort([-1 -0 0 1])
   ## yields: [-1 -0 0 1].  This means that stem-and-leaf plotting cannot
   ## rely on sort to order the data as needed for display.
   ## This also applies to min()/max() so these routines can't be relied
@@ -241,17 +240,17 @@ function plotstr = stemleaf (x, caption,
     if (! signbit (max_x))
       stems = [stems, 0 : fix(max_x/stem_step)+1 ];
     endif
   endif
 
   ## Vectorized version provided by Rik Wehbring (rik@octave.org)
   ## Determine leaves for each stem:
   new_line = 1;
-  for kx = 2: numel (stems)
+  for kx = 2 : numel (stems)
 
     stem_sign = signbit (stems(kx));
     if (stems(kx) <= 0)
       idx = ((x <= stems(kx)*stem_step) & (x > (stems(kx-1)*stem_step))
               & (signbit (x) == stem_sign));
       xlf = abs (x(idx) - stems(kx)*stem_step);
     else
       idx = ((x < stems(kx)*stem_step) & (x >= (stems(kx-1)*stem_step))
