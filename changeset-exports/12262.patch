# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1296128272 18000
#      Thu Jan 27 06:37:52 2011 -0500
# Branch release-3-4-x
# Node ID b22c00315df567b16439ddc8bd794fe2e37df133
# Parent  1860ce6c30d0a701a8d3259b7af8b58855cadf2e
dlmread: skip leading whitespace on each line

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2011-01-27  John W. Eaton  <jwe@octave.org>
+
+	* DLD-FUNCTIONS/dlmread.cc (Fdlmread): Skip leading whitespace
+	on each line.
+
 2011-01-27  John W. Eaton  <jwe@octave.org>
 
 	* ov-struct.cc (octave_struct::subsasgn,
 	octave_scalar_struct::subsasgn): Call undef_subsasgn on object
 	returned by octave_value::empty_conv if LHS is initially undefined.
 	Bug #32242.
 
 2011-01-27  John W. Eaton  <jwe@octave.org>
diff --git a/src/DLD-FUNCTIONS/dlmread.cc b/src/DLD-FUNCTIONS/dlmread.cc
--- a/src/DLD-FUNCTIONS/dlmread.cc
+++ b/src/DLD-FUNCTIONS/dlmread.cc
@@ -337,18 +337,19 @@ fields.  The default is zero.\n\
                       sep = ch;
                       break;
                     }
                 }
             }
 
           if (cmax == 0)
             {
-              // Try to estimate the number of columns.
-              size_t pos1 = 0;
+              // Try to estimate the number of columns.  Skip leading
+              // whitespace.
+              size_t pos1 = line.find_first_not_of (" \t");
               do
                 {
                   size_t pos2 = line.find_first_of (sep, pos1);
 
                   if (sepflag && pos2 != std::string::npos)
                     // Treat consecutive separators as one.
                     {
                       pos2 = line.find_first_not_of (sep, pos2);
@@ -371,17 +372,18 @@ fields.  The default is zero.\n\
               if (iscmplx)
                 cdata.resize (rmax, cmax);
               else
                 rdata.resize (rmax, cmax);
             }
 
           r = (r > i + 1 ? r : i + 1);
           j = 0;
-          size_t pos1 = 0;
+          // Skip leading whitespace.
+          size_t pos1 = line.find_first_not_of (" \t");
           do
             {
               octave_quit ();
 
               size_t pos2 = line.find_first_of (sep, pos1);
               std::string str = line.substr (pos1, pos2 - pos1);
 
               if (sepflag && pos2 != std::string::npos)
