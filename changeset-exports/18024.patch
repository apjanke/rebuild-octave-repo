# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1385520677 18000
#      Tue Nov 26 21:51:17 2013 -0500
# Branch stable
# Node ID 989ff97a7e8c899d371130582f7b91827c23aed3
# Parent  4138a7f807798c25a0cd4b3ddc327d375b06a11a
provide warning about experimental GUI

* main-window.h, main-window.cc (main_window::construct_warning_bar):
New function.
(main_window::construct): Call it.

diff --git a/libgui/src/main-window.cc b/libgui/src/main-window.cc
--- a/libgui/src/main-window.cc
+++ b/libgui/src/main-window.cc
@@ -1145,16 +1145,18 @@ main_window::construct (void)
   dummyWidget->setSizePolicy (QSizePolicy::Minimum, QSizePolicy::Minimum);
   dummyWidget->hide ();
   setCentralWidget (dummyWidget);
 
   construct_menu_bar ();
 
   construct_tool_bar ();
 
+  construct_warning_bar ();
+
   connect (qApp, SIGNAL (aboutToQuit ()),
            this, SLOT (prepare_to_exit ()));
 
   connect (this, SIGNAL (settings_changed (const QSettings *)),
            this, SLOT (notice_settings (const QSettings *)));
 
   connect (file_browser_window, SIGNAL (load_file_signal (const QString&)),
            this, SLOT (handle_load_workspace_request (const QString&)));
@@ -1766,16 +1768,65 @@ main_window::construct_news_menu (QMenuB
   connect (release_notes_action, SIGNAL (triggered ()),
            this, SLOT (display_release_notes ()));
 
   connect (current_news_action, SIGNAL (triggered ()),
            this, SLOT (load_and_display_community_news ()));
 }
 
 void
+main_window::construct_warning_bar (void)
+{
+  QDockWidget *warning_bar = new QDockWidget (this);
+
+  QFrame *box = new QFrame (warning_bar);
+
+  QLabel *icon = new QLabel (box);
+  QIcon warning_icon = QIcon::fromTheme ("dialog-warning");
+  QPixmap icon_pixmap = warning_icon.pixmap (QSize (32, 32));
+  icon->setPixmap (icon_pixmap);
+
+  QTextBrowser *msg = new QTextBrowser (box);
+  msg->setOpenExternalLinks (true);
+  msg->setText
+    (tr ("<strong>You are using Octave's experimental GUI.</strong>  "
+         "It is under continuous improvement and will be the default "
+         "interface for the 4.0 release.  For more information, select "
+         "the \"Release Notes\" item in the \"Help\" menu of the GUI, "
+         "or visit <a href=\"http://octave.org\">http://octave.org</a>."));
+  msg->setStyleSheet ("background-color: #ffd97f; color: black; margin 4px;");
+  msg->setMinimumWidth (100);
+  msg->setMinimumHeight (48);
+  msg->setMaximumHeight (64);
+  msg->setSizePolicy (QSizePolicy (QSizePolicy::Expanding,
+                                   QSizePolicy::Minimum));
+
+  QHBoxLayout *icon_and_message = new QHBoxLayout;
+
+  icon_and_message->addWidget (icon);
+  icon_and_message->addSpacing (10);
+  icon_and_message->addWidget (msg);
+
+  box->setFrameStyle (QFrame::Box);
+  box->setLineWidth (2);
+  box->setMaximumWidth (1000);
+  box->adjustSize ();
+  box->setLayout (icon_and_message);
+
+  warning_bar->setFeatures (QDockWidget::NoDockWidgetFeatures);
+  warning_bar->setObjectName ("WarningToolBar");
+  warning_bar->setWidget (box);
+
+  addDockWidget (Qt::TopDockWidgetArea, warning_bar);
+
+  setCorner (Qt::TopLeftCorner, Qt::TopDockWidgetArea);
+  setCorner (Qt::TopRightCorner, Qt::TopDockWidgetArea);
+};
+
+void
 main_window::construct_tool_bar (void)
 {
   _main_tool_bar = addToolBar ("Main");
 
   _main_tool_bar->setObjectName ("MainToolBar");
   _main_tool_bar->addAction (_new_script_action);
   _main_tool_bar->addAction (_open_action);
 
diff --git a/libgui/src/main-window.h b/libgui/src/main-window.h
--- a/libgui/src/main-window.h
+++ b/libgui/src/main-window.h
@@ -217,16 +217,17 @@ private:
                                        bool checkable,
                                        const QKeySequence& key);
   void construct_window_menu (QMenuBar *p);
   void construct_help_menu (QMenuBar *p);
   void construct_documentation_menu (QMenu *p);
 
   void construct_news_menu (QMenuBar *p);
 
+  void construct_warning_bar (void);
   void construct_tool_bar (void);
 
   void establish_octave_link (void);
 
   void save_workspace_callback (const std::string& file);
 
   void load_workspace_callback (const std::string& file);
 
