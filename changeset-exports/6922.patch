# HG changeset patch
# User jwe
# Date 1190398707 0
#      Fri Sep 21 18:18:27 2007 +0000
# Node ID f806e2740216c0f1d3e1d47d82e173a0b30cdf24
# Parent  2ae5d4353d0b06cacdd4baeac3a12b0e0629b108
[project @ 2007-09-21 18:18:27 by jwe]

diff --git a/liboctave/Array.cc b/liboctave/Array.cc
--- a/liboctave/Array.cc
+++ b/liboctave/Array.cc
@@ -2489,24 +2489,19 @@ assign1 (Array<LT>& lhs, const Array<RT>
   octave_idx_type rhs_len = rhs.length ();
 
   octave_idx_type n = lhs_idx.freeze (lhs_len, "vector", true);
 
   if (n != 0)
     {
       dim_vector lhs_dims = lhs.dims ();
 
-      if (lhs_len == 0 && ! lhs_dims.all_zero ())
-	{
-	  (*current_liboctave_error_handler)
-	    ("A(I) = X: unable to resize A");
-
-	  retval = 0;
-	}
-      else
+      if (lhs_len != 0
+	  || lhs_dims.all_zero ()
+	  || (lhs_dims.length () == 2 && lhs_dims(0) < 2))
 	{
 	  if (rhs_len == n || rhs_len == 1)
 	    {
 	      lhs.make_unique ();
 
 	      octave_idx_type max_idx = lhs_idx.max () + 1;
 	      if (max_idx > lhs_len)
 		lhs.resize_and_fill (max_idx, rfv);
@@ -2553,16 +2548,23 @@ assign1 (Array<LT>& lhs, const Array<RT>
 	  else
 	    {
 	      (*current_liboctave_error_handler)
 		("A(I) = X: X must be a scalar or a vector with same length as I");
 
 	      retval = 0;
 	    }
 	}
+      else
+	{
+	  (*current_liboctave_error_handler)
+	    ("A(I) = X: unable to resize A");
+
+	  retval = 0;
+	}
     }
   else if (lhs_idx.is_colon ())
     {
       dim_vector lhs_dims = lhs.dims ();
 
       if (lhs_dims.all_zero ())
 	{
 	  lhs.make_unique ();
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+2007-09-21  John W. Eaton  <jwe@octave.org>
+
+	* Array.cc (assign1 (Array<LT>&, const Array<RT>&, const LT&)):
+	Also allow resizing empty LHS if it is 1x0 or 0xN.
+
 2007-09-19  John W. Eaton  <jwe@octave.org>
 
 	* cmd-edit.cc (command_editor::remove_startup_hook):
 	Fix cut-and-paste error.
 	(gnu_readline::set_startup_hook): Only set hook function if new
 	function is different from the current one.
 
 2007-09-18  John W. Eaton  <jwe@octave.org>
diff --git a/test/ChangeLog b/test/ChangeLog
--- a/test/ChangeLog
+++ b/test/ChangeLog
@@ -1,8 +1,13 @@
+2007-09-21  John W. Eaton  <jwe@octave.org>
+
+	* test_slice.m: Fix test for x = ones ([0, 2]); x(idx) = N case.
+	See change for liboctave/Array.cc.
+
 2007-06-15  John W. Eaton  <jwe@octave.org>
 
 	* fntests.m: Also report expected failures in summary.
 	Improved wording from Thomas Weber <thomas.weber.mail@gmail.com>.
 
 2007-06-06  John W. Eaton  <jwe@octave.org>
 
 	* test_signal.m: Rename internal assert function to xassert.
diff --git a/test/test_slice.m b/test/test_slice.m
--- a/test/test_slice.m
+++ b/test/test_slice.m
@@ -41,19 +41,19 @@
 %!assert(set_slice([2 0], 32, 3), [0 0;0 0;2 2]');
 %!assert(set_slice([2 0], 33, []), zeros([2 0]));
 %!assert(set_slice([2 0], 33, 1), zeros([2 0]));
 %!assert(set_slice([2 0], 33, 2), zeros([2 0 2]));
 %!assert(set_slice([2 0], 33, 3), zeros([2 0 3]));
 
 ## size = [0 2]
 %!assert(set_slice([0 2], 11, []), zeros([0 2]));
-%!error <A\(I\) = X: unable to resize A> set_slice([0 2], 11, 1)
-%!error <A\(I\) = X: unable to resize A> set_slice([0 2], 11, 2)
-%!error <A\(I\) = X: unable to resize A> set_slice([0 2], 11, 3)
+%!assert(set_slice([0 2], 11, 1), 2);
+%!assert(set_slice([0 2], 11, 2), [0, 2]);
+%!assert(set_slice([0 2], 11, 3), [0, 0, 2]);
 %!assert(set_slice([0 2], 21, []), zeros([0 2]));
 %!assert(set_slice([0 2], 21, 1), [2 2]);
 %!assert(set_slice([0 2], 21, 2), [0 0;2 2]);
 %!assert(set_slice([0 2], 21, 3), [0 0;0 0;2 2]);
 %!assert(set_slice([0 2], 22, []), zeros([0 2]));
 %!assert(set_slice([0 2], 22, 1), zeros([0 2]));
 %!assert(set_slice([0 2], 22, 2), zeros([0 2]));
 %!assert(set_slice([0 2], 22, 3), zeros([0 3]));
