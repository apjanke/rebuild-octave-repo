# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1341773010 25200
#      Sun Jul 08 11:43:30 2012 -0700
# Branch stable
# Node ID 53a2fb7b255750abc574785c38f05d2cf92b7550
# Parent  d31a39a0ac77663c08773235d0210ee935d08635
maint: Allow scatter demo to be run under Octave or Matlab for plot comparisons

* __scatter__.m: Use columns() rather than size(c,2) for readability.

* scatter.m: Use single quotes in demo code so that it will run under Matlab.

diff --git a/scripts/plot/private/__scatter__.m b/scripts/plot/private/__scatter__.m
--- a/scripts/plot/private/__scatter__.m
+++ b/scripts/plot/private/__scatter__.m
@@ -263,17 +263,17 @@ function h = render_size_color(hg, vert,
   if (isscalar (s))
     x = vert(:,1);
     y = vert(:,2);
     z = vert(:,3:end);
     toolkit = get (ancestor (hg, "figure"), "__graphics_toolkit__");
     ## Does gnuplot only support triangles with different vertex colors ?
     ## TODO - Verify gnuplot can only support one color. If RGB triplets
     ##        can be assigned to each vertex, then fix __go_draw_axe__.m
-    gnuplot_hack = (numel (x) > 1 && size(c, 2) == 3
+    gnuplot_hack = (numel (x) > 1 && columns (c) == 3
                     && strcmp (toolkit, "gnuplot"));
     if (ischar (c) || ! isflat || gnuplot_hack)
       if (filled)
         h = __go_patch__ (hg, "xdata", x, "ydata", y, "zdata", z,
                           "faces", 1:numel(x), "vertices", vert,
                           "facecolor", "none", "edgecolor", "none",
                           "marker", marker,
                           "markeredgecolor", "none",
diff --git a/scripts/plot/scatter.m b/scripts/plot/scatter.m
--- a/scripts/plot/scatter.m
+++ b/scripts/plot/scatter.m
@@ -87,17 +87,17 @@ endfunction
 %! y = randn (100, 1);
 %! scatter (x, y, "r");
 
 %!demo
 %! clf
 %! x = randn (100, 1);
 %! y = randn (100, 1);
 %! c = x .* y;
-%! scatter (x, y, 20, c, "filled");
+%! scatter (x, y, 20, c, 'filled');
 %! title ('Scatter with colors');
 
 %!demo
 %! clf;
 %! x = randn (100, 1);
 %! y = randn (100, 1);
 %! scatter (x, y, [], sqrt (x.^2 + y.^2));
 
