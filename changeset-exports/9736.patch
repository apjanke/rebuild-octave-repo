# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1255807405 -7200
#      Sat Oct 17 21:23:25 2009 +0200
# Node ID fa63a34827e05121419cc1bbd4d3752d3ddfa6a8
# Parent  4d03aff3add3f069ef80dd75b86133e155971d9c
clarify nth_element docstring

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,12 @@
+2009-10-17  Jaroslav Hajek  <highegg@gmail.com>
+
+	* data.cc (Fnth_element): Clarify docstring.
+
 2009-10-16  Jaroslav Hajek  <highegg@gmail.com>
 
 	* Cell.cc: Remove traces of ArrayN.
 	* Cell.h: Ditto.
 	* DLD-FUNCTIONS/besselj.cc: Ditto.
 	* DLD-FUNCTIONS/find.cc: Ditto.
 	* DLD-FUNCTIONS/lookup.cc: Ditto.
 	* DLD-FUNCTIONS/max.cc: Ditto.
diff --git a/src/data.cc b/src/data.cc
--- a/src/data.cc
+++ b/src/data.cc
@@ -6159,17 +6159,17 @@ DEFUN (nth_element, args, ,
 @deftypefnx {Built-in Function} {} nth_element (@var{x}, @var{n}, @var{dim})\n\
 Select the n-th smallest element of a vector, using the ordering defined by @code{sort}.\n\
 In other words, the result is equivalent to @code{sort(@var{x})(@var{n})}.\n\
 @var{n} can also be a contiguous range, either ascending @code{l:u}\n\
 or descending @code{u:-1:l}, in which case a range of elements is returned.\n\
 If @var{x} is an array, @code{nth_element} operates along the dimension defined by @var{dim},\n\
 or the first non-singleton dimension if @var{dim} is not given.\n\
 \n\
-nth_element encapsulates the C++ STL algorithms nth_element and partial_sort.\n\
+nth_element encapsulates the C++ standard library algorithms nth_element and partial_sort.\n\
 On average, the complexity of the operation is O(M*log(K)), where\n\
 @code{M = size(@var{x}, @var{dim})} and @code{K = length (@var{n})}.\n\
 This function is intended for cases where the ratio K/M is small; otherwise,\n\
 it may be better to use @code{sort}.\n\
 @seealso{sort, min, max}\n\
 @end deftypefn")
 {
   octave_value retval;
