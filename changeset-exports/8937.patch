# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1236610997 -3600
#      Mon Mar 09 16:03:17 2009 +0100
# Node ID f27b2c95817f53cdc837bfcd595d8585caa64f66
# Parent  42e24f4ebc8c70db07d0fcfd08d70b7a40e5519c
slightly simplify histc

diff --git a/scripts/statistics/base/histc.m b/scripts/statistics/base/histc.m
--- a/scripts/statistics/base/histc.m
+++ b/scripts/statistics/base/histc.m
@@ -72,27 +72,28 @@ function [n, idx] = histc (data, edges, 
     if (! issorted (edges) || edges(1) > edges(end))
       warning ("histc: edge values not sorted on input");
       edges = sort (edges);
     endif
   else
     error ("histc: second argument must be a vector");
   endif
 
-  ## Allocate the histogram
   nsz = sz;
   nsz (dim) = num_edges;
-  n = zeros (nsz);
   
   ## the splitting point is 3 bins
 
   if (num_edges <= 3)
 
     ## This is the O(M*N) algorithm.
 
+    ## Allocate the histogram
+    n = zeros (nsz);
+
     ## Allocate 'idx'
     if (nargout > 1)
       idx = zeros (sz);
     endif
     
     ## Prepare indices
     idx1 = cell (1, dim-1);
     for k = 1:length (idx1)
@@ -142,18 +143,17 @@ function [n, idx] = histc (data, edges, 
         iidx += reshape (kron (nl*ne*(0:nu-1), ones (1, nl*nn)), sz);
       endif
     endif
 
     ## Select valid elements.
     iidx = iidx(idx != 0);
 
     ## Call accumarray to sum the indexed elements.
-    sz(dim) = length (edges);
-    n = accumarray (iidx(:), 1, sz);
+    n = accumarray (iidx(:), 1, nsz);
 
   endif
 
 endfunction
 
 %!test
 %! data = linspace (0, 10, 1001);
 %! n = histc (data, 0:10);
