# HG changeset patch
# User jwe
# Date 1076709481 0
#      Fri Feb 13 21:58:01 2004 +0000
# Node ID 60c78bde10e56d9ab10a73128a56a9c57149cc05
# Parent  9a6bfff40c8d7ef8efbf8f2be650d0d8d2cbd584
[project @ 2004-02-13 21:58:01 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,12 @@
+2004-02-13  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* Makefile.in (header-msg): Required bison version now 1.31 or later.
+
 2004-01-29  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* emacs/octave-mod.el: If line-end-position is not defined,
 	provide it as an alias for point-at-eol.
 
 2004-01-24  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* emacs/octave-mod.el: If line-beginning-position is not defined,
diff --git a/Makefile.in b/Makefile.in
--- a/Makefile.in
+++ b/Makefile.in
@@ -44,17 +44,17 @@ header-msg: FORCE
 	@echo "*  To compile Octave, you will need a recent versions of"
 	@echo "*  the following software:"
 	@echo "*"
 	@echo "*    g++ (3.2.x or a more recent version)"
 	@echo "*"
 	@echo "*    flex (2.5.4 or a more recent version) -- required if"
 	@echo "*    you need to recreate lex.cc from lex.l"
 	@echo "*"
-	@echo "*    bison (1.28 or a more recent version) -- required if"
+	@echo "*    bison (1.31 or a more recent version) -- required if"
 	@echo "*    you need to recreate parse.cc from parse.y"
 	@echo "*"
 	@echo "*    gperf (2.7.1 or a more recent version) -- required if"
 	@echo "*    you need to recreate oct-gperf.h from octave.gperf"
 	@echo "*"
 	@echo "*  Now would be a good time to read INSTALL.OCTAVE if"
 	@echo "*  you have not done so already."
 	@echo "*"
diff --git a/liboctave/Array.cc b/liboctave/Array.cc
--- a/liboctave/Array.cc
+++ b/liboctave/Array.cc
@@ -1160,20 +1160,29 @@ Array<T>::maybe_delete_elements_2 (idx_v
 
   int n;
   if (nr == 1)
     n = nc;
   else if (nc == 1)
     n = nr;
   else
     {
-      (*current_liboctave_error_handler)
-	("A(idx) = []: expecting A to be row or column vector or scalar");
-
-      return;
+      // Reshape to row vector for Matlab compatibility.
+
+      n = nr * nc;
+      nr = 1;
+      nc = n;
+
+      if (liboctave_wfi_flag)
+	{
+	  (*current_liboctave_warning_handler)
+	    ("A(idx) = []: expecting A to be row or column vector or scalar");
+
+	  return;
+	}
     }
 
   if (idx_arg.is_colon_equiv (n, 1))
     {
       // Either A(:) = [] or A(idx) = [] with idx enumerating all
       // elements, so we delete all elements and return [](0x0).  To
       // preserve the orientation of the vector, you have to use
       // A(idx,:) = [] (delete rows) or A(:,idx) (delete columns).
@@ -1209,20 +1218,17 @@ Array<T>::maybe_delete_elements_2 (idx_v
 	  int ii = 0;
 	  iidx = 0;
 	  for (int i = 0; i < n; i++)
 	    {
 	      if (iidx < num_to_delete && i == idx_arg.elem (iidx))
 		iidx++;
 	      else
 		{
-		  if (nr == 1)
-		    new_data[ii] = elem (0, i);
-		  else
-		    new_data[ii] = elem (i, 0);
+		  new_data[ii] = elem (i);
 
 		  ii++;
 		}
 	    }
 
 	  if (--(Array<T>::rep)->count <= 0)
 	    delete Array<T>::rep;
 
@@ -2624,17 +2630,19 @@ assign2 (Array<LT>& lhs, const Array<RT>
 			&& idx_i.orig_columns () == lhs_nc)))
 	    (*current_liboctave_warning_handler)
 	      ("single index used for matrix");
 
 	  int len = idx_i.freeze (lhs_nr * lhs_nc, "matrix");
 
 	  if (idx_i)
 	    {
-	      if (len == 0)
+	      if (rhs_nr == 0 && rhs_nc == 0)
+		lhs.maybe_delete_elements (idx_i);
+	      else if (len == 0)
 		{
 		  if (! ((rhs_nr == 1 && rhs_nc == 1)
 			 || (rhs_nr == 0 && rhs_nc == 0)))
 		    (*current_liboctave_error_handler)
 		      ("A([]) = X: X must be an empty matrix or scalar");
 		}
 	      else if (len == rhs_nr * rhs_nc)
 		{
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,14 @@
+2004-02-13  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* Array.cc (maybe_delete_elements_2): Allow X(n) = [] for 2-d X.
+	(Array<T>assign2): Also call maybe_delete_elements for single
+	index when rows and columns or LHS are both greater than 1.
+
 2004-02-13  Petter Risholm  <risholm@stud.ntnu.no>
 
 	* Array.cc (Array<T>::maybe_delete_elements):
 	Check for index out of bounds.	Handle one index.
 
 	* Array.cc (Array<T>::indexN): Use dim_vector (0, 0) instead of
 	dim_vector (0) to create empty return vector.
 
