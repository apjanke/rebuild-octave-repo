# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1551483102 0
#      Fri Mar 01 23:31:42 2019 +0000
# Node ID 2703e1407887f352f296161ad76f72b6fe35304d
# Parent  be5b43255a383b0edd093d086d1de4223e68b008
fix declarations of stack frame copy ctors and assignment operators

* stack-frame.h (base_value_stack_frame, scope_stack_frame):
Fix argument types for copy constructors and assignment operators to
match the type of the class.

diff --git a/libinterp/corefcn/stack-frame.h b/libinterp/corefcn/stack-frame.h
--- a/libinterp/corefcn/stack-frame.h
+++ b/libinterp/corefcn/stack-frame.h
@@ -786,19 +786,20 @@ namespace octave
                             size_t prev, stack_frame *static_link,
                             stack_frame *access_link)
       : stack_frame (cs, prev, static_link, access_link),
         m_values (num_symbols, octave_value ()),
         m_flags (num_symbols, LOCAL),
         m_auto_vars (NUM_AUTO_VARS, octave_value ())
     { }
 
-    base_value_stack_frame (const stack_frame& elt) = delete;
+    base_value_stack_frame (const base_value_stack_frame& elt) = delete;
 
-    base_value_stack_frame& operator = (const stack_frame& elt) = delete;
+    base_value_stack_frame&
+    operator = (const base_value_stack_frame& elt) = delete;
 
     ~base_value_stack_frame (void) = default;
 
     size_t size (void) const
     {
       return m_values.size ();
     }
 
@@ -884,17 +885,18 @@ namespace octave
                           stack_frame *static_link)
       : base_value_stack_frame (cs, get_num_symbols (fcn), prev, static_link,
                                 get_access_link (fcn, static_link)),
         m_fcn (fcn), m_unwind_protect_frame (up_frame)
     { }
 
     user_fcn_stack_frame (const user_fcn_stack_frame& elt) = delete;
 
-    user_fcn_stack_frame& operator = (const user_fcn_stack_frame& elt) = delete;
+    user_fcn_stack_frame&
+    operator = (const user_fcn_stack_frame& elt) = delete;
 
     ~user_fcn_stack_frame (void) = default;
 
     bool is_user_fcn_frame (void) const { return true; }
 
     static stack_frame *
     get_access_link (octave_user_function *fcn, stack_frame *static_link);
 
@@ -956,19 +958,19 @@ namespace octave
 
     scope_stack_frame (call_stack& cs, size_t prev, const symbol_scope& scope,
                        stack_frame *static_link)
       : base_value_stack_frame (cs, scope.num_symbols (), prev,
                                 static_link, nullptr),
         m_scope (scope)
     { }
 
-    scope_stack_frame (const stack_frame& elt) = delete;
+    scope_stack_frame (const scope_stack_frame& elt) = delete;
 
-    scope_stack_frame& operator = (const stack_frame& elt) = delete;
+    scope_stack_frame& operator = (const scope_stack_frame& elt) = delete;
 
     ~scope_stack_frame (void) = default;
 
     bool is_scope_frame (void) const { return true; }
 
     symbol_scope get_scope (void) const { return m_scope; }
 
     symbol_record lookup_symbol (const std::string& name) const
