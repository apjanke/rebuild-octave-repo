# HG changeset patch
# User jwe
# Date 1022116931 0
#      Thu May 23 01:22:11 2002 +0000
# Node ID 294f13627ee88828bf83a9af077d49e93d72e6d0
# Parent  126177939aae02d0853e0acab9a8b5a4dfcfb5ba
[project @ 2002-05-23 01:22:11 by jwe]

diff --git a/src/debug.cc b/src/debug.cc
--- a/src/debug.cc
+++ b/src/debug.cc
@@ -44,17 +44,17 @@ Software Foundation, 59 Temple Place - S
 #include "pt-pr-code.h"
 #include "pt.h"
 #include "pt-bp.h"
 #include "pt-stmt.h"
 #include "toplev.h"
 #include "unwind-prot.h"
 #include "variables.h"
 
-octave_user_function *
+static octave_user_function *
 get_user_function (std::string str = "")
 {
   octave_user_function *dbg_fcn = NULL;
 
   if (str.compare (""))
     {
       symbol_record *ptr = curr_sym_tab->lookup (str);
 
@@ -70,19 +70,17 @@ get_user_function (std::string str = "")
 	  if (ptr && ptr->is_user_function ())
 	    {
 	      octave_value tmp = ptr->def ();
 	      dbg_fcn = static_cast<octave_user_function *> (tmp.function_value ());
 	    }
 	}
     }
   else if (curr_function)
-    {
-      dbg_fcn = curr_function;
-    }
+    dbg_fcn = curr_function;
 
   return dbg_fcn;
 }
 
 
 DEFUN_TEXT (dbstop, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {rline =} dbstop (func, line)\n\
@@ -167,16 +165,17 @@ No checking is done to make sure that th
 a breakpoint.   If you get the wrong line nothing will happen.\n\
 @end deftypefn\n\
 @seealso{dbstop, dbstatus, dbwhere}")
 {
   octave_value retval;
 
   std::string symbol_name = "";
   std::string line_number;
+
   int line = -1;
   int nargin = args.length ();
 
   string_vector argv = args.make_argv ("dbclear");
 
   if (error_state)
     return retval;
 
@@ -306,17 +305,17 @@ Show where we are in the code\n\
     error ("dbwhere: must be inside of a user function to use dbwhere\n");
 
   return retval;
 }
 
 // Copied and modified from the do_type command in help.cc
 // Maybe we could share some code?
 void
-do_dbtype(std::ostream& os, const std::string& name, int start, int end)
+do_dbtype (std::ostream& os, const std::string& name, int start, int end)
 {
   std::string ff = fcn_file_in_path (name);
 
   if (! ff.empty ())
     {
       std::ifstream fs (ff.c_str (), std::ios::in);
 
       if (fs)
@@ -338,20 +337,20 @@ do_dbtype(std::ostream& os, const std::s
 		{
 		  line++;
 		  if (line >= start && line <= end)
 		    os << line << "\t";
 		}
 	    }
 	}
       else
-	os << "unable to open `" << ff << "' for reading!\n";
+	os << "dbtype: unable to open `" << ff << "' for reading!\n";
     }
   else
-    os << "unkown function";
+    os << "dbtype: unkown function";
 
 }
 
 DEFUN_TEXT (dbtype, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {} dbtype ()\n\
 List script file with line numbers.\n\
 @end deftypefn\n\
