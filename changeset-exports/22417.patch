# HG changeset patch
# User Rik <rik@octave.org>
# Date 1472747635 25200
#      Thu Sep 01 09:33:55 2016 -0700
# Node ID 48c00363dc747eaa58e8eb32ea3680836d0ec941
# Parent  2b24ab52671ab0dab17ae8841f6e195f9fdb5f57
maint: Use '{ }' for empty function bodies in C++.

* Backend.cc, BaseControl.cc, ButtonControl.cc, ButtonGroup.cc,
CheckBoxControl.cc, Container.cc, ContextMenu.cc, EditControl.cc, Figure.cc,
FigureWindow.cc, GLCanvas.cc, ListBoxControl.cc, Logger.cc, Menu.cc,
MouseModeActionGroup.cc, Object.cc, Panel.cc, PopupMenuControl.cc,
PushButtonControl.cc, PushTool.cc, RadioButtonControl.cc, SliderControl.cc,
TextControl.cc, ToggleButtonControl.cc, ToggleTool.cc, ToolBar.cc,
ToolBarButton.cc, marker.cc, octave-dock-widget.h, octave-qt-link.cc,
shortcut-manager.cc, shortcut-manager.h, Cell.cc, jit-ir.cc, jit-ir.h,
jit-typeinfo.cc, oct-prcstrm.cc, octave-link.cc, profiler.cc, pt-jit.cc,
sysdep.cc, __init_gnuplot__.cc, ov-fcn-handle.cc, ov.cc, pt-check.cc,
CColVector.cc, CMatrix.cc, CSparse.cc, dMatrix.cc, fCColVector.cc, fCMatrix.cc,
fMatrix.cc, aepbalance.h, oct-norm.cc, byte-swap.h, cmd-hist.cc, oct-sort.cc:
Use '{ }' for empty function bodies in C++.

diff --git a/libgui/graphics/Backend.cc b/libgui/graphics/Backend.cc
--- a/libgui/graphics/Backend.cc
+++ b/libgui/graphics/Backend.cc
@@ -74,18 +74,17 @@ namespace QtHandles
   {
     ObjectFactory* factory = ObjectFactory::instance ();
 
     connect (this, SIGNAL (createObject (double)),
              factory, SLOT (createObject (double)));
   }
 
   Backend::~Backend (void)
-  {
-  }
+  { }
 
   bool
   Backend::initialize (const graphics_object& go)
   {
     if (go.isa ("figure")
         || go.isa ("uicontrol")
         || go.isa ("uipanel")
         || go.isa ("uibuttongroup")
diff --git a/libgui/graphics/BaseControl.cc b/libgui/graphics/BaseControl.cc
--- a/libgui/graphics/BaseControl.cc
+++ b/libgui/graphics/BaseControl.cc
@@ -94,18 +94,17 @@ namespace QtHandles
     m_keyPressHandlerDefined = ! up.get_keypressfcn ().is_empty ();
 
     w->installEventFilter (this);
 
     m_normalizedFont = up.fontunits_is ("normalized");
   }
 
   BaseControl::~BaseControl (void)
-  {
-  }
+  { }
 
   void
   BaseControl::update (int pId)
   {
     uicontrol::properties& up = properties<uicontrol> ();
     QWidget* w = qWidget<QWidget> ();
 
     switch (pId)
diff --git a/libgui/graphics/ButtonControl.cc b/libgui/graphics/ButtonControl.cc
--- a/libgui/graphics/ButtonControl.cc
+++ b/libgui/graphics/ButtonControl.cc
@@ -52,18 +52,17 @@ namespace QtHandles
           btn->setChecked (true);
       }
 
     connect (btn, SIGNAL (clicked (void)), SLOT (clicked (void)));
     connect (btn, SIGNAL (toggled (bool)), SLOT (toggled (bool)));
   }
 
   ButtonControl::~ButtonControl (void)
-  {
-  }
+  { }
 
   void
   ButtonControl::update (int pId)
   {
     uicontrol::properties& up = properties<uicontrol> ();
     QAbstractButton* btn = qWidget<QAbstractButton> ();
 
     switch (pId)
diff --git a/libgui/graphics/ButtonGroup.cc b/libgui/graphics/ButtonGroup.cc
--- a/libgui/graphics/ButtonGroup.cc
+++ b/libgui/graphics/ButtonGroup.cc
@@ -165,18 +165,17 @@ namespace QtHandles
     else
       frame->hide ();
 
     connect (m_buttongroup, SIGNAL (buttonClicked (QAbstractButton*)),
              SLOT (buttonClicked (QAbstractButton*)));
   }
 
   ButtonGroup::~ButtonGroup (void)
-  {
-  }
+  { }
 
   bool
   ButtonGroup::eventFilter (QObject* watched, QEvent* xevent)
   {
     if (! m_blockUpdates)
       {
         if (watched == qObject ())
           {
diff --git a/libgui/graphics/CheckBoxControl.cc b/libgui/graphics/CheckBoxControl.cc
--- a/libgui/graphics/CheckBoxControl.cc
+++ b/libgui/graphics/CheckBoxControl.cc
@@ -50,13 +50,12 @@ namespace QtHandles
 
   CheckBoxControl::CheckBoxControl (const graphics_object& go, QCheckBox* box)
     : ButtonControl (go, box)
   {
     box->setAutoFillBackground (true);
   }
 
   CheckBoxControl::~CheckBoxControl (void)
-  {
-  }
+  { }
 
 };
 
diff --git a/libgui/graphics/Container.cc b/libgui/graphics/Container.cc
--- a/libgui/graphics/Container.cc
+++ b/libgui/graphics/Container.cc
@@ -39,18 +39,17 @@ namespace QtHandles
 
   Container::Container (QWidget* xparent)
     : ContainerBase (xparent), m_canvas (0)
   {
     setFocusPolicy (Qt::ClickFocus);
   }
 
   Container::~Container (void)
-  {
-  }
+  { }
 
   Canvas*
   Container::canvas (const graphics_handle& gh, bool xcreate)
   {
     if (! m_canvas && xcreate)
       {
         gh_manager::auto_lock lock;
         graphics_object go = gh_manager::get_object (gh);
diff --git a/libgui/graphics/ContextMenu.cc b/libgui/graphics/ContextMenu.cc
--- a/libgui/graphics/ContextMenu.cc
+++ b/libgui/graphics/ContextMenu.cc
@@ -53,18 +53,17 @@ namespace QtHandles
   {
     xmenu->setAutoFillBackground (true);
 
     connect (xmenu, SIGNAL (aboutToShow (void)), SLOT (aboutToShow (void)));
     connect (xmenu, SIGNAL (aboutToHide (void)), SLOT (aboutToHide (void)));
   }
 
   ContextMenu::~ContextMenu (void)
-  {
-  }
+  { }
 
   void
   ContextMenu::update (int pId)
   {
     uicontextmenu::properties& up = properties<uicontextmenu> ();
     QMenu* xmenu = qWidget<QMenu> ();
 
     switch (pId)
diff --git a/libgui/graphics/EditControl.cc b/libgui/graphics/EditControl.cc
--- a/libgui/graphics/EditControl.cc
+++ b/libgui/graphics/EditControl.cc
@@ -111,18 +111,17 @@ namespace QtHandles
              SLOT (textChanged (void)));
     connect (edit, SIGNAL (editingFinished (void)),
              SLOT (editingFinished (void)));
     connect (edit, SIGNAL (returnPressed (void)),
              SLOT (returnPressed (void)));
   }
 
   EditControl::~EditControl (void)
-  {
-  }
+  { }
 
   void
   EditControl::initCommon (QWidget*)
   {
     m_textChanged = false;
   }
 
   void
diff --git a/libgui/graphics/Figure.cc b/libgui/graphics/Figure.cc
--- a/libgui/graphics/Figure.cc
+++ b/libgui/graphics/Figure.cc
@@ -185,18 +185,17 @@ namespace QtHandles
     connect (this, SIGNAL (asyncUpdate (void)),
              this, SLOT (updateContainer (void)));
 
     win->addReceiver (this);
     m_container->addReceiver (this);
   }
 
   Figure::~Figure (void)
-  {
-  }
+  { }
 
   static std::string
   mouse_mode_to_string (MouseMode mode)
   {
     switch (mode)
       {
       case NoMode:
         return "none";
diff --git a/libgui/graphics/FigureWindow.cc b/libgui/graphics/FigureWindow.cc
--- a/libgui/graphics/FigureWindow.cc
+++ b/libgui/graphics/FigureWindow.cc
@@ -34,18 +34,17 @@ namespace QtHandles
   FigureWindow::FigureWindow (QWidget* xparent)
     : FigureWindowBase (xparent)
   {
     // set icon from application resources
     setWindowIcon (QIcon (":/actions/icons/logo.png"));
   }
 
   FigureWindow::~FigureWindow (void)
-  {
-  }
+  { }
 
   QMenu*
   FigureWindow::createPopupMenu (void)
   {
     // For the time being, disable menubar/toolbar popup menu
     return 0;
   }
 
diff --git a/libgui/graphics/GLCanvas.cc b/libgui/graphics/GLCanvas.cc
--- a/libgui/graphics/GLCanvas.cc
+++ b/libgui/graphics/GLCanvas.cc
@@ -41,18 +41,17 @@ namespace QtHandles
     : QGLWidget (QGLFormat (QGL::SampleBuffers), xparent), Canvas (gh)
 #endif
   {
     setFocusPolicy (Qt::ClickFocus);
     setFocus();
   }
 
   GLCanvas::~GLCanvas (void)
-  {
-  }
+  { }
 
   void
   GLCanvas::draw (const graphics_handle& gh)
   {
     gh_manager::auto_lock lock;
     graphics_object go = gh_manager::get_object (gh);
 
     if (go)
diff --git a/libgui/graphics/ListBoxControl.cc b/libgui/graphics/ListBoxControl.cc
--- a/libgui/graphics/ListBoxControl.cc
+++ b/libgui/graphics/ListBoxControl.cc
@@ -112,18 +112,17 @@ namespace QtHandles
     list->removeEventFilter (this);
     list->viewport ()->installEventFilter (this);
 
     connect (list, SIGNAL (itemSelectionChanged (void)),
              SLOT (itemSelectionChanged (void)));
   }
 
   ListBoxControl::~ListBoxControl (void)
-  {
-  }
+  { }
 
   void
   ListBoxControl::update (int pId)
   {
     uicontrol::properties& up = properties<uicontrol> ();
     QListWidget* list = qWidget<QListWidget> ();
 
     switch (pId)
diff --git a/libgui/graphics/Logger.cc b/libgui/graphics/Logger.cc
--- a/libgui/graphics/Logger.cc
+++ b/libgui/graphics/Logger.cc
@@ -43,18 +43,17 @@ namespace QtHandles
   {
     QProcessEnvironment pe (QProcessEnvironment::systemEnvironment ());
 
     if (pe.value ("QTHANDLES_DEBUG", "0") != "0")
       m_debugEnabled = true;
   }
 
   Logger::~Logger (void)
-  {
-  }
+  { }
 
   Logger*
   Logger::instance (void)
   {
     if (! s_instance)
       {
         s_instance = new Logger ();
         s_mutex = new QMutex ();
diff --git a/libgui/graphics/Menu.cc b/libgui/graphics/Menu.cc
--- a/libgui/graphics/Menu.cc
+++ b/libgui/graphics/Menu.cc
@@ -148,18 +148,17 @@ namespace QtHandles
               (octave_value (static_cast<double> (count+1)), true, false);
           }
       }
 
     connect (action, SIGNAL (triggered (bool)), SLOT (actionTriggered (void)));
   }
 
   Menu::~Menu (void)
-  {
-  }
+  { }
 
   void
   Menu::update (int pId)
   {
     uimenu::properties& up = properties<uimenu> ();
     QAction* action = qWidget<QAction> ();
 
     switch (pId)
diff --git a/libgui/graphics/MouseModeActionGroup.cc b/libgui/graphics/MouseModeActionGroup.cc
--- a/libgui/graphics/MouseModeActionGroup.cc
+++ b/libgui/graphics/MouseModeActionGroup.cc
@@ -56,18 +56,17 @@ namespace QtHandles
     foreach (QAction* a, m_actions)
     {
       a->setCheckable (true);
       connect (a, SIGNAL (toggled (bool)), this, SLOT (actionToggled (bool)));
     }
   }
 
   MouseModeActionGroup::~MouseModeActionGroup (void)
-  {
-  }
+  { }
 
   void
   MouseModeActionGroup::actionToggled (bool checked)
   {
     if (! checked)
       {
         if (sender () == m_current)
           {
diff --git a/libgui/graphics/Object.cc b/libgui/graphics/Object.cc
--- a/libgui/graphics/Object.cc
+++ b/libgui/graphics/Object.cc
@@ -61,18 +61,17 @@ namespace QtHandles
         m_qobject->setProperty ("QtHandles::Object",
                                 qVariantFromValue<void*> (this));
         connect (m_qobject, SIGNAL (destroyed (QObject*)),
                  SLOT (objectDestroyed (QObject*)));
       }
   }
 
   Object::~Object (void)
-  {
-  }
+  { }
 
   graphics_object
   Object::object (void) const
   {
     gh_manager::auto_lock lock (false);
 
     if (! lock)
       qCritical ("QtHandles::Object::object: "
@@ -126,44 +125,40 @@ namespace QtHandles
     gh_manager::auto_lock lock;
 
     if (object ().valid_object ())
       print (file_cmd, term);
   }
 
   void
   Object::update (int /* pId */)
-  {
-  }
+  { }
 
   void
   Object::finalize (void)
   {
     if (m_qobject)
       {
         delete m_qobject;
         m_qobject = 0;
       }
     deleteLater ();
   }
 
   void
   Object::redraw (void)
-  {
-  }
+  { }
 
   void
   Object::print (const QString& /* file_cmd */, const QString& /* term */)
-  {
-  }
+  { }
 
   void
   Object::beingDeleted (void)
-  {
-  }
+  { }
 
   void Object::objectDestroyed (QObject* obj)
   {
     if (obj && obj == m_qobject)
       m_qobject = 0;
   }
 
   Object*
diff --git a/libgui/graphics/Panel.cc b/libgui/graphics/Panel.cc
--- a/libgui/graphics/Panel.cc
+++ b/libgui/graphics/Panel.cc
@@ -140,18 +140,17 @@ namespace QtHandles
 
     if (pp.is_visible ())
       QTimer::singleShot (0, frame, SLOT (show (void)));
     else
       frame->hide ();
   }
 
   Panel::~Panel (void)
-  {
-  }
+  { }
 
   bool
   Panel::eventFilter (QObject* watched, QEvent* xevent)
   {
     if (! m_blockUpdates)
       {
         if (watched == qObject ())
           {
diff --git a/libgui/graphics/PopupMenuControl.cc b/libgui/graphics/PopupMenuControl.cc
--- a/libgui/graphics/PopupMenuControl.cc
+++ b/libgui/graphics/PopupMenuControl.cc
@@ -58,18 +58,17 @@ namespace QtHandles
 
     update (uicontrol::properties::ID_VALUE);
 
     connect (box, SIGNAL (currentIndexChanged (int)),
              SLOT (currentIndexChanged (int)));
   }
 
   PopupMenuControl::~PopupMenuControl (void)
-  {
-  }
+  { }
 
   void PopupMenuControl::update (int pId)
   {
     uicontrol::properties& up = properties<uicontrol> ();
     QComboBox* box = qWidget<QComboBox> ();
 
     switch (pId)
       {
diff --git a/libgui/graphics/PushButtonControl.cc b/libgui/graphics/PushButtonControl.cc
--- a/libgui/graphics/PushButtonControl.cc
+++ b/libgui/graphics/PushButtonControl.cc
@@ -53,18 +53,17 @@ namespace QtHandles
   PushButtonControl::PushButtonControl (const graphics_object& go,
                                         QPushButton* btn)
     : ButtonControl (go, btn)
   {
     btn->setAutoFillBackground (true);
   }
 
   PushButtonControl::~PushButtonControl (void)
-  {
-  }
+  { }
 
   void
   PushButtonControl::update (int pId)
   {
     uicontrol::properties& up = properties<uicontrol> ();
     QPushButton* btn = qWidget<QPushButton> ();
 
     switch (pId)
diff --git a/libgui/graphics/PushTool.cc b/libgui/graphics/PushTool.cc
--- a/libgui/graphics/PushTool.cc
+++ b/libgui/graphics/PushTool.cc
@@ -49,18 +49,17 @@ namespace QtHandles
 
   PushTool::PushTool (const graphics_object& go, QAction* action)
     : ToolBarButton<uipushtool> (go, action)
   {
     connect (action, SIGNAL (triggered (bool)), this, SLOT (clicked (void)));
   }
 
   PushTool::~PushTool (void)
-  {
-  }
+  { }
 
   void
   PushTool::update (int pId)
   {
     switch (pId)
       {
       default:
         ToolBarButton<uipushtool>::update (pId);
diff --git a/libgui/graphics/RadioButtonControl.cc b/libgui/graphics/RadioButtonControl.cc
--- a/libgui/graphics/RadioButtonControl.cc
+++ b/libgui/graphics/RadioButtonControl.cc
@@ -59,13 +59,12 @@ namespace QtHandles
     if (btnGroup)
       btnGroup->addButton (radio);
 
     radio->setAutoFillBackground (true);
     radio->setAutoExclusive (false);
   }
 
   RadioButtonControl::~RadioButtonControl (void)
-  {
-  }
+  { }
 
 };
 
diff --git a/libgui/graphics/SliderControl.cc b/libgui/graphics/SliderControl.cc
--- a/libgui/graphics/SliderControl.cc
+++ b/libgui/graphics/SliderControl.cc
@@ -73,18 +73,17 @@ namespace QtHandles
         slider->setValue (octave::math::round (((value(0) - dmin) / (dmax - dmin))
                                                * RANGE_INT_MAX));
       }
 
     connect (slider, SIGNAL (valueChanged (int)), SLOT (valueChanged (int)));
   }
 
   SliderControl::~SliderControl (void)
-  {
-  }
+  { }
 
   void
   SliderControl::update (int pId)
   {
     uicontrol::properties& up = properties<uicontrol> ();
     QScrollBar* slider = qWidget<QScrollBar> ();
 
     switch (pId)
diff --git a/libgui/graphics/TextControl.cc b/libgui/graphics/TextControl.cc
--- a/libgui/graphics/TextControl.cc
+++ b/libgui/graphics/TextControl.cc
@@ -58,18 +58,17 @@ namespace QtHandles
     label->setTextFormat (Qt::PlainText);
     label->setWordWrap (false);
     label->setAlignment (Utils::fromHVAlign (up.get_horizontalalignment (),
                          up.get_verticalalignment ()));
     label->setText(Utils::fromStringVector (up.get_string_vector()).join("\n"));
   }
 
   TextControl::~TextControl (void)
-  {
-  }
+  { }
 
   void
   TextControl::update (int pId)
   {
     uicontrol::properties& up = properties<uicontrol> ();
     QLabel* label = qWidget<QLabel> ();
 
     switch (pId)
diff --git a/libgui/graphics/ToggleButtonControl.cc b/libgui/graphics/ToggleButtonControl.cc
--- a/libgui/graphics/ToggleButtonControl.cc
+++ b/libgui/graphics/ToggleButtonControl.cc
@@ -59,13 +59,12 @@ namespace QtHandles
     if (btnGroup)
       btnGroup->addButton (btn);
 
     btn->setCheckable (true);
     btn->setAutoFillBackground (true);
   }
 
   ToggleButtonControl::~ToggleButtonControl (void)
-  {
-  }
+  { }
 
 };
 
diff --git a/libgui/graphics/ToggleTool.cc b/libgui/graphics/ToggleTool.cc
--- a/libgui/graphics/ToggleTool.cc
+++ b/libgui/graphics/ToggleTool.cc
@@ -55,18 +55,17 @@ namespace QtHandles
     action->setCheckable (true);
     action->setChecked (tp.is_state ());
 
     connect (action, SIGNAL (toggled (bool)),
              this, SLOT (triggered (bool)));
   }
 
   ToggleTool::~ToggleTool (void)
-  {
-  }
+  { }
 
   void
   ToggleTool::update (int pId)
   {
     uitoggletool::properties& tp = properties<uitoggletool> ();
     QAction* action = qWidget<QAction> ();
 
     switch (pId)
diff --git a/libgui/graphics/ToolBar.cc b/libgui/graphics/ToolBar.cc
--- a/libgui/graphics/ToolBar.cc
+++ b/libgui/graphics/ToolBar.cc
@@ -95,18 +95,17 @@ namespace QtHandles
 
     if (m_figure)
       m_figure->addCustomToolBar (bar, tp.is_visible ());
 
     bar->installEventFilter (this);
   }
 
   ToolBar::~ToolBar (void)
-  {
-  }
+  { }
 
   void
   ToolBar::update (int pId)
   {
     uitoolbar::properties& tp = properties<uitoolbar> ();
     QToolBar* bar = qWidget<QToolBar> ();
 
     switch (pId)
diff --git a/libgui/graphics/ToolBarButton.cc b/libgui/graphics/ToolBarButton.cc
--- a/libgui/graphics/ToolBarButton.cc
+++ b/libgui/graphics/ToolBarButton.cc
@@ -55,18 +55,17 @@ namespace QtHandles
 
     w->insertAction (w->actions ().back (), action);
     if (m_separator)
       w->insertAction (action, m_separator);
   }
 
   template <typename T>
   ToolBarButton<T>::~ToolBarButton (void)
-  {
-  }
+  { }
 
   template <typename T>
   void
   ToolBarButton<T>::update (int pId)
   {
     typename T::properties& tp = properties<T> ();
     QAction* action = qWidget<QAction> ();
 
diff --git a/libgui/src/m-editor/marker.cc b/libgui/src/m-editor/marker.cc
--- a/libgui/src/m-editor/marker.cc
+++ b/libgui/src/m-editor/marker.cc
@@ -39,18 +39,17 @@ marker::marker (QsciScintilla *area, int
 marker::marker (QsciScintilla *area, int original_linenr,
                 editor_markers type, const QString& condition) : QObject ()
 {
   construct (area, original_linenr, type, original_linenr - 1, condition);
 }
 
 
 marker::~marker (void)
-{
-}
+{ }
 
 
 void
 marker::construct (QsciScintilla *area, int original_linenr,
                    editor_markers type, int editor_linenr,
                    const QString& condition)
 {
   _edit_area = area;
diff --git a/libgui/src/octave-dock-widget.h b/libgui/src/octave-dock-widget.h
--- a/libgui/src/octave-dock-widget.h
+++ b/libgui/src/octave-dock-widget.h
@@ -71,18 +71,17 @@ public slots:
 
   virtual void handle_visibility (bool visible)
   {
     if (visible && ! isFloating ())
       focus ();
   }
 
   virtual void notice_settings (const QSettings*)
-  {
-  }
+  { }
   void handle_settings (const QSettings*);
 
   void handle_active_dock_changed (octave_dock_widget*, octave_dock_widget*);
 
   QMainWindow *main_win () { return _parent; }
 
   void save_settings (void);
 
diff --git a/libgui/src/octave-qt-link.cc b/libgui/src/octave-qt-link.cc
--- a/libgui/src/octave-qt-link.cc
+++ b/libgui/src/octave-qt-link.cc
@@ -517,23 +517,21 @@ octave_qt_link::do_append_history (const
 void
 octave_qt_link::do_clear_history (void)
 {
   emit clear_history_signal ();
 }
 
 void
 octave_qt_link::do_pre_input_event (void)
-{
-}
+{ }
 
 void
 octave_qt_link::do_post_input_event (void)
-{
-}
+{ }
 
 void
 octave_qt_link::do_enter_debugger_event (const std::string& file, int line)
 {
   do_insert_debugger_pointer (file, line);
 
   emit enter_debugger_signal ();
 }
diff --git a/libgui/src/shortcut-manager.cc b/libgui/src/shortcut-manager.cc
--- a/libgui/src/shortcut-manager.cc
+++ b/libgui/src/shortcut-manager.cc
@@ -52,18 +52,17 @@ shortcut_manager::shortcut_manager ()
 #if defined (Q_OS_MAC)
   QCoreApplication::setAttribute (Qt::AA_MacDontSwapCtrlAndMeta, true);
 #endif
 
   _settings = resource_manager::get_settings ();
 }
 
 shortcut_manager::~shortcut_manager ()
-{
-}
+{ }
 
 bool
 shortcut_manager::instance_ok (void)
 {
   bool retval = true;
 
   if (! instance)
     instance = new shortcut_manager ();
diff --git a/libgui/src/shortcut-manager.h b/libgui/src/shortcut-manager.h
--- a/libgui/src/shortcut-manager.h
+++ b/libgui/src/shortcut-manager.h
@@ -158,18 +158,17 @@ private:
           actual_sc = x.actual_sc;
           default_sc = x.default_sc;
         }
 
       return *this;
     }
 
     ~shortcut_t (void)
-    {
-    }
+    { }
 
     QTreeWidgetItem *tree_item;
     QString description;
     QString settings_key;
     QKeySequence actual_sc;
     QKeySequence default_sc;
   };
 
diff --git a/libinterp/corefcn/Cell.cc b/libinterp/corefcn/Cell.cc
--- a/libinterp/corefcn/Cell.cc
+++ b/libinterp/corefcn/Cell.cc
@@ -29,18 +29,17 @@ along with Octave; see the file COPYING.
 
 #include "Cell.h"
 #include "error.h"
 #include "errwarn.h"
 #include "ovl.h"
 
 Cell::Cell (const octave_value_list& ovl)
   : Array<octave_value> (ovl.cell_value ())
-{
-}
+{ }
 
 Cell::Cell (const string_vector& sv, bool trim)
   : Array<octave_value> ()
 {
   octave_idx_type n = sv.numel ();
 
   if (n > 0)
     {
diff --git a/libinterp/corefcn/jit-ir.cc b/libinterp/corefcn/jit-ir.cc
--- a/libinterp/corefcn/jit-ir.cc
+++ b/libinterp/corefcn/jit-ir.cc
@@ -142,17 +142,17 @@ operator<<(std::ostream& os, const jit_b
 jit_block *
 jit_use::user_parent (void) const
 {
   return muser->parent ();
 }
 
 // -------------------- jit_value --------------------
 jit_value::~jit_value (void)
-{}
+{ }
 
 jit_block *
 jit_value::first_use_block (void)
 {
   jit_use *use = first_use ();
   while (use)
     {
       if (! isa<jit_error_check> (use->user ()))
@@ -777,17 +777,17 @@ jit_error_check::print (std::ostream& os
   return print_successor (os << "<error> ", 0);
 }
 
 // -------------------- jit_magic_end --------------------
 jit_magic_end::context::context (jit_factory& factory, jit_value *avalue,
                                  size_t aindex, size_t acount)
   : value (avalue), index (factory.create<jit_const_index> (aindex)),
     count (factory.create<jit_const_index> (acount))
-{}
+{ }
 
 jit_magic_end::jit_magic_end (const std::vector<context>& full_context)
   : contexts (full_context)
 {
   resize_arguments (contexts.size ());
 
   size_t i;
   std::vector<context>::const_iterator iter;
diff --git a/libinterp/corefcn/jit-ir.h b/libinterp/corefcn/jit-ir.h
--- a/libinterp/corefcn/jit-ir.h
+++ b/libinterp/corefcn/jit-ir.h
@@ -191,17 +191,17 @@ private:
 
 std::ostream& operator<<(std::ostream& os, const jit_block_list& blocks);
 
 class
 jit_value : public jit_internal_list<jit_value, jit_use>
 {
 public:
   jit_value (void) : llvm_value (0), ty (0), mlast_use (0),
-                     min_worklist (false) {}
+                     min_worklist (false) { }
 
   virtual ~jit_value (void);
 
   bool in_worklist (void) const
   {
     return min_worklist;
   }
 
@@ -873,17 +873,17 @@ private:
 
 class
 jit_assign_base : public jit_instruction
 {
 public:
   jit_assign_base (jit_variable *adest) : jit_instruction (), mdest (adest) { }
 
   jit_assign_base (jit_variable *adest, size_t npred) : jit_instruction (npred),
-                                                        mdest (adest) {}
+                                                        mdest (adest) { }
 
   jit_assign_base (jit_variable *adest, jit_value *arg0, jit_value *arg1)
     : jit_instruction (arg0, arg1), mdest (adest) { }
 
   jit_variable *dest (void) const { return mdest; }
 
   virtual void push_variable (void)
   {
diff --git a/libinterp/corefcn/jit-typeinfo.cc b/libinterp/corefcn/jit-typeinfo.cc
--- a/libinterp/corefcn/jit-typeinfo.cc
+++ b/libinterp/corefcn/jit-typeinfo.cc
@@ -521,17 +521,17 @@ jit_type::to_llvm_arg (void) const
 {
   return llvm_type ? llvm_type->getPointerTo () : 0;
 }
 
 // -------------------- jit_function --------------------
 jit_function::jit_function () : module (0), llvm_function (0), mresult (0),
                                 call_conv (jit_convention::length),
                                 mcan_error (false)
-{}
+{ }
 
 jit_function::jit_function (llvm::Module *amodule,
                             jit_convention::type acall_conv,
                             const llvm::Twine& aname, jit_type *aresult,
                             const std::vector<jit_type *>& aargs)
   : module (amodule), mresult (aresult), args (aargs), call_conv (acall_conv),
     mcan_error (false)
 {
@@ -585,23 +585,22 @@ jit_function::jit_function (llvm::Module
     llvm_function->addFnAttr (llvm::Attribute::AlwaysInline);
 #endif
 }
 
 jit_function::jit_function (const jit_function& fn, jit_type *aresult,
                             const std::vector<jit_type *>& aargs)
   : module (fn.module), llvm_function (fn.llvm_function), mresult (aresult),
     args (aargs), call_conv (fn.call_conv), mcan_error (fn.mcan_error)
-{
-}
+{ }
 
 jit_function::jit_function (const jit_function& fn)
   : module (fn.module), llvm_function (fn.llvm_function), mresult (fn.mresult),
     args (fn.args), call_conv (fn.call_conv), mcan_error (fn.mcan_error)
-{}
+{ }
 
 void
 jit_function::erase (void)
 {
   if (! llvm_function)
     return;
 
   llvm_function->eraseFromParent ();
diff --git a/libinterp/corefcn/oct-prcstrm.cc b/libinterp/corefcn/oct-prcstrm.cc
--- a/libinterp/corefcn/oct-prcstrm.cc
+++ b/libinterp/corefcn/oct-prcstrm.cc
@@ -36,18 +36,17 @@ octave_iprocstream::create (const std::s
   return octave_stream (new octave_iprocstream (n, arg_md, ff));
 }
 
 octave_iprocstream::octave_iprocstream (const std::string& n,
                                         std::ios::openmode arg_md,
                                         octave::mach_info::float_format ff)
   : octave_stdiostream (n, octave_popen (n.c_str (), "r"),
                         arg_md, ff, octave_pclose)
-{
-}
+{ }
 
 octave_iprocstream::~octave_iprocstream (void)
 {
   do_close ();
 }
 
 octave_stream
 octave_oprocstream::create (const std::string& n, std::ios::openmode arg_md,
@@ -56,16 +55,15 @@ octave_oprocstream::create (const std::s
   return octave_stream (new octave_oprocstream (n, arg_md, ff));
 }
 
 octave_oprocstream::octave_oprocstream (const std::string& n,
                                         std::ios::openmode arg_md,
                                         octave::mach_info::float_format ff)
   : octave_stdiostream (n, octave_popen (n.c_str (), "w"),
                         arg_md, ff, octave_pclose)
-{
-}
+{ }
 
 octave_oprocstream::~octave_oprocstream (void)
 {
   do_close ();
 }
 
diff --git a/libinterp/corefcn/octave-link.cc b/libinterp/corefcn/octave-link.cc
--- a/libinterp/corefcn/octave-link.cc
+++ b/libinterp/corefcn/octave-link.cc
@@ -81,18 +81,17 @@ octave_link::connect_link (octave_link* 
   if (obj && instance)
     error ("octave_link is already linked!");
 
   instance = obj;
 }
 
 void
 octave_link::do_generate_events (void)
-{
-}
+{ }
 
 void
 octave_link::do_process_events (void)
 {
   event_queue_mutex->lock ();
 
   gui_event_queue.run ();
 
diff --git a/libinterp/corefcn/profiler.cc b/libinterp/corefcn/profiler.cc
--- a/libinterp/corefcn/profiler.cc
+++ b/libinterp/corefcn/profiler.cc
@@ -31,17 +31,17 @@ along with Octave; see the file COPYING.
 #include "oct-time.h"
 #include "ov-struct.h"
 #include "pager.h"
 #include "profiler.h"
 
 profile_data_accumulator::stats::stats ()
   : time (0.0), calls (0), recursive (false),
     parents (), children ()
-{}
+{ }
 
 octave_value
 profile_data_accumulator::stats::function_set_value (const function_set& list)
 {
   const octave_idx_type n = list.size ();
 
   RowVector retval (n);
   octave_idx_type i = 0;
@@ -52,17 +52,17 @@ profile_data_accumulator::stats::functio
     }
   assert (i == n);
 
   return retval;
 }
 
 profile_data_accumulator::tree_node::tree_node (tree_node* p, octave_idx_type f)
   : parent (p), fcn_id (f), children (), time (0.0), calls (0)
-{}
+{ }
 
 profile_data_accumulator::tree_node::~tree_node ()
 {
   for (child_map::iterator i = children.begin (); i != children.end (); ++i)
     delete i->second;
 }
 
 profile_data_accumulator::tree_node*
diff --git a/libinterp/corefcn/pt-jit.cc b/libinterp/corefcn/pt-jit.cc
--- a/libinterp/corefcn/pt-jit.cc
+++ b/libinterp/corefcn/pt-jit.cc
@@ -102,17 +102,18 @@ static llvm::IRBuilder<> builder (llvm::
 
 static llvm::LLVMContext& context = llvm::getGlobalContext ();
 
 // -------------------- jit_break_exception --------------------
 
 // jit_break is thrown whenever a branch we are converting has only breaks or
 // continues.  This is because all code that follows a break or continue
 // is dead.
-class jit_break_exception : public std::exception {};
+class jit_break_exception : public std::exception
+{ };
 
 // -------------------- jit_convert --------------------
 jit_convert::jit_convert (tree &tee, jit_type *for_bounds)
   : converting_function (false)
 {
   initialize (symbol_table::current_scope ());
 
   if (for_bounds)
@@ -1631,17 +1632,17 @@ jit_convert_llvm::visit (jit_assign& ass
       const jit_function& ol = jit_typeinfo::get_release (overwrite->type ());
       if (ol.valid ())
         ol.call (builder, overwrite);
     }
 }
 
 void
 jit_convert_llvm::visit (jit_argument&)
-{}
+{ }
 
 void
 jit_convert_llvm::visit (jit_magic_end& me)
 {
   const jit_function& ol = me.overload ();
 
   jit_magic_end::context ctx = me.resolve_context ();
   llvm::Value *ret = ol.call (builder, ctx.value, ctx.index, ctx.count);
@@ -2011,21 +2012,20 @@ jit_infer::simplify_phi (jit_phi& phi)
           phi.stash_argument (i, assign);
         }
     }
 }
 
 // -------------------- tree_jit --------------------
 
 tree_jit::tree_jit (void) : module (0), engine (0)
-{
-}
+{ }
 
 tree_jit::~tree_jit (void)
-{}
+{ }
 
 bool
 tree_jit::execute (tree_simple_for_command& cmd, const octave_value& bounds)
 {
   return instance ().do_execute (cmd, bounds);
 }
 
 bool
diff --git a/libinterp/corefcn/sysdep.cc b/libinterp/corefcn/sysdep.cc
--- a/libinterp/corefcn/sysdep.cc
+++ b/libinterp/corefcn/sysdep.cc
@@ -166,18 +166,17 @@ w32_init (void)
 {
   w32_set_octave_home ();
 
   octave::command_editor::prefer_env_winsize (true);
 }
 
 static bool
 w32_shell_execute (const std::string& file)
-{
-}
+{ }
 
 #endif
 
 // Set app id if we have the SetCurrentProcessExplicitAppUserModelID
 // available (>= Win7).  FIXME: Could we check for existence of this
 // function in the configure script instead of dynamically loading
 // shell32.dll?
 
diff --git a/libinterp/dldfcn/__init_gnuplot__.cc b/libinterp/dldfcn/__init_gnuplot__.cc
--- a/libinterp/dldfcn/__init_gnuplot__.cc
+++ b/libinterp/dldfcn/__init_gnuplot__.cc
@@ -194,18 +194,17 @@ have_gnuplot_binary (void)
 
               fs = octave::sys::file_stat (gnuplot_path);
             }
 
           retval = fs.exists ();
         }
     }
   catch (octave::execution_exception&)
-    {
-    }
+    { }
 
   return retval;
 }
 
 // Initialize the gnuplot graphics toolkit.
 
 DEFUN_DLD (__init_gnuplot__, , ,
            doc: /* -*- texinfo -*-
diff --git a/libinterp/octave-value/ov-fcn-handle.cc b/libinterp/octave-value/ov-fcn-handle.cc
--- a/libinterp/octave-value/ov-fcn-handle.cc
+++ b/libinterp/octave-value/ov-fcn-handle.cc
@@ -1914,18 +1914,17 @@ Return true if @var{x} is a function han
 
 octave_fcn_binder::octave_fcn_binder (const octave_value& f,
                                       const octave_value& root,
                                       const octave_value_list& templ,
                                       const std::vector<int>& mask,
                                       int exp_nargin)
   : octave_fcn_handle (f), root_handle (root), arg_template (templ),
     arg_mask (mask), expected_nargin (exp_nargin)
-{
-}
+{ }
 
 octave_fcn_handle *
 octave_fcn_binder::maybe_binder (const octave_value& f)
 {
   octave_fcn_handle *retval = 0;
 
   octave_user_function *usr_fcn = f.user_function_value (false);
   tree_parameter_list *param_list = usr_fcn ? usr_fcn->parameter_list () : 0;
diff --git a/libinterp/octave-value/ov.cc b/libinterp/octave-value/ov.cc
--- a/libinterp/octave-value/ov.cc
+++ b/libinterp/octave-value/ov.cc
@@ -468,86 +468,73 @@ octave_value::binary_op_to_assign_op (bi
 
     default:
       return unknown_assign_op;
     }
 }
 
 octave_value::octave_value (short int i)
   : rep (new octave_scalar (i))
-{
-}
+{ }
 
 octave_value::octave_value (unsigned short int i)
   : rep (new octave_scalar (i))
-{
-}
+{ }
 
 octave_value::octave_value (int i)
   : rep (new octave_scalar (i))
-{
-}
+{ }
 
 octave_value::octave_value (unsigned int i)
   : rep (new octave_scalar (i))
-{
-}
+{ }
 
 octave_value::octave_value (long int i)
   : rep (new octave_scalar (i))
-{
-}
+{ }
 
 octave_value::octave_value (unsigned long int i)
   : rep (new octave_scalar (i))
-{
-}
+{ }
 
 #if defined (OCTAVE_HAVE_LONG_LONG_INT)
 octave_value::octave_value (long long int i)
   : rep (new octave_scalar (i))
-{
-}
+{ }
 #endif
 
 #if defined (OCTAVE_HAVE_UNSIGNED_LONG_LONG_INT)
 octave_value::octave_value (unsigned long long int i)
   : rep (new octave_scalar (i))
-{
-}
+{ }
 #endif
 
 octave_value::octave_value (octave::sys::time t)
   : rep (new octave_scalar (t.double_value ()))
-{
-}
+{ }
 
 octave_value::octave_value (double d)
   : rep (new octave_scalar (d))
-{
-}
+{ }
 
 octave_value::octave_value (float d)
   : rep (new octave_float_scalar (d))
-{
-}
+{ }
 
 octave_value::octave_value (const Cell& c, bool is_csl)
   : rep (is_csl
          ? dynamic_cast<octave_base_value *> (new octave_cs_list (c))
          : dynamic_cast<octave_base_value *> (new octave_cell (c)))
-{
-}
+{ }
 
 octave_value::octave_value (const Array<octave_value>& a, bool is_csl)
   : rep (is_csl
          ? dynamic_cast<octave_base_value *> (new octave_cs_list (Cell (a)))
          : dynamic_cast<octave_base_value *> (new octave_cell (Cell (a))))
-{
-}
+{ }
 
 octave_value::octave_value (const Matrix& m, const MatrixType& t)
   : rep (new octave_matrix (m, t))
 {
   maybe_mutate ();
 }
 
 octave_value::octave_value (const FloatMatrix& m, const MatrixType& t)
@@ -745,18 +732,17 @@ octave_value::octave_value (const PermMa
          ? dynamic_cast<octave_base_value *> (new octave_matrix (Matrix (p)))
          : dynamic_cast<octave_base_value *> (new octave_perm_matrix (p)))
 {
   maybe_mutate ();
 }
 
 octave_value::octave_value (bool b)
   : rep (new octave_bool (b))
-{
-}
+{ }
 
 octave_value::octave_value (const boolMatrix& bm, const MatrixType& t)
   : rep (new octave_bool_matrix (bm, t))
 {
   maybe_mutate ();
 }
 
 octave_value::octave_value (const boolNDArray& bnda)
@@ -1119,41 +1105,37 @@ octave_value::octave_value (const Range&
 octave_value::octave_value (const octave_map& m)
   : rep (new octave_struct (m))
 {
   maybe_mutate ();
 }
 
 octave_value::octave_value (const octave_scalar_map& m)
   : rep (new octave_scalar_struct (m))
-{
-}
+{ }
 
 octave_value::octave_value (const octave_map& m, const std::string& id,
                             const std::list<std::string>& plist)
   : rep (new octave_class (m, id, plist))
 {
   maybe_mutate ();
 }
 
 octave_value::octave_value (const octave_scalar_map& m, const std::string& id,
                             const std::list<std::string>& plist)
   : rep (new octave_class (m, id, plist))
-{
-}
+{ }
 
 octave_value::octave_value (const octave_value_list& l, bool)
   : rep (new octave_cs_list (l))
-{
-}
+{ }
 
 octave_value::octave_value (octave_value::magic_colon)
   : rep (new octave_magic_colon ())
-{
-}
+{ }
 
 octave_value::octave_value (octave_base_value *new_rep, bool borrow)
   : rep (new_rep)
 {
   if (borrow)
     rep->count++;
 }
 
diff --git a/libinterp/parse-tree/pt-check.cc b/libinterp/parse-tree/pt-check.cc
--- a/libinterp/parse-tree/pt-check.cc
+++ b/libinterp/parse-tree/pt-check.cc
@@ -57,18 +57,17 @@ tree_checker::visit_binary_expression (t
   tree_expression *op2 = expr.rhs ();
 
   if (op2)
     op2->accept (*this);
 }
 
 void
 tree_checker::visit_break_command (tree_break_command&)
-{
-}
+{ }
 
 void
 tree_checker::visit_colon_expression (tree_colon_expression& expr)
 {
   tree_expression *op1 = expr.base ();
 
   if (op1)
     op1->accept (*this);
@@ -81,18 +80,17 @@ tree_checker::visit_colon_expression (tr
   tree_expression *op2 = expr.limit ();
 
   if (op2)
     op2->accept (*this);
 }
 
 void
 tree_checker::visit_continue_command (tree_continue_command&)
-{
-}
+{ }
 
 void
 tree_checker::do_decl_command (tree_decl_command& cmd)
 {
   tree_decl_init_list *init_list = cmd.initializer_list ();
 
   if (init_list)
     init_list->accept (*this);
@@ -222,18 +220,17 @@ tree_checker::visit_function_def (tree_f
   octave_function *f = fcn.function_value ();
 
   if (f)
     f->accept (*this);
 }
 
 void
 tree_checker::visit_identifier (tree_identifier& /* id */)
-{
-}
+{ }
 
 void
 tree_checker::visit_if_clause (tree_if_clause& cmd)
 {
   tree_expression *expr = cmd.condition ();
 
   if (expr)
     expr->accept (*this);
@@ -333,38 +330,33 @@ tree_checker::visit_multi_assignment (tr
   tree_expression *rhs = expr.right_hand_side ();
 
   if (rhs)
     rhs->accept (*this);
 }
 
 void
 tree_checker::visit_no_op_command (tree_no_op_command& /* cmd */)
-{
-}
+{ }
 
 void
 tree_checker::visit_anon_fcn_handle (tree_anon_fcn_handle& /* afh */)
-{
-}
+{ }
 
 void
 tree_checker::visit_constant (tree_constant& /* val */)
-{
-}
+{ }
 
 void
 tree_checker::visit_fcn_handle (tree_fcn_handle& /* fh */)
-{
-}
+{ }
 
 void
 tree_checker::visit_funcall (tree_funcall& /* fc */)
-{
-}
+{ }
 
 void
 tree_checker::visit_parameter_list (tree_parameter_list& lst)
 {
   tree_parameter_list::iterator p = lst.begin ();
 
   while (p != lst.end ())
     {
@@ -390,18 +382,17 @@ tree_checker::visit_prefix_expression (t
   tree_expression *e = expr.operand ();
 
   if (e)
     e->accept (*this);
 }
 
 void
 tree_checker::visit_return_command (tree_return_command&)
-{
-}
+{ }
 
 void
 tree_checker::visit_return_list (tree_return_list& lst)
 {
   tree_return_list::iterator p = lst.begin ();
 
   while (p != lst.end ())
     {
diff --git a/liboctave/array/CColVector.cc b/liboctave/array/CColVector.cc
--- a/liboctave/array/CColVector.cc
+++ b/liboctave/array/CColVector.cc
@@ -35,18 +35,17 @@ along with Octave; see the file COPYING.
 #include "mx-base.h"
 #include "mx-inlines.cc"
 #include "oct-cmplx.h"
 
 // Complex Column Vector class
 
 ComplexColumnVector::ComplexColumnVector (const ColumnVector& a)
   : MArray<Complex> (a)
-{
-}
+{ }
 
 bool
 ComplexColumnVector::operator == (const ComplexColumnVector& a) const
 {
   octave_idx_type len = numel ();
   if (len != a.numel ())
     return 0;
   return mx_inline_equal (len, data (), a.data ());
diff --git a/liboctave/array/CMatrix.cc b/liboctave/array/CMatrix.cc
--- a/liboctave/array/CMatrix.cc
+++ b/liboctave/array/CMatrix.cc
@@ -68,28 +68,25 @@ along with Octave; see the file COPYING.
 
 static const Complex Complex_NaN_result (octave::numeric_limits<double>::NaN (),
                                          octave::numeric_limits<double>::NaN ());
 
 // Complex Matrix class
 
 ComplexMatrix::ComplexMatrix (const Matrix& a)
   : ComplexNDArray (a)
-{
-}
+{ }
 
 ComplexMatrix::ComplexMatrix (const RowVector& rv)
   : ComplexNDArray (rv)
-{
-}
+{ }
 
 ComplexMatrix::ComplexMatrix (const ColumnVector& cv)
   : ComplexNDArray (cv)
-{
-}
+{ }
 
 ComplexMatrix::ComplexMatrix (const DiagMatrix& a)
   : ComplexNDArray (a.dims (), 0.0)
 {
   for (octave_idx_type i = 0; i < a.length (); i++)
     elem (i, i) = a.elem (i, i);
 }
 
@@ -104,23 +101,21 @@ ComplexMatrix::ComplexMatrix (const Diag
   : ComplexNDArray (a.dims (), 0.0)
 {
   for (octave_idx_type i = 0; i < a.length (); i++)
     elem (i, i) = a.elem (i, i);
 }
 
 ComplexMatrix::ComplexMatrix (const ComplexRowVector& rv)
   : ComplexNDArray (rv)
-{
-}
+{ }
 
 ComplexMatrix::ComplexMatrix (const ComplexColumnVector& cv)
   : ComplexNDArray (cv)
-{
-}
+{ }
 
 ComplexMatrix::ComplexMatrix (const ComplexDiagMatrix& a)
   : ComplexNDArray (a.dims (), 0.0)
 {
   for (octave_idx_type i = 0; i < a.length (); i++)
     elem (i, i) = a.elem (i, i);
 }
 
@@ -137,18 +132,17 @@ ComplexMatrix::ComplexMatrix (const Diag
   for (octave_idx_type i = 0; i < a.length (); i++)
     elem (i, i) = a.elem (i, i);
 }
 
 // FIXME: could we use a templated mixed-type copy function here?
 
 ComplexMatrix::ComplexMatrix (const boolMatrix& a)
   : ComplexNDArray (a)
-{
-}
+{ }
 
 ComplexMatrix::ComplexMatrix (const charMatrix& a)
   : ComplexNDArray (a.dims (), 0.0)
 {
   for (octave_idx_type i = 0; i < a.rows (); i++)
     for (octave_idx_type j = 0; j < a.cols (); j++)
       elem (i, j) = static_cast<unsigned char> (a.elem (i, j));
 }
diff --git a/liboctave/array/CSparse.cc b/liboctave/array/CSparse.cc
--- a/liboctave/array/CSparse.cc
+++ b/liboctave/array/CSparse.cc
@@ -68,18 +68,17 @@ along with Octave; see the file COPYING.
 // Mendelsohn factorization to seperate the problem into under-determined,
 // well-determined and over-determined parts and solves them seperately
 #if ! defined (USE_QRSOLVE)
 #  include "sparse-dmsolve.h"
 #endif
 
 SparseComplexMatrix::SparseComplexMatrix (const SparseMatrix& a)
   : MSparse<Complex> (a)
-{
-}
+{ }
 
 SparseComplexMatrix::SparseComplexMatrix (const SparseBoolMatrix& a)
   : MSparse<Complex> (a.rows (), a.cols (), a.nnz ())
 {
   octave_idx_type nc = cols ();
   octave_idx_type nz = a.nnz ();
 
   for (octave_idx_type i = 0; i < nc + 1; i++)
diff --git a/liboctave/array/dMatrix.cc b/liboctave/array/dMatrix.cc
--- a/liboctave/array/dMatrix.cc
+++ b/liboctave/array/dMatrix.cc
@@ -63,23 +63,21 @@ along with Octave; see the file COPYING.
 #include "oct-locbuf.h"
 #include "oct-norm.h"
 #include "quit.h"
 
 // Matrix class.
 
 Matrix::Matrix (const RowVector& rv)
   : NDArray (rv)
-{
-}
+{ }
 
 Matrix::Matrix (const ColumnVector& cv)
   : NDArray (cv)
-{
-}
+{ }
 
 Matrix::Matrix (const DiagMatrix& a)
   : NDArray (a.dims (), 0.0)
 {
   for (octave_idx_type i = 0; i < a.length (); i++)
     elem (i, i) = a.elem (i, i);
 }
 
@@ -105,18 +103,17 @@ Matrix::Matrix (const PermMatrix& a)
   for (octave_idx_type i = 0; i < len; i++)
     elem (ia(i), i) = 1.0;
 }
 
 // FIXME: could we use a templated mixed-type copy function here?
 
 Matrix::Matrix (const boolMatrix& a)
   : NDArray (a)
-{
-}
+{ }
 
 Matrix::Matrix (const charMatrix& a)
   : NDArray (a.dims ())
 {
   for (octave_idx_type i = 0; i < a.rows (); i++)
     for (octave_idx_type j = 0; j < a.cols (); j++)
       elem (i, j) = static_cast<unsigned char> (a.elem (i, j));
 }
diff --git a/liboctave/array/fCColVector.cc b/liboctave/array/fCColVector.cc
--- a/liboctave/array/fCColVector.cc
+++ b/liboctave/array/fCColVector.cc
@@ -35,18 +35,17 @@ along with Octave; see the file COPYING.
 #include "mx-base.h"
 #include "mx-inlines.cc"
 #include "oct-cmplx.h"
 
 // FloatComplex Column Vector class
 
 FloatComplexColumnVector::FloatComplexColumnVector (const FloatColumnVector& a)
   : MArray<FloatComplex> (a)
-{
-}
+{ }
 
 bool
 FloatComplexColumnVector::operator == (const FloatComplexColumnVector& a) const
 {
   octave_idx_type len = numel ();
   if (len != a.numel ())
     return 0;
   return mx_inline_equal (len, data (), a.data ());
diff --git a/liboctave/array/fCMatrix.cc b/liboctave/array/fCMatrix.cc
--- a/liboctave/array/fCMatrix.cc
+++ b/liboctave/array/fCMatrix.cc
@@ -66,28 +66,25 @@ along with Octave; see the file COPYING.
 
 static const FloatComplex FloatComplex_NaN_result (octave::numeric_limits<float>::NaN (),
                                                    octave::numeric_limits<float>::NaN ());
 
 // FloatComplex Matrix class
 
 FloatComplexMatrix::FloatComplexMatrix (const FloatMatrix& a)
   : FloatComplexNDArray (a)
-{
-}
+{ }
 
 FloatComplexMatrix::FloatComplexMatrix (const FloatRowVector& rv)
   : FloatComplexNDArray (rv)
-{
-}
+{ }
 
 FloatComplexMatrix::FloatComplexMatrix (const FloatColumnVector& cv)
   : FloatComplexNDArray (cv)
-{
-}
+{ }
 
 FloatComplexMatrix::FloatComplexMatrix (const FloatDiagMatrix& a)
   : FloatComplexNDArray (a.dims (), 0.0)
 {
   for (octave_idx_type i = 0; i < a.length (); i++)
     elem (i, i) = a.elem (i, i);
 }
 
@@ -102,23 +99,21 @@ FloatComplexMatrix::FloatComplexMatrix (
   : FloatComplexNDArray (a.dims (), 0.0)
 {
   for (octave_idx_type i = 0; i < a.length (); i++)
     elem (i, i) = a.elem (i, i);
 }
 
 FloatComplexMatrix::FloatComplexMatrix (const FloatComplexRowVector& rv)
   : FloatComplexNDArray (rv)
-{
-}
+{ }
 
 FloatComplexMatrix::FloatComplexMatrix (const FloatComplexColumnVector& cv)
   : FloatComplexNDArray (cv)
-{
-}
+{ }
 
 FloatComplexMatrix::FloatComplexMatrix (const FloatComplexDiagMatrix& a)
   : FloatComplexNDArray (a.dims (), 0.0)
 {
   for (octave_idx_type i = 0; i < a.length (); i++)
     elem (i, i) = a.elem (i, i);
 }
 
@@ -136,18 +131,17 @@ FloatComplexMatrix::FloatComplexMatrix (
     elem (i, i) = a.elem (i, i);
 }
 
 // FIXME: could we use a templated mixed-type copy function
 // here?
 
 FloatComplexMatrix::FloatComplexMatrix (const boolMatrix& a)
   : FloatComplexNDArray (a)
-{
-}
+{ }
 
 FloatComplexMatrix::FloatComplexMatrix (const charMatrix& a)
   : FloatComplexNDArray (a.dims (), 0.0)
 {
   for (octave_idx_type i = 0; i < a.rows (); i++)
     for (octave_idx_type j = 0; j < a.cols (); j++)
       elem (i, j) = static_cast<unsigned char> (a.elem (i, j));
 }
diff --git a/liboctave/array/fMatrix.cc b/liboctave/array/fMatrix.cc
--- a/liboctave/array/fMatrix.cc
+++ b/liboctave/array/fMatrix.cc
@@ -65,23 +65,21 @@ along with Octave; see the file COPYING.
 #include "oct-locbuf.h"
 #include "oct-norm.h"
 #include "quit.h"
 
 // Matrix class.
 
 FloatMatrix::FloatMatrix (const FloatRowVector& rv)
   : FloatNDArray (rv)
-{
-}
+{ }
 
 FloatMatrix::FloatMatrix (const FloatColumnVector& cv)
   : FloatNDArray (cv)
-{
-}
+{ }
 
 FloatMatrix::FloatMatrix (const FloatDiagMatrix& a)
   : FloatNDArray (a.dims (), 0.0)
 {
   for (octave_idx_type i = 0; i < a.length (); i++)
     elem (i, i) = a.elem (i, i);
 }
 
@@ -107,18 +105,17 @@ FloatMatrix::FloatMatrix (const PermMatr
   for (octave_idx_type i = 0; i < len; i++)
     elem (ia(i), i) = 1.0;
 }
 
 // FIXME: could we use a templated mixed-type copy function here?
 
 FloatMatrix::FloatMatrix (const boolMatrix& a)
   : FloatNDArray (a)
-{
-}
+{ }
 
 FloatMatrix::FloatMatrix (const charMatrix& a)
   : FloatNDArray (a.dims ())
 {
   for (octave_idx_type i = 0; i < a.rows (); i++)
     for (octave_idx_type j = 0; j < a.cols (); j++)
       elem (i, j) = static_cast<unsigned char> (a.elem (i, j));
 }
diff --git a/liboctave/numeric/aepbalance.h b/liboctave/numeric/aepbalance.h
--- a/liboctave/numeric/aepbalance.h
+++ b/liboctave/numeric/aepbalance.h
@@ -39,18 +39,17 @@ namespace octave
 
       aepbalance (void) : balanced_mat (), scale (), ilo (), ihi (), job () { }
 
       aepbalance (const MT& a, bool noperm = false, bool noscal = false);
 
       aepbalance (const aepbalance& a)
         : balanced_mat (a.balanced_mat), scale (a.scale),
           ilo(a.ilo), ihi(a.ihi), job(a.job)
-      {
-      }
+      { }
 
       aepbalance& operator = (const aepbalance& a)
       {
         if (this != &a)
           {
             balanced_mat = a.balanced_mat;
             scale = a.scale;
             ilo = a.ilo;
diff --git a/liboctave/numeric/oct-norm.cc b/liboctave/numeric/oct-norm.cc
--- a/liboctave/numeric/oct-norm.cc
+++ b/liboctave/numeric/oct-norm.cc
@@ -66,18 +66,18 @@ along with Octave; see the file COPYING.
 // the Matrix p-Norm." Numer. Math. 62, 539-555, 1992.
 
 // norm accumulator for the p-norm
 template <typename R>
 class norm_accumulator_p
 {
   R p,scl,sum;
 public:
-  norm_accumulator_p () {} // we need this one for Array
-  norm_accumulator_p (R pp) : p(pp), scl(0), sum(1) {}
+  norm_accumulator_p () { } // we need this one for Array
+  norm_accumulator_p (R pp) : p(pp), scl(0), sum(1) { }
 
   template <typename U>
   void accum (U val)
   {
     octave_quit ();
     R t = std::abs (val);
     if (scl == t) // we need this to handle Infs properly
       sum += 1;
@@ -94,18 +94,18 @@ public:
 };
 
 // norm accumulator for the minus p-pseudonorm
 template <typename R>
 class norm_accumulator_mp
 {
   R p,scl,sum;
 public:
-  norm_accumulator_mp () {} // we need this one for Array
-  norm_accumulator_mp (R pp) : p(pp), scl(0), sum(1) {}
+  norm_accumulator_mp () { } // we need this one for Array
+  norm_accumulator_mp (R pp) : p(pp), scl(0), sum(1) { }
 
   template <typename U>
   void accum (U val)
   {
     octave_quit ();
     R t = 1 / std::abs (val);
     if (scl == t)
       sum += 1;
@@ -123,17 +123,17 @@ public:
 
 // norm accumulator for the 2-norm (euclidean)
 template <typename R>
 class norm_accumulator_2
 {
   R scl,sum;
   static R pow2 (R x) { return x*x; }
 public:
-  norm_accumulator_2 () : scl(0), sum(1) {}
+  norm_accumulator_2 () : scl(0), sum(1) { }
 
   void accum (R val)
   {
     R t = std::abs (val);
     if (scl == t)
       sum += 1;
     else if (scl < t)
       {
@@ -155,32 +155,32 @@ public:
 };
 
 // norm accumulator for the 1-norm (city metric)
 template <typename R>
 class norm_accumulator_1
 {
   R sum;
 public:
-  norm_accumulator_1 () : sum (0) {}
+  norm_accumulator_1 () : sum (0) { }
   template <typename U>
   void accum (U val)
   {
     sum += std::abs (val);
   }
   operator R () { return sum; }
 };
 
 // norm accumulator for the inf-norm (max metric)
 template <typename R>
 class norm_accumulator_inf
 {
   R max;
 public:
-  norm_accumulator_inf () : max (0) {}
+  norm_accumulator_inf () : max (0) { }
   template <typename U>
   void accum (U val)
   {
     if (octave::math::isnan (val))
       max = octave::numeric_limits<R>::NaN ();
     else
       max = std::max (max, std::abs (val));
   }
@@ -188,17 +188,17 @@ public:
 };
 
 // norm accumulator for the -inf pseudonorm (min abs value)
 template <typename R>
 class norm_accumulator_minf
 {
   R min;
 public:
-  norm_accumulator_minf () : min (octave::numeric_limits<R>::Inf ()) {}
+  norm_accumulator_minf () : min (octave::numeric_limits<R>::Inf ()) { }
   template <typename U>
   void accum (U val)
   {
     if (octave::math::isnan (val))
       min = octave::numeric_limits<R>::NaN ();
     else
       min = std::min (min, std::abs (val));
   }
@@ -206,17 +206,17 @@ public:
 };
 
 // norm accumulator for the 0-pseudonorm (hamming distance)
 template <typename R>
 class norm_accumulator_0
 {
   unsigned int num;
 public:
-  norm_accumulator_0 () : num (0) {}
+  norm_accumulator_0 () : num (0) { }
   template <typename U>
   void accum (U val)
   {
     if (val != static_cast<U> (0)) ++num;
   }
   operator R () { return num; }
 };
 
diff --git a/liboctave/util/byte-swap.h b/liboctave/util/byte-swap.h
--- a/liboctave/util/byte-swap.h
+++ b/liboctave/util/byte-swap.h
@@ -41,18 +41,17 @@ swap_bytes (void *ptr)
 {
   for (int i = 0; i < n/2; i++)
     swap_bytes (ptr, i, n-1-i);
 }
 
 template <>
 inline void
 swap_bytes<1> (void *)
-{
-}
+{ }
 
 template <>
 inline void
 swap_bytes<2> (void *ptr)
 {
   swap_bytes (ptr, 0, 1);
 }
 
@@ -85,13 +84,12 @@ swap_bytes (void *ptr, int len)
       swap_bytes<n> (t);
       t += n;
     }
 }
 
 template <>
 inline void
 swap_bytes<1> (void *, int)
-{
-}
+{ }
 
 #endif
 
diff --git a/liboctave/util/cmd-hist.cc b/liboctave/util/cmd-hist.cc
--- a/liboctave/util/cmd-hist.cc
+++ b/liboctave/util/cmd-hist.cc
@@ -835,23 +835,21 @@ namespace octave
   bool
   command_history::do_add (const std::string&)
   {
     return false;
   }
 
   void
   command_history::do_remove (int)
-  {
-  }
+  { }
 
   void
   command_history::do_clear (void)
-  {
-  }
+  { }
 
   int
   command_history::do_where (void) const
   {
     return 0;
   }
 
   int
@@ -875,35 +873,33 @@ namespace octave
   int
   command_history::do_current_number (void) const
   {
     return (xsize > 0) ? do_base () + do_where () : -1;
   }
 
   void
   command_history::do_stifle (int)
-  {
-  }
+  { }
 
   int
   command_history::do_unstifle (void)
   {
     return -1;
   }
 
   int
   command_history::do_is_stifled (void) const
   {
     return 0;
   }
 
   void
   command_history::do_set_mark (int)
-  {
-  }
+  { }
 
   int
   command_history::do_goto_mark (void)
   {
     return 0;
   }
 
   void
@@ -982,18 +978,17 @@ namespace octave
   std::string
   command_history::do_get_entry (int) const
   {
     return "";
   }
 
   void
   command_history::do_replace_entry (int, const std::string&)
-  {
-  }
+  { }
 
   void
   command_history::do_clean_up_and_save (const std::string& f_arg, int)
   {
     if (initialized)
       {
         std::string f = f_arg;
 
diff --git a/liboctave/util/oct-sort.cc b/liboctave/util/oct-sort.cc
--- a/liboctave/util/oct-sort.cc
+++ b/liboctave/util/oct-sort.cc
@@ -114,24 +114,22 @@ The Python license is
 #include "lo-mappers.h"
 #include "quit.h"
 #include "oct-sort.h"
 #include "oct-locbuf.h"
 
 template <typename T>
 octave_sort<T>::octave_sort (void) :
   compare (ascending_compare), ms (0)
-{
-}
+{ }
 
 template <typename T>
 octave_sort<T>::octave_sort (compare_fcn_type comp)
   : compare (comp), ms (0)
-{
-}
+{ }
 
 template <typename T>
 octave_sort<T>::~octave_sort ()
 {
   delete ms;
 }
 
 template <typename T>
