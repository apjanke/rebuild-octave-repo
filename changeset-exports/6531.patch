# HG changeset patch
# User jwe
# Date 1176833860 0
#      Tue Apr 17 18:17:40 2007 +0000
# Node ID c2609d0502bbaaa5c76544a95740e066054a4ff2
# Parent  f80cc454860d472e5c1746d76d0ead61c40405d2
[project @ 2007-04-17 18:17:40 by jwe]

diff --git a/doc/ChangeLog b/doc/ChangeLog
--- a/doc/ChangeLog
+++ b/doc/ChangeLog
@@ -1,8 +1,15 @@
+2007-04-17  David Bateman  <dbateman@free.fr>
+
+	* interpreter/linalg.txi (Techniques used for Linear Algebra):
+	New node.
+	* interpreter/octave.texi: Include it in menu.
+	* interpreter/sparse.txi: Delete discusion of matrix_type.
+
 2007-04-16  John W. Eaton  <jwe@octave.org>
 
 	* interpreter/stream.txi: Delete.
 	* interpreter/Makefile.in (SUB_SOURCE): Remove it from the list.
 
 2007-04-16  Søren Hauberg  <hauberg@gmail.com>
 
 	* intrepreter/stmt.txi: Improve documentation of switch statement.
@@ -14,23 +21,16 @@ 2007-04-16  Søren Hauberg  <hauberg@gmail.com>
 	Remove menu entry for I/O streams.
 
 	* interpreter/image.txi: Update docs.
 
 2007-04-11  Søren Hauberg  <hauberg@gmail.com>
 
 	* interpreter/container.txi: Document indexing with ().
 
-2007-04-11  David Bateman  <dbateman@free.fr>
-
-	* interpreter/linalg.txi (Techniques used for Linear Algebra):
-	New node.
-	* interpreter/octave.texi: Include it in menu.
-	* interpreter/sparse.txi: Delete discusion of matrix_type.
-
 2007-04-11  Søren Hauberg  <hauberg@gmail.com>
 
 	* interpreter/container.txi: Improve cell array documentation.
 
 2007-04-09  Søren Hauberg  <hauberg@gmail.com>
 
 	* interpreter/func.txi: Document varargin, varargout, and default
 	argument values.
diff --git a/doc/interpreter/linalg.txi b/doc/interpreter/linalg.txi
--- a/doc/interpreter/linalg.txi
+++ b/doc/interpreter/linalg.txi
@@ -6,21 +6,69 @@
 @chapter Linear Algebra
 
 This chapter documents the linear algebra functions of Octave.
 Reference material for many of these functions may be found in
 Golub and Van Loan, @cite{Matrix Computations, 2nd Ed.}, Johns Hopkins,
 1989, and in @cite{@sc{Lapack} Users' Guide}, SIAM, 1992.
 
 @menu
+* Techniques used for Linear Algebra::
 * Basic Matrix Functions::      
 * Matrix Factorizations::       
 * Functions of a Matrix::       
 @end menu
 
+@node Techniques used for Linear Algebra
+@section Techniques used for Linear Algebra
+
+Octave includes a poly-morphic solver, that selects an appropriate
+matrix factorization depending on the properties of the matrix itself. 
+Generally, the cost of determining the matrix type is small relative to 
+the cost of factorizing the matrix itself, but in any case the matrix 
+type is cached once it is calculated, so that it is not re-determined 
+each time it is used in a linear equation.
+
+The selection tree for how the linear equation is solve or a matrix
+inverse is form is given by
+
+@enumerate 1
+@item If the matrix is upper or lower triangular sparse a forward or
+backward substition using the @sc{Lapack} xTRTRS function, and goto 4.
+
+@c Permuted triangular matrices currently disabled in the code
+@c
+@c @item If the matrix is a upper triangular matrix with column permutations
+@c or lower triangular matrix with row permutations, perform a forward or
+@c backward substitution, and goto 5.
+
+@item If the matrix is square, hermitian with a real positive diagonal,
+attempt Cholesky factorization using the @sc{Lapack} xPOTRF function.
+
+@item If the Cholesky factorization failed or the matrix is not
+hermitian with a real positive diagonal, and the matrix is square, factorize 
+using the @sc{Lapack} xGETRF function.
+
+@item  If the matrix is not square, or any of the previous solvers flags
+a singular or near singular matrix, find a least squares solution using
+the @sc{Lapack} xGELSS function.
+@end enumerate
+
+The user can force the type of the matrix with the @code{matrix_type}
+function. This overcomes the cost of discovering the type of the matrix.
+However, it should be noted incorrectly identifying the type of the matrix
+will lead to unpredictable results, and so @code{matrix_type} should be
+used with care.
+
+It should be noted that the test for whether a matrix is a candidate for
+Cholesky factorization, performed above and by the @code{matrix_type}
+function, does not give a certainty that the matrix is
+Hermitian. However, the attempt to factorize the matrix will quickly
+flag a non-Hermitian matrix.
+
 @node Basic Matrix Functions
 @section Basic Matrix Functions
 
 @DOCSTRING(balance)
 
 @DOCSTRING(cond)
 
 @DOCSTRING(det)
@@ -30,16 +78,18 @@ 1989, and in @cite{@sc{Lapack} Users' Gu
 @DOCSTRING(dot)
 
 @DOCSTRING(eig)
 
 @DOCSTRING(givens)
 
 @DOCSTRING(inv)
 
+@DOCSTRING(matrix_type)
+
 @DOCSTRING(norm)
 
 @DOCSTRING(null)
 
 @DOCSTRING(orth)
 
 @DOCSTRING(pinv)
 
diff --git a/doc/interpreter/octave.texi b/doc/interpreter/octave.texi
--- a/doc/interpreter/octave.texi
+++ b/doc/interpreter/octave.texi
@@ -377,16 +377,17 @@ Arithmetic
 * Complex Arithmetic::          
 * Trigonometry::                
 * Sums and Products::           
 * Special Functions::           
 * Mathematical Constants::      
 
 Linear Algebra
 
+* Techniques used for Linear Algebra::
 * Basic Matrix Functions::      
 * Matrix Factorizations::       
 * Functions of a Matrix::       
 
 Sparse Matrices
 
 * Basics::
 * Sparse Linear Algebra::
diff --git a/doc/interpreter/preface.txi b/doc/interpreter/preface.txi
--- a/doc/interpreter/preface.txi
+++ b/doc/interpreter/preface.txi
@@ -52,34 +52,34 @@ it, and by reporting any problems you ma
 * How You Can Contribute to Octave::  
 * Distribution::                
 @end menu
 
 @node Acknowledgements
 @unnumberedsec Acknowledgements
 @cindex acknowledgements
 
-Many people have already contributed to Octave's development.  In
-addition to John W. Eaton, the following people have helped write parts
-of Octave or helped out in various other ways (listed alphbetically).
+Many people have already contributed to Octave's development.  The
+following people have helped write parts of Octave or helped out in
+various other ways (listed alphbetically).
 
 @noindent
 Andy Adler, Joel Andersson, Muthiah Annamalai,
 Shai Ayal, Roger Banks, Ben Barrowes, Alexander Barth, 
 David Bateman, Heinz Bauschke, Karl Berry, David Billinghurst, 
 Don Bindner, Jakub Bogusz, Marcus Brinkmann, Remy Bruno, 
 Marco Caliari, Daniel Calvelo, John C. Campbell, Jean-Francois Cardoso, 
 Joao Cardoso, Larrie Carr, David Castelow, Vincent Cautaerts, 
 Clinton Chee, Albert Chin-A-Young, J. D. Cole, Martin Costabel, 
 Michael Creel, Jeff Cunningham, Martin Dalecki, Jorge Barros de Abreu,
 Philippe Defert, Bill Denney, David M. Doolin, Pascal A. Dupuis,
 John W. Eaton, Dirk Eddelbuettel, Paul Eggert, Stephen Eglen, Peter Ekberg, 
 Rolf Fabian, Stephen Fegan, Ramon Garcia Fernandez, Torsten Finke, 
 Jose Daniel Munoz Frias, Castor Fu, Eduardo Gallestey, Walter Gautschi, 
-Klaus Gebhardt, Driss Ghaddab, Nicolo Giorgetti, From Michael Goffioul, 
+Klaus Gebhardt, Driss Ghaddab, Nicolo Giorgetti,
 Michael Goffioul, Glenn Golden, Tomislav Goles, Keith Goodman, 
 Etienne Grossmann, Kai Habel, William Poetra Yoga Hadisoeseno, Benjamin Hall, 
 Kim Hansen, Soren Hauberg, Daniel Heiserer, Yozo Hida, 
 Roman Hodek, A. Scottedward Hodel, Richard Allan Holcombe, Tom Holroyd, 
 David Hoover, Kurt Hornik, Christopher Hulbert, Cyril Humbert, 
 Teemu Ikonen, Alan W. Irwin, Geoff Jacobsen, Mats Jansson, 
 Cai Jianming, Steven G. Johnson, Heikki Junes, Atsushi Kajita, 
 Mohamed Kamoun, Lute Kamstra, Mumit Khan, Paul Kienzle, 
diff --git a/doc/interpreter/sparse.txi b/doc/interpreter/sparse.txi
--- a/doc/interpreter/sparse.txi
+++ b/doc/interpreter/sparse.txi
@@ -1420,18 +1420,16 @@ For a symmetric positive definite matrix
 @subsubsection Linear algebra
 @table @asis
 @item cholinc
 @emph{Not implemented}
 @item condest
 @emph{Not implemented}
 @item eigs
 @emph{Not implemented}
-@item @ref{matrix_type}
-Identify the matrix type or mark a matrix as a particular type.
 @item @ref{normest}
 Estimates the 2-norm of the matrix @var{a} using a power series analysis.
 @item @ref{spchol}
 Compute the Cholesky factor, R, of the symmetric positive definite.
 @item @ref{spcholinv}
 Use the Cholesky factorization to compute the inverse of the
 sparse symmetric positive definite matrix A.
 @item @ref{spchol2inv}
@@ -1533,18 +1531,16 @@ Return a diagonal matrix with the sparse
 * full::	returns a full storage matrix from a sparse one See also:
 		sparse
 * gplot::	Plots a graph defined by @var{A} and @var{xy} in the graph 
 		theory sense.
 * issparse::	Return 1 if the value of the expression EXPR is a sparse
 		matrix.
 * luinc::	Produce the incomplete LU factorization of the sparse 
 		A.
-* matrix_type:: Identify the matrix type or mark a matrix as a particular
-		type.
 * normest:: 	Estimates the 2-norm of the matrix @var{a} using a power 
 		series analysis.
 * nnz:: 	returns number of non zero elements in SM See also: sparse
 * nonzeros::	Returns a vector of the non-zero values of the sparse
 		matrix S
 * nzmax::	Returns the amount of storage allocated to the sparse
 		matrix SM.
 * pcg::		Solves linear system of equations by means of the 
@@ -1651,28 +1647,22 @@ Return a diagonal matrix with the sparse
 
 @DOCSTRING(gplot)
 
 @node issparse, luinc, gplot, Function Reference
 @subsubsection issparse
 
 @DOCSTRING(issparse)
 
-@node luinc, matrix_type, issparse, Function Reference
+@node luinc, normest, issparse, Function Reference
 @subsubsection luinc
 
 @DOCSTRING(luinc)
 
-@node matrix_type, normest, luinc, Function Reference
-@subsubsection matrix_type
-
-@DOCSTRING(matrix_type)
-
-
-@node normest, nnz, matrix_type, Function Reference
+@node normest, nnz, luinc, Function Reference
 @subsubsection normest
 
 @DOCSTRING(normest)
 
 @node nnz, nonzeros, normest, Function Reference
 @subsubsection nnz
 
 @DOCSTRING(nnz)
