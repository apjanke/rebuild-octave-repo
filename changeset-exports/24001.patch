# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1504547714 14400
#      Mon Sep 04 13:55:14 2017 -0400
# Node ID 8e4abfaadd971ea1e64ac3c481fc3b2364bbdc71
# Parent  d9ef3699b6142dc1b508e27647e6254d0653a5ee
attempt better cleanup of Octave interpreter thread in GUI

* main-window.cc (main_window::main_window): Connect m_interpreter
octave_finished_signal to m_main_thread quit slot.  Connect
m_main_thread finished signal to m_main_thread deleteLater slot.

(main_window::~main_window): Don't attempt to terminate or delete
m_main_thread.
(main_window::handle_octave_finished): Don't terminate m_main_thread.

diff --git a/libgui/src/main-window.cc b/libgui/src/main-window.cc
--- a/libgui/src/main-window.cc
+++ b/libgui/src/main-window.cc
@@ -212,49 +212,48 @@ main_window::main_window (QWidget *p, oc
            this, SLOT (handle_octave_ready ()));
 
   connect (m_interpreter, SIGNAL (octave_ready_signal ()),
            doc_browser_window, SLOT (load_info_file ()));
 
   connect (m_interpreter, SIGNAL (octave_finished_signal (int)),
            this, SLOT (handle_octave_finished (int)));
 
+  connect (m_interpreter, SIGNAL (octave_finished_signal (int)),
+           m_main_thread, SLOT (quit ()));
+
+  connect (m_main_thread, SIGNAL (finished ()),
+           m_main_thread, SLOT (deleteLater ()));
+
   m_interpreter->moveToThread (m_main_thread);
 
   m_main_thread->start ();
 }
 
 main_window::~main_window (void)
 {
+  // Note that we don't delete m_main_thread here.  That is handled by
+  // deleteLater slot that is called when the m_main_thread issues a
+  // finished signal.
+
   // Destroy the terminal first so that STDERR stream is redirected back
   // to its original pipe to capture error messages at exit.
 
   delete editor_window;     // first one for dialogs of modified editor-tabs
   delete _external_editor;
   delete command_window;
   delete workspace_window;
   delete doc_browser_window;
   delete file_browser_window;
   delete history_window;
   delete status_bar;
   delete _workspace_model;
   delete variable_editor_window;
   delete m_interpreter;
 
-  // We are supposed to arrive here after the main thread is done, but
-  // if that doesn't happen for some reason, then terminate and wait
-  // before deleting it.
-  if (! m_main_thread->isFinished ())
-    {
-      m_main_thread->terminate ();
-      // FIXME: should there be a limit on how long we wait?
-      m_main_thread->wait ();
-    }
-  delete m_main_thread;
-
   if (find_files_dlg)
     {
       delete find_files_dlg;
       find_files_dlg = nullptr;
     }
   if (release_notes_window)
     {
       delete release_notes_window;
@@ -1906,22 +1905,16 @@ main_window::handle_octave_ready ()
 
   if (_start_gui)
     focus_command_window ();  // make sure that the command window has focus
 }
 
 void
 main_window::handle_octave_finished (int exit_status)
 {
-  // The main thread is done, so we can terminate it and wait for it to
-  // finish.
-  m_main_thread->terminate ();
-  // FIXME: should there be a limit on how long we wait?
-  m_main_thread->wait ();
-
   qApp->exit (exit_status);
 }
 
 void
 main_window::construct_octave_qt_link (void)
 {
   _octave_qt_link = new octave_qt_link (this, m_app_context);
 
