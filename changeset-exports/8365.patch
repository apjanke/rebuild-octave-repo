# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1228355847 18000
#      Wed Dec 03 20:57:27 2008 -0500
# Node ID 65ca196fff28ed610111cb471e634e864c8af659
# Parent  d42a6ae64e92bbcc194c440e513ee6b6e3c1c9ac
style fixes

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,12 @@
+2008-12-03  John W. Eaton  <jwe@octave.org>
+
+	* debug.cc (bp_table::do_get_breakpoint_list): Style fixes.
+
 2008-11-25  Jaroslav Hajek  <highegg@gmail.com>
 
 	* ov.cc (octave_value::is_equal): New member function.
 	* ov.h: Declare it.
 	* pt-select.cc (tree_switch_case::label_matches): Call
 	octave_value::is_equal.
 
 2008-11-25  Jaroslav Hajek  <highegg@gmail.com>
diff --git a/src/debug.cc b/src/debug.cc
--- a/src/debug.cc
+++ b/src/debug.cc
@@ -304,27 +304,25 @@ bp_table::do_get_breakpoint_list (const 
 {
   fname_line_map retval;
 
   // Clear the breakpoints in the function if it has been updated.
   // FIXME:  This is a bad way of doing this, but I can't think of another.  The
   // problem is due to the fact that out_of_date_check(...) calls 
   // remove_breakpoints_in_file(...), which in turn modifies bp_map while we are
   // in the middle of iterating through it.
+
   std::list<octave_user_code*> usercode_list;
+
   for (breakpoint_map_iterator it = bp_map.begin (); it != bp_map.end (); it++)
-    {
-      octave_user_code *f = it->second;
-      usercode_list.push_back(f);
-    }
+    usercode_list.push_back (it->second);
 
-  for (std::list<octave_user_code*>::iterator it = usercode_list.begin (); it != usercode_list.end (); it++)
-    {
-      out_of_date_check(*it);
-    }
+  for (std::list<octave_user_code*>::iterator it = usercode_list.begin ();
+       it != usercode_list.end (); it++)
+    out_of_date_check (*it);
 
 
   // Iterate through each of the files in the map and get the 
   // name and list of breakpoints.
   for (breakpoint_map_iterator it = bp_map.begin (); it != bp_map.end (); it++)
     {
       if (fname_list.length () == 0
 	  || do_find_bkpt_list (fname_list, it->first) != "")
