# HG changeset patch
# User Rik <rik@octave.org>
# Date 1424125783 28800
#      Mon Feb 16 14:29:43 2015 -0800
# Node ID abc158e7122ea4e727a8cbefd3b5068d2b9507fe
# Parent  c9dc27cad3c05802454dcd0c09b04ddac4ea253b
Use epswrite/eps2write depending on capabilities of ghostscript (bug #44186).

* print.m: Test whether ghostscript supports newer eps2write or only older
epswrite.  Cache value for future print jobs.

diff --git a/scripts/plot/util/print.m b/scripts/plot/util/print.m
--- a/scripts/plot/util/print.m
+++ b/scripts/plot/util/print.m
@@ -468,16 +468,27 @@ function cmd = epstool (opts, filein, fi
   ## command shell, the -tight and -preview options are disabled if
   ## output must be piped.
 
   ## DOS Shell:
   ##   gs.exe [...] -sOutputFile=<filein> - & epstool -bbox -preview-tiff <filein> <fileout> & del <filein>
   ## Unix Shell;
   ##   cat > <filein> ; epstool -bbox -preview-tiff <filein> <fileout> ; rm <filein>
 
+  ## HACK: Keep track of whether ghostscript supports epswrite or eps2write.
+  persistent epsdevice;
+  if (isempty (epsdevice))
+    [status, devlist] = system (sprintf ("%s -h", opts.ghostscript.binary));
+    if (isempty (strfind (devlist, "eps2write")))
+      epsdevice = "epswrite";
+    else
+      epsdevice = "eps2write";
+    endif
+  endif
+  
   dos_shell = (ispc () && ! isunix ());
 
   cleanup = "";
   if (nargin < 3)
     fileout = opts.name;
   elseif (isempty (fileout))
     fileout = "-";
   endif
@@ -539,17 +550,17 @@ function cmd = epstool (opts, filein, fi
       if (! isempty (cmd))
         cmd = sprintf ("%s --quiet %s %s %s ", opts.epstool_binary,
                        cmd, filein, fileout);
       endif
       if (pipein)
         if (dos_shell)
           filein(filein=="'") = "\"";
           gs_cmd = __ghostscript__ ("binary", opts.ghostscript.binary,
-                                    "device", "epswrite",
+                                    "device", epsdevice,
                                     "source", "-",
                                     "output", filein);
           cmd = sprintf ("%s %s & %s", gs_cmd, filein, cmd);
         else
           cmd = sprintf ("cat > %s ; %s", filein, cmd);
         endif
       endif
       if (pipeout)
@@ -571,28 +582,28 @@ function cmd = epstool (opts, filein, fi
       endif
     elseif (isempty (opts.epstool_binary))
       error ("print:noepstool", "print.m: 'epstool' not found in PATH");
     endif
   else
     if (pipein && pipeout)
       if (dos_shell)
         cmd = __ghostscript__ ("binary", opts.ghostscript.binary,
-                               "device", "epswrite",
+                               "device", epsdevice,
                                "source", "-",
                                "output", "-");
       else
         cmd = " cat ";
       endif
     elseif (pipein && ! pipeout)
       if (dos_shell)
         ## ghostscript expects double, not single, quotes
         fileout(fileout=="'") = "\"";
         cmd = __ghostscript__ ("binary", opts.ghostscript.binary,
-                               "device", "epswrite",
+                               "device", epsdevice,
                                "source", "-",
                                "output", fileout);
       else
         cmd = sprintf (" cat > %s ", fileout);
       endif
     elseif (! pipein && pipeout)
       if (dos_shell)
         cmd = sprintf (" type %s ", filein);
