# HG changeset patch
# User Philip Nienhuis <prnienhuis@users.sf.net>
# Date 1310949356 25200
#      Sun Jul 17 17:35:56 2011 -0700
# Node ID abd4093753e0ad2f3da53a4c2230b62ce3a69e7f
# Parent  372eb47cd6a5f6d07eb1ffd175b66c63d1e7a607
textread.m: Tests for function

* textread.m: Add 4 tests for function.

diff --git a/scripts/io/textread.m b/scripts/io/textread.m
--- a/scripts/io/textread.m
+++ b/scripts/io/textread.m
@@ -19,35 +19,35 @@
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {[@var{a}, @dots{}] =} textread (@var{filename})
 ## @deftypefnx {Function File} {[@var{a}, @dots{}] =} textread (@var{filename}, @var{format})
 ## @deftypefnx {Function File} {[@var{a}, @dots{}] =} textread (@var{filename}, @var{format}, @var{prop1}, @var{value1}, @dots{})
 ## Read data from a text file.
 ##
 ## The file @var{filename} is read and parsed according to @var{format}.  The
 ## function behaves like @code{strread} except it works by parsing a file
-## instead
-## of a string.  See the documentation of @code{strread} for details.
+## instead of a string.  See the documentation of @code{strread} for details.
 ## In addition to the options supported by @code{strread}, this function
 ## supports one more:
 ## @itemize
 ## @item "headerlines":
 ## @end itemize
 ## The first @var{value} number of lines of @var{str} are skipped.
 ## @seealso{strread, load, dlmread, fscanf}
 ## @end deftypefn
 
 function varargout = textread (filename, format = "%f", varargin)
+
   ## Check input
   if (nargin < 1)
     print_usage ();
   endif
 
   if (!ischar (filename) || !ischar (format))
-    error ("textread: first and second input arguments must be strings");
+    error ("textread: FILENAME and FORMAT arguments must be strings");
   endif
 
   ## Read file
   fid = fopen (filename, "r");
   if (fid == -1)
     error ("textread: could not open '%s' for reading", filename);
   endif
 
@@ -64,8 +64,25 @@ function varargout = textread (filename,
 
   str = fread (fid, "char=>char").';
   fclose (fid);
 
   ## Call strread to make it do the real work
   [varargout{1:max (nargout, 1)}] = strread (str, format, varargin {:});
 
 endfunction
+
+
+%!test
+%! f = tmpnam();
+%! d = rand (5, 3);
+%! dlmwrite (f, d, 'precision', '%5.2f');
+%! [a, b, c] = textread (f, "%f %f %f", "delimiter", ",", "headerlines", 3);
+%! unlink(f);
+%! assert (a, d(4:5, 1), 1e-2);
+%! assert (b, d(4:5, 2), 1e-2);
+%! assert (c, d(4:5, 3), 1e-2);
+
+%% Test input validation
+%!error textread ()
+%!error textread (1)
+%!error textread ("fname", 1)
+
