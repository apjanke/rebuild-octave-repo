# HG changeset patch
# User dbateman
# Date 1196712601 0
#      Mon Dec 03 20:10:01 2007 +0000
# Node ID 22f210ca8cc1b138a024c364084dc01c63df06f6
# Parent  7e248dd1e6d5bbc9c9d75fabdac2f8519f506ca5
[project @ 2007-12-03 20:10:01 by dbateman]

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,14 @@
+2007-12-03  David Bateman  <dbateman@free.fr>
+
+	* Sparse.cc (template <class LT, class RT> int assign
+	(Sparse<LT>&,  const Sparse<RT>&)): Only set return matrix size to
+	rhs values if both no. rows and columns are zero.
+
 2007-11-30  John W. Eaton  <jwe@octave.org>
 
 	* oct-sort.cc, oct-sort.h: Style fixes.
 
 	* lo-math.h: New file.
 	* Makefile.in (INCLUDES): Add it to the list.
 	* liboctave/Array2.h, liboctave/ArrayN.h, liboctave/CmplxDET.cc,
 	liboctave/DASPK.cc, liboctave/DASPK.h, liboctave/DASRT.cc,
diff --git a/liboctave/Sparse.cc b/liboctave/Sparse.cc
--- a/liboctave/Sparse.cc
+++ b/liboctave/Sparse.cc
@@ -2466,21 +2466,24 @@ assign (Sparse<LT>& lhs, const Sparse<RT
   if (n_idx == 2)
     {
       octave_idx_type n = idx_i.freeze (lhs_nr, "row", true);
       octave_idx_type m = idx_j.freeze (lhs_nc, "column", true);
 
       int idx_i_is_colon = idx_i.is_colon ();
       int idx_j_is_colon = idx_j.is_colon ();
 
-      if (idx_i_is_colon)
-	n = lhs_nr > 0 ? lhs_nr : rhs_nr;
-
-      if (idx_j_is_colon)
-	m = lhs_nc > 0 ? lhs_nc : rhs_nc;
+      if (lhs_nr == 0 && lhs_nc == 0)
+	{
+	  if (idx_i_is_colon)
+	    n = rhs_nr;
+
+	  if (idx_j_is_colon)
+	    m = rhs_nc;
+	}
 
       if (idx_i && idx_j)
 	{
 	  if (rhs_nr == 0 && rhs_nc == 0)
 	    {
 	      lhs.maybe_delete_elements (idx_i, idx_j);
 	    }
 	  else
