# HG changeset patch
# User jwe
# Date 947747984 0
#      Thu Jan 13 07:19:44 2000 +0000
# Node ID 61e40232a4e8cba6eddbd41ac9b0eed7888a17a0
# Parent  12f2097a2ed896aaeef189e835584f4ce48e04e1
[project @ 2000-01-13 07:19:43 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -3,16 +3,19 @@ Thu Jan 13 00:56:57 2000  John W. Eaton 
 	* control/obsolete: New directory
 	* control/obsolete/swaprows.m: Move here from control directory.
 	* control/obsolete/swapcols.m: Likewise.
 	* control/obsolete/dlqg.m: Likewise.
 	* control/obsolete/minfo.m: Likewise.
 	* control/obsolete/packsys.m: Likewise.
 	* control/obsolete/qzval.m: Likewise.
 	* control/obsolete/unpacksys.m: Likewise.
+	* control/obsolete/series.m: Likewise.
+	* control/obsolete/syschnames.m: Likewise.
+	* polynomial/polyout.m: Likewise.
 
 2000-01-13  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* general/fliplr.m: Eliminate useless copy of arg.
 	* general/flipud.m: Ditto.
 
 2000-01-11  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
diff --git a/scripts/control/polyout.m b/scripts/control/polyout.m
deleted file mode 100644
--- a/scripts/control/polyout.m
+++ /dev/null
@@ -1,78 +0,0 @@
-## Copyright (C) 1995, 1998 Auburn University.  All rights reserved.
-##
-## This file is part of Octave.
-##
-## Octave is free software; you can redistribute it and/or modify it
-## under the terms of the GNU General Public License as published by the
-## Free Software Foundation; either version 2, or (at your option) any
-## later version.
-##
-## Octave is distributed in the hope that it will be useful, but WITHOUT
-## ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
-## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
-## for more details.
-##
-## You should have received a copy of the GNU General Public License
-## along with Octave; see the file COPYING.  If not, write to the Free
-## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
-
-## -*- texinfo -*-
-## @deftypefn {Function File} {@var{y} =} polyout (@var{c}@{, @var{x}@})
-## write formatted polynomial 
-## @example
-##    c(x) = c(1) * x^n + ... + c(n) x + c(n+1)
-## @end example
-##  to string @var{y} or to the screen (if @var{y} is omitted)
-##  @var{x} defaults to the string @code{"s"}
-## @end deftypefn
-## @seealso{polyval, polyvalm, poly, roots, conv, deconv, residue, 
-## filter, polyderiv, and polyinteg}
-
-## Author: A. S. Hodel <a.s.hodel@eng.auburn.edu>
-## Created: May 1995
-## Nov 1998: Correctly handles complex coefficients
-  
-function y = polyout (c, x)
-
-  if (nargin < 1 ) || (nargin > 2) || (nargout < 0 ) || (nargout > 1)
-    usage("[y = ] polyout(c,[x])");
-  endif
-
-  if (!is_vector(c))
-    error("polyout: first argument must be a vector");
-  endif
-  
-  if (nargin == 1)
-    x = "s";
-  elseif( ! isstr(x) )
-    error("polyout: second argument must be a string");
-  endif
-
-  n = length(c);
-  if(n > 0)
-    n1 = n+1;
-
-    if( imag(c(1)) )     tmp = com2str(c(1))
-    else                 tmp = num2str(c(1));       endif
-
-    for ii=2:n
-      if(real(c(ii)) < 0)     ns = " - ";    c(ii) = -c(ii);
-      else                    ns = " + ";                      endif
-
-      if( imag(c(ii)) )       nstr = sprintf("(%s)",com2str(c(ii)) );
-      else                    nstr = num2str(c(ii));           endif
-
-      tmp = sprintf("%s*%s^%d%s%s",tmp,x,n1-ii,ns,nstr);
-      
-    endfor
-  else
-    tmp = " ";
-  endif
-
-  if(nargout == 0)
-    disp(tmp)
-  else
-    y = tmp;
-  endif
-
-endfunction
diff --git a/scripts/polynomial/polyout.m b/scripts/polynomial/polyout.m
new file mode 100644
--- /dev/null
+++ b/scripts/polynomial/polyout.m
@@ -0,0 +1,78 @@
+## Copyright (C) 1995, 1998 Auburn University.  All rights reserved.
+##
+## This file is part of Octave.
+##
+## Octave is free software; you can redistribute it and/or modify it
+## under the terms of the GNU General Public License as published by the
+## Free Software Foundation; either version 2, or (at your option) any
+## later version.
+##
+## Octave is distributed in the hope that it will be useful, but WITHOUT
+## ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+## for more details.
+##
+## You should have received a copy of the GNU General Public License
+## along with Octave; see the file COPYING.  If not, write to the Free
+## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
+
+## -*- texinfo -*-
+## @deftypefn {Function File} {@var{y} =} polyout (@var{c}@{, @var{x}@})
+## write formatted polynomial 
+## @example
+##    c(x) = c(1) * x^n + ... + c(n) x + c(n+1)
+## @end example
+##  to string @var{y} or to the screen (if @var{y} is omitted)
+##  @var{x} defaults to the string @code{"s"}
+## @end deftypefn
+## @seealso{polyval, polyvalm, poly, roots, conv, deconv, residue, 
+## filter, polyderiv, and polyinteg}
+
+## Author: A. S. Hodel <a.s.hodel@eng.auburn.edu>
+## Created: May 1995
+## Nov 1998: Correctly handles complex coefficients
+  
+function y = polyout (c, x)
+
+  if (nargin < 1 ) || (nargin > 2) || (nargout < 0 ) || (nargout > 1)
+    usage("[y = ] polyout(c,[x])");
+  endif
+
+  if (!is_vector(c))
+    error("polyout: first argument must be a vector");
+  endif
+  
+  if (nargin == 1)
+    x = "s";
+  elseif( ! isstr(x) )
+    error("polyout: second argument must be a string");
+  endif
+
+  n = length(c);
+  if(n > 0)
+    n1 = n+1;
+
+    if( imag(c(1)) )     tmp = com2str(c(1))
+    else                 tmp = num2str(c(1));       endif
+
+    for ii=2:n
+      if(real(c(ii)) < 0)     ns = " - ";    c(ii) = -c(ii);
+      else                    ns = " + ";                      endif
+
+      if( imag(c(ii)) )       nstr = sprintf("(%s)",com2str(c(ii)) );
+      else                    nstr = num2str(c(ii));           endif
+
+      tmp = sprintf("%s*%s^%d%s%s",tmp,x,n1-ii,ns,nstr);
+      
+    endfor
+  else
+    tmp = " ";
+  endif
+
+  if(nargout == 0)
+    disp(tmp)
+  else
+    y = tmp;
+  endif
+
+endfunction
