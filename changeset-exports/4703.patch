# HG changeset patch
# User jwe
# Date 1074729669 0
#      Thu Jan 22 00:01:09 2004 +0000
# Node ID 72c28fd651c4966307e99d50957b15ebb7be60cc
# Parent  4d2e1623c9a9c0b013f4f8d21404b9b61c508142
[project @ 2004-01-22 00:01:09 by jwe]

diff --git a/liboctave/Array.cc b/liboctave/Array.cc
--- a/liboctave/Array.cc
+++ b/liboctave/Array.cc
@@ -2732,17 +2732,17 @@ assignN (Array<LT>& lhs, const Array<RT>
 
       // Check that RHS dimensions are the same length as the
       // corresponding LHS dimensions.
 
       int rhs_dims_len = rhs_dims.length ();
 
       for (int j = 0; j < idx_is_colon.length (); j++)
 	{
-	  if (rhs_dims(jj) == 1)
+	  if (jj < rhs_dims.length () && rhs_dims(jj) == 1)
 	    jj++;
 	  else if (idx_is_colon(j))
 	    {
 	      if (jj > rhs_dims_len || rhs_dims(jj) < lhs_dims(j))
 		{
 		  dim_ok = false;
 
 		  break;
@@ -2864,16 +2864,18 @@ assignN (Array<LT>& lhs, const Array<RT>
     }
   else if (lhs_dims.length () != rhs_dims.length ())
     {
       (*current_liboctave_error_handler)
 	("A(I) = X: X must be a scalar or a matrix with the same size as I");
       retval = 0;
     }
 
+  lhs.chop_trailing_singletons ();
+  
   lhs.clear_index ();
 
   return retval;
 }
 
 template <class T>
 void
 Array<T>::print_info (std::ostream& os, const std::string& prefix) const
diff --git a/liboctave/Array.h b/liboctave/Array.h
--- a/liboctave/Array.h
+++ b/liboctave/Array.h
@@ -243,17 +243,20 @@ public:
   int rows (void) const { return dim1 (); }
   int cols (void) const { return dim2 (); }
   int columns (void) const { return dim2 (); }
   int pages (void) const { return dim3 (); }
 
   dim_vector dims (void) const { return dimensions; }
 
   Array<T> squeeze (void) const;
-
+  
+  void chop_trailing_singletons (void) 
+  { dimensions.chop_trailing_singletons (); }
+  
   static int get_size (int r, int c);
   static int get_size (int r, int c, int p);
   static int get_size (const dim_vector& dv);
 
   int compute_index (const Array<int>& ra_idx) const;
 
   T range_error (const char *fcn, int n) const;
   T& range_error (const char *fcn, int n);
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,15 +1,17 @@
 2004-01-21  Petter Risholm  <risholm@stud.ntnu.no>
 
-	* Array.cc (Array<T>::assignN(Array<LT>&, const Array<RT>&,
-	const LT&)): Fix incorrectly nested if statement.
+	* Array.h (Array<T>::chop_trailing_singletons): New function.
+	* Array.cc (Array<T>::assignN): Use it on LHS.
+
+	* Array.cc (Array<T>::assignN): Fix incorrectly nested if statement.
 	Retrieve scalar element by passin 0 instead of an index array.
-	Check for singleton dimensions where RHS is matrix or higher
-	dimension.
+	Check for singleton dimensions where RHS is matrix or higher dimension.
+	Make sure index is in bounds.
 
 2004-01-19  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* lo-ieee.cc (octave_ieee_init): Ensure that octave_Inf,
 	octave_NaN, and octav_NA values are always initialized.  Check
 	floating point format, not HAVE_ISINF, HAVE_FINITE, or HAVE_ISNAN
 	to decide whether to do IEEE initialization.
 
