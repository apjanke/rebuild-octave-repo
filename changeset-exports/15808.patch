# HG changeset patch
# User Rik <rik@octave.org>
# Date 1355785181 28800
#      Mon Dec 17 14:59:41 2012 -0800
# Node ID 68919cd4cd45dc9e02c1fb86f95b01509872af11
# Parent  37104cd70d0f30cb54a42575156a65d576c917cc
isa.m: Match docstring variable names and function prototype names.

* scripts/general/isa.m: Change input variable to "classname" from "class".
Rename variable "class_of_x" to "class_of_obj" to match input names.

diff --git a/scripts/general/isa.m b/scripts/general/isa.m
--- a/scripts/general/isa.m
+++ b/scripts/general/isa.m
@@ -12,20 +12,20 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {} isa (@var{obj}, @var{class})
-## Return true if @var{obj} is an object from the class @var{class}.
+## @deftypefn {Function File} {} isa (@var{obj}, @var{classname})
+## Return true if @var{obj} is an object from the class @var{classname}.
 ##
-## @var{class} may also be one of the following class categories: 
+## @var{classname} may also be one of the following class categories: 
 ##
 ## @table @asis
 ## @item "float"
 ## Floating point value comprising classes "double" and "single".
 ##
 ## @item "integer"
 ## Integer value comprising classes (u)int8, (u)int16, (u)int32, (u)int64.
 ##
@@ -33,33 +33,33 @@
 ## Numeric value comprising either a floating point or integer value.
 ## @end table
 ## @seealso{class, typeinfo}
 ## @end deftypefn
 
 ## Author: Paul Kienzle <pkienzle@users.sf.net>
 ## Adapted-by: jwe
 
-function retval = isa (obj, cname)
+function retval = isa (obj, classname)
 
   if (nargin != 2)
     print_usage ();
   endif
 
-  if (strcmp (cname, "float"))
+  if (strcmp (classname, "float"))
     retval = isfloat (obj);
-  elseif (strcmp (cname, "integer"))
+  elseif (strcmp (classname, "integer"))
     retval = isinteger (obj);
-  elseif (strcmp (cname, "numeric"))
+  elseif (strcmp (classname, "numeric"))
     retval = isnumeric (obj);
   else
-    class_of_x = class (obj);
-    retval = strcmp (class_of_x, cname);
+    class_of_obj = class (obj);
+    retval = strcmp (class_of_obj, classname);
     if (! retval && isobject (obj))
-      retval = __isa_parent__ (obj, cname);
+      retval = __isa_parent__ (obj, classname);
     endif
   endif
 
 endfunction
 
 
 %!assert (isa ("char", "float"), false)
 %!assert (isa (logical (1), "float"), false)
