# HG changeset patch
# User jwe
# Date 1197322931 0
#      Mon Dec 10 21:42:11 2007 +0000
# Node ID 30100a15625cc784a539dbda6fed30681f34b1f3
# Parent  add731f4024dbc51947a57262d8ecb045028ff48
[project @ 2007-12-10 21:42:11 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,10 +1,12 @@
 2007-12-10  John W. Eaton  <jwe@octave.org>
 
+	* plot/sombrero.m, plot/peaks.m: Use surf instead of mesh.
+
 	* general/issymmetric.m: Use ' instead of .' for compatibility
 	with previous versions of Octave.
 	* general/ishermitian.m: Delete.
 
 	* plot/fplot.m: In N is not specified, increase initial number of
 	points from 3 and 5 to 5 and 8.
 
 	* signal/detrend.m: Move tests here from test/test_signal.m.
diff --git a/scripts/plot/peaks.m b/scripts/plot/peaks.m
--- a/scripts/plot/peaks.m
+++ b/scripts/plot/peaks.m
@@ -41,17 +41,17 @@
 ## Called without a return argument, @code{peaks} plots the surface of the 
 ## above function using @code{mesh}. If @var{n} is a scalar, the @code{peaks}
 ## returns the values of the above function on a @var{n}-by-@var{n} mesh over
 ## the range @code{[-3,3]}. The default value for @var{n} is 49.
 ##
 ## If @var{n} is a vector, then it represents the @var{x} and @var{y} values
 ## of the grid on which to calculate the above function. The @var{x} and 
 ## @var{y} values can be specified separately.
-## @seealso{mesh}
+## @seealso{surf, mesh, meshgrid}
 ## @end deftypefn
 
 ## Expression for the peaks function was taken from the following paper:
 ## http://www.control.hut.fi/Kurssit/AS-74.115/Material/GENALGgoga.pdf
 
 function [X_out, Y_out, Z_out] = peaks (x, y)
 
   if (nargin == 0)
@@ -71,17 +71,17 @@ function [X_out, Y_out, Z_out] = peaks (
     Y = y;
   endif
 
   Z = 3 * (1 - X) .^ 2 .* exp(- X .^ 2 - (Y + 1) .^ 2) \
       - 10 * (X / 5 - X .^ 3 - Y .^ 5) .* exp(- X .^ 2 - Y .^ 2) \
       - 1 / 3 * exp(- (X + 1) .^ 2 - Y .^ 2);
 
   if (nargout == 0)
-    mesh (x, y, Z);
+    surf (x, y, Z);
   elseif (nargout == 1)
     X_out = Z;
   else
     X_out = X;
     Y_out = Y;
     Z_out = Z;
   endif
 
diff --git a/scripts/plot/sombrero.m b/scripts/plot/sombrero.m
--- a/scripts/plot/sombrero.m
+++ b/scripts/plot/sombrero.m
@@ -22,17 +22,17 @@
 ## Produce the familiar three-dimensional sombrero plot using @var{n}
 ## grid lines.  If @var{n} is omitted, a value of 41 is assumed.
 ##
 ## The function plotted is
 ##
 ## @example
 ## z = sin (sqrt (x^2 + y^2)) / (sqrt (x^2 + y^2))
 ## @end example
-## @seealso{mesh, meshgrid}
+## @seealso{surf, meshgrid, mesh}
 ## @end deftypefn
 
 ## Author: jwe
 
 function [x, y, z] = sombrero (n)
 
   if (nargin == 0)
     n = 41;
@@ -40,17 +40,17 @@ function [x, y, z] = sombrero (n)
 
   if (nargin < 2)
     if (n > 1)
       tx = ty = linspace (-8, 8, n)';
       [xx, yy] = meshgrid (tx, ty);
       r = sqrt (xx .^ 2 + yy .^ 2) + eps;
       tz = sin (r) ./ r;
       if (nargout == 0)
-        mesh (tx, ty, tz);
+        surf (tx, ty, tz);
 	box ("off");
       else
 	x = tx;
 	y = ty;
 	z = tz;
       endif
     else
       error ("sombrero: number of grid lines must be greater than 1");
