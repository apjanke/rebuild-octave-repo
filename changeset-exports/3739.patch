# HG changeset patch
# User jwe
# Date 974771732 0
#      Tue Nov 21 01:55:32 2000 +0000
# Node ID 85027c5aedc2f9260f9eca5004968f13ef173adf
# Parent  f20c30fa3a8d171de4096589ce096dab49f265d9
[project @ 2000-11-21 01:55:32 by jwe]

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+2000-11-20  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* data-conv.h (enum save_type): Move LS_U_LONG and LS_LONG to the
+	end of the list, to be compatible with previous versions of Octave.
+
 2000-11-16  Paul Kienzle  <pkienzle@kienzle.powernet.co.uk>
 
 	* oct-time.cc (DEFINE_SET_INT_FIELD_FCN): Don't check limits here,
 	since mktime is supposed to `normalize' the results for us.
 
 2000-10-31  Paul Kienzle  <pkienzle@kienzle.powernet.co.uk>
 
 	* Array2.cc (Array2<T>::transpose): Avoid copy for empty matrices
diff --git a/liboctave/data-conv.h b/liboctave/data-conv.h
--- a/liboctave/data-conv.h
+++ b/liboctave/data-conv.h
@@ -80,32 +80,32 @@ public:
       dt_double,
       dt_float_complex,
       dt_double_complex
     };
 
   static data_type string_to_data_type (const std::string& s);
 };
 
+// Add new entries to the end of this enum, otherwise Octave will not
+// be able to read binary data files stored in Octave's binary data
+// format that were created with previous versions of Octave.
+
 enum save_type
   {
-    LS_U_CHAR,
-    LS_U_SHORT,
-    LS_U_INT,
-#ifdef EIGHT_BYTE_INT
-    LS_U_LONG,
-#endif
-    LS_CHAR,
-    LS_SHORT,
-    LS_INT,
-#ifdef EIGHT_BYTE_INT
-    LS_LONG,
-#endif
-    LS_FLOAT,
-    LS_DOUBLE
+    LS_U_CHAR  = 0,
+    LS_U_SHORT = 1,
+    LS_U_INT   = 2,
+    LS_CHAR    = 3,
+    LS_SHORT   = 4,
+    LS_INT     = 5,
+    LS_FLOAT   = 6,
+    LS_DOUBLE  = 7,
+    LS_U_LONG  = 8,
+    LS_LONG    = 9
   };
 
 extern void
 do_double_format_conversion (double *data, int len,
 			     oct_mach_info::float_format fmt);
 
 extern void
 do_float_format_conversion (float *data, int len,
