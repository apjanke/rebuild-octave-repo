# HG changeset patch
# User Torsten <mttl@mailbox.org>
# Date 1489610925 -3600
#      Wed Mar 15 21:48:45 2017 +0100
# Node ID 3cbd3caf19a736646c4c0d84cc29588a0eb84cae
# Parent  9a0e33470da57e85b04282e3b69df013da08b91c
Allow to close an doc tab with the middle mouse button (bug #44605)

* webinfo.cc (webinfo::webinfo): use derived webinfo_tab_bar,
  (webinfo_tab_bar::mousePressEvent): reimplement mouse event for
  filtering mouse clicks handled for closing the tabs;

* webinfo.h: new derived webinfo_tab_bar class with reimplemented
  mousePressEvent, use new tab bar within the webinfo class

diff --git a/libgui/src/qtinfo/webinfo.cc b/libgui/src/qtinfo/webinfo.cc
--- a/libgui/src/qtinfo/webinfo.cc
+++ b/libgui/src/qtinfo/webinfo.cc
@@ -49,17 +49,17 @@ webinfo::webinfo (QWidget *p)
   vbox_layout->setMargin (0);
   setLayout (vbox_layout);
 
   QHBoxLayout *hbox_layout = new QHBoxLayout ();
   hbox_layout->setMargin (0);
   hbox_layout->setSpacing (0);
   vbox_layout->addLayout (hbox_layout);
 
-  _tab_bar = new QTabBar (this);
+  _tab_bar = new webinfo_tab_bar (this);
   _tab_bar->setSizePolicy (QSizePolicy::Preferred,QSizePolicy::Preferred);
   _tab_bar->setExpanding (false);
   _tab_bar->setTabsClosable (true);
 #if defined (HAVE_QTABWIDGET_SETMOVABLE)
   _tab_bar->setMovable (true);
 #endif
   hbox_layout->addWidget (_tab_bar);
 
@@ -307,8 +307,41 @@ webinfo::pasteClipboard ()
   if (_search_line_edit->hasFocus ())
     {
       QClipboard *clipboard = QApplication::clipboard ();
       QString str = clipboard->text ();
       if (str.length () > 0)
         _search_line_edit->insert (str);
     }
 }
+
+
+//
+// Functions of the the reimplemented tab bar
+//
+
+// Reimplement mouse event for filtering out the desired mouse clicks
+void
+webinfo_tab_bar::mousePressEvent(QMouseEvent *me)
+{
+  if (me->type () != QEvent::MouseButtonDblClick &&
+      me->button() == Qt::MiddleButton &&
+      count () > 1)
+    {
+      // Middle click into the tabbar -> close the tab
+      for (int i = 0; i < count (); i++)
+        {
+          QPoint clickPos = mapToGlobal (me->pos ());
+          if (tabRect (i).contains (mapFromGlobal (clickPos)))
+            {
+              removeTab (i);
+              break;
+            }
+        }
+    }
+  else
+    {
+      // regular handling of the mouse event
+      QTabBar::mousePressEvent (me);
+    }
+}
+
+
diff --git a/libgui/src/qtinfo/webinfo.h b/libgui/src/qtinfo/webinfo.h
--- a/libgui/src/qtinfo/webinfo.h
+++ b/libgui/src/qtinfo/webinfo.h
@@ -30,17 +30,35 @@ along with Octave; see the file COPYING.
 #include <QTextBrowser>
 #include "parser.h"
 #include <QStackedWidget>
 #include <QTabBar>
 #include <QPushButton>
 #include <QLineEdit>
 #include <QCheckBox>
 #include <QToolButton>
+#include <QMouseEvent>
 
+// subclassed QTabWidget for usable tab-bar and reimplemented mouse event
+class webinfo_tab_bar : public QTabBar
+{
+  Q_OBJECT
+
+public:
+
+  webinfo_tab_bar (QWidget *p) : QTabBar (p) { }
+
+  ~webinfo_tab_bar () { }
+
+protected:
+
+  void mousePressEvent(QMouseEvent *event);
+};
+
+// The webinfo class
 class webinfo : public QWidget
 {
   Q_OBJECT
 public:
   webinfo (QWidget *parent = 0);
   bool set_info_path (const QString& info_path);
   void load_node (const QString& node_name);
 
@@ -55,17 +73,17 @@ public slots:
   void zoom_out ();
 
   void copyClipboard ();
   void pasteClipboard ();
   void selectAll ();
 
 private:
   QTextBrowser        *_text_browser;
-  QTabBar             *_tab_bar;
+  webinfo_tab_bar     *_tab_bar;
   QStackedWidget      *_stacked_widget;
   QLineEdit           *_search_line_edit;
   QCheckBox           *_search_check_box;
   QToolButton         *_zoom_in_button;
   QToolButton         *_zoom_out_button;
 
   parser              _parser;
   QFont               _font_web;
