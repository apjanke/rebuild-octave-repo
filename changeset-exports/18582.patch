# HG changeset patch
# User Sergey Plotnikov
# Date 1394570678 -3600
#      Tue Mar 11 21:44:38 2014 +0100
# Branch stable
# Node ID 2ce1f1966fc3d2cef13b830f4ae94e76dad07b6b
# Parent  02a61d7c2de06d2a9ee5eea206ae62591364b5ec
textscan.m: Fix undefined whitespace error with empty format input (bug #41824).

* textscan.m: Define whitespace variable even when format string is empty.
Add %!test for behavior.

diff --git a/scripts/io/textscan.m b/scripts/io/textscan.m
--- a/scripts/io/textscan.m
+++ b/scripts/io/textscan.m
@@ -1,9 +1,9 @@
-## Copyright (C) 2010-2013 Ben Abbott
+## Copyright (C) 2010-2014 Ben Abbott
 ##
 ## This file is part of Octave.
 ##
 ## Octave is free software; you can redistribute it and/or modify it
 ## under the terms of the GNU General Public License as published by
 ## the Free Software Foundation; either version 3 of the License, or (at
 ## your option) any later version.
 ##
@@ -130,16 +130,17 @@ function [C, position] = textscan (fid, 
   else
     ## Check if there's at least one string format specifier
     has_str_fmt = regexp (format, '%[*]?\d*s', "once");
     ## If there is a string format AND whitespace value = empty,
     ## don't add a space (char(32)) to whitespace
     if (! (isempty (args{ipos+1}) && has_str_fmt))
       args{ipos+1} = unique ([" ", args{ipos+1}]);
     endif
+    whitespace = args{ipos+1};
   endif
 
   if (! any (strcmpi (args, "delimiter")))
     ## Matlab says default delimiter = whitespace.
     ## strread() will pick this up further
     args(end+1:end+2) = {'delimiter', ""};
     delimiter = "";
   else
@@ -656,8 +657,12 @@ endfunction
 %! msg1 = "textscan: character value required for EndOfLine";
 %! try
 %! A = textscan (fid, "%f", "EndOfLine", 33);
 %! end_try_catch;
 %! fclose (fid);
 %! unlink (f);
 %! assert (msg1, lasterr);
 
+%% Bug #41824
+%!test
+%! assert (textscan ("123", "", "whitespace", " "){:}, 123);
+
