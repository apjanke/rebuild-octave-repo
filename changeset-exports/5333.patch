# HG changeset patch
# User jwe
# Date 1115057811 0
#      Mon May 02 18:16:51 2005 +0000
# Node ID ac8d64b9e76a9c4167653f69eb03ff1ef7618967
# Parent  15db952ced2ec0a0e7eb81fbcee7d1ec602b391f
[project @ 2005-05-02 18:15:20 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2005-05-02  John W. Eaton  <jwe@octave.org>
+
+	* mkdoc: Print header message.
+
 2005-04-28  John W. Eaton  <jwe@octave.org>
 
 	* configure.in (AC_CONFIG_SRCDIR): Look for startup/inputrc, not
 	startup/octaverc.
 
 2005-04-28  Stefan van der Walt  <stefan@sun.ac.za>
 
 	* image/imshow.m: Handle various image depths and 3d RGB images.
diff --git a/scripts/mkdoc b/scripts/mkdoc
--- a/scripts/mkdoc
+++ b/scripts/mkdoc
@@ -4,15 +4,22 @@ set -e
 
 if test $# != 1; then
   d=.
 else
   d=$1
 fi
 
 if test -f gethelp; then
+  cat << EOF
+### DO NOT EDIT!
+###
+### This file is generated automatically from the Octave sources.
+### Edit those files instead and run make to update this file.
+
+EOF
   find $d -name '*.m' | \
     sed "s,\(.*\)/\(.*\)\.m,./gethelp \2 < & | sed 's/^ *@/@/'," | \
     /bin/sh
 else
   echo "gethelp program seems to be missing!" 1>&2
   exit 1
 fi
\ No newline at end of file
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,17 @@
+2005-05-02  John W. Eaton  <jwe@octave.org>
+
+	* mkgendoc (main): Print header message.
+
+2005-05-02  Bill Denney  <denney@seas.upenn.edu>
+
+	* data.cc, defaults.cc, DLD-FUNCTIONS/qz.cc, file-io.cc,
+	sighandlers.cc, syscalls.cc: Docstring fixes.
+
 2005-05-02  John W. Eaton  <jwe@octave.org>
 
 	* pr-output.cc (octave_print_internal (std::ostream&,
 	const Range&, bool, int)): Don't print newline at end of broken
 	rows (that is handled by pr_col_num_header).
 	From Keith Goodman <kwgoodman@gmail.com>.
 
 	* Makefile.in (octave$(EXEEXT)): List $(UMFPACK_LIBS) ahead of
diff --git a/src/DLD-FUNCTIONS/qz.cc b/src/DLD-FUNCTIONS/qz.cc
--- a/src/DLD-FUNCTIONS/qz.cc
+++ b/src/DLD-FUNCTIONS/qz.cc
@@ -273,17 +273,17 @@ As in form [2], but allows ordering of g
                   in the closed right half-plane\n\
 @end  table\n\
 @end table\n\
 @end enumerate\n\
 \n\
 Note: qz performs permutation balancing, but not scaling (see balance).\n\
       Order of output arguments was selected for compatibility with MATLAB\n\
 \n\
-See also: balance, dare, eig, schur\n\
+@seealso{balance, dare, eig, schur}\n\
 @end deftypefn")
 {
   octave_value_list retval;
   int nargin = args.length ();
 
 #ifdef DEBUG
   std::cout << "qz: nargin = " << nargin << ", nargout = " << nargout << std::endl;
 #endif
diff --git a/src/Makefile.in b/src/Makefile.in
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -230,17 +230,17 @@ VAR_2 := $(patsubst %.y, %.df, $(VAR_3))
 VAR_1 := $(patsubst %.l, %.df, $(VAR_2))
 VAR_FILES := $(patsubst %.cc, %.df, $(VAR_1))
 
 DOC_FILES := $(sort $(DEF_FILES) $(VAR_FILES))
 
 OCTAVE_LFLAGS = -L$(TOPDIR)/liboctave -L$(TOPDIR)/libcruft \
   -L$(TOPDIR)/src $(RLD_FLAG)
 
-if ($(ENABLE_DYNAMIC_LINKING), true)
+ifeq ($(ENABLE_DYNAMIC_LINKING), true)
   OCTAVE_LIBS = $(LIBOCTINTERP) $(LIBOCTAVE) \
     $(SPECIAL_MATH_LIB) $(LIBCRUFT) \
     $(LIBPLPLOT) $(LIBDLFCN)
 else
   OCTAVE_LIBS = $(LIBOCTINTERP) $(LIBOCTAVE) \
     $(GLPK_LIBS) $(SPECIAL_MATH_LIB) $(LIBCRUFT) \
     $(LIBPLPLOT) $(LIBDLFCN)
 endif
diff --git a/src/data.cc b/src/data.cc
--- a/src/data.cc
+++ b/src/data.cc
@@ -1821,45 +1821,45 @@ Remove singleton dimensions from @var{x}
   return retval;
 }
 
 void
 symbols_of_data (void)
 {
 
 #define IMAGINARY_DOC_STRING "-*- texinfo -*-\n\
-@defvr {Built-in Variable} I\n\
-@defvrx {Built-in Variable} J\n\
-@defvrx {Built-in Variable} i\n\
-@defvrx {Built-in Variable} j\n\
+@defvr {Built-in Constant} I\n\
+@defvrx {Built-in Constant} J\n\
+@defvrx {Built-in Constant} i\n\
+@defvrx {Built-in Constant} j\n\
 A pure imaginary number, defined as\n\
 @iftex\n\
 @tex\n\
   $\\sqrt{-1}$.\n\
 @end tex\n\
 @end iftex\n\
 @ifinfo\n\
   @code{sqrt (-1)}.\n\
 @end ifinfo\n\
 These built-in variables behave like functions so you can use the names\n\
 for other purposes.  If you use them as variables and assign values to\n\
 them and then clear them, they once again assume their special predefined\n\
 values @xref{Status of Variables}.\n\
 @end defvr"
 
 #define INFINITY_DOC_STRING "-*- texinfo -*-\n\
-@defvr {Built-in Variable} Inf\n\
-@defvrx {Built-in Variable} inf\n\
+@defvr {Built-in Constant} Inf\n\
+@defvrx {Built-in Constant} inf\n\
 Infinity.  This is the result of an operation like 1/0, or an operation\n\
 that results in a floating point overflow.\n\
 @end defvr"
 
 #define NAN_DOC_STRING "-*- texinfo -*-\n\
-@defvr {Built-in Variable} NaN\n\
-@defvrx {Built-in Variable} nan\n\
+@defvr {Built-in Constant} NaN\n\
+@defvrx {Built-in Constant} nan\n\
 Not a number.  This is the result of an operation like\n\
 @iftex\n\
 @tex\n\
 $0/0$, or $\\infty - \\infty$,\n\
 @end tex\n\
 @end iftex\n\
 @ifinfo\n\
 0/0, or @samp{Inf - Inf},\n\
@@ -1877,32 +1877,32 @@ find NaN values, you must use the @code{
   DEFCONST (Inf, lo_ieee_inf_value (),
     INFINITY_DOC_STRING);
 
   DEFCONST (J, Complex (0.0, 1.0),
     IMAGINARY_DOC_STRING);
 
   DEFCONST (NA, lo_ieee_na_value (),
     "-*- texinfo -*-\n\
-@defvr {Built-in Variable} NA\n\
+@defvr {Built-in Constant} NA\n\
 Missing value.\n\
 @end defvr");
 
   DEFCONST (NaN, lo_ieee_nan_value (),
     NAN_DOC_STRING);
 
 #if defined (M_E)
   double e_val = M_E;
 #else
   double e_val = exp (1.0);
 #endif
 
   DEFCONST (e, e_val,
     "-*- texinfo -*-\n\
-@defvr {Built-in Variable} e\n\
+@defvr {Built-in Constant} e\n\
 The base of natural logarithms.  The constant\n\
 @iftex\n\
 @tex\n\
  $e$\n\
 @end tex\n\
 @end iftex\n\
 @ifinfo\n\
  @var{e}\n\
@@ -1915,17 +1915,17 @@ The base of natural logarithms.  The con
 @end iftex\n\
 @ifinfo\n\
  @code{log} (@var{e}) = 1.\n\
 @end ifinfo\n\
 @end defvr");
 
   DEFCONST (eps, DBL_EPSILON,
     "-*- texinfo -*-\n\
-@defvr {Built-in Variable} eps\n\
+@defvr {Built-in Constant} eps\n\
 The machine precision.  More precisely, @code{eps} is the largest\n\
 relative spacing between any two adjacent numbers in the machine's\n\
 floating point system.  This number is obviously system-dependent.  On\n\
 machines that support 64 bit IEEE floating point arithmetic, @code{eps}\n\
 is approximately\n\
 @ifinfo\n\
  2.2204e-16.\n\
 @end ifinfo\n\
@@ -1933,18 +1933,19 @@ is approximately\n\
 @tex\n\
  $2.2204\\times10^{-16}$.\n\
 @end tex\n\
 @end iftex\n\
 @end defvr");
 
   DEFCONST (false, false,
     "-*- texinfo -*-\n\
-@defvr {Built-in Variable} false\n\
+@defvr {Built-in Constant} false\n\
 Logical false value.\n\
+@seealso{true}\n\
 @end defvr");
 
   DEFCONST (i, Complex (0.0, 1.0),
     IMAGINARY_DOC_STRING);
 
   DEFCONST (inf, lo_ieee_inf_value (),
     INFINITY_DOC_STRING);
 
@@ -1957,57 +1958,60 @@ Logical false value.\n\
 #if defined (M_PI)
   double pi_val = M_PI;
 #else
   double pi_val = 4.0 * atan (1.0);
 #endif
 
   DEFCONST (pi, pi_val,
     "-*- texinfo -*-\n\
-@defvr {Built-in Variable} pi\n\
+@defvr {Built-in Constant} pi\n\
 The ratio of the circumference of a circle to its diameter.\n\
 Internally, @code{pi} is computed as @samp{4.0 * atan (1.0)}.\n\
 @end defvr");
 
   DEFCONST (realmax, DBL_MAX,
     "-*- texinfo -*-\n\
-@defvr {Built-in Variable} realmax\n\
+@defvr {Built-in Constant} realmax\n\
 The largest floating point number that is representable.  The actual\n\
 value is system-dependent.  On machines that support 64-bit IEEE\n\
 floating point arithmetic, @code{realmax} is approximately\n\
 @ifinfo\n\
  1.7977e+308\n\
 @end ifinfo\n\
 @iftex\n\
+@seealso{realmin}\n\
 @tex\n\
  $1.7977\\times10^{308}$.\n\
 @end tex\n\
 @end iftex\n\
 @end defvr");
 
   DEFCONST (realmin, DBL_MIN,
     "-*- texinfo -*-\n\
-@defvr {Built-in Variable} realmin\n\
+@defvr {Built-in Constant} realmin\n\
 The smallest normalized floating point number that is representable.\n\
 The actual value is system-dependent.  On machines that support\n\
 64-bit IEEE floating point arithmetic, @code{realmin} is approximately\n\
 @ifinfo\n\
  2.2251e-308\n\
 @end ifinfo\n\
 @iftex\n\
 @tex\n\
  $2.2251\\times10^{-308}$.\n\
 @end tex\n\
 @end iftex\n\
+@seealso{realmax}\n\
 @end defvr");
 
   DEFCONST (true, true,
     "-*- texinfo -*-\n\
-@defvr {Built-in Variable} true\n\
+@defvr {Built-in Constant} true\n\
 Logical true value.\n\
+@seealso{false}\n\
 @end defvr");
 
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
diff --git a/src/defaults.cc b/src/defaults.cc
--- a/src/defaults.cc
+++ b/src/defaults.cc
@@ -709,23 +709,23 @@ variable @code{LOADPATH}.\n\
     "-*- texinfo -*-\n\
 @defvr {Built-in Variable} IMAGEPATH\n\
 A colon separated list of directories in which to search for image\n\
 files.\n\
 @end defvr");
 
   DEFCONST (OCTAVE_HOME, Voctave_home,
     "-*- texinfo -*-\n\
-@defvr {Built-in Variable} OCTAVE_HOME\n\
+@defvr {Built-in Constant} OCTAVE_HOME\n\
 The name of the top-level Octave installation directory.\n\
 @end defvr");
 
   DEFCONSTX ("OCTAVE_VERSION", SBV_OCTAVE_VERSION, OCTAVE_VERSION,
     "-*- texinfo -*-\n\
-@defvr {Built-in Variable} OCTAVE_VERSION\n\
+@defvr {Built-in Constant} OCTAVE_VERSION\n\
 The version number of Octave, as a string.\n\
 @end defvr");
 
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
diff --git a/src/file-io.cc b/src/file-io.cc
--- a/src/file-io.cc
+++ b/src/file-io.cc
@@ -1746,17 +1746,17 @@ Return a unique temporary file name as a
 \n\
 If @var{prefix} is omitted, a value of @code{\"oct-\"} is used.\n\
 If @var{dir} is also omitted, the default directory for temporary files\n\
 is used.  If @var{dir} is provided, it must exist, otherwise the default\n\
 directory for temporary files is used.  Since the named file is not\n\
 opened, by @code{tmpnam}, it is possible (though relatively unlikely)\n\
 that it will not be available by the time your program attempts to open it.\n\
 @end deftypefn\n\
-@seealso{tmpfile, mkstemp, and P_tmpdir}")
+@seealso{tmpfile, mkstemp, P_tmpdir}")
 {
   octave_value retval;
 
   int len = args.length ();
 
   if (len < 3)
     {
       std::string dir = len > 0 ? args(0).string_value () : std::string ();
@@ -1789,17 +1789,17 @@ Return the file ID corresponding to a ne
 name.  The file is opened in binary read/write (@code{\"w+b\"}) mode.\n\
 The file will be deleted automatically when it is closed or when Octave\n\
 exits.\n\
 \n\
 If successful, @var{fid} is a valid file ID and @var{msg} is an empty\n\
 string.  Otherwise, @var{fid} is -1 and @var{msg} contains a\n\
 system-dependent error message.\n\
 @end deftypefn\n\
-@seealso{tmpnam, mkstemp, and P_tmpdir}")
+@seealso{tmpnam, mkstemp, P_tmpdir}")
 {
   octave_value_list retval;
 
   retval(1) = std::string ();
   retval(0) = -1;
 
   int nargin = args.length ();
 
@@ -1849,17 +1849,17 @@ If the optional argument @var{delete} is
 the file will be deleted automatically when Octave exits, or when\n\
 the function @code{purge_tmp_files} is called.\n\
 \n\
 If successful, @var{fid} is a valid file ID, @var{name} is the name of\n\
 the file, and and @var{msg} is an empty string.  Otherwise, @var{fid}\n\
 is -1, @var{name} is empty, and @var{msg} contains a system-dependent\n\
 error message.\n\
 @end deftypefn\n\
-@seealso{tmpfile, tmpnam, and P_tmpdir}")
+@seealso{tmpfile, tmpnam, P_tmpdir}")
 {
   octave_value_list retval;
 
   retval(2) = std::string ();
   retval(1) = std::string ();
   retval(0) = -1;
 
 #if defined (HAVE_MKSTEMP)
@@ -2009,29 +2009,29 @@ void
 symbols_of_file_io (void)
 {
 #if ! defined (P_tmpdir)
 #define P_tmpdir "/tmp"
 #endif
 
   DEFCONSTX ("P_tmpdir", SBV_P_tmpdir, P_tmpdir,
     "-*- texinfo -*-\n\
-@defvr {Built-in Variable} P_tmpdir\n\
+@defvr {Built-in Constant} P_tmpdir\n\
 The default name of the directory for temporary files on this system.\n\
 The value of this variable is system dependent.\n\
 @end defvr");
 
   // NOTE: the values of SEEK_SET, SEEK_CUR, and SEEK_END have to be
   // this way for Matlab compatibility.
 
   DEFCONSTX ("SEEK_SET", SBV_SEEK_SET, -1,
     "-*- texinfo -*-\n\
-@defvr {Built-in Variable} SEEK_SET\n\
-@defvrx {Built-in Variable} SEEK_CUR\n\
-@defvrx {Built-in Variable} SEEK_END\n\
+@defvr {Built-in Constant} SEEK_SET\n\
+@defvrx {Built-in Constant} SEEK_CUR\n\
+@defvrx {Built-in Constant} SEEK_END\n\
 These variables may be used as the optional third argument for the\n\
 function @code{fseek}.\n\
 \n\
 @table @code\n\
 @item SEEK_SET\n\
 Position file relative to the beginning.\n\
 \n\
 @item SEEK_CUR\n\
@@ -2039,47 +2039,50 @@ Position file relative to the current po
 \n\
 @item SEEK_END\n\
 used with fseek to position file relative to the end.\n\
 @end table\n\
 @end defvr");
 
   DEFCONSTX ("SEEK_CUR", SBV_SEEK_CUR, 0,
     "-*- texinfo -*-\n\
-@defvr {Built-in Variable} SEEK_CUR\n\
+@defvr {Built-in Constant} SEEK_CUR\n\
 See SEEK_SET.\n\
 @end defvr");
 
   DEFCONSTX ("SEEK_END", SBV_SEEK_END, 1,
     "-*- texinfo -*-\n\
-@defvr {Built-in Variable} SEEK_END\n\
+@defvr {Built-in Constant} SEEK_END\n\
 See SEEK_SET.\n\
 @end defvr");
 
   DEFCONSTX ("stdin", SBV_stdin, stdin_file,
     "-*- texinfo -*-\n\
-@defvr {Built-in Variable} stdin\n\
+@defvr {Built-in Constant} stdin\n\
 The standard input stream (file id 0).  When Octave is used\n\
 interactively, this is filtered through the command line editing\n\
 functions.\n\
+@seealso{stdout, stderr}\n\
 @end defvr");
 
   DEFCONSTX ("stdout", SBV_stdout, stdout_file,
     "-*- texinfo -*-\n\
-@defvr {Built-in Variable} stdout\n\
+@defvr {Built-in Constant} stdout\n\
 The standard output stream (file id 1).  Data written to the\n\
 standard output is normally filtered through the pager.\n\
+@seealso{stdin, stderr}\n\
 @end defvr");
 
   DEFCONSTX ("stderr", SBV_stderr, stderr_file,
     "-*- texinfo -*-\n\
-@defvr {Built-in Variable} stderr\n\
+@defvr {Built-in Constant} stderr\n\
 The standard error stream (file id 2).  Even if paging is turned on,\n\
 the standard error is not sent to the pager.  It is useful for error\n\
 messages and prompts.\n\
+@seealso{stdin, stdout}\n\
 @end defvr");
 
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
diff --git a/src/mkgendoc b/src/mkgendoc
--- a/src/mkgendoc
+++ b/src/mkgendoc
@@ -78,16 +78,23 @@ for file in $DOC_FILES; do
   echo ""
 done
 
 cat << \EOF
 
 int
 main (void)
 {
+  std::cout
+    << "### DO NOT EDIT!\n"
+    << "###\n"
+    << "### This file is generated automatically from the Octave sources.\n"
+    << "### Edit those files instead and run make to update this file.\n"
+    << std::endl;
+
 EOF
 
 for file in $DOC_FILES; do
   fcn=`echo $file | $SED 's,^\./,,; s/\.df//; s/-/_/g'`
   echo "  print_${fcn}_doc_strings ();"
 done
 
 cat << \EOF
diff --git a/src/sighandlers.cc b/src/sighandlers.cc
--- a/src/sighandlers.cc
+++ b/src/sighandlers.cc
@@ -923,17 +923,17 @@ hangup signal.  The default value is 1.\
 If this variable is set to a nonzero value and\n\
 @code{crash_dumps_octave_core} is also nonzero, Octave tries to save all\n\
 current variables the the file \"octave-core\" if it receives a\n\
 terminate signal.  The default value is 1.\n\
 @end defvr");
 
   DEFCONST (SIG, make_sig_struct (),
     "-*- texinfo -*-\n\
-@defvr {Built-in Variable} SIG\n\
+@defvr {Built-in Constant} SIG\n\
 Structure of Unix signal names and their defined values.\n\
 @end defvr");
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
diff --git a/src/syscalls.cc b/src/syscalls.cc
--- a/src/syscalls.cc
+++ b/src/syscalls.cc
@@ -979,130 +979,145 @@ Return the canonical name of file @var{n
 #endif
 
 void
 symbols_of_syscalls (void)
 {
 #if defined (F_DUPFD)
   DEFCONSTX ("F_DUPFD", SBV_F_DUPFD, F_DUPFD,
     "-*- texinfo -*-\n\
-@defvr {Built-in Variable} F_DUPFD\n\
+@defvr {Built-in Constant} F_DUPFD\n\
 Request to @code{fcntl} to return a duplicate file descriptor.\n\
+@seealso{fcntl, F_GETFD, F_GETFL, F_SETFD, F_SETFL}\n\
 @end defvr");
 #endif
 
 #if defined (F_GETFD)
   DEFCONSTX ("F_GETFD", SBV_F_GETFD, F_GETFD,
     "-*- texinfo -*-\n\
-@defvr {Built-in Variable} F_GETFD\n\
+@defvr {Built-in Constant} F_GETFD\n\
 Request to @code{fcntl} to return the file descriptor flags.\n\
+@seealso{fcntl, F_DUPFD, F_GETFL, F_SETFD, F_SETFL}\n\
 @end defvr");
 #endif
 
 #if defined (F_GETFL)
   DEFCONSTX ("F_GETFL", SBV_F_GETFL, F_GETFL,
     "-*- texinfo -*-\n\
-@defvr {Built-in Variable} F_GETFL\n\
+@defvr {Built-in Constant} F_GETFL\n\
 Request to @code{fcntl} to return the file status flags.\n\
+@seealso{fcntl, F_DUPFD, F_GETFD, F_SETFD, F_SETFL}\n\
 @end defvr");
 #endif
 
 #if defined (F_SETFD)
   DEFCONSTX ("F_SETFD", SBV_F_SETFD, F_SETFD,
     "-*- texinfo -*-\n\
-@defvr {Built-in Variable} F_SETFD\n\
+@defvr {Built-in Constant} F_SETFD\n\
 Request to @code{fcntl} to set the file descriptor flags.\n\
+@seealso{fcntl, F_DUPFD, F_GETFD, F_GETFL, F_SETFL}\n\
 @end defvr");
 #endif
 
 #if defined (F_SETFL)
   DEFCONSTX ("F_SETFL", SBV_F_SETFL, F_SETFL,
     "-*- texinfo -*-\n\
-@defvr {Built-in Variable} F_SETFL\n\
+@defvr {Built-in Constant} F_SETFL\n\
 Request to @code{fcntl} to set the file status flags.\n\
+@seealso{fcntl, F_DUPFD, F_GETFD, F_GETFL, F_SETFD}\n\
 @end defvr");
 #endif
 
 #if defined (O_APPEND)
   DEFCONSTX ("O_APPEND", SBV_O_APPEND, O_APPEND,
     "-*- texinfo -*-\n\
-@defvr {Built-in Variable} O_APPEND\n\
+@defvr {Built-in Constant} O_APPEND\n\
 File status flag, append on each write.\n\
+@seealso{fcntl, O_ASYNC, O_CREAT, O_EXCL, O_NONBLOCK, O_RDONLY, O_RDWR, O_SYNC, O_TRUNC, O_WRONLY}\n\
 @end defvr");
 #endif
 
 #if defined (O_ASYNC)
   DEFCONSTX ("O_ASYNC", SBV_O_ASYNC, O_ASYNC,
     "-*- texinfo -*-\n\
-@defvr {Built-in Variable} O_ASYNC\n\
+@defvr {Built-in Constant} O_ASYNC\n\
 File status flag, asynchronous I/O.\n\
+@seealso{fcntl, O_APPEND, O_CREAT, O_EXCL, O_NONBLOCK, O_RDONLY, O_RDWR, O_SYNC, O_TRUNC, O_WRONLY}\n\
 @end defvr");
 #endif
 
 #if defined (O_CREAT)
   DEFCONSTX ("O_CREAT", SBV_O_CREAT, O_CREAT,
     "-*- texinfo -*-\n\
-@defvr {Built-in Variable} O_CREAT\n\
+@defvr {Built-in Constant} O_CREAT\n\
 File status flag, create file if it does not exist.\n\
+@seealso{fcntl, O_APPEND, O_ASYNC, O_EXCL, O_NONBLOCK, O_RDONLY, O_RDWR, O_SYNC, O_TRUNC, O_WRONLY}\n\
 @end defvr");
 #endif
 
 #if defined (O_EXCL)
   DEFCONSTX ("O_EXCL", SBV_O_EXCL, O_EXCL,
     "-*- texinfo -*-\n\
-@defvr {Built-in Variable} O_EXCL\n\
+@defvr {Built-in Constant} O_EXCL\n\
 File status flag, file locking.\n\
+@seealso{fcntl, O_APPEND, O_ASYNC, O_CREAT, O_NONBLOCK, O_RDONLY, O_RDWR, O_SYNC, O_TRUNC, O_WRONLY}\n\
 @end defvr");
 #endif
 
 #if defined (O_NONBLOCK)
   DEFCONSTX ("O_NONBLOCK", SBV_O_NONBLOCK, O_NONBLOCK,
     "-*- texinfo -*-\n\
-@defvr {Built-in Variable} O_NONBLOCK\n\
+@defvr {Built-in Constant} O_NONBLOCK\n\
 File status flag, non-blocking I/O.\n\
+@seealso{fcntl, O_APPEND, O_ASYNC, O_CREAT, O_EXCL, O_RDONLY, O_RDWR, O_SYNC, O_TRUNC, O_WRONLY}\n\
 @end defvr");
 #endif
 
 #if defined (O_RDONLY)
   DEFCONSTX ("O_RDONLY", SBV_O_RDONLY, O_RDONLY,
     "-*- texinfo -*-\n\
-@defvr {Built-in Variable} O_RDONLY\n\
+@defvr {Built-in Constant} O_RDONLY\n\
 File status flag, file opened for reading only.\n\
+@seealso{fcntl, O_APPEND, O_ASYNC, O_CREAT, O_EXCL, O_NONBLOCK, O_RDWR, O_SYNC, O_TRUNC, O_WRONLY}\n\
 @end defvr");
 #endif
 
 #if defined (O_RDWR)
   DEFCONSTX ("O_RDWR", SBV_O_RDWR, O_RDWR,
     "-*- texinfo -*-\n\
-@defvr {Built-in Variable} O_RDWR\n\
+@defvr {Built-in Constant} O_RDWR\n\
 File status flag, file open for both reading and writing.\n\
+@seealso{fcntl, O_APPEND, O_ASYNC, O_CREAT, O_EXCL, O_NONBLOCK, O_RDONLY, O_SYNC, O_TRUNC, O_WRONLY}\n\
 @end defvr");
 #endif
 
 #if defined (O_SYNC)
   DEFCONSTX ("O_SYNC", SBV_O_SYNC, O_SYNC,
     "-*- texinfo -*-\n\
-@defvr {Built-in Variable} O_SYNC\n\
+@defvr {Built-in Constant} O_SYNC\n\
 File status flag, file opened for synchronous I/O.\n\
+@seealso{fcntl, O_APPEND, O_ASYNC, O_CREAT, O_EXCL, O_NONBLOCK, O_RDONLY, O_RDWR, O_TRUNC, O_WRONLY}\n\
 @end defvr");
 #endif
 
 #if defined (O_TRUNC)
   DEFCONSTX ("O_TRUNC", SBV_O_TRUNC, O_TRUNC,
     "-*- texinfo -*-\n\
 @defvr {Built-in Variable} O_TRUNC\n\
 File status flag, if file exists, truncate it when writing.\n\
+@seealso{fcntl, O_APPEND, O_ASYNC, O_CREAT, O_EXCL, O_NONBLOCK, O_RDONLY, O_RDWR, O_SYNC, O_WRONLY}\n\
 @end defvr");
 #endif
 
 #if defined (O_WRONLY)
   DEFCONSTX ("O_WRONLY", SBV_O_WRONLY, O_WRONLY,
     "-*- texinfo -*-\n\
-@defvr {Built-in Variable} O_WRONLY\n\
+@defvr {Built-in Constant} O_WRONLY\n\
 File status flag, file opened for writing only.\n\
+@seealso{fcntl, O_APPEND, O_ASYNC, O_CREAT, O_EXCL, O_NONBLOCK, O_RDONLY, O_RDWR, O_SYNC, O_TRUNC}\n\
 @end defvr");
 #endif
 
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
diff --git a/src/toplev.cc b/src/toplev.cc
--- a/src/toplev.cc
+++ b/src/toplev.cc
@@ -841,17 +841,17 @@ void
 
 #endif
 
 void
 symbols_of_toplev (void)
 {
   DEFCONST (argv, ,
     "-*- texinfo -*-\n\
-@defvr {Built-in Variable} argv\n\
+@defvr {Built-in Constant} argv\n\
 The command line arguments passed to Octave are available in this\n\
 variable.  For example, if you invoked Octave using the command\n\
 \n\
 @example\n\
 octave --no-line-editing --silent\n\
 @end example\n\
 \n\
 @noindent\n\
@@ -861,18 +861,18 @@ octave --no-line-editing --silent\n\
 If you write an executable Octave script, @code{argv} will contain the\n\
 list of arguments passed to the script.  @xref{Executable Octave Programs},\n\
 for an example of how to create an executable Octave script.\n\
 @end defvr");
 
   DEFCONST (program_invocation_name,
 	    octave_env::get_program_invocation_name (),
     "-*- texinfo -*-\n\
-@defvr {Built-in Variable} program_invocation_name\n\
-@defvrx {Built-in Variable} program_name\n\
+@defvr {Built-in Constant} program_invocation_name\n\
+@defvrx {Built-in Constant} program_name\n\
 When Octave starts, the value of the built-in variable\n\
 @code{program_invocation_name} is automatically set to the name that was\n\
 typed at the shell prompt to run Octave, and the value of\n\
 @code{program_name} is automatically set to the final component of\n\
 @code{program_invocation_name}.  For example, if you typed\n\
 @samp{@value{OCTAVEHOME}/bin/octave} to start Octave,\n\
 @code{program_invocation_name} would have the value\n\
 @code{\"@value{OCTAVEHOME}/bin/octave\"}, and @code{program_name} would\n\
@@ -881,32 +881,18 @@ have the value @code{\"octave\"}.\n\
 If executing a script from the command line (e.g., @code{octave foo.m})\n\
 or using an executable Octave script, the program name is set to the\n\
 name of the script.  @xref{Executable Octave Programs}, for an example of\n\
 how to create an executable Octave script.\n\
 @end defvr");
 
   DEFCONST (program_name, octave_env::get_program_name (),
     "-*- texinfo -*-\n\
-@defvr {Built-in Variable} program_invocation_name\n\
-@defvrx {Built-in Variable} program_name\n\
-When Octave starts, the value of the built-in variable\n\
-@code{program_invocation_name} is automatically set to the name that was\n\
-typed at the shell prompt to run Octave, and the value of\n\
-@code{program_name} is automatically set to the final component of\n\
-@code{program_invocation_name}.  For example, if you typed\n\
-@samp{@value{OCTAVEHOME}/bin/octave} to start Octave,\n\
-@code{program_invocation_name} would have the value\n\
-@code{\"@value{OCTAVEHOME}/bin/octave\"}, and @code{program_name} would\n\
-have the value @code{\"octave\"}.\n\
-\n\
-If executing a script from the command line (e.g., @code{octave foo.m})\n\
-or using an executable Octave script, the program name is set to the\n\
-name of the script.  @xref{Executable Octave Programs}, for an example of\n\
-how to create an executable Octave script.\n\
+@defvr {Built-in Variable} program_name\n\
+See: program_invocation_name.\n\
 @end defvr");
 
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
