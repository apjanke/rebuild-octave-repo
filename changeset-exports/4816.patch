# HG changeset patch
# User jwe
# Date 1078424026 0
#      Thu Mar 04 18:13:46 2004 +0000
# Node ID 4908c82cd1a11efcb650ce03323394fd4172df01
# Parent  2eb844b27953e294fa8176c7de3acd79c7bef0da
[project @ 2004-03-04 18:13:46 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,13 @@
+2004-03-04  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* configure.in: No longer accept --with-g77 (it is still possible
+	to use --with-f77=g77).
+
 2004-03-03  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* configure.in: Check for -mieee instead of -mieee-with-inexact.
 
 2004-02-20  Per Persson  <persquare@mac.com>
 
 	* mkoctfile.in (LINK_DEPS): Include $LDFLAGS in the list.
 
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -24,17 +24,17 @@ dnl Copyright (C) 1996, 1997 John W. Eat
 ### Preserve CFLAGS and CXXFLAGS from the environment before doing
 ### anything else because we don't know which macros might call
 ### AC_PROG_CC or AC_PROG_CXX.
 
 EXTERN_CFLAGS="$CFLAGS"
 EXTERN_CXXFLAGS="$CXXFLAGS"
 
 AC_INIT
-AC_REVISION($Revision: 1.448 $)
+AC_REVISION($Revision: 1.449 $)
 AC_PREREQ(2.57)
 AC_CONFIG_SRCDIR([src/octave.cc])
 AC_CONFIG_HEADER(config.h)
 
 AC_DEFINE(OCTAVE_SOURCE, 1, [Define if this is Octave.])
   
 OCTAVE_HOST_TYPE
 
@@ -89,48 +89,31 @@ AC_DEFINE(SEPCHAR_STR, [":"], [Define th
 
 ### Allow the user to force us to use f2c.
 
 AC_ARG_WITH(f2c,
   [  --with-f2c              use f2c even if Fortran compiler is available],
   [if test "$withval" = no; then use_f2c=false; else use_f2c=true; fi],
   use_f2c=false)
 
-### Allow the user to force us to use g77.
-
-AC_ARG_WITH(g77,
-  [  --with-g77              use g77 to compile Fortran subroutines],
-  [if test "$withval" = no; then use_g77=false; else use_g77=true; fi],
-  use_g77=false)
-
 ### Allow the user to force us to use f77.
 
 AC_ARG_WITH(f77,
   [  --with-f77              use f77 to compile Fortran subroutines],
   [if test "$withval" = no; then use_f77=false; else use_f77=true; fi],
   use_f77=false)
 
 ### Make sure only one of the above options for Fortran compilers was
 ### specified (multiple "no" or --without-FOO options are ok).
 
-OCTAVE_CHECK_EXCLUSIVE_WITH_OPTIONS(f77, g77,
-  [warn_f77_and_g77="--with-f77 and --with-g77 both specified!  Using g77..."
-  AC_MSG_WARN($warn_f77_and_g77)
-  use_g77=false])
-
 OCTAVE_CHECK_EXCLUSIVE_WITH_OPTIONS(f77, f2c,
   [warn_f2c_and_f77="--with-f2c and --with-f77 both specified!  Using f77..."
   AC_MSG_WARN($warn_f2c_and_f77)
   use_f2c=false])
 
-OCTAVE_CHECK_EXCLUSIVE_WITH_OPTIONS(g77, f2c,
-  [warn_f2c_and_g77="--with-f2c and --with-g77 both specified!  Using g77..."
-  AC_MSG_WARN($warn_f2c_and_g77)
-  use_f2c=false])
-
 dnl ### Allow the user disable support for plplot.
 dnl 
 dnl # USE_PLPLOT=true
 dnl # PLPLOT_DIR=plplot
 dnl # LIBPLPLOT='$(TOPDIR)/plplot/libplplot.$(LIBEXT)
 USE_PLPLOT=false
 PLPLOT_DIR=""
 LIBPLPLOT=""
@@ -450,36 +433,28 @@ fi
 OCTAVE_PROG_AR
 
 AC_PROG_RANLIB
 
 ### If we haven't been forced to use a particular Fortran compiler,
 ### try to find one using any one of several common Un*x Fortran
 ### compiler names using the AC_PROG_F77 macro.
 ###
-### The configure options --with-f77, --with-g77, or --with-f2c
-### force f77, g77 or f2c to be used.  It is also possible to use
+### The configure options --with-f77 or --with-f2c
+### force f77 or f2c to be used.  It is also possible to use
 ### these options to specify the name of the compiler.  For example,
-### `--with-g77=/opt/gnu/bin/f77' says that we are using g77 but it is
-### installed as /opt/gnu/bin/f77.
+### `--with-f77=g77' says that we are using g77 as the Fortran compiler.
 
 if $use_f77; then
   if test "$with_f77" = yes; then
     F77=f77
   else
     F77="$with_f77"
   fi
   AC_MSG_RESULT([defining F77 to be $F77])
-elif $use_g77; then
-  if test "$with_g77" = yes; then
-    F77=g77
-  else
-    F77="$with_g77"
-  fi
-  AC_MSG_RESULT([defining F77 to be $F77])
 elif $use_f2c; then
   F77=
   if test "$with_f2c" = yes; then
     F2C=f2c
   else
     F2C="$with_f2c"
   fi
   AC_MSG_RESULT([defining F2C to be $F2C])
@@ -1526,31 +1501,21 @@ if $ENABLE_DYNAMIC_LINKING; then
     true
   else
     AC_MSG_WARN([You used --enable-dl but not --enable-shared.])
     AC_MSG_WARN([Are you sure that is what you want to do?])
     warn_msg_printed=true
   fi
 fi
 
-if test -n "$warn_f77_and_g77"; then
-  AC_MSG_WARN($warn_f77_and_g77)
-  warn_msg_printed=true
-fi
-
 if test -n "$warn_f2c_and_f77"; then
   AC_MSG_WARN($warn_f2c_and_f77)
   warn_msg_printed=true
 fi
 
-if test -n "$warn_f2c_and_g77"; then
-  AC_MSG_WARN($warn_f2c_and_g77)
-  warn_msg_printed=true
-fi
-
 if test -n "$gxx_only"; then
   AC_MSG_WARN($gxx_only)
   warn_msg_printed=true
 fi
 
 if test -n "$warn_gcc_version"; then
   AC_MSG_WARN($warn_gcc_version)
   warn_msg_printed=true
diff --git a/liboctave/CNDArray.cc b/liboctave/CNDArray.cc
--- a/liboctave/CNDArray.cc
+++ b/liboctave/CNDArray.cc
@@ -112,17 +112,17 @@ ComplexNDArray::fourier (int dim) const
   for (int k = 0; k < nloop; k++)
     octave_fftw::fft (in + k * stride * n, out + k * stride * n, 
 		      n, howmany, stride, dist);
 
   return retval;
 }
 
 ComplexNDArray
-ComplexNDArray::ifourier (const int dim) const
+ComplexNDArray::ifourier (int dim) const
 {
   dim_vector dv = dims ();
 
   if (dim > dv.length () || dim < 0)
     return ComplexNDArray ();
 
   int stride = 1;
   int n = dv(dim);
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+2004-03-04  David Bateman  <dbateman@free.fr>
+
+	* dNDArray.cc (NDArray::ifourier): Arg is int, not const int.
+	* CNDArray.cc (ComplexNDArray::ifourier): Likewise.
+
 2004-03-03  Hans Ekkehard Plesser  <hans.ekkehard.plesser@nlh.no>
 
 	* base-lu.cc (base_lu<>::L): Check bounds before setting diagonal
 	element.
 
 2004-03-03  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* Range.h (Range::Range): Add cache to member initialization list.
diff --git a/liboctave/dNDArray.cc b/liboctave/dNDArray.cc
--- a/liboctave/dNDArray.cc
+++ b/liboctave/dNDArray.cc
@@ -70,17 +70,17 @@ NDArray::fourier (int dim) const
   for (int k = 0; k < nloop; k++)
     octave_fftw::fft (in + k * stride * n, out + k * stride * n, 
 		      n, howmany, stride, dist);
 
   return retval;
 }
 
 ComplexNDArray
-NDArray::ifourier (const int dim) const
+NDArray::ifourier (int dim) const
 {
   dim_vector dv = dims ();
 
   if (dim > dv.length () || dim < 0)
     return ComplexNDArray ();
 
   int stride = 1;
   int n = dv(dim);
