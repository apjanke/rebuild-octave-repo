# HG changeset patch
# User jwe
# Date 814081117 0
#      Thu Oct 19 05:38:37 1995 +0000
# Node ID caa1814892005fc4be3891a03bf746d46ffd7ab5
# Parent  4ef4fd7c0abd3b7332886067e13d82d217b48d2a
[project @ 1995-10-19 05:38:37 by jwe]

diff --git a/src/pt-const.cc b/src/pt-const.cc
--- a/src/pt-const.cc
+++ b/src/pt-const.cc
@@ -2893,17 +2893,18 @@ extern void assign (Array2<Complex>&, co
 extern void assign (Array2<double>&, const Array2<double>&);
 extern void assign (Array2<double>&, const Array2<char>&);
 
 extern void assign (Array2<char>&, const Array2<char>&);
 
 void
 TC_REP::assign (tree_constant& rhs, const Octave_object& args)
 {
-  tree_constant rhs_tmp = rhs.make_numeric ();
+  if (! (is_string () && rhs.is_string ()))
+    tree_constant rhs_tmp = rhs.make_numeric ();
 
   if (error_state)
     return;
 
   // An assignment to a range will normally require a conversion to a
   // vector in the end anyway, since it will normally destroy the
   // equally-spaced property of the range elements.  This is not as
   // memory efficient as possible, but it is much simpler than writing
