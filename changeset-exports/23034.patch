# HG changeset patch
# User Markus MÃ¼tzel <markus.muetzel@gmx.de>
# Date 1484037596 -3600
#      Tue Jan 10 09:39:56 2017 +0100
# Node ID 29ea25593dd71b92e59386a73f6c25113ce5c179
# Parent  8ba865cd470354a9afafe69144bc1e6c782ca93b
Calculate minor ticks outside major tick range (bug #45710).

* graphics.cc (axes::properties::calc_ticks_and_lims): Calculate minor
ticks outside major tick range for linear scaling.

diff --git a/libinterp/corefcn/graphics.cc b/libinterp/corefcn/graphics.cc
--- a/libinterp/corefcn/graphics.cc
+++ b/libinterp/corefcn/graphics.cc
@@ -7097,21 +7097,46 @@ axes::properties::calc_ticks_and_lims (a
 
   int n = is_logscale ? 8 : 4;
   Matrix tmp_mticks (1, n * (n_ticks - 1));
 
   for (int i = 0; i < n_ticks-1; i++)
     {
       double d = (tmp_ticks(i+1) - tmp_ticks(i)) / (n + 1);
       for (int j = 0; j < n; j++)
-        {
-          tmp_mticks(n*i+j) = tmp_ticks(i) + d * (j+1);
-        }
-    }
-  mticks = tmp_mticks;
+        tmp_mticks(n*i+j) = tmp_ticks(i) + d * (j+1);
+    }
+
+  if (is_logscale)
+    mticks = tmp_mticks;
+  else
+    {
+      // add minor ticks above and below min and max ticks
+      double d_below = (tmp_ticks(1) - tmp_ticks(0)) / (n+1);
+      int n_below = static_cast<int> (std::floor ((tmp_ticks(0)-lo)
+                                                  / d_below));
+      if (n_below < 0)
+        n_below = 0;
+      int n_between = tmp_mticks.columns ();
+      double d_above = (tmp_ticks(n_ticks-1) - tmp_ticks(n_ticks-2)) / (n+1);
+      int n_above = static_cast<int> (std::floor ((hi-tmp_ticks(n_ticks-1))
+                                                  / d_above));
+      if (n_above < 0)
+        n_above = 0;
+
+      Matrix tmp_mticks2 (1, n_below + n_between + n_above);
+      for (int i_below = 0; i_below < n_below; i_below++)
+        tmp_mticks2(i_below) = tmp_ticks(0) - (n_below-i_below) * d_below;
+      for (int i_between = 0; i_between < n_between; i_between++)
+        tmp_mticks2(n_below+i_between) = tmp_mticks(i_between);
+      for (int i_above = 0; i_above < n_above; i_above++)
+        tmp_mticks2(n_below+n_between+i_above) = tmp_ticks(n_ticks-1)
+                                                 + (i_above + 1) * d_above;
+      mticks = tmp_mticks2;
+    }
 }
 
 /*
 %!test <45356>
 %! hf = figure ("visible", "off");
 %! unwind_protect
 %!   plot (1:10);
 %!   xlim ([4.75, 8.5]);
