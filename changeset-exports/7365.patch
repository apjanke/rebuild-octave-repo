# HG changeset patch
# User jwe
# Date 1200206012 0
#      Sun Jan 13 06:33:32 2008 +0000
# Node ID f5e801eee0d12d235950917b7918eb2cb6407337
# Parent  0e07f78369d167ff7a9681ceb6590176bce69501
[project @ 2008-01-13 06:33:32 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,14 @@
+2008-01-13  Michael Goffioul <michael.goffioul@gmail.com>
+
+	* grahpics.h.in: Sprinkle with OCTINTERP_API as needed.
+	(axes::properties::xaxislocation): Allow value of zero.
+	(axes::properties::yaxislocation): Likewise.
+
 2008-01-12  Michael Goffioul <michael.goffioul@gmail.com>
 
 	* Makefile.in (distclean): Delete graphics-props.cc.
 
 	* genprops.awk: Handle new graphics property classes.
 
 	* graphics.h.in, graphics.cc: Adapt for new specific property types.
 
diff --git a/src/graphics.h.in b/src/graphics.h.in
--- a/src/graphics.h.in
+++ b/src/graphics.h.in
@@ -949,17 +949,17 @@ public:
 private:
   plist_map_type plist_map;
 };
 
 // ---------------------------------------------------------------------
 
 class base_graphics_object;
 
-class base_properties
+class OCTINTERP_API base_properties
 {
 public:
   base_properties (const std::string& ty = "unknown",
                    const graphics_handle& mh = graphics_handle (),
                    const graphics_handle& p = graphics_handle ())
     : tag ("tag", mh),
       type ("type", mh, ty),
       __modified__ ("__modified__", mh, true),
@@ -1095,17 +1095,17 @@ protected:
 
 protected:
   void insert_static_property (const std::string& name, base_property& p)
     { insert_property (name, property (&p, true)); }
   
   virtual void init (void) { }
 };
 
-class base_graphics_object
+class OCTINTERP_API base_graphics_object
 {
 public:
   friend class graphics_object;
 
   base_graphics_object (void) : count (1) { }
 
   base_graphics_object (const base_graphics_object&) { }
 
@@ -1218,17 +1218,17 @@ public:
     return type () == go_name;
   }
 
 protected:
   // A reference count.
   int count;
 };
 
-class graphics_object
+class OCTINTERP_API graphics_object
 {
 public:
   graphics_object (void) : rep (new base_graphics_object ()) { }
 
   graphics_object (base_graphics_object *new_rep)
     : rep (new_rep) { }
 
   graphics_object (const graphics_object& obj)
@@ -1383,17 +1383,17 @@ public:
   }
 
 private:
   base_graphics_object *rep;
 };
 
 // ---------------------------------------------------------------------
 
-class root_figure : public base_graphics_object
+class OCTINTERP_API root_figure : public base_graphics_object
 {
 public:
   class properties : public base_properties
   {
   public:
     // See the genprops.awk script for an explanation of the
     // properties declarations.
 
@@ -1515,17 +1515,17 @@ private:
 
   static property_list factory_properties;
 
   static property_list::plist_map_type init_factory_properties (void);
 };
 
 // ---------------------------------------------------------------------
 
-class figure : public base_graphics_object
+class OCTINTERP_API figure : public base_graphics_object
 {
 public:
   class properties : public base_properties
   {
   public:
     void close (void);
 
     // See the genprops.awk script for an explanation of the
@@ -1642,17 +1642,17 @@ public:
   bool valid_object (void) const { return true; }
 
 private:
   property_list default_properties;
 };
 
 // ---------------------------------------------------------------------
 
-class axes : public base_graphics_object
+class OCTINTERP_API axes : public base_graphics_object
 {
 public:
   class properties : public base_properties
   {
   public:
     void set_defaults (base_graphics_object& obj, const std::string& mode);
 
     void remove_child (const graphics_handle& h);
@@ -1707,18 +1707,18 @@ public:
       color_property ycolor , color_values (0, 0, 0)
       color_property zcolor , color_values (0, 0, 0)
       radio_property xscale al , "{linear}|log"
       radio_property yscale al , "{linear}|log"
       radio_property zscale al , "{linear}|log"
       radio_property xdir , "{normal}|reverse"
       radio_property ydir , "{normal}|reverse"
       radio_property zdir , "{normal}|reverse"
-      radio_property yaxislocation , "{left}|right"
-      radio_property xaxislocation , "{bottom}|top"
+      radio_property yaxislocation , "{left}|right|zero"
+      radio_property xaxislocation , "{bottom}|top|zero"
       array_property view , Matrix ()
       bool_property visible , "on"
       radio_property nextplot , "add|replace_children|{replace}"
       array_property outerposition , Matrix ()
       radio_property activepositionproperty a , "{outerposition}|position"
       radio_property __colorbar__ a , "{none}|north|south|east|west|northoutside|southoutside|eastoutside|westoutside"
    END_PROPERTIES
 
@@ -1839,17 +1839,17 @@ public:
   bool valid_object (void) const { return true; }
 
 private:
   property_list default_properties;
 };
 
 // ---------------------------------------------------------------------
 
-class line : public base_graphics_object
+class OCTINTERP_API line : public base_graphics_object
 {
 public:
   class properties : public base_properties
   {
   public:
     // See the genprops.awk script for an explanation of the
     // properties declarations.
 
@@ -1930,17 +1930,17 @@ public:
 
   void defaults (void) const { gripe_not_implemented ("line::defaults"); }
 
   bool valid_object (void) const { return true; }
 };
 
 // ---------------------------------------------------------------------
 
-class text : public base_graphics_object
+class OCTINTERP_API text : public base_graphics_object
 {
 public:
   class properties : public base_properties
   {
   public:
     // See the genprops.awk script for an explanation of the
     // properties declarations.
 
@@ -2022,17 +2022,17 @@ public:
 
   void defaults (void) const { gripe_not_implemented ("text::defaults"); }
 
   bool valid_object (void) const { return true; }
 };
 
 // ---------------------------------------------------------------------
 
-class image : public base_graphics_object
+class OCTINTERP_API image : public base_graphics_object
 {
 public:
   class properties : public base_properties
   {
   public:
     // See the genprops.awk script for an explanation of the
     // properties declarations.
 
@@ -2105,17 +2105,17 @@ public:
 
   void defaults (void) const { gripe_not_implemented ("image::defaults"); }
 
   bool valid_object (void) const { return true; }
 };
 
 // ---------------------------------------------------------------------
 
-class patch : public base_graphics_object
+class OCTINTERP_API patch : public base_graphics_object
 {
 public:
   class properties : public base_properties
   {
   public:
     // See the genprops.awk script for an explanation of the
     // properties declarations.
 
@@ -2204,17 +2204,17 @@ public:
 
   void defaults (void) const { gripe_not_implemented ("patch::defaults"); }
 
   bool valid_object (void) const { return true; }
 };
 
 // ---------------------------------------------------------------------
 
-class surface : public base_graphics_object
+class OCTINTERP_API surface : public base_graphics_object
 {
 public:
   class properties : public base_properties
   {
   public:
     // See the genprops.awk script for an explanation of the
     // properties declarations.
 
@@ -2306,17 +2306,17 @@ octave_value
 get_property_from_handle (double handle, const std::string &property,
 			  const std::string &func);
 bool
 set_property_in_handle (double handle, const std::string &property,
 			const octave_value &arg, const std::string &func);
 
 // ---------------------------------------------------------------------
 
-class gh_manager
+class OCTINTERP_API gh_manager
 {
 protected:
 
   gh_manager (void);
 
 public:
 
   static bool instance_ok (void)
@@ -2477,20 +2477,20 @@ private:
   graphics_handle do_current_figure (void) const
   {
     return figure_list.empty () ? graphics_handle () : figure_list.front ();
   }
 };
 
 
 // This function is NOT equivalent to the scripting language function gcf.
-graphics_handle gcf (void);
+OCTINTERP_API graphics_handle gcf (void);
 
 // This function is NOT equivalent to the scripting language function gca.
-graphics_handle gca (void);
+OCTINTERP_API graphics_handle gca (void);
 
 #endif
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
