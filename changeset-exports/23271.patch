# HG changeset patch
# User Rik <rik@octave.org>
# Date 1489381561 25200
#      Sun Mar 12 22:06:01 2017 -0700
# Node ID cc9dcadcef6bb205f714db7d94d2a541a10e2e69
# Parent  79122fab82ee9cce288257ce143767f5a406c90f
Only return a handle from ui* functions if nargout > 0 (bug #49751).

* uicontrol.m, uipanel.m, uipushtool.m, uiresume.m, uitoggletool.m,
uitoolbar.m: Capture handle of newly created object in htmp and assign to
output only if nargout > 0.  Update docstrings to show calling convention.

diff --git a/scripts/gui/uicontrol.m b/scripts/gui/uicontrol.m
--- a/scripts/gui/uicontrol.m
+++ b/scripts/gui/uicontrol.m
@@ -102,11 +102,15 @@ function hui = uicontrol (varargin)
 
   if (nargin == 1 && ishandle (varargin{1})
       && strcmpi (get (varargin{1}, "type"), "uicontrol"))
     error ("uicontrol: focusing not implemented yet");
   endif
 
   [h, args] = __uiobject_split_args__ ("uicontrol", varargin,
                                        {"figure", "uipanel", "uibuttongroup"});
-  hui = __go_uicontrol__ (h, args{:});
+  htmp = __go_uicontrol__ (h, args{:});
 
+  if (nargout > 0)
+    hui = htmp;
+  endif
+  
 endfunction
diff --git a/scripts/gui/uipanel.m b/scripts/gui/uipanel.m
--- a/scripts/gui/uipanel.m
+++ b/scripts/gui/uipanel.m
@@ -12,33 +12,37 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 ## GNU General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn  {} {@var{hui} =} uipanel (@var{property}, @var{value}, @dots{})
-## @deftypefnx {} {@var{hui} =} uipanel (@var{parent}, "@var{property}, @var{value}, @dots{})
+## @deftypefn  {} {} uipanel (@var{property}, @var{value}, @dots{})
+## @deftypefnx {} {} uipanel (@var{parent}, "@var{property}, @var{value}, @dots{})
+## @deftypefnx {} {@var{hui} =} uipanel (@dots{})
 ##
-## Create a uipanel object and return a handle to it.
+## Create a uipanel object.
 ##
 ## uipanels are used as containers to group other uicontrol objects.
 ##
 ## If @var{parent} is omitted then a uipanel for the current figure is
 ## created.  If no figure is available, a new figure is created first.
 ##
 ## If @var{parent} is given then a uipanel relative to @var{parent} is created.
 ##
 ## Any provided property value pairs will override the default values of the
 ## created uipanel object.
 ##
 ## Uipanel properties are documented at @ref{Uipanel Properties}.
 ##
+## The optional return value @var{hui} is a graphics handle to the created
+## uipanel object.
+##
 ## Examples:
 ##
 ## @example
 ## @group
 ## % create figure and panel on it
 ## f = figure;
 ## p = uipanel ("title", "Panel Title", "position", [.25 .25 .5 .5]);
 ##
@@ -52,11 +56,15 @@
 ## @end deftypefn
 
 ## Author: goffioul
 
 function hui = uipanel (varargin)
 
   [h, args] = __uiobject_split_args__ ("uipanel", varargin,
                                        {"figure", "uipanel", "uibuttongroup"});
-  hui = __go_uipanel__ (h, args{:});
+  htmp = __go_uipanel__ (h, args{:});
+  
+  if (nargout > 0)
+    hui = htmp;
+  endif
 
 endfunction
diff --git a/scripts/gui/uipushtool.m b/scripts/gui/uipushtool.m
--- a/scripts/gui/uipushtool.m
+++ b/scripts/gui/uipushtool.m
@@ -12,20 +12,21 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 ## GNU General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn  {} {@var{hui} =} uipushtool (@var{property}, @var{value}, @dots{})
-## @deftypefnx {} {@var{hui} =} uipushtool (@var{parent}, @var{property}, @var{value}, @dots{})
+## @deftypefn  {} {} uipushtool (@var{property}, @var{value}, @dots{})
+## @deftypefnx {} {} uipushtool (@var{parent}, @var{property}, @var{value}, @dots{})
+## @deftypefnx {} {@var{hui} =} uipushtool (@dots{})
 ##
-## Create a uipushtool object and return a handle to it.
+## Create a uipushtool object.
 ##
 ## uipushtools are buttons that appear on a figure toolbar.  The button is
 ## created with a border that is shown when the user hovers over the button.
 ## An image can be set using the cdata property.
 ##
 ## If @var{parent} is omitted then a uipushtool for the current figure is
 ## created.  If no figure is available, a new figure is created first.  If a
 ## figure is available, but does not contain a uitoolbar, a uitoolbar will be
@@ -34,16 +35,19 @@
 ## If @var{parent} is given then an uipushtools is created on the
 ## @var{parent} uitoolbar.
 ##
 ## Any provided property value pairs will override the default values of the
 ## created uipushtool object.
 ##
 ## Uipushtool properties are documented at @ref{Uipushtool Properties}.
 ##
+## The optional return value @var{hui} is a graphics handle to the created
+## uipushobject object.
+##
 ## Examples:
 ##
 ## @example
 ## @group
 ## % create figure without a default toolbar
 ## f = figure ("toolbar", "none");
 ## % create empty toolbar
 ## t = uitoolbar (f);
@@ -65,11 +69,16 @@ function hui = uipushtool (varargin)
   if (isempty (h))
     h = findobj (gcf, "-depth", 1, "type", "uitoolbar");
     if (isempty (h))
       h = uitoolbar ();
     else
       h = h(1);
     endif
   endif
-  hui = __go_uipushtool__ (h, args{:});
+  
+  htmp = __go_uipushtool__ (h, args{:});
+  
+  if (nargout > 0)
+    hui = htmp;
+  endif
 
 endfunction
diff --git a/scripts/gui/uiresume.m b/scripts/gui/uiresume.m
--- a/scripts/gui/uiresume.m
+++ b/scripts/gui/uiresume.m
@@ -25,16 +25,20 @@
 ## figure with handle @var{h}, this function does nothing.
 ## @seealso{uiwait}
 ## @end deftypefn
 
 ## Author: goffioul
 
 function uiresume (h)
 
+  if (nargin < 1)
+    h = gcf ();
+  endif
+
   if (! isfigure (h))
     error ("uiresume: invalid figure handle H");
   endif
 
   try
     uiwait_state = get (h, "__uiwait_state__");
     if (strcmp (uiwait_state, "active"))
       set (h, "__uiwait_state__", "triggered");
diff --git a/scripts/gui/uitoggletool.m b/scripts/gui/uitoggletool.m
--- a/scripts/gui/uitoggletool.m
+++ b/scripts/gui/uitoggletool.m
@@ -12,20 +12,21 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 ## GNU General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn  {} {@var{hui} =} uitoggletool (@var{property}, @var{value}, @dots{})
-## @deftypefnx {} {@var{hui} =} uitoggletool (@var{parent}, @var{property}, @var{value}, @dots{})
+## @deftypefn  {} {} uitoggletool (@var{property}, @var{value}, @dots{})
+## @deftypefnx {} {} uitoggletool (@var{parent}, @var{property}, @var{value}, @dots{})
+## @deftypefnx {} {@var{hui} =} uitoggletool (@dots{})
 ##
-## Create a uitoggletool object and return a handle to it.
+## Create a uitoggletool object.
 ##
 ## uitoggletool are togglebuttons that appear on a figure toolbar.  The
 ## button is created with a border that is shown when the user hovers over
 ## the button.  An image can be set using the cdata property.
 ##
 ## If @var{parent} is omitted then a uitoggletool for the current figure is
 ## created.  If no figure is available, a new figure is created first.  If a
 ## figure is available, but does not contain a uitoolbar, a uitoolbar will be
@@ -34,16 +35,19 @@
 ## If @var{parent} is given then a uitoggletool is created on the
 ## @var{parent} uitoolbar.
 ##
 ## Any provided property value pairs will override the default values of the
 ## created uitoggletool object.
 ##
 ## Uitoggletool properties are documented at @ref{Uitoggletool Properties}.
 ##
+## The optional return value @var{hui} is a graphics handle to the created
+## uitoggletool object.
+##
 ## Examples:
 ##
 ## @example
 ## @group
 ## % create figure without a default toolbar
 ## f = figure ("toolbar", "none");
 ## % create empty toolbar
 ## t = uitoolbar (f);
@@ -65,11 +69,16 @@ function hui = uitoggletool (varargin)
   if (isempty (h))
     h = findobj (gcf, "-depth", 1, "type", "uitoolbar");
     if (isempty (h))
       h = uitoolbar ();
     else
       h = h(1);
     endif
   endif
-  hui = __go_uitoggletool__ (h, args{:});
+  
+  htmp = __go_uitoggletool__ (h, args{:});
+  
+  if (nargout > 0)
+    hui = htmp;
+  endif
 
 endfunction
diff --git a/scripts/gui/uitoolbar.m b/scripts/gui/uitoolbar.m
--- a/scripts/gui/uitoolbar.m
+++ b/scripts/gui/uitoolbar.m
@@ -12,33 +12,37 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 ## GNU General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn  {} {@var{hui} =} uitoolbar (@var{property}, @var{value}, @dots{})
-## @deftypefnx {} {@var{hui} =} uitoolbar (@var{parent}, @var{property}, @var{value}, @dots{})
+## @deftypefn  {} {} uitoolbar (@var{property}, @var{value}, @dots{})
+## @deftypefnx {} {} uitoolbar (@var{parent}, @var{property}, @var{value}, @dots{})
+## @deftypefnx {} {@var{hui} =} uitoolbar (@dots{})
 ##
-## Create a uitoolbar object and return a handle to it.  A uitoolbar displays
-## uitoggletool and uipushtool buttons.
+## Create a uitoolbar object.  A uitoolbar displays uitoggletool and uipushtool
+## buttons.
 ##
 ## If @var{parent} is omitted then a uitoolbar for the current figure is
 ## created.  If no figure is available, a new figure is created first.
 ##
 ## If @var{parent} is given then a uitoolbar relative to @var{parent} is
 ## created.
 ##
 ## Any provided property value pairs will override the default values of the
 ## created uitoolbar object.
 ##
 ## Uitoolbar properties are documented at @ref{Uitoolbar Properties}.
 ##
+## The optional return value @var{hui} is a graphics handle to the created
+## uitoolbar object.
+##
 ## Examples:
 ##
 ## @example
 ## @group
 ## % create figure without a default toolbar
 ## f = figure ("toolbar", "none");
 ## % create empty toolbar
 ## t = uitoolbar (f);
@@ -47,11 +51,16 @@
 ## @seealso{figure, uitoggletool, uipushtool}
 ## @end deftypefn
 
 ## Author: goffioul
 
 function hui = uitoolbar (varargin)
 
   [h, args] = __uiobject_split_args__ ("uitoolbar", varargin, {"figure"});
-  hui = __go_uitoolbar__ (h, args{:});
+  
+  htmp = __go_uitoolbar__ (h, args{:});
+  
+  if (nargout > 0)
+    hui = htmp;
+  endif
 
 endfunction
