# HG changeset patch
# User jwe
# Date 1170725807 0
#      Tue Feb 06 01:36:47 2007 +0000
# Node ID 6fab59e81b4e275cabfe0d791e555b4e15b6bd75
# Parent  c8d25f5522305d35298adc6a0c7f3dd3ff150866
[project @ 2007-02-06 01:36:46 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,10 +1,12 @@
 2007-02-05  John W. Eaton  <jwe@octave.org>
 
+	* configure.in: Check for realpath function.
+
 	* demo.m: Delete obsolete file.
 
 2007-01-29  Michael Goffioul  <michael.goffioul@swing.be>
 
 	* configure.in (*-*-msdosmsvc): Set NO_OCT_FILE_STRIP to true.
 
 2007-01-24  John W. Eaton  <jwe@octave.org>
 
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -24,17 +24,17 @@ dnl Copyright (C) 1996, 1997 John W. Eat
 ### Preserve CFLAGS and CXXFLAGS from the environment before doing
 ### anything else because we don't know which macros might call
 ### AC_PROG_CC or AC_PROG_CXX.
 
 EXTERN_CFLAGS="$CFLAGS"
 EXTERN_CXXFLAGS="$CXXFLAGS"
 
 AC_INIT
-AC_REVISION($Revision: 1.551 $)
+AC_REVISION($Revision: 1.552 $)
 AC_PREREQ(2.57)
 AC_CONFIG_SRCDIR([src/octave.cc])
 AC_CONFIG_HEADER(config.h)
 
 OCTAVE_HOST_TYPE
 
 AC_DEFINE(OCTAVE_SOURCE, 1, [Define if this is Octave.])
   
@@ -1413,17 +1413,17 @@ fi
 
 ### Checks for functions and variables.
 
 AC_CHECK_FUNCS(atexit basename bcopy bzero canonicalize_file_name \
   dup2 endgrent endpwent execvp fcntl fork getcwd getegid geteuid \
   getgid getgrent getgrgid getgrnam getpgrp getpid getppid getpwent \
   getpwuid gettimeofday getuid getwd _kbhit kill link localtime_r \
   lstat memmove mkdir mkfifo mkstemp on_exit pipe poll putenv raise \
-  readlink rename resolvepath rindex rmdir round select setgrent \
+  readlink realpath rename resolvepath rindex rmdir round select setgrent \
   setlocale setpwent setvbuf sigaction siglongjmp sigpending sigprocmask \
   sigsuspend stat strcasecmp strdup strerror stricmp \
   strncasecmp strnicmp strsignal symlink tempnam umask \
   uname unlink usleep vfprintf vsprintf vsnprintf waitpid)
 
 case "$canonical_host_type" in
   *-*-msdosmsvc)
     ## The %T format specifier for strftime is reportedly broken,
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+2007-02-05  Thomas Treichl  <Thomas.Treichl@gmx.net>
+
+	* file-ops.cc (file_ops::canonicalize_file_name):
+	Provide implementation if realpath function is available.
+
 2007-01-29  Michael Goffioul  <michael.goffioul@swing.be>
 
 	* oct-fftw.h: Sprinkle with OCTAVE_API as needed.
 
 2007-01-17  Michael Goffioul  <michael.goffioul@swing.be>
 
 	* lo-sysdep.cc (octave_chdir): Handle directory names like "C:" on
 	Windows systems.
diff --git a/liboctave/file-ops.cc b/liboctave/file-ops.cc
--- a/liboctave/file-ops.cc
+++ b/liboctave/file-ops.cc
@@ -477,16 +477,38 @@ extern int errno;
         }
       else
         {
           n *= 2;
 	  win_path.resize (n);
         }
     }
 
+#elif defined (HAVE_REALPATH)
+
+#if !defined (__set_errno)
+# define __set_errno(Val) errno = (Val)
+#endif
+
+  if (name.empty ())
+    {
+      __set_errno (ENOENT);
+      return retval;
+    }
+
+  OCTAVE_LOCAL_BUFFER (char, buf, PATH_MAX);
+
+  char *tmp = ::realpath (name.c_str (), buf);
+
+  if (tmp)
+    {
+      retval = tmp;
+      ::free (tmp);
+    }
+
 #else
 
   // FIXME -- provide replacement here...
   retval = name;
 
 #endif
 
   if (retval.empty ())
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,14 @@
 2007-02-05  John W. Eaton  <jwe@octave.org>
 
+	* mex.cc (mxArray_number::as_octave_value): Fake mxSINGLE_CLASS
+	by returning double-precision values.
+	(mxArray_sparse::as_octave_value): Clarify error message.
+
 	* ov-complex.h (octave_complex): Use std instead of OCTAVE_STD
 	since the latter was unconditionally defined to be std anyway.
 
 2007-02-05  Michael Goffioul  <michael.goffioul@swing.be>
 
 	* ov-complex.h: Tag octave_complex class with OCTINTERP_API.
 
 2007-01-30  John W. Eaton  <jwe@octave.org>
diff --git a/src/mex.cc b/src/mex.cc
--- a/src/mex.cc
+++ b/src/mex.cc
@@ -1244,17 +1244,46 @@ protected:
 	  for (int i = 0; i < nel; i++)
 	    ptr[i] = static_cast<char> (ppr[i]);
 
 	  retval = octave_value (val, true, '\'');
 	}
 	break;
 
       case mxSINGLE_CLASS:
-	error ("single precision data type not supported");
+	{
+	  int nel = get_number_of_elements ();
+
+	  float *ppr = static_cast<float *> (pr);
+
+	  if (pi)
+	    {
+	      ComplexNDArray val (dv);
+
+	      Complex *ptr = val.fortran_vec ();
+
+	      float *ppi = static_cast<float *> (pi);
+
+	      for (int i = 0; i < nel; i++)
+		ptr[i] = Complex (ppr[i], ppi[i]);
+
+	      retval = val;
+	    }
+	  else
+	    {
+	      NDArray val (dv);
+
+	      double *ptr = val.fortran_vec ();
+
+	      for (int i = 0; i < nel; i++)
+		ptr[i] = ppr[i];
+
+	      retval = val;
+	    }
+	}
 	break;
 
       case mxDOUBLE_CLASS:
 	{
 	  int nel = get_number_of_elements ();
 
 	  double *ppr = static_cast<double *> (pr);
 
@@ -1420,17 +1449,17 @@ protected:
 	  for (int i = 0; i < get_n () + 1; i++)
 	    val.xcidx(i) = jc[i];
 
 	  retval = val;
 	}
 	break;
 
       case mxSINGLE_CLASS:
-	error ("single precision data type not supported");
+	error ("single precision sparse data type not supported");
 	break;
 
       case mxDOUBLE_CLASS:
 	{
 	  if (pi)
 	    {
 	      double *ppr = static_cast<double *> (pr);
 	      double *ppi = static_cast<double *> (pi);
