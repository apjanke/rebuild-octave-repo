# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1239964713 -7200
#      Fri Apr 17 12:38:33 2009 +0200
# Node ID 17a3df1d992bf75285c8005805400e66913fabd7
# Parent  c71fe7045aa0beefd4f8f3fcfe7ee811b9054c10
avoid double lookups when iterating Octave_map

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2009-04-17  Jaroslav Hajek  <highegg@gmail.com>
+
+	* oct-map.h (Octave_map::contents (const_iterator) const,
+	Octave_map::contents (iterator)): Simplify.
+
 2009-04-17  Jaroslav Hajek  <highegg@gmail.com>
 
 	* oct-map.cc (Octave_map::assign (const octave_value_list&, const
 	std::string&, const Cell&)): Fix & simplify.
 	(common_size): Remove.
 
 2009-04-16  Jaroslav Hajek  <highegg@gmail.com>
 
diff --git a/src/oct-map.h b/src/oct-map.h
--- a/src/oct-map.h
+++ b/src/oct-map.h
@@ -128,21 +128,21 @@ Octave_map
   iterator end (void) { return iterator (map.end ()); }
   const_iterator end (void) const { return const_iterator (map.end ()); }
 
   std::string key (const_iterator p) const { return p->first; }
 
   Cell& contents (const std::string& k);
   Cell contents (const std::string& k) const;
 
-  Cell& contents (const_iterator p)
-    { return contents (key(p)); }
+  Cell& contents (iterator p)
+    { return p->second; }
 
   Cell contents (const_iterator p) const
-    { return contents (key(p)); }
+    { return p->second; }
 
   int intfield (const std::string& k, int def_val = 0) const;
 
   std::string stringfield (const std::string& k,
 			   const std::string& def_val = std::string ()) const;
 
   iterator seek (const std::string& k) { return map.find (k); }
   const_iterator seek (const std::string& k) const { return map.find (k); }
