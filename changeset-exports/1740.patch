# HG changeset patch
# User jwe
# Date 821444689 0
#      Fri Jan 12 11:04:49 1996 +0000
# Node ID fe9d3b2ded2682341900e005ea7c69f3982f9e98
# Parent  bbfca89cb1cdd62f908ef2a74baf854d303331d2
[project @ 1996-01-12 11:03:26 by jwe]

diff --git a/src/balance.cc b/src/balance.cc
--- a/src/balance.cc
+++ b/src/balance.cc
@@ -24,29 +24,27 @@ Software Foundation, 59 Temple Place - S
 // Written by A. S. Hodel <scotte@eng.auburn.edu>
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <string>
 
-#include "CMatrix.h"
 #include "CmplxAEPBAL.h"
 #include "CmplxAEPBAL.h"
-#include "dMatrix.h"
 #include "dbleAEPBAL.h"
 #include "dbleAEPBAL.h"
 #include "dbleGEPBAL.h"
 
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "help.h"
-#include "tree-const.h"
+#include "oct-obj.h"
 #include "user-prefs.h"
 #include "utils.h"
 
 DEFUN_DLD_BUILTIN ("balance", Fbalance, Sbalance, FSbalance, 11,
   "AA = balance (A [, OPT]) or [[DD,] AA] =  balance (A [, OPT])\n\
 \n\
 generalized eigenvalue problem:\n\
 \n\
diff --git a/src/chol.cc b/src/chol.cc
--- a/src/chol.cc
+++ b/src/chol.cc
@@ -27,17 +27,17 @@ Software Foundation, 59 Temple Place - S
 
 #include "CmplxCHOL.h"
 #include "dbleCHOL.h"
 
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "help.h"
-#include "tree-const.h"
+#include "oct-obj.h"
 #include "user-prefs.h"
 #include "utils.h"
 
 DEFUN_DLD_BUILTIN ("chol", Fchol, Schol, FSchol, 11,
   "R = chol (X): cholesky factorization")
 {
   Octave_object retval;
 
diff --git a/src/colloc.cc b/src/colloc.cc
--- a/src/colloc.cc
+++ b/src/colloc.cc
@@ -27,17 +27,18 @@ Software Foundation, 59 Temple Place - S
 
 #include <string>
 
 #include "CollocWt.h"
 
 #include "defun-dld.h"
 #include "error.h"
 #include "help.h"
-#include "tree-const.h"
+#include "mappers.h"
+#include "oct-obj.h"
 #include "utils.h"
 
 DEFUN_DLD_BUILTIN ("colloc", Fcolloc, Scolloc, FScolloc, 10,
   "[R, A, B, Q] = colloc (N [, \"left\"] [, \"right\"]): collocation weights")
 {
   Octave_object retval;
 
   int nargin = args.length ();
diff --git a/src/dassl.cc b/src/dassl.cc
--- a/src/dassl.cc
+++ b/src/dassl.cc
@@ -30,18 +30,18 @@ Software Foundation, 59 Temple Place - S
 #include <strstream.h>
 
 #include "DAE.h"
 
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "help.h"
+#include "oct-obj.h"
 #include "pager.h"
-#include "tree-const.h"
 #include "utils.h"
 #include "variables.h"
 
 // Global pointer for user defined function required by dassl.
 static tree_fvc *dassl_fcn;
 
 static ODE_options dassl_opts;
 
diff --git a/src/det.cc b/src/det.cc
--- a/src/det.cc
+++ b/src/det.cc
@@ -27,17 +27,17 @@ Software Foundation, 59 Temple Place - S
 
 #include "CmplxDET.h"
 #include "dbleDET.h"
 
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "help.h"
-#include "tree-const.h"
+#include "oct-obj.h"
 #include "user-prefs.h"
 #include "utils.h"
 
 DEFUN_DLD_BUILTIN ("det", Fdet, Sdet, FSdet, 10,
   "det (X): determinant of a square matrix")
 {
   Octave_object retval;
 
diff --git a/src/eig.cc b/src/eig.cc
--- a/src/eig.cc
+++ b/src/eig.cc
@@ -26,17 +26,17 @@ Software Foundation, 59 Temple Place - S
 #endif
 
 #include "EIG.h"
 
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "help.h"
-#include "tree-const.h"
+#include "oct-obj.h"
 #include "user-prefs.h"
 #include "utils.h"
 
 DEFUN_DLD_BUILTIN ("eig", Feig, Seig, FSeig, 11,
   "eig (X) or [V, D] = eig (X): compute eigenvalues and eigenvectors of X")
 {
   Octave_object retval;
 
diff --git a/src/expm.cc b/src/expm.cc
--- a/src/expm.cc
+++ b/src/expm.cc
@@ -24,28 +24,25 @@ Software Foundation, 59 Temple Place - S
 // Written by A. S. Hodel <scotte@eng.auburn.edu>
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <cmath>
 
-#include "CColVector.h"
-#include "CMatrix.h"
 #include "CmplxAEPBAL.h"
-#include "dMatrix.h"
 #include "dbleAEPBAL.h"
 #include "f77-uscore.h"
 
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "help.h"
-#include "tree-const.h"
+#include "oct-obj.h"
 #include "user-prefs.h"
 #include "utils.h"
 
 extern "C"
 {
   double F77_FCN (dlange, DLANGE) (const char*, const int&,
 				   const int&, const double*,
 				   const int&, double*); 
diff --git a/src/fft.cc b/src/fft.cc
--- a/src/fft.cc
+++ b/src/fft.cc
@@ -20,24 +20,22 @@ along with Octave; see the file COPYING.
 Software Foundation, 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
-#include "CMatrix.h"
-#include "dMatrix.h"
-
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "help.h"
-#include "tree-const.h"
+#include "mappers.h"
+#include "oct-obj.h"
 #include "user-prefs.h"
 #include "utils.h"
 
 // This function should be merged with Fifft.
 
 DEFUN_DLD_BUILTIN ("fft", Ffft, Sfft, FSfft, 10,
   "fft (X [, N]): fast fourier transform of a vector")
 {
diff --git a/src/fft2.cc b/src/fft2.cc
--- a/src/fft2.cc
+++ b/src/fft2.cc
@@ -20,24 +20,22 @@ along with Octave; see the file COPYING.
 Software Foundation, 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
-#include "CMatrix.h"
-#include "dMatrix.h"
-
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "help.h"
-#include "tree-const.h"
+#include "mappers.h"
+#include "oct-obj.h"
 #include "user-prefs.h"
 #include "utils.h"
 
 // This function should be merged with Fifft2.
 
 DEFUN_DLD_BUILTIN ("fft2", Ffft2, Sfft2, FSfft2, 10,
   "fft2 (X [, N] [, M])\n\
 \n\
diff --git a/src/filter.cc b/src/filter.cc
--- a/src/filter.cc
+++ b/src/filter.cc
@@ -28,23 +28,19 @@ Software Foundation, 59 Temple Place - S
 //
 // Rewritten to use templates to handle both real and complex cases by
 // jwe, Wed Nov  1 19:15:29 1995.
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
-#include "Array.h"
-#include "CColVector.h"
-#include "dColVector.h"
-
 #include "defun-dld.h"
 #include "error.h"
-#include "tree-const.h"
+#include "oct-obj.h"
 #include "help.h"
 
 extern Array<double>
 filter (Array<double>&, Array<double>&, Array<double>&);
 
 extern Array<Complex>
 filter (Array<Complex>&, Array<Complex>&, Array<Complex>&);
 
diff --git a/src/find.cc b/src/find.cc
--- a/src/find.cc
+++ b/src/find.cc
@@ -24,17 +24,17 @@ Software Foundation, 59 Temple Place - S
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "help.h"
-#include "tree-const.h"
+#include "oct-obj.h"
 
 static Octave_object
 find_to_fortran_idx (const ColumnVector i_idx, const ColumnVector j_idx,
 		     const tree_constant& val, int nr, int nargout)
 {
   Octave_object retval;
 
   switch (nargout)
diff --git a/src/fsolve.cc b/src/fsolve.cc
--- a/src/fsolve.cc
+++ b/src/fsolve.cc
@@ -31,17 +31,17 @@ Software Foundation, 59 Temple Place - S
 
 #include "NLEqn.h"
 
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "help.h"
 #include "pager.h"
-#include "tree-const.h"
+#include "oct-obj.h"
 #include "utils.h"
 #include "variables.h"
 
 // Global pointer for user defined function required by hybrd1.
 static tree_fvc *fsolve_fcn;
 
 static NLEqn_options fsolve_opts;
 
diff --git a/src/fsqp.cc b/src/fsqp.cc
--- a/src/fsqp.cc
+++ b/src/fsqp.cc
@@ -25,17 +25,17 @@ Software Foundation, 59 Temple Place - S
 #include <config.h>
 #endif
 
 #include "FSQP.h"
 
 #include "defun-dld.h"
 #include "error.h"
 #include "help.h"
-#include "tree-const.h"
+#include "oct-obj.h"
 
 #ifndef FSQP_MISSING
 
 // Global pointers for user defined functions required by fsqp.
 // static tree *fsqp_objective;
 // static tree *fsqp_constraints;
 
 double
diff --git a/src/givens.cc b/src/givens.cc
--- a/src/givens.cc
+++ b/src/givens.cc
@@ -22,25 +22,23 @@ Software Foundation, 59 Temple Place - S
 */
 
 // Written by A. S. Hodel <scotte@eng.auburn.edu>
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
-#include "CMatrix.h"
-#include "dMatrix.h"
 #include "f77-uscore.h"
 
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "help.h"
-#include "tree-const.h"
+#include "oct-obj.h"
 #include "user-prefs.h"
 
 extern "C"
 {
   int F77_FCN (dlartg, DLARTG) (const double&, const double&, double&,
 				double&, double&);
 
   int F77_FCN (zlartg, ZLARTG) (const Complex&, const Complex&,
diff --git a/src/hess.cc b/src/hess.cc
--- a/src/hess.cc
+++ b/src/hess.cc
@@ -27,17 +27,17 @@ Software Foundation, 59 Temple Place - S
 
 #include "CmplxHESS.h"
 #include "dbleHESS.h"
 
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "help.h"
-#include "tree-const.h"
+#include "oct-obj.h"
 #include "user-prefs.h"
 #include "utils.h"
 
 DEFUN_DLD_BUILTIN ("hess", Fhess, Shess, FShess, 11,
   "[P, H] = hess (A) or H = hess (A): Hessenberg decomposition")
 {
   Octave_object retval;
 
diff --git a/src/ifft.cc b/src/ifft.cc
--- a/src/ifft.cc
+++ b/src/ifft.cc
@@ -20,24 +20,22 @@ along with Octave; see the file COPYING.
 Software Foundation, 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
-#include "CMatrix.h"
-#include "dMatrix.h"
-
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "help.h"
-#include "tree-const.h"
+#include "mappers.h"
+#include "oct-obj.h"
 #include "user-prefs.h"
 #include "utils.h"
 
 // This function should be merged with Ffft.
 
 DEFUN_DLD_BUILTIN ("ifft", Fifft, Sifft, FSifft, 10,
   "ifft (X [, N]): inverse fast fourier transform of a vector")
 {
diff --git a/src/ifft2.cc b/src/ifft2.cc
--- a/src/ifft2.cc
+++ b/src/ifft2.cc
@@ -20,24 +20,22 @@ along with Octave; see the file COPYING.
 Software Foundation, 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
-#include "CMatrix.h"
-#include "dMatrix.h"
-
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "help.h"
-#include "tree-const.h"
+#include "mappers.h"
+#include "oct-obj.h"
 #include "user-prefs.h"
 #include "utils.h"
 
 // This function should be merged with Ffft2.
 
 DEFUN_DLD_BUILTIN ("ifft2", Fifft2, Sifft2, FSifft2, 10,
   "ifft2 (X [, N] [, M])\n\
 \n\
diff --git a/src/inv.cc b/src/inv.cc
--- a/src/inv.cc
+++ b/src/inv.cc
@@ -20,24 +20,21 @@ along with Octave; see the file COPYING.
 Software Foundation, 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
-#include "CMatrix.h"
-#include "dMatrix.h"
-
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "help.h"
-#include "tree-const.h"
+#include "oct-obj.h"
 #include "user-prefs.h"
 #include "utils.h"
 
 DEFUN_DLD_BUILTIN ("inv", Finv, Sinv, FSinv, 10,
   "inv (X): inverse of a square matrix")
 {
   Octave_object retval;
 
diff --git a/src/lex.l b/src/lex.l
--- a/src/lex.l
+++ b/src/lex.l
@@ -45,22 +45,22 @@ Software Foundation, 59 Temple Place - S
 
 #include "error.h"
 #include "input.h"
 #include "lex.h"
 #include "toplev.h"
 #include "parse.h"
 #include "symtab.h"
 #include "token.h"
-#include "tree-base.h"
-#include "tree-cmd.h"
-#include "tree-const.h"
-#include "tree-expr.h"
-#include "tree-misc.h"
-#include "tree-plot.h"
+#include "pt-base.h"
+#include "pt-cmd.h"
+#include "pt-const.h"
+#include "pt-exp.h"
+#include "pt-misc.h"
+#include "pt-plot.h"
 #include "user-prefs.h"
 #include "utils.h"
 #include "variables.h"
 #include "y.tab.h"
 #include "oct-gperf.h"
 
 // Stack to hold tokens so that we can delete them when the parser is
 // reset and avoid growing forever just because we are stashing some
diff --git a/src/log.cc b/src/log.cc
--- a/src/log.cc
+++ b/src/log.cc
@@ -26,17 +26,17 @@ Software Foundation, 59 Temple Place - S
 #endif
 
 #include "EIG.h"
 
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "help.h"
-#include "tree-const.h"
+#include "oct-obj.h"
 #include "user-prefs.h"
 #include "utils.h"
 
 // XXX FIXME XXX -- the next two functions should really be just
 // one...
 
 DEFUN_DLD_BUILTIN ("logm", Flogm, Slogm, FSlogm, 10,
   "logm (X): matrix logarithm")
diff --git a/src/lpsolve.cc b/src/lpsolve.cc
--- a/src/lpsolve.cc
+++ b/src/lpsolve.cc
@@ -25,17 +25,17 @@ Software Foundation, 59 Temple Place - S
 #include <config.h>
 #endif
 
 #include "LPsolve.h"
 
 #include "defun-dld.h"
 #include "error.h"
 #include "help.h"
-#include "tree-const.h"
+#include "oct-obj.h"
 
 DEFUN_DLD_BUILTIN ("lp_solve", Flp_solve, Slp_solve, FSlp_solve, 00,
   "lp_solve (): solve linear programs using lp_solve.")
 {
   Octave_object retval;
 
   // Force a bad value of inform, and empty matrices for x and phi.
 
diff --git a/src/lsode.cc b/src/lsode.cc
--- a/src/lsode.cc
+++ b/src/lsode.cc
@@ -30,18 +30,18 @@ Software Foundation, 59 Temple Place - S
 #include <strstream.h>
 
 #include "ODE.h"
 
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "help.h"
+#include "oct-obj.h"
 #include "pager.h"
-#include "tree-const.h"
 #include "utils.h"
 #include "variables.h"
 
 // Global pointer for user defined function required by lsode.
 static tree_fvc *lsode_fcn;
 
 static ODE_options lsode_opts;
 
diff --git a/src/lu.cc b/src/lu.cc
--- a/src/lu.cc
+++ b/src/lu.cc
@@ -24,19 +24,20 @@ Software Foundation, 59 Temple Place - S
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "CmplxLU.h"
 #include "dbleLU.h"
 
 #include "defun-dld.h"
+#include "error.h"
 #include "gripes.h"
 #include "help.h"
-#include "tree-const.h"
+#include "oct-obj.h"
 #include "user-prefs.h"
 #include "utils.h"
 
 DEFUN_DLD_BUILTIN ("lu", Flu, Slu, FSlu, 11,
   "[L, U, P] = lu (A): LU factorization")
 {
   Octave_object retval;
 
diff --git a/src/minmax.cc b/src/minmax.cc
--- a/src/minmax.cc
+++ b/src/minmax.cc
@@ -26,17 +26,17 @@ Software Foundation, 59 Temple Place - S
 #endif
 
 #include <cmath>
 
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "help.h"
-#include "tree-const.h"
+#include "oct-obj.h"
 
 #ifndef MAX
 #define MAX(a,b) ((a) > (b) ? (a) : (b))
 #endif
 
 #ifndef MIN
 #define MIN(a,b) ((a) < (b) ? (a) : (b))
 #endif
diff --git a/src/npsol.cc b/src/npsol.cc
--- a/src/npsol.cc
+++ b/src/npsol.cc
@@ -30,18 +30,19 @@ Software Foundation, 59 Temple Place - S
 #include <strstream.h>
 
 #include "NPSOL.h"
 
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "help.h"
+#include "mappers.h"
+#include "oct-obj.h"
 #include "pager.h"
-#include "tree-const.h"
 #include "utils.h"
 #include "variables.h"
 
 #ifndef NPSOL_MISSING
 
 // Global pointers for user defined functions required by npsol.
 static tree_fvc *npsol_objective;
 static tree_fvc *npsol_constraints;
diff --git a/src/parse.y b/src/parse.y
--- a/src/parse.y
+++ b/src/parse.y
@@ -39,24 +39,27 @@ Software Foundation, 59 Temple Place - S
 
 #include "error.h"
 #include "input.h"
 #include "lex.h"
 #include "octave-hist.h"
 #include "toplev.h"
 #include "pager.h"
 #include "parse.h"
+#include "pt-cmd.h"
+#include "pt-const.h"
+#include "pt-fcn.h"
+#include "pt-fvc.h"
+#include "pt-mat.h"
+#include "pt-mvr.h"
+#include "pt-exp.h"
+#include "pt-misc.h"
+#include "pt-plot.h"
 #include "symtab.h"
 #include "token.h"
-#include "tree-base.h"
-#include "tree-cmd.h"
-#include "tree-const.h"
-#include "tree-expr.h"
-#include "tree-misc.h"
-#include "tree-plot.h"
 #include "user-prefs.h"
 #include "utils.h"
 #include "variables.h"
 
 // Nonzero means we're in the middle of defining a function.
 int defining_func = 0;
 
 // Nonzero means we're in the middle of defining a loop.
diff --git a/src/pinv.cc b/src/pinv.cc
--- a/src/pinv.cc
+++ b/src/pinv.cc
@@ -20,24 +20,21 @@ along with Octave; see the file COPYING.
 Software Foundation, 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
-#include "CMatrix.h"
-#include "dMatrix.h"
-
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "help.h"
-#include "tree-const.h"
+#include "oct-obj.h"
 #include "user-prefs.h"
 #include "utils.h"
 
 DEFUN_DLD_BUILTIN ("pinv", Fpinv, Spinv, FSpinv, 10,
   "pinv ( [, tol])\n\
 Returns the pseudoinverse of X; singular values less than tol are ignored.")
 {
   Octave_object retval;
diff --git a/src/pt-cmd.h b/src/pt-cmd.h
--- a/src/pt-cmd.h
+++ b/src/pt-cmd.h
@@ -1,9 +1,9 @@
-// tree-cmd.h                                          -*- C++ -*-
+// pt-cmd.h                                          -*- C++ -*-
 /*
 
 Copyright (C) 1992, 1993, 1994, 1995 John W. Eaton
 
 This file is part of Octave.
 
 Octave is free software; you can redistribute it and/or modify it
 under the terms of the GNU General Public License as published by the
@@ -23,17 +23,17 @@ Software Foundation, 59 Temple Place - S
 
 #if !defined (octave_tree_cmd_h)
 #define octave_tree_cmd_h 1
 
 #if defined (__GNUG__)
 #pragma interface
 #endif
 
-#include <iostream.h>
+class ostream;
 
 class Octave_object;
 
 class tree_statement_list;
 class tree_global_init_list;
 class tree_if_command_list;
 class tree_expression;
 class tree_index_expression;
@@ -48,17 +48,17 @@ class tree_while_command;
 class tree_for_command;
 class tree_if_command;
 class tree_try_catch_command;
 class tree_unwind_protect_command;
 class tree_break_command;
 class tree_continue_command;
 class tree_return_command;
 
-#include "tree-base.h"
+#include "pt-base.h"
 
 // A base class for commands.
 
 class
 tree_command : public tree
 {
 public:
   tree_command (int l = -1, int c = -1) : tree (l, c) { }
@@ -67,22 +67,21 @@ public:
 
   virtual void eval (void) = 0;
 };
 
 class
 tree_global_command : public tree_command
 {
 public:
-  tree_global_command (int l = -1, int c = -1) : tree_command (l, c)
-    { init_list = 0; }
+  tree_global_command (int l = -1, int c = -1)
+    : tree_command (l, c), init_list (0) { }
 
   tree_global_command (tree_global_init_list *t, int l = -1, int c = -1)
-    : tree_command (l, c)
-      { init_list = t; }
+    : tree_command (l, c), init_list (t) { }
 
   ~tree_global_command (void);
 
   void eval (void);
 
   void print_code (ostream& os);
 
 private:
@@ -90,36 +89,25 @@ private:
 };
 
 // While.
 
 class
 tree_while_command : public tree_command
 {
 public:
-  tree_while_command (int l = -1, int c = -1) : tree_command (l, c)
-    {
-      expr = 0;
-      list = 0;
-    }
+  tree_while_command (int l = -1, int c = -1)
+    : tree_command (l, c), expr (0), list (0) { }
 
   tree_while_command (tree_expression *e, int l = -1, int c = -1)
-    : tree_command (l, c)
-      {
-	expr = e;
-	list = 0;
-      }
+    : tree_command (l, c), expr (e), list (0) { }
 
   tree_while_command (tree_expression *e, tree_statement_list *lst,
 		      int l = -1, int c = -1)
-    : tree_command (l, c)
-      {
-	expr = e;
-	list = lst;
-      }
+    : tree_command (l, c), expr (e), list (lst) { }
 
   ~tree_while_command (void);
 
   void eval (void);
 
   void eval_error (void);
 
   void print_code (ostream& os);
@@ -130,43 +118,28 @@ private:
 };
 
 // For.
 
 class
 tree_for_command : public tree_command
 {
 public:
-  tree_for_command (int l = -1, int c = -1) : tree_command (l, c)
-    {
-      id = 0;
-      id_list = 0;
-      expr = 0;
-      list = 0;
-    }
+  tree_for_command (int l = -1, int c = -1)
+    : tree_command (l, c), id (0), id_list (0), expr (0), list (0) { }
 
   tree_for_command (tree_index_expression *ident, tree_expression *e,
 		    tree_statement_list *lst, int l = -1, int c = -1)
-    : tree_command (l, c)
-      {
-	id = ident;
-	id_list = 0;
-	expr = e;
-	list = lst;
-      }
+    : tree_command (l, c), id (ident), id_list (0), expr (e),
+      list (lst) { }
 
   tree_for_command (tree_return_list *ident, tree_expression *e,
 		    tree_statement_list *lst, int l = -1, int c = -1)
-    : tree_command (l, c)
-      {
-	id = 0;
-	id_list = ident;
-	expr = e;
-	list = lst;
-      }
+    : tree_command (l, c), id (0), id_list (ident), expr (e),
+      list (lst) { }
 
   ~tree_for_command (void);
 
   void eval (void);
 
   void eval_error (void);
 
   void print_code (ostream& os);
@@ -188,22 +161,21 @@ private:
 };
 
 // If.
 
 class
 tree_if_command : public tree_command
 {
 public:
-  tree_if_command (int l = -1, int c = -1) : tree_command (l, c)
-    { list = 0; }
+  tree_if_command (int l = -1, int c = -1)
+    : tree_command (l, c), list (0) { }
 
   tree_if_command (tree_if_command_list *lst, int l = -1, int c = -1)
-    : tree_command (l, c)
-      { list = lst; }
+    : tree_command (l, c), list (lst) { }
 
   ~tree_if_command (void);
 
   void eval (void);
 
   void eval_error (void);
 
   void print_code (ostream& os);
@@ -213,30 +185,23 @@ private:
 };
 
 // Simple exception handling.
 
 class
 tree_unwind_protect_command : public tree_command
 {
 public:
-  tree_unwind_protect_command (int l = -1, int c = -1) : tree_command (l, c)
-    {
-      unwind_protect_code = 0;
-      cleanup_code = 0;
-    }
+  tree_unwind_protect_command (int l = -1, int c = -1)
+    : tree_command (l, c), unwind_protect_code (0), cleanup_code (0) { }
 
   tree_unwind_protect_command (tree_statement_list *tc,
 			       tree_statement_list *cc,
 			       int l = -1, int c = -1)
-    : tree_command (l, c)
-      {
-	unwind_protect_code = tc;
-	cleanup_code = cc;
-      }
+    : tree_command (l, c), unwind_protect_code (tc), cleanup_code (cc) { }
 
   ~tree_unwind_protect_command (void);
 
   void eval (void);
 
   void print_code (ostream& os);
 
 private:
@@ -245,30 +210,23 @@ private:
 };
 
 // Simple exception handling.
 
 class
 tree_try_catch_command : public tree_command
 {
 public:
-  tree_try_catch_command (int l = -1, int c = -1) : tree_command (l, c)
-    {
-      try_code = 0;
-      catch_code = 0;
-    }
+  tree_try_catch_command (int l = -1, int c = -1)
+    : tree_command (l, c), try_code (0), catch_code (0) { }
 
   tree_try_catch_command (tree_statement_list *tc,
 			       tree_statement_list *cc,
 			       int l = -1, int c = -1)
-    : tree_command (l, c)
-      {
-	try_code = tc;
-	catch_code = cc;
-      }
+    : tree_command (l, c), try_code (tc), catch_code (cc) { }
 
   ~tree_try_catch_command (void);
 
   void eval (void);
 
   void print_code (ostream& os);
 
 private:
diff --git a/src/pt-const.h b/src/pt-const.h
--- a/src/pt-const.h
+++ b/src/pt-const.h
@@ -1,9 +1,9 @@
-// tree-const.h                                        -*- C++ -*-
+// pt-const.h                                        -*- C++ -*-
 /*
 
 Copyright (C) 1992, 1993, 1994, 1995 John W. Eaton
 
 This file is part of Octave.
 
 Octave is free software; you can redistribute it and/or modify it
 under the terms of the GNU General Public License as published by the
@@ -27,29 +27,25 @@ Software Foundation, 59 Temple Place - S
 #if defined (__GNUG__)
 #pragma interface
 #endif
 
 #include <cstdlib>
 
 #include <string>
 
-#include <iostream.h>
+class ostream;
 
 #include "Range.h"
 #include "mx-base.h"
 
-#include "oct-obj.h"
-#include "tree-base.h"
-#include "tree-expr.h"
+#include "pt-fvc.h"
 
-class idx_vector;
 class Octave_map;
-
-struct Mapper_fcn;
+class Octave_object;
 
 // Constants.
 
 class
 tree_constant : public tree_fvc
 {
 private:
 
@@ -619,30 +615,17 @@ public:
 	{
 	  rep->maybe_mutate ();  // XXX FIXME XXX -- is this necessary?
 	  print ();
 	}
 
       return *this;
     }
 
-  Octave_object eval (int print, int /* nargout */, const Octave_object& args)
-    {
-      Octave_object retval;
-
-      if (args.length () > 0)
-	retval(0) = rep->do_index (args);
-      else
-	retval(0) = *this;
-
-      if (retval(0).is_defined ())
-	retval(0).eval (print);
-
-      return retval;
-    }
+  Octave_object eval (int, int, const Octave_object&);
 
   // Store the original text corresponding to this constant for later
   // pretty printing.
 
   void stash_original_text (char *s)
     { rep->stash_original_text (s); }
 
   // Pretty print this constant.
diff --git a/src/pt-exp-base.h b/src/pt-exp-base.h
--- a/src/pt-exp-base.h
+++ b/src/pt-exp-base.h
@@ -1,9 +1,9 @@
-// tree-expr.h                                      -*- C++ -*-
+// pt-exp.h                                      -*- C++ -*-
 /*
 
 Copyright (C) 1992, 1993, 1994, 1995 John W. Eaton
 
 This file is part of Octave.
 
 Octave is free software; you can redistribute it and/or modify it
 under the terms of the GNU General Public License as published by the
@@ -23,54 +23,19 @@ Software Foundation, 59 Temple Place - S
 
 #if !defined (octave_tree_expr_h)
 #define octave_tree_expr_h 1
 
 #if defined (__GNUG__)
 #pragma interface
 #endif
 
-#include <cstdio>
-#include <ctime>
-
-#include <iostream.h>
-
-#include "SLList.h"
-
-#include "error.h"
-#include "mappers.h"
-#include "oct-obj.h"
-#include "variables.h"
+class tree_constant;
 
-class tree_constant;
-class tree_statement_list;
-class tree_argument_list;
-class tree_parameter_list;
-class tree_return_list;
-class tree_va_return_list;
-class symbol_record;
-class symbol_table;
-
-class tree_matrix;
-class tree_builtin;
-class tree_identifier;
-class tree_indirect_ref;
-class tree_function;
-class tree_expression;
-class tree_prefix_expression;
-class tree_postfix_expression;
-class tree_unary_expression;
-class tree_binary_expression;
-class tree_assignment_expression;
-class tree_simple_assignment_expression;
-class tree_multi_assignment_expression;
-class tree_colon_expression;
-class tree_index_expression;
-
-#include "tree-base.h"
+#include "pt-base.h"
 
 // A base class for expressions.
 
 class
 tree_expression : public tree
 {
 public:
   int in_parens;
@@ -107,21 +72,18 @@ public:
       hermitian,
       transpose,
       colon,
       index,
       increment,
       decrement,
    };
 
-  tree_expression (int l = -1, int c = -1) : tree (l, c)
-    {
-      in_parens = 0;
-      etype = unknown;
-    }
+  tree_expression (int l = -1, int c = -1, type et = unknown)
+    : tree (l, c), in_parens (0), etype (et) { }
 
   virtual ~tree_expression (void) { }
 
   virtual int is_constant (void) const
     { return 0; }
 
   virtual int is_matrix_constant (void) const
     { return 0; }
@@ -144,830 +106,24 @@ public:
   virtual int is_assignment_expression (void) const
     { return 0; }
 
   virtual int is_prefix_expression (void) const
     { return 0; }
 
   virtual int is_logically_true (const char *);
 
-  virtual void mark_for_possible_ans_assign (void)
-    { panic_impossible (); }
+  virtual void mark_for_possible_ans_assign (void);
 
   virtual tree_constant eval (int print) = 0;
 
 protected:
   type etype;
 };
 
-// General matrices.  This allows us to construct matrices from
-// other matrices, variables, and functions.
-
-class
-tree_matrix : public tree_expression
-{
-public:
-  enum dir
-    {
-      md_none,
-      md_right,
-      md_down,
-    };
-
-  tree_matrix (void)
-    {
-      direction = tree_matrix::md_none;
-      element = 0;
-      next = 0;
-    }
-
-  tree_matrix (tree_expression *e, tree_matrix::dir d)
-    {
-      direction = d;
-      element = e;
-      next = 0;
-    }
-
-  ~tree_matrix (void);
-
-  int is_matrix_constant (void) const;
-
-  tree_matrix *chain (tree_expression *e, tree_matrix::dir d);
-  tree_matrix *reverse (void);
-  int length (void);
-
-  tree_return_list *to_return_list (void);
-
-  tree_constant eval (int print);
-
-  void print_code (ostream& os);
-
-private:
-  tree_matrix::dir direction; // Direction from the previous element.
-  tree_expression *element;
-  tree_matrix *next;
-};
-
-// A base class for objects that can be return multiple values
-
-class
-tree_multi_val_ret : public tree_expression
-{
-public:
-  tree_multi_val_ret (int l = -1, int c = -1) : tree_expression (l, c) { }
-
-  ~tree_multi_val_ret (void) { }
-
-  int is_multi_val_ret_expression (void) const
-    { return 1; }
-
-  tree_constant eval (int print);
-
-  virtual Octave_object eval (int print, int nargout,
-			      const Octave_object& args) = 0;
-};
-
-// Used internally.
-
-class
-tree_oct_obj : public tree_multi_val_ret
-{
-public:
-  tree_oct_obj (int l = -1, int c = -1) : tree_multi_val_ret (l, c) { }
-
-  tree_oct_obj (const Octave_object& v, int l = -1, int c = -1)
-    : tree_multi_val_ret (l, c)
-      {
-	values = v;
-      }
-
-  ~tree_oct_obj (void) { }
-
-  tree_constant eval (int print);
-
-  Octave_object eval (int print, int nargout, const Octave_object& args);
-
-  void print_code (ostream&) { }
-
-private:
-  Octave_object values;
-};
-
-// A base class for objects that can be evaluated with argument lists.
-
-class
-tree_fvc : public tree_multi_val_ret
-{
-public:
-  tree_fvc (int l = -1, int c = -1) : tree_multi_val_ret (l, c) { }
-
-  ~tree_fvc (void) { }
-
-  virtual tree_constant assign (tree_constant& t,
-				const Octave_object& args);
-
-  virtual char *name (void) const
-    { panic_impossible (); return 0; }
-
-  virtual void bump_value (tree_expression::type)
-    { panic_impossible (); }
-
-  virtual tree_constant lookup_map_element (SLList<char*>& list,
-					    int insert = 0, int silent = 0);
-
-  virtual char *fcn_file_name (void)
-    { return 0; }
-
-  virtual time_t time_parsed (void)
-    { panic_impossible (); return 0; }
-
-  virtual int is_system_fcn_file (void) const
-    { return 0; }
-
-  virtual int save (ostream& /* os */, int /* mark_as_global */ = 0,
-		    int /* precision */ = 17)
-    { panic_impossible (); return 0; }
-};
-
-// Symbols from the symbol table.
-
-class
-tree_identifier : public tree_fvc
-{
-  friend class tree_index_expression;
-
-public:
-  tree_identifier (int l = -1, int c = -1) : tree_fvc (l, c)
-    {
-      sym = 0;
-      maybe_do_ans_assign = 0;
-    }
-
-  tree_identifier (symbol_record *s, int l = -1, int c = -1) : tree_fvc (l, c)
-    {
-      sym = s;
-      maybe_do_ans_assign = 0;
-    }
-
-  ~tree_identifier (void) { }
-
-  int is_identifier (void) const
-    { return 1; }
-
-  char *name (void) const;
-
-  tree_identifier *define (tree_constant *t);
-  tree_identifier *define (tree_function *t);
-
-  void document (char *s);
-
-  tree_constant assign (tree_constant& t);
-  tree_constant assign (tree_constant& t, const Octave_object& args);
-
-  tree_constant assign (SLList<char*> list, tree_constant& t);
-  tree_constant assign (SLList<char*> list, tree_constant& t,
-			const Octave_object& args); 
-
-  int is_defined (void);
-
-  void bump_value (tree_expression::type);
-
-  tree_fvc *do_lookup (int& script_file_executed, int exec_script = 1);
-
-  void link_to_global (void);
-
-  void mark_as_formal_parameter (void);
-
-  void mark_for_possible_ans_assign (void)
-    { maybe_do_ans_assign = 1; }
-
-  tree_constant eval (int print);
-
-  Octave_object eval (int print, int nargout, const Octave_object& args);
-
-  void eval_undefined_error (void);
-
-  void print_code (ostream& os);
-
-private:
-  symbol_record *sym;
-  int maybe_do_ans_assign;
-};
-
-// Indirect references to values (structure references).
-
-class
-tree_indirect_ref : public tree_fvc
-{
-public:
-  tree_indirect_ref (int l = -1, int c = -1) : tree_fvc (l, c)
-    {
-      id = 0;
-      preserve_ident = 0;
-    }
-
-  tree_indirect_ref (tree_identifier *i, int l = -1, int c = -1)
-    : tree_fvc (l, c)
-      {
-	id = i;
-	preserve_ident = 0;
-      }
-
-  ~tree_indirect_ref (void);
-
-  tree_indirect_ref *chain (const char *s);
-
-  int is_indirect_ref (void) const
-    { return 1; }
-
-  int is_identifier_only (void) const
-    { return (id && refs.empty ()); }
-
-  tree_identifier *ident (void)
-    { return id; }
-
-  void preserve_identifier (void)
-    { preserve_ident = 1; }
-
-  char *name (void);
-
-  tree_constant assign (tree_constant& t);
-  tree_constant assign (tree_constant& t, const Octave_object& args);
-
-  void mark_for_possible_ans_assign (void)
-    { id->mark_for_possible_ans_assign (); }
-
-  tree_constant eval (int print);
-
-  Octave_object eval (int print, int nargout, const Octave_object& args);
-
-  void print_code (ostream& os);
-
-private:
-  tree_identifier *id;
-  SLList<char*> refs;
-  int preserve_ident;
-};
-
-// Index expressions.
-
-class
-tree_index_expression : public tree_multi_val_ret
-{
-public:
-  tree_index_expression (int l = -1, int c = -1) : tree_multi_val_ret (l, c)
-    {
-      id = 0;
-      list = 0;
-    }
-
-  tree_index_expression (tree_identifier *i, int l = -1, int c = -1)
-    : tree_multi_val_ret (l, c)
-      {
-	id = new tree_indirect_ref (i);
-	list = 0;
-      }
-
-  tree_index_expression (tree_identifier *i, tree_argument_list *lst,
-			 int l = -1, int c = -1)
-    : tree_multi_val_ret (l, c)
-      {
-	id = new tree_indirect_ref (i);
-	list = lst;
-      }
-
-  tree_index_expression (tree_indirect_ref *i, int l = -1, int c = -1)
-    : tree_multi_val_ret (l, c)
-      {
-	id = i;
-	list = 0;
-      }
-
-  tree_index_expression (tree_indirect_ref *i, tree_argument_list *lst,
-			 int l = -1, int c = -1)
-    : tree_multi_val_ret (l, c)
-      {
-	id = i;
-	list = lst;
-      }
-
-  ~tree_index_expression (void);
-
-  int is_index_expression (void) const
-    { return 1; }
-
-  tree_indirect_ref *ident (void)
-    { return id; }
-
-  char *name (void)
-    { return id->name (); }
-
-  tree_argument_list *arg_list (void)
-    { return list; }
-
-  void mark_for_possible_ans_assign (void)
-    {
-      if (id)
-	id->mark_for_possible_ans_assign ();
-    }
-
-  tree_constant eval (int print);
-
-  Octave_object eval (int print, int nargout, const Octave_object& args);
-
-  void eval_error (void);
-
-  void print_code (ostream& os);
-
- private:
-  tree_indirect_ref *id;
-  tree_argument_list *list;
-};
-
-// Prefix expressions.
-
-class
-tree_prefix_expression : public tree_expression
-{
- public:
-  tree_prefix_expression (int l = -1, int c = -1) : tree_expression (l, c)
-    {
-      id = 0;
-      etype = unknown;
-    }
-
-  tree_prefix_expression (tree_identifier *t, tree_expression::type et,
-			  int l = -1, int c = -1)
-    : tree_expression (l, c)
-      {
-	id = t;
-	etype = et;
-      }
-
-  ~tree_prefix_expression (void)
-    { delete id; }
-
-  tree_constant eval (int print);
-
-  void eval_error (void);
-
-  int is_prefix_expression (void) const
-    { return 1; }
-
-  char *oper (void) const;
-
-  void print_code (ostream& os);
-
- private:
-  tree_identifier *id;
-};
-
-// Postfix expressions.
-
-class
-tree_postfix_expression : public tree_expression
-{
- public:
-  tree_postfix_expression (int l = -1, int c = -1) : tree_expression (l, c)
-    {
-      id = 0;
-      etype = unknown;
-    }
-
-  tree_postfix_expression (tree_identifier *t, tree_expression::type et,
-			   int l = -1, int c = -1)
-    : tree_expression (l, c)
-      {
-	id = t;
-	etype = et;
-      }
-
-  ~tree_postfix_expression (void)
-    { delete id; }
-
-  tree_constant eval (int print);
-
-  void eval_error (void);
-
-  char *oper (void) const;
-
-  void print_code (ostream& os);
-
- private:
-  tree_identifier *id;
-};
-
-// Unary expressions.
-
-class
-tree_unary_expression : public tree_expression
-{
- public:
-  tree_unary_expression (int l = -1, int c = -1) : tree_expression (l, c)
-    {
-      etype = tree_expression::unknown;
-      op = 0;
-    }
-
-  tree_unary_expression (tree_expression *a, tree_expression::type t,
-			 int l = -1, int c = -1)
-    : tree_expression (l, c)
-      {
-	etype = t;
-	op = a;
-      }
-
-  ~tree_unary_expression (void)
-    { delete op; }
-
-  tree_constant eval (int print);
-
-  void eval_error (void);
-
-  char *oper (void) const;
-
-  void print_code (ostream& os);
-
- private:
-  tree_expression *op;
-};
-
-// Binary expressions.
-
-class
-tree_binary_expression : public tree_expression
-{
- public:
-  tree_binary_expression (int l = -1, int c = -1) : tree_expression (l, c)
-    {
-      etype = tree_expression::unknown;
-      op1 = 0;
-      op2 = 0;
-    }
-
-  tree_binary_expression (tree_expression *a, tree_expression *b,
-			  tree_expression::type t, int l = -1, int c = -1)
-    : tree_expression (l, c)
-      {
-	etype = t;
-	op1 = a;
-	op2 = b;
-      }
-
-  ~tree_binary_expression (void)
-    {
-      delete op1;
-      delete op2;
-    }
-
-  tree_constant eval (int print);
-
-  void eval_error (void);
-
-  char *oper (void) const;
-
-  void print_code (ostream& os);
-
- private:
-  tree_expression *op1;
-  tree_expression *op2;
-};
-
-// Simple assignment expressions.
-
-class
-tree_simple_assignment_expression : public tree_expression
-{
-private:
-  void init (int plhs, int ans_assign)
-    {
-      etype = tree_expression::assignment;
-      lhs_idx_expr = 0;
-      lhs = 0;
-      index = 0;
-      rhs = 0;
-      preserve = plhs;
-      ans_ass = ans_assign;
-    }
-
- public:
-  tree_simple_assignment_expression (int plhs = 0, int ans_assign = 0,
-				     int l = -1, int c = -1)
-    : tree_expression (l, c)
-      { init (plhs, ans_assign); }
-
-  tree_simple_assignment_expression (tree_identifier *i,
-				     tree_expression *r,
-				     int plhs = 0, int ans_assign = 0,
-				     int l = -1, int c = -1)
-    : tree_expression (l, c)
-      {
-	init (plhs, ans_assign);
-	lhs = new tree_indirect_ref (i);
-	rhs = r;
-      }
-
-  tree_simple_assignment_expression (tree_indirect_ref *i,
-				     tree_expression *r,
-				     int plhs = 0, int ans_assign = 0,
-				     int l = -1, int c = -1)
-    : tree_expression (l, c)
-      {
-	init (plhs, ans_assign);
-	lhs = i;
-	rhs = r;
-      }
-
-  tree_simple_assignment_expression (tree_index_expression *idx_expr,
-				     tree_expression *r,
-				     int plhs = 0, int ans_assign = 0,
-				     int l = -1, int c = -1)
-    : tree_expression (l, c)
-      {
-	init (plhs, ans_assign);
-	lhs_idx_expr = idx_expr; // cache this -- we may need to delete it.
-	lhs = idx_expr->ident ();
-	index = idx_expr->arg_list ();
-	rhs = r;
-      }
-
-  ~tree_simple_assignment_expression (void);
-
-  int left_hand_side_is_identifier_only (void)
-    { return lhs->is_identifier_only (); }
-
-  tree_identifier *left_hand_side_id (void)
-    { return lhs->ident (); }
-
-  int is_ans_assign (void)
-    { return ans_ass; }
-
-  tree_constant eval (int print);
-
-  int is_assignment_expression (void) const
-    { return 1; }
-
-  void eval_error (void);
-
-  void print_code (ostream& os);
-
- private:
-  tree_index_expression *lhs_idx_expr;
-  tree_indirect_ref *lhs;
-  tree_argument_list *index;
-  tree_expression *rhs;
-  int preserve;
-  int ans_ass;
-};
-
-// Multi-valued assignment expressions.
-
-class
-tree_multi_assignment_expression : public tree_multi_val_ret
-{
- public:
-  tree_multi_assignment_expression (int plhs = 0, int l = -1, int c = -1)
-    : tree_multi_val_ret (l, c)
-      {
-	etype = tree_expression::multi_assignment;
-	preserve = plhs;
-	lhs = 0;
-	rhs = 0;
-      }
-
-  tree_multi_assignment_expression (tree_return_list *lst,
-				    tree_multi_val_ret *r,
-				    int plhs = 0,
-				    int l = -1, int c = -1)
-    : tree_multi_val_ret (l, c)
-      {
-	etype = tree_expression::multi_assignment;
-	preserve = plhs;
-	lhs = lst;
-	rhs = r;
-      }
-
-  ~tree_multi_assignment_expression (void);
-
-  tree_constant eval (int print);
-
-  Octave_object eval (int print, int nargout, const Octave_object& args);
-
-  int is_assignment_expression (void) const
-    { return 1; }
-
-  void eval_error (void);
-
-  void print_code (ostream& os);
-
- private:
-  int preserve;
-  tree_return_list *lhs;
-  tree_multi_val_ret *rhs;
-};
-
-// Colon expressions.
-
-class
-tree_colon_expression : public tree_expression
-{
- public:
-  tree_colon_expression (int l = -1, int c = -1) : tree_expression (l, c)
-    {
-      etype = tree_expression::colon;
-      op1 = 0;
-      op2 = 0;
-      op3 = 0;
-    }
-
-  tree_colon_expression (tree_expression *a, tree_expression *b,
-			 int l = -1, int c = -1)
-    : tree_expression (l, c)
-      {
-	etype = tree_expression::colon;
-	op1 = a;
-	op2 = b;
-	op3 = 0;
-      }
-
-  ~tree_colon_expression (void)
-    {
-      delete op1;
-      delete op2;
-      delete op3;
-    }
-
-  int is_range_constant (void) const;
-
-  tree_colon_expression *chain (tree_expression *t);
-
-  tree_constant eval (int print);
-
-  void eval_error (const char *s);
-
-  void print_code (ostream& os);
-
- private:
-  tree_expression *op1;
-  tree_expression *op2;
-  tree_expression *op3;
-};
-
-// Builtin functions.
-
-class
-tree_builtin : public tree_fvc
-{
-public:
-  tree_builtin (const char *nm = 0);
-
-  tree_builtin (Mapper_fcn& m_fcn, const char *nm = 0);
-
-  tree_builtin (Octave_builtin_fcn f, const char *nm = 0);
-
-  ~tree_builtin (void) { }  // XXX ?? XXX
-
-//  int is_builtin (void) const;
-
-  int is_mapper_function (void) const
-    { return is_mapper; }
-
-  tree_constant eval (int print);
-
-  Octave_object eval (int print, int nargout, const Octave_object& args);
-
-  char *name (void) const
-    { return my_name; }
-
-  void print_code (ostream& os)
-    {
-      os << my_name << " can't be printed because it is a builtin function\n";
-    }
-
-private:
-  int is_mapper;
-  Mapper_fcn mapper_fcn;
-  Octave_builtin_fcn fcn;
-  char *my_name;
-};
-
-// User defined functions.
-
-class
-tree_function : public tree_fvc
-{
-private:
-  void install_nargin_and_nargout (void);
-
-  void bind_nargin_and_nargout (int nargin, int nargout);
-
-  void init (void)
-    {
-      call_depth = 0;
-      param_list = 0;
-      ret_list = 0;
-      sym_tab = 0;
-      cmd_list = 0;
-      file_name = 0;
-      fcn_name = 0;
-      t_parsed = 0;
-      system_fcn_file = 0;
-      num_named_args = 0;
-      num_args_passed = 0;
-      curr_va_arg_number = 0;
-      vr_list = 0;
-    }
-
-public:
-  tree_function (int l = -1, int c = -1) : tree_fvc (l, c)
-    { init (); }
-
-  tree_function (tree_statement_list *cl, symbol_table *st,
-		 int l = -1, int c = -1)
-     : tree_fvc (l, c)
-       {
-	 init ();
-	 sym_tab = st;
-	 cmd_list = cl;
-	 install_nargin_and_nargout ();
-       }
-
-  ~tree_function (void);
-
-//  tree_function *define (tree_statement_list *t);
-  tree_function *define_param_list (tree_parameter_list *t);
-  tree_function *define_ret_list (tree_parameter_list *t);
-
-  void stash_fcn_file_name (void);
-
-  void stash_fcn_file_time (time_t t)
-    { t_parsed = t; }
-
-  char *fcn_file_name (void)
-    { return file_name; }
-
-  time_t time_parsed (void)
-    { return t_parsed; }
-
-  void mark_as_system_fcn_file (void);
-
-  int is_system_fcn_file (void) const
-    { return system_fcn_file; }
-
-  int takes_varargs (void) const;
-
-  void octave_va_start (void)
-    { curr_va_arg_number = num_named_args; }
-
-  tree_constant octave_va_arg (void);
-
-  Octave_object octave_all_va_args (void);
-
-  int takes_var_return (void) const;
-
-  void octave_vr_val (const tree_constant& val);
-
-  void stash_function_name (char *s);
-
-  char *function_name (void)
-    { return fcn_name; }
-
-  tree_constant eval (int print);
-
-  Octave_object eval (int print, int nargout, const Octave_object& args);
-
-  void traceback_error (void);
-
-  void print_code (ostream& os);
-
-private:
-  int call_depth;
-  tree_parameter_list *param_list;
-  tree_parameter_list *ret_list;
-  symbol_table *sym_tab;
-  tree_statement_list *cmd_list;
-  char *file_name;
-  char *fcn_name;
-  time_t t_parsed;
-  int system_fcn_file;
-  int num_named_args;
-  Octave_object args_passed;
-  int num_args_passed;
-  int curr_va_arg_number;
-  tree_va_return_list *vr_list;
-  symbol_record *nargin_sr;
-  symbol_record *nargout_sr;
-
-  void print_code_function_header (void);
-  void print_code_function_header (ostream& os);
-
-  void print_code_function_trailer (void);
-  void print_code_function_trailer (ostream& os);
-};
-
 #endif
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; page-delimiter: "^/\\*" ***
 ;;; End: ***
 */
diff --git a/src/pt-misc.h b/src/pt-misc.h
--- a/src/pt-misc.h
+++ b/src/pt-misc.h
@@ -1,9 +1,9 @@
-// tree-misc.h                                      -*- C++ -*-
+// pt-misc.h                                      -*- C++ -*-
 /*
 
 Copyright (C) 1992, 1993, 1994, 1995 John W. Eaton
 
 This file is part of Octave.
 
 Octave is free software; you can redistribute it and/or modify it
 under the terms of the GNU General Public License as published by the
@@ -24,94 +24,70 @@ Software Foundation, 59 Temple Place - S
 #if !defined (octave_tree_misc_h)
 #define octave_tree_misc_h 1
 
 #if defined (__GNUG__)
 #pragma interface
 #endif
 
 class ostream;
+
 class Octave_object;
 class tree_constant;
 class tree_command;
 class tree_expression;
 class tree_simple_assignment_expression;
+class tree_index_expression;
 class tree_identifier;
 class symbol_record;
 class symbol_table;
 
 class tree_statement;
 class tree_statement_list;
 class tree_argument_list;
 class tree_parameter_list;
 class tree_return_list;
 class tree_va_return_list;
 class tree_global;
 class tree_global_init_list;
 
 #include <SLList.h>
 
-#include "tree-base.h"
-#include "tree-cmd.h"
-#include "tree-const.h"
-#include "tree-expr.h"
+#include "pt-base.h"
 
 // A list of expressions and commands to be executed.
 
 class
 tree_statement : public tree_print_code
 {
 friend class tree_statement_list;
 
 public:
   tree_statement (void)
-    {
-      command = 0;
-      expression = 0;
-      print_flag = 1;
-    }
+    : tree_print_code (), command (0), expression (0), print_flag (1) { }
 
   tree_statement (tree_command *c)
-    {
-      command = c;
-      expression = 0;
-      print_flag = 1;
-    }
+    : tree_print_code (), command (c), expression (0), print_flag (1) { }
 
   tree_statement (tree_expression *e)
-    {
-      command = 0;
-      expression = e;
-      print_flag = 1;
-    }
+    : tree_print_code (), command (0), expression (e), print_flag (1) { }
 
   ~tree_statement (void);
 
   void set_print_flag (int print)
     { print_flag = print; }
 
   int is_command (void)
     { return command != 0; }
 
   int is_expression (void)
     { return expression != 0; }
 
-  int line (void)
-    {
-      return command
-	? command->line ()
-	  : (expression ? expression->line () : -1);
-    }
-
-  int column (void)
-    {
-      return command
-	? command->column ()
-	  : (expression ? expression->column () : -1);
-    }
+  int line (void);
+  int column (void);
 
   void maybe_echo_code (int);
 
   void print_code (ostream& os);
 
 private:
   tree_command *command;	// Command to execute.
   tree_expression *expression;	// Command to execute.
@@ -122,21 +98,18 @@ class
 tree_statement_list : public SLList<tree_statement *>, public tree_print_code
 {
 public:
   tree_statement_list (void)
     : SLList<tree_statement *> (), tree_print_code ()
       { function_body = 0; }
 
   tree_statement_list (tree_statement *s)
-    : SLList<tree_statement *> (), tree_print_code ()
-      {
-	function_body = 0;
-	append (s);
-      }
+    : SLList<tree_statement *> (), tree_print_code (), function_body (0)
+      { append (s); }
 
   ~tree_statement_list (void)
     {
       while (! empty ())
 	{
 	  tree_statement *t = remove_front ();
 	  delete t;
 	}
@@ -186,34 +159,25 @@ public:
 // parameters in a function definition.  Elements are identifiers
 // only.
 
 class
 tree_parameter_list : public SLList<tree_identifier *>, public tree_print_code
 {
 public:
   tree_parameter_list (void)
-    : SLList<tree_identifier *> (), tree_print_code ()
-      { marked_for_varargs = 0; }
+    : SLList<tree_identifier *> (), tree_print_code (),
+      marked_for_varargs (0) { }
 
   tree_parameter_list (tree_identifier *t)
-    : SLList<tree_identifier *> (), tree_print_code ()
-      {
-	marked_for_varargs = 0;
-	append (t);
-      }
+    : SLList<tree_identifier *> (), tree_print_code (),
+      marked_for_varargs (0)
+      { append (t); }
 
-  ~tree_parameter_list (void)
-    {
-      while (! empty ())
-	{
-	  tree_identifier *t = remove_front ();
-	  delete t;
-	}
-    }
+  ~tree_parameter_list (void);
 
 //  char *name (void) const;
 
   void mark_as_formal_parameters (void);
 
   void mark_varargs (void)
     { marked_for_varargs = 1; }
 
@@ -250,24 +214,17 @@ tree_return_list : public SLList<tree_in
 public:
   tree_return_list (void)
     : SLList<tree_index_expression *> (), tree_print_code () { }
 
   tree_return_list (tree_index_expression *t)
     : SLList<tree_index_expression *> (), tree_print_code ()
       { append (t); }
 
-  ~tree_return_list (void)
-    {
-      while (! empty ())
-	{
-	  tree_index_expression *t = remove_front ();
-	  delete t;
-	}
-    }
+  ~tree_return_list (void);
 
   void print_code (ostream& os);
 };
 
 class
 tree_va_return_list : public SLList<tree_constant>
 {
 public:
@@ -277,39 +234,25 @@ public:
 };
 
 // List of expressions that make up a global statement.
 
 class
 tree_global : public tree_print_code
 {
 public:
-  tree_global (void)
-    {
-      ident = 0;
-      assign_expr = 0;
-    }
+  tree_global (void) : tree_print_code (), ident (0), assign_expr (0) { }
 
   tree_global (tree_identifier *id)
-    {
-      ident = id;
-      assign_expr = 0;
-    }
+    : tree_print_code (), ident (id), assign_expr (0) { }
 
   tree_global (tree_simple_assignment_expression *ass)
-    {
-      ident = 0;
-      assign_expr = ass;
-    }
+    : tree_print_code (), ident (0), assign_expr (ass) { }
 
-  ~tree_global (void)
-    {
-      delete ident;
-      delete assign_expr;
-    }
+  ~tree_global (void);
 
   void eval (void);
 
   void print_code (ostream& os);
 
 private:
   tree_identifier *ident;
   tree_simple_assignment_expression *assign_expr;
@@ -339,40 +282,25 @@ public:
 
   void print_code (ostream& os);
 };
 
 class
 tree_if_clause : public tree_print_code
 {
 public:
-  tree_if_clause (void) : tree_print_code ()
-    {
-      expr = 0;
-      list = 0;
-    }
+  tree_if_clause (void) : tree_print_code (), expr (0), list (0) { }
 
-  tree_if_clause (tree_statement_list *l) : tree_print_code ()
-      {
-	expr = 0;
-	list = l;
-      }
+  tree_if_clause (tree_statement_list *l)
+    : tree_print_code (), expr (0), list (l) { }
 
   tree_if_clause (tree_expression *e, tree_statement_list *l)
-    : tree_print_code ()
-      {
-	expr = e;
-	list = l;
-      }
+    : tree_print_code (), expr (e), list (l) { }
 
-  ~tree_if_clause (void)
-    {
-      delete expr;
-      delete list;
-    }
+  ~tree_if_clause (void);
 
   int is_else_clause (void)
     {
       return ! expr;
     }
 
   int eval (void);
 
diff --git a/src/pt-plot.h b/src/pt-plot.h
--- a/src/pt-plot.h
+++ b/src/pt-plot.h
@@ -1,9 +1,9 @@
-// tree-plot.h                                         -*- C++ -*-
+// pt-plot.h                                         -*- C++ -*-
 /*
 
 Copyright (C) 1992, 1993, 1994, 1995 John W. Eaton
 
 This file is part of Octave.
 
 Octave is free software; you can redistribute it and/or modify it
 under the terms of the GNU General Public License as published by the
@@ -23,53 +23,42 @@ Software Foundation, 59 Temple Place - S
 
 #if !defined (octave_tree_plot_h)
 #define octave_tree_plot_h 1
 
 #if defined (__GNUG__)
 #pragma interface
 #endif
 
-#include <iostream.h>
+class ostream;
+class ostrstream;
 
 class tree_command;
 class tree_plot_command;
 class plot_limits;
 class plot_range;
 class subplot_using;
 class subplot_style;
 class subplot;
 class subplot_list;
 
 #include <SLList.h>
 
 #include "dColVector.h"
 
 #include "idx-vector.h"
-#include "tree-cmd.h"
-#include "tree-expr.h"
+#include "pt-cmd.h"
+#include "pt-exp.h"
 
 class
 tree_plot_command : public tree_command
 {
 public:
-  tree_plot_command (void) : tree_command ()
-    {
-      range = 0;
-      plot_list = 0;
-      ndim = 0;
-    }
-
-  tree_plot_command (subplot_list *plt, plot_limits *rng, int nd)
-    : tree_command ()
-      {
-	range = rng;
-	plot_list = plt;
-	ndim = nd;
-      }
+  tree_plot_command (subplot_list *plt = 0, plot_limits *rng = 0, int nd = 0)
+    : tree_command (), ndim (nd), range (rng), plot_list (plt) { }
 
   ~tree_plot_command (void);
 
   void eval (void);
 
   void print_code (ostream& os);
 
 private:
@@ -77,43 +66,19 @@ private:
   plot_limits *range;
   subplot_list *plot_list;
 };
 
 class
 plot_limits : public tree_print_code
 {
 public:
-  plot_limits (void)
-    {
-      x_range = 0;
-      y_range = 0;
-      z_range = 0;
-    }
-
-  plot_limits (plot_range *xlim)
-    {
-      x_range = xlim;
-      y_range = 0;
-      z_range = 0;
-    }
-
-  plot_limits (plot_range *xlim, plot_range *ylim)
-    {
-      x_range = xlim;
-      y_range = ylim;
-      z_range = 0;
-    }
-
-  plot_limits (plot_range *xlim, plot_range *ylim, plot_range *zlim)
-    {
-      x_range = xlim;
-      y_range = ylim;
-      z_range = zlim;
-    }
+  plot_limits (plot_range *xlim = 0, plot_range *ylim = 0,
+	       plot_range *zlim = 0)
+    : tree_print_code (), x_range (xlim), y_range (ylim), z_range (zlim) { }
 
   ~plot_limits (void);
 
   void print (int print, ostrstream& plot_buf);
 
   void print_code (ostream& os);
 
 private:
@@ -121,27 +86,18 @@ private:
   plot_range *y_range;
   plot_range *z_range;
 };
 
 class
 plot_range : public tree_print_code
 {
 public:
-  plot_range (void)
-    {
-      lower = 0;
-      upper = 0;
-    }
-
-  plot_range (tree_expression *l, tree_expression *u)
-    {
-      lower = l;
-      upper = u;
-    }
+  plot_range (tree_expression *l = 0, tree_expression *u = 0)
+    : tree_print_code (), lower (l), upper (u) { }
 
   ~plot_range (void);
 
   void print (ostrstream& plot_buf);
 
   void print_code (ostream& os);
 
 private:
@@ -200,21 +156,17 @@ private:
   ColumnVector val;
 };
 
 class
 subplot_style : public tree_print_code
 {
 public:
   subplot_style (void)
-    {
-      style = 0;
-      linetype = 0;
-      pointtype = 0;
-    }
+    : tree_print_code (), style (0), linetype (0), pointtype (0) { }
 
   subplot_style (char *s);
   subplot_style (char *s, tree_expression *lt);
   subplot_style (char *s, tree_expression *lt, tree_expression *pt);
 
   ~subplot_style (void);
 
   int print (ostrstream& plot_buf);
@@ -228,39 +180,23 @@ private:
   tree_expression *linetype;
   tree_expression *pointtype;
 };
 
 class
 subplot : public tree_print_code
 {
 public:
-  subplot (void)
-    {
-      plot_data = 0;
-      using_clause = 0;
-      title_clause = 0;
-      style_clause = 0;
-    }
-
-  subplot (tree_expression *data)
-    {
-      plot_data = data;
-      using_clause = 0;
-      title_clause = 0;
-      style_clause = 0;
-    }
+  subplot (tree_expression *data = 0)
+    : tree_print_code (), plot_data (data), using_clause (0),
+      title_clause (0), style_clause (0) { }
 
   subplot (subplot_using *u, tree_expression *t, subplot_style *s)
-    {
-      plot_data = 0;
-      using_clause = u;
-      title_clause = t;
-      style_clause = s;
-    }
+    : tree_print_code (), plot_data (0), using_clause (u),
+      title_clause (t), style_clause (s) { }
 
   ~subplot (void);
 
   subplot *set_data (tree_expression *data)
     {
       plot_data = data;
       return this;
     }
@@ -278,17 +214,17 @@ private:
   subplot_using *using_clause;
   tree_expression *title_clause;
   subplot_style *style_clause;
 };
 
 class
 subplot_list : public SLList<subplot *>, public tree_print_code
 {
- public:
+public:
   subplot_list (void) : SLList<subplot *> (), tree_print_code () { }
 
   subplot_list (subplot *t) : SLList<subplot *> (), tree_print_code ()
     { append (t); }
 
   ~subplot_list (void);
 
   int print (int ndim, ostrstream& plot_buf);
diff --git a/src/qpsol.cc b/src/qpsol.cc
--- a/src/qpsol.cc
+++ b/src/qpsol.cc
@@ -30,18 +30,19 @@ Software Foundation, 59 Temple Place - S
 #include <strstream.h>
 
 #include "QPSOL.h"
 
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "help.h"
+#include "mappers.h"
+#include "oct-obj.h"
 #include "pager.h"
-#include "tree-const.h"
 #include "utils.h"
 #include "variables.h"
 
 #ifndef QPSOL_MISSING
 
 // This should probably be defined in some shared file and declared in
 // a header file...
 extern int linear_constraints_ok (const ColumnVector& x,
diff --git a/src/qr.cc b/src/qr.cc
--- a/src/qr.cc
+++ b/src/qr.cc
@@ -26,19 +26,20 @@ Software Foundation, 59 Temple Place - S
 #endif
 
 #include "CmplxQR.h"
 #include "CmplxQRP.h"
 #include "dbleQR.h"
 #include "dbleQRP.h"
 
 #include "defun-dld.h"
+#include "error.h"
 #include "gripes.h"
 #include "help.h"
-#include "tree-const.h"
+#include "oct-obj.h"
 #include "user-prefs.h"
 #include "utils.h"
 
 DEFUN_DLD_BUILTIN ("qr", Fqr, Sqr, FSqr, 11,
   "[Q, R] = qr (X):      form Q unitary and R upper triangular such\n\
                        that Q * R = X\n\
 \n\
 [Q, R] = qr (X, 0):    form the economy decomposition such that if X is\n\
diff --git a/src/quad.cc b/src/quad.cc
--- a/src/quad.cc
+++ b/src/quad.cc
@@ -32,17 +32,17 @@ Software Foundation, 59 Temple Place - S
 #include "Quad.h"
 
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "help.h"
 #include "mappers.h"
 #include "pager.h"
-#include "tree-const.h"
+#include "oct-obj.h"
 #include "utils.h"
 #include "variables.h"
 
 // Global pointer for user defined function required by quadrature functions.
 static tree_fvc *quad_fcn;
 
 static Quad_options quad_opts;
 
diff --git a/src/qzval.cc b/src/qzval.cc
--- a/src/qzval.cc
+++ b/src/qzval.cc
@@ -24,26 +24,23 @@ Software Foundation, 59 Temple Place - S
 // Written by A. S. Hodel <scotte@eng.auburn.edu>
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <cfloat>
 
-#include "CColVector.h"
-#include "dColVector.h"
-#include "dMatrix.h"
 #include "f77-uscore.h"
 
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "help.h"
-#include "tree-const.h"
+#include "oct-obj.h"
 #include "user-prefs.h"
 #include "utils.h"
 
 extern "C"
 {
   int F77_FCN (qzhes, QZHES) (const int&, const int&, double*,
 			      double*, const long&, double*);
  
diff --git a/src/rand.cc b/src/rand.cc
--- a/src/rand.cc
+++ b/src/rand.cc
@@ -30,17 +30,18 @@ Software Foundation, 59 Temple Place - S
 #include <string>
 
 #include "f77-uscore.h"
 
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "help.h"
-#include "tree-const.h"
+#include "mappers.h"
+#include "oct-obj.h"
 #include "unwind-prot.h"
 #include "utils.h"
 
 // Possible distributions of random numbers.  This was handled with an
 // enum, but unwind_protecting that doesn't work so well.
 #define uniform_dist 1
 #define normal_dist 2
 
diff --git a/src/schur.cc b/src/schur.cc
--- a/src/schur.cc
+++ b/src/schur.cc
@@ -29,17 +29,17 @@ Software Foundation, 59 Temple Place - S
 
 #include "CmplxSCHUR.h"
 #include "dbleSCHUR.h"
 
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "help.h"
-#include "tree-const.h"
+#include "oct-obj.h"
 #include "user-prefs.h"
 #include "utils.h"
 
 DEFUN_DLD_BUILTIN ("schur", Fschur, Sschur, FSschur, 11,
   "[U, S] = schur (A) or S = schur (A)\n\
 \n\
 or, for ordered Schur:\n\
 \n\
diff --git a/src/sort.cc b/src/sort.cc
--- a/src/sort.cc
+++ b/src/sort.cc
@@ -24,17 +24,17 @@ Software Foundation, 59 Temple Place - S
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "help.h"
-#include "tree-const.h"
+#include "oct-obj.h"
 
 // This is algorithm 5.2.4L from Knuth, Volume 3.
 
 // XXX FIXME XXX -- there is way too much duplicated code here given
 // that the sort algorithms are all the same, and only the type of the
 // data and the comparison changes...
 //
 // Maybe some cpp abuse will make it better.
diff --git a/src/svd.cc b/src/svd.cc
--- a/src/svd.cc
+++ b/src/svd.cc
@@ -28,18 +28,18 @@ Software Foundation, 59 Temple Place - S
 #include "CmplxSVD.h"
 #include "dbleSVD.h"
 
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "help.h"
 #include "mappers.h"
+#include "oct-obj.h"
 #include "pr-output.h"
-#include "tree-const.h"
 #include "user-prefs.h"
 #include "utils.h"
 
 DEFUN_DLD_BUILTIN ("svd", Fsvd, Ssvd, FSsvd, 11,
   "S = svd (X) or [U, S, V] = svd (X [, 0])\n\
 \n\
 Compute the singular value decomposition of X.  Given a second input\n\
 argument, an `economy' sized factorization is computed that omits\n\
diff --git a/src/syl.cc b/src/syl.cc
--- a/src/syl.cc
+++ b/src/syl.cc
@@ -22,27 +22,25 @@ Software Foundation, 59 Temple Place - S
 */
 
 // Written by A. S. Hodel <scotte@eng.auburn.edu>
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
-#include "CMatrix.h"
 #include "CmplxSCHUR.h"
-#include "dMatrix.h"
 #include "dbleSCHUR.h"
 #include "f77-uscore.h"
 
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "help.h"
-#include "tree-const.h"
+#include "oct-obj.h"
 #include "user-prefs.h"
 #include "utils.h"
 
 extern "C"
 {
   int F77_FCN (dtrsyl, DTRSYL) (const char*, const char*, const int&,
 				const int&, const int&, const double*,
 				const int&, const double*, const int&,
