# HG changeset patch
# User Mike Miller <mtmiller@ieee.org>
# Date 1378677083 14400
#      Sun Sep 08 17:51:23 2013 -0400
# Node ID 7d8d194f3f6345e5114df4c57f2351e72ab54a8a
# Parent  4bcd301754cefc2c3c22394ee08a851b2b03d8b7
bitget.m, bitset.m: Make max bit index consistent

* bitget.m, bitset.m: Compute maximum bit index consistently.

diff --git a/scripts/general/bitget.m b/scripts/general/bitget.m
--- a/scripts/general/bitget.m
+++ b/scripts/general/bitget.m
@@ -34,17 +34,17 @@
 
 function C = bitget (A, n)
 
   if (nargin != 2)
     print_usage ();
   endif
 
   if (isa (A, "double"))
-    Amax = log2 (bitmax) + 1;
+    Amax = ceil (log2 (bitmax));
     _conv = @double;
   else
     if (isa (A, "uint8"))
       Amax = 8;
       _conv = @uint8;
     elseif (isa (A, "uint16"))
       Amax = 16;
       _conv = @uint16;
diff --git a/scripts/general/bitset.m b/scripts/general/bitset.m
--- a/scripts/general/bitset.m
+++ b/scripts/general/bitset.m
@@ -49,20 +49,20 @@ function C = bitset (A, n, val)
   if (nargin == 2)
     val = true (sz);
   endif
 
   cl = class (A);
 
   if (isfloat (A) && isreal (A))
     Bmax = bitmax (cl);
-    Amax = log2 (Bmax);
+    Amax = ceil (log2 (Bmax));
   elseif (isinteger (A))
     Bmax = intmax (cl);
-    Amax = round (log2 (Bmax));
+    Amax = ceil (log2 (Bmax));
   else
     error ("bitset: invalid class %s", cl);
   endif
 
   if (any ((n < 1)(:)) || any ((n > Amax)(:)))
     error ("bitset: N must be in the range [1,%d]", Amax);
   endif
 
