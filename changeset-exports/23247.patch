# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1488815935 18000
#      Mon Mar 06 10:58:55 2017 -0500
# Node ID d4834e9ac2e73523e8646107104f789b77b3f805
# Parent  184ab9034ad53817a86688eda03a6a88a56e79a7
# Parent  9b5d5c2697bc02a3cae2d980fc0162ebb78e5ecc
maint: Merge stable to default.

diff --git a/CITATION b/CITATION
--- a/CITATION
+++ b/CITATION
@@ -1,18 +1,18 @@
 To cite GNU Octave in publications use:
 
-  John W. Eaton, David Bateman, Søren Hauberg, Rik Wehbring (2016).
-  GNU Octave version 4.2.0 manual: a high-level interactive language for
+  John W. Eaton, David Bateman, Søren Hauberg, Rik Wehbring (2017).
+  GNU Octave version 4.2.1 manual: a high-level interactive language for
   numerical computations.
-  URL http://www.gnu.org/software/octave/doc/interpreter/
+  URL https://www.gnu.org/software/octave/doc/v4.2.1/
 
 A BibTeX entry for LaTeX users is:
 
   @manual{,
-    title     = {{GNU Octave} version 4.2.0 manual: a high-level interactive language for numerical computations},
+    title     = {{GNU Octave} version 4.2.1 manual: a high-level interactive language for numerical computations},
     author    = {John W. Eaton and David Bateman and S{\o}ren Hauberg and Rik Wehbring},
-    year      = {2016},
-    url       = {http://www.gnu.org/software/octave/doc/interpreter},
+    year      = {2017},
+    url       = {https://www.gnu.org/software/octave/doc/v4.2.1/},
   }
 
 We have invested a lot of time and effort in creating GNU Octave, please cite it
 when using it.  See also `citation pkgname' for citing Octave packages.
diff --git a/libinterp/parse-tree/jit-typeinfo.cc b/libinterp/parse-tree/jit-typeinfo.cc
--- a/libinterp/parse-tree/jit-typeinfo.cc
+++ b/libinterp/parse-tree/jit-typeinfo.cc
@@ -208,17 +208,17 @@ octave_jit_cast_any_complex (Complex c)
 {
   if (c.imag () == 0)
     return new octave_scalar (c.real ());
   else
     return new octave_complex (c);
 }
 
 extern "C" void
-octave_jit_octave::err_nan_to_logical_conversion (void)
+octave_jit_err_nan_to_logical_conversion (void)
 {
   octave::err_nan_to_logical_conversion ();
 }
 
 extern "C" void
 octave_jit_ginvalid_index (void)
 {
   // FIXME: 0-argument form of octave::err_invalid_index removed in cset dd6345fd8a97
@@ -1500,17 +1500,17 @@ jit_typeinfo::jit_typeinfo (llvm::Module
     fn.do_return (builder, ret);
   }
   for_index_fn.add_overload (fn);
 
   // logically true
   logically_true_fn.stash_name ("logically_true");
 
   jit_function gripe_nantl
-    = create_external (JIT_FN (octave_jit_octave::err_nan_to_logical_conversion), 0);
+    = create_external (JIT_FN (octave_jit_err_nan_to_logical_conversion), 0);
   gripe_nantl.mark_can_error ();
 
   fn = create_internal ("octave_jit_logically_true_scalar", boolean, scalar);
   fn.mark_can_error ();
 
   body = fn.new_block ();
   builder.SetInsertPoint (body);
   {
