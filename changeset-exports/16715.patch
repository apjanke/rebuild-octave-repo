# HG changeset patch
# User Torsten <ttl@justmail.de>
# Date 1370092235 -7200
#      Sat Jun 01 15:10:35 2013 +0200
# Node ID 96ed7ab44e2eb09926147f9425e449391f19ac23
# Parent  fbf4b4ff4548340eb213d7e803198c6d5ad22de3
save prepared apis info for qscintilla into a path depending on octave version

* file-editor-tab.h: new private class variable _prep_apis_file
* file-editor-tab.cc: include version.h
  (update_lexer): create path to load from or save to the prepared apis info
  (save_apis_info): save prepared apis info in file _prep_apis_file

diff --git a/libgui/src/m-editor/file-editor-tab.cc b/libgui/src/m-editor/file-editor-tab.cc
--- a/libgui/src/m-editor/file-editor-tab.cc
+++ b/libgui/src/m-editor/file-editor-tab.cc
@@ -48,16 +48,17 @@ along with Octave; see the file COPYING.
 #include <QInputDialog>
 #include <QPrintDialog>
 
 #include "file-editor-tab.h"
 #include "file-editor.h"
 
 #include "debug.h"
 #include "octave-qt-link.h"
+#include "version.h"
 
 // Make parent null for the file editor tab so that warning
 // WindowModal messages don't affect grandparents.
 file_editor_tab::file_editor_tab (const QString& directory_arg)
 {
   QString directory = directory_arg;
   _lexer_apis = 0;
   _app_closing = false;
@@ -258,47 +259,62 @@ file_editor_tab::update_lexer ()
         }
     }
 
   if (lexer)
     {
       _lexer_apis = new QsciAPIs(lexer);
       if (_lexer_apis)
         {
+          // create raw apis info
           QString keyword;
           QStringList keyword_list;
           int i;
           for (i=1; i<=3; i++) // load the first 3 keyword sets
             {
               keyword = QString(lexer->keywords (i));           // get list
               keyword_list = keyword.split (QRegExp ("\\s+"));  // split
               for (i = 0; i < keyword_list.size (); i++)        // add to API
                 _lexer_apis->add (keyword_list.at (i));
             }
-          if (!_lexer_apis->loadPrepared ())
-            {
-              connect (_lexer_apis, SIGNAL (apiPreparationFinished ()),
-                       this, SLOT (save_apis_info ()));
-              _lexer_apis->prepare ();
+
+          // get path where to store prepared api info
+          QDesktopServices desktopServices;
+          QString prep_apis_path
+            = desktopServices.storageLocation (QDesktopServices::HomeLocation)
+                + "/.config/octave/"  + QString(OCTAVE_VERSION) + "/qsci/";
+
+          // check whether path exists or can be created
+          if (QDir("/").mkpath (prep_apis_path))
+            { // path exists, apis info can be saved there
+              _prep_apis_file = prep_apis_path + lexer->lexer () + ".pap";
+              if (!_lexer_apis->loadPrepared (_prep_apis_file))
+                { // no prepared info loaded, prepare and save
+                  connect (_lexer_apis, SIGNAL (apiPreparationFinished ()),
+                           this, SLOT (save_apis_info ()));
+                  _lexer_apis->prepare ();  // prepare apis info and save
+                }
             }
+          else
+            _lexer_apis->prepare ();  // prepare apis info wihtout saving
         }
     }
 
   QSettings *settings = resource_manager::get_settings ();
   if (settings)
     lexer->readSettings (*settings);
 
   _edit_area->setLexer (lexer);
 
 }
 
 void
 file_editor_tab::save_apis_info ()
 {
-  _lexer_apis->savePrepared ();
+  _lexer_apis->savePrepared (_prep_apis_file);
 }
 
 // slot for fetab_set_focus: sets the focus to the current edit area
 void
 file_editor_tab::set_focus (const QWidget *ID)
 {
   if (ID != this)
     return;
diff --git a/libgui/src/m-editor/file-editor-tab.h b/libgui/src/m-editor/file-editor-tab.h
--- a/libgui/src/m-editor/file-editor-tab.h
+++ b/libgui/src/m-editor/file-editor-tab.h
@@ -190,11 +190,12 @@ private:
 
   QFileSystemWatcher _file_system_watcher;
 
   find_dialog *_find_dialog;
   bool _find_dialog_is_visible;
   QRect _find_dialog_geometry;
 
   QsciAPIs *_lexer_apis;
+  QString _prep_apis_file;
 };
 
 #endif
