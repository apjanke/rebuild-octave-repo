# HG changeset patch
# User Rik <rik@octave.org>
# Date 1421081232 28800
#      Mon Jan 12 08:47:12 2015 -0800
# Branch gui-release
# Node ID 6a9bde1ba0ea590eb949747b3345f1b2eb689c9e
# Parent  a402493c0605c862f262f2ae449c157d3cce47d6
Stop using deprecated and removed ghostscript device pswrite (bug #41141)

* __ghostscript__.m: Remove references to pswrite device.

* __print_parse_opts__.m: Remove references to pswrite device.  Change default
postscript level to 2.  Use device ps2write for -dps and -psc print switches.

diff --git a/scripts/plot/util/private/__ghostscript__.m b/scripts/plot/util/private/__ghostscript__.m
--- a/scripts/plot/util/private/__ghostscript__.m
+++ b/scripts/plot/util/private/__ghostscript__.m
@@ -71,17 +71,17 @@ function [gs_cmd, cleanup_cmd] = __ghost
   endif
 
   if (opts.antialiasing && isempty (strfind (opts.device, "write")))
     ## Apply anti-aliasing to all bitmap formats/devices
     gs_opts = sprintf ("%s -dTextAlphaBits=%d -dGraphicsAlphaBits=%d",
                        gs_opts, opts.antialiasing_textalphabits,
                        opts.antialiasing_graphicsalphabits);
     gs_opts = sprintf ("%s -r%dx%d", gs_opts, [1, 1] * opts.resolution);
-  elseif (any (strcmp (opts.device, {"pswrite", "ps2write", "pdfwrite"})))
+  elseif (any (strcmp (opts.device, {"ps2write", "pdfwrite"})))
     gs_opts = sprintf ("%s -dEmbedAllFonts=true", gs_opts);
     if (strcmp (opts.device, "pdfwrite"))
       ## Optimize for loading
       gs_opts = sprintf ("%s -dOptimize=true", gs_opts);
     endif
   endif
 
   if (opts.epscrop)
@@ -137,17 +137,17 @@ function [gs_cmd, cleanup_cmd] = __ghost
   if (isempty (opts.binary))
     error ("print:no_ghostscript", "__ghostscript__.m: ghostscript is required.");
   elseif (isempty (opts.output))
     cmd = sprintf ("%s %s", opts.binary, gs_opts);
   else
     cmd = sprintf ("%s %s -sOutputFile=\"%s\"", opts.binary, gs_opts, opts.output);
   endif
   if (! isempty (opts.prepend)
-      && any (strcmpi (opts.device, {"pswrite", "ps2write", "pdfwrite"})))
+      && any (strcmpi (opts.device, {"ps2write", "pdfwrite"})))
     ## FIXME - Fonts get may be mangled when appending ps/ps2.
     ##         See "How to concatenate several PS files" at the link,
     ##         http://en.wikibooks.org/wiki/PostScript_FAQ
     cmd = sprintf ("%s %s", cmd, opts.prepend);
     if (isempty (cleanup_cmd))
       cleanup_cmd = sprintf ("rm %s", opts.prepend);
     else
       cleanup_cmd = sprintf ("%s ; rm %s", cleanup_cmd, opts.prepend);
diff --git a/scripts/plot/util/private/__print_parse_opts__.m b/scripts/plot/util/private/__print_parse_opts__.m
--- a/scripts/plot/util/private/__print_parse_opts__.m
+++ b/scripts/plot/util/private/__print_parse_opts__.m
@@ -38,17 +38,17 @@ function arg_st = __print_parse_opts__ (
   arg_st.font = "";
   arg_st.scalefontsize = 1;
   arg_st.force_solid = 0; # 0=default, -1=dashed, +1=solid
   arg_st.formatted_for_printing = false;
   arg_st.ghostscript.binary = __quote_path__ (__ghostscript_binary__ ());
   arg_st.ghostscript.debug = false;
   arg_st.ghostscript.device = "";
   arg_st.ghostscript.epscrop = true;
-  arg_st.ghostscript.level = [];
+  arg_st.ghostscript.level = 2;
   arg_st.ghostscript.output = "";
   arg_st.ghostscript.papersize = "";
   arg_st.ghostscript.pageoffset = [];
   arg_st.ghostscript.resolution = 150;
   arg_st.ghostscript.antialiasing = false;
   arg_st.ghostscript.antialiasing_textalphabits = 4;
   arg_st.ghostscript.antialiasing_graphicsalphabits = 4;
   arg_st.loose = false;
@@ -220,17 +220,17 @@ function arg_st = __print_parse_opts__ (
               "svg", "hpgl", "ps", "ps2", "psc", ...
               "psc2", "eps", "eps2", "epsc", "epsc2", ...
               "emf", "pdf", "pslatex", "epslatex", "epslatexstandalone", ...
               "pslatexstandalone", "pdflatexstandalone", ...
               "pstex", "tiff", "tiffn" "tikz", "pcxmono", ...
               "pcx24b", "pcx256", "pcx16", "pgm", "pgmraw", ...
               "ppm", "ppmraw", "pdflatex", "texdraw", ...
               "pdfcairo", "pngcairo", "pstricks", ...
-              "epswrite", "pswrite", "ps2write", "pdfwrite"};
+              "epswrite", "ps2write", "pdfwrite"};
 
   suffixes = {"ai", "cdr", "fig", "png", "jpg", ...
               "gif", "pbm", "pbm", "dxf", "mf", ...
               "svg", "hpgl", "ps", "ps", "ps", ...
               "ps", "eps", "eps", "eps", "eps", ...
               "emf", "pdf", "tex", "tex", "tex", ...
               "tex", "tex", ...
               "ps", "tiff", "tiff", "tikz", "pcx", ...
@@ -294,25 +294,20 @@ function arg_st = __print_parse_opts__ (
   endif
 
   aliases = gs_aliases ();
   if (any (strcmp (arg_st.devopt, fieldnames (aliases))))
     arg_st.devopt = aliases.(arg_st.devopt);
   endif
 
   ## FIXME - eps2 & epsc2 needs to be handled
-  if (strcmp (arg_st.devopt, "pswrite"))
-    arg_st.ghostscript.level = 1;
-  elseif (strcmp (arg_st.devopt, "ps2write"))
-    arg_st.ghostscript.level = 2;
-  endif
 
   if ((any (strcmp (arg_st.devopt, gs_device_list))
        && ! arg_st.formatted_for_printing)
-      || any (strcmp (arg_st.devopt, {"pswrite", "ps2write", "pdfwrite"})))
+      || any (strcmp (arg_st.devopt, {"ps2write", "pdfwrite"})))
     ## Use ghostscript for graphic formats
     arg_st.ghostscript.device = arg_st.devopt;
     arg_st.ghostscript.output = arg_st.name;
     arg_st.ghostscript.antialiasing = true;
     if (arg_st.formatted_for_printing)
       arg_st.ghostscript.epscrop = ! arg_st.loose;
     else
       ## pstoedit throws errors if the EPS file isn't cropped
@@ -625,30 +620,30 @@ function device_list = gs_device_list ()
   ## Graphics formats/languages, not priners.
   device_list = {"bmp16"; "bmp16m"; "bmp256"; "bmp32b"; "bmpgray"; ...
                  "epswrite"; "jpeg"; "jpegcymk"; "jpeggray"; "pbm"; ...
                  "pbmraw"; "pcx16"; "pcx24b"; "pcx256"; "pcx2up"; ...
                  "pcxcmyk"; "pcxgray"; "pcxmono"; "pdfwrite"; "pgm"; ...
                  "pgmraw"; "pgnm"; "pgnmraw"; "png16"; "png16m"; ...
                  "png256"; "png48"; "pngalpha"; "pnggray"; "pngmono"; ...
                  "pnm"; "pnmraw"; "ppm"; "ppmraw"; "ps2write"; ...
-                 "pswrite"; "tiff12nc"; "tiff24nc"; "tiff32nc"; ...
+                 "ps2write"; "tiff12nc"; "tiff24nc"; "tiff32nc"; ...
                  "tiffcrle"; "tiffg3"; "tiffg32d"; "tiffg4"; ...
                  "tiffgray"; "tifflzw"; "tiffpack"; "tiffsep"};
 endfunction
 
 function aliases = gs_aliases ();
   ## Aliases for other devices: "bmp", "png", "tiff", "tiffn", "pdf",
   ##                            "ps", "ps2", "psc", "psc2"
   ##
   ## eps, epsc, eps2, epsc2 are not included here because those are
   ## are generated by the graphics toolkit.
   aliases.bmp = "bmp32b";
   aliases.pdf = "pdfwrite";
   aliases.png = "png16m";
-  aliases.ps = "pswrite";
+  aliases.ps = "ps2write";
   aliases.ps2 = "ps2write";
-  aliases.psc = "pswrite";
+  aliases.psc = "ps2write";
   aliases.psc2 = "ps2write";
   aliases.tiff = "tiff24nc";
   aliases.tiffn = "tiff24nc";
 endfunction
 
