# HG changeset patch
# User jwe
# Date 1181840693 0
#      Thu Jun 14 17:04:53 2007 +0000
# Node ID 388747e3d96b6a33473a3aed4ed53532d5b6e34c
# Parent  8bfb4ff637e174c713c724623a2a84a058c74f76
[project @ 2007-06-14 17:04:52 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,11 +1,17 @@
 2007-06-13  Michael Goffioul  <michael.goffioul@swing.be>
 
+	* configure.in: Set NO_OCT_FILE_STRIP=true for msdosmsvc.
+
+	* aclocal.m4 (OCTAVE_HDF5_DLL): Include return statements in
+	function body used for test.
+
 	* configure.in: Check for CXSparse with C++.
+
 	* Makeconf.in (do-subst-config-vals): Also substitute ${libdir} as
 	OCTAVE_CONF_LIBDIR.
 	* mkoctfile.in: Set DEFAULT_LIBDIR and substitute OCTAVE_HOME.
 	Define LIBDIR.  Use LIBDIR to set DEFAULT_LFLAGS.
 
 2007-06-12  Benjamin Lindner  <lindnerben@gmx.net>
 
 	* configure.in: For mingw, add -lws2_32 -lkernel32 to LIBS and set
diff --git a/aclocal.m4 b/aclocal.m4
--- a/aclocal.m4
+++ b/aclocal.m4
@@ -989,19 +989,19 @@ fi
 ])
 dnl
 dnl Check whether using HDF5 DLL under Windows. This is done by
 dnl testing for a data symbol in the HDF5 library, which would
 dnl requires the definition of _HDF5USEDL_ under MSVC compiler.
 dnl
 AC_DEFUN([OCTAVE_HDF5_DLL], [
   AC_CACHE_CHECK([if _HDF5USEDLL_ needs to be defined],octave_cv_hdf5_dll, [
-    AC_TRY_LINK([#include <hdf5.h>], [hid_t x = H5T_NATIVE_DOUBLE;],
+    AC_TRY_LINK([#include <hdf5.h>], [hid_t x = H5T_NATIVE_DOUBLE; return x],
       octave_cv_hdf5_dll=no, [
       CFLAGS_old=$CFLAGS
       CFLAGS="$CFLAGS -DWIN32 -D_HDF5USEDLL_"
-      AC_TRY_LINK([#include <hdf5.h>], [hid_t x = H5T_NATIVE_DOUBLE;],
+      AC_TRY_LINK([#include <hdf5.h>], [hid_t x = H5T_NATIVE_DOUBLE; return x],
         octave_cv_hdf5_dll=yes,
 	octave_cv_hdf5_dll=no)
       CFLAGS=$CFLAGS_old])])
   if test "$octave_cv_hdf5_dll" = yes; then
     AC_DEFINE(_HDF5USEDLL_, 1, [Define if using HDF5 dll (Win32)])
   fi])
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2007-06-14  John W. Eaton  <jwe@octave.org>
+
+	* plot/__go_draw_axes__.m: Handle text rotation property.
+
 2007-06-14  David Bateman  <dbateman@free.fr>
 
 	* general/__splinen__.m: Check also for ND vectors. Fix for N > 2,
 	as permutation of results was incorrect.
 	* general/interp1.m: Add demo on second derivative
 	* general/interpn.m: Convert "y" to vectors for __splinen__
 	call. Add 3D demo. Fix typos
 	* general/interp3.m: Fix typos. Correct permutation for use of
diff --git a/scripts/plot/__go_draw_axes__.m b/scripts/plot/__go_draw_axes__.m
--- a/scripts/plot/__go_draw_axes__.m
+++ b/scripts/plot/__go_draw_axes__.m
@@ -520,24 +520,27 @@ function __go_draw_axes__ (h, plot_strea
 	  fputs (plot_stream, "unset contour;\n");
 	  fputs (plot_stream, "set palette defined (0 \"dark-blue\", 1 \"blue\", 2 \"cyan\", 3 \"yellow\", 4 \"red\" , 5 \"dark-red\");\n");
 	  fputs (plot_stream, "unset colorbox;\n");
 
 	case "text"
 	  lpos = obj.position;
 	  label = obj.string;
 	  halign = obj.horizontalalignment;
+	  angle = obj.rotation;
 	  if (nd == 3)
-	    fprintf (plot_stream, "set label \"%s\" at %g,%g,%g %s;\n",
+	    fprintf (plot_stream,
+		     "set label \"%s\" at %g,%g,%g %s rotate by %f;\n",
 		     undo_string_escapes (label),
-		     lpos(1), lpos(2), lpos(3), halign);
+		     lpos(1), lpos(2), lpos(3), halign, angle);
 	  else
-	    fprintf (plot_stream, "set label \"%s\" at %g,%g %s;\n",
+	    fprintf (plot_stream,
+		     "set label \"%s\" at %g,%g %s rotate by %f;\n",
 		     undo_string_escapes (label),
-		     lpos(1), lpos(2), halign);
+		     lpos(1), lpos(2), halign, angle);
 	  endif
 
 	otherwise
 	  error ("__go_draw_axes__: unknown object class, %s",
 		 obj.type);
       endswitch
 
     endfor
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,15 @@
+2007-06-14  John W. Eaton  <jwe@octave.org>
+
+	* graphics.h (text::text_properties::rotation): New data member.
+	* graphics.cc (text::text_properties::text_properties, 
+	text::text_properties::set, text::text_properties::get, 
+	text::text_properties::factory_defaults): Handle rotation property.
+
 2007-06-14  David Bateman  <dbateman@free.fr>
 
 	* ov-ch-mat.h (idx_vector index_vector (void) const): Remove
 	definition.
 	* ov-ch-mat.cc (idx_vector index_vector (void) const): Move it
 	here. Special case ":" case for compatibility.
 
 2007-06-13  John W. Eaton  <jwe@octave.org>
diff --git a/src/graphics.cc b/src/graphics.cc
--- a/src/graphics.cc
+++ b/src/graphics.cc
@@ -1701,16 +1701,17 @@ std::string line::line_properties::go_na
 // ---------------------------------------------------------------------
 
 text::text_properties::text_properties (const graphics_handle& mh,
 					const graphics_handle& p)
   : base_properties (go_name, mh, p),
     string (""),
     units ("data"),
     position (Matrix (1, 3, 0.0)),
+    rotation (0),
     horizontalalignment ("left")
 { }
 
 void
 text::text_properties::set (const property_name& name, const octave_value& val)
 {
   bool modified = true;
 
@@ -1724,16 +1725,18 @@ text::text_properties::set (const proper
       modified = false;
     }
   else if (name.compare ("string"))
     string = val;
   else if (name.compare ("units"))
     units = val;
   else if (name.compare ("position"))
     position = val;
+  else if (name.compare ("rotation"))
+    rotation = val;
   else if (name.compare ("horizontalalignment"))
     horizontalalignment = val;
   else
     {
       modified = false;
       warning ("set: invalid property `%s'", name.c_str ());
     }
 
@@ -1748,16 +1751,17 @@ text::text_properties::get (void) const
 
   m.assign ("type", type);
   m.assign ("parent", parent);
   m.assign ("children", children);
   m.assign ("__modified__", __modified__);
   m.assign ("string", string);
   m.assign ("units", units);
   m.assign ("position", position);
+  m.assign ("rotation", rotation);
   m.assign ("horizontalalignment", horizontalalignment);
 
   return m;
 }
 
 octave_value
 text::text_properties::get (const property_name& name) const
 {
@@ -1772,32 +1776,35 @@ text::text_properties::get (const proper
   else if (name.compare ("__modified__"))
     retval = __modified__;
   else if (name.compare ("string"))
     retval = string;
   else if (name.compare ("units"))
     retval = units;
   else if (name.compare ("position"))
     retval = position;
+  else if (name.compare ("rotation"))
+    retval = rotation;
   else if (name.compare ("horizontalalignment"))
     retval = horizontalalignment;
   else
     warning ("get: invalid property `%s'", name.c_str ());
 
   return retval;
 }
 
 property_list::pval_map_type
 text::text_properties::factory_defaults (void)
 {
   property_list::pval_map_type m;
 
   m["string"] = "";
   m["units"] = "data";
   m["position"] = Matrix (1, 3, 0.0);
+  m["rotation"] = 0;
   m["horizontalalignment"] = "left";
 
   return m;
 }
 
 std::string text::text_properties::go_name ("text");
 
 // ---------------------------------------------------------------------
diff --git a/src/graphics.h b/src/graphics.h
--- a/src/graphics.h
+++ b/src/graphics.h
@@ -1421,16 +1421,17 @@ public:
     std::string graphics_object_name (void) const { return go_name; }
 
     static property_list::pval_map_type factory_defaults (void);
 
   private:
     octave_value string;
     octave_value units;
     octave_value position;
+    octave_value rotation;
     octave_value horizontalalignment;
 
     static std::string go_name;
   };
 
   text_properties properties;
 
 public:
