# HG changeset patch
# User jwe
# Date 1074745579 0
#      Thu Jan 22 04:26:19 2004 +0000
# Node ID a1b165f5e934be53082c38a166f388353748de03
# Parent  e1b71baef20c585d69ea4f91f2a1dea2cc14e632
[project @ 2004-01-22 04:26:19 by jwe]

diff --git a/liboctave/Array-util.cc b/liboctave/Array-util.cc
--- a/liboctave/Array-util.cc
+++ b/liboctave/Array-util.cc
@@ -34,17 +34,17 @@ index_in_bounds (const Array<int>& ra_id
   bool retval = true;
 
   int n = ra_idx.length ();
 
   if (n == dimensions.length ())
     {
       for (int i = 0; i < n; i++)
 	{
-	  if (ra_idx(i) < 0 || ra_idx(i) > dimensions (i))
+	  if (ra_idx(i) < 0 || ra_idx(i) > dimensions(i))
 	    {
 	      retval = false;
 	      break;
 	    }
 	}
     }
   else
     retval = false;
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,12 @@
 2004-01-21  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* ov-cell.cc (octave_cell::subsref): Make '{' case N-d aware.
+
 	* ov-scalar.cc (streamoff_array_value): New function.
 	* ov-scalar.h: Provide decl.
 
 	* OPERATORS/op-streamoff.cc (STREAMOFF_COMP_OP): New maco.
 	Use it to define streamoff by matrix, streamoff by scalar, scalar
 	by streamoff, and matrix by streamoff comparison operators.
 	(install_streamoff_ops): Install them.
 
diff --git a/src/ov-cell.cc b/src/ov-cell.cc
--- a/src/ov-cell.cc
+++ b/src/ov-cell.cc
@@ -76,26 +76,26 @@ octave_cell::subsref (const std::string&
 	if (! error_state)
 	  {
 	    Cell tcell = tmp.cell_value ();
 
 	    if (tcell.length () == 1)
 	      retval = tcell(0,0);
 	    else
 	      {
-		int nr = tcell.rows ();
-		int nc = tcell.columns ();
-		octave_value_list lst (nr * nc, octave_value ());
-		int k = 0;
-		for (int j = 0; j < nc; j++)
-		  for (int i = 0; i < nr; i++)
-		    {
-		      OCTAVE_QUIT;
-		      lst(k++) = tcell(i,j);
-		    }
+		int n = tcell.numel ();
+
+		octave_value_list lst (n, octave_value ());
+
+		for (int i = 0; i < n; i++)
+		  {
+		    OCTAVE_QUIT;
+		    lst(i) = tcell(i);
+		  }
+
 		retval = octave_value (lst, true);
 	      }
 	  }
       }
       break;
 
     case '.':
       {
