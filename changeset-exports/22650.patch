# HG changeset patch
# User Rik <rik@octave.org>
# Date 1477023257 25200
#      Thu Oct 20 21:14:17 2016 -0700
# Branch stable
# Node ID 7458bacc631a0f2d0495c695aa62e1e1b829ba08
# Parent  9bc03a3f7a345c5b0551f6a93a19e950aad5a96c
integrate_adaptive.m: Fix orientation of approxvals when y is a vector.

* integrate_adaptive.m: After using interp1 to generate approximate values,
force vector outputs to be row vectors to match expected orientation in
calls to OutputFcn.

diff --git a/scripts/ode/private/integrate_adaptive.m b/scripts/ode/private/integrate_adaptive.m
--- a/scripts/ode/private/integrate_adaptive.m
+++ b/scripts/ode/private/integrate_adaptive.m
@@ -188,16 +188,19 @@ function solution = integrate_adaptive (
           ## Call OutputFcn only if a valid result has been found.
           ## Stop integration if function returns true.
           if (options.haveoutputfunction)
             cnt = options.Refine + 1;
             approxtime = linspace (t_old, t_new, cnt);
             approxvals = interp1 ([t_old, t(t_caught), t_new],
                                   [x_old, x(:, t_caught), x_new] .',
                                   approxtime, "linear") .';
+            if (isvector (approxvals))
+              approxvals = approxvals.';
+            endif
             if (! isempty (options.OutputSel))
               approxvals = approxvals(options.OutputSel, :);
             endif
             stop_solve = false;
             for ii = 1:numel (approxtime)
               stop_solve = feval (options.OutputFcn,
                                   approxtime(ii), approxvals(:, ii), [],
                                   options.funarguments{:});
@@ -236,16 +239,19 @@ function solution = integrate_adaptive (
         ## Call OutputFcn only if a valid result has been found.
         ## Stop integration if function returns true.
         if (options.haveoutputfunction)
           cnt = options.Refine + 1;
           approxtime = linspace (t_old, t_new, cnt);
           approxvals = interp1 ([t_old, t_new],
                                 [x_old, x_new] .',
                                 approxtime, "linear") .';
+          if (isvector (approxvals))
+            approxvals = approxvals.';
+          endif
           if (! isempty (options.OutputSel))
             approxvals = approxvals(options.OutputSel, :);
           endif
           stop_solve = false;
           for ii = 1:numel (approxtime)
             stop_solve = feval (options.OutputFcn,
                                 approxtime(ii), approxvals(:, ii), [],
                                 options.funarguments{:});
