# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1279563011 25200
#      Mon Jul 19 11:10:11 2010 -0700
# Node ID a40e32927b3a45a810c61eaade699fb05753ae31
# Parent  23b3ae008f5e7e50906c6822da1dd659c7559b1e
Improve documentation for new repelems function.
Add additional text to repelems documentation.
Place documentation in matrix chapter.
Add seealso link from repmat to repelems.

diff --git a/doc/ChangeLog b/doc/ChangeLog
--- a/doc/ChangeLog
+++ b/doc/ChangeLog
@@ -1,8 +1,12 @@
+2010-07-19  Rik <octave@nomad.inbox5.com>
+
+	* interpreter/matrix.txi: Add new function repelems to matrix chapter.
+
 2010-07-18  Rik <octave@nomad.inbox5.com>
 
 	* interpreter/doccheck/spellcheck,
 	interpreter/doccheck/spellcheck/add_to_aspell_dict:
 	Use case insensitive sort in spellcheck scripts.
 
 2010-07-18  Rik <octave@nomad.inbox5.com>
 
diff --git a/doc/interpreter/matrix.txi b/doc/interpreter/matrix.txi
--- a/doc/interpreter/matrix.txi
+++ b/doc/interpreter/matrix.txi
@@ -170,16 +170,18 @@ a (i, :)
 @DOCSTRING(eye)
 
 @DOCSTRING(ones)
 
 @DOCSTRING(zeros)
 
 @DOCSTRING(repmat)
 
+@DOCSTRING(repelems)
+
 @DOCSTRING(rand)
 
 @DOCSTRING(randn)
 
 @DOCSTRING(rande)
 
 @DOCSTRING(randp)
 
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2010-07-19  Rik <octave@nomad.inbox5.com>
+
+	* general/repmat.m: Add seealso to new repelems function
+
 2010-07-19  Jaroslav Hajek  <highegg@gmail.com>
 
 	* specfun/nchoosek.m: Optimize.
 
 2010-07-18  Rik <octave@nomad.inbox5.com>
 
 	* scripts/@ftp/ftp.m, scripts/@ftp/mget.m, scripts/audio/lin2mu.m,
 	scripts/audio/loadaudio.m, scripts/audio/mu2lin.m,
diff --git a/scripts/general/repmat.m b/scripts/general/repmat.m
--- a/scripts/general/repmat.m
+++ b/scripts/general/repmat.m
@@ -19,16 +19,17 @@
 
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {} repmat (@var{A}, @var{m}, @var{n})
 ## @deftypefnx {Function File} {} repmat (@var{A}, [@var{m} @var{n}])
 ## @deftypefnx {Function File} {} repmat (@var{A}, [@var{m} @var{n} @var{p} @dots{}])
 ## Form a block matrix of size @var{m} by @var{n}, with a copy of matrix
 ## @var{A} as each element.  If @var{n} is not specified, form an 
 ## @var{m} by @var{m} block matrix.
+## @seealso{repelems}
 ## @end deftypefn
 
 ## Author: Paul Kienzle <pkienzle@kienzle.powernet.co.uk>
 ## Created: July 2000
 
 function x = repmat (a, m, n)
 
   if (nargin < 2 || nargin > 3)
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,12 @@
+2010-07-17  Rik <octave@nomad.inbox5.com>
+
+	* data.cc (repelems): Add more documentation about new function.
+
 2010-07-19  Jaroslav Hajek  <highegg@gmail.com>
 
 	* data.cc (do_repelems): New helper func.
 	(Frepelems): New DEFUN.
 
 2010-07-19  John W. Eaton  <jwe@octave.org>
 
 	* DLD-FUNCTIONS/fltk_backend.cc (plot_window::gui_mode):
diff --git a/src/data.cc b/src/data.cc
--- a/src/data.cc
+++ b/src/data.cc
@@ -6525,26 +6525,35 @@ do_repelems (const Array<T>& src, const 
     }
 
   return retval;
 }
 
 DEFUN (repelems, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} repelems (@var{x}, @var{r})\n\
-Constructs a vector of repeated elements of @var{x}. @var{r}\n\
-should be a 2-by-n integer matrix.\n\
-The result is a row vector constructed as follows:\n\
+Construct a vector of repeated elements from @var{x}.  @var{r}\n\
+is a 2x@var{N} integer matrix specifying which elements to repeat and\n\
+how often to repeat each element.\n\
+\n\
+Entries in the first row, @var{r}(1,j), select an element to repeat.\n\
+The corresponding entry in the second row, @var{r}(2,j), specifies\n\
+the repeat count.  If @var{x} is a matrix then the columns of @var{x} are\n\
+imagined to be stacked on top of each other for purposes of the selection\n\
+index.  A row vector is always returned.\n\
+\n\
+Conceptually the result is calculated as follows:\n\
 \n\
 @example\n\
-  y = [];\n\
-  for i = 1:columns (n)\n\
-    y = [y, x(n(1,i)*ones(1, n(2,i)))];\n\
-  endfor\n\
+y = [];\n\
+for i = 1:columns (@var{r})\n\
+  y = [y, @var{x}(@var{r}(1,i)*ones(1, @var{r}(2,i)))];\n\
+endfor\n\
 @end example\n\
+@seealso{repmat}\n\
 @end deftypefn")
 {
   octave_value retval;
 
   if (args.length () == 2)
     {
       octave_value x = args(0);
 
