# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1217270094 14400
#      Mon Jul 28 14:34:54 2008 -0400
# Branch release-3-0-x
# Node ID 77793a0fad3dda0dadf3b82e2b384af45dd2d734
# Parent  db5518a14ea47c5c5c408c86faa8dede18b0bfc2
lasterr, lasterror: unwind-protect error_state
(transplanted from 736124a4fa3d2fdaf9c97dd5be26c6ab35f8b349)

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,12 @@
+2008-07-28  John W. Eaton  <jwe@octave.org>
+
+	* error.cc (Flasterror, Flasterr): Unwind-protect error_state.
+
 2008-07-24  John W. Eaton  <jwe@octave.org>
 
 	* dirfns.cc (Fmkdir): If directory already exists, return status =
 	true, but also set error message.
 
 2008-07-21  John W. Eaton  <jwe@octave.org>
 
 	* OPERATORS/op-struct.cc: Define concatenation operators for
diff --git a/src/error.cc b/src/error.cc
--- a/src/error.cc
+++ b/src/error.cc
@@ -1453,16 +1453,21 @@ set to their default values.\n\
 \n\
 If @code{lasterror} is called with the argument 'reset', all values take\n\
 their default values.\n\
 @end deftypefn")
 {
   octave_value retval;
   int nargin = args.length();
 
+  unwind_protect::begin_frame ("Flasterror");
+
+  unwind_protect_int (error_state);
+  error_state = 0;
+
   if (nargin < 2)
     {
       Octave_map err;
 
       err.assign ("message", Vlast_error_message);
       err.assign ("identifier", Vlast_error_id);
 
       if (! (Vlast_error_file.empty() && Vlast_error_name.empty() &&
@@ -1577,29 +1582,36 @@ their default values.\n\
 	}
 
       if (! error_state)
 	retval = err;
     }
   else
     print_usage ();
 
+  unwind_protect::run_frame ("Flasterror");
+
   return retval;  
 }
 
 DEFUN (lasterr, args, nargout,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {[@var{msg}, @var{msgid}] =} lasterr (@var{msg}, @var{msgid})\n\
 Without any arguments, return the last error message.  With one\n\
 argument, set the last error message to @var{msg}.  With two arguments,\n\
 also set the last message identifier.\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
+  unwind_protect::begin_frame ("Flasterr");
+
+  unwind_protect_int (error_state);
+  error_state = 0;
+
   int argc = args.length () + 1;
 
   if (argc < 4)
     {
       string_vector argv = args.make_argv ("lasterr");
 
       if (! error_state)
 	{
@@ -1619,16 +1631,18 @@ also set the last message identifier.\n\
 	    }
 	}
       else
 	error ("lasterr: expecting arguments to be character strings");
     }
   else
     print_usage ();
 
+  unwind_protect::run_frame ("Flasterr");
+
   return retval;  
 }
 
 // For backward compatibility.
 DEFALIAS (error_text, lasterr);
 DEFALIAS (__error_text__, lasterr);
 
 DEFUN (lastwarn, args, nargout,
