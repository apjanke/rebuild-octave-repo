# HG changeset patch
# User jwe
# Date 847858503 0
#      Wed Nov 13 04:15:03 1996 +0000
# Node ID fea92d9ce972ed5fe21049b0115bc36cced21d54
# Parent  e8e0f57ce4fae5c58b4f82e54df90633796c9351
[project @ 1996-11-13 04:15:03 by jwe]

diff --git a/info/ChangeLog b/info/ChangeLog
--- a/info/ChangeLog
+++ b/info/ChangeLog
@@ -6,16 +6,17 @@ Tue Nov 12 14:44:00 1996  John W. Eaton 
 	(LIBS): Don't use libtxi.
 	(info): Don't depend on ../libtxi.a.
 	(info.o): Depend on getopt.h, not $(common)/getopt.h.
 	(.c.o): Don't add -I$(common).
 	(install, uninstall, dist, local-dist): Customize for Octave.
 	(TOPDIR, top_srcdir, DISTFILES): For Octave.
 	Include $(TOPDIR)/Makeconf, for Octave.
 	Don't add $(common) for dvi or info targets.
+	(Makefile): Depend on Makefile.in and config.status.
 
 	* configure.in: Copy here from (in texinfo distribution).
 
 	* alloca.c, bzero.c, getopt.c, getopt.h, getopt1.c, memcpy.c,
 	memmove.c, str
 	dup.c: Copy here from ../libtxi (in texinfo
 	distribution).
 	* Makefile.in: Don't link to files in libtxi.  Instead, include
diff --git a/info/Makefile.in b/info/Makefile.in
--- a/info/Makefile.in
+++ b/info/Makefile.in
@@ -1,10 +1,10 @@
 # Makefile for texinfo/info.	-*- Indented-Text -*-
-# $Id: Makefile.in,v 1.30 1996-11-13 03:55:40 jwe Exp $
+# $Id: Makefile.in,v 1.31 1996-11-13 04:15:03 jwe Exp $
 # 
 # Copyright (C) 1993,96 Free Software Foundation, Inc.
 
 # This program is free software; you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
 # the Free Software Foundation; either version 2, or (at your option)
 # any later version.
 
@@ -97,17 +97,17 @@ MAKEDOC_SOURCE = makedoc.c clib.c xmallo
 
 infofiles = info.info info-stnd.info
 
 TEXINFO = info.texi info-stnd.texi
 
 DISTFILES = Makefile.in ChangeLog README NEWS info.1 configure.in \
   configure mkinstalldirs $(SRCS) $(HDRS) $(infofiles) $(TEXINFO)
 
-.c.o:
+%.o : %.c
 	$(CC) -c $(CPPFLAGS) $(LDEFS) $(DEFS) -I. -I$(srcdir) $(CFLAGS) $<
 
 all: info $(infofiles)
 sub-all: all
 
 install:
 	$(top_srcdir)/mkinstalldirs $(archlibdir)
 	$(INSTALL_PROGRAM) info $(archlibdir)/info
@@ -131,17 +131,17 @@ info.dvi: info.texi
 	PATH="$(util):$${PATH}" TEXINPUTS="$(srcdir):$${TEXINPUTS}" texi2dvi $(srcdir)/info.texi
 
 info-stnd.dvi: info-stnd.texi
 	PATH="$(util):$${PATH}" TEXINPUTS="$(srcdir):$${TEXINPUTS}" texi2dvi $(srcdir)/info-stnd.texi
 
 makedoc: $(MAKEDOC_OBJECTS)
 	$(CC) $(LDFLAGS) -o makedoc $(MAKEDOC_OBJECTS) $(LOADLIBES)
 
-Makefile: $(srcdir)/Makefile.in ../config.status
+Makefile: Makefile.in config.status
 	cd ..; sh config.status
 
 clean:
 	$(RM) info funs.h doc.c makedoc $(OBJS) $(MAKEDOC_OBJECTS)
 
 distclean: clean texclean
 	$(RM) Makefile config.status config.cache *~ core core.* *.core
 	$(RM) *.BAK makedoc-TAGS TAGS \#* *.info*
diff --git a/info/filesys.h b/info/filesys.h
--- a/info/filesys.h
+++ b/info/filesys.h
@@ -65,17 +65,17 @@ extern int filesys_error_number;
 
 /* Given a string containing units of information separated by colons,
    return the next one pointed to by IDX, or NULL if there are no more.
    Advance IDX to the character after the colon. */
 extern char *extract_colon_unit ();
 
 /* The default value of INFOPATH. */
 #if !defined (DEFAULT_INFOPATH)
-! #  define DEFAULT_INFOPATH "/usr/local/info:/usr/info:/usr/local/lib/info:/usr/lib/info:/usr/local/gnu/info:/usr/local/gnu/lib/info:/usr/gnu/info:/usr/gnu/lib/info:/opt/gnu/info:/usr/share/info:/usr/share/lib/info:/usr/local/share/info:/usr/local/share/lib/info:/usr/gnu/lib/emacs/info:/usr/local/gnu/lib/emacs/info:/usr/local/lib/emacs/info:/usr/local/emacs/info:."
+#  define DEFAULT_INFOPATH "/usr/local/info:/usr/info:/usr/local/lib/info:/usr/lib/info:/usr/local/gnu/info:/usr/local/gnu/lib/info:/usr/gnu/info:/usr/gnu/lib/info:/opt/gnu/info:/usr/share/info:/usr/share/lib/info:/usr/local/share/info:/usr/local/share/lib/info:/usr/gnu/lib/emacs/info:/usr/local/gnu/lib/emacs/info:/usr/local/lib/emacs/info:/usr/local/emacs/info:."
 #endif /* !DEFAULT_INFOPATH */
 
 #if !defined (S_ISREG) && defined (S_IFREG)
 #  define S_ISREG(m) (((m) & S_IFMT) == S_IFREG)
 #endif /* !S_ISREG && S_IFREG */
 
 #if !defined (S_ISDIR) && defined (S_IFDIR)
 #  define S_ISDIR(m) (((m) & S_IFMT) == S_IFDIR)
