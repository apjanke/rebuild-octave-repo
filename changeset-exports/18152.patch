# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1387484668 18000
#      Thu Dec 19 15:24:28 2013 -0500
# Branch stable
# Node ID 91a3858ef8cfbf185a1df39ce62058d7b7d7e673
# Parent  bc1809fe55e483255e5b503af69200675dcf8e8c
invoke versioned binaries from octave driver program (bug #40957)

* main.in.cc (OCTAVE_VERSION): New macro.
(main)  Append OCTAVE_VERSION to exec file name.  Always set
new_argv[0] to full name of file that is executed.

* Makefile.am (octave-cli-$(version), octave-gui-$(version),
all-local): New rules.
(OCTAVE_VERSION_LINKS): New variable.
(CLEANFILES): Include $(OCTAVE_VERSION_LINKS) in the list.

diff --git a/src/Makefile.am b/src/Makefile.am
--- a/src/Makefile.am
+++ b/src/Makefile.am
@@ -44,18 +44,21 @@ EXTRA_DIST = \
 
 DISTCLEANFILES = \
   main.cc
 
 OCTAVE_BINARIES = \
   octave \
   octave-cli
 
+OCTAVE_VERSION_LINKS = octave-cli-$(version)
+
 if AMCOND_BUILD_GUI
   OCTAVE_BINARIES += octave-gui
+  OCTAVE_VERSION_LINKS += octave-gui-$(version)
 endif
 
 OCTAVE_CORE_LIBS = \
   $(top_builddir)/libinterp/liboctinterp.la \
   $(top_builddir)/liboctave/liboctave.la
 
 include ../libgui/link-deps.mk
 
@@ -131,16 +134,18 @@ else
 bin_PROGRAMS = \
   $(OCTAVE_BINARIES)
 
 bin_SCRIPTS = \
   mkoctfile \
   octave-config
 endif
 
+all-local: $(OCTAVE_VERSION_LINKS)
+
 if AMCOND_BUILD_COMPILED_AUX_PROGRAMS
 octave-config.cc: octave-config.in.cc Makefile
 	@$(do_subst_default_vals)
 
 mkoctfile.cc: mkoctfile.in.cc Makefile
 	@$(do_subst_config_vals)
 
 else
@@ -184,10 +189,22 @@ remove-version-links:
 if ! AMCOND_BUILD_COMPILED_AUX_PROGRAMS
 	for f in $(basename $(bin_SCRIPTS)); do \
 	  rm -f $(DESTDIR)$(bindir)/$$f-$(version); \
 	done
 endif
 
 .PHONY: make-version-links remove-version-links
 
+## We need these file names in the build tree because the wrapper
+## program (main.cc) will try to invoke the versioned binaries.
+
+octave-cli-$(version): octave-cli
+	rm -f $@
+	$(LN_S) $< $@
+
+octave-gui-$(version): octave-gui
+	rm -f $@
+	$(LN_S) $< $@
+
 CLEANFILES = \
-  $(bin_SCRIPTS)
+  $(bin_SCRIPTS) \
+  $(OCTAVE_VERSION_LINKS)
diff --git a/src/main.in.cc b/src/main.in.cc
--- a/src/main.in.cc
+++ b/src/main.in.cc
@@ -37,16 +37,28 @@ along with Octave; see the file COPYING.
 
 #include <algorithm>
 #include <iostream>
 #include <string>
 
 #include <sys/types.h>
 #include <unistd.h>
 
+#ifndef OCTAVE_VERSION
+#define OCTAVE_VERSION %OCTAVE_VERSION%
+#endif
+
+#ifndef OCTAVE_BINDIR
+#define OCTAVE_BINDIR %OCTAVE_BINDIR%
+#endif
+
+#ifndef OCTAVE_PREFIX
+#define OCTAVE_PREFIX %OCTAVE_PREFIX%
+#endif
+
 #if defined (__WIN32__) && ! defined (_POSIX_VERSION)
 
 #define WIN32_LEAN_AND_MEAN
 #include <tlhelp32.h>
 
 static std::string
 w32_get_octave_home (void)
 {
@@ -353,24 +365,16 @@ have_controlling_terminal (void)
       retval = true;
     }
 
   return retval;
 }
 
 #endif
 
-#ifndef OCTAVE_BINDIR
-#define OCTAVE_BINDIR %OCTAVE_BINDIR%
-#endif
-
-#ifndef OCTAVE_PREFIX
-#define OCTAVE_PREFIX %OCTAVE_PREFIX%
-#endif
-
 // Find the directory where the octave binary is supposed to be
 // installed.
 
 #if (defined (OCTAVE_HAVE_WINDOWS_FILESYSTEM) \
      && ! defined (OCTAVE_HAVE_POSIX_FILESYSTEM))
 static const char dir_sep_char = '\\';
 #else
 static const char dir_sep_char = '/';
@@ -585,40 +589,36 @@ main (int argc, char **argv)
 {
   int retval = 0;
 
   bool start_gui = false;
   bool gui_libs = false;
 
   std::string octave_bindir = get_octave_bindir ();
 
-  std::string file = octave_bindir + dir_sep_char + "octave-cli";
+  std::string file
+    = octave_bindir + dir_sep_char + "octave-cli-" OCTAVE_VERSION;;
 
   char **new_argv = new char * [argc + 1];
 
-#if defined (__WIN32__) && ! defined (__CYGWIN__)
   int k = 1;
-#else
-  int k = 0;
-  new_argv[k++] = strsave ("octave");
-#endif
 
   bool warn_display = true;
 
   for (int i = 1; i < argc; i++)
     {
       if (! strcmp (argv[i], "--force-gui"))
         {
           start_gui = true;
           gui_libs = true;
           file = octave_bindir + dir_sep_char;
           #if defined (HAVE_OCTAVE_GUI)
-            file += "octave-gui";
+            file += "octave-gui-" OCTAVE_VERSION;
           #else
-            file += "octave-cli";
+            file += "octave-cli-" OCTAVE_VERSION;
           #endif
           new_argv[k++] = argv[i];
         }
       else if (! strcmp (argv[i], "--no-gui-libs"))
         {
           // Run the version of Octave that is not linked with any GUI
           // libraries.  It may not be possible to do plotting or any
           // ui* calls, but it will be a little faster to start and
@@ -626,19 +626,19 @@ main (int argc, char **argv)
           // on as that option is not recognized by Octave.
 
           // This is the default for 3.8 release.
         }
       else if (! strcmp (argv[i], "--no-gui"))
         {
           // If we see this option, then we can just exec octave; we
           // don't have to create a child process and wait for it to
-          // exit.  But do exec "octave", not "octave-cli", because even
-          // if the --no-gui option is given, we may be asked to do some
-          // plotting or ui* calls.
+          // exit.  But do exec "octave-gui", not "octave-cli", because
+          // even if the --no-gui option is given, we may be asked to do
+          // some plotting or ui* calls.
 
           // This option calls the cli executable for the 3.8 release.
         }
       else if (! strcmp (argv[i], "--silent") || ! strcmp (argv[i], "-q")
                || ! strcmp (argv[i], "--quiet"))
         {
           warn_display = false;
           new_argv[k++] = argv[i];
@@ -653,26 +653,32 @@ main (int argc, char **argv)
     {
       std::string display_check_err_msg;
 
       if (! display_available (display_check_err_msg))
         {
           start_gui = false;
           gui_libs = false;
 
-          file = octave_bindir + dir_sep_char + "octave-cli";
+          file = octave_bindir + dir_sep_char + "octave-cli-" OCTAVE_VERSION;
 
           if (warn_display)
             {
               std::cerr << "octave: " << display_check_err_msg << std::endl;
               std::cerr << "octave: disabling GUI features" << std::endl;
             }
         }
     }
 
+#if defined (__WIN32__) && ! defined (__CYGWIN__)
+  file += ".exe";
+#endif
+
+  new_argv[0] = strsave (file.c_str ());
+
 #if (defined (HAVE_OCTAVE_GUI) \
      && ! defined (__WIN32__) || defined (__CYGWIN__))
 
   if (gui_libs && start_gui && have_controlling_terminal ())
     {
       install_signal_handlers ();
 
       gui_pid = fork ();
@@ -728,20 +734,16 @@ main (int argc, char **argv)
             }
         }
     }
   else
     retval = octave_exec (file, new_argv);
 
 #else
 
-#if defined (__WIN32__) && ! defined (__CYGWIN__)
-  file += ".exe";
-  new_argv[0] = strsave (file.c_str ());
-#endif
   retval = octave_exec (file, new_argv);
 
 #endif
 
   return retval;
 }
 
 /*!
