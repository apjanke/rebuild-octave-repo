# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1311474303 25200
#      Sat Jul 23 19:25:03 2011 -0700
# Node ID 29cd5a828bb260541fb13aec2786e246a9163130
# Parent  787a84da70a65acd37456a134af3dc745c59ea92
strtrim.m: Don't remove nuls (\0) from string.

* strtrim.m: Stop removing nuls (\0) to be compatible with Matlab.

diff --git a/scripts/strings/strtrim.m b/scripts/strings/strtrim.m
--- a/scripts/strings/strtrim.m
+++ b/scripts/strings/strtrim.m
@@ -13,17 +13,17 @@
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} strtrim (@var{s})
-## Remove leading and trailing whitespace and nulls from @var{s}.  If
+## Remove leading and trailing whitespace from @var{s}.  If
 ## @var{s} is a matrix, @var{strtrim} trims each row to the length of
 ## longest string.  If @var{s} is a cell array, operate recursively on
 ## each element of the cell array.  For example:
 ##
 ## @example
 ## @group
 ## strtrim ("    abc  ")
 ##      @result{} "abc"
@@ -41,26 +41,26 @@
 function s = strtrim (s)
 
   if (nargin != 1)
     print_usage ();
   endif
 
   if (ischar (s))
 
-    k = find (! isspace (s) & s != "\0");
+    k = find (! isspace (s));
     if (isempty (s) || isempty (k))
       s = "";
     else
       s = s(:, ceil (min (k) / rows (s)):ceil (max (k) / rows (s)));
     endif
 
   elseif (iscell(s))
 
-    s = regexprep (s, "^[\\s\v\\0]+|[\\s\v\\0]+$", '');
+    s = regexprep (s, "^[\\s\v]+|[\\s\v]+$", '');
 
   else
     error ("strtrim: S argument must be a string");
   endif
 
 endfunction
 
 
