# HG changeset patch
# User Mike Miller <mtmiller@octave.org>
# Date 1466199642 25200
#      Fri Jun 17 14:40:42 2016 -0700
# Branch stable
# Node ID 9780323c1c89b94d09eb406aedf421c1374fff38
# Parent  42929c66846dc8aab16a909dcc3eca420447c117
doc: clarify differences between atan and atan2 (bug #48178)

* data.cc (Fatan2): Expand docstring with wording similar to the C++
standard description of atan2, compare to the arg function.

diff --git a/libinterp/corefcn/data.cc b/libinterp/corefcn/data.cc
--- a/libinterp/corefcn/data.cc
+++ b/libinterp/corefcn/data.cc
@@ -211,17 +211,21 @@ any (eye (2, 4), 2)\n\
 // These mapping functions may also be useful in other places, eh?
 
 DEFUN (atan2, args, ,
        "-*- texinfo -*-\n\
 @deftypefn {Mapping Function} {} atan2 (@var{y}, @var{x})\n\
 Compute atan (@var{y} / @var{x}) for corresponding elements of @var{y}\n\
 and @var{x}.\n\
 \n\
-@var{y} and @var{x} must match in size and orientation.\n\
+@var{y} and @var{x} must match in size and orientation.  The signs of\n\
+elements of @var{y} and @var{x} are used to determine the quadrats of each\n\
+resulting value.\n\
+\n\
+This function is equivalent to @code{arg (complex (@var{x}, @var{y}))}.\n\
 @seealso{tan, tand, tanh, atanh}\n\
 @end deftypefn")
 {
   octave_value retval;
 
   int nargin = args.length ();
 
   if (nargin == 2)
