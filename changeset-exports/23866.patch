# HG changeset patch
# User Mike Miller <mtmiller@octave.org>
# Date 1502382698 25200
#      Thu Aug 10 09:31:38 2017 -0700
# Node ID 4f68899f9e5bd2d6ad9b132e9c10f6e16466a8ec
# Parent  d56c18dc1373233855ade6eaa99a02ddbb8081e2
doc: improve docstrings for audioformats, audioinfo, audioread, and audiowrite

* audioread.cc: Add @seealso links to other audio functions to all docstrings.
Add a description of the struct returned by audioinfo.

diff --git a/libinterp/dldfcn/audioread.cc b/libinterp/dldfcn/audioread.cc
--- a/libinterp/dldfcn/audioread.cc
+++ b/libinterp/dldfcn/audioread.cc
@@ -67,16 +67,17 @@ The audio data is stored as matrix with 
 and columns corresponding to channels.
 
 The optional two-element vector argument @var{samples} specifies starting
 and ending frames.
 
 The optional argument @var{datatype} specifies the datatype to return.
 If it is @qcode{"native"}, then the type of data depends on how the data
 is stored in the audio file.
+@seealso{audiowrite, audioformats, audioinfo}
 @end deftypefn */)
 {
 #if defined (HAVE_SNDFILE)
 
   int nargin = args.length ();
 
   if (nargin < 1 || nargin > 3)
     print_usage ();
@@ -260,16 +261,17 @@ and 100 with 100 being the highest quali
 Title for the audio file.
 
 @item Artist
 Artist name.
 
 @item Comment
 Comment.
 @end table
+@seealso{audioread, audioformats, audioinfo}
 @end deftypefn */)
 {
 #if defined (HAVE_SNDFILE)
 
   int nargin = args.length ();
 
   if (nargin < 3)
     print_usage ();
@@ -444,16 +446,55 @@ Comment.
 
 #endif
 }
 
 DEFUN_DLD (audioinfo, args, ,
            doc: /* -*- texinfo -*-
 @deftypefn {} {@var{info} =} audioinfo (@var{filename})
 Return information about an audio file specified by @var{filename}.
+
+The output @var{info} is a structure containing the following fields:
+
+@table @samp
+@item Filename
+Name of the audio file.
+
+@item CompressionMethod
+Audio compression method.  Unused, only present for compatibility with
+@sc{matlab}.
+
+@item NumChannels
+Number of audio channels.
+
+@item SampleRate
+Sample rate of the audio, in Hertz.
+
+@item TotalSamples
+Number of samples in the file.
+
+@item Duration
+Duration of the audio, in seconds.
+
+@item BitsPerSample
+Number of bits per sample.
+
+@item BitRate
+Audio bitrate.  Unused, only present for compatibility with @sc{matlab}.
+
+@item Title
+@qcode{"Title"} audio metadata value as a string, or empty if not present.
+
+@item Artist
+@qcode{"Artist"} audio metadata value as a string, or empty if not present.
+
+@item Comment
+@qcode{"Comment"} audio metadata value as a string, or empty if not present.
+@end table
+@seealso{audioread, audiowrite}
 @end deftypefn */)
 {
 #if defined (HAVE_SNDFILE)
 
   if (args.length () != 1)
     print_usage ();
 
   std::string filename = args(0).xstring_value ("audioinfo: FILENAME must be a string");
@@ -551,16 +592,17 @@ audio_sub_formats (int format)
 DEFUN_DLD (audioformats, args, ,
            doc: /* -*- texinfo -*-
 @deftypefn  {} {} audioformats ()
 @deftypefnx {} {} audioformats (@var{format})
 Display information about all supported audio formats.
 
 If the optional argument @var{format} is given, then display only formats
 with names that start with @var{format}.
+@seealso{audioread, audiowrite}
 @end deftypefn */)
 {
 #if defined (HAVE_SNDFILE)
 
   if (args.length () > 1)
     print_usage ();
 
   std::string search = "";
