# HG changeset patch
# User jwe
# Date 769893430 0
#      Wed May 25 19:17:10 1994 +0000
# Node ID 49eddf39e77d4e109d014c58b602527103170fe3
# Parent  c2f99a009e7aa4336f3bf86ffad4b6a6981ef2dc
[project @ 1994-05-25 19:17:10 by jwe]

diff --git a/src/tc-extras.cc b/src/tc-extras.cc
--- a/src/tc-extras.cc
+++ b/src/tc-extras.cc
@@ -743,26 +743,26 @@ column_max (const tree_constant *args, i
 	  retval = new tree_constant [2];
           switch (arg1_type)
             {
 	    case tree_constant_rep::scalar_constant:
 	      {
 		double result;
 		double a_elem = arg1.double_value ();
 		double b_elem = arg2.double_value ();
-		result = MIN (a_elem, b_elem);
+		result = MAX (a_elem, b_elem);
 		retval[0] = tree_constant (result);
 	      }
               break;
 	    case tree_constant_rep::complex_scalar_constant:
 	      {
 		Complex result;
 		Complex a_elem = arg1.complex_value ();
 		Complex b_elem = arg2.complex_value ();
-		if (abs(a_elem) < abs(b_elem))
+		if (abs (a_elem) > abs (b_elem))
 		  result = a_elem;
 		else
 		  result = b_elem;
 		retval[0] = tree_constant (result);
 	      }
               break;
 	    case tree_constant_rep::matrix_constant:
 	      {
@@ -923,17 +923,17 @@ column_min (const tree_constant *args, i
 		retval[0] = tree_constant (result);
 	      }
               break;
 	    case tree_constant_rep::complex_scalar_constant:
 	      {
 		Complex result;
 		Complex a_elem = arg1.complex_value ();
 		Complex b_elem = arg2.complex_value ();
-		if (abs(a_elem) < abs(b_elem))
+		if (abs (a_elem) < abs (b_elem))
 		  result = a_elem;
 		else
 		  result = b_elem;
 		retval[0] = tree_constant (result);
 	      }
               break;
 	    case tree_constant_rep::matrix_constant:
 	      {
