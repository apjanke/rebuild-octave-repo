# HG changeset patch
# User Soren Hauberg <hauberg@gmail.com>
# Date 1278239920 -7200
#      Sun Jul 04 12:38:40 2010 +0200
# Node ID 6cc789b3f0e3724be05a2ebab1889f919edbcd49
# Parent  d27bd2f74137666d2a0762feb133a1853c437f04
scripts/polynomial/deconv.m: ensure that the orientation of the third input to 'filter' matches the orientation of 'y'.

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2010-07-04  Soren Hauberg  <hauberg@gmail.com>
+
+	* polynomial/deconv.m: ensure that the orientation of the third
+	input to 'filter' matches the orientation of 'y'.
+
 2010-07-02  Rik <octave@nomad.inbox5.com>
 
         * audio/wavread.m: Correctly handle non-word aligned data chunks.
         (bug #30309).
 
 2010-06-16  Rik <octave@nomad.inbox5.com>
 
         * plot/stairs.m: Add additional calling forms to documentation.
diff --git a/scripts/polynomial/deconv.m b/scripts/polynomial/deconv.m
--- a/scripts/polynomial/deconv.m
+++ b/scripts/polynomial/deconv.m
@@ -50,17 +50,19 @@ function [b, r] = deconv (y, a)
   lb = ly - la + 1;
 
   ## Ensure A is oriented as Y.
   if (diff (size (y)(1:2)) * diff (size (a)(1:2)) < 0)
     a = permute (a, [2, 1]);
   endif
 
   if (ly > la)
-    b = filter (y, a, [1, (zeros (1, ly - la))]);
+    x = zeros (size (y) - size (a) + 1);
+    x (1) = 1;
+    b = filter (y, a, x);
   elseif (ly == la)
     b = filter (y, a, 1);
   else
     b = 0;
   endif
 
   lc = la + length (b) - 1;
   if (ly == lc)
@@ -95,12 +97,15 @@ endfunction
 %!test
 %! [b,r] = deconv ([3; 6], [1; 2; 3]);
 %! assert (b == 0 && all (all (r == [3; 6])))
 
 %!test
 %! [b, r] = deconv ([3; 6], [1, 2, 3]);
 %! assert (b == 0 && all (all (r == [3; 6])))
 
+%!test
+%! assert (deconv ((1:3)',[1, 1]), [1; 1])
+
 %!error [b, r] = deconv ([3, 6], [1, 2; 3, 4]);
 
 %!error [b, r] = deconv ([3, 6; 1, 2], [1, 2, 3]);
 
