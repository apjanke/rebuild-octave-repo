# HG changeset patch
# User Daniel J Sebald <daniel.sebald@ieee.org>
# Date 1370973090 18000
#      Tue Jun 11 12:51:30 2013 -0500
# Node ID 28a58b06e4ff488168853e3e893315f7a5729214
# Parent  9d07394139041d029a27cd52720cd648f7536bb4
Make spacing similar for color option layouts

* settings-dialog.cc (settings_dialog::read_terminal_colors): Add a column
stretch for description and color picker columns of 10.  Set the column
stretch for last two (blank) columns to 10.

diff --git a/libgui/src/settings-dialog.cc b/libgui/src/settings-dialog.cc
--- a/libgui/src/settings-dialog.cc
+++ b/libgui/src/settings-dialog.cc
@@ -328,20 +328,20 @@ settings_dialog::read_workspace_colors (
   for (int i = 0; i < nr_of_classes; i++)
     {
       description[i] = new QLabel (class_names.at (i));
       description[i]->setAlignment (Qt::AlignRight);
       QVariant default_var = default_colors.at (i);
       QColor setting_color = settings->value ("workspaceview/color_"+class_chars.mid (i,1),
                                               default_var).value<QColor> ();
       color[i] = new color_picker (setting_color);
-      color[i]->setObjectName ("color_"+class_chars.mid (i,1));
-      color[i]->setMinimumSize (30,10);
-      style_grid->addWidget (description[i], row,3*column);
-      style_grid->addWidget (color[i],       row,3*column+1);
+      color[i]->setObjectName ("color_"+class_chars.mid (i, 1));
+      color[i]->setMinimumSize (30, 10);
+      style_grid->addWidget (description[i], row, 3*column);
+      style_grid->addWidget (color[i],       row, 3*column+1);
       if (++column == 3)
         {
           row++;
           column = 0;
         }
     }
 
   // place grid with elements into the tab
@@ -366,22 +366,26 @@ settings_dialog::read_terminal_colors (Q
   for (int i = 0; i < nr_of_classes; i++)
     {
       description[i] = new QLabel (class_names.at (i));
       description[i]->setAlignment (Qt::AlignRight);
       QVariant default_var = default_colors.at (i);
       QColor setting_color = settings->value ("terminal/color_"+class_chars.mid (i,1),
                                               default_var).value<QColor> ();
       color[i] = new color_picker (setting_color);
-      color[i]->setObjectName ("terminal_color_"+class_chars.mid (i,1));
-      color[i]->setMinimumSize (30,10);
-      style_grid->addWidget (description[i], row,2*column);
-      style_grid->addWidget (color[i],       row,2*column+1);
+      color[i]->setObjectName ("terminal_color_"+class_chars.mid (i, 1));
+      color[i]->setMinimumSize (30, 10);
+      style_grid->addWidget (description[i], row, 2*column);
+      style_grid->addWidget (color[i],       row, 2*column+1);
+      style_grid->setColumnStretch (2*column, 10);
+      style_grid->setColumnStretch (2*column+1, 10);
       if (++column == 2)
         {
+          style_grid->setColumnStretch (3*column, 10);
+          style_grid->setColumnStretch (3*column+1, 10);
           row++;
           column = 0;
         }
     }
 
   // place grid with elements into the tab
   ui->terminal_colors_box->setLayout (style_grid);
 }
