# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1371766908 14400
#      Thu Jun 20 18:21:48 2013 -0400
# Node ID f89de736eecdaf37082354daa07804c85baf259e
# Parent  2cfd8cd9e1b6869d6e706b725104d64ddaa914c4
correctly parse expressions like pi+1 (bug #39301)

* lex.ll (CMD_OR_UNARY_OP): Also check whether the current token looks
like a command argument.
(octave_base_lexer::handle_identifier): Special treatment for pi.

diff --git a/libinterp/parse-tree/lex.ll b/libinterp/parse-tree/lex.ll
--- a/libinterp/parse-tree/lex.ll
+++ b/libinterp/parse-tree/lex.ll
@@ -168,18 +168,25 @@ object) relevant global values before an
 #define CMD_OR_UNARY_OP(PATTERN, TOK, COMPAT) \
  \
   do \
     { \
       curr_lexer->lexer_debug (PATTERN); \
  \
       if (curr_lexer->previous_token_may_be_command ()) \
         { \
-          yyless (0); \
-          curr_lexer->push_start_state (COMMAND_START); \
+          if (curr_lexer->looks_like_command_arg ()) \
+            { \
+              yyless (0); \
+              curr_lexer->push_start_state (COMMAND_START); \
+            } \
+          else \
+            { \
+              return curr_lexer->handle_op_internal (TOK, false, COMPAT); \
+            } \
         } \
       else \
         { \
           int tok \
             = (COMPAT \
                ? curr_lexer->handle_unary_op (TOK) \
                : curr_lexer->handle_incompatible_unary_op (TOK)); \
  \
@@ -2647,19 +2654,26 @@ octave_base_lexer::handle_identifier (vo
   if (tok == "end")
     tok = "__end__";
 
   symbol_table::scope_id sid = symtab_context.curr_scope ();
 
   token *tok_val = new token (NAME, &(symbol_table::insert (tok, sid)),
                               input_line_number, current_input_column);
 
+  // The following symbols are handled specially so that things like
+  //
+  //   pi +1
+  //
+  // are parsed as an addition expression instead of as a command-style
+  // function call with the argument "+1".
+
   if (at_beginning_of_statement
       && (! (is_variable (tok)
-             || tok == "e"
+             || tok == "e" || tok == "pi"
              || tok == "I" || tok == "i"
              || tok == "J" || tok == "j"
              || tok == "Inf" || tok == "inf"
              || tok == "NaN" || tok == "nan")))
     tok_val->mark_may_be_command ();
 
   push_token (tok_val);
 
