# HG changeset patch
# User Jordi Guti√©rrez Hermoso <jordigh@gmail.com>
# Date 1313374632 18000
#      Sun Aug 14 21:17:12 2011 -0500
# Node ID 27e5f0e79f19f5d4ca3962f1f6335fa11b5b3712
# Parent  55c3da8f1c9ac4fc61965a1d4b7b73a13f4a212a
Return better error codes from curl, even if connection is successful

diff --git a/src/DLD-FUNCTIONS/urlwrite.cc b/src/DLD-FUNCTIONS/urlwrite.cc
--- a/src/DLD-FUNCTIONS/urlwrite.cc
+++ b/src/DLD-FUNCTIONS/urlwrite.cc
@@ -107,21 +107,21 @@ private:
 
     bool perform (bool curlerror) const
       {
         bool retval = false;
         if (!error_state)
           {
             BEGIN_INTERRUPT_IMMEDIATELY_IN_FOREIGN_CODE;
 
-            CURLcode res = curl_easy_perform (curl);
-            if (res != CURLE_OK)
+            errnum = curl_easy_perform (curl);
+            if (errnum != CURLE_OK)
               {
                 if (curlerror)
-                  error ("%s", curl_easy_strerror (res));
+                  error ("%s", curl_easy_strerror (errnum));
               }
             else
               retval = true;
 
             END_INTERRUPT_IMMEDIATELY_IN_FOREIGN_CODE;
           }
         return retval;
       }
@@ -140,16 +140,17 @@ private:
       {
         return !ascii;
       }
 
     size_t count;
     std::string host;
     bool valid;
     bool ascii;
+    mutable CURLcode errnum;
 
   private:
     CURL *curl;
 
     // No copying!
 
     curl_handle_rep (const curl_handle_rep& ov);
 
@@ -245,21 +246,17 @@ public:
 
   bool is_valid (void) const
     {
       return rep->is_valid ();
     }
 
   std::string lasterror (void) const
     {
-      CURLcode errnum;
-
-      curl_easy_getinfo (rep->handle(), CURLINFO_OS_ERRNO, &errnum);
-
-      return std::string (curl_easy_strerror (errnum));
+      return std::string (curl_easy_strerror (rep->errnum));
     }
 
   void set_ostream (std::ostream& os) const
     {
       setopt (CURLOPT_WRITEDATA, static_cast<void*> (&os));
     }
 
   void set_istream (std::istream& is) const
