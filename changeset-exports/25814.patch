# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1534610623 14400
#      Sat Aug 18 12:43:43 2018 -0400
# Branch stable
# Node ID a8a72d1c21dde9d2f56f7bb69589404b8882ccbb
# Parent  7233dae64579ebf1ad5f3d66d0fd22157f01b3d8
correctly copy base class for colon and funcall parse tree objects (bug #47091)

* pt-colon.cc (tree_colon_expression::dup): Pass *this to copy_base,
not the newly created object.
* pt-funcall.cc (tree_funcall::dup): Likewise.

diff --git a/libinterp/parse-tree/pt-colon.cc b/libinterp/parse-tree/pt-colon.cc
--- a/libinterp/parse-tree/pt-colon.cc
+++ b/libinterp/parse-tree/pt-colon.cc
@@ -34,13 +34,13 @@ namespace octave
   tree_colon_expression::dup (symbol_scope& scope) const
   {
     tree_colon_expression *new_ce
       = new tree_colon_expression (m_base ? m_base->dup (scope) : nullptr,
                                    m_limit ? m_limit->dup (scope) : nullptr,
                                    m_increment ? m_increment->dup (scope) : nullptr,
                                    line (), column ());
 
-    new_ce->copy_base (*new_ce);
+    new_ce->copy_base (*this);
 
     return new_ce;
   }
 }
diff --git a/libinterp/parse-tree/pt-funcall.cc b/libinterp/parse-tree/pt-funcall.cc
--- a/libinterp/parse-tree/pt-funcall.cc
+++ b/libinterp/parse-tree/pt-funcall.cc
@@ -68,13 +68,13 @@ namespace octave
   }
 
   tree_funcall *
   tree_funcall::dup (symbol_scope&) const
   {
     tree_funcall *new_fc
       = new tree_funcall (m_fcn, m_args, line (), column ());
 
-    new_fc->copy_base (*new_fc);
+    new_fc->copy_base (*this);
 
     return new_fc;
   }
 }
