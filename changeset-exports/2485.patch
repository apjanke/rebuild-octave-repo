# HG changeset patch
# User jwe
# Date 847422940 0
#      Fri Nov 08 03:15:40 1996 +0000
# Node ID eac91893f3fc57fe9ef9df9ea45ed7a3db550bc7
# Parent  ccaffe93c32f45783268aec9ba44a74254b5ff02
[project @ 1996-11-08 03:14:36 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,10 +1,12 @@
 Thu Nov  7 12:43:36 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* octMakefile.in (bin-dist-tar): Delete references to octtopnm.
+
 	* configure.in (RLD_FLAG): Define if x86-linux.
 
 	* Version 1.91.
 
 Wed Nov  6 16:26:39 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* configure.in: Add checks for group stuff.
 
diff --git a/doc/interpreter/special.texi b/doc/interpreter/special.texi
--- a/doc/interpreter/special.texi
+++ b/doc/interpreter/special.texi
@@ -192,17 +192,25 @@ than @var{limit}, the elements are store
 number of points is not specified, a value of 100 is used.
 
 The @code{linspace} function always returns a row vector, regardless of
 the value of @code{prefer_column_vectors}.
 @end deftypefn
 
 @deftypefn {Function File} {} logspace (@var{base}, @var{limit}, @var{n})
 Similar to @code{linspace} except that the values are logarithmically
-spaced.
+spaced from
+@iftex
+@tex
+$10^{base}$ to $10^{limit}$.
+@end tex
+@end iftex
+@ifinfo
+10^base to 10^limit.
+@end ifinfo
 
 If @var{limit} is equal to
 @iftex
 @tex
 $\pi$,
 @end tex
 @end iftex
 @ifinfo
diff --git a/octMakefile.in b/octMakefile.in
--- a/octMakefile.in
+++ b/octMakefile.in
@@ -185,18 +185,16 @@ links-for-bin-dist: dist-info-files
 	ln $(BINDISTFILES) `cat .fname`
 	for dir in $(BINDISTSUBDIRS); do mkdir `cat .fname`/$$dir; cd $$dir; $(MAKE) dist; cd ..; done
 .PHONY: links-for-dist
 
 bin-dist-tar: links-for-bin-dist
 	-strip src/octave
 	echo octave-$(version) > .fname
 	ln src/octave `cat .fname`/octave
-	-strip scripts/image/octtopnm
-	ln scripts/image/octtopnm `cat .fname`/octtopnm
 	tar chf `cat .fname`.tar `cat .fname`
 	rm -rf `cat .fname`
 .PHONY: bin-dist-tar
 
 clean-bin-dist-tar: bin-dist-tar
 	$(MAKE) clean-tar
 .PHONY: clean-bin-dist-tar
 
diff --git a/scripts/general/logspace.m b/scripts/general/logspace.m
--- a/scripts/general/logspace.m
+++ b/scripts/general/logspace.m
@@ -15,17 +15,17 @@
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ## 02111-1307, USA.
 
 ## usage: logspace (x1, x2, n)
 ##
 ## Return a vector of n logarithmically equally spaced points between
-## x1 and x2 inclusive.
+## 10^x1 and 10^x2 inclusive.
 ##
 ## If the final argument is omitted, n = 50 is assumed.
 ##
 ## All three arguments must be scalars.
 ##
 ## Note that if if x2 is pi, the points are between 10^x1 and pi, NOT
 ## 10^x1 and 10^pi.
 ##
diff --git a/scripts/image/Makefile.in b/scripts/image/Makefile.in
--- a/scripts/image/Makefile.in
+++ b/scripts/image/Makefile.in
@@ -15,60 +15,54 @@ top_srcdir = @top_srcdir@
 VPATH = @srcdir@
 
 include $(TOPDIR)/Makeconf
 
 INSTALL = @INSTALL@
 INSTALL_PROGRAM = @INSTALL_PROGRAM@
 INSTALL_DATA = @INSTALL_DATA@
 
-SOURCES = *.m octtopnm.c
+SOURCES = *.m
 IMAGES = *.img
 
 DISTFILES = Makefile.in $(SOURCES) $(IMAGES)
 
 FCN_FILES = $(wildcard $(srcdir)/*.m)
 FCN_FILES_NO_DIR = $(notdir $(FCN_FILES))
 
 IMAGE_FILES = $(wildcard $(srcdir)/*.img)
 IMAGE_FILES_NO_DIR = $(notdir $(IMAGE_FILES))
 
 all:
 .PHONY: all
 
-octtopnm: octtopnm.o
-	$(CC) $(CPPFLAGS) $(CFLAGS) $(LDFLAGS) octtopnm.o -o octtopnm
-
 install:
 	$(top_srcdir)/mkinstalldirs $(fcnfiledir)/$(script_sub_dir)
 	for f in $(FCN_FILES_NO_DIR) ; do \
 	  rm -f $(fcnfiledir)/$(script_sub_dir)/$$f ; \
 	  $(INSTALL_DATA) $(srcdir)/$$f $(fcnfiledir)/$(script_sub_dir)/$$f ; \
 	done
 	$(top_srcdir)/mkinstalldirs $(imagedir)
 	for f in $(IMAGE_FILES_NO_DIR) ; do \
 	  rm -f $(imagedir)/$$f ; \
 	  $(INSTALL_DATA) $(srcdir)/$$f $(imagedir)/$$f ; \
 	done
 	$(top_srcdir)/mkinstalldirs $(archlibdir)
-#	$(INSTALL_PROGRAM) octtopnm $(archlibdir)/octtopnm
 .PHONY: install
 
 uninstall:
 	for f in $(FCN_FILES_NO_DIR) ; \
 	  do rm -f $(fcnfiledir)/$(script_sub_dir)/$$f ; \
 	done
 	for f in $(IMAGE_FILES_NO_DIR) ; \
 	  do rm -f $(imagedir)/$$f ; \
 	done
-#	rm -f $(archlibdir)/octtopnm
 .PHONY: uninstall
 
 clean:
-	rm -f octtopnm.o octtopnm
 .PHONY: clean
 
 tags: $(SOURCES)
 	ctags $(SOURCES)
 
 TAGS: $(SOURCES)
 	etags $(SOURCES)
 
diff --git a/scripts/image/saveimage.m b/scripts/image/saveimage.m
--- a/scripts/image/saveimage.m
+++ b/scripts/image/saveimage.m
@@ -254,17 +254,17 @@ function saveimage (filename, img, img_f
     llx = (pagewid - scols) / 2;
     lly = (pagehgt - srows) / 2;
     urx = llx + fix (scols + 0.5);
     ury = lly + fix (srows + 0.5);
 
     fid = fopen (filename, "w");
 
     fprintf (fid, "%%!PS-Adobe-2.0 EPSF-2.0\n");
-    fprintf (fid, "%%%%Creator: pnmtops\n");
+    fprintf (fid, "%%%%Creator: Octave %s (saveimage.m)\n", OCTAVE_VERSION);
     fprintf (fid, "%%%%Title: %s\n", filename);
     fprintf (fid, "%%%%Pages: 1\n");
     fprintf (fid, "%%%%BoundingBox: %d %d %d %d\n",
              fix (llx), fix (lly), fix (urx), fix (ury));
     fprintf (fid, "%%%%EndComments\n" );
     fprintf (fid, "/readstring {\n");
     fprintf (fid, "  currentfile exch readhexstring pop\n");
     fprintf (fid, "} bind def\n");
@@ -277,29 +277,23 @@ function saveimage (filename, img, img_f
     fprintf (fid, "%g %g scale\n", scols, srows);
     fprintf (fid, "%d %d %d\n", img_nr, img_nc, bps);
     fprintf (fid, "[ %d 0 0 -%d 0 %d ]\n", img_nr, img_nc, img_nc);
     fprintf (fid, "{ picstr readstring }\n" );
     fprintf (fid, "image\n" );
 
     img = map(img);
 
-    ## XXX FIXME XXX -- this would be much faster if fprintf knew about
-    ## vector arguments.
+    fmt = "%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x\n";
+    fprintf (fid, fmt, img);
 
-    count = 0;
-    for i = 1:img_sz
-      fprintf (fid, "%x", img (i));
-      if (++count == 30)
-	count = 0;
-	fprintf (fid, "\n");
-      endif
-    endfor
+    if (rem (img_sz, 30) != 0)
+      fprintf (fid, "\n" );
+    endif
 
-    fprintf (fid, "\n" );
     fprintf (fid, "grestore\n" );
     fprintf (fid, "showpage\n" );
     fprintf (fid, "%%%%Trailer\n" );
     fclose (fid);
 
   else
     error ("saveimage: what happened to the image type?");
   endif
