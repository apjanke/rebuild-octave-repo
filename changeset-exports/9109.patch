# HG changeset patch
# User David Bateman <dbateman@free.fr>
# Date 1239458716 -7200
#      Sat Apr 11 16:05:16 2009 +0200
# Node ID 978c863bc8e5d983cfad9329742a8b941b4879fb
# Parent  b2459d21a2070fc3af1e9f2e77e51b9b9b2ef6e9
 Treat possible trailing singleton for creation of cell array from column structure vector

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2008-04-11  David Bateman  <dbateman@free.fr>
+
+	* ov-cell.cc (Fstruct2cell): Treat possible trailing singleton for
+	creation of cell array from column structure vector.
+
 2009-04-09  Jaroslav Hajek  <highegg@gmail.com>
 
 	* ov-cell.cc (octave_cell::subsasgn): Fix reference counting
 	optimization.
 
 2009-04-08  John W. Eaton  <jwe@octave.org>
 
 	* load-path.cc (rehash_internal): New function.
diff --git a/src/ov-cell.cc b/src/ov-cell.cc
--- a/src/ov-cell.cc
+++ b/src/ov-cell.cc
@@ -1353,19 +1353,23 @@ cell array will have a dimension vector 
 	  dim_vector m_dv = m.dims ();
 
 	  string_vector keys = m.keys ();
 
 	  octave_idx_type num_fields = keys.length ();
 
 	  // The resulting dim_vector should have dimensions:
 	  // [numel(fields) size(struct)]
+	  // except if the struct is a column vector.
 
 	  dim_vector result_dv;
-	  result_dv.resize (m_dv.length () + 1); // Add 1 for the fields.
+	  if (m_dv (m_dv.length () - 1) == 1)
+	      result_dv.resize (m_dv.length ());
+	  else
+	      result_dv.resize (m_dv.length () + 1); // Add 1 for the fields.
 
 	  result_dv(0) = num_fields;
 
 	  for (int i = 1; i < result_dv.length (); i++)
 	    result_dv(i) = m_dv(i-1);
 
 	  Cell c (result_dv);
 
