# HG changeset patch
# User jwe
# Date 1139584052 0
#      Fri Feb 10 15:07:32 2006 +0000
# Node ID 4cc6aeb35f932bc580a0fb0fb5f65557acfeeac6
# Parent  d424f4c1e1f1747f57539ba7cf91381de7c99aac
[project @ 2006-02-10 15:07:32 by jwe]

diff --git a/liboctave/mx-inlines.cc b/liboctave/mx-inlines.cc
--- a/liboctave/mx-inlines.cc
+++ b/liboctave/mx-inlines.cc
@@ -524,18 +524,18 @@ OP_DUP_FCN (conj, mx_inline_conj_dup, Co
       dv.resize (nd, 1); \
     } \
  \
   /* R = op (A, DIM) \
  \
      The strategy here is to access the elements of A along the \
      dimension  specified by DIM.  This means that we loop over each \
      element of R and adjust the index into A as needed.  Store the \
-     cummulative product of all dimensions of A in CP.  The last \
-     element of CP is the total number of elements of A.  */ \
+     cummulative product of all dimensions of A in CP_SZ.  The last \
+     element of CP_SZ is the total number of elements of A.  */ \
  \
   Array<octave_idx_type> cp_sz (nd+1, 1); \
   for (int i = 1; i <= nd; i++) \
     cp_sz(i) = cp_sz(i-1)*dv(i-1); \
  \
   octave_idx_type reset_at = cp_sz(dim); \
   octave_idx_type base_incr = cp_sz(dim+1); \
   octave_idx_type incr = cp_sz(dim); \
