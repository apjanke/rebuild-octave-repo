# HG changeset patch
# User jwe
# Date 832008149 0
#      Mon May 13 17:22:29 1996 +0000
# Node ID 45052dc60643e002921ce6a32b851a98f1ca8386
# Parent  90d5f2aabd4619b52d7a7cffea1c36cd000fbe7e
[project @ 1996-05-13 17:21:52 by jwe]

diff --git a/src/pt-const.h b/src/pt-const.h
--- a/src/pt-const.h
+++ b/src/pt-const.h
@@ -686,15 +686,19 @@ private:
 	return rep->make_numeric (frc_str_conv);
     }
 
   bool print_as_scalar (void) { return rep->print_as_scalar (); }
 
   bool print_as_structure (void) { return rep->print_as_structure (); }
 };
 
+extern int Vresize_on_range_error;
+
+void symbols_of_pt_const (void);
+
 #endif
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
diff --git a/src/pt-fvc.cc b/src/pt-fvc.cc
--- a/src/pt-fvc.cc
+++ b/src/pt-fvc.cc
@@ -178,17 +178,17 @@ tree_identifier::assign (octave_value& r
 	{
 	  tree_fvc *tmp = sym->def ();
 	  retval = tmp->assign (rhs, args);
 	}
       else
 	{
 	  assert (! sym->is_defined ());
 
-	  if (! user_pref.resize_on_range_error)
+	  if (! Vresize_on_range_error)
 	    {
 	      ::error ("indexed assignment to previously undefined variables");
 	      ::error ("is only possible when resize_on_range_error is true");
 	    }
 	  else
 	    {
 	      octave_value *tmp = new octave_value ();
 	      retval = tmp->assign (rhs, args);
@@ -255,17 +255,17 @@ tree_identifier::assign (SLList<string> 
 	    panic_impossible ();
 
 	  retval = tmp->assign_map_element (list, rhs, args);
 	}
       else
 	{
 	  assert (! sym->is_defined ());
 
-	  if (! user_pref.resize_on_range_error)
+	  if (! Vresize_on_range_error)
 	    {
 	      ::error ("indexed assignment to previously undefined variables");
 	      ::error ("is only possible when resize_on_range_error is true");
 	    }
 	  else
 	    {
 	      octave_value *tmp = new octave_value ();
 
