# HG changeset patch
# User jwe
# Date 1160411736 0
#      Mon Oct 09 16:35:36 2006 +0000
# Node ID 8467683311f8f2ea96fc75b0f24bb8f788e7bb33
# Parent  2bcb2fa24bbf30280e77ab6431681f371ea11026
[project @ 2006-10-09 16:35:36 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2006-10-09  Bill Denney  <denney@seas.upenn.edu>
+
+	* miscellaneous/untar.m: Check more rigorously to see if the tar
+	file exists.
+
 2006-10-04  John W. Eaton  <jwe@octave.org>
 
 	* pkg/pkg.m: Use fullfile to concatenate directory and file names.
 
 2006-10-04  Søren Hauberg  <soren@hauberg.org>
 
 	* pkg/pkg.m: Update docs.  Handle prefix option.
 	Handle dependencies for load option.
diff --git a/scripts/miscellaneous/untar.m b/scripts/miscellaneous/untar.m
--- a/scripts/miscellaneous/untar.m
+++ b/scripts/miscellaneous/untar.m
@@ -19,63 +19,65 @@
 ## Unpack the TAR archive @var{tarfile} to the directory @var{dir}.
 ## If @var{dir} is not specified, it defaults to the current directory.
 ## @seealso{tar, gzip, gunzip, zip, unzip}
 ## @end deftypefn
 
 ## Author: Søren Hauberg <hauberg@gmail.com>
 ## Adapted-By: jwe
 
-function files = untar (tarfile, dir)
+function files = untar (tarfile, directory)
 
   if (nargin == 1 || nargin == 2)
 
     if (nargin == 1)
-      dir = ".";
+      directory = ".";
     endif
 
-    if (ischar (tarfile) && ischar (dir))
+    ## The file must exist (and be a file) and the directory must be a
+    ## string.
+    if (exist (tarfile, "file") && ischar (directory))
 
       orig_dir = pwd ();
 
       tarfile = canonicalize_file_name (tarfile);
 
-      s = stat (dir);
+      s = stat (directory);
       if (isempty (s))
-	[status, msg] = mkdir (dir);
+	[status, msg] = mkdir (directory);
 	if (! status)
-	  error ("untar: mkdir failed to create %s: %s", dir, msg);
+	  error ("untar: mkdir failed to create %s: %s", directory, msg);
 	endif
       elseif (! S_ISDIR (s.mode))
-	error ("untar: %s: not a directory", dir);
+	error ("untar: %s: not a directory", directory);
       endif
 
       unwind_protect
-	chdir (dir);
+	chdir (directory);
 	[status, output] = system (sprintf ("tar -x -v -f %s", tarfile));
       unwind_protect_cleanup
 	chdir (orig_dir);
       end_unwind_protect
 
       if (status == 0)
 	if (nargout > 0)
 	  fs = filesep ();
-	  if (dir(end) != fs)
-	    dir = strcat (dir, fs);
+	  if (directory(end) != fs)
+	    directory = strcat (directory, fs);
 	  endif
 	  ## Sadly not reliable if a filename contains a newline
 	  ## character!
 	  if (output(end) == "\n")
 	    output(end) = [];
 	  endif
 	  files = cellstr (split (output, "\n"));
-	  if (! strcmp (dir, "."))
+	  if (! strcmp (directory, "."))
 	    nf = length (files);
 	    for i = 1:nf
-	      files{i} = strcat (dir, files{i});
+	      files{i} = strcat (directory, files{i});
 	    endfor
 	  endif
 	  files = files';
 	endif
       else
 	error ("tar: tar exited with status = %s", status);
       endif
 
