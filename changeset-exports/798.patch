# HG changeset patch
# User jwe
# Date 782024320 0
#      Thu Oct 13 04:58:40 1994 +0000
# Node ID 0acec886a912d7e0537f95fd9042c45025832766
# Parent  21d1e55ee02c4b6a96d95dfb89b69f98ce722042
[project @ 1994-10-13 04:57:48 by jwe]

diff --git a/Makeconf.in b/Makeconf.in
--- a/Makeconf.in
+++ b/Makeconf.in
@@ -29,16 +29,17 @@ OCTAVE_LITE = @lite_kernel@
 
 # Fortran to C translator and associated flags.
 
 F2C = @F2C@
 F2CFLAGS = @F2CFLAGS@
 
 # Fortran compiler flags.
 
+F77 = @F77@
 FFLAGS = @FFLAGS@
 
 # cc and associated flags.
 
 # Clean up INCFLAGS a bit if we are not compiling in a separate
 # directory.
 ifeq ($(srcdir),.)
   TMP_IF_1 = -I. -I../src
@@ -58,25 +59,28 @@ LIBFLAGS = -L$(TOPDIR)
 DEFS = @DEFS@
 UGLY_DEFS = @UGLY_DEFS@
 
 CC = @CC@
 CFLAGS = @CFLAGS@
 GCC_IEEE_FP_FLAG = @GCC_IEEE_FP_FLAG@
 ALL_CFLAGS = $(INCFLAGS) $(DEFS) $(GCC_IEEE_FP_FLAG) $(CFLAGS)
 UGLY_ALL_CFLAGS = $(INCFLAGS) $(UGLY_DEFS) $(GCC_IEEE_FP_FLAG) $(CFLAGS)
+BUG_CFLAGS = $(DEFS) $(GCC_IEEE_FP_FLAG) $(CFLAGS)
+
 
 CXX = @CXX@
 CXXCPP = @CXXCPP@
 CXXFLAGS = @CXXFLAGS@
 NO_IMPLICIT_TEMPLATES = @NO_IMPLICIT_TEMPLATES@
 ALL_CXXFLAGS = $(INCFLAGS) $(DEFS) $(NO_IMPLICIT_TEMPLATES) \
 	$(GCC_IEEE_FP_FLAG) $(CXXFLAGS)
 UGLY_ALL_CXXFLAGS = $(INCFLAGS) $(UGLY_DEFS) $(NO_IMPLICIT_TEMPLATES) \
 	$(GCC_IEEE_FP_FLAG) $(CXXFLAGS)
+BUG_CXXFLAGS = $(DEFS) $(NO_IMPLICIT_TEMPLATES) $(GCC_IEEE_FP_FLAG) $(CXXFLAGS)
 
 LDFLAGS = @LDFLAGS@
 LD_STATIC_FLAG = @LD_STATIC_FLAG@
 ALL_LDFLAGS = $(LIBFLAGS) $(GCC_IEEE_FP_FLAG) $(LD_STATIC_FLAG) $(LDFLAGS)
 
 FLIBS = @FLIBS@
 FLIB_LIST = @FLIB_LIST@
 FLIB_PATH = @FLIB_PATH@
diff --git a/octMakefile.in b/octMakefile.in
--- a/octMakefile.in
+++ b/octMakefile.in
@@ -13,18 +13,18 @@ top_srcdir = @top_srcdir@
 VPATH = @srcdir@
 
 include $(TOPDIR)/Makeconf
 
 DISTFILES = BUGS COPYING INSTALL INSTALL.OCTAVE Makefile.in \
 	Makeconf.in NEWS PROJECTS README README.NLP SENDING-PATCHES \
 	THANKS f2c-compat.sh flibs.sh cxxlibs.sh configure configure.in \
 	config.guess config.sub float-type.c move-if-change octave.sh \
-	octave-mode.el install.sh doinstall.sh mkpath.c config.h.in \
-	acconfig.h MAKEINFO.PATCH ChangeLog ChangeLog.[0-9]
+	octave-bug.in octave-mode.el install.sh doinstall.sh mkpath.c \
+	config.h.in acconfig.h MAKEINFO.PATCH ChangeLog ChangeLog.[0-9]
 
 # Complete directory trees to distribute.
 DISTDIRS = bsd-math kpathsea
 
 # Subdirectories to run make in for the primary targets.
 SUBDIRS = libcruft liboctave @DLD_DIR@ info readline kpathsea src doc scripts 
 
 # Subdirectories to run `make dist' in
@@ -32,27 +32,40 @@ DISTSUBDIRS = $(SUBDIRS) dld test
 
 BINDISTFILES = COPYING ChangeLog NEWS README THANKS INSTALL.OCTAVE \
 	BUGS PROJECTS octave.sh octave-mode.el doinstall.sh \
 	mkpath
 
 # Subdirectories to run `make dist' in
 BINDISTSUBDIRS = doc scripts
 
-DIRS_TO_MAKE = $(fcnfiledir) $(octfiledir) $(archlibdir) \
+DIRS_TO_MAKE = $(bindir) $(fcnfiledir) $(octfiledir) $(archlibdir) \
   `echo $(localfcnfilepath) | awk -F: '{for (i=1; i<=NF; i++) print $i}'` \
   `echo $(localoctfilepath) | awk -F: '{for (i=1; i<=NF; i++) print $i}'`
 
-all: mkpath
+all: mkpath octave-bug
 	for dir in $(SUBDIRS); do echo making $@ in $$dir; cd $$dir; $(MAKE) $@; cd ..; done
 .PHONY: all
 
 mkpath:
 	$(CC) $(ALL_CFLAGS) $(srcdir)/mkpath.c -o mkpath
 
+octave-bug: octave-bug.in
+	@(sed < $< > $@.tmp \
+	  -e "s;%VERSION%;${version};" \
+	  -e "s;%TARGET_HOST_TYPE%;${target_host_type};" \
+	  -e "s;%F77%;${F77};" \
+	  -e "s;%FFLAGS%;${FFLAGS};" \
+	  -e "s;%CC%;${CC};" \
+	  -e "s;%CFLAGS%;${BUG_CFLAGS};" \
+	  -e "s;%CXX%;${CXX};" \
+	  -e "s;%CXXFLAGS%;${BUG_CXXFLAGS};" \
+	  -e "s;%DEFS%;${UGLY_DEFS};")
+	@mv $@.tmp $@
+
 libcruft:
 	cd libcruft ; $(MAKE) all
 .PHONY: libcruft
 
 liboctave:
 	cd liboctave ; $(MAKE) all
 .PHONY: liboctave
 
@@ -99,16 +112,17 @@ INSTALL.info:
 BUGS.info:
 	cd doc ; $(MAKE) ../BUGS
 .PHONY: BUGS.info
 
 install:
 	for dir in $(DIRS_TO_MAKE) ; do \
 	  if test -d $$dir ; then true ; else ./mkpath $$dir ; fi ; \
 	done
+	install -m 755 octave-bug $(bindir)/octave-bug
 	for dir in $(SUBDIRS); do echo making $@ in $$dir; cd $$dir; $(MAKE) $@; cd ..; done
 .PHONY: install
 
 uninstall:
 	for dir in $(SUBDIRS); do echo making $@ in $$dir; cd $$dir; $(MAKE) $@; cd ..; done
 .PHONY: uninstall
 
 tags:
diff --git a/src/Makefile.in b/src/Makefile.in
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -203,16 +203,17 @@ dist: parse.cc lex.cc
 
 defaults.h: defaults.h.in ../Makeconf Makefile
 	@echo "making defaults.h from defaults.h.in"
 	@(sed < $< > $@.tmp \
 	  -e "s;%DEFAULT_PAGER%;\"${DEFAULT_PAGER}\";" \
 	  -e "s;%OCTAVE_PREFIX%;\"${prefix}\";" \
 	  -e "s;%OCTAVE_EXEC_PREFIX%;\"${exec_prefix}\";" \
 	  -e "s;%OCTAVE_DATADIR%;\"${datadir}\";" \
+	  -e "s;%OCTAVE_BINDIR%;\"${bindir}\";" \
 	  -e "s;%OCTAVE_LIBDIR%;\"${libdir}\";" \
 	  -e "s;%OCTAVE_INFODIR%;\"${infodir}\";" \
 	  -e "s;%OCTAVE_FCNFILEDIR%;\"${fcnfiledir}\";" \
 	  -e "s;%OCTAVE_LOCALFCNFILEPATH%;\"${localfcnfilepath}\";" \
 	  -e "s;%OCTAVE_ARCHLIBDIR%;\"${archlibdir}\";" \
 	  -e "s;%OCTAVE_OCTFILEDIR%;\"${octfiledir}\";" \
 	  -e "s;%OCTAVE_LOCALOCTFILEPATH%;\"${localoctfilepath}\";" \
 	  -e "s;%OCTAVE_FCNFILEPATH%;\"${fcnfilepath}\";" \
diff --git a/src/defaults.h.in b/src/defaults.h.in
--- a/src/defaults.h.in
+++ b/src/defaults.h.in
@@ -39,16 +39,20 @@ Software Foundation, 675 Mass Ave, Cambr
 #ifndef OCTAVE_DATADIR
 #define OCTAVE_DATADIR %OCTAVE_DATADIR%
 #endif
 
 #ifndef OCTAVE_LIBDIR
 #define OCTAVE_LIBDIR %OCTAVE_LIBDIR%
 #endif
 
+#ifndef OCTAVE_BINDIR
+#define OCTAVE_BINDIR %OCTAVE_BINDIR%
+#endif
+
 #ifndef OCTAVE_INFODIR
 #define OCTAVE_INFODIR %OCTAVE_INFODIR%
 #endif
 
 #ifndef OCTAVE_FCNFILEDIR
 #define OCTAVE_FCNFILEDIR %OCTAVE_FCNFILEDIR%
 #endif
 
diff --git a/src/octave.cc b/src/octave.cc
--- a/src/octave.cc
+++ b/src/octave.cc
@@ -208,26 +208,35 @@ initialize_globals (char *name)
   char *hd = getenv ("HOME");
   if (hd)
     home_directory = strsave (hd);
   else
     home_directory = strsave ("I have no home!");
 
   char *shell_path = getenv ("PATH");
   char *arch_dir = octave_arch_lib_dir ();
-  char *tmp = strconcat (shell_path, ":");
+  char *bin_dir = octave_bin_dir ();
 
-  shell_path = shell_path ? strconcat (tmp, arch_dir)
-    : strsave (arch_dir);
+  int len = strlen (arch_dir) + strlen (bin_dir) + 7;
+
+  char *putenv_cmd = 0;
 
-  delete [] tmp;
+  if (shell_path)
+    {
+      len += strlen (shell_path) + 1;
+      putenv_cmd = new char [len];
+      sprintf (putenv_cmd, "PATH=%s:%s:%s", shell_path, arch_dir, bin_dir);
+    }
+  else
+    {
+      putenv_cmd = new char [len];
+      sprintf (putenv_cmd, "PATH=%s:%s", arch_dir, bin_dir);
+    }
 
-  char *putenv_command = strconcat ("PATH=", shell_path);
-
-  putenv (putenv_command);
+  putenv (putenv_cmd);
 
   raw_prog_name = strsave (name);
   prog_name = strsave ("octave");
 
   load_path = default_path ();
 
   info_file = default_info_file ();
 
diff --git a/src/variables.cc b/src/variables.cc
--- a/src/variables.cc
+++ b/src/variables.cc
@@ -343,16 +343,23 @@ octave_info_dir (void)
 
 char *
 octave_arch_lib_dir (void)
 {
   static char *retval = subst_octave_home (OCTAVE_ARCHLIBDIR);
   return retval;
 }
 
+char *
+octave_bin_dir (void)
+{
+  static char *retval = subst_octave_home (OCTAVE_BINDIR);
+  return retval;
+}
+
 static char *
 default_pager (void)
 {
   static char *pager_binary = 0;
   delete [] pager_binary;
   char *pgr = getenv ("PAGER");
   if (pgr)
     pager_binary = strsave (pgr);
diff --git a/src/variables.h b/src/variables.h
--- a/src/variables.h
+++ b/src/variables.h
@@ -108,16 +108,17 @@ extern void bind_builtin_variable (const
 				   int protect = 0, int eternal = 0,
 				   sv_Function f = (sv_Function) 0,
 				   const char *help = 0);
 
 extern void install_builtin_variables (void);
 
 extern char *octave_lib_dir (void);
 extern char *octave_arch_lib_dir (void);
+extern char *octave_bin_dir (void);
 extern char *default_path (void);
 extern char *default_info_file (void);
 extern char *default_editor (void);
 extern char *get_site_defaults (void);
 
 // Symbol table for symbols at the top level.
 extern symbol_table *top_level_sym_tab;
 
