# HG changeset patch
# User Ben Abbott <bpabbott@mac.com>
# Date 1348276413 14400
#      Fri Sep 21 21:13:33 2012 -0400
# Node ID e1f59fd5775672774ca5991c676245aa02ea4a6b
# Parent  283cada76dd6fc96541c209ecfa8b11466b8b892
repmat() should interpret empties as implying unit.
Bug # 37390.

* scripts/general/repmat.m: If the inputs specifying the number to
replications is empty, interpret the empty as unity. Add tests.

diff --git a/scripts/general/repmat.m b/scripts/general/repmat.m
--- a/scripts/general/repmat.m
+++ b/scripts/general/repmat.m
@@ -35,21 +35,30 @@
 
 function x = repmat (A, m, n)
 
   if (nargin < 2 || nargin > 3)
     print_usage ();
   endif
 
   if (nargin == 3)
-    if (! (isscalar (m) && isscalar (n)))
+    if (! (numel (m) < 2 && numel (n) < 2))
       error ("repmat: with 3 arguments M and N must be scalar");
     endif
+    if (isempty (m))
+      m = 1;
+    endif
+    if (isempty (n))
+      n = 1;
+    endif
     idx = [m, n];
   else
+    if (isempty (m))
+      m = 1;
+    endif
     if (isscalar (m))
       idx = [m, m];
       n = m;
     elseif (isvector (m) && length (m) > 1)
       ## Ensure that we have a row vector
       idx = m(:).';
     else
       error ("repmat: invalid dimensional argument");
@@ -96,20 +105,21 @@ function x = repmat (A, m, n)
     # add singleton dims
     aaidx(2,:) = 1;
     A = reshape (A, aaidx(:));
     x = reshape (A (cidx{:}), idx .* aidx);
   endif
 
 endfunction
 
-
 # Test various methods of providing size parameters
 %!shared x
 %! x = [1 2;3 4];
+%!assert (repmat (x, 1, []), repmat (x, 1))
+%!assert (repmat (x, [], 3), repmat (x, [1, 3]))
 %!assert (repmat (x, [1 1]), repmat (x, 1))
 %!assert (repmat (x, [3 3]), repmat (x, 3))
 %!assert (repmat (x, [1 1]), repmat (x, 1, 1))
 %!assert (repmat (x, [1 3]), repmat (x, 1, 3))
 %!assert (repmat (x, [3 1]), repmat (x, 3, 1))
 %!assert (repmat (x, [3 3]), repmat (x, 3, 3))
 
 # Tests for numel==1 case:
