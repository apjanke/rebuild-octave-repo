# HG changeset patch
# User jwe
# Date 823161065 0
#      Thu Feb 01 07:51:05 1996 +0000
# Node ID 2e77f6543ad6939e3bc1829a54774f4df4d29408
# Parent  c6fdd23c0e79e9699223a416956eb27ae5f01367
[project @ 1996-02-01 07:50:18 by jwe]

diff --git a/src/input.h b/src/input.h
--- a/src/input.h
+++ b/src/input.h
@@ -51,19 +51,16 @@ extern string curr_fcn_file_name;
 extern string curr_fcn_file_full_name;
 
 // Nonzero means we're parsing a script file.
 extern int reading_script_file;
 
 // If we are reading from an M-file, this is it.
 extern FILE *ff_instream;
 
-// Nonzero means we are using readline.
-extern int using_readline;
-
 // Nonzero means this is an interactive shell.
 extern int interactive;
 
 // Nonzero means the user forced this shell to be interactive (-i).
 extern int forced_interactive;
 
 // Should we issue a prompt?
 extern int promptflag;
diff --git a/src/octave.cc b/src/octave.cc
--- a/src/octave.cc
+++ b/src/octave.cc
@@ -106,40 +106,42 @@ static int inhibit_startup_message = 0;
 // Nonzero means we turn on compatibility options.
 // (--traditional)
 static int traditional = 0;
 
 // Usage message
 static const char *usage_string = 
   "octave [-?Vdfhiqvx] [--debug] [--echo-commands] [--exec-path path]\n\
        [--help] [--ignore-init-file] [--info-file file] [--info-program prog]\n\
-       [--interactive] [-p path] [--path path] [--silent] [--traditional]\n\
-       [--verbose] [--version] [file]";
+       [--interactive] [--no-line-editing] [-p path] [--path path] [--silent]\n\
+       [--traditional] [--verbose] [--version] [file]";
 
 // This is here so that it's more likely that the usage message and
 // the real set of options will agree.  Note: the `+' must come first
 // to prevent getopt from permuting arguments!
 static const char *short_opts = "+?Vdfhip:qvx";
 
 // Long options.  See the comments in getopt.h for the meanings of the
 // fields in this structure.
 #define EXEC_PATH_OPTION 1
 #define INFO_FILE_OPTION 2
 #define INFO_PROG_OPTION 3
-#define TRADITIONAL_OPTION 4
+#define NO_LINE_EDITING_OPTION 4
+#define TRADITIONAL_OPTION 5
 long_options long_opts[] =
   {
     { "debug",            no_argument,       0, 'd' },
     { "echo-commands",    no_argument,       0, 'x' },
     { "exec-path",        required_argument, 0, EXEC_PATH_OPTION },
     { "help",             no_argument,       0, 'h' },
-    { "interactive",      no_argument,       0, 'i' },
+    { "ignore-init-file", no_argument,       0, 'f' },
     { "info-file",        required_argument, 0, INFO_FILE_OPTION },
     { "info-program",     required_argument, 0, INFO_PROG_OPTION },
-    { "ignore-init-file", no_argument,       0, 'f' },
+    { "interactive",      no_argument,       0, 'i' },
+    { "no-line-editing",  no_argument,       0, NO_LINE_EDITING_OPTION },
     { "norc",             no_argument,       0, 'f' },
     { "path",             required_argument, 0, 'p' },
     { "quiet",            no_argument,       0, 'q' },
     { "silent",           no_argument,       0, 'q' },
     { "traditional",      no_argument,       0, TRADITIONAL_OPTION },
     { "verbose",          no_argument,       0, 'V' },
     { "version",          no_argument,       0, 'v' },
     { 0,                  0,                 0, 0 }
@@ -315,16 +317,17 @@ Options:\n\
   -d, --debug             Enter parser debugging mode.\n\
   -x, --echo-commands     Echo commands as they are executed.\n\
   --exec-path PATH        Set path for executing subprograms.\n\
   -h, -?, --help          Print short help message and exit.\n\
   -f, --ignore-init-file  Don't read any initialization files.\n\
   --info-file FILE        Use top-level info file FILE.\n\
   --info-program PROGRAM  Use PROGRAM for reading info files.\n\
   -i, --interactive       Force interactive behavior.\n\
+  --no-line-editing       Don't use readline for command-line editing\n\
   -p PATH, --path PATH    Set initial LOADPATH to PATH.\n\
   -q, --silent            Don't print message at startup.\n\
   --traditional           Set compatibility variables.\n\
   -V, --verbose           Enable verbose output in some cases.\n\
   -v, --version           Print version number and exit.\n\
 \n\
   FILE                    Execute commands from FILE.\n\
 \n";
@@ -455,16 +458,20 @@ main (int argc, char **argv)
 	    info_file = string (args.optarg ());
 	  break;
 
 	case INFO_PROG_OPTION:
 	  if (args.optarg ())
 	    info_prog = string (args.optarg ());
 	  break;
 
+	case NO_LINE_EDITING_OPTION:
+	  using_readline = 0;
+	  break;
+
 	case TRADITIONAL_OPTION:
 	  traditional = 1;
 	  break;
 
 	default:
 	  usage ();
 	  break;
 	}
