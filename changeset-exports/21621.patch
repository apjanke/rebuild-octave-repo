# HG changeset patch
# User Lachlan Andrew <lachlanbis@gmail.com>
# Date 1460459150 -36000
#      Tue Apr 12 21:05:50 2016 +1000
# Node ID fe0a6de805e4f09160ded882f0ec5c49500c792c
# Parent  f458313c0de47024544a91e2f70dcacdf89e0b82
textscan: Leave file read position correct at exit (bug #47671)

* oct-stream.cc (delimited_stream::refresh_buf): Track movement of data within
the buffer.

* file-io.cc (Ftextscan): New BIST test.

diff --git a/libinterp/corefcn/file-io.cc b/libinterp/corefcn/file-io.cc
--- a/libinterp/corefcn/file-io.cc
+++ b/libinterp/corefcn/file-io.cc
@@ -1867,16 +1867,28 @@ as the name of the function when reporti
 %! fclose (fid);
 %! unlink (f);
 %! assert (A{1}, [1 ; 5], 1e-6);
 %! assert (A{2}, [2 ; 6], 1e-6);
 %! assert (A{3}, [3 ; 7], 1e-6);
 %! assert (A{4}, [4 ; 8], 1e-6);
 %! assert (E);
 
+## Test leaving the file at the correct position on exit
+%!test
+%! f = tempname ();
+%! fid = fopen (f, "w+");
+%! fprintf (fid, "1,2\n3,4\n");
+%! fseek (fid, 0, "bof");
+%! A = textscan (fid, "%s %f", 2, "Delimiter", ",");
+%! E = ftell (fid);
+%! fclose (fid);
+%! unlink (f);
+%! assert (E, 8);
+
 ## Tests reading with empty format; empty fields & incomplete lower row
 %!test
 %! f = tempname ();
 %! fid = fopen (f, "w+");
 %! fprintf (fid, " ,2,,4\n5,6");
 %! fseek (fid, 0, "bof");
 %! A = textscan (fid, "", "delimiter", ",", "EmptyValue", 999, "CollectOutput" , 1);
 %! fclose (fid);
diff --git a/libinterp/corefcn/oct-stream.cc b/libinterp/corefcn/oct-stream.cc
--- a/libinterp/corefcn/oct-stream.cc
+++ b/libinterp/corefcn/oct-stream.cc
@@ -1423,17 +1423,20 @@ delimited_stream::refresh_buf (void)
   if (eob < idx)
     idx = eob;
 
   size_t old_remaining = eob - idx;
 
   octave_quit ();                       // allow ctrl-C
 
   if (old_remaining > 0)
-    memmove (buf, idx, old_remaining);
+    {
+      buf_in_file += (idx - buf);
+      memmove (buf, idx, old_remaining);
+    }
 
   progress_marker -= idx - buf;         // where original idx would have been
   idx = buf;
 
   int gcount;   // chars read
   if (! i_stream.eof ())
     {
       buf_in_file = i_stream.tellg ();   // record for destructor
