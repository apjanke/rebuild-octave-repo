# HG changeset patch
# User jwe
# Date 1190044830 0
#      Mon Sep 17 16:00:30 2007 +0000
# Node ID aee959a21c4bd0e25513a994340dde50f232e51f
# Parent  1758d3d3d2663c8455e1ad146bc2301ef8fd412f
[project @ 2007-09-17 16:00:30 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,12 @@
+2007-09-17  John W. Eaton  <jwe@octave.org>
+
+	* file-io.cc (do_stream_open): Use binary mode by default.
+
 2007-09-14  Shai Ayal  <shaiay@users.sourceforge.net>
 
 	* genprop.awk: Handle "a" modifier.
 
 2007-09-14  Kai Habel  <kai.habel@gmx.de>
 
 	* graphics.h.in (radio_values::contains): New function.
 	(radio_values::validate): Use it.
@@ -1069,17 +1073,17 @@ 2007-03-15  John W. Eaton  <jwe@octave.o
 2007-03-14  John W. Eaton  <jwe@octave.org>
 
 	* graphics.cc: New file.
 	* Makefile.in (DIST_SRC): Add it to the list.
 
 2007-03-13  John W. Eaton  <jwe@octave.org>
 
 	* file-io.cc (do_stream_open): Use binary mode if 't' is not
-	  specified in mode, but don't add 'b' if it is already present.
+	specified in mode, but don't add 'b' if it is already present.
 
 2007-03-09  David Bateman  <dbateman@free.fr>
 
 	* data.cc (do_cat):  Also treat case of all empty matrices.
 
 2007-03-08  John W. Eaton  <jwe@octave.org>
 
 	* mex.cc (mxArray_octave_value::set_dimensions,
diff --git a/src/file-io.cc b/src/file-io.cc
--- a/src/file-io.cc
+++ b/src/file-io.cc
@@ -409,28 +409,28 @@ do_stream_open (const std::string& name,
 		    {
 		      warning_with_id ("Octave:fopen-file-in-path",
 				       "fopen: file found in load path");
 		      fname = tmp;
 		    }
 		}
 	    }
 
-#if defined (HAVE_ZLIB)
 	  std::string tmode = mode;
 
 	  // Use binary mode if 't' is not specified, but don't add
 	  // 'b' if it is already present.
 
 	  size_t bpos = tmode.find ('b');
 	  size_t tpos = tmode.find ('t');
 
 	  if (bpos == NPOS && tpos == NPOS)
 	    tmode += 'b';
 
+#if defined (HAVE_ZLIB)
 	  size_t pos = tmode.find ('z');
 
 	  if (pos != NPOS)
 	    {
 	      tmode.erase (pos, 1);
 
 	      gzFile fptr = ::gzopen (fname.c_str (), tmode.c_str ());
 
@@ -440,17 +440,17 @@ do_stream_open (const std::string& name,
 		{
 		  using namespace std;
 		  retval.error (::strerror (errno));
 		}
 	    }
 	  else
 #endif
 	    {
-	      FILE *fptr = ::fopen (fname.c_str (), mode.c_str ());
+	      FILE *fptr = ::fopen (fname.c_str (), tmode.c_str ());
 
 	      retval = octave_stdiostream::create (fname, fptr, md, flt_fmt);
 
 	      if (! fptr)
 		{
 		  using namespace std;
 		  retval.error (::strerror (errno));
 		}
