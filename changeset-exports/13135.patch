# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1316022633 14400
#      Wed Sep 14 13:50:33 2011 -0400
# Node ID af36cdb552a652231b5f99e3d6ebd053354c5812
# Parent  e255f8c3c2ff7da4dbdfa8e78829cfd1b725b970
char: return empty string if called with no arguments

* strfns.cc (Fchar): return empty string if called with no arguments.
Update tests.

diff --git a/src/strfns.cc b/src/strfns.cc
--- a/src/strfns.cc
+++ b/src/strfns.cc
@@ -75,20 +75,22 @@ char ([97, 98, 99], \"\", @{\"98\", \"99
 @end example\n\
 @seealso{strvcat, cellstr}\n\
 @end deftypefn")
 {
   octave_value retval;
 
   int nargin = args.length ();
 
-  if (nargin == 1)
+  if (nargin == 0)
+    retval = "";
+  else if (nargin == 1)
     retval = args(0).convert_to_str (true, true,
                                      args(0).is_dq_string () ? '"' : '\'');
-  else if (nargin > 1)
+  else
     {
       int n_elts = 0;
 
       int max_len = 0;
 
       std::queue<string_vector> args_as_strings;
 
       for (int i = 0; i < nargin; i++)
@@ -139,24 +141,22 @@ char ([97, 98, 99], \"\", @{\"98\", \"99
                 }
             }
           else
             result[k++] = std::string (max_len, ' ');
         }
 
       retval = octave_value (result, '\'');
     }
-  else
-    print_usage ();
 
   return retval;
 }
 
 /*
-%!error <Invalid call to char> char()
+%!assert (char (), '');
 %!assert (char (100) == "d");
 %!assert (all(char (100,100) == ["d";"d"]));
 %!assert (all(char ({100,100}) == ["d";"d"]));
 %!assert (all(char ([100,100]) == ["dd"]));
 %!assert (all(char ({100,{100}}) == ["d";"d"]));
 %!assert (all(char (100, [], 100) == ["d";" ";"d"]))
 %!assert (all(char ({100, [], 100}) == ["d";" ";"d"]))
 %!assert (all(char ({100,{100, {""}}}) == ["d";"d";" "]))
