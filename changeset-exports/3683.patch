# HG changeset patch
# User jwe
# Date 962137246 0
#      Tue Jun 27 20:20:46 2000 +0000
# Node ID 505f5c35a2c9a5c928e17d208940a6687faf7548
# Parent  19e1ac7359fb6111598b8a8c0909e43b44ceb351
[project @ 2000-06-27 20:19:47 by jwe]

diff --git a/doc/interpreter/io.txi b/doc/interpreter/io.txi
--- a/doc/interpreter/io.txi
+++ b/doc/interpreter/io.txi
@@ -80,16 +80,18 @@ variable (or @samp{ans}) printed along w
 value of a variable without printing its name, use the function
 @code{disp}.
 
 The @code{format} command offers some control over the way Octave prints
 values with @code{disp} and through the normal echoing mechanism.
 
 @DOCSTRING(ans)
 
+@DOCSTRING(fdisp)
+
 @DOCSTRING(disp)
 
 @DOCSTRING(format)
 
 @DOCSTRING(print_answer_id_name)
 
 @node Terminal Input, Simple File I/O, Terminal Output, Basic Input and Output
 @subsection Terminal Input
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,16 @@
+2000-06-27  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* io/fdisp.m, io/disp.m: New files.
+
+2000-06-27  Matthew W. Roberts <matt@lehi.tamu.edu>
+
+	* plot/plot.m: Add examples in doc string.
+
 2000-06-08  Ben Sapp <bsapp@nua.lampf.lanl.gov>
 
 	* control/base/__stepimp__.m: Reset multiplot state when done.
 	Do the right thing even if automatic_replot is not zero.
 	Avoid failure if system has pure imaginary poles.
 
 2000-06-06  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
diff --git a/scripts/io/disp.m b/scripts/io/disp.m
new file mode 100644
--- /dev/null
+++ b/scripts/io/disp.m
@@ -0,0 +1,36 @@
+## Copyright (C) 2000 John W. Eaton
+##
+## This file is part of Octave.
+##
+## Octave is free software; you can redistribute it and/or modify it
+## under the terms of the GNU General Public License as published by
+## the Free Software Foundation; either version 2, or (at your option)
+## any later version.
+##
+## Octave is distributed in the hope that it will be useful, but
+## WITHOUT ANY WARRANTY; without even the implied warranty of
+## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+## General Public License for more details.
+##
+## You should have received a copy of the GNU General Public License
+## along with Octave; see the file COPYING.  If not, write to the Free
+## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
+## 02111-1307, USA.
+
+## -*- texinfo -*-
+## @deftypefn {Function File} {} disp (@var{x})
+## Display the value of @var{x} on the standard output stream.
+## @end deftypefn
+## @seealso{fdisp}
+
+## Author: jwe
+
+function disp (x)
+
+  if (nargin == 1)
+    fdisp (stdout, x)
+  else
+    usage ("disp (x)");
+  endif
+
+endfunction
diff --git a/scripts/io/fdisp.m b/scripts/io/fdisp.m
new file mode 100644
--- /dev/null
+++ b/scripts/io/fdisp.m
@@ -0,0 +1,46 @@
+## Copyright (C) 2000 John W. Eaton
+##
+## This file is part of Octave.
+##
+## Octave is free software; you can redistribute it and/or modify it
+## under the terms of the GNU General Public License as published by
+## the Free Software Foundation; either version 2, or (at your option)
+## any later version.
+##
+## Octave is distributed in the hope that it will be useful, but
+## WITHOUT ANY WARRANTY; without even the implied warranty of
+## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+## General Public License for more details.
+##
+## You should have received a copy of the GNU General Public License
+## along with Octave; see the file COPYING.  If not, write to the Free
+## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
+## 02111-1307, USA.
+
+## -*- texinfo -*-
+## @deftypefn {Function File} {} fdisp (@var{fid}, @var{x})
+## Display the value of @var{x} on file id @var{fid}.  For example,
+##
+## @example
+## fdisp (stdout, "The value of pi is:"), fdisp (stdout, pi)
+##
+##      @print{} the value of pi is:
+##      @print{} 3.1416
+## @end example
+##
+## @noindent
+## Note that the output from @code{fdisp} always ends with a newline.
+## @end deftypefn
+## @seealso{disp}
+
+## Author: jwe
+
+function fdisp (fid, x)
+
+  if (nargin == 2)
+    fid << x << "\n";
+  else
+    usage ("fdisp (fid, x)");
+  endif
+
+endfunction
diff --git a/scripts/plot/plot.m b/scripts/plot/plot.m
--- a/scripts/plot/plot.m
+++ b/scripts/plot/plot.m
@@ -133,32 +133,46 @@
 ##   1       red                   *
 ##   2       green                 +
 ##   3       blue                  o
 ##   4       magenta               x
 ##   5       cyan                house
 ##   6       brown            there exists
 ## @end example
 ##
+## The @var{fmt} argument can also be used to assign key titles.
+## To do so, include the desired title between semi-colons after the
+## formatting sequence described above, e.g. "+3;Key Title;"
+## Note that the last semi-colon is required and will generate an error if
+## it is left out.
+##
 ## Here are some plot examples:
 ##
 ## @example
 ## plot (x, y, "@@12", x, y2, x, y3, "4", x, y4, "+")
 ## @end example
 ##
 ## This command will plot @code{y} with points of type 2 (displayed as
 ## @samp{+}) and color 1 (red), @code{y2} with lines, @code{y3} with lines of
 ## color 4 (magenta) and @code{y4} with points displayed as @samp{+}.
 ##
 ## @example
 ## plot (b, "*")
 ## @end example
 ##
 ## This command will plot the data in the variable @code{b} will be plotted
 ## with points displayed as @samp{*}.
+##
+## @example
+## t = 0:0.1:6.3;
+## plot (t, cos(t), "-;cos(t);", t, sin(t), "+3;sin(t);");
+## @end example
+##
+## This will plot the cosine and sine functions and label them accordingly
+## in the key.
 ## @end deftypefn
 ## @seealso{semilogx, semilogy, loglog, polar, mesh, contour, __pltopt__
 ## bar, stairs, gplot, gsplot, replot, xlabel, ylabel, and title}
 
 ## Author: jwe
 
 function plot (...)
 
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,12 @@
+2000-06-27  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* pr-output.cc (Fdisp): Delete.
+
 2000-06-26  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* pr-output.cc (float_format::float_format): Set default values
 	for width and precision to -1.
 	(operator << (ostream&, pr_formatted_float&): Set width and
 	precision if values are >= 0.
 	(set_real_format, set_real_matrix_format, set_range_format,
 	set_complex_format, set_complex_matrix_format): If we have all
diff --git a/src/DLD-FUNCTIONS/gammainc.cc b/src/DLD-FUNCTIONS/gammainc.cc
--- a/src/DLD-FUNCTIONS/gammainc.cc
+++ b/src/DLD-FUNCTIONS/gammainc.cc
@@ -34,36 +34,36 @@ Software Foundation, 59 Temple Place - S
 
 DEFUN_DLD (gammainc, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Mapping Function} {} gammainc (@var{x}, @var{a})\n\
 Computes the incomplete gamma function,\n\
 @iftex\n\
 @tex\n\
 $$\n\
- \\gamma (a, x) = {\\displaystyle\\int_0^x e^{-t} t^{a-1} dt \\over \\Gamma (a)}\n\
+ \\gamma (x, a) = {\\displaystyle\\int_0^x e^{-t} t^{a-1} dt \\over \\Gamma (a)}\n\
 $$\n\
 @end tex\n\
 @end iftex\n\
 @ifinfo\n\
 \n\
 @smallexample\n\
-                              x\n\
-                    1        /\n\
-gammainc (a, x) = ---------    | exp (-t) t^(a-1) dt\n\
-                gamma (a)    /\n\
-                          t=0\n\
+                                x\n\
+                      1        /\n\
+gammainc (x, a) = ---------    | exp (-t) t^(a-1) dt\n\
+                  gamma (a)    /\n\
+                            t=0\n\
 @end smallexample\n\
 @end ifinfo\n\
 \n\
-If @var{a} is scalar, then @code{gammainc (@var{a}, @var{x})} is returned\n\
+If @var{a} is scalar, then @code{gammainc (@var{x}, @var{a})} is returned\n\
 for each element of @var{x} and vice versa.\n\
 \n\
-If neither @var{a} nor @var{x} is scalar, the sizes of @var{a} and\n\
-@var{x} must agree, and @var{gammainc} is applied element-by-element.\n\
+If neither @var{x} nor @var{a} is scalar, the sizes of @var{x} and\n\
+@var{a} must agree, and @var{gammainc} is applied element-by-element.\n\
 @end deftypefn\n\
 @seealso{gamma and lgamma}")
 {
   octave_value retval;
 
   int nargin = args.length ();
 
   if (nargin == 2)
diff --git a/src/pr-output.cc b/src/pr-output.cc
--- a/src/pr-output.cc
+++ b/src/pr-output.cc
@@ -1746,44 +1746,16 @@ octave_print_internal (std::ostream& os,
 	os << " ]";
     }
   else
     {
       os << "sorry, printing char matrices not implemented yet\n";
     }
 }
 
-DEFUN (disp, args, ,
-  "-*- texinfo -*-\n\
-@deftypefn {Built-in Function} {} disp (@var{x})\n\
-Display the value of @var{x}.  For example,\n\
-\n\
-@example\n\
-disp (\"The value of pi is:\"), disp (pi)\n\
-\n\
-     @print{} the value of pi is:\n\
-     @print{} 3.1416\n\
-@end example\n\
-\n\
-@noindent\n\
-Note that the output from @code{disp} always ends with a newline.\n\
-@end deftypefn")
-{
-  octave_value_list retval;
-
-  int nargin = args.length ();
-
-  if (nargin == 1)
-    args(0).print (octave_stdout);
-  else
-    print_usage ("disp");
-
-  return retval;
-}
-
 static void
 init_format_state (void)
 {
   free_format = false;
   plus_format = false;
   bank_format = false;
   hex_format = 0;
   bit_format = 0;
