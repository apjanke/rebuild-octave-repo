# HG changeset patch
# User jwe
# Date 846204248 0
#      Fri Oct 25 00:44:08 1996 +0000
# Node ID b5c3b08f1babd80309711579546c48f48d54c009
# Parent  de430cdd92346e7813ec9100fba4fc515e241930
[project @ 1996-10-25 00:44:08 by jwe]

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,12 @@
+Thu Oct 24 19:40:36 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* Quad.h (Quad): Define virtual destructor.
+
 Tue Oct 15 11:34:48 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* CMatrix.cc (ComplexMatrix::all_elements_are_real): new function.
 
 Sun Oct 13 11:19:00 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* sun-utils.h: Conditionally declare MAIN__ too.  Declare MAIN_
 	and MAIN__ extern "C".
diff --git a/liboctave/Quad.h b/liboctave/Quad.h
--- a/liboctave/Quad.h
+++ b/liboctave/Quad.h
@@ -105,16 +105,18 @@ Quad : public Quad_options
  public:
 
   Quad (integrand_fcn fcn)
     : Quad_options (), f (fcn) { }
 
   Quad (integrand_fcn fcn, double abs, double rel)
     : Quad_options (abs, rel), f (fcn) { }
 
+  ~Quad (void) { }
+
   virtual double integrate (void)
     {
       int ier, neval;
       double abserr;
       return integrate (ier, neval, abserr);
     }
 
   virtual double integrate (int& ier)
@@ -167,16 +169,18 @@ DefQuad : public Quad
     : Quad (fcn), lower_limit (0.0), upper_limit (1.0),
       singularities (sing) { }
 
   DefQuad (integrand_fcn fcn, double ll, double ul, const ColumnVector& sing,
 	   double abs, double rel)
     : Quad (fcn, abs, rel), lower_limit (ll), upper_limit (ul),
       singularities (sing) { }
 
+  ~DefQuad (void) { }
+
   double integrate (int& ier, int& neval, double& abserr);
 
  private:
 
   double lower_limit;
   double upper_limit;
 
   ColumnVector singularities;
@@ -197,16 +201,18 @@ IndefQuad : public Quad
 
   IndefQuad (integrand_fcn fcn, double b, IntegralType t, double abs,
 	     double rel)
     : Quad (fcn, abs, rel), bound (b), type (t) { }
 
   IndefQuad (integrand_fcn fcn, double abs, double rel)
     : Quad (fcn, abs, rel), bound (0.0), type (bound_to_inf) { }
 
+  ~IndefQuad (void) { }
+
   double integrate (int& ier, int& neval, double& abserr);
 
  private:
 
   double bound;
   IntegralType type;
   int integration_error;
 };
