# HG changeset patch
# User jwe
# Date 1169671417 0
#      Wed Jan 24 20:43:37 2007 +0000
# Node ID f1676652d808c69f665d4631caad9f2fd9373a18
# Parent  738c97e101eb98dd59e4b1c73bf5db454e1e5eb0
[project @ 2007-01-24 20:43:36 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,13 @@
+2007-01-24  John W. Eaton  <jwe@octave.org>
+
+	* octMakefile.in (install): Install NEWS file.
+	(uninstall): Remove it.
+
 2007-01-08  David Bateman  <dbateman@free.fr>
 
 	* configure.in: Replace sparsesuite with suitesparse to match
 	upstream name.
 
 2006-12-06  Michael Goffioul  <michael.goffioul@swing.be>
 
 	* acx_blas.m4, acx_lapack.m4: Handle f2c calling convention.
diff --git a/libcruft/ChangeLog b/libcruft/ChangeLog
--- a/libcruft/ChangeLog
+++ b/libcruft/ChangeLog
@@ -1,8 +1,13 @@
+2007-01-24  Alexander Barth  <abarth@marine.usf.edu>
+
+	* misc/f77-fcn.h (F77_CSTRING): Call OCTAVE_LOCAL_BUFFER with cs,
+	not F77_CHAR_ARG_USE (s).
+
 2006-11-11  John W. Eaton  <jwe@octave.org>
 
 	* Makerules.in (%.def : %.f): Use $(simple-move-if-change-rule) here.
 
 2006-11-03  John W. Eaton  <jwe@octave.org>
 
 	* Makefile.in (DLL_CXXDEFS): Rename from XTRA_CXXDEFS.
 	(DLL_CDEFS): Rename from XTRA_CDEFS.
diff --git a/libcruft/misc/f77-fcn.h b/libcruft/misc/f77-fcn.h
--- a/libcruft/misc/f77-fcn.h
+++ b/libcruft/misc/f77-fcn.h
@@ -211,18 +211,17 @@ octave_make_cray_const_ftn_ch_dsc (const
 
 
 /* Build a C string local variable CS from the Fortran string parameter S
    declared as F77_CHAR_ARG_DEF(s, len) or F77_CONST_CHAR_ARG_DEF(s, len).
    The string will be cleaned up at the end of the current block.  
    Needs to include <cstring> and <vector>.  */
 
 #define F77_CSTRING(s, len, cs) \
- OCTAVE_LOCAL_BUFFER (char, F77_CHAR_ARG_USE (s), \
-		      F77_CHAR_ARG_LEN_USE (s, len) + 1); \
+ OCTAVE_LOCAL_BUFFER (char, cs, F77_CHAR_ARG_LEN_USE (s, len) + 1); \
  memcpy (cs, F77_CHAR_ARG_USE (s), F77_CHAR_ARG_LEN_USE (s, len)); \
  cs[F77_CHAR_ARG_LEN_USE(s, len)] = '\0' 
 
 
 extern CRUFT_API F77_RET_T
 F77_FUNC (xstopx, XSTOPX) (F77_CONST_CHAR_ARG_DECL
 			   F77_CHAR_ARG_LEN_DECL) GCC_ATTR_NORETURN;
 
diff --git a/octMakefile.in b/octMakefile.in
--- a/octMakefile.in
+++ b/octMakefile.in
@@ -108,25 +108,27 @@ install install-strip ::
 	rm -f $(DESTDIR)$(bindir)/octave-config
 	$(INSTALL_SCRIPT) \
 	  octave-config $(DESTDIR)$(bindir)/octave-config-$(version)
 	(cd $(DESTDIR)$(bindir); $(LN_S) octave-config-$(version) $(DESTDIR)$(bindir)/octave-config)
 	rm -f $(DESTDIR)$(bindir)/mkoctfile
 	$(INSTALL_SCRIPT) mkoctfile $(DESTDIR)$(bindir)/mkoctfile-$(version)
 	(cd $(DESTDIR)$(bindir); $(LN_S) mkoctfile-$(version) $(DESTDIR)$(bindir)/mkoctfile)
 	$(INSTALL_DATA) config.h $(DESTDIR)$(octincludedir)/octave/config.h
+	$(INSTALL_DATA) $(srcdir)/NEWS $(DESTDIR)$(datadir)/octave/$(version)/NEWS
 
 uninstall::
 	rm -f $(DESTDIR)$(bindir)/octave-bug
 	rm -f $(DESTDIR)$(bindir)/octave-bug-$(version)
 	rm -f $(DESTDIR)$(bindir)/octave-config
 	rm -f $(DESTDIR)$(bindir)/octave-config-$(version)
 	rm -f $(DESTDIR)$(bindir)/mkoctfile
 	rm -f $(DESTDIR)$(bindir)/mkoctfile-$(version)
 	rm -f $(DESTDIR)$(octincludedir)/octave/config.h
+	rm -f $(DESTDIR)$(datadir)/octave/$(version)/NEWS
 
 maintainer-clean::
 	@echo ""
 	@echo "************************************************************"
 	@echo "*                                                          *"
 	@echo "* This command is intended for maintainers to use; it      *"
 	@echo "* deletes files that may require special tools to rebuild. *"
 	@echo "*                                                          *"
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,25 @@
+2007-01-24  John W. Eaton  <jwe@octave.org>
+
+	* pt-assgn.cc (former_built_in_variables): New static data.
+	(maybe_warn_former_built_in_variable): New static function.
+	(tree_simple_assignment::tree_simple_assignment,
+	tree_multi_assignment::tree_multi_assignment):
+	Move definition here from pt-assign.h
+	Maybe warn about assignment to obsolete built-in variables.
+
+	* version.h (OCTAVE_STARTUP_MESSAGE): Mention "news" function.
+
+	* pt-stmt.cc (tree_statement::eval): Use dynamic_cast, not
+	static_cast.
+
+	* help.cc (help_from_file): Show .oct or .mex file name if one
+	exists in the same directory as the .m file.
+
 2007-01-23  Luis F. Ortiz  <lortiz@interactivesupercomputing.com>
 
 	* strfns.cc (Fstrncmp): New function.
 
 2007-01-17  John W. Eaton  <jwe@octave.org>
 
 	* help.cc (help_from_file, help_from_symbol_table, help_from_list):
 	Rewrite using raw_ versions.
diff --git a/src/help.cc b/src/help.cc
--- a/src/help.cc
+++ b/src/help.cc
@@ -38,16 +38,17 @@ 02110-1301, USA.
 #ifdef HAVE_SYS_TYPES_H
 #include <sys/types.h>
 #endif
 #include <unistd.h>
 #endif
 
 #include "cmd-edit.h"
 #include "file-ops.h"
+#include "file-stat.h"
 #include "oct-env.h"
 #include "str-vec.h"
 
 #include <defaults.h>
 #include "defun.h"
 #include "dirfns.h"
 #include "error.h"
 #include "gripes.h"
@@ -1073,16 +1074,28 @@ help_from_file (std::ostream& os, const 
 
   std::string h;
   std::string file;
 
   if (raw_help_from_file (nm, h, file, symbol_found))
     {
       if (h.length () > 0)
 	{
+	  // Strip extension
+	  size_t l = file.length ();
+	  if (l > 2 && file.substr (l-2) == ".m")
+	    {
+	      std::string tmp = file.substr (0, l - 2);
+
+	      if (file_stat (tmp + ".oct"))
+		file = tmp + ".oct";
+	      else if (file_stat (tmp + ".mex"))
+		file = tmp + ".mex";
+	    }
+
 	  os << nm << " is the file " << file << "\n\n";
 
 	  display_help_text (os, h);
 
 	  os << "\n";
 
 	  retval = true;
 	}
diff --git a/src/pt-assign.cc b/src/pt-assign.cc
--- a/src/pt-assign.cc
+++ b/src/pt-assign.cc
@@ -21,16 +21,17 @@ 02110-1301, USA.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <iostream>
+#include <set>
 
 #include "defun.h"
 #include "error.h"
 #include "input.h"
 #include "oct-obj.h"
 #include "oct-lvalue.h"
 #include "pager.h"
 #include "ov.h"
@@ -38,16 +39,135 @@ 02110-1301, USA.
 #include "pt-bp.h"
 #include "pt-assign.h"
 #include "pt-walk.h"
 #include "utils.h"
 #include "variables.h"
 
 // Simple assignment expressions.
 
+static const char *former_built_in_variables[] =
+{
+  "DEFAULT_EXEC_PATH",
+  "DEFAULT_LOADPATH",
+  "EDITOR",
+  "EXEC_PATH",
+  "FFTW_WISDOM_PROGRAM",
+  "IMAGEPATH",
+  "INFO_FILE",
+  "INFO_PROGRAM",
+  "LOADPATH",
+  "MAKEINFO_PROGRAM",
+  "PAGER",
+  "PS1",
+  "PS2",
+  "PS4",
+  "__kluge_procbuf_delay__",
+  "ans",
+  "automatic_replot",
+  "beep_on_error",
+  "completion_append_char",
+  "crash_dumps_octave_core",
+  "current_script_file_name",
+  "debug_on_error",
+  "debug_on_interrupt",
+  "debug_on_warning",
+  "debug_symtab_lookups",
+  "default_save_format",
+  "echo_executing_commands",
+  "fixed_point_format",
+  "gnuplot_binary",
+  "gnuplot_command_axes",
+  "gnuplot_command_end",
+  "gnuplot_command_plot",
+  "gnuplot_command_replot",
+  "gnuplot_command_splot",
+  "gnuplot_command_title",
+  "gnuplot_command_using",
+  "gnuplot_command_with",
+  "gnuplot_has_frames",
+  "history_file",
+  "history_size",
+  "ignore_function_time_stamp",
+  "max_recursion_depth",
+  "octave_core_file_format",
+  "octave_core_file_limit",
+  "octave_core_file_name",
+  "output_max_field_width",
+  "output_precision",
+  "page_output_immediately",
+  "page_screen_output",
+  "print_answer_id_name",
+  "print_empty_dimensions",
+  "print_rhs_assign_val",
+  "save_header_format_string",
+  "save_precision",
+  "saving_history",
+  "sighup_dumps_octave_core",
+  "sigterm_dumps_octave_core",
+  "silent_functions",
+  "split_long_rows",
+  "string_fill_char",
+  "struct_levels_to_print",
+  "suppress_verbose_help_message",
+  "variables_can_hide_functions",
+  "warn_assign_as_truth_value",
+  "warn_associativity_change",
+  "warn_divide_by_zero",
+  "warn_empty_list_elements",
+  "warn_fortran_indexing",
+  "warn_function_name_clash",
+  "warn_future_time_stamp",
+  "warn_imag_to_real",
+  "warn_matlab_incompatible",
+  "warn_missing_semicolon",
+  "warn_neg_dim_as_zero",
+  "warn_num_to_str",
+  "warn_precedence_change",
+  "warn_reload_forces_clear",
+  "warn_resize_on_range_error",
+  "warn_separator_insert",
+  "warn_single_quote_string",
+  "warn_str_to_num",
+  "warn_undefined_return_values",
+  "warn_variable_switch_label",
+  "whos_line_format",
+  0,
+};
+
+static void
+maybe_warn_former_built_in_variable (const std::string& nm)
+{
+  static bool initialized = false;
+
+  static std::set<std::string> vars;
+
+  if (! initialized)
+    {
+      const char **p = former_built_in_variables;
+
+      while (*p)
+	vars.insert (*p++);
+    }
+
+  if (vars.find (nm) != vars.end ())
+    warning_with_id ("Octave:built-in-variable-assignment",
+		     "%s is no longer a built-in variable; please read the NEWS file or type `news' for details",
+		     nm.c_str ());
+}
+
+tree_simple_assignment::tree_simple_assignment
+  (tree_expression *le, tree_expression *re,
+   bool plhs, int l, int c, octave_value::assign_op t)
+    : tree_expression (l, c), lhs (le), rhs (re), preserve (plhs), etype (t)
+{
+  if (lhs)
+    maybe_warn_former_built_in_variable (lhs->name ());
+}
+
 tree_simple_assignment::~tree_simple_assignment (void)
 {
   if (! preserve)
     delete lhs;
 
   delete rhs;
 }
 
@@ -174,16 +294,30 @@ tree_simple_assignment::dup (symbol_tabl
 void
 tree_simple_assignment::accept (tree_walker& tw)
 {
   tw.visit_simple_assignment (*this);
 }
 
 // Multi-valued assignment expressions.
 
+tree_multi_assignment::tree_multi_assignment
+  (tree_argument_list *lst, tree_expression *r,
+   bool plhs, int l, int c, octave_value::assign_op t)
+    : tree_expression (l, c), lhs (lst), rhs (r), preserve (plhs), etype (t)
+{
+  for (tree_argument_list::iterator p = lhs->begin (); p != lhs->end (); p++)
+    {
+      tree_expression *lhs = *p;
+
+      if (lhs)
+	maybe_warn_former_built_in_variable (lhs->name ());
+    }
+}
+
 tree_multi_assignment::~tree_multi_assignment (void)
 {
   if (! preserve)
     delete lhs;
 
   delete rhs;
 }
 
diff --git a/src/pt-assign.h b/src/pt-assign.h
--- a/src/pt-assign.h
+++ b/src/pt-assign.h
@@ -45,19 +45,17 @@ tree_simple_assignment : public tree_exp
 public:
 
   tree_simple_assignment (bool plhs = false, int l = -1, int c = -1,
 			  octave_value::assign_op t = octave_value::op_asn_eq)
     : tree_expression (l, c), lhs (0), rhs (0), preserve (plhs), etype (t) { }
 
   tree_simple_assignment (tree_expression *le, tree_expression *re,
 			  bool plhs = false, int l = -1, int c = -1,
-			  octave_value::assign_op t = octave_value::op_asn_eq)
-    : tree_expression (l, c), lhs (le), rhs (re), preserve (plhs),
-      etype (t) { }
+			  octave_value::assign_op t = octave_value::op_asn_eq);
 
   ~tree_simple_assignment (void);
 
   bool has_magic_end (void) const { return (rhs && rhs->has_magic_end ()); }
 
   bool rvalue_ok (void) const { return true; }
 
   octave_value rvalue (void);
@@ -115,19 +113,17 @@ tree_multi_assignment : public tree_expr
 public:
 
   tree_multi_assignment (bool plhs = false, int l = -1, int c = -1,
 			 octave_value::assign_op t = octave_value::op_asn_eq)
     : tree_expression (l, c), lhs (0), rhs (0), preserve (plhs), etype(t) { }
 
   tree_multi_assignment (tree_argument_list *lst, tree_expression *r,
 			 bool plhs = false, int l = -1, int c = -1,
-			  octave_value::assign_op t = octave_value::op_asn_eq)
-    : tree_expression (l, c), lhs (lst), rhs (r), preserve (plhs),
-      etype (t) { }
+			 octave_value::assign_op t = octave_value::op_asn_eq);
 
   ~tree_multi_assignment (void);
 
   bool has_magic_end (void) const { return (rhs && rhs->has_magic_end ()); }
 
   bool is_assignment_expression (void) const { return true; }
 
   bool rvalue_ok (void) const { return true; }
diff --git a/src/pt-stmt.cc b/src/pt-stmt.cc
--- a/src/pt-stmt.cc
+++ b/src/pt-stmt.cc
@@ -114,17 +114,17 @@ tree_statement::eval (bool silent, int n
 	  // everything, binding ans as necessary?
 
 	  bool do_bind_ans = false;
 
 	  bool script_file_executed = false;
 
 	  if (expr->is_identifier ())
 	    {
-	      tree_identifier *id = static_cast<tree_identifier *> (expr);
+	      tree_identifier *id = dynamic_cast<tree_identifier *> (expr);
 
 	      id->do_lookup (script_file_executed, true);
 
 	      do_bind_ans = id->is_function ();
 	    }
 	  else
 	    do_bind_ans = (! expr->is_assignment_expression ());
 
diff --git a/src/version.h b/src/version.h
--- a/src/version.h
+++ b/src/version.h
@@ -77,17 +77,18 @@ http://www.octave.org/bugs.html to learn
   OCTAVE_CONTRIB_STATEMENT "\n\n" \
   OCTAVE_BUGS_STATEMENT
 
 #define OCTAVE_NAME_VERSION_COPYRIGHT_COPYING_WARRANTY_AND_BUGS \
   X_OCTAVE_NAME_VERSION_COPYRIGHT_COPYING_WARRANTY_AND_BUGS ("\n\n")
 
 #define OCTAVE_STARTUP_MESSAGE \
   X_OCTAVE_NAME_VERSION_COPYRIGHT_COPYING_WARRANTY_AND_BUGS \
-    ("  For details, type `warranty'.\n\n")
+    ("  For details, type `warranty'.\n\
+  For information about changes from previous versions, type `news'.\n\n")
 
 #endif
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
