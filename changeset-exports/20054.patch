# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1428602047 14400
#      Thu Apr 09 13:54:07 2015 -0400
# Node ID cbba639b956bdde9886427393506d19e2230954e
# Parent  ac59136f1f10967e12f7619bf3f1cd2b0925209a
fail if single argument to assert is empty.  (bug #44793)

* assert.m: Also fail for single empty arguments. New tests.
Fix test for assert ([]).

diff --git a/scripts/testfun/assert.m b/scripts/testfun/assert.m
--- a/scripts/testfun/assert.m
+++ b/scripts/testfun/assert.m
@@ -71,17 +71,18 @@ function assert (cond, varargin)
 
     call_depth++;
 
     if (call_depth == 0)
       errmsg = "";
     endif
 
     if (nargin == 1 || (nargin > 1 && islogical (cond) && ischar (varargin{1})))
-      if ((! isnumeric (cond) && ! islogical (cond)) || ! all (cond(:)))
+      if ((! isnumeric (cond) && ! islogical (cond))
+          || isempty (cond) || ! all (cond(:)))
         if (nargin == 1)
           ## Perhaps, say which elements failed?
           argin = ["(" strjoin(cellstr (argn), ",") ")"];
           error ("assert %s failed", argin);
         else
           error (varargin{:});
         endif
       endif
@@ -399,17 +400,20 @@ function assert (cond, varargin)
       error (errmsg);
     endif
   endif
 
 endfunction
 
 
 ## empty input
-%!assert ([])
+%!error assert ([])
+%!error assert ("")
+%!error assert ({})
+%!error assert (struct ([]))
 %!assert (zeros (3,0), zeros (3,0))
 %!error <O\(3x0\)\s+E\(0x2\)> assert (zeros (3,0), zeros (0,2))
 %!error <Dimensions don't match> assert (zeros (3,0), [])
 %!error <Dimensions don't match> assert (zeros (2,0,2), zeros (2,0))
 
 ## conditions
 %!assert (isempty ([]))
 %!assert (1)
