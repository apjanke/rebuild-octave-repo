# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1233880778 18000
#      Thu Feb 05 19:39:38 2009 -0500
# Node ID 6e9887f9cf9f646de4e166f3236279e106c071b0
# Parent  ddbe875993314945753a2b3fed6d75d2fa741e0a
file-stat.cc: use EXISTS instead of OK in previuos change

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,10 +1,13 @@
 2009-02-05  John W. Eaton  <jwe@octave.org>
 
+	* file-stat.cc (base_file_stat::is_sock):
+	Use EXISTS instead of OK in previous change.
+
 	* file-stat.cc (base_file_stat::is_blk, base_file_stat::is_chr,
 	base_file_stat::is_dir, base_file_stat::is_fifo,
 	base_file_stat::is_lnk, base_file_stat::is_reg,
 	base_file_stat::is_sock): Return false if object is not initialized.
 	From Rafael Laboissiere <rafael@debian.org>.
 
 2009-02-05  Jaroslav Hajek  <highegg@gmail.com>
 	
diff --git a/liboctave/file-stat.cc b/liboctave/file-stat.cc
--- a/liboctave/file-stat.cc
+++ b/liboctave/file-stat.cc
@@ -49,53 +49,53 @@ lstat (const char *name, struct stat *bu
 
 // FIXME -- the is_* and mode_as_string functions are only valid
 // for initialized objects.  If called for an object that is not
 // initialized, they should throw an exception.
 
 bool
 base_file_stat::is_blk (void) const
 {
-  return ok () && is_blk (fs_mode);
+  return exists () && is_blk (fs_mode);
 }
 
 bool
 base_file_stat::is_chr (void) const
 {
-  return ok () && is_chr (fs_mode);
+  return exists () && is_chr (fs_mode);
 }
 
 bool
 base_file_stat::is_dir (void) const
 { 
-  return ok () && is_dir (fs_mode);
+  return exists () && is_dir (fs_mode);
 }
 
 bool
 base_file_stat::is_fifo (void) const
 { 
-  return ok () && is_fifo (fs_mode);
+  return exists () && is_fifo (fs_mode);
 }
 
 bool
 base_file_stat::is_lnk (void) const
 { 
-  return ok () && is_lnk (fs_mode);
+  return exists () && is_lnk (fs_mode);
 }
 
 bool
 base_file_stat::is_reg (void) const
 { 
-  return ok () && is_reg (fs_mode);
+  return exists () && is_reg (fs_mode);
 }
 
 bool
 base_file_stat::is_sock (void) const
 { 
-  return ok () && is_sock (fs_mode);
+  return exists () && is_sock (fs_mode);
 }
 
 bool
 base_file_stat::is_blk (mode_t mode)
 {
 #ifdef S_ISBLK
   return S_ISBLK (mode);
 #else
