# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1522715555 14400
#      Mon Apr 02 20:32:35 2018 -0400
# Branch stable
# Node ID cc21f66ecb1c7c2366d23fb76c379a132714403f
# Parent  71ed409b2ffbb3940d0da9b7afec97093a3a458d
display more info in configure summary about Qt version and missing features

If Qt is found, display Qt version in summary.  If it is not found or
is not functional, display list of missing modules, if any.

* acinclude.m4 (OCTAVE_CHECK_QT): Set BUILD_QT_SUMMARY_MSG.
* configure.ac: Use it.

diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -3404,17 +3404,17 @@ Octave is now configured for $canonical_
   X11 libraries:                 $X11_LIBS
   Z CPPFLAGS:                    $Z_CPPFLAGS
   Z LDFLAGS:                     $Z_LDFLAGS
   Z libraries:                   $Z_LIBS
 
   Default pager:                 $DEFAULT_PAGER
   gnuplot:                       $GNUPLOT
 
-  Build Octave Qt GUI:                  $build_qt_gui
+  Build Octave Qt GUI:                  $BUILD_QT_SUMMARY_MSG
   JIT compiler for loops:               $ENABLE_JIT
   Build Java interface:                 $build_java
   Build static libraries:               $STATIC_LIBS
   Build shared libraries:               $SHARED_LIBS
   Dynamic Linking:                      $ENABLE_DYNAMIC_LINKING $DL_API_MSG
   Include support for GNU readline:     $USE_READLINE
   64-bit array dims and indexing:       $ENABLE_64
   64-bit BLAS array dims and indexing:  $HAVE_64_BIT_BLAS
diff --git a/m4/acinclude.m4 b/m4/acinclude.m4
--- a/m4/acinclude.m4
+++ b/m4/acinclude.m4
@@ -1710,23 +1710,29 @@ AC_DEFUN([OCTAVE_CHECK_QT], [
     OCTAVE_CHECK_QT_VERSION([$ver])
     if test $build_qt_gui = yes; then
       have_qt_version=$ver
       break
     fi
   done
 
   if test $build_qt_gui = yes; then
+    BUILD_QT_SUMMARY_MSG="yes (version: $have_qt_version)"
     if test x"$have_qt_version" = x4; then
       AC_DEFINE(HAVE_QT4, 1, [Define to 1 if using Qt version 4.])
     fi
     if test x"$have_qt_version" = x5; then
       AC_DEFINE(HAVE_QT5, 1, [Define to 1 if using Qt version 5.])
     fi
   else
+    if test -n "$QT_MODULES_MISSING"; then
+      BUILD_QT_SUMMARY_MSG="no (missing:$QT_MODULES_MISSING)"
+    else
+      BUILD_QT_SUMMARY_MSG="no"
+    fi
     if test -n "$warn_qt_libraries"; then
       OCTAVE_CONFIGURE_WARNING([warn_qt_libraries])
     fi
     if test -n "$warn_qt_version"; then
         OCTAVE_CONFIGURE_WARNING([warn_qt_version])
     fi
     if test -n "$warn_qt_tools"; then
         OCTAVE_CONFIGURE_WARNING([warn_qt_tools])
@@ -1911,16 +1917,26 @@ AC_DEFUN([OCTAVE_CHECK_QT_VERSION], [AC_
     ;;
   esac
 
   PKG_CHECK_MODULES(QT, [$QT_MODULES],
     [],
     [build_qt_gui=no
      warn_qt_libraries="Qt libraries not found; disabling Qt GUI"])
 
+  QT_MODULES_MISSING=
+  if test $build_qt_gui = no; then
+    ## Get list of modules that are missing
+    for pkg in $QT_MODULES; do
+      if ! $PKG_CONFIG --exists $pkg; then
+        QT_MODULES_MISSING="$QT_MODULES_MISSING $pkg"
+      fi
+    done
+  fi
+
   if test $build_qt_gui = yes; then
     ## Retrieve Qt compilation and linker flags
     QT_CPPFLAGS="$($PKG_CONFIG --cflags-only-I $QT_MODULES | $SED -e 's/^ *$//')"
     QT_LDFLAGS="$($PKG_CONFIG --libs-only-L $QT_MODULES | $SED -e 's/^ *$//')"
     QT_LIBS="$($PKG_CONFIG --libs-only-l $QT_MODULES | $SED -e 's/^ *$//')"
 
     case $host_os in
       *darwin*)
