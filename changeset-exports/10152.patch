# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1264018492 -3600
#      Wed Jan 20 21:14:52 2010 +0100
# Node ID b6b65e71049b0f158f78d174172bb1e0a7e07f46
# Parent  c2f1cdb59821b6a7e71b6a89c992d20dd316bcb0
optimize cumsum with logicals

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+2010-01-20  Jaroslav Hajek  <highegg@gmail.com>
+
+	* boolNDArray.cc (boolNDArray::cumsum): Sum directly in double to
+	avoid a copy.
+
 2010-01-20  John W. Eaton  <jwe@octave.org>
 
 	* dim-vector.h: Style fixes.  Remove Emacs local variables block.
 	Untabify.
 
 2010-01-20  John W. Eaton  <jwe@octave.org>
 
 	* Makefile.am (PRIVATE_INCS): New variable.  List oct-glob.h
diff --git a/liboctave/boolNDArray.cc b/liboctave/boolNDArray.cc
--- a/liboctave/boolNDArray.cc
+++ b/liboctave/boolNDArray.cc
@@ -67,25 +67,26 @@ boolNDArray
 boolNDArray::any (int dim) const
 {
   return do_mx_red_op<boolNDArray, bool> (*this, dim, mx_inline_any);
 }
 
 NDArray 
 boolNDArray::sum (int dim) const
 {
-  // NOTE: going via octave_idx_type is faster even though it requires a conversion.
+  // NOTE: going via octave_idx_type is typically faster even though it
+  // requires a conversion. 
   return do_mx_red_op<Array<octave_idx_type> , bool> (*this, dim, mx_inline_count);
 }
 
 NDArray 
 boolNDArray::cumsum (int dim) const
 {
-  // NOTE: going via octave_idx_type is faster even though it requires a conversion.
-  return do_mx_cum_op<Array<octave_idx_type> , bool> (*this, dim, mx_inline_cumcount);
+  // In this case, it's better to sum directly to doubles.
+  return do_mx_cum_op<NDArray , bool> (*this, dim, mx_inline_cumcount);
 }
 
 boolNDArray
 boolNDArray::concat (const boolNDArray& rb, const Array<octave_idx_type>& ra_idx)
 {
   if (rb.numel () > 0)
     insert (rb, ra_idx);
   return *this;
