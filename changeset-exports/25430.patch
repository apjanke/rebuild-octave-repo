# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1528219725 14400
#      Tue Jun 05 13:28:45 2018 -0400
# Node ID 292268688dac09ceed0f9dd0d65450e9da0aeaa1
# Parent  ecc488aa56a0eac7f5c863d8f4465d921b35dc56
# Parent  2b3c3c8c836076fdf3acdb8be3b63d9554ebd33c
maint: Merge stable to default.

diff --git a/doc/interpreter/geometryimages.m b/doc/interpreter/geometryimages.m
--- a/doc/interpreter/geometryimages.m
+++ b/doc/interpreter/geometryimages.m
@@ -138,17 +138,17 @@ endfunction
 ## This function no longer sets the graphics toolkit; That is now done
 ## automatically by C++ code which will ordinarily choose 'qt', but might
 ## choose gnuplot on older systems.  Only a complete lack of plotting is a
 ## problem.
 function set_graphics_toolkit ()
   if (isempty (available_graphics_toolkits ()))
     error ("no graphics toolkit available for plotting");
   elseif (strcmp ("qt", graphics_toolkit ())
-          && __have_feature__ ("QOFFSCREENSURFACE"))
+          && __have_feature__ ("QT_OFFSCREEN"))
     ## Use qt with QOffscreenSurface for plot
   elseif (! strcmp ("gnuplot", graphics_toolkit ()) ...
           && ! __have_feature__ ("OSMESA"))
     if (! any (strcmp ("gnuplot", available_graphics_toolkits ())))
       error ("no graphics toolkit available for offscreen plotting");
     else
       graphics_toolkit ("gnuplot");
     endif
diff --git a/doc/interpreter/interpimages.m b/doc/interpreter/interpimages.m
--- a/doc/interpreter/interpimages.m
+++ b/doc/interpreter/interpimages.m
@@ -81,17 +81,17 @@ endfunction
 ## This function no longer sets the graphics toolkit; That is now done
 ## automatically by C++ code which will ordinarily choose 'qt', but might
 ## choose gnuplot on older systems.  Only a complete lack of plotting is a
 ## problem.
 function set_graphics_toolkit ()
   if (isempty (available_graphics_toolkits ()))
     error ("no graphics toolkit available for plotting");
   elseif (strcmp ("qt", graphics_toolkit ())
-          && __have_feature__ ("QOFFSCREENSURFACE"))
+          && __have_feature__ ("QT_OFFSCREEN"))
     ## Use qt with QOffscreenSurface for plot
   elseif (! strcmp ("gnuplot", graphics_toolkit ())
           && ! __have_feature__ ("OSMESA"))
     if (! any (strcmp ("gnuplot", available_graphics_toolkits ())))
       error ("no graphics toolkit available for offscreen plotting");
     else
       graphics_toolkit ("gnuplot");
     endif
diff --git a/doc/interpreter/plotimages.m b/doc/interpreter/plotimages.m
--- a/doc/interpreter/plotimages.m
+++ b/doc/interpreter/plotimages.m
@@ -119,17 +119,17 @@ endfunction
 ## This function no longer sets the graphics toolkit; That is now done
 ## automatically by C++ code which will ordinarily choose 'qt', but might
 ## choose gnuplot on older systems.  Only a complete lack of plotting is a
 ## problem.
 function set_graphics_toolkit ()
   if (isempty (available_graphics_toolkits ()))
     error ("no graphics toolkit available for plotting");
   elseif (strcmp ("qt", graphics_toolkit ())
-          && __have_feature__ ("QOFFSCREENSURFACE"))
+          && __have_feature__ ("QT_OFFSCREEN"))
     ## Use qt with QOffscreenSurface for plot
   elseif (! strcmp ("gnuplot", graphics_toolkit ()) ...
           && ! __have_feature__ ("OSMESA"))
     if (! any (strcmp ("gnuplot", available_graphics_toolkits ())))
       error ("no graphics toolkit available for offscreen plotting");
     else
       graphics_toolkit ("gnuplot");
     endif
diff --git a/doc/interpreter/sparseimages.m b/doc/interpreter/sparseimages.m
--- a/doc/interpreter/sparseimages.m
+++ b/doc/interpreter/sparseimages.m
@@ -240,17 +240,17 @@ endfunction
 ## This function no longer sets the graphics toolkit; That is now done
 ## automatically by C++ code which will ordinarily choose 'qt', but might
 ## choose gnuplot on older systems.  Only a complete lack of plotting is a
 ## problem.
 function set_graphics_toolkit ()
   if (isempty (available_graphics_toolkits ()))
     error ("no graphics toolkit available for plotting");
   elseif (strcmp ("qt", graphics_toolkit ())
-          && __have_feature__ ("QOFFSCREENSURFACE"))
+          && __have_feature__ ("QT_OFFSCREEN"))
     ## Use qt with QOffscreenSurface for plot
   elseif (! strcmp ("gnuplot", graphics_toolkit ())
           && ! __have_feature__ ("OSMESA"))
     if (! any (strcmp ("gnuplot", available_graphics_toolkits ())))
       error ("no graphics toolkit available for offscreen plotting");
     else
       graphics_toolkit ("gnuplot");
     endif
diff --git a/doc/interpreter/splineimages.m b/doc/interpreter/splineimages.m
--- a/doc/interpreter/splineimages.m
+++ b/doc/interpreter/splineimages.m
@@ -171,17 +171,17 @@ endfunction
 ## This function no longer sets the graphics toolkit; That is now done
 ## automatically by C++ code which will ordinarily choose 'qt', but might
 ## choose gnuplot on older systems.  Only a complete lack of plotting is a
 ## problem.
 function set_graphics_toolkit ()
   if (isempty (available_graphics_toolkits ()))
     error ("no graphics toolkit available for plotting");
   elseif (strcmp ("qt", graphics_toolkit ())
-          && __have_feature__ ("QOFFSCREENSURFACE"))
+          && __have_feature__ ("QT_OFFSCREEN"))
     ## Use qt with QOffscreenSurface for plot
   elseif (! strcmp ("gnuplot", graphics_toolkit ())
           && ! __have_feature__ ("OSMESA"))
     if (! any (strcmp ("gnuplot", available_graphics_toolkits ())))
       error ("no graphics toolkit available for offscreen plotting");
     else
       graphics_toolkit ("gnuplot");
     endif
