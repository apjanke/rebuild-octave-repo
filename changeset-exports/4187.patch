# HG changeset patch
# User jwe
# Date 1037732098 0
#      Tue Nov 19 18:54:58 2002 +0000
# Node ID dda53b247bc8dbd50e367c2f0315df2e3abda7a8
# Parent  bf9c5ca4c3f34e67970353c52df2712e947a6bcf
[project @ 2002-11-19 18:54:58 by jwe]

diff --git a/liboctave/MDiagArray2.cc b/liboctave/MDiagArray2.cc
--- a/liboctave/MDiagArray2.cc
+++ b/liboctave/MDiagArray2.cc
@@ -28,16 +28,19 @@ Software Foundation, 59 Temple Place - S
 #include <config.h>
 #endif
 
 #include "MDiagArray2.h"
 #include "lo-error.h"
 
 #include "MArray-defs.h"
 
+// Some functions return a reference to this object after a failure.
+template <class T> MDiagArray2<T> MDiagArray2<T>::nil_array;
+
 // Two dimensional diagonal array with math ops.
 
 // Element by element MDiagArray2 by MDiagArray2 ops.
 
 template <class T>
 MDiagArray2<T>&
 operator += (MDiagArray2<T>& a, const MDiagArray2<T>& b)
 {
@@ -45,18 +48,17 @@ operator += (MDiagArray2<T>& a, const MD
   int c = a.cols ();
 
   int b_nr = b.rows ();
   int b_nc = b.cols ();
 
   if (r != b_nr || c != b_nc)
     {
       gripe_nonconformant ("operator +=", r, c, b_nr, b_nc);
-      static MDiagArray2<T> foo;
-      return foo;
+      return MDiagArray2<T>::nil_array;
     }
   else
     {
       int l = a.length ();
       DO_VV_OP2 (+=);
     }
   return a;
 }
@@ -69,18 +71,17 @@ operator -= (MDiagArray2<T>& a, const MD
   int c = a.cols ();
 
   int b_nr = b.rows ();
   int b_nc = b.cols ();
 
   if (r != b_nr || c != b_nc)
     {
       gripe_nonconformant ("operator -=", r, c, b_nr, b_nc);
-      static MDiagArray2<T> foo;
-      return foo;
+      return MDiagArray2<T>::nil_array;
     }
   else
     {
       int l = a.length ();
       DO_VV_OP2 (-=);
     }
   return a;
 }
diff --git a/liboctave/MDiagArray2.h b/liboctave/MDiagArray2.h
--- a/liboctave/MDiagArray2.h
+++ b/liboctave/MDiagArray2.h
@@ -76,16 +76,18 @@ public:
       int len = nr < nc ? nr : nc;
 
       for (int i = 0; i < len; i++)
 	retval.xelem (i, i) = xelem (i, i);
 
       return retval;
     }
 
+  static MDiagArray2<T> nil_array;
+
   // Currently, the OPS functions don't need to be friends, but that
   // may change.
 
   // MDIAGARRAY2_OPS_FRIEND_DECLS (MDiagArray2)
 
 };
 
 #endif
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2002-11-19  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* DLD-FUNCTIONS/odessa.cc (odessa_user_j): Put T in args(1), not
+	args(0).
+
 2002-11-18  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* parse.y (symtab_context): Now extern.
 	* parse.h: Provide decl.
 	* lex.l (reset_parser): Set it to 0.
 
 2002-11-15  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
diff --git a/src/DLD-FUNCTIONS/odessa.cc b/src/DLD-FUNCTIONS/odessa.cc
--- a/src/DLD-FUNCTIONS/odessa.cc
+++ b/src/DLD-FUNCTIONS/odessa.cc
@@ -129,17 +129,17 @@ odessa_user_j (const ColumnVector& x, do
 
       if (npar > 1)
 	args(2) = theta;
       else if (npar == 1)
 	args(2) = theta(0);
       else
 	args(2) = Matrix ();
 
-      args(0) = t;
+      args(1) = t;
 
       if (n > 1)
 	args(0) = x;
       else if (n == 1)
 	args(0) = x(0);
       else
 	args(0) = Matrix ();
 
