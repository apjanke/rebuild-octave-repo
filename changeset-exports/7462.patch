# HG changeset patch
# User David Bateman
# Date 1202470239 -3600
#      Fri Feb 08 12:30:39 2008 +0100
# Node ID dfcaf7ed48e3115044bdfb19eb23fcc55ca408be
# Parent  da8e4aa06134b1a49dc595a428fcbd731de193e4
Allow linewidth to be specified for contours

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,12 +1,18 @@
 2008-02-08  Julien Pommier  <pommier@pianoteq.com>
 
 	* audio/wavread.m: Limit data read to end of data chunk.
 
+2008-02-08  David Bateman  <dbateman@free.fr?
+
+	* plot/__contour__.m: Respect the graphic handle options that are
+	passed.
+	* plot/__go_draw_axes__.m: Respect the linewidth for patch objects.
+
 2008-02-01  Dave Goel  <deego3@gmail.com>
 
 	* signal/arch_rnd.m: Correctly index E and Y vectors.
 
 2008-02-01  Bill Denney  <bill@denney.ws>
 
 	* time/weekday.m: Allow vector inputs and speed up.
 	* time/eomday.m: Return column vector for column vector inputs.
diff --git a/scripts/plot/__contour__.m b/scripts/plot/__contour__.m
--- a/scripts/plot/__contour__.m
+++ b/scripts/plot/__contour__.m
@@ -23,37 +23,46 @@ function [c, h] = __contour__ (varargin)
   ax = varargin{1};
   z = varargin{2};
 
   linespec.linestyle = "-";
   linespec.color = "flat";
   for i = 3 : nargin
     arg = varargin {i};
     if ((ischar (arg) || iscell (arg)))
-      [linespec, valid] = __pltopt__ ("quiver", arg, false);
+      [linespec, valid] = __pltopt__ ("contour", arg, false);
       if (isempty (linespec.color))
 	linespec.color = "flat";
       endif
       if (valid)
 	have_line_spec = true;
 	varargin(i) = [];
 	break;
       endif
     endif
   endfor
 
+  opts = {};
+  i = 3;
+  while (i < length (varargin))
+    if (ischar (varargin {i}))
+      opts{end+1} = varargin{i};
+      varargin(i) = [];
+      opts{end+1} = varargin{i};
+      varargin(i) = [];
+    else
+      i++;
+    endif
+  endwhile
+
   if (ischar (z))
     if (strcmp (z, "none"))
       z = NaN;
     elseif (strcmp (z, "base"))
-      if (nargin < 3)
-	z = varargin{1};
-      else
-	z = varargin{3};
-      endif
+      z = varargin{3};
       z = 2 * (min (z(:)) - max (z(:)));
     elseif (! strcmp (z, "level"))
       error ("unrecognized z argument");
     endif
   endif
 
   [c, lev] = contourc (varargin{3:end});
 
@@ -68,22 +77,22 @@ function [c, h] = __contour__ (varargin)
       p = c(:, i1+1:i1+clen-1);
     else
       p = [c(:, i1+1:i1+clen), NaN(2, 1)];
     endif
 
     if (isnan (z))
       h = [h; patch(ax, p(1,:), p(2,:), "facecolor", "none", 
 		    "edgecolor", linespec.color, "linestyle", 
-		    linespec.linestyle, "cdata", clev)];
+		    linespec.linestyle, "cdata", clev, opts{:})];
     elseif (!ischar(z))
       h = [h; patch(ax, p(1,:), p(2,:), z * ones (1, columns (p)), "facecolor",
 		    "none", "edgecolor", linespec.color, 
-		    "linestyle", linespec.linestyle, "cdata", clev)];
+		    "linestyle", linespec.linestyle, "cdata", clev, opts{:})];
     else
       h = [h; patch(ax, p(1,:), p(2,:), clev * ones (1, columns (p)),
 		    "facecolor", "none", "edgecolor", linespec.color, 
-		    "linestyle", linespec.linestyle, "cdata", clev)];
+		    "linestyle", linespec.linestyle, "cdata", clev, opts{:})];
     endif
     i1 += clen+1;
   endwhile
   
 endfunction
diff --git a/scripts/plot/__go_draw_axes__.m b/scripts/plot/__go_draw_axes__.m
--- a/scripts/plot/__go_draw_axes__.m
+++ b/scripts/plot/__go_draw_axes__.m
@@ -689,16 +689,26 @@ function __go_draw_axes__ (h, plot_strea
 		   lt = "";
 		 otherwise
 		   lt = "";
 	       endswitch
 	     else
 	       lt = "";
 	     endif
 
+	     if (isfield (obj, "linewidth"))
+	       if (have_newer_gnuplot)
+		 lw = sprintf("linewidth %f", obj.linewidth);
+	       else
+		 lw = sprintf("lw %f", obj.linewidth);
+	       endif
+	     else
+	       lw  = "";
+	     endif
+
 	     if (isfield (obj, "marker"))
 	       if (isfield (obj, "marker"))
 		 switch (obj.marker)
 		   case "+"
 		     pt = "pt 1";
 		   case "o"
 		     pt = "pt 6";
 		   case "*"
@@ -763,18 +773,19 @@ function __go_draw_axes__ (h, plot_strea
 
 	     if (have_newer_gnuplot)
 	       if (mono)
 		 colorspec = "";
 	       else
 		 colorspec = sprintf ("lc rgb \"#%02x%02x%02x\"",
 				      round (255*color));
 	       endif
-	       withclause{data_idx} = sprintf ("with %s %s %s %s %s",
-					       style, pt, lt, ps, colorspec);
+	       withclause{data_idx} = sprintf ("with %s %s %s %s %s %s",
+					       style, lw, pt, lt, ps, 
+					       colorspec);
 	     else
 	       if (isequal (color, [0,0,0]))
 		 typ = -1;
 	       elseif (isequal (color, [1,0,0]))
 		 typ = 1;
 	       elseif (isequal (color, [0,1,0]))
 		 typ = 2;
 	       elseif (isequal (color, [0,0,1]))
@@ -785,18 +796,18 @@ function __go_draw_axes__ (h, plot_strea
 		 typ = 5;
 	       elseif (isequal (color, [1,1,1]))
 		 typ = -1;
 	       elseif (isequal (color, [1,1,0]))
 		 typ = 7;
 	       else
 		 typ = -1;
 	       endif
-	       withclause{data_idx} = sprintf ("with %s %s %s lt %d", 
-					       style, pt, ps, typ);
+	       withclause{data_idx} = sprintf ("with %s %s %s %s lt %d", 
+					       style, lw, pt, ps, typ);
 	     endif
 
 	     if (nd == 3)
 	       if (! isnan (xcol) && ! isnan (ycol) && ! isnan (zcol))
 		 data{data_idx} = [[xcol; xcol(1)], [ycol; ycol(1)], ...
 				   [zcol; zcol(1)]]';
 	       else
 		 data{data_idx} = [xcol, ycol, zcol]';
