# HG changeset patch
# User dbateman
# Date 1184058959 0
#      Tue Jul 10 09:15:59 2007 +0000
# Node ID ffaac3c723acf6c88a8e3b46d34255b8397ac552
# Parent  babcbcc11ab66b4b5fc02e64b7bd37c71fa556c0
[project @ 2007-07-10 09:15:58 by dbateman]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2007-06-27  David Bateman  <dbateman@free.fr>
+
+	* DLD-FUNCTIONS/sparse.cc (Fspdiag): Ensure spdiag(zeros(1,0)) returns
+	0x0 matrix.
+
 2007-06-28  John W. Eaton  <jwe@octave.org>
 
 	* ov-cell.cc (octave_cell::subsasgn): Given x = {}, convert to
 	struct for assignments like x(1).f = val;
 
 	* oct-stream.cc (octave_scan_1): New function
 	(octave_scan): Use it.  Handle fmt.width.
 
diff --git a/src/DLD-FUNCTIONS/sparse.cc b/src/DLD-FUNCTIONS/sparse.cc
--- a/src/DLD-FUNCTIONS/sparse.cc
+++ b/src/DLD-FUNCTIONS/sparse.cc
@@ -1021,16 +1021,31 @@ make_spdiag (const octave_value& a, cons
 	}
     }
   else
     gripe_wrong_type_arg ("spdiag", a);
 
   return retval;
 }
 
+static octave_value
+make_spdiag (const octave_value& a)
+{
+  octave_value retval;
+  octave_idx_type nr = a.rows ();
+  octave_idx_type nc = a.columns ();
+
+  if (nr == 0 || nc == 0)
+    retval = SparseMatrix ();
+  else
+    retval = make_spdiag (a, octave_value (0.));
+
+  return retval;
+}
+
 // PKG_ADD: dispatch ("diag", "spdiag", "sparse matrix");
 // PKG_ADD: dispatch ("diag", "spdiag", "sparse complex matrix");
 // PKG_ADD: dispatch ("diag", "spdiag", "sparse bool matrix");
 DEFUN_DLD (spdiag, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {} spdiag (@var{v}, @var{k})\n\
 Return a diagonal matrix with the sparse vector @var{v} on diagonal\n\
 @var{k}. The second argument is optional. If it is positive, the vector is\n\
@@ -1050,17 +1065,17 @@ Compressed Column Sparse (rows=4, cols=4
 @seealso{diag}\n\
 @end deftypefn")
 {
   octave_value retval;
 
   int nargin = args.length ();
 
   if (nargin == 1 && args(0).is_defined ())
-    retval = make_spdiag (args(0), octave_value(0.));
+    retval = make_spdiag (args(0));
   else if (nargin == 2 && args(0).is_defined () && args(1).is_defined ())
     retval = make_spdiag (args(0), args(1));
   else
     print_usage ();
 
   return retval;
 }
 
