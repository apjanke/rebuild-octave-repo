# HG changeset patch
# User Rik <rik@octave.org>
# Date 1429286992 25200
#      Fri Apr 17 09:09:52 2015 -0700
# Node ID 4d0c7fec0a315c2c551488acff2d7a3ff61a42db
# Parent  ade6e5ae61644f7afc7ca8865a2ec6eb2fc8a58d
doc: Explain treatment of strings by isindex() (bug #44855).

* utils.cc (Fisindex): Add explanation of how strings are treated by isindex.

diff --git a/libinterp/corefcn/utils.cc b/libinterp/corefcn/utils.cc
--- a/libinterp/corefcn/utils.cc
+++ b/libinterp/corefcn/utils.cc
@@ -1351,21 +1351,26 @@ octave_sleep (double seconds)
       octave_quit ();
     }
 }
 
 DEFUN (isindex, args, ,
        "-*- texinfo -*-\n\
 @deftypefn  {Built-in Function} {} isindex (@var{ind})\n\
 @deftypefnx {Built-in Function} {} isindex (@var{ind}, @var{n})\n\
-Return true if @var{ind} is a valid index.  Valid indices are\n\
-either positive integers (although possibly of real data type), or logical\n\
-arrays.  If present, @var{n} specifies the maximum extent of the dimension\n\
-to be indexed.  When possible the internal result is cached so that\n\
-subsequent indexing using @var{ind} will not perform the check again.\n\
+Return true if @var{ind} is a valid index.\n\
+\n\
+Valid indices are either positive integers (although possibly of real data\n\
+type), or logical arrays.  If present, @var{n} specifies the maximum extent\n\
+of the dimension to be indexed.  When possible the internal result is cached\n\
+so that subsequent indexing using @var{ind} will not perform the check again.\n\
+\n\
+Implementation Note: Strings are first converted to double values before the\n\
+checks for valid indices are made.  Unless a string contains the NULL\n\
+character \"\\0\", it will always be a valid index.\n\
 @end deftypefn")
 {
   octave_value retval;
   int nargin = args.length ();
   octave_idx_type n = 0;
 
   if (nargin == 2)
     n = args(1).idx_type_value ();
