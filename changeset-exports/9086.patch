# HG changeset patch
# User David Bateman <dbateman@free.fr>
# Date 1238790593 -7200
#      Fri Apr 03 22:29:53 2009 +0200
# Node ID 4218f9515258c872031dea6aaf7a1103edb67d09
# Parent  136e72b9afa8ce589acf8f7babfd2b8212e5e96b
Allow sparse logical max/min

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2008-04-03  David Bateman  <dbateman@free.fr>
+
+	* DLD-FUNCTIONS/max.cc (MINMAX_SPARSE_BODY): Allow sparse boolean 
+	values.
+
 2009-04-01  Jaroslav Hajek  <highegg@gmail.com>
 
 	* ov-str-mat.cc (default_numeric_conversion_function):
 	Create an octave_scalar if possible.
 
 2009-03-29  John W. Eaton  <jwe@octave.org>
 
 	* DLD-FUNCTIONS/fltk_backend.cc (plot_window::button_press):
diff --git a/src/DLD-FUNCTIONS/max.cc b/src/DLD-FUNCTIONS/max.cc
--- a/src/DLD-FUNCTIONS/max.cc
+++ b/src/DLD-FUNCTIONS/max.cc
@@ -463,32 +463,30 @@ along with Octave; see the file COPYING.
 }
 
 #define MINMAX_SPARSE_BODY(FCN) \
 { \
   bool single_arg = (nargin == 1) || arg2.is_empty();	\
  \
   if (single_arg && (nargout == 1 || nargout == 0)) \
     { \
-      if (arg1.type_id () == octave_sparse_matrix::static_type_id ()) \
+      if (arg1.is_real_type ()) \
 	retval(0) = arg1.sparse_matrix_value () .FCN (dim); \
-      else if (arg1.type_id () == \
-	       octave_sparse_complex_matrix::static_type_id ()) \
+      else if (arg1.is_complex_type ()) \
 	retval(0) = arg1.sparse_complex_matrix_value () .FCN (dim); \
       else \
 	gripe_wrong_type_arg (#FCN, arg1); \
     } \
   else if (single_arg && nargout == 2) \
     { \
       Array2<octave_idx_type> index; \
  \
-      if (arg1.type_id () == octave_sparse_matrix::static_type_id ()) \
+      if (arg1.is_real_type ()) \
 	retval(0) = arg1.sparse_matrix_value () .FCN (index, dim); \
-      else if (arg1.type_id () == \
-	       octave_sparse_complex_matrix::static_type_id ()) \
+      else if (arg1.is_complex_type ()) \
 	retval(0) = arg1.sparse_complex_matrix_value () .FCN (index, dim); \
       else \
 	gripe_wrong_type_arg (#FCN, arg1); \
  \
       octave_idx_type len = index.numel (); \
  \
       if (len > 0) \
 	retval(1) = NDArray (index, true, true);	\
