# HG changeset patch
# User Jacob Dawid <jacob.dawid@googlemail.com>
# Date 1302095059 -7200
#      Wed Apr 06 15:04:19 2011 +0200
# Node ID 642978643d3f66429d5f14ebd31029915ea6051b
# Parent  6442fb2e1dfa3c9218e611594c1b588159a1344d
Imaginary numbers are rendered correctly.

diff --git a/gui//octaveterminal.cpp b/gui//octaveterminal.cpp
--- a/gui//octaveterminal.cpp
+++ b/gui//octaveterminal.cpp
@@ -45,16 +45,17 @@ OctaveTerminal::OctaveTerminal(QWidget *
     blockUserInput();
     connect(m_commandLine, SIGNAL(claimCommand(QString)), this, SLOT(sendCommand(QString)));
     connect(showEnvironmentButton, SIGNAL(clicked()), this, SLOT(showEnvironment()));
 
     m_terminalHighlighter = new TerminalHighlighter(m_octaveOutput->document());
 }
 
 void OctaveTerminal::sendCommand(QString command) {
+    m_octaveOutput->append(">" + command);
     addRequest(command + "\n");
 }
 
 void OctaveTerminal::blockUserInput() {
     m_commandLine->setEnabled(false);
 }
 
 void OctaveTerminal::allowUserInput() {
diff --git a/gui//terminalhighlighter.cpp b/gui//terminalhighlighter.cpp
--- a/gui//terminalhighlighter.cpp
+++ b/gui//terminalhighlighter.cpp
@@ -32,17 +32,17 @@ TerminalHighlighter::TerminalHighlighter
     foreach (const QString &pattern, keywordPatterns) {
         rule.pattern = QRegExp(pattern);
         rule.format = keywordFormat;
         highlightingRules.append(rule);
     }
 
     numberFormat.setForeground(Qt::darkGreen);
     numberFormat.setFontWeight(QFont::Bold);
-    rule.pattern = QRegExp("\\b[0-9\\.]+\\b");
+    rule.pattern = QRegExp("\\b[0-9\\.]+[i]?\\b");
     rule.format = numberFormat;
     highlightingRules.append(rule);
 
     urlFormat.setForeground(Qt::darkBlue);
     rule.pattern = QRegExp("\\bhttp://[^\\s]+\\b");
     rule.format = urlFormat;
     highlightingRules.append(rule);
 
