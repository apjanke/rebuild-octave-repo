# HG changeset patch
# User Rik <rik@octave.org>
# Date 1546634450 28800
#      Fri Jan 04 12:40:50 2019 -0800
# Branch stable
# Node ID 93c7fc75b1039e52d16b89ecb2820706bcb94b77
# Parent  3e43775ab21c7341cd6b2473766c7254037b86a3
dynamic-ld.cc: Fix static analyzer detected issues (bug #55347).

* dynamic-ld.cc (dynamic_loader::load_mex): Declare and initialize *function in
one statement.  Move error validation ahead of normal code.

* dynamic-ld.cc (remove_mex): Delete duplicate code and simply call
remove_oct() function.

diff --git a/libinterp/corefcn/dynamic-ld.cc b/libinterp/corefcn/dynamic-ld.cc
--- a/libinterp/corefcn/dynamic-ld.cc
+++ b/libinterp/corefcn/dynamic-ld.cc
@@ -220,43 +220,40 @@ namespace octave
 
         if (mex_file)
           m_loaded_shlibs.append (mex_file);
       }
 
     if (! mex_file)
       error ("%s is not a valid shared library", file_name.c_str ());
 
-    void *function = nullptr;
-
     bool have_fmex = false;
 
-    function = mex_file.search (fcn_name, mex_mangler);
+    void *function = mex_file.search (fcn_name, mex_mangler);
 
     if (! function)
       {
-        // FIXME: can we determine this C mangling scheme
-        // automatically at run time or configure time?
-
+        // FIXME: Can we determine this C mangling scheme
+        //        automatically at run time or configure time?
         function = mex_file.search (fcn_name, mex_uscore_mangler);
 
         if (! function)
           {
             function = mex_file.search (fcn_name, mex_f77_mangler);
 
             if (function)
               have_fmex = true;
           }
       }
 
-    if (function)
-      retval = new octave_mex_function (function, have_fmex, mex_file, fcn_name);
-    else
+    if (! function)
       error ("failed to install .mex file function '%s'", fcn_name.c_str ());
 
+    retval = new octave_mex_function (function, have_fmex, mex_file, fcn_name);
+
     return retval;
   }
 
   bool
   dynamic_loader::remove_oct (const std::string& fcn_name,
                               dynamic_library& shl)
   {
     bool retval = false;
@@ -274,30 +271,18 @@ namespace octave
 
     return retval;
   }
 
   bool
   dynamic_loader::remove_mex (const std::string& fcn_name,
                               dynamic_library& shl)
   {
-    bool retval = false;
-
-    // We don't need to do anything if this is called because we are in
-    // the process of reloading a .oct file that has changed.
-
-    if (! m_doing_load)
-      {
-        retval = shl.remove (fcn_name);
-
-        if (shl.number_of_functions_loaded () == 0)
-          m_loaded_shlibs.remove (shl);
-      }
-
-    return retval;
+    // Use the same procedure as for oct files.
+    return remove_oct (fcn_name, shl);
   }
 
   std::string
   dynamic_loader::name_mangler (const std::string& name)
   {
     return 'G' + name;
   }
 
