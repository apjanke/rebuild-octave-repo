# HG changeset patch
# User Rik <rik@octave.org>
# Date 1521659059 25200
#      Wed Mar 21 12:04:19 2018 -0700
# Branch stable
# Node ID ba9d37893822d3ec79771a8195b55871e968b0d4
# Parent  23b5c067805165f9d2a75e812d7874330fb9cbb2
build: Don't built special Qt Help files when --without-qt used (bug #53394)

* configure.ac: Create new AM_CONDITIONAL named AMCOND_BUILD_QT_DOCS
which is valid only when the Qt GUI is being build and documentation
is being built.

* doc/interpreter/module.mk: Use "if AMCOND_BUILD_QT_DOCS"/"endif" to
surround the code used to generate special Qt Help files.

diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -2902,16 +2902,19 @@ if test $ENABLE_DOCS = yes; then
   fi
 fi
 if test $ENABLE_DOCS = yes; then
   AC_DEFINE(ENABLE_DOCS, 1,
     [Define to 1 to build Octave documentation files.])
 fi
 AM_CONDITIONAL([AMCOND_BUILD_DOCS], [test $ENABLE_DOCS = yes])
 
+AM_CONDITIONAL([AMCOND_BUILD_QT_DOCS],
+               [test $ENABLE_DOCS = yes && test $build_qt_gui = yes])
+
 ### Determine whether Mercurial ID should be embedded in library binaries.
 
 ENABLE_HG_ID=yes
 AC_ARG_ENABLE([hg-id],
   [AS_HELP_STRING([--disable-hg-id],
     [disable embedding of hg id in libraries])],
   [if test "$enableval" = no; then ENABLE_HG_ID=no; fi], [])
 AM_CONDITIONAL([AMCOND_ENABLE_HG_ID], [test $ENABLE_HG_ID = yes])
diff --git a/doc/interpreter/module.mk b/doc/interpreter/module.mk
--- a/doc/interpreter/module.mk
+++ b/doc/interpreter/module.mk
@@ -187,38 +187,42 @@ HTMLS += %reldir%/octave.html
 
 OCTAVE_HTML_DIR = %reldir%/octave.html
 OCTAVE_HTML_TMP_DIR = $(OCTAVE_HTML_DIR:.html=.htp)
 OCTAVE_HTML_STAMP = $(OCTAVE_HTML_DIR)/.octave-html-stamp
 
 OCTAVE_CSS = %reldir%/octave.css
 HTMLDIR_CSS = $(OCTAVE_HTML_DIR)/octave.css
 
+$(srcdir)/%reldir%/octave.info: $(DOC_IMAGES_TXT) $(octave_TEXINFOS)
+%reldir%/octave.dvi: $(DOC_IMAGES_EPS) $(octave_TEXINFOS)
+%reldir%/octave.pdf: $(DOC_IMAGES_PDF) $(octave_TEXINFOS)
+$(OCTAVE_HTML_STAMP): $(DOC_IMAGES_PNG) $(octave_TEXINFOS)
+
+if AMCOND_BUILD_QT_DOCS
+
 OCTAVE_QTHELP_FILES = %reldir%/octave_interpreter.qhc %reldir%/octave_interpreter.qch
 
 octdoc_DATA += \
   $(OCTAVE_QTHELP_FILES)
 
-$(srcdir)/%reldir%/octave.info: $(DOC_IMAGES_TXT) $(octave_TEXINFOS)
-%reldir%/octave.dvi: $(DOC_IMAGES_EPS) $(octave_TEXINFOS)
-%reldir%/octave.pdf: $(DOC_IMAGES_PDF) $(octave_TEXINFOS)
-$(OCTAVE_HTML_STAMP): $(DOC_IMAGES_PNG) $(octave_TEXINFOS)
-
 $(OCTAVE_QTHELP_FILES): $(OCTAVE_HTML_STAMP) $(srcdir)/%reldir%/mk_qthelp.pl
 	$(AM_V_GEN)rm -f $(OCTAVE_QTHELP_FILES) && \
 	$(PERL) $(srcdir)/%reldir%/mk_qthelp.pl octave.html %reldir%/octave_interpreter && \
 	$(QCOLLECTIONGENERATOR) $(QCOLLECTIONGENERATORFLAGS) %reldir%/octave_interpreter.qhcp -o %reldir%/octave_interpreter.qhc >/dev/null && \
 	rm -f %reldir%/octave_interpreter.qhcp %reldir%/octave_interpreter.qhp
 
 ## The Qt help collection generator command produces two output files
 ## with the same base name: the compressed help (qch) file and the help
 ## collection (qhc) file.  Declare the qhc file to depend on the
 ## associated qch file, so that the files are built serially.
 %reldir%/octave_interpreter.qhc: %reldir%/octave_interpreter.qch
 
+endif
+
 $(srcdir)/%reldir%/octave.info: %reldir%/octave.texi $(srcdir)/%reldir%/version-octave.texi
 	$(AM_V_MAKEINFO)restore=: && backupdir="$(am__leading_dot)am$$$$" && \
 	am__cwd=`pwd` && $(am__cd) $(srcdir) && \
 	rm -rf $$backupdir && mkdir $$backupdir && \
 	if ($(MAKEINFO) --version) >/dev/null 2>&1; then \
 	  for f in $@ $@-[0-9] $@-[0-9][0-9] $(@:.info=).i[0-9] $(@:.info=).i[0-9][0-9]; do \
 	    if test -f $$f; then mv $$f $$backupdir; restore=mv; else :; fi; \
 	  done; \
