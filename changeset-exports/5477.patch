# HG changeset patch
# User jwe
# Date 1128057998 0
#      Fri Sep 30 05:26:38 2005 +0000
# Node ID 9e59c91ddc99f5ca97945bc111c8b652acdfccf7
# Parent  941f0fc6b596be29db8edf5b92ad1e0f3eb2b897
[project @ 2005-09-30 05:26:38 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2005-09-30  John W. Eaton  <jwe@octave.org>
+
+	* ov.cc (octave_value::~octave_value): No need to set rep to zero
+	after deleting.
+
 2005-09-29  John W. Eaton  <jwe@octave.org>
 
 	* syscalls.cc (mk_stat_map): Store mode too.
 	(FS_ISREG, FS_ISDIR, FS_ISCHR, FS_ISBLK, FS_ISFIFO, FS_ISLNK,
 	FS_ISSOCK): New functions.
 	(Fstat): Fix docstring.
 
 2005-09-28  John W. Eaton  <jwe@octave.org>
diff --git a/src/ov.cc b/src/ov.cc
--- a/src/ov.cc
+++ b/src/ov.cc
@@ -411,36 +411,28 @@ octave_value::octave_value (octave_time 
 
 octave_value::octave_value (double d)
   : rep (new octave_scalar (d))
 {
   rep->count = 1;
 }
 
 octave_value::octave_value (const Cell& c, bool is_csl)
-  : rep (0)
+  : rep (is_csl
+	 ? dynamic_cast<octave_value *> (new octave_cs_list (c))
+	 : dynamic_cast<octave_value *> (new octave_cell (c)))
 {
-  if (is_csl)
-    rep = new octave_cs_list (c);
-  else
-    rep = new octave_cell (c);
-
   rep->count = 1;
 }
 
 octave_value::octave_value (const ArrayN<octave_value>& a, bool is_csl)
-  : rep (0)
+  : rep (is_csl
+	 ? dynamic_cast<octave_value *> (new octave_cs_list (Cell (a)))
+	 : dynamic_cast<octave_value *> (new octave_cell (Cell (a))))
 {
-  Cell c (a);
-
-  if (is_csl)
-    rep = new octave_cs_list (c);
-  else
-    rep = new octave_cell (c);
-
   rep->count = 1;
 }
 
 octave_value::octave_value (const Matrix& m)
   : rep (new octave_matrix (m))
 {
   rep->count = 1;
   maybe_mutate ();
@@ -774,23 +766,20 @@ octave_value::octave_value (const Octave
 
 octave_value::octave_value (const streamoff_array& off)
   : rep (new octave_streamoff (off))
 {
   rep->count = 1;
 }
 
 octave_value::octave_value (const octave_value_list& l, bool is_csl)
-  : rep (0)
+  : rep (is_csl
+	 ? dynamic_cast<octave_value *> (new octave_cs_list (l))
+	 : dynamic_cast<octave_value *> (new octave_list (l)))
 {
-  if (is_csl)
-    rep = new octave_cs_list (l);
-  else
-    rep = new octave_list (l);
-
   rep->count = 1;
 }
 
 octave_value::octave_value (octave_value::magic_colon)
   : rep (new octave_magic_colon ())
 {
   rep->count = 1;
 }
@@ -810,20 +799,17 @@ octave_value::octave_value (octave_value
 octave_value::~octave_value (void)
 {
 #if defined (MDEBUG)
   std::cerr << "~octave_value: rep: " << rep
 	    << " rep->count: " << rep->count << "\n";
 #endif
 
   if (rep && --rep->count == 0)
-    {
-      delete rep;
-      rep = 0;
-    }
+    delete rep;
 }
 
 octave_value *
 octave_value::clone (void) const
 {
   panic_impossible ();
   return 0;
 }
