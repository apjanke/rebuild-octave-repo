# HG changeset patch
# User Michael Goffioul <michael.goffioul@gmail.com>
# Date 1314996190 -3600
#      Fri Sep 02 21:43:10 2011 +0100
# Branch stable
# Node ID 70d32160c90b14fa03f60b2f7e6e5a35c9d2051b
# Parent  50a27a3b5131ab0aa6bd7df0fc7b7df63df2da44
Make more symbols for export.

* liboctave/randgamma.h: Add OCTAVE_API modifier to oct_randg and
oct_fill_randg
* liboctave/randmtzig.h: Add OCTAVE_API modifier to oct_init_by_int,
oct_init_by_array, oct_init_by_entropy, oct_get_state, oct_set_state,
oct_randu, oct_randn, oct_rande, oct_fill_randu, oct_fill_randn and
oct_fill_rande.
* liboctave/randpoisson.h: Add OCTAVE_API modifier to oct_randp and
oct_fill_randp.
* src/xpow.h: Add OCTINTERP_API modifier to xpow and elem_xpow (all variants).

diff --git a/liboctave/randgamma.h b/liboctave/randgamma.h
old mode 100644
new mode 100755
--- a/liboctave/randgamma.h
+++ b/liboctave/randgamma.h
@@ -24,15 +24,15 @@ along with Octave; see the file COPYING.
    software in the in the public domain.  */
 
 #ifndef _RANDGAMMA_H
 
 #ifdef  __cplusplus
 extern "C" {
 #endif
 
-extern double oct_randg (double a);
-extern void oct_fill_randg (double a, octave_idx_type n, double *p);
+extern OCTAVE_API double oct_randg (double a);
+extern OCTAVE_API void oct_fill_randg (double a, octave_idx_type n, double *p);
 
 #ifdef  __cplusplus
 }
 #endif
 #endif
diff --git a/liboctave/randmtzig.h b/liboctave/randmtzig.h
old mode 100644
new mode 100755
--- a/liboctave/randmtzig.h
+++ b/liboctave/randmtzig.h
@@ -66,28 +66,28 @@ along with Octave; see the file COPYING.
 
 #define MT_N 624
 
 #ifdef  __cplusplus
 extern "C" {
 #endif
 
 /* === Mersenne Twister === */
-extern void oct_init_by_int (uint32_t s);
-extern void oct_init_by_array (uint32_t init_key[], int key_length);
-extern void oct_init_by_entropy (void);
-extern void oct_set_state (uint32_t save[]);
-extern void oct_get_state (uint32_t save[]);
+extern OCTAVE_API void oct_init_by_int (uint32_t s);
+extern OCTAVE_API void oct_init_by_array (uint32_t init_key[], int key_length);
+extern OCTAVE_API void oct_init_by_entropy (void);
+extern OCTAVE_API void oct_set_state (uint32_t save[]);
+extern OCTAVE_API void oct_get_state (uint32_t save[]);
 
 /* === Array generators === */
-extern double oct_randu (void);
-extern double oct_randn (void);
-extern double oct_rande (void);
+extern OCTAVE_API double oct_randu (void);
+extern OCTAVE_API double oct_randn (void);
+extern OCTAVE_API double oct_rande (void);
 
 /* === Array generators === */
-extern void oct_fill_randu (octave_idx_type n, double *p);
-extern void oct_fill_randn (octave_idx_type n, double *p);
-extern void oct_fill_rande (octave_idx_type n, double *p);
+extern OCTAVE_API void oct_fill_randu (octave_idx_type n, double *p);
+extern OCTAVE_API void oct_fill_randn (octave_idx_type n, double *p);
+extern OCTAVE_API void oct_fill_rande (octave_idx_type n, double *p);
 
 #ifdef  __cplusplus
 }
 #endif
 #endif
diff --git a/liboctave/randpoisson.h b/liboctave/randpoisson.h
old mode 100644
new mode 100755
--- a/liboctave/randpoisson.h
+++ b/liboctave/randpoisson.h
@@ -24,15 +24,15 @@ along with Octave; see the file COPYING.
    software in the in the public domain.  */
 
 #ifndef _RANDPOISSON_H
 
 #ifdef  __cplusplus
 extern "C" {
 #endif
 
-extern double oct_randp (double L);
-extern void oct_fill_randp (double L, octave_idx_type n, double *p);
+extern OCTAVE_API double oct_randp (double L);
+extern OCTAVE_API void oct_fill_randp (double L, octave_idx_type n, double *p);
 
 #ifdef  __cplusplus
 }
 #endif
 #endif
diff --git a/src/xpow.h b/src/xpow.h
old mode 100644
new mode 100755
--- a/src/xpow.h
+++ b/src/xpow.h
@@ -36,123 +36,123 @@ class FloatComplexDiagMatrix;
 class PermMatrix;
 class NDArray;
 class FloatNDArray;
 class ComplexNDArray;
 class FloatComplexNDArray;
 class octave_value;
 class Range;
 
-extern octave_value xpow (double a, double b);
-extern octave_value xpow (double a, const Matrix& b);
-extern octave_value xpow (double a, const Complex& b);
-extern octave_value xpow (double a, const ComplexMatrix& b);
+extern OCTINTERP_API octave_value xpow (double a, double b);
+extern OCTINTERP_API octave_value xpow (double a, const Matrix& b);
+extern OCTINTERP_API octave_value xpow (double a, const Complex& b);
+extern OCTINTERP_API octave_value xpow (double a, const ComplexMatrix& b);
 
-extern octave_value xpow (const Matrix& a, double b);
-extern octave_value xpow (const Matrix& a, const Complex& b);
+extern OCTINTERP_API octave_value xpow (const Matrix& a, double b);
+extern OCTINTERP_API octave_value xpow (const Matrix& a, const Complex& b);
 
-extern octave_value xpow (const DiagMatrix& a, double b);
-extern octave_value xpow (const DiagMatrix& a, const Complex& b);
+extern OCTINTERP_API octave_value xpow (const DiagMatrix& a, double b);
+extern OCTINTERP_API octave_value xpow (const DiagMatrix& a, const Complex& b);
 
-extern octave_value xpow (const PermMatrix& a, double b);
+extern OCTINTERP_API octave_value xpow (const PermMatrix& a, double b);
 
-extern octave_value xpow (const Complex& a, double b);
-extern octave_value xpow (const Complex& a, const Matrix& b);
-extern octave_value xpow (const Complex& a, const Complex& b);
-extern octave_value xpow (const Complex& a, const ComplexMatrix& b);
+extern OCTINTERP_API octave_value xpow (const Complex& a, double b);
+extern OCTINTERP_API octave_value xpow (const Complex& a, const Matrix& b);
+extern OCTINTERP_API octave_value xpow (const Complex& a, const Complex& b);
+extern OCTINTERP_API octave_value xpow (const Complex& a, const ComplexMatrix& b);
 
-extern octave_value xpow (const ComplexMatrix& a, double b);
-extern octave_value xpow (const ComplexMatrix& a, const Complex& b);
+extern OCTINTERP_API octave_value xpow (const ComplexMatrix& a, double b);
+extern OCTINTERP_API octave_value xpow (const ComplexMatrix& a, const Complex& b);
 
-extern octave_value xpow (const ComplexDiagMatrix& a, double b);
-extern octave_value xpow (const ComplexDiagMatrix& a, const Complex& b);
+extern OCTINTERP_API octave_value xpow (const ComplexDiagMatrix& a, double b);
+extern OCTINTERP_API octave_value xpow (const ComplexDiagMatrix& a, const Complex& b);
 
-extern octave_value elem_xpow (double a, const Matrix& b);
-extern octave_value elem_xpow (double a, const ComplexMatrix& b);
-extern octave_value elem_xpow (double a, const Range& r);
+extern OCTINTERP_API octave_value elem_xpow (double a, const Matrix& b);
+extern OCTINTERP_API octave_value elem_xpow (double a, const ComplexMatrix& b);
+extern OCTINTERP_API octave_value elem_xpow (double a, const Range& r);
 
-extern octave_value elem_xpow (const Matrix& a, double b);
-extern octave_value elem_xpow (const Matrix& a, const Matrix& b);
-extern octave_value elem_xpow (const Matrix& a, const Complex& b);
-extern octave_value elem_xpow (const Matrix& a, const ComplexMatrix& b);
+extern OCTINTERP_API octave_value elem_xpow (const Matrix& a, double b);
+extern OCTINTERP_API octave_value elem_xpow (const Matrix& a, const Matrix& b);
+extern OCTINTERP_API octave_value elem_xpow (const Matrix& a, const Complex& b);
+extern OCTINTERP_API octave_value elem_xpow (const Matrix& a, const ComplexMatrix& b);
 
-extern octave_value elem_xpow (const Complex& a, const Matrix& b);
-extern octave_value elem_xpow (const Complex& a, const ComplexMatrix& b);
-extern octave_value elem_xpow (const Complex& a, const Range& r);
+extern OCTINTERP_API octave_value elem_xpow (const Complex& a, const Matrix& b);
+extern OCTINTERP_API octave_value elem_xpow (const Complex& a, const ComplexMatrix& b);
+extern OCTINTERP_API octave_value elem_xpow (const Complex& a, const Range& r);
 
-extern octave_value elem_xpow (const ComplexMatrix& a, double b);
-extern octave_value elem_xpow (const ComplexMatrix& a, const Matrix& b);
-extern octave_value elem_xpow (const ComplexMatrix& a, const Complex& b);
-extern octave_value elem_xpow (const ComplexMatrix& a, const ComplexMatrix& b);
+extern OCTINTERP_API octave_value elem_xpow (const ComplexMatrix& a, double b);
+extern OCTINTERP_API octave_value elem_xpow (const ComplexMatrix& a, const Matrix& b);
+extern OCTINTERP_API octave_value elem_xpow (const ComplexMatrix& a, const Complex& b);
+extern OCTINTERP_API octave_value elem_xpow (const ComplexMatrix& a, const ComplexMatrix& b);
 
 
-extern octave_value elem_xpow (double a, const NDArray& b);
-extern octave_value elem_xpow (double a, const ComplexNDArray& b);
+extern OCTINTERP_API octave_value elem_xpow (double a, const NDArray& b);
+extern OCTINTERP_API octave_value elem_xpow (double a, const ComplexNDArray& b);
 
-extern octave_value elem_xpow (const NDArray& a, double b);
-extern octave_value elem_xpow (const NDArray& a, const NDArray& b);
-extern octave_value elem_xpow (const NDArray& a, const Complex& b);
-extern octave_value elem_xpow (const NDArray& a, const ComplexNDArray& b);
+extern OCTINTERP_API octave_value elem_xpow (const NDArray& a, double b);
+extern OCTINTERP_API octave_value elem_xpow (const NDArray& a, const NDArray& b);
+extern OCTINTERP_API octave_value elem_xpow (const NDArray& a, const Complex& b);
+extern OCTINTERP_API octave_value elem_xpow (const NDArray& a, const ComplexNDArray& b);
 
-extern octave_value elem_xpow (const Complex& a, const NDArray& b);
-extern octave_value elem_xpow (const Complex& a, const ComplexNDArray& b);
+extern OCTINTERP_API octave_value elem_xpow (const Complex& a, const NDArray& b);
+extern OCTINTERP_API octave_value elem_xpow (const Complex& a, const ComplexNDArray& b);
 
-extern octave_value elem_xpow (const ComplexNDArray& a, double b);
-extern octave_value elem_xpow (const ComplexNDArray& a, const NDArray& b);
-extern octave_value elem_xpow (const ComplexNDArray& a, const Complex& b);
-extern octave_value elem_xpow (const ComplexNDArray& a, const ComplexNDArray& b);
+extern OCTINTERP_API octave_value elem_xpow (const ComplexNDArray& a, double b);
+extern OCTINTERP_API octave_value elem_xpow (const ComplexNDArray& a, const NDArray& b);
+extern OCTINTERP_API octave_value elem_xpow (const ComplexNDArray& a, const Complex& b);
+extern OCTINTERP_API octave_value elem_xpow (const ComplexNDArray& a, const ComplexNDArray& b);
 
-extern octave_value xpow (float a, float b);
-extern octave_value xpow (float a, const FloatMatrix& b);
-extern octave_value xpow (float a, const FloatComplex& b);
-extern octave_value xpow (float a, const FloatComplexMatrix& b);
+extern OCTINTERP_API octave_value xpow (float a, float b);
+extern OCTINTERP_API octave_value xpow (float a, const FloatMatrix& b);
+extern OCTINTERP_API octave_value xpow (float a, const FloatComplex& b);
+extern OCTINTERP_API octave_value xpow (float a, const FloatComplexMatrix& b);
 
-extern octave_value xpow (const FloatMatrix& a, float b);
-extern octave_value xpow (const FloatMatrix& a, const FloatComplex& b);
+extern OCTINTERP_API octave_value xpow (const FloatMatrix& a, float b);
+extern OCTINTERP_API octave_value xpow (const FloatMatrix& a, const FloatComplex& b);
 
-extern octave_value xpow (const FloatDiagMatrix& a, float b);
-extern octave_value xpow (const FloatDiagMatrix& a, const FloatComplex& b);
+extern OCTINTERP_API octave_value xpow (const FloatDiagMatrix& a, float b);
+extern OCTINTERP_API octave_value xpow (const FloatDiagMatrix& a, const FloatComplex& b);
 
-extern octave_value xpow (const FloatComplex& a, float b);
-extern octave_value xpow (const FloatComplex& a, const FloatMatrix& b);
-extern octave_value xpow (const FloatComplex& a, const FloatComplex& b);
-extern octave_value xpow (const FloatComplex& a, const FloatComplexMatrix& b);
+extern OCTINTERP_API octave_value xpow (const FloatComplex& a, float b);
+extern OCTINTERP_API octave_value xpow (const FloatComplex& a, const FloatMatrix& b);
+extern OCTINTERP_API octave_value xpow (const FloatComplex& a, const FloatComplex& b);
+extern OCTINTERP_API octave_value xpow (const FloatComplex& a, const FloatComplexMatrix& b);
 
-extern octave_value xpow (const FloatComplexMatrix& a, float b);
-extern octave_value xpow (const FloatComplexMatrix& a, const FloatComplex& b);
+extern OCTINTERP_API octave_value xpow (const FloatComplexMatrix& a, float b);
+extern OCTINTERP_API octave_value xpow (const FloatComplexMatrix& a, const FloatComplex& b);
 
-extern octave_value xpow (const FloatComplexDiagMatrix& a, float b);
-extern octave_value xpow (const FloatComplexDiagMatrix& a, const FloatComplex& b);
+extern OCTINTERP_API octave_value xpow (const FloatComplexDiagMatrix& a, float b);
+extern OCTINTERP_API octave_value xpow (const FloatComplexDiagMatrix& a, const FloatComplex& b);
 
-extern octave_value elem_xpow (float a, const FloatMatrix& b);
-extern octave_value elem_xpow (float a, const FloatComplexMatrix& b);
+extern OCTINTERP_API octave_value elem_xpow (float a, const FloatMatrix& b);
+extern OCTINTERP_API octave_value elem_xpow (float a, const FloatComplexMatrix& b);
 
-extern octave_value elem_xpow (const FloatMatrix& a, float b);
-extern octave_value elem_xpow (const FloatMatrix& a, const FloatMatrix& b);
-extern octave_value elem_xpow (const FloatMatrix& a, const FloatComplex& b);
-extern octave_value elem_xpow (const FloatMatrix& a, const FloatComplexMatrix& b);
+extern OCTINTERP_API octave_value elem_xpow (const FloatMatrix& a, float b);
+extern OCTINTERP_API octave_value elem_xpow (const FloatMatrix& a, const FloatMatrix& b);
+extern OCTINTERP_API octave_value elem_xpow (const FloatMatrix& a, const FloatComplex& b);
+extern OCTINTERP_API octave_value elem_xpow (const FloatMatrix& a, const FloatComplexMatrix& b);
 
-extern octave_value elem_xpow (const FloatComplex& a, const FloatMatrix& b);
-extern octave_value elem_xpow (const FloatComplex& a, const FloatComplexMatrix& b);
+extern OCTINTERP_API octave_value elem_xpow (const FloatComplex& a, const FloatMatrix& b);
+extern OCTINTERP_API octave_value elem_xpow (const FloatComplex& a, const FloatComplexMatrix& b);
 
-extern octave_value elem_xpow (const FloatComplexMatrix& a, float b);
-extern octave_value elem_xpow (const FloatComplexMatrix& a, const FloatMatrix& b);
-extern octave_value elem_xpow (const FloatComplexMatrix& a, const FloatComplex& b);
-extern octave_value elem_xpow (const FloatComplexMatrix& a, const FloatComplexMatrix& b);
+extern OCTINTERP_API octave_value elem_xpow (const FloatComplexMatrix& a, float b);
+extern OCTINTERP_API octave_value elem_xpow (const FloatComplexMatrix& a, const FloatMatrix& b);
+extern OCTINTERP_API octave_value elem_xpow (const FloatComplexMatrix& a, const FloatComplex& b);
+extern OCTINTERP_API octave_value elem_xpow (const FloatComplexMatrix& a, const FloatComplexMatrix& b);
 
 
-extern octave_value elem_xpow (float a, const FloatNDArray& b);
-extern octave_value elem_xpow (float a, const FloatComplexNDArray& b);
+extern OCTINTERP_API octave_value elem_xpow (float a, const FloatNDArray& b);
+extern OCTINTERP_API octave_value elem_xpow (float a, const FloatComplexNDArray& b);
 
-extern octave_value elem_xpow (const FloatNDArray& a, float b);
-extern octave_value elem_xpow (const FloatNDArray& a, const FloatNDArray& b);
-extern octave_value elem_xpow (const FloatNDArray& a, const FloatComplex& b);
-extern octave_value elem_xpow (const FloatNDArray& a, const FloatComplexNDArray& b);
+extern OCTINTERP_API octave_value elem_xpow (const FloatNDArray& a, float b);
+extern OCTINTERP_API octave_value elem_xpow (const FloatNDArray& a, const FloatNDArray& b);
+extern OCTINTERP_API octave_value elem_xpow (const FloatNDArray& a, const FloatComplex& b);
+extern OCTINTERP_API octave_value elem_xpow (const FloatNDArray& a, const FloatComplexNDArray& b);
 
-extern octave_value elem_xpow (const FloatComplex& a, const FloatNDArray& b);
-extern octave_value elem_xpow (const FloatComplex& a, const FloatComplexNDArray& b);
+extern OCTINTERP_API octave_value elem_xpow (const FloatComplex& a, const FloatNDArray& b);
+extern OCTINTERP_API octave_value elem_xpow (const FloatComplex& a, const FloatComplexNDArray& b);
 
-extern octave_value elem_xpow (const FloatComplexNDArray& a, float b);
-extern octave_value elem_xpow (const FloatComplexNDArray& a, const FloatNDArray& b);
-extern octave_value elem_xpow (const FloatComplexNDArray& a, const FloatComplex& b);
-extern octave_value elem_xpow (const FloatComplexNDArray& a, const FloatComplexNDArray& b);
+extern OCTINTERP_API octave_value elem_xpow (const FloatComplexNDArray& a, float b);
+extern OCTINTERP_API octave_value elem_xpow (const FloatComplexNDArray& a, const FloatNDArray& b);
+extern OCTINTERP_API octave_value elem_xpow (const FloatComplexNDArray& a, const FloatComplex& b);
+extern OCTINTERP_API octave_value elem_xpow (const FloatComplexNDArray& a, const FloatComplexNDArray& b);
 
 #endif
