# HG changeset patch
# User Rik <rik@octave.org>
# Date 1378254017 25200
#      Tue Sep 03 17:20:17 2013 -0700
# Node ID 1102c81e9d60fe50318ffd51fb9aaf06c09fdd45
# Parent  9b7ca74489c7a148f0b61384ca5b4a049d573f05
Eliminate hysteresis when using mouse wheel for zooming in FLTK.
Zooming in N steps and zooming out N steps now returns to original magnification.
* libinterp/dldfcn/__init_fltk__.cc(handle): Zoom by factor or 1/factor.

diff --git a/libinterp/dldfcn/__init_fltk__.cc b/libinterp/dldfcn/__init_fltk__.cc
--- a/libinterp/dldfcn/__init_fltk__.cc
+++ b/libinterp/dldfcn/__init_fltk__.cc
@@ -1387,17 +1387,17 @@ private:
                                                           Fl::event_y () - menu_dy ()));
               if (ax && ax.isa ("axes"))
                 {
                   axes::properties& ap =
                     dynamic_cast<axes::properties&> (ax.get_properties ());
 
                   // Determine if we're zooming in or out.
                   const double factor =
-                    (Fl::event_dy () > 0) ? 1.0 + Vwheel_zoom_speed
+                    (Fl::event_dy () > 0) ? 1 / (1.0 - Vwheel_zoom_speed)
                                           : 1.0 - Vwheel_zoom_speed;
 
                   // Get the point we're zooming about.
                   double x1, y1;
                   pixel2pos (ax, Fl::event_x (), Fl::event_y () - menu_dy (), x1, y1);
 
                   ap.zoom_about_point (x1, y1, factor, false);
                   mark_modified ();
