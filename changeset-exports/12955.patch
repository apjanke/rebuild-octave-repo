# HG changeset patch
# User Jordi Guti√©rrez Hermoso <jordigh@gmail.com>
# Date 1313115135 18000
#      Thu Aug 11 21:12:15 2011 -0500
# Node ID 05941540287cf8fc1c75813f51c563a0089362be
# Parent  a451ae847adba4df8ad5e0cacd3a511ec6ec2757
Style fixes on profiler internal functions

* profile.m: Change __foo_bar to __foo_bar__
* profiler.cc: Ditto

diff --git a/scripts/general/profile.m b/scripts/general/profile.m
--- a/scripts/general/profile.m
+++ b/scripts/general/profile.m
@@ -60,39 +60,39 @@
 function retval = profile (option)
 
   if (nargin != 1)
     print_usage ();
   endif
 
   switch (option)
     case 'on'
-      __profiler_reset ();
-      __profiler_enable (true);
+      __profiler_reset__ ();
+      __profiler_enable__ (true);
 
     case 'off'
-      __profiler_enable (false);
+      __profiler_enable__ (false);
 
     case 'clear'
-      __profiler_reset ();
+      __profiler_reset__ ();
 
     case 'resume'
-      __profiler_enable (true);
+      __profiler_enable__ (true);
 
     case 'status'
-      enabled = __profiler_enable ();
+      enabled = __profiler_enable__ ();
       if (enabled)
         enabled = 'on';
       else
         enabled = 'off';
       endif
       retval = struct ('ProfilerStatus', enabled);
 
     case 'info'
-      data = __profiler_data ();
+      data = __profiler_data__ ();
       retval = struct ('FunctionTable', data);
 
     otherwise
       warning ("profile: Unrecognized option '%s'", option);
       print_usage ();
 
   endswitch
 
diff --git a/src/profiler.cc b/src/profiler.cc
--- a/src/profiler.cc
+++ b/src/profiler.cc
@@ -347,17 +347,17 @@ profile_data_accumulator::add_current_ti
 
   assert (call_tree && active_fcn != call_tree);
   active_fcn->add_time (t - last_time);
 }
 
 profile_data_accumulator profiler;
 
 // Enable or disable the profiler data collection.
-DEFUN (__profiler_enable, args, ,
+DEFUN (__profiler_enable__, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Function File} __profiler_enable ()\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
   const int nargin = args.length ();
@@ -373,17 +373,17 @@ Undocumented internal function.\n\
     }
 
   retval(0) = profiler.is_active ();
 
   return retval;
 }
 
 // Clear all collected profiling data.
-DEFUN (__profiler_reset, args, ,
+DEFUN (__profiler_reset__, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Function File} __profiler_reset ()\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value_list retval;
   const int nargin = args.length ();
 
@@ -391,17 +391,17 @@ Undocumented internal function.\n\
     warning ("profiler_reset: ignoring extra arguments");
 
   profiler.reset ();
 
   return retval;
 }
 
 // Query the timings collected by the profiler.
-DEFUN (__profiler_data, args, nargout,
+DEFUN (__profiler_data__, args, nargout,
   "-*- texinfo -*-\n\
 @deftypefn {Function File} __profiler_data ()\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value_list retval;
   const int nargin = args.length ();
 
