# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1524580549 14400
#      Tue Apr 24 10:35:49 2018 -0400
# Branch stable
# Node ID 537b732926fb773f7796690a530c33b9439a76a0
# Parent  65b4b04600c67432c5f11b62635bc39a8770a64a
fix logic error in OCTAVE_CONFIG_LIB (bug #53736)

* acinclude.m4 (OCTAVE_CHECK_LIB): Don't allow PACKAGE_LIBS to be set
if the library is not found.  Previously this could happen in various
ways, including if the macro was used with an empty warning string.

diff --git a/m4/acinclude.m4 b/m4/acinclude.m4
--- a/m4/acinclude.m4
+++ b/m4/acinclude.m4
@@ -833,34 +833,37 @@ AC_DEFUN([OCTAVE_CHECK_LIB], [
         [AC_LINK_IFELSE([AC_LANG_CALL([], [$5])],
           [octave_cv_lib_$1=yes], [octave_cv_lib_$1=no])
       ])
       if test "$octave_cv_lib_$1" = yes; then
         m4_ifblank([$8], [
           warn_$1=
           AC_DEFINE([HAVE_]m4_toupper([$1]), 1,
             [Define to 1 if $2 is available.])], [$8])
+      else
+        m4_toupper([$1])_LIBS=
       fi
+    else
+      m4_toupper([$1])_LIBS=
     fi
     m4_ifnblank([$6], [AC_LANG_POP($6)])
     CPPFLAGS="$ac_octave_save_CPPFLAGS"
     LDFLAGS="$ac_octave_save_LDFLAGS"
     LIBS="$ac_octave_save_LIBS"
   else
     octave_cv_lib_$1=no
   fi
 
   ifelse([$#], 10, [
     if test $octave_cv_lib_$1 = no; then
       AC_MSG_ERROR([to build Octave, you must have the $2 library and header files installed])
     fi])
   AC_SUBST(m4_toupper([$1])_LIBS)
   if test -n "$warn_$1"; then
     OCTAVE_CONFIGURE_WARNING([warn_$1])
-    m4_toupper([$1])_LIBS=
   fi
 ])
 dnl
 dnl Check whether ARPACK works (does not crash).
 dnl
 dnl Using a pure Fortran program doesn't seem to crash when linked
 dnl with the buggy ARPACK library, but the C++ program does.  Maybe it
 dnl is the memory allocation that exposes the bug and using statically
