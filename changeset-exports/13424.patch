# HG changeset patch
# User Jacob Dawid <jacob.dawid@googlemail.com>
# Date 1302682093 -7200
#      Wed Apr 13 10:08:13 2011 +0200
# Node ID 13244262df8ce569e712ab5848bade57cfacf053
# Parent  ca927002fd98e6c16f737f6a0e8ec3ff03473fb4
Set dock widget titles to the same ones used in M.

diff --git a/gui//src/FilesDockWidget.cpp b/gui//src/FilesDockWidget.cpp
--- a/gui//src/FilesDockWidget.cpp
+++ b/gui//src/FilesDockWidget.cpp
@@ -1,16 +1,16 @@
 #include "FilesDockWidget.h"
 
 #include <QApplication>
 
 FilesDockWidget::FilesDockWidget(QWidget *parent)
   : QDockWidget(parent)
 {
-    setWindowTitle("Files");
+    setWindowTitle("Current Folder");
     setWidget(new QWidget(this));
 
     // Create a toolbar
     m_navigationToolBar = new QToolBar("", widget());
     m_navigationToolBar->setAllowedAreas(Qt::TopToolBarArea);
     m_navigationToolBar->setMovable(false);
     m_navigationToolBar->setIconSize(QSize (20,20));
 
diff --git a/gui//src/HistoryDockWidget.cpp b/gui//src/HistoryDockWidget.cpp
--- a/gui//src/HistoryDockWidget.cpp
+++ b/gui//src/HistoryDockWidget.cpp
@@ -26,17 +26,17 @@ HistoryDockWidget::HistoryDockWidget(QWi
 
 void HistoryDockWidget::construct() {
     m_historyListModel = new QStringListModel();
     m_historyListView = new QListView(this);
     m_historyListView->setModel(m_historyListModel);
 
     QHBoxLayout *layout = new QHBoxLayout();
 
-    setWindowTitle("History");
+    setWindowTitle("Command History");
     setWidget(new QWidget());
 
     layout->addWidget(m_historyListView);
     layout->setMargin(2);
 
     widget()->setLayout(layout);
 }
 
diff --git a/gui//src/MainWindow.cpp b/gui//src/MainWindow.cpp
--- a/gui//src/MainWindow.cpp
+++ b/gui//src/MainWindow.cpp
@@ -78,18 +78,18 @@ void MainWindow::constructWindow() {
     m_generalPurposeToolbar = new QToolBar("Octave Toolbar", this);
     m_variablesDockWidget = new VariablesDockWidget(this);
     m_historyDockWidget = new HistoryDockWidget(this);
     m_filesDockWidget = new FilesDockWidget(this);
     m_openedFiles = new QMdiArea(this);
     m_statusBar = new QStatusBar(this);
     m_browserWidget = new BrowserWidget(this);
     m_centralTabWidget = new QTabWidget(this);
-    m_centralTabWidget->addTab(m_octaveTerminal, "Terminal");
-    m_centralTabWidget->addTab(m_openedFiles, "Editor");
+    m_centralTabWidget->addTab(m_octaveTerminal, "Command Window");
+    m_centralTabWidget->addTab(m_openedFiles, "File Editor");
     m_centralTabWidget->addTab(m_browserWidget, "Documentation");
 
     // TODO: Add meaningfull toolbar items.
     QAction *commandAction = new QAction(style->standardIcon(QStyle::SP_CommandLink),
         "", m_generalPurposeToolbar);
     QAction *computerAction = new QAction(style->standardIcon(QStyle::SP_ComputerIcon),
         "", m_generalPurposeToolbar);
     m_generalPurposeToolbar->addAction(commandAction);
diff --git a/gui//src/VariablesDockWidget.cpp b/gui//src/VariablesDockWidget.cpp
--- a/gui//src/VariablesDockWidget.cpp
+++ b/gui//src/VariablesDockWidget.cpp
@@ -6,16 +6,16 @@ VariablesDockWidget::VariablesDockWidget
     construct();
 }
 
 void VariablesDockWidget::construct() {
     m_variablesTreeView = new QTreeView(this);
 
     QHBoxLayout *layout = new QHBoxLayout();
 
-    setWindowTitle("Variables");
+    setWindowTitle("Workspace");
     setWidget(new QWidget());
 
     layout->addWidget(m_variablesTreeView);
     layout->setMargin(2);
 
     widget()->setLayout(layout);
 }
