# HG changeset patch
# User jwe
# Date 1094685204 0
#      Wed Sep 08 23:13:24 2004 +0000
# Node ID 8719102eb804739aa973446e17bc01accd285d31
# Parent  3736fb91aa2d8f3ed41d99d9c1ba158901465434
[project @ 2004-09-08 23:13:24 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,13 @@
 2004-09-08  John W. Eaton  <jwe@octave.org>
 
+	* ov-fcn-handle.cc (Ffunc2str, Ffunctions): Don't call substr(1)
+	on fh_nm, since we no longer need to skip "@" in the name.
+
 	* error.cc (pr_where): Do a better job of printing location info.
 
 	* input.cc (get_user_input): Print location info before the debug
 	prompt.  From Keith Goodman <kwgoodman@gmail.com>.
 
 	* ov-usr-fcn.cc (octave_user_function::do_multi_index_op):
 	Save and set curr_caller_function and curr_caller_statement here.
 	* ov-mapper.cc (octave_mapper::do_multi_index_op): Likewise.
diff --git a/src/ov-fcn-handle.cc b/src/ov-fcn-handle.cc
--- a/src/ov-fcn-handle.cc
+++ b/src/ov-fcn-handle.cc
@@ -131,17 +131,17 @@ Return a struct containing information a
 	  octave_function *fcn = fh ? fh->function_value (true) : 0;
 
 	  if (fcn)
 	    {
 	      Octave_map m;
 
 	      std::string fh_nm = fh->fcn_name ();
 
-	      m.assign ("function", fh_nm.substr (1));
+	      m.assign ("function", fh_nm);
 
 	      if (fcn->is_nested_function ())
 		m.assign ("type", "subfunction");
 	      else
 		m.assign ("type", "simple");
 
 	      std::string nm = fcn->fcn_file_name ();
 
@@ -180,17 +180,17 @@ the function handle @var{fcn_handle}.\n\
 
   if (args.length () == 1)
     {
       octave_fcn_handle *fh = args(0).fcn_handle_value ();
 
       if (! error_state && fh)
 	{
 	  std::string fh_nm = fh->fcn_name ();
-	  retval = fh_nm.substr (1);
+	  retval = fh_nm;
 	}
       else
 	error ("func2str: expecting valid function handle as first argument");
     }
   else
     print_usage ("func2str");
 
   return retval;
