# HG changeset patch
# User Mike Miller <mtmiller@octave.org>
# Date 1465495042 25200
#      Thu Jun 09 10:57:22 2016 -0700
# Node ID 0331d3e832e348a53eecb2c07ccd57a534a2e129
# Parent  c9c5340d4758799437c6e49da63e6060b0d54341
Catch spurious errors thrown by the parser when executing callbacks (bug #48175)

* graphics.cc (gh_manager::do_execute_callback): Catch spurious
octave_execution_exceptions when executing user callbacks.  Indicate that the
error message came from a callback and restore the previous error state.

diff --git a/libinterp/corefcn/graphics.cc b/libinterp/corefcn/graphics.cc
--- a/libinterp/corefcn/graphics.cc
+++ b/libinterp/corefcn/graphics.cc
@@ -9511,28 +9511,41 @@ gh_manager::do_execute_callback (const g
       if (true)
         {
           gh_manager::auto_lock guard;
 
           callback_objects.push_front (get_object (h));
           xset_gcbo (h);
         }
 
+      // Get a copy of the global last error so it can be restored.
+      octave_value_list result = feval ("lasterror", ovl (), 1);
+
       // Copy CB because "function_value" method is non-const.
 
       octave_value cb = cb_arg;
 
       if (cb.is_function () || cb.is_function_handle ())
         fcn = cb.function_value ();
       else if (cb.is_string ())
         {
           int status;
           std::string s = cb.string_value ();
 
-          eval_string (s, false, status, 0);
+          try
+            {
+              eval_string (s, false, status, 0);
+            }
+          catch (octave_execution_exception&)
+            {
+              std::cerr << "execution error in graphics callback function"
+                        << std::endl;
+              feval ("lasterror", result);
+              recover_from_exception ();
+            }
         }
       else if (cb.is_cell () && cb.length () > 0
                && (cb.rows () == 1 || cb.columns () == 1)
                && (cb.cell_value ()(0).is_function ()
                    || cb.cell_value ()(0).is_function_handle ()))
         {
           Cell c = cb.cell_value ();
 
@@ -9544,17 +9557,27 @@ gh_manager::do_execute_callback (const g
       else
         {
           std::string nm = cb.class_name ();
           error ("trying to execute non-executable object (class = %s)",
                  nm.c_str ());
         }
 
       if (fcn)
-        feval (fcn, args);
+        try
+          {
+            feval (fcn, args);
+          }
+        catch (octave_execution_exception&)
+          {
+            std::cerr << "execution error in graphics callback function"
+                      << std::endl;
+            feval ("lasterror", result);
+            recover_from_exception ();
+          }
 
       if (Vdrawnow_requested)
         {
           Fdrawnow ();
           Vdrawnow_requested = false;
         }
     }
 }
