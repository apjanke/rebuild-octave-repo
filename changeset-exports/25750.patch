# HG changeset patch
# User Rik <rik@octave.org>
# Date 1533655562 25200
#      Tue Aug 07 08:26:02 2018 -0700
# Node ID e30a2492eb856dffad2a4f423b11c65d2d997956
# Parent  af43eb4e6502071a8db2abcb63b60be02e7e6f68
publish.m: Use Octave coding conventions for comments and logical negation.

* publish.m:  Use '!' for logical negation and '##' for comment lines.

diff --git a/scripts/miscellaneous/publish.m b/scripts/miscellaneous/publish.m
--- a/scripts/miscellaneous/publish.m
+++ b/scripts/miscellaneous/publish.m
@@ -1053,54 +1053,58 @@ function cstr = eval_code_helper (__code
   ## temporary context and returns a cellstring with the eval output.
 
   if (isempty (__code__))
     return;
   endif
 
   eval_context ("load");
   cstr = evalc (__code__);
-  # Split string by lines and preserve blank lines.
+  ## Split string by lines and preserve blank lines.
   cstr = strsplit (strrep (cstr, "\n\n", "\n \n"), "\n");
   eval_context ("save");
 endfunction
 
 
 function cstr = eval_context (op)
   ## EVAL_CONTEXT temporary evaluation context.
   persistent ctext
-  
-  # Variable cstr in "eval_code_helper" is newly created anyways.
+
+  ## Variable cstr in "eval_code_helper" is newly created anyways.
   forbidden_var_names = {"__code__"};
 
   switch (op)
     case "save"
-      # Clear previous context
+      ## Clear previous context
       ctext = containers.Map;
-      # Get variable names
+      ## Get variable names
       var_names = evalin ("caller", "whos");
       var_names = {var_names.name};
-      # Store all variables to context
+      ## Store all variables to context
       for i = 1:length (var_names)
-        if (~any (strcmp (var_names{i}, forbidden_var_names)))
+        if (! any (strcmp (var_names{i}, forbidden_var_names)))
           ctext(var_names{i}) = evalin ("caller", var_names{i});
         end
       endfor
+
     case "load"
-      if (~isempty (ctext))
+      if (! isempty (ctext))
         keys = ctext.keys ();
         for i = 1:length (keys)
           assignin ("caller", keys{i}, ctext(keys{i}));
         endfor
       endif
+
     case "clear"
-      # Clear any context
+      ## Clear any context
       ctext = [];
+
     otherwise
-      # Do nothing
+      ## Do nothing
+
   endswitch
 endfunction
 
 
 ## Note: Functional BIST tests are located in the `test/publish` directory.
 
 ## Test input validation
 %!error publish ()
