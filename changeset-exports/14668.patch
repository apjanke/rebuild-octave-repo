# HG changeset patch
# User Jacob Dawid <jacob.dawid@googlemail.com>
# Date 1337670826 -7200
#      Tue May 22 09:13:46 2012 +0200
# Branch gui
# Node ID 6a6733a5598298f3017b95ee7e630d9a372db39b
# Parent  664f54233c9804f6d14797e118bea46c080f7343
Removed unused classes and added octave loop hook.

* OctaveGUI.cpp: Removed header for command line parsing and command line parser.
* WorkspaceModel: Optimized updated the model from the symbol table by passing pointers instead of copying.
* OctaveLink: Removed polling thread.
* src.pro: Removed deleted files.
* OctaveCallbackThread: Not used anymore, hence removed.
* CommandLineParser: Not used anymore, hence removed.
* ReadlineAdapter: Not used anymore, hence removed.

diff --git a/gui/src/CommandLineParser.cpp b/gui/src/CommandLineParser.cpp
deleted file mode 100644
--- a/gui/src/CommandLineParser.cpp
+++ /dev/null
@@ -1,47 +0,0 @@
-/* OctaveGUI - A graphical user interface for Octave
- * Copyright (C) 2011 Jacob Dawid (jacob.dawid@googlemail.com)
- *
- * This program is free software: you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as
- * published by the Free Software Foundation, either version 3 of the
- * License, or (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program. If not, see <http://www.gnu.org/licenses/>.
- */
-
-#include "CommandLineParser.h"
-
-CommandLineParser::CommandLineParser ()
-{
-}
-
-void
-CommandLineParser::registerOption (CommandLineOption commandLineOption)
-{
-  if (m_registeredCommandLineOptions.contains(commandLineOption))
-    m_registeredCommandLineOptions.append(commandLineOption);
-}
-
-void
-CommandLineParser::registerOption (QString longOption, QString shortOption, QString description, bool withArgument)
-{
-  CommandLineOption commandLineOption;
-  commandLineOption.longOption = longOption;
-  commandLineOption.shortOption = shortOption;
-  commandLineOption.description = description;
-  commandLineOption.withArgument = withArgument;
-  registerOption (commandLineOption);
-}
-
-void
-CommandLineParser::parse (int argc, char** argv)
-{
-  Q_UNUSED(argc);
-  Q_UNUSED(argv);
-}
diff --git a/gui/src/CommandLineParser.h b/gui/src/CommandLineParser.h
deleted file mode 100644
--- a/gui/src/CommandLineParser.h
+++ /dev/null
@@ -1,50 +0,0 @@
-/* OctaveGUI - A graphical user interface for Octave
- * Copyright (C) 2011 Jacob Dawid (jacob.dawid@googlemail.com)
- *
- * This program is free software: you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as
- * published by the Free Software Foundation, either version 3 of the
- * License, or (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program. If not, see <http://www.gnu.org/licenses/>.
- */
-
-#ifndef COMMANDLINEPARSER_H
-#define COMMANDLINEPARSER_H
-
-#include <QList>
-#include <QString>
-
-class CommandLineParser
-{
-public:
-  struct CommandLineOption
-  {
-    QString longOption;
-    QString shortOption;
-    QString description;
-    bool withArgument;
-
-    bool operator== (CommandLineOption other)
-    {
-        return longOption == other.longOption
-            || shortOption == other.shortOption;
-    }
-  };
-
-  CommandLineParser ();
-  void registerOption (CommandLineOption commandLineOption);
-  void registerOption (QString longOption, QString shortOption, QString description, bool withArgument);
-  void parse (int argc, char** argv);
-
-private:
-  QList<CommandLineOption> m_registeredCommandLineOptions;
-};
-
-#endif // COMMANDLINEPARSER_H
diff --git a/gui/src/OctaveGUI.cpp b/gui/src/OctaveGUI.cpp
--- a/gui/src/OctaveGUI.cpp
+++ b/gui/src/OctaveGUI.cpp
@@ -13,17 +13,16 @@
  *
  * You should have received a copy of the GNU General Public License
  * along with this program. If not, see <http://www.gnu.org/licenses/>.
  */
 
 #include <QtGui/QApplication>
 #include <QTranslator>
 #include <QSettings>
-#include "CommandLineParser.h"
 #include "WelcomeWizard.h"
 #include "ResourceManager.h"
 #include "MainWindow.h"
 
 int
 main (int argc, char *argv[])
 {
   QApplication application (argc, argv);
@@ -66,20 +65,16 @@ main (int argc, char *argv[])
           application.quit ();
           // We are in an infinite loop, so everything else than a return
           // will cause the application to restart from the very beginning.
           if (returnCode == QDialog::Rejected)
             return 0;
         }
       else
         {
-          CommandLineParser commandLineParser;
-          commandLineParser.registerOption ("--config", "-c", "Tells OctaveGUI to use that configuration file.", true);
-          commandLineParser.parse (argc, argv);
-
           QSettings *settings = ResourceManager::instance ()->settings ();
           QString language = settings->value ("language").toString ();
 
           QString translatorFile = ResourceManager::instance ()->findTranslatorFile (language);
           QTranslator translator;
           translator.load (translatorFile);
           application.installTranslator (&translator);
 
diff --git a/gui/src/WorkspaceModel.cpp b/gui/src/WorkspaceModel.cpp
--- a/gui/src/WorkspaceModel.cpp
+++ b/gui/src/WorkspaceModel.cpp
@@ -130,89 +130,90 @@ WorkspaceModel::data(const QModelIndex &
     return QVariant();
 
   TreeItem *item = static_cast<TreeItem*>(index.internalPointer());
 
   return item->data(index.column());
 }
 
 void
-WorkspaceModel::updateTreeEntry (TreeItem * treeItem, symbol_table::symbol_record symbolRecord)
+WorkspaceModel::updateTreeEntry (TreeItem * treeItem, symbol_table::symbol_record *symbolRecord)
 {
-  treeItem->setData (0, QString (symbolRecord.name ().c_str ()));
-  treeItem->setData (1, QString (symbolRecord.varval ().type_name ().c_str ()));
-  treeItem->setData (2, octaveValueAsQString (symbolRecord.varval ()));
-  emit dataChanged(index(treeItem->row(), 0), index(treeItem->row(), 2));
+  treeItem->setData (0, QString (symbolRecord->name ().c_str ()));
+  treeItem->setData (1, QString (symbolRecord->varval ().type_name ().c_str ()));
+  treeItem->setData (2, octaveValueAsQString (symbolRecord->varval ()));
 }
 
 void
 WorkspaceModel::updateFromSymbolTable ()
 {
   std::list < symbol_table::symbol_record > allVariables = symbol_table::all_variables ();
 
   // Split the symbol table into its different categories.
-  QList < symbol_table::symbol_record > localSymbolTable;
-  QList < symbol_table::symbol_record > globalSymbolTable;
-  QList < symbol_table::symbol_record > persistentSymbolTable;
-  QList < symbol_table::symbol_record > hiddenSymbolTable;
+  QList < symbol_table::symbol_record* > localSymbolTable;
+  QList < symbol_table::symbol_record* > globalSymbolTable;
+  QList < symbol_table::symbol_record* > persistentSymbolTable;
+  QList < symbol_table::symbol_record* > hiddenSymbolTable;
 
   for (std::list < symbol_table::symbol_record > ::iterator iterator = allVariables.begin ();
        iterator != allVariables.end (); iterator++)
     {
       // It's true that being global or hidden includes it's can mean it's also locally visible,
       // but we want to distinguish that here.
       if (iterator->is_local () && !iterator->is_global () && !iterator->is_hidden ())
         {
-          localSymbolTable.append (iterator->dup (symbol_table::global_scope ()));
+          localSymbolTable.append (&(*iterator));
         }
 
       if (iterator->is_global ())
         {
-          globalSymbolTable.append (iterator->dup (symbol_table::global_scope ()));
+          globalSymbolTable.append (&(*iterator));
         }
 
       if (iterator->is_persistent ())
         {
-          persistentSymbolTable.append (iterator->dup (symbol_table::global_scope ()));
+          persistentSymbolTable.append (&(*iterator));
         }
 
       if (iterator->is_hidden ())
         {
-          hiddenSymbolTable.append (iterator->dup (symbol_table::global_scope ()));
+          hiddenSymbolTable.append (&(*iterator));
         }
     }
 
   updateCategory (0, localSymbolTable);
   updateCategory (1, globalSymbolTable);
   updateCategory (2, persistentSymbolTable);
   updateCategory (3, hiddenSymbolTable);
+  reset();
+  emit expandRequest();
 }
 
 void
-WorkspaceModel::updateCategory (int topLevelItemIndex, QList < symbol_table::symbol_record > symbolTable)
+WorkspaceModel::updateCategory (int topLevelItemIndex, QList < symbol_table::symbol_record* > symbolTable)
 {
   // This method may be a little bit confusing; variablesList is a complete list of all
   // variables that are in the workspace currently.
   TreeItem *treeItem = topLevelItem (topLevelItemIndex);
 
   // First we check, if any variables that exist in the model tree have to be updated
   // or created. So we walk the variablesList check against the tree.
-  foreach (symbol_table::symbol_record symbolRecord, symbolTable)
+  foreach (symbol_table::symbol_record *symbolRecord, symbolTable)
     {
       int childCount = treeItem->childCount ();
       bool alreadyExists = false;
       TreeItem *child;
 
       // Search for the corresponding item in the tree. If it has been found, child
       // will contain the appropriate QTreeWidgetItem* pointing at it.
       for (int i = 0; i < childCount; i++)
         {
           child = treeItem->child (i);
           if (child->data (0).toString () ==
-              QString (symbolRecord.name ().c_str ()))
+              QString (symbolRecord->name ().c_str ()))
             {
               alreadyExists = true;
               break;
             }
         }
 
       // If it already exists, just update it.
       if (alreadyExists)
@@ -228,36 +229,36 @@ WorkspaceModel::updateCategory (int topL
         }
     }
 
   // Check the tree against the list for deleted variables.
   for (int i = 0; i < treeItem->childCount (); i++)
     {
       bool existsInVariableList = false;
       TreeItem *child = treeItem->child (i);
-      foreach (symbol_table::symbol_record symbolRecord, symbolTable)
+      foreach (symbol_table::symbol_record *symbolRecord, symbolTable)
         {
-          if (QString (symbolRecord.name ().c_str ()) ==
+          if (QString (symbolRecord->name ().c_str ()) ==
               child->data (0).toString ())
             {
               existsInVariableList = true;
             }
         }
 
       if (!existsInVariableList)
         {
           treeItem->removeChild (child);
           delete child;
           i--;
         }
     }
 }
 
 QString
-WorkspaceModel::octaveValueAsQString (octave_value octaveValue)
+WorkspaceModel::octaveValueAsQString (const octave_value& octaveValue)
 {
   // Convert single qouted string.
   if (octaveValue.is_sq_string ())
     {
       return QString ("\'%1\'").arg (octaveValue.string_value ().c_str ());
 
       // Convert double qouted string.
     }
diff --git a/gui/src/WorkspaceModel.h b/gui/src/WorkspaceModel.h
--- a/gui/src/WorkspaceModel.h
+++ b/gui/src/WorkspaceModel.h
@@ -87,26 +87,26 @@ public:
   }
 
   void removeChild(TreeItem *item) {
     _childItems.removeAll(item);
   }
 
   QVariant data(int column) const
   {
-    return _itemData.value(column);
+    return _itemData[column];
   }
 
   void setData(int column, QVariant data)
   {
     _itemData[column] = data;
   }
 
   TreeItem *child(int row) {
-    return _childItems.value(row);
+    return _childItems[row];
   }
 
   int childCount() const {
     return _childItems.count();
   }
 
   int columnCount() const
   {
@@ -148,17 +148,20 @@ public:
   QModelIndex parent(const QModelIndex &index) const;
   int rowCount(const QModelIndex &parent = QModelIndex()) const;
   int columnCount(const QModelIndex &parent = QModelIndex()) const;
 
   void insertTopLevelItem (int at, TreeItem *treeItem);
   TreeItem *topLevelItem (int at);
 
   void updateFromSymbolTable ();
-  void updateTreeEntry (TreeItem * treeItem, symbol_table::symbol_record symbolRecord);
-  void updateCategory (int topLevelItemIndex, QList < symbol_table::symbol_record > symbolTable);
-  QString octaveValueAsQString (octave_value octaveValue);
+  void updateTreeEntry (TreeItem * treeItem, symbol_table::symbol_record *symbolRecord);
+  void updateCategory (int topLevelItemIndex, QList < symbol_table::symbol_record *> symbolTable);
+  QString octaveValueAsQString (const octave_value &octaveValue);
+
+signals:
+  void expandRequest();
 
 private:
   TreeItem *_rootItem;
 };
 
 #endif // WORKSPACEMODEL_H
diff --git a/gui/src/WorkspaceView.cpp b/gui/src/WorkspaceView.cpp
--- a/gui/src/WorkspaceView.cpp
+++ b/gui/src/WorkspaceView.cpp
@@ -36,17 +36,17 @@ WorkspaceView::WorkspaceView (QWidget * 
   QVBoxLayout *layout = new QVBoxLayout ();
   layout->addWidget (m_workspaceTreeView);
   layout->setMargin (2);
   widget ()->setLayout (layout);
 
   connect (this, SIGNAL (visibilityChanged (bool)),
            this, SLOT(handleVisibilityChanged (bool)));
 
-  connect (OctaveLink::instance()->workspaceModel(), SIGNAL(dataChanged(QModelIndex,QModelIndex)),
+  connect (OctaveLink::instance()->workspaceModel(), SIGNAL(expandRequest()),
            m_workspaceTreeView, SLOT(expandAll()));
 }
 
 void
 WorkspaceView::handleVisibilityChanged (bool visible)
 {
   if (visible)
   emit activeChanged (true);
diff --git a/gui/src/backend/OctaveCallbackThread.cpp b/gui/src/backend/OctaveCallbackThread.cpp
deleted file mode 100644
--- a/gui/src/backend/OctaveCallbackThread.cpp
+++ /dev/null
@@ -1,50 +0,0 @@
-/* OctaveGUI - A graphical user interface for Octave
- * Copyright (C) 2011 Jacob Dawid (jacob.dawid@googlemail.com)
- *
- * This program is free software: you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as
- * published by the Free Software Foundation, either version 3 of the
- * License, or (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program. If not, see <http://www.gnu.org/licenses/>.
- */
-
-#include "OctaveCallbackThread.h"
-#include "MainWindow.h"
-
-OctaveCallbackThread::OctaveCallbackThread (QObject * parent)
-  : QThread (parent)
-{
-  m_runningSemaphore = new QSemaphore(1);
-  m_running = true;
-}
-
-void
-OctaveCallbackThread::halt ()
-{
-  m_runningSemaphore->acquire ();
-  m_running = false;
-  m_runningSemaphore->release ();
-}
-
-void
-OctaveCallbackThread::run ()
-{
-  bool running = true;
-  while (running)
-    {
-      OctaveLink::instance ()->triggerUpdateSymbolTable ();
-      OctaveLink::instance ()->triggerUpdateHistoryModel ();
-      usleep (1000000);
-
-      m_runningSemaphore->acquire ();
-      running = m_running;
-      m_runningSemaphore->release ();
-    }
-}
diff --git a/gui/src/backend/OctaveCallbackThread.h b/gui/src/backend/OctaveCallbackThread.h
deleted file mode 100644
--- a/gui/src/backend/OctaveCallbackThread.h
+++ /dev/null
@@ -1,37 +0,0 @@
-/* OctaveGUI - A graphical user interface for Octave
- * Copyright (C) 2011 Jacob Dawid (jacob.dawid@googlemail.com)
- *
- * This program is free software: you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as
- * published by the Free Software Foundation, either version 3 of the
- * License, or (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program. If not, see <http://www.gnu.org/licenses/>.
- */
-
-#ifndef OCTAVECALLBACKTHREAD_H
-#define OCTAVECALLBACKTHREAD_H
-
-#include <QThread>
-#include <QSemaphore>
-
-class OctaveCallbackThread:public QThread
-{
-  Q_OBJECT
-public:
-  void halt();
-  OctaveCallbackThread (QObject * parent);
-protected:
-  void run ();
-private:
-  QSemaphore *m_runningSemaphore;
-  bool m_running;
-};
-
-#endif // OCTAVECALLBACKTHREAD_H
diff --git a/gui/src/backend/OctaveLink.cpp b/gui/src/backend/OctaveLink.cpp
--- a/gui/src/backend/OctaveLink.cpp
+++ b/gui/src/backend/OctaveLink.cpp
@@ -12,16 +12,23 @@
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
  * along with this program. If not, see <http://www.gnu.org/licenses/>.
  */
 
 #include "OctaveLink.h"
 
+void octave_loop_hook_impl()
+{
+  OctaveLink::instance()->triggerUpdateHistoryModel();
+  OctaveLink::instance()->triggerUpdateSymbolTable();
+}
+
+
 OctaveLink OctaveLink::m_singleton;
 
 OctaveLink::OctaveLink ():QObject ()
 {
   m_historyModel = new QStringListModel (this);
   m_workspaceModel = new WorkspaceModel (this);
 
   m_workspaceModel->insertTopLevelItem(0, new TreeItem ("Local"));
@@ -34,33 +41,27 @@ OctaveLink::~OctaveLink ()
 {
 }
 
 void
 OctaveLink::launchOctave ()
 {
   // Create both threads.
   m_octaveMainThread = new OctaveMainThread (this);
-  m_octaveCallbackThread = new OctaveCallbackThread (this);
-
-  // Launch the second as soon as the first ist ready.
-  connect (m_octaveMainThread, SIGNAL (ready ()), m_octaveCallbackThread, SLOT (start ()));
+  octave_loop_hook = octave_loop_hook_impl;
 
   // Start the first one.
   m_octaveMainThread->start ();
 }
 
 void
 OctaveLink::terminateOctave ()
 {
-  m_octaveCallbackThread->halt ();
-  m_octaveCallbackThread->wait ();
-
   m_octaveMainThread->terminate ();
-  //m_octaveMainThread->wait();
+  m_octaveMainThread->wait();
 }
 
 void
 OctaveLink::triggerUpdateHistoryModel ()
 {
   // Determine the client's (our) history length and the one of the server.
   int clientHistoryLength = m_historyModel->rowCount ();
   int serverHistoryLength = command_history::length ();
diff --git a/gui/src/backend/OctaveLink.h b/gui/src/backend/OctaveLink.h
--- a/gui/src/backend/OctaveLink.h
+++ b/gui/src/backend/OctaveLink.h
@@ -68,17 +68,16 @@
 #include <QString>
 #include <QStringList>
 #include <QVector>
 #include <QSemaphore>
 #include <QObject>
 #include <QStringListModel>
 
 #include "WorkspaceModel.h"
-#include "OctaveCallbackThread.h"
 #include "OctaveMainThread.h"
 
 /**
   * \class OctaveLink
   * Manages a link to an octave instance.
   */
 class OctaveLink:public QObject
 {
@@ -97,21 +96,17 @@ public:
 
   void triggerUpdateHistoryModel ();
   void triggerUpdateSymbolTable ();
 
 private:
   OctaveLink ();
   ~OctaveLink ();
 
-  //QSemaphore * m_symbolTableSemaphore;
-  //QList < symbol_table::symbol_record > m_symbolTableBuffer;
-
   QStringListModel *m_historyModel;
   WorkspaceModel *m_workspaceModel;
 
   // Threads for running octave and managing the data interaction.
   OctaveMainThread *m_octaveMainThread;
-  OctaveCallbackThread *m_octaveCallbackThread;
 
   static OctaveLink m_singleton;
 };
 #endif // OCTAVELINK_H
diff --git a/gui/src/backend/ReadlineAdapter.cpp b/gui/src/backend/ReadlineAdapter.cpp
deleted file mode 100644
--- a/gui/src/backend/ReadlineAdapter.cpp
+++ /dev/null
@@ -1,23 +0,0 @@
-/* OctaveGUI - A graphical user interface for Octave
- * Copyright (C) 2011 Jacob Dawid (jacob.dawid@googlemail.com)
- *
- * This program is free software: you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as
- * published by the Free Software Foundation, either version 3 of the
- * License, or (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program. If not, see <http://www.gnu.org/licenses/>.
- */
-
-#include "ReadlineAdapter.h"
-
-ReadlineAdapter::ReadlineAdapter (QObject *parent) :
-  QObject (parent), command_editor ()
-{
-}
diff --git a/gui/src/backend/ReadlineAdapter.h b/gui/src/backend/ReadlineAdapter.h
deleted file mode 100644
--- a/gui/src/backend/ReadlineAdapter.h
+++ /dev/null
@@ -1,37 +0,0 @@
-/* OctaveGUI - A graphical user interface for Octave
- * Copyright (C) 2011 Jacob Dawid (jacob.dawid@googlemail.com)
- *
- * This program is free software: you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as
- * published by the Free Software Foundation, either version 3 of the
- * License, or (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program. If not, see <http://www.gnu.org/licenses/>.
- */
-
-#ifndef READLINEADAPTER_H
-#define READLINEADAPTER_H
-
-#include "octave/config.h"
-#include "octave/cmd-edit.h"
-#include <QObject>
-
-class ReadlineAdapter : public QObject, public command_editor
-{
-  Q_OBJECT
-public:
-  explicit ReadlineAdapter (QObject *parent = 0);
-
-signals:
-
-public slots:
-
-};
-
-#endif // READLINEADAPTER_H
diff --git a/gui/src/src.pro b/gui/src/src.pro
--- a/gui/src/src.pro
+++ b/gui/src/src.pro
@@ -77,37 +77,31 @@ SOURCES +=\
     lexer/lexeroctavegui.cpp \
     MainWindow.cpp \
     WorkspaceView.cpp \
     HistoryDockWidget.cpp \
     FilesDockWidget.cpp \
     SettingsDialog.cpp \
     OctaveGUI.cpp \
     ResourceManager.cpp \
-    CommandLineParser.cpp \
-    backend/OctaveCallbackThread.cpp \
     backend/OctaveLink.cpp \
     backend/OctaveMainThread.cpp \
-    backend/ReadlineAdapter.cpp \
     WelcomeWizard.cpp \
     FileEditor.cpp \
     WorkspaceModel.cpp
 
 HEADERS += \
     lexer/lexeroctavegui.h \
     MainWindow.h \
     WorkspaceView.h \
     HistoryDockWidget.h \
     FilesDockWidget.h \
     SettingsDialog.h \
     ResourceManager.h \
-    CommandLineParser.h \
-    backend/OctaveCallbackThread.h \
     backend/OctaveLink.h \
     backend/OctaveMainThread.h \
-    backend/ReadlineAdapter.h \
     WelcomeWizard.h \
     FileEditor.h \
     WorkspaceModel.h
 
 FORMS += \
     SettingsDialog.ui \
     WelcomeWizard.ui
