# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1223665858 14400
#      Fri Oct 10 15:10:58 2008 -0400
# Node ID a10397d26114998bca6c7c5570eb2feb40f77b91
# Parent  2abbc8036f6a59369bd79724a3d43d387959750d
graphics.cc (base_graphics_properties::adopt): place new child at front of list, not end; make children a column vector instead of a row vector

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,14 @@
 2008-10-10  John W. Eaton  <jwe@octave.org>
 
+	* graphics.h.in (base_properties::adopt): Place new child at front
+	of list, not end.  Make list of children a column vector instead
+	of a row vector.
+
 	* graphics.cc (gh_manager::do_free): Set the beingdeleted
 	property, then delete the children, then execute the deletefcn.
 	(axes::properties::set_defaults, axes::properties::remove_child,
 	axes::properites::delete_children): Call delete_text_child to
 	manage the title, xlabel, ylabel, and zlabel properties.
 	(axes::properties::get_title, axes::properties::get_xlabel,
 	axes::properties::get_ylabel, axes::properties::get_zlabel): Delete.
 
diff --git a/src/graphics.h.in b/src/graphics.h.in
--- a/src/graphics.h.in
+++ b/src/graphics.h.in
@@ -1610,18 +1610,20 @@ public:
 
   bool is_modified (void) const { return is___modified__ (); }
  
   virtual void remove_child (const graphics_handle& h);
 
   virtual void adopt (const graphics_handle& h)
   {
     octave_idx_type n = children.numel ();
-    children.resize (1, n+1);
-    children(n) = h.value ();
+    children.resize (n+1, 1);
+    for (octave_idx_type i = n; i > 0; i--)
+      children(i) = children(i-1);
+    children(0) = h.value ();
     mark_modified ();
   }
 
   virtual graphics_backend get_backend (void) const;
 
   virtual Matrix get_boundingbox (bool /*internal*/ = false) const
     { return Matrix (1, 4, 0.0); }
 
