# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1231746130 -3600
#      Mon Jan 12 08:42:10 2009 +0100
# Node ID c72207960242fe6681a6921543dd337ec79569f1
# Parent  c1709a45b45be1b25ab5bcea9c7ee8f1a04c876b
minor simplifications to latest patches

diff --git a/src/ov-cell.cc b/src/ov-cell.cc
--- a/src/ov-cell.cc
+++ b/src/ov-cell.cc
@@ -178,17 +178,17 @@ octave_cell::subsasgn (const std::string
 	  break;
 
 	case '{':
 	  {
 	    octave_value tmp = do_index_op (idx.front (), true);
 
 	    if (! error_state)
 	      {
-		if (tmp.dims ().numel () == 1)
+		if (tmp.numel () == 1)
 		  {
 		    tmp = tmp.cell_value ()(0,0);
 
 		    std::list<octave_value_list> next_idx (idx);
 
 		    next_idx.erase (next_idx.begin ());
 
 		    if (! tmp.is_defined () || tmp.is_zero_by_zero ())
@@ -263,17 +263,17 @@ octave_cell::subsasgn (const std::string
 		// the number of elements to agree and to preserve the
 		// shape of the left hand side of the assignment.
 
 		if (numel () == tmp_cell.numel ())
 		  tmp_cell = tmp_cell.reshape (dims ());
 
 		octave_base_matrix<Cell>::assign (i, tmp_cell);
 	      }
-	    else if (i.all_scalars () || do_index_op (i, true).dims ().numel () == 1)
+	    else if (i.all_scalars () || do_index_op (i, true).numel () == 1)
               // Regularize a null matrix if stored into a cell.
               octave_base_matrix<Cell>::assign (i, Cell (t_rhs.non_null_value ()));
             else if (! error_state)
               error ("scalar indices required for {} in assignment.");
 
 	    if (! error_state)
 	      {
 		count++;
