# HG changeset patch
# User David Bateman <dbateman@free.fr>
# Date 1211528108 -7200
#      Fri May 23 09:35:08 2008 +0200
# Node ID 3af309919efcefd9da05043b3dbe008bbdd3769c
# Parent  7ab1ccf4256c0343e3e2281e4a98200fa33b2c5a
Makefile fix for single precision

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,14 +1,17 @@
 2008-06-02  David Bateman  <dbateman@free.fr>
 
 	* floatAEPBAL.cc (octave_idx_type FloatAEPBALANCE::init (const
 	FloatMatrix&, const std::string&)): Use FloatMatrix to initialize
 	balancing_mat.
 
+	* Makefile.in (MATRIX_INC): Add fCmplxAEPBAL.h and floatAEPBAL.h.
+	(MATRIX_SRC): Add fCmplxAEPBAL.cc and floatAEPBAL.cc.
+
 2008-05-21  David Bateman  <dbateman@free.fr>
 
 	* Quad-opts.in: Handle single precision tolerances.
 	* Quad.cc (float_user_fcn): New static variable.
 	(quad_float_fcn_ptr): New typedef.
 	(qagp, quagi): New QUADPACK decls.
 	(float_user_function): New function.
 	(DefQuad::do_integrate, IndefQuad::do_integrate): Float versions.
diff --git a/liboctave/Makefile.in b/liboctave/Makefile.in
--- a/liboctave/Makefile.in
+++ b/liboctave/Makefile.in
@@ -56,18 +56,19 @@ MATRIX_INC := Array.h Array2.h Array3.h 
 	sparse-base-chol.h SparseCmplxCHOL.h \
 	SparsedbleCHOL.h SparseCmplxQR.h SparseQR.h Sparse-op-defs.h \
 	MatrixType.h \
 	int8NDArray.h uint8NDArray.h int16NDArray.h uint16NDArray.h \
 	int32NDArray.h uint32NDArray.h int64NDArray.h uint64NDArray.h \
 	intNDArray.h \
 	fCColVector.h fCRowVector.h fCDiagMatrix.h fCMatrix.h fCNDArray.h \
 	fColVector.h fRowVector.h fDiagMatrix.h fMatrix.h fNDArray.h \
-	fCmplxGEPBAL.h fCmplxHESS.h fCmplxCHOL.h fCmplxDET.h fCmplxLU.h \
-	fCmplxSCHUR.h fCmplxSVD.h fCmplxQR.h fCmplxQRP.h \
+	fCmplxAEPBAL.h fCmplxGEPBAL.h fCmplxHESS.h fCmplxCHOL.h \
+	fCmplxDET.h fCmplxLU.h fCmplxSCHUR.h fCmplxSVD.h fCmplxQR.h \
+	fCmplxQRP.h floatAEPBAL.h \
 	floatCHOL.h floatDET.h floatGEPBAL.h floatHESS.h floatLU.h \
 	floatSCHUR.h floatSVD.h floatQR.h floatQRP.h
 
 MX_OP_INC := $(shell $(AWK) -f $(srcdir)/mk-ops.awk prefix=mx list_h_files=1 $(srcdir)/mx-ops)
 
 VX_OP_INC := $(shell $(AWK) -f $(srcdir)/mk-ops.awk prefix=vx list_h_files=1 $(srcdir)/vx-ops)
 
 SPARSE_MX_OP_INC := $(shell $(AWK) -f $(srcdir)/sparse-mk-ops.awk prefix=smx list_h_files=1 $(srcdir)/sparse-mx-ops)
@@ -124,19 +125,20 @@ MATRIX_SRC := Array-util.cc CColVector.c
 	dbleSCHUR.cc dbleSVD.cc boolSparse.cc CSparse.cc dSparse.cc \
 	MSparse.cc Sparse.cc SparseCmplxLU.cc SparsedbleLU.cc \
 	SparseCmplxCHOL.cc SparsedbleCHOL.cc \
 	SparseCmplxQR.cc SparseQR.cc MatrixType.cc \
 	int8NDArray.cc uint8NDArray.cc int16NDArray.cc uint16NDArray.cc \
 	int32NDArray.cc uint32NDArray.cc int64NDArray.cc uint64NDArray.cc \
 	fCColVector.cc fCRowVector.cc fCDiagMatrix.cc fCMatrix.cc fCNDArray.cc \
 	fColVector.cc fRowVector.cc fDiagMatrix.cc fMatrix.cc fNDArray.cc \
-	fCmplxCHOL.cc fCmplxDET.cc fCmplxGEPBAL.cc fCmplxHESS.cc fCmplxLU.cc \
-	fCmplxSCHUR.cc fCmplxSVD.cc fCmplxQR.cc fCmplxQRP.cc \
-	floatCHOL.cc floatDET.cc floatGEPBAL.cc floatHESS.cc floatLU.cc \
+	fCmplxAEPBAL.cc fCmplxCHOL.cc fCmplxDET.cc fCmplxGEPBAL.cc \
+	fCmplxHESS.cc fCmplxLU.cc fCmplxSCHUR.cc fCmplxSVD.cc fCmplxQR.cc \
+	fCmplxQRP.cc floatAEPBAL.cc floatCHOL.cc floatDET.cc \
+	floatGEPBAL.cc floatHESS.cc floatLU.cc \
 	floatSCHUR.cc floatSVD.cc floatQR.cc floatQRP.cc
 
 MX_OP_SRC := $(shell $(AWK) -f $(srcdir)/mk-ops.awk prefix=mx list_cc_files=1 $(srcdir)/mx-ops)
 
 VX_OP_SRC := $(shell $(AWK) -f $(srcdir)/mk-ops.awk prefix=vx list_cc_files=1 $(srcdir)/vx-ops)
 
 SPARSE_MX_OP_SRC := $(shell $(AWK) -f $(srcdir)/sparse-mk-ops.awk prefix=smx list_cc_files=1 $(srcdir)/sparse-mx-ops)
 
