# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1207333626 14400
#      Fri Apr 04 14:27:06 2008 -0400
# Branch release-3-0-x
# Node ID 5dc5de967ab08ae3123e36faee9f7351d409f89a
# Parent  dd93a39fa8fe8b2e664dbf1505199248910ec68e
use * instead of 1 for assumed-size fortran arrays

diff --git a/libcruft/ChangeLog b/libcruft/ChangeLog
--- a/libcruft/ChangeLog
+++ b/libcruft/ChangeLog
@@ -1,8 +1,15 @@
+2008-04-04  John W. Eaton  <jwe@octave.org>
+
+	* blas/zdrot.f, odepack/dlsode.f, odepack/ewset.f,
+	odepack/intdy.f, fftpack/cffti.f, fftpack/cfftb.f,
+	fftpack/cfftf.f:
+	Use (*) instead of (1) for assumed-size dimensions.
+
 2008-02-12  John W. Eaton  <jwe@octave.org>
 
 	* lapack-xtra/xilaenv.f: New wrapper for Fortran function ilaenv.
 	* lapack-xtra/Makefile.in (FSRC): Add it to the list.
 
 2007-12-21  John W. Eaton  <jwe@octave.org>
 
 	Version 3.0.0 released.
diff --git a/libcruft/blas/zdrot.f b/libcruft/blas/zdrot.f
--- a/libcruft/blas/zdrot.f
+++ b/libcruft/blas/zdrot.f
@@ -1,15 +1,15 @@
       subroutine  zdrot (n,zx,incx,zy,incy,c,s)
 c
 c     applies a plane rotation, where the cos and sin (c and s) are
 c     double precision and the vectors zx and zy are double complex.
 c     jack dongarra, linpack, 3/11/78.
 c
-      double complex zx(1),zy(1),ztemp
+      double complex zx(*),zy(*),ztemp
       double precision c,s
       integer i,incx,incy,ix,iy,n
 c
       if(n.le.0)return
       if(incx.eq.1.and.incy.eq.1)go to 20
 c
 c       code for unequal increments or equal increments not equal
 c         to 1
diff --git a/libcruft/daspk/ddaspk.f b/libcruft/daspk/ddaspk.f
--- a/libcruft/daspk/ddaspk.f
+++ b/libcruft/daspk/ddaspk.f
@@ -50,17 +50,17 @@ C      INTEGER NEQ, INFO(N), IDID, LRW, 
 C      DOUBLE PRECISION T, Y(*), YPRIME(*), TOUT, RTOL(*), ATOL(*),
 C         RWORK(LRW), RPAR(*)
 C      EXTERNAL  RES, JAC, PSOL
 C
 C      CALL DDASPK (RES, NEQ, T, Y, YPRIME, TOUT, INFO, RTOL, ATOL,
 C     *   IDID, RWORK, LRW, IWORK, LIW, RPAR, IPAR, JAC, PSOL)
 C
 C  Quantities which may be altered by the code are:
-C     T, Y(*), YPRIME(*), INFO(1), RTOL, ATOL, IDID, RWORK(*), IWORK(*)
+C     T, Y(*), YPRIME(*), INFO(*), RTOL, ATOL, IDID, RWORK(*), IWORK(*)
 C
 C
 C *Arguments:
 C
 C  RES:EXT          This is the name of a subroutine which you
 C                   provide to define the residual function G(t,y,y')
 C                   of the differential/algebraic system.
 C
diff --git a/libcruft/fftpack/cfftb.f b/libcruft/fftpack/cfftb.f
--- a/libcruft/fftpack/cfftb.f
+++ b/libcruft/fftpack/cfftb.f
@@ -1,9 +1,9 @@
       subroutine cfftb (n,c,wsave)
       implicit double precision (a-h,o-z)
-      dimension       c(1)       ,wsave(1)
+      dimension       c(*)       ,wsave(*)
       if (n .eq. 1) return
       iw1 = n+n+1
       iw2 = iw1+n+n
       call cfftb1 (n,c,wsave,wsave(iw1),wsave(iw2))
       return
       end
diff --git a/libcruft/fftpack/cfftf.f b/libcruft/fftpack/cfftf.f
--- a/libcruft/fftpack/cfftf.f
+++ b/libcruft/fftpack/cfftf.f
@@ -1,9 +1,9 @@
       subroutine cfftf (n,c,wsave)
       implicit double precision (a-h,o-z)
-      dimension       c(1)       ,wsave(1)
+      dimension       c(*)       ,wsave(*)
       if (n .eq. 1) return
       iw1 = n+n+1
       iw2 = iw1+n+n
       call cfftf1 (n,c,wsave,wsave(iw1),wsave(iw2))
       return
       end
diff --git a/libcruft/fftpack/cffti.f b/libcruft/fftpack/cffti.f
--- a/libcruft/fftpack/cffti.f
+++ b/libcruft/fftpack/cffti.f
@@ -1,9 +1,9 @@
       subroutine cffti (n,wsave)
       implicit double precision (a-h,o-z)
-      dimension       wsave(1)
+      dimension       wsave(*)
       if (n .eq. 1) return
       iw1 = n+n+1
       iw2 = iw1+n+n
       call cffti1 (n,wsave(iw1),wsave(iw2))
       return
       end
diff --git a/libcruft/odepack/dlsode.f b/libcruft/odepack/dlsode.f
--- a/libcruft/odepack/dlsode.f
+++ b/libcruft/odepack/dlsode.f
@@ -1,14 +1,14 @@
       SUBROUTINE DLSODE (F, NEQ, Y, T, TOUT, ITOL, RTOL, ATOL, ITASK,
      1            ISTATE, IOPT, RWORK, LRW, IWORK, LIW, JAC, MF)
       EXTERNAL F, JAC
       INTEGER NEQ, ITOL, ITASK, ISTATE, IOPT, LRW, IWORK, LIW, MF
       DOUBLE PRECISION Y, T, TOUT, RTOL, ATOL, RWORK
-      DIMENSION NEQ(1), Y(1), RTOL(1), ATOL(1), RWORK(LRW), IWORK(LIW)
+      DIMENSION NEQ(*), Y(*), RTOL(*), ATOL(*), RWORK(LRW), IWORK(LIW)
 C-----------------------------------------------------------------------
 C THIS IS THE MARCH 30, 1987 VERSION OF 
 C LSODE.. LIVERMORE SOLVER FOR ORDINARY DIFFERENTIAL EQUATIONS.
 C THIS VERSION IS IN DOUBLE PRECISION.
 C
 C LSODE SOLVES THE INITIAL VALUE PROBLEM FOR STIFF OR NONSTIFF
 C SYSTEMS OF FIRST ORDER ODE-S,
 C     DY/DT = F(T,Y) ,  OR, IN COMPONENT FORM,
diff --git a/libcruft/odepack/ewset.f b/libcruft/odepack/ewset.f
--- a/libcruft/odepack/ewset.f
+++ b/libcruft/odepack/ewset.f
@@ -4,17 +4,17 @@ C---------------------------------------
 C THIS SUBROUTINE SETS THE ERROR WEIGHT VECTOR EWT ACCORDING TO
 C     EWT(I) = RTOL(I)*ABS(YCUR(I)) + ATOL(I),  I = 1,...,N,
 C WITH THE SUBSCRIPT ON RTOL AND/OR ATOL POSSIBLY REPLACED BY 1 ABOVE,
 C DEPENDING ON THE VALUE OF ITOL.
 C-----------------------------------------------------------------------
       INTEGER N, ITOL
       INTEGER I
       DOUBLE PRECISION RTOL, ATOL, YCUR, EWT
-      DIMENSION RTOL(1), ATOL(1), YCUR(N), EWT(N) 
+      DIMENSION RTOL(*), ATOL(*), YCUR(N), EWT(N) 
 C
       GO TO (10, 20, 30, 40), ITOL
  10   CONTINUE
       DO 15 I = 1,N 
  15     EWT(I) = RTOL(1)*DABS(YCUR(I)) + ATOL(1)
       RETURN
  20   CONTINUE
       DO 25 I = 1,N 
diff --git a/libcruft/odepack/intdy.f b/libcruft/odepack/intdy.f
--- a/libcruft/odepack/intdy.f
+++ b/libcruft/odepack/intdy.f
@@ -4,17 +4,17 @@ CLLL. OPTIMIZE
       INTEGER IOWND, IOWNS,
      1   ICF, IERPJ, IERSL, JCUR, JSTART, KFLAG, L, METH, MITER,
      2   MAXORD, MAXCOR, MSBP, MXNCF, N, NQ, NST, NFE, NJE, NQU
       INTEGER I, IC, J, JB, JB2, JJ, JJ1, JP1
       DOUBLE PRECISION T, YH, DKY
       DOUBLE PRECISION ROWNS, 
      1   CCMAX, EL0, H, HMIN, HMXI, HU, RC, TN, UROUND
       DOUBLE PRECISION C, R, S, TP
-      DIMENSION YH(NYH,1), DKY(1)
+      DIMENSION YH(NYH,*), DKY(*)
       COMMON /LS0001/ ROWNS(209),
      2   CCMAX, EL0, H, HMIN, HMXI, HU, RC, TN, UROUND,
      3   IOWND(14), IOWNS(6), 
      4   ICF, IERPJ, IERSL, JCUR, JSTART, KFLAG, L, METH, MITER,
      5   MAXORD, MAXCOR, MSBP, MXNCF, N, NQ, NST, NFE, NJE, NQU
 C-----------------------------------------------------------------------
 C INTDY COMPUTES INTERPOLATED VALUES OF THE K-TH DERIVATIVE OF THE
 C DEPENDENT VARIABLE VECTOR Y, AND STORES IT IN DKY.  THIS ROUTINE
