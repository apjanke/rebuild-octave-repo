# HG changeset patch
# User jwe
# Date 988784109 0
#      Wed May 02 06:15:09 2001 +0000
# Node ID ba548facf43beed1a580a07b9b537aba44f1abd8
# Parent  2184d16975a2f7990e60c28f965f2262304df22b
[project @ 2001-05-02 06:15:06 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,15 @@
+2001-05-02  Mumit Khan  <khan@nanotech.wisc.edu>
+
+	* configure.in: Support for --with-fftw.
+	(FFT_DIR, FFTW_LIBS): New substitutions.
+	* Makeconf.in (FFTW_LIBS): New variable.
+	* acconfig.h (HAVE_FFTW): New macro.
+
 2001-04-26  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* aclocal.m4 (OCTAVE_ENABLE_READLINE): Require readline unless
 	--disable-readline is specified.
 
 	* configure.in: Don't define TERMLIBS.  Do add terminal lib(s) to LIBS.
 	* octave-bug.in: Delete references to TERMLIBS.
 	* Makeconf.in: Likewise.
diff --git a/Makeconf.in b/Makeconf.in
--- a/Makeconf.in
+++ b/Makeconf.in
@@ -148,16 +148,17 @@ LIBDLFCN = @LIBDLFCN@
 LIBGLOB = @LIBGLOB@
 LIBPLPLOT = @LIBPLPLOT@
 LIBKPATHSEA = @LIBKPATHSEA@
 LIBOCTINTERP = @LIBOCTINTERP@
 LIBOCTAVE = @LIBOCTAVE@
 LIBCRUFT = @LIBCRUFT@
 
 BLAS_LIBS = @BLAS_LIBS@
+FFTW_LIBS = @FFTW_LIBS@
 LIBS = @LIBS@
 
 # The arguments passed to configure.
 config_opts = @config_opts@
 
 # ==================== Where To Install Things ====================
 
 # The default location for installation.  Everything is placed in
diff --git a/acconfig.h b/acconfig.h
--- a/acconfig.h
+++ b/acconfig.h
@@ -53,16 +53,19 @@
 #undef HAVE_ISINF
 
 /* Define if you have isnan(). */
 #undef HAVE_ISNAN
 
 /* Define if you have BSD style signals. */
 #undef HAVE_BSD_SIGNALS
 
+/* Define if you have FFTW installed. */
+#undef HAVE_FFTW
+
 /* Define if you have POSIX style signals. */
 #undef HAVE_POSIX_SIGNALS
 
 /* Define if your system has program_invocation_name. */
 #undef HAVE_PROGRAM_INVOCATION_NAME
 
 /* Define if your system has a sys_siglist variable. */
 #undef HAVE_SYS_SIGLIST
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -16,17 +16,17 @@ dnl Copyright (C) 1996, 1997 John W. Eat
 ### FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ### for more details.
 ### 
 ### You should have received a copy of the GNU General Public License
 ### along with Octave; see the file COPYING.  If not, write to the Free
 ### Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ### 02111-1307, USA. 
 
-AC_REVISION($Revision: 1.346 $)
+AC_REVISION($Revision: 1.347 $)
 AC_PREREQ(2.9)
 AC_INIT(src/octave.cc)
 AC_CONFIG_HEADER(config.h)
 
 AC_DEFINE(OCTAVE_SOURCE, 1)
 
 OCTAVE_HOST_TYPE
 
@@ -346,16 +346,48 @@ if test -n "$hdf5_lib"; then
     AC_CHECK_LIB(z, deflate, [
       AC_CHECK_HEADERS(hdf5.h, [
 	WITH_HDF5=true
         HDF5_LIBS="-l$hdf5_lib -lz"
         LIBS="$HDF5_LIBS $LIBS"
         AC_DEFINE(HAVE_HDF5)])])])
 fi
 
+# Checks for FFTW header and library.
+
+# subdirectories of libcruft to build if they aren't found on the system:
+FFT_DIR="fftpack"
+AC_SUBST(FFT_DIR)
+
+# Installed fftw library, if any.
+FFTW_LIBS=''
+AC_SUBST(FFTW_LIBS)
+
+AC_ARG_WITH(fftw, 
+  [  --with-fftw             use installed fftw instead of included fftpack],
+  with_fftw=yes, with_fftw=yes)
+
+if test "$with_fftw" = "yes"; then
+  AC_CHECK_HEADERS(dfftw.h fftw.h)
+  if test "$ac_cv_header_dfftw_h" = yes \
+      || test "$ac_cv_header_fftw_h" = yes; then
+    AC_CHECK_LIB(dfftw, fftw_create_plan, FFTW_LIBS="-ldfftw",
+      [AC_CHECK_LIB(fftw, fftw_create_plan, FFTW_LIBS="-lfftw", with_fftw=no)])
+  else
+    with_fftw=no
+  fi
+fi
+
+if test "$with_fftw" = yes; then
+  FFT_DIR=''
+  AC_DEFINE(HAVE_FFTW)
+fi
+
+# ----------------------------------------------------------------------
+
 ### We need these before trying to find libf2c.
 
 OCTAVE_PROG_AR
 
 AC_PROG_RANLIB
 
 ### If we haven't been forced to use a particular Fortran compiler,
 ### try to find one using any one of several common Un*x Fortran
@@ -1341,16 +1373,17 @@ Octave is now configured for $canonical_
 
   Source directory:     $srcdir
   Installation prefix:  $prefix
   C compiler:           $CC $XTRA_CFLAGS $CFLAGS
   C++ compiler:         $CXX $XTRA_CXXFLAGS $CXXFLAGS
   Fortran compiler:     $FORT
   Fortran libraries:    $FLIBS
   BLAS libraries:       $BLAS_LIBS
+  FFTW libraries:       $FFTW_LIBS
   HDF5 libraries:       $HDF5_LIBS
   LIBS:                 $LIBS
   Default pager:        $DEFAULT_PAGER
   gnuplot:              $GNUPLOT_BINARY
 
   Do internal array bounds checking:       $BOUNDS_CHECKING
   Build static libraries:                  $STATIC_LIBS
   Build shared libraries:                  $SHARED_LIBS
diff --git a/libcruft/ChangeLog b/libcruft/ChangeLog
--- a/libcruft/ChangeLog
+++ b/libcruft/ChangeLog
@@ -1,8 +1,12 @@
+2001-05-02  Mumit Khan  <khan@nanotech.wisc.edu>
+
+	* Makefile.in (CRUFT_DIRS): Substitute @FFT_DIR@. 
+
 2001-04-25  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* Makefile.in (install): Don't use mk-libdir-link.
 
 2001-04-19  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* misc/Makefile.in (CPICDEP): Remove pic/dostop.o from the list.
 
diff --git a/libcruft/Makefile.in b/libcruft/Makefile.in
--- a/libcruft/Makefile.in
+++ b/libcruft/Makefile.in
@@ -23,17 +23,17 @@ INSTALL_DATA = @INSTALL_DATA@
 # added to libcruft.a.  If you add a new directory here, you also need
 # generate a new configure script in the top-level directory (edit
 # configure.in and run autoconf).
 
 # Some of the directories in libcruft may be only optionally built,
 # e.g. if they are already present on the system.  For these, their
 # dirname is substituted by configure and may be the empty string.
 
-CRUFT_DIRS = amos @BLAS_DIR@ blas-xtra dassl fftpack @LAPACK_DIR@ \
+CRUFT_DIRS = amos @BLAS_DIR@ blas-xtra dassl @FFT_DIR@ @LAPACK_DIR@ \
 	lapack-xtra linpack minpack misc odepack ordered-qz quadpack \
 	ranlib slatec-err slatec-fn villad
 
 SUBDIRS = $(CRUFT_DIRS)
 
 DISTSUBDIRS = $(sort $(CRUFT_DIRS) blas lapack)
 
 DISTFILES = Makefile.in ChangeLog Makerules.in $(SOURCES) STOP.patch
diff --git a/liboctave/CMatrix.cc b/liboctave/CMatrix.cc
--- a/liboctave/CMatrix.cc
+++ b/liboctave/CMatrix.cc
@@ -50,16 +50,20 @@ Software Foundation, 59 Temple Place - S
 #include "lo-utils.h"
 #include "mx-base.h"
 #include "mx-cm-dm.h"
 #include "mx-dm-cm.h"
 #include "mx-cm-s.h"
 #include "mx-inlines.cc"
 #include "oct-cmplx.h"
 
+#ifdef HAVE_FFTW
+#include "oct-fftw.h"
+#endif
+
 // Fortran functions we call.
 
 extern "C"
 {
   int F77_FCN (zgebal, ZGEBAL) (const char*, const int&, Complex*,
                                 const int&, int&, int&, double*, int&,
                                 long, long);
 
@@ -949,16 +953,112 @@ ComplexMatrix::pseudo_inverse (double to
       DiagMatrix D = DiagMatrix (sigma.extract (0, r)) . inverse ();
       ComplexMatrix Vr = V.extract (0, 0, nc-1, r);
       retval = Vr * D * Ur.hermitian ();
     }
 
   return retval;
 }
 
+#ifdef HAVE_FFTW
+
+ComplexMatrix
+ComplexMatrix::fourier (void) const
+{
+  size_t nr = rows ();
+  size_t nc = cols ();
+
+  ComplexMatrix retval (nr, nc);
+
+  size_t npts, nsamples;
+
+  if (nr == 1 || nc == 1)
+    {
+      npts = nr > nc ? nr : nc;
+      nsamples = 1;
+    }
+  else
+    {
+      npts = nr;
+      nsamples = nc;
+    }
+
+  const Complex *in (data ());
+  Complex *out (retval.fortran_vec ());
+
+  for (size_t i = 0; i < nsamples; i++)
+    {
+      octave_fftw::fft (&in[npts * i], &out[npts * i], npts);
+    }
+
+  return retval;
+}
+
+ComplexMatrix
+ComplexMatrix::ifourier (void) const
+{
+  size_t nr = rows ();
+  size_t nc = cols ();
+
+  ComplexMatrix retval (nr, nc);
+
+  size_t npts, nsamples;
+
+  if (nr == 1 || nc == 1)
+    {
+      npts = nr > nc ? nr : nc;
+      nsamples = 1;
+    }
+  else
+    {
+      npts = nr;
+      nsamples = nc;
+    }
+
+  const Complex *in (data ());
+  Complex *out (retval.fortran_vec ());
+
+  for (size_t i = 0; i < nsamples; i++)
+    {
+      octave_fftw::ifft (&in[npts * i], &out[npts * i], npts);
+    }
+
+  return retval;
+}
+
+ComplexMatrix
+ComplexMatrix::fourier2d (void) const
+{
+  int nr = rows ();
+  int nc = cols ();
+
+  ComplexMatrix retval (*this);
+  // Note the order of passing the rows and columns to account for
+  // column-major storage.
+  octave_fftw::fft2d (retval.fortran_vec (), nc, nr);
+
+  return retval;
+}
+
+ComplexMatrix
+ComplexMatrix::ifourier2d (void) const
+{
+  int nr = rows ();
+  int nc = cols ();
+
+  ComplexMatrix retval (*this);
+  // Note the order of passing the rows and columns to account for
+  // column-major storage.
+  octave_fftw::ifft2d (retval.fortran_vec (), nc, nr);
+
+  return retval;
+}
+
+#else
+
 ComplexMatrix
 ComplexMatrix::fourier (void) const
 {
   ComplexMatrix retval;
 
   int nr = rows ();
   int nc = cols ();
 
@@ -1149,16 +1249,18 @@ ComplexMatrix::ifourier2d (void) const
 
       for (int i = 0; i < npts; i++)
 	tmp_data[i*nr + j] = prow[i] / static_cast<double> (npts);
     }
 
   return retval;
 }
 
+#endif
+
 ComplexDET
 ComplexMatrix::determinant (void) const
 {
   int info;
   double rcond;
   return determinant (info, rcond);
 }
 
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,17 @@
+2001-05-02  Mumit Khan  <khan@nanotech.wisc.edu>
+
+	* oct-fftw.h, oct-fftw.cc: New files.
+	* Makefile.in (INCLUDES, SOURCES): Add new files.
+	* CMatrix.cc (ComplexMatrix::{fourier, ifourier, fourier2d, 
+	ifourier2d}): Use fftw if available.
+	* dMatrix.cc (Matrix::{fourier, ifourier, fourier2d, ifourier2d}): 
+	Likewise.
+
 2001-04-25  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* Makefile.in (install-lib): Don't use mk-libdir-link.
 	(install-inc): Don't use mk-includedir-link.
 
 2001-02-28  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* lo-cutils.c (octave_gethostname): New function.
diff --git a/liboctave/Makefile.in b/liboctave/Makefile.in
--- a/liboctave/Makefile.in
+++ b/liboctave/Makefile.in
@@ -46,19 +46,19 @@ VX_OP_INC := vx-ccv-s.h vx-crv-s.h vx-cs
 
 INCLUDES := Bounds.h CollocWt.h DAE.h DAEFunc.h DASSL.h FEGrid.h \
 	LinConst.h LP.h LPsolve.h LSODE.h NLConst.h NLEqn.h NLFunc.h \
 	NLP.h ODE.h ODEFunc.h Objective.h QP.h Quad.h Range.h base-de.h \
 	base-min.h byte-swap.h cmd-edit.h cmd-hist.h data-conv.h \
 	dir-ops.h file-ops.h file-stat.h getopt.h glob-match.h \
 	idx-vector.h lo-ieee.h lo-mappers.h lo-specfun.h lo-sysdep.h \
 	lo-utils.h mach-info.h oct-alloc.h oct-cmplx.h oct-env.h \
-	oct-getopt.h oct-group.h oct-kpse.h oct-passwd.h oct-rl-edit.h \
-	oct-rl-hist.h oct-shlib.h oct-syscalls.h oct-time.h pathlen.h \
-	pathsearch.h prog-args.h statdefs.h str-vec.h sun-utils.h \
+	oct-fftw.h oct-getopt.h oct-group.h oct-kpse.h oct-passwd.h \
+	oct-rl-edit.h oct-rl-hist.h oct-shlib.h oct-syscalls.h oct-time.h \
+	pathlen.h pathsearch.h prog-args.h statdefs.h str-vec.h sun-utils.h \
 	sysdir.h systime.h syswait.h \
 	$(MATRIX_INC) \
 	$(MX_OP_INC) \
 	$(VX_OP_INC)
 
 TEMPLATE_SRC := Array.cc Array2.cc Array3.cc ArrayN.cc DiagArray2.cc \
 	MArray.cc MArray2.cc MDiagArray2.cc base-lu.cc
 
@@ -85,20 +85,20 @@ VX_OP_SRC := vx-ccv-s.cc vx-crv-s.cc vx-
 	vx-rv-crv.cc vx-cv-ccv.cc vx-crv-rv.cc vx-ccv-cv.cc
 
 SOURCES := Bounds.cc CollocWt.cc DAE.cc DASSL.cc FEGrid.cc LinConst.cc \
 	LPsolve.cc LSODE.cc NLEqn.cc Quad.cc Range.cc cmd-edit.cc \
 	cmd-hist.cc data-conv.cc dir-ops.cc f2c-main.c file-ops.cc \
 	file-stat.cc filemode.c getopt.c getopt1.c glob-match.cc \
 	idx-vector.cc lo-cutils.c lo-ieee.cc lo-mappers.cc lo-specfun.cc \
 	lo-sysdep.cc lo-utils.cc mach-info.cc mkdir.c oct-alloc.cc \
-	oct-env.cc oct-getopt.c oct-group.cc oct-kpse.c oct-passwd.cc \
-	oct-rl-edit.c oct-rl-hist.c oct-shlib.cc oct-syscalls.cc \
-	oct-time.cc pathsearch.cc prog-args.cc rename.c rmdir.c \
-	strftime.c strptime.c str-vec.cc tempname.c tempnam.c \
+	oct-env.cc oct-fftw.cc oct-getopt.c oct-group.cc oct-kpse.c \
+	oct-passwd.cc oct-rl-edit.c oct-rl-hist.c oct-shlib.cc \
+	oct-syscalls.cc oct-time.cc pathsearch.cc prog-args.cc rename.c \
+	rmdir.c strftime.c strptime.c str-vec.cc tempname.c tempnam.c \
 	$(TEMPLATE_SRC) \
 	$(TI_SRC) \
 	$(MATRIX_SRC) \
 	$(MX_OP_SRC) \
 	$(VX_OP_SRC)
 
 EXTRAS := mx-inlines.cc
 
diff --git a/liboctave/dMatrix.cc b/liboctave/dMatrix.cc
--- a/liboctave/dMatrix.cc
+++ b/liboctave/dMatrix.cc
@@ -45,16 +45,20 @@ Software Foundation, 59 Temple Place - S
 #include "lo-mappers.h"
 #include "lo-utils.h"
 #include "mx-base.h"
 #include "mx-m-dm.h"
 #include "mx-dm-m.h"
 #include "mx-inlines.cc"
 #include "oct-cmplx.h"
 
+#ifdef HAVE_FFTW
+#include "oct-fftw.h"
+#endif
+
 // Fortran functions we call.
 
 extern "C"
 {
   int F77_FCN (dgebal, DGEBAL) (const char*, const int&, double*,
                                 const int&, int&, int&, double*,
                                 int&, long, long);
 
@@ -643,16 +647,114 @@ Matrix::pseudo_inverse (double tol)
     {
       Matrix Ur = U.extract (0, 0, nr-1, r);
       DiagMatrix D = DiagMatrix (sigma.extract (0, r)) . inverse ();
       Matrix Vr = V.extract (0, 0, nc-1, r);
       return Vr * D * Ur.transpose ();
     }
 }
 
+#ifdef HAVE_FFTW
+
+ComplexMatrix
+Matrix::fourier (void) const
+{
+  size_t nr = rows ();
+  size_t nc = cols ();
+
+  ComplexMatrix retval (nr, nc);
+
+  size_t npts, nsamples;
+
+  if (nr == 1 || nc == 1)
+    {
+      npts = nr > nc ? nr : nc;
+      nsamples = 1;
+    }
+  else
+    {
+      npts = nr;
+      nsamples = nc;
+    }
+
+  ComplexMatrix tmp (*this);
+  Complex *in (tmp.fortran_vec ());
+  Complex *out (retval.fortran_vec ());
+
+  for (size_t i = 0; i < nsamples; i++)
+    {
+      octave_fftw::fft (&in[npts * i], &out[npts * i], npts);
+    }
+
+  return retval;
+}
+
+ComplexMatrix
+Matrix::ifourier (void) const
+{
+  size_t nr = rows ();
+  size_t nc = cols ();
+
+  ComplexMatrix retval (nr, nc);
+
+  size_t npts, nsamples;
+
+  if (nr == 1 || nc == 1)
+    {
+      npts = nr > nc ? nr : nc;
+      nsamples = 1;
+    }
+  else
+    {
+      npts = nr;
+      nsamples = nc;
+    }
+
+  ComplexMatrix tmp (*this);
+  Complex *in (tmp.fortran_vec ());
+  Complex *out (retval.fortran_vec ());
+
+  for (size_t i = 0; i < nsamples; i++)
+    {
+      octave_fftw::ifft (&in[npts * i], &out[npts * i], npts);
+    }
+
+  return retval;
+}
+
+ComplexMatrix
+Matrix::fourier2d (void) const
+{
+  int nr = rows ();
+  int nc = cols ();
+
+  ComplexMatrix retval (*this);
+  // Note the order of passing the rows and columns to account for
+  // column-major storage.
+  octave_fftw::fft2d (retval.fortran_vec (), nc, nr);
+
+  return retval;
+}
+
+ComplexMatrix
+Matrix::ifourier2d (void) const
+{
+  int nr = rows ();
+  int nc = cols ();
+
+  ComplexMatrix retval (*this);
+  // Note the order of passing the rows and columns to account for
+  // column-major storage.
+  octave_fftw::ifft2d (retval.fortran_vec (), nc, nr);
+
+  return retval;
+}
+
+#else
+
 ComplexMatrix
 Matrix::fourier (void) const
 {
   ComplexMatrix retval;
 
   int nr = rows ();
   int nc = cols ();
 
@@ -843,16 +945,18 @@ Matrix::ifourier2d (void) const
 
       for (int i = 0; i < npts; i++)
 	tmp_data[i*nr + j] = prow[i] / static_cast<double> (npts);
     }
 
   return retval;
 }
 
+#endif
+
 DET
 Matrix::determinant (void) const
 {
   int info;
   double rcond;
   return determinant (info, rcond);
 }
 
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,12 @@
+2001-05-02  Mumit Khan  <khan@nanotech.wisc.edu>
+
+	* Makefile.in (octave): Add $(FFTW_LIBS).
+
 2001-04-27  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* DLD-FUNCTIONS/sort.cc (mx_sort): Check for NaNs in comparisons.
 
 2001-04-26  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* Makefile.in (OCTAVE_LIBS): Delete $(LIBREADLINE) from the list.
 	(octave): Delete TERMLIBS from link command.
diff --git a/src/Makefile.in b/src/Makefile.in
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -254,17 +254,17 @@ stamp-prereq: defaults.h oct-conf.h
 
 octave: stamp-prereq $(LIBRARIES) stamp-oct-links \
 	octave.o builtins.o ops.o $(DLD_STATIC_OBJ)
 	$(LD_CXX) $(CPPFLAGS) $(ALL_CXXFLAGS) $(RDYNAMIC_FLAG) \
 	$(ALL_LDFLAGS) -o octave \
 	octave.o builtins.o ops.o $(XERBLA) $(DLD_STATIC_OBJ) \
 	$(OCTAVE_LFLAGS) \
 	$(OCTAVE_LIBS) \
-	$(LEXLIB) $(BLAS_LIBS) $(LIBS) $(FLIBS)
+	$(LEXLIB) $(BLAS_LIBS) $(FFTW_LIBS) $(LIBS) $(FLIBS)
 
 stmp-pic: pic
 	@if [ -f stmp-pic ]; then \
 	  true; \
 	else \
 	  echo "touch stmp-pic"; \
 	  touch stmp-pic; \
 	fi
