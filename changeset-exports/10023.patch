# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1261776033 -3600
#      Fri Dec 25 22:20:33 2009 +0100
# Node ID 73fc43e01f4cd7d7bab41f1fe2ce9246bc58f4a5
# Parent  a14dc255427fa305979ab03408e97e9a8f266fac
allow issquare on arbitrary data

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,14 @@
+2009-12-25  Jaroslav Hajek  <highegg@gmail.com>
+
+	* general/issquare.m: Do not check type.
+	* linear-algebra/issymmetric.m: Strengthen test.
+	* linear-algebra/ishermitian.m: Strengthen test.
+
 2009-12-25  Jaroslav Hajek  <highegg@gmail.com>
 
 	* strings/strfind.m: Remove.
 	* strings/module.mk: Update.
 
 2009-12-24  Jaroslav Hajek  <highegg@gmail.com>
 
 	* strings/strjust.m: Rewrite.
diff --git a/scripts/general/issquare.m b/scripts/general/issquare.m
--- a/scripts/general/issquare.m
+++ b/scripts/general/issquare.m
@@ -25,17 +25,17 @@
 
 ## Author: A. S. Hodel <scotte@eng.auburn.edu>
 ## Created: August 1993
 ## Adapted-By: jwe
 
 function retval = issquare (x)
 
   if (nargin == 1)
-    if (ismatrix (x) && ndims (x) == 2)
+    if (ndims (x) == 2)
       [r, c] = size (x);
       retval = r == c;
     else
       retval = false;
     endif
   else
     print_usage ();
   endif
@@ -46,25 +46,25 @@ endfunction
 
 %!assert(!(issquare ([1, 2])));
 
 %!assert(issquare ([]));
 
 %!assert(issquare ([1, 2; 3, 4]));
 
 %!test
-%! assert(!(issquare ("t")));
+%! assert(issquare ("t"));
 
 %!assert(!(issquare ("test")));
 
 %!test
-%! assert(!(issquare (["test"; "ing"; "1"; "2"])));
+%! assert(issquare (["test"; "ing"; "1"; "2"]));
 
 %!test
 %! s.a = 1;
-%! assert(!(issquare (s)));
+%! assert(issquare (s));
 
 %!assert(!(issquare ([1, 2; 3, 4; 5, 6])));
 
 %!error issquare ();
 
 %!error issquare ([1, 2; 3, 4], 2);
 
diff --git a/scripts/linear-algebra/ishermitian.m b/scripts/linear-algebra/ishermitian.m
--- a/scripts/linear-algebra/ishermitian.m
+++ b/scripts/linear-algebra/ishermitian.m
@@ -33,17 +33,17 @@
 ## Adapted-By: jwe
 
 function retval = ishermitian (x, tol = 0)
 
   if (nargin < 1 || nargin > 2)
     print_usage ();
   endif
 
-  retval = issquare (x);
+  retval = isnumeric (x) && issquare (x);
   if (retval)
     if (tol == 0)
       retval = all ((x == x')(:));
     else
       norm_x = norm (x, inf);
       retval = norm_x == 0 || norm (x - x', inf) / norm_x <= tol;
     endif
   endif
diff --git a/scripts/linear-algebra/issymmetric.m b/scripts/linear-algebra/issymmetric.m
--- a/scripts/linear-algebra/issymmetric.m
+++ b/scripts/linear-algebra/issymmetric.m
@@ -34,17 +34,17 @@
 ## Adapted-By: jwe
 
 function retval = issymmetric (x, tol = 0)
 
   if (nargin < 1 || nargin > 2)
     print_usage ();
   endif
 
-  retval = issquare (x);
+  retval = isnumeric (x) && issquare (x);
   if (retval)
     if (tol == 0)
       retval = all ((x == x.')(:));
     else
       norm_x = norm (x, inf);
       retval = norm_x == 0 || norm (x - x.', inf) / norm_x <= tol;
     endif
   endif
