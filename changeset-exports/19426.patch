# HG changeset patch
# User Torsten <ttl@justmail.de>
# Date 1419430051 -3600
#      Wed Dec 24 15:07:31 2014 +0100
# Branch gui-release
# Node ID f90bb1e30de2f663a8a27565af9db29ba7d8598c
# Parent  5e93d228ff6b3e3a9e636f2e56dbb7588195d1cd
switching between edit and main shortcuts depending on active dock widget now

* file-editor-tab.cc (ctor): do not connect removed signal from edit area;
  (edit_area_has_focus): removed this related slot

* file-editor-tab.h: remove slot

* octave-qscintilla.cc (focusInEvent, focusOutEvent): removed event handlers

* octave-qscintilla.h (focusInEvent, focusOutEvent): removed event handlers

* main-window.cc (focus_changed): call set_global_edit_shortcuts depending
  on new active dock

diff --git a/libgui/src/m-editor/file-editor-tab.cc b/libgui/src/m-editor/file-editor-tab.cc
--- a/libgui/src/m-editor/file-editor-tab.cc
+++ b/libgui/src/m-editor/file-editor-tab.cc
@@ -164,19 +164,16 @@ file_editor_tab::file_editor_tab (const 
 
   // connect modified signal
   connect (_edit_area, SIGNAL (modificationChanged (bool)),
            this, SLOT (update_window_title (bool)));
 
   connect (_edit_area, SIGNAL (copyAvailable (bool)),
            this, SLOT (handle_copy_available (bool)));
 
-  connect (_edit_area, SIGNAL (qsci_has_focus_signal (bool)),
-           this, SLOT (edit_area_has_focus (bool)));
-
   connect (&_file_system_watcher, SIGNAL (fileChanged (const QString&)),
            this, SLOT (file_has_changed (const QString&)));
 
   QSettings *settings = resource_manager::get_settings ();
   if (settings)
     notice_settings (settings);
 }
 
@@ -2083,22 +2080,16 @@ file_editor_tab::handle_cursor_moved (in
 }
 
 void
 file_editor_tab::create_context_menu (QMenu *menu)
 {
   emit create_context_menu_tab_signal (menu);
 }
 
-void
-file_editor_tab::edit_area_has_focus (bool focus)
-{
-  emit set_global_edit_shortcuts_signal (! focus);
-}
-
 QString
 file_editor_tab::get_function_name ()
 {
   QRegExp rxfun1 ("^[\t ]*function[^=]+=([^\\(]+)\\([^\\)]*\\)[\t ]*$");
   QRegExp rxfun2 ("^[\t ]*function[\t ]+([^\\(]+)\\([^\\)]*\\)[\t ]*$");
   QRegExp rxfun3 ("^[\t ]*function[^=]+=[\t ]*([^\\s]+)[\t ]*$");
   QRegExp rxfun4 ("^[\t ]*function[\t ]+([^\\s]+)[\t ]*$");
 
diff --git a/libgui/src/m-editor/file-editor-tab.h b/libgui/src/m-editor/file-editor-tab.h
--- a/libgui/src/m-editor/file-editor-tab.h
+++ b/libgui/src/m-editor/file-editor-tab.h
@@ -116,17 +116,16 @@ public slots:
   void set_modified (bool modified = true);
 
   QString load_file (const QString& fileName);
   void new_file (const QString& commands = QString ());
 
   void file_has_changed (const QString& fileName);
 
   void execute_command_in_terminal (const QString& command);
-  void edit_area_has_focus (bool foucs);
   void create_context_menu (QMenu *);
   void handle_context_menu_edit (const QString&);
 
 signals:
 
   void file_name_changed (const QString& fileName, const QString& toolTip);
   void editor_state_changed (bool copy_available, const QString& fileName,
                              bool is_octave_file);
diff --git a/libgui/src/m-editor/octave-qscintilla.cc b/libgui/src/m-editor/octave-qscintilla.cc
--- a/libgui/src/m-editor/octave-qscintilla.cc
+++ b/libgui/src/m-editor/octave-qscintilla.cc
@@ -274,28 +274,14 @@ octave_qscintilla::contextmenu_run (bool
 {
   QStringList commands = selectedText ().split (QRegExp("[\r\n]"),
                                                 QString::SkipEmptyParts);
   for (int i = 0; i < commands.size (); i++ )
     emit execute_command_in_terminal_signal (commands.at (i));
 }
 
 void
-octave_qscintilla::focusInEvent (QFocusEvent *focusEvent)
-{
-  emit qsci_has_focus_signal (true);
-  QsciScintilla::focusInEvent(focusEvent);
-}
-
-void
-octave_qscintilla::focusOutEvent (QFocusEvent *focusEvent)
-{
-  emit qsci_has_focus_signal (false);
-  QsciScintilla::focusOutEvent(focusEvent);
-}
-
-void
 octave_qscintilla::text_changed ()
 {
   emit status_update (isUndoAvailable (), isRedoAvailable ());
 }
 
 #endif
diff --git a/libgui/src/m-editor/octave-qscintilla.h b/libgui/src/m-editor/octave-qscintilla.h
--- a/libgui/src/m-editor/octave-qscintilla.h
+++ b/libgui/src/m-editor/octave-qscintilla.h
@@ -62,18 +62,15 @@ private slots:
   void contextmenu_help_doc (bool);
   void contextmenu_edit (bool);
   void contextmenu_run (bool);
 
   void text_changed (void);
 
 protected:
 
-  void focusInEvent (QFocusEvent *focusEvent);
-  void focusOutEvent (QFocusEvent *focusEvent);
-
 private:
 
   QString _word_at_cursor;
 
 };
 
 #endif
diff --git a/libgui/src/main-window.cc b/libgui/src/main-window.cc
--- a/libgui/src/main-window.cc
+++ b/libgui/src/main-window.cc
@@ -179,17 +179,27 @@ main_window::focus_changed (QWidget *, Q
         break; // we have arrived where we began ==> exit loop
 
       count++;
     }
 
   // if new dock has focus, emit signal and store active focus
   if (dock != _active_dock)
     {
+      // signal to all dock widgets for updating the style
       emit active_dock_changed (_active_dock, dock);
+
+      // if editor gets/loses focus, shortcuts and menus have to be updated
+      octave_dock_widget *edit_dock_widget =
+                        static_cast <octave_dock_widget *> (editor_window);
+      if (edit_dock_widget == dock)
+        set_global_edit_shortcuts (false);
+      else if (edit_dock_widget == _active_dock)
+        set_global_edit_shortcuts (true);
+
       _active_dock = dock;
     }
 }
 
 bool
 main_window::command_window_has_focus (void) const
 {
   return command_window->has_focus ();
