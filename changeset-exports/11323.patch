# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1291796704 18000
#      Wed Dec 08 03:25:04 2010 -0500
# Node ID d7fbb08e28cf3a2c1b26fe47888f28a3c5ed2c86
# Parent  71cce7108190e3b7cbfcf7ac6d7bc829e6cebd4f
strmatch.m: avoid passing length of 0 to strncmp

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2010-12-08  John W. Eaton  <jwe@octave.org>
+
+	* strings/strmatch.m: Avoid passing length of zero to strncmp.
+	Bug #31774.
+
 2010-12-07  John W. Eaton  <jwe@octave.org>
 
 	* general/repmat.m: Handle special case of replicating scalar
 	using an index vector containing zeros.  Bug #31775.
 
 2010-12-06  Rik  <octave@nomad.inbox5.com>
 
 	* plot/plot.m: Eliminate present tense in first sentence of docstring.
diff --git a/scripts/strings/strmatch.m b/scripts/strings/strmatch.m
--- a/scripts/strings/strmatch.m
+++ b/scripts/strings/strmatch.m
@@ -59,17 +59,21 @@ function idx = strmatch (s, A, exact)
   ## Truncate trailing whitespace.
   s = strtrimr (s);
 
   len = length (s);
 
   exact = nargin == 3 && ischar (exact) && strcmp (exact, "exact");
 
   if (iscell (A))
-    idx = find (strncmp (s, A, len));
+    if (len > 0)
+      idx = find (strncmp (s, A, len));
+    else
+      idx = find (strcmp (s, A));
+    endif
     if (exact)
       ## We can't just use strcmp, because we need to ignore whitespace.
       B = cellfun (@strtrimr, A(idx), "uniformoutput", false);
       idx = idx (strcmp (s, B));
     endif
   elseif (ischar (A))
     [nr, nc] = size (A);
     if (len > nc)
@@ -102,9 +106,9 @@ endfunction
 %!assert (strmatch("a", {"aaa", "bab", "bbb"}), 1);
 %!assert (strmatch ("apple", "apple juice"), 1);
 %!assert (strmatch ("apple", ["apple pie"; "apple juice"; "an apple"]),
 %!        [1; 2]);
 %!assert (strmatch ("apple", {"apple pie"; "apple juice"; "tomato"}),
 %!        [1; 2]);
 %!assert (strmatch ("apple pie", "apple"), []);
 %!assert (strmatch ("a b", {"a b", "a c", "c d"}));
-
+%!assert (strmatch ("", {"", "foo", "bar", ""}), [1, 4])
