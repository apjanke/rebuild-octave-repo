# HG changeset patch
# User jwe
# Date 1162835572 0
#      Mon Nov 06 17:52:52 2006 +0000
# Node ID f6c2d9276572a7083bcfbac24f585b2e66aedf39
# Parent  4f39856fcb9392547f804b5782cef3ab7f7c79f8
[project @ 2006-11-06 17:52:51 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,15 @@
+2006-11-06  Michael Goffioul  <michael.goffioul@swing.be>
+
+	* configure.in (CRUFT_DLL_DEFS, OCTAVE_DLL_DEFS, OCTINTERP_DLL_DEFS):
+	Also rename in AC_SUBST calls.
+	* Makeconf.in (ALL_CFLAGS): Use DLL_CDEFS instead of XTRA_CDEFS.
+	(ALL_CXXFLAGS): Use DLL_CDEFS instead of XTRA_CXXDEFS.
+
 2006-11-03  John W. Eaton  <jwe@octave.org>
 
 	* configure.in (CRUFT_DLL_DEFS): Rename from XTRA_CRUFT_DEFS.
 	(OCTAVE_DLL_DEFS): Rename from XTRA_OCTAVE_DEFS.
 	(OCTINTERP_DLL_DEFS): Rename from XTRA_OCTINTERP_DEFS.
 	(XTRA_CRUFT_LINK_FLAGS): Rename from XTRA_CRUFT_LINK_DEPS.
 
 2006-11-02  John W. Eaton  <jwe@octave.org>
diff --git a/Makeconf.in b/Makeconf.in
--- a/Makeconf.in
+++ b/Makeconf.in
@@ -146,17 +146,17 @@ DEFS = @DEFS@
 UGLY_DEFS = @UGLY_DEFS@
 
 CC = @CC@
 CC_VERSION = @CC_VERSION@
 CFLAGS = @CFLAGS@
 CPICFLAG = @CPICFLAG@
 XTRA_CFLAGS = @XTRA_CFLAGS@
 WARN_CFLAGS = @WARN_CFLAGS@
-ALL_CFLAGS = $(INCFLAGS) $(XTRA_CDEFS) $(DEFS) $(XTRA_CFLAGS) $(WARN_CFLAGS) $(CFLAGS)
+ALL_CFLAGS = $(INCFLAGS) $(DLL_CDEFS) $(DEFS) $(XTRA_CFLAGS) $(WARN_CFLAGS) $(CFLAGS)
 BUG_CFLAGS = $(DEFS) $(XTRA_CFLAGS) $(WARN_CFLAGS) $(CFLAGS)
 
 BUILD_CC = @BUILD_CC@
 BUILD_CFLAGS = @BUILD_CFLAGS@
 
 DEPEND_FLAGS = @DEPEND_FLAGS@
 DEPEND_EXTRA_SED_PATTERN = @DEPEND_EXTRA_SED_PATTERN@
 INCLUDE_DEPS = @INCLUDE_DEPS@
@@ -167,17 +167,17 @@ endif
 CXX = @CXX@
 CXX_VERSION = @CXX_VERSION@
 CXXCPP = @CXXCPP@
 CXXFLAGS = @CXXFLAGS@
 CXXPICFLAG = @CXXPICFLAG@
 XTRA_CXXFLAGS = @XTRA_CXXFLAGS@
 WARN_CXXFLAGS = @WARN_CXXFLAGS@
 ALL_CXXFLAGS = \
-  $(INCFLAGS) $(XTRA_CXXDEFS) $(DEFS) $(XTRA_CXXFLAGS) $(WARN_CXXFLAGS) $(CXXFLAGS)
+  $(INCFLAGS) $(DLL_CXXDEFS) $(DEFS) $(XTRA_CXXFLAGS) $(WARN_CXXFLAGS) $(CXXFLAGS)
 BUG_CXXFLAGS = $(DEFS) $(XTRA_CXXFLAGS) $(WARN_CXXFLAGS) $(CXXFLAGS)
 
 BUILD_CXX = @BUILD_CXX@
 BUILD_CXXFLAGS = @BUILD_CXXFLAGS@
 
 CPPFLAGS = @CPPFLAGS@
 
 LD_CXX = @LD_CXX@
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -24,17 +24,17 @@ dnl Copyright (C) 1996, 1997 John W. Eat
 ### Preserve CFLAGS and CXXFLAGS from the environment before doing
 ### anything else because we don't know which macros might call
 ### AC_PROG_CC or AC_PROG_CXX.
 
 EXTERN_CFLAGS="$CFLAGS"
 EXTERN_CXXFLAGS="$CXXFLAGS"
 
 AC_INIT
-AC_REVISION($Revision: 1.543 $)
+AC_REVISION($Revision: 1.544 $)
 AC_PREREQ(2.57)
 AC_CONFIG_SRCDIR([src/octave.cc])
 AC_CONFIG_HEADER(config.h)
 
 OCTAVE_HOST_TYPE
 
 AC_DEFINE(OCTAVE_SOURCE, 1, [Define if this is Octave.])
   
@@ -1251,19 +1251,19 @@ AC_SUBST(SH_LDFLAGS)
 AC_SUBST(DL_LD)
 AC_SUBST(DL_LDFLAGS)
 AC_SUBST(MKOCTFILE_DL_LDFLAGS)
 AC_SUBST(SONAME_FLAGS)
 AC_SUBST(NO_OCT_FILE_STRIP)
 AC_SUBST(RLD_FLAG)
 AC_SUBST(TEMPLATE_AR)
 AC_SUBST(TEMPLATE_ARFLAGS)
-AC_SUBST(XTRA_CRUFT_DEFS)
-AC_SUBST(XTRA_OCTAVE_DEFS)
-AC_SUBST(XTRA_OCTINTERP_DEFS)
+AC_SUBST(CRUFT_DLL_DEFS)
+AC_SUBST(OCTAVE_DLL_DEFS)
+AC_SUBST(OCTINTERP_DLL_DEFS)
 AC_SUBST(library_path_var)
 
 ### special checks for odd OS specific things.
 ###
 ### I am told that on some SCO systems, the only place to find some
 ### functions like gethostname and gettimeofday is in libsocket.
 
 AC_CHECK_FUNCS(gethostname, [], [AC_CHECK_LIB(socket, gethostname)])
diff --git a/liboctave/Array.cc b/liboctave/Array.cc
--- a/liboctave/Array.cc
+++ b/liboctave/Array.cc
@@ -3129,16 +3129,26 @@ assignN (Array<LT>& lhs, const Array<RT>
 		}
 	      else
 		final_lhs_dims = new_dims;
 
 	      lhs_dims_len = new_dims.length ();
 
 	      frozen_len = freeze (idx, new_dims, true);
 
+	      for (int i = 0; i < idx.length (); i++)
+		{
+		  if (! idx(i))
+		    {
+		      retval = 0;
+		      lhs.clear_index ();
+		      return retval;
+		    }
+		}
+
 	      if (rhs_is_scalar)
 		{
 		  if (n_idx < orig_lhs_dims_len)
 		    lhs = lhs.reshape (lhs_dims);
 
 		  lhs.resize_and_fill (new_dims, rfv);
 
 		  if  (! final_lhs_dims.any_zero ())
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,12 @@
+2006-11-06  John W. Eaton  <jwe@octave.org>
+
+	* Array.cc (assignN): Exit early if invalid indices are found.
+
 2006-11-03  Michael Goffioul  <michael.goffioul@swing.be>
 
 	* strftime.c [HAVE_TZNAME]: Tag tzname with OCTAVE_IMPORT.
 
 2006-11-03  John W. Eaton  <jwe@octave.org>
 
 	* Makefile.in (DLL_CXXDEFS): Rename from XTRA_CXXDEFS.
 	(DLL_CDEFS): Rename from XTRA_CDEFS.
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2006-11-06  John W. Eaton  <jwe@octave.org>
+
+	* oct-hist.cc (default_history_file): If env_file is not empty,
+	just accept it rather than checking to see if it exists.
+
 2006-11-03  Bill Denney  <denney@seas.upenn.edu>
 
 	* help.cc (keywords): Document try and unwind_protect.
 
 2006-11-03  John W. Eaton  <jwe@octave.org>
 
 	* Makefile.in (DLL_CXXDEFS): Rename from XTRA_CXXDEFS.
 	(DLL_CDEFS): Rename from XTRA_CDEFS.
diff --git a/src/oct-hist.cc b/src/oct-hist.cc
--- a/src/oct-hist.cc
+++ b/src/oct-hist.cc
@@ -79,25 +79,17 @@ bool input_from_tmp_history_file = false
 static std::string
 default_history_file (void)
 {
   std::string file;
 
   std::string env_file = octave_env::getenv ("OCTAVE_HISTFILE");
 
   if (! env_file.empty ())
-    {
-      std::fstream f (env_file.c_str (), (std::ios::in | std::ios::out));
-
-      if (f)
-	{
-	  file = env_file;
-	  f.close ();
-	}
-    }
+    file = env_file;
 
   if (file.empty ())
     {
       std::string home_dir = octave_env::get_home_directory ();
 
       if (! home_dir.empty ())
 	{
 	  file = home_dir;
