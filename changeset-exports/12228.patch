# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1296461941 18000
#      Mon Jan 31 03:19:01 2011 -0500
# Node ID 0f70c5db58c396b954abcb2f6c7bd43a58142d33
# Parent  d519450e251bd453d69f05a15e9b6a83b9a12848
try to get better value than \ for P_tmpdir on Windows systems

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,14 @@
+2011-01-31  John W. Eaton  <jwe@octave.org>
+
+	* sysdep.cc (get_P_tmpdir): New function.
+	* file-io.cc (FP_tmpdir): Use it.
+	Bug #32158.
+
 2011-01-30  Rik  <octave@nomad.inbox5.com>
 
 	* DLD-FUNCTIONS/__init_fltk__.cc (mouse_wheel_zoom, gui_mode): Rename
 	functions and strip "fltk_" prefix.  Improve docstrings.
 
 2011-01-30  John W. Eaton  <jwe@octave.org>
 
 	* txt-eng-ft.cc (ft_manager::ft_manager): Omit fc_init_done from
diff --git a/src/file-io.cc b/src/file-io.cc
--- a/src/file-io.cc
+++ b/src/file-io.cc
@@ -2120,33 +2120,29 @@ const_value (const char *, const octave_
   if (nargin == 0)
     retval = val;
   else
     print_usage ();
 
   return retval;
 }
 
-#if ! defined (P_tmpdir)
-#define P_tmpdir "/tmp"
-#endif
-
 DEFUNX ("P_tmpdir", FP_tmpdir, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} P_tmpdir ()\n\
 Return the default name of the directory for temporary files on\n\
 this system.  The name of this directory is system dependent.\n\
 @end deftypefn")
 {
   octave_value retval;
 
   int nargin = args.length ();
 
   if (nargin == 0)
-    retval = P_tmpdir;
+    retval = get_P_tmpdir ();
   else
     print_usage ();
 
   return retval;
 }
 
 // NOTE: the values of SEEK_SET, SEEK_CUR, and SEEK_END have to be
 // this way for Matlab compatibility.
diff --git a/src/sysdep.cc b/src/sysdep.cc
--- a/src/sysdep.cc
+++ b/src/sysdep.cc
@@ -465,16 +465,55 @@ octave_kbhit (bool wait)
   octave_set_interrupt_handler (saved_interrupt_handler, true);
 
   raw_mode (false, true);
 #endif
 
   return c;
 }
 
+std::string
+get_P_tmpdir (void)
+{
+#if defined (__WIN32__) && ! defined (_POSIX_VERSION)
+
+  std::string retval;
+
+#if defined (P_tmpdir)
+  retval = P_tmpdir;
+#endif
+
+  // Apparently some versions of MinGW and MSVC either don't define
+  // P_tmpdir, or they define it to a single backslash, neither of which
+  // is particularly helpful.
+
+  if (retval.empty () || retval == "\\")
+    {
+      retval = octave_env::getenv ("TEMP");
+
+      if (retval.empty ())
+        retval = octave_env::getenv ("TMP");
+
+      if (retval.empty ())
+        retval = "c:\\temp";
+    }
+
+  return retval;
+
+#elif defined (P_tmpdir)
+
+  return P_tmpdir;
+
+#else
+
+  return "/tmp";
+
+#endif
+}
+
 DEFUN (clc, , ,
   "-*- texinfo -*-\n\
 @deftypefn  {Built-in Function} {} clc ()\n\
 @deftypefnx {Built-in Function} {} home ()\n\
 Clear the terminal screen and move the cursor to the upper left corner.\n\
 @end deftypefn")
 {
   command_editor::clear_screen ();
diff --git a/src/sysdep.h b/src/sysdep.h
--- a/src/sysdep.h
+++ b/src/sysdep.h
@@ -36,16 +36,18 @@ extern void sysdep_cleanup (void);
 
 extern OCTINTERP_API void raw_mode (bool, bool wait = true);
 
 extern OCTINTERP_API FILE *octave_popen (const char *command, const char *mode);
 extern OCTINTERP_API int octave_pclose (FILE *f);
 
 extern OCTINTERP_API int octave_kbhit (bool wait = true);
 
+extern OCTINTERP_API std::string get_P_tmpdir (void);
+
 extern void w32_set_quiet_shutdown (void);
 
 #if defined (__WIN32__) && ! defined (_POSIX_VERSION)
 extern void MINGW_signal_cleanup (void);
 #define USE_W32_SIGINT 1
 #define MINGW_SIGNAL_CLEANUP() MINGW_signal_cleanup ()
 #else
 #define MINGW_SIGNAL_CLEANUP() do { } while (0)
