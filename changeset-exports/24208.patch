# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1510155143 18000
#      Wed Nov 08 10:32:23 2017 -0500
# Node ID eec262017c6a57d0b09391ae54a1855d8ebf8744
# Parent  f3d754deb41dd0a6631a153ae6b2eed09275262f
maint: Strip trailing whitespace from source files.

diff --git a/NEWS b/NEWS
--- a/NEWS
+++ b/NEWS
@@ -59,17 +59,17 @@ Summary of important user-visible change
 
       warning ("off", "Octave:quadcc:RelTol-conversion")
 
  ** The properties "BackgroundColor", "EdgeColor", "LineStyle",
     "LineWidth", and "Margin" are now implemented for text objects using
     an OpenGL toolkit.
 
  ** An initial implementation of alpha transparency has been made for
-    patch and surface objects.  Printing to svg and pdf is supported. 
+    patch and surface objects.  Printing to svg and pdf is supported.
 
  ** Other new functions added in 4.4:
 
       camlookat
       camorbit
       campos
       camroll
       camtarget
diff --git a/doc/interpreter/plot.txi b/doc/interpreter/plot.txi
--- a/doc/interpreter/plot.txi
+++ b/doc/interpreter/plot.txi
@@ -280,34 +280,34 @@ get or set individual axis limits.  Each
 @anchor{XREFylim}
 @anchor{XREFzlim}
 @findex ylim
 @findex zlim
 @DOCSTRING(xlim)
 
 The @code{xticks}, @code{yticks}, @code{zticks}, @code{rticks}, and
 @code{thetaticks} functions may be used to get or set the tick mark locations
-and modes on the respective axis.  Each has the same form, although mode 
-options are not currently avaliable for @code{rticks}, and @code{thetaticks}. 
+and modes on the respective axis.  Each has the same form, although mode
+options are not currently avaliable for @code{rticks}, and @code{thetaticks}.
 
 @c FIXME: Update this section if polarplot and polar axes changes change the
 @c        associated axis properties.
 @anchor{XREFyticks}
 @anchor{XREFzticks}
 @anchor{XREFrticks}
 @anchor{XREFthetaticks}
 @findex yticks
 @findex zticks
 @findex rticks
 @findex thetaticks
 @DOCSTRING(xticks)
 
 The @code{xticklabels}, @code{yticklabels}, and @code{zticklabels} functions
 may be used to get or set the label assigned to each tick location and the
-labeling mode on the respective axis.  Each has the same form. 
+labeling mode on the respective axis.  Each has the same form.
 
 @c FIXME: Update this section if polarplot and polar axes changes change the
 @c        associated axis properties.
 @c        Matlab also implements rticklabels and thetaticklabels.
 @anchor{XREFyticklabels}
 @anchor{XREFzticklabels}
 @findex yticklabels
 @findex zticklabels
diff --git a/libinterp/corefcn/gl2ps-print.cc b/libinterp/corefcn/gl2ps-print.cc
--- a/libinterp/corefcn/gl2ps-print.cc
+++ b/libinterp/corefcn/gl2ps-print.cc
@@ -88,17 +88,17 @@ namespace octave
 
   protected:
 
     Matrix render_text (const std::string& txt,
                         double x, double y, double z,
                         int halign, int valign, double rotation = 0.0);
 
     void set_font (const base_properties& props);
-  
+
     static bool has_alpha (const graphics_handle& h)
     {
       bool retval = false;
       graphics_object go = gh_manager::get_object (h);
 
       if (! go.valid_object ())
         return retval;
 
@@ -110,17 +110,17 @@ namespace octave
               retval = has_alpha (graphics_handle (children(ii)));
               if (retval)
                 break;
             }
         }
       else if (go.isa ("patch") || go.isa ("surface"))
         {
           octave_value fa = go.get ("facealpha");
-          if (fa.is_scalar_type () && fa.is_double_type () 
+          if (fa.is_scalar_type () && fa.is_double_type ()
               && fa.double_value () < 1)
             retval = true;
         }
 
       return retval;
     }
 
     void draw_axes (const axes::properties& props)
@@ -132,44 +132,44 @@ namespace octave
 
 
       // Don't remove hidden primitives when some of them are transparent
       GLint opts;
       gl2psGetOptions (&opts);
       if (has_alpha (props.get___myhandle__ ()))
         {
           opts &= ~GL2PS_OCCLUSION_CULL;
-          // FIXME: currently the GL2PS_BLEND (which is more an equivalent of 
+          // FIXME: currently the GL2PS_BLEND (which is more an equivalent of
           // GL_ALPHA_TEST than GL_BLEND) is not working on a per primitive
           // basis. We thus set it once per viewport.
           gl2psEnable (GL2PS_BLEND);
         }
       else
         {
           opts |= GL2PS_OCCLUSION_CULL;
           gl2psDisable (GL2PS_BLEND);
         }
 
       gl2psSetOptions (opts);
 
-      // Draw and finish () or there may be primitives missing in the gl2ps 
+      // Draw and finish () or there may be primitives missing in the gl2ps
       // output.
       opengl_renderer::draw_axes (props);
       finish ();
 
       // Finalize viewport
       GLint state = gl2psEndViewport ();
       if (state == GL2PS_NO_FEEDBACK && props.is_visible ())
         warning ("gl2ps_renderer::draw_axes: empty feedback buffer and/or nothing else to print");
       else if (state == GL2PS_ERROR)
         error ("gl2ps_renderer::draw_axes: gl2psEndPage returned GL2PS_ERROR");
 
       buffer_overflow |= (state == GL2PS_OVERFLOW);
 
-      // Don't draw background for subsequent viewports (legends, subplots, 
+      // Don't draw background for subsequent viewports (legends, subplots,
       // etc.)
       gl2psGetOptions (&opts);
       opts &= ~GL2PS_DRAW_BACKGROUND;
       gl2psSetOptions (opts);
     }
 
     void draw_text (const text::properties& props);
 
@@ -380,17 +380,17 @@ namespace octave
                 size_t n_end = include_graph.find_last_not_of (' ');
                 include_graph = include_graph.substr (n_begin,
                                                       n_end - n_begin + 1);
               }
             else
               include_graph = "foobar-inc";
 
             // GL2PS_SILENT was removed to allow gl2ps to print errors on stderr
-            GLint ret = gl2psBeginPage ("gl2ps_renderer figure", "Octave", 
+            GLint ret = gl2psBeginPage ("gl2ps_renderer figure", "Octave",
                                         nullptr, gl2ps_term, gl2ps_sort,
                                         (GL2PS_BEST_ROOT
                                          | gl2ps_text
                                          | GL2PS_DRAW_BACKGROUND
                                          | GL2PS_NO_PS3_SHADING
                                          | GL2PS_USE_CURRENT_VIEWPORT),
                                         GL_RGBA, 0, nullptr, 0, 0, 0,
                                         buffsize, tmpf, include_graph.c_str ());
diff --git a/libinterp/corefcn/octave-link.cc b/libinterp/corefcn/octave-link.cc
--- a/libinterp/corefcn/octave-link.cc
+++ b/libinterp/corefcn/octave-link.cc
@@ -389,22 +389,22 @@ DEFUN (openvar, args, ,
 @deftypefn {} {} openvar (@var{name})
 Open the variable @var{name} in the graphical Variable Editor.
 @end deftypefn */)
 {
   if (args.length () != 1)
     print_usage ();
 
   if (! args(0).is_string ())
-    error ("openvar: NAME must be a string"); 
+    error ("openvar: NAME must be a string");
 
   std::string name = args(0).string_value ();
 
   if (! (Fisguirunning ())(0).is_true ())
-    warning ("openvar: GUI is not running, can't start Variable Editor"); 
+    warning ("openvar: GUI is not running, can't start Variable Editor");
   else
     octave_link::openvar (name);
 
   return ovl ();
 }
 
 /*
 %!error openvar ()
diff --git a/libinterp/corefcn/quadcc.cc b/libinterp/corefcn/quadcc.cc
--- a/libinterp/corefcn/quadcc.cc
+++ b/libinterp/corefcn/quadcc.cc
@@ -1663,17 +1663,17 @@ Software, Vol. 37, Issue 3, Article No. 
         }
       else
         {
           reltol = tol(1);
           if (reltol < 0)
             error ("quadcc: relative tolerance must be >=0");
         }
     }
-  
+
   if (nargin < 5)
     nivals = 1;
   else if (! (args(4).is_real_scalar () || args(4).is_real_matrix ()))
     error ("quadcc: list of singularities (SING) must be a vector of real values");
   else
     nivals = 1 + args(4).numel ();
 
   int cquad_heapsize = (nivals >= MIN_CQUAD_HEAPSIZE ? nivals + 1
diff --git a/libinterp/octave-value/ov-null-mat.cc b/libinterp/octave-value/ov-null-mat.cc
--- a/libinterp/octave-value/ov-null-mat.cc
+++ b/libinterp/octave-value/ov-null-mat.cc
@@ -123,17 +123,17 @@ behavior when @code{isnull} is used corr
 
 @example
 @group
 str = "Hello World";
 nm = "Wally";
 str(7:end) = nm                # indexed assignment
   @result{} str = Hello Wally
 str(7:end) = ""                # indexed deletion
-  @result{} str = Hello 
+  @result{} str = Hello
 @end group
 @end example
 @seealso{isempty, isindex}
 @end deftypefn */)
 {
   if (args.length () != 1)
     print_usage ();
 
diff --git a/liboctave/array/Sparse.h b/liboctave/array/Sparse.h
--- a/liboctave/array/Sparse.h
+++ b/liboctave/array/Sparse.h
@@ -325,17 +325,17 @@ public:
   { return xelem (compute_index (ra_idx)); }
 
   // FIXME: would be nice to fix this so that we don't unnecessarily force a
   // copy, but that is not so easy, and I see no clean way to do it.
 
   T& checkelem (octave_idx_type n)
   {
     if (n < 0 || n >= numel ())
-      // FIXME: Why should we "return" when range_error is OCTAVE_NORETURN? 
+      // FIXME: Why should we "return" when range_error is OCTAVE_NORETURN?
       return range_error ("T& Sparse<T>::checkelem", n);
     else
       {
         make_unique ();
         return xelem (n);
       }
   }
 
diff --git a/scripts/general/integral2.m b/scripts/general/integral2.m
--- a/scripts/general/integral2.m
+++ b/scripts/general/integral2.m
@@ -103,17 +103,17 @@
 ##
 ## The result is a volume, which for this constant-value integrand, is the
 ## Triangle Area x Height or
 ## @code{1/2 * @var{Base} * @var{Width} * @var{Height}}.
 ##
 ## Programming Notes: If there are singularities within the integration region
 ## it is best to split the integral and place the singularities on the
 ## boundary.
-## 
+##
 ## Known @sc{matlab} incompatibility: If tolerances are left unspecified, and
 ## any integration limits are of type @code{single}, then Octave's integral
 ## functions automatically reduce the default absolute and relative error
 ## tolerances as specified above.  If tighter tolerances are desired they
 ## must be specified.  @sc{matlab} leaves the tighter tolerances appropriate
 ## for @code{double} inputs in place regardless of the class of the
 ## integration limits.
 ##
diff --git a/scripts/general/quadgk.m b/scripts/general/quadgk.m
--- a/scripts/general/quadgk.m
+++ b/scripts/general/quadgk.m
@@ -115,17 +115,17 @@
 ## @code{abs (@var{q} - @var{I})}, where @var{I} is the exact value of the
 ## integral.
 ##
 ## Reference: @nospell{L.F. Shampine},
 ## @cite{"Vectorized adaptive quadrature in @sc{matlab}"}, Journal of
 ## Computational and Applied Mathematics, pp. 131--140, Vol 211, Issue 2,
 ## Feb 2008.
 ##
-## @seealso{quad, quadv, quadl, quadcc, trapz, dblquad, triplequad, integral, 
+## @seealso{quad, quadv, quadl, quadcc, trapz, dblquad, triplequad, integral,
 ##           integral2, integral3}
 ## @end deftypefn
 
 function [q, err] = quadgk (f, a, b, varargin)
 
   if (nargin < 3)
     print_usage ();
   endif
diff --git a/scripts/general/quadl.m b/scripts/general/quadl.m
--- a/scripts/general/quadl.m
+++ b/scripts/general/quadl.m
@@ -49,17 +49,17 @@
 ## The result of the integration is returned in @var{q}.
 ##
 ## The optional output @var{nfun} indicates the total number of function
 ## evaluations performed.
 ##
 ## Reference: @nospell{W. Gander and W. Gautschi}, @cite{Adaptive Quadrature -
 ## Revisited}, BIT Vol. 40, No. 1, March 2000, pp. 84--101.
 ## @url{http://www.inf.ethz.ch/personal/gander/}
-## @seealso{quad, quadv, quadgk, quadcc, trapz, dblquad, triplequad, integral, 
+## @seealso{quad, quadv, quadgk, quadcc, trapz, dblquad, triplequad, integral,
 ##          integral2, integral3}
 ## @end deftypefn
 
 ## Original Author: Walter Gautschi
 ## Date: 08/03/98
 ## Reference: Gander, Computermathematik, Birkhaeuser, 1992.
 
 ## 2003-08-05 Shai Ayal
diff --git a/scripts/general/quadv.m b/scripts/general/quadv.m
--- a/scripts/general/quadv.m
+++ b/scripts/general/quadv.m
@@ -52,17 +52,17 @@
 ## The result of the integration is returned in @var{q}.
 ##
 ## The optional output @var{nfun} indicates the total number of function
 ## evaluations performed.
 ##
 ## Note: @code{quadv} is written in Octave's scripting language and can be
 ## used recursively in @code{dblquad} and @code{triplequad}, unlike the
 ## @code{quad} function.
-## @seealso{quad, quadl, quadgk, quadcc, trapz, dblquad, triplequad, integral, 
+## @seealso{quad, quadl, quadgk, quadcc, trapz, dblquad, triplequad, integral,
 ##          integral2, integral3}
 ## @end deftypefn
 
 function [q, nfun] = quadv (f, a, b, tol = [], trace = false, varargin)
 
   if (nargin < 3)
     print_usage ();
   endif
diff --git a/scripts/general/repelem.m b/scripts/general/repelem.m
--- a/scripts/general/repelem.m
+++ b/scripts/general/repelem.m
@@ -45,17 +45,17 @@
 ## @example
 ## @group
 ## A = [1 2 3 4 5];
 ## B = [2 1 0 1 2];
 ## repelem (A, B)
 ##   @result{}   1   1   2   4   5   5
 ## @end group
 ## @end example
-## 
+##
 ## @example
 ## @group
 ## A = magic (3)
 ##   @result{}   8   1   6
 ##        3   5   7
 ##        4   9   2
 ## B1 = [1 2 3];
 ## B2 = 2;
@@ -193,17 +193,17 @@ function retval = repelem (x, varargin)
 
     elseif (isvector (x) && isvector (R))
 
       ## vector x with vector repeat.
       if (numel (R) != numel (x))
         error (["repelem: R1 must either be scalar or have the same " ...
                 "number of elements as the vector to be replicated"]);
       endif
-        
+
       ## Basic run-length decoding in function prepareIdx returns
       ## idx2 as a row vector of element indices in the right positions.
       idx2 = prepareIdx (R);
       ## Fill with element values, direction matches element.
       retval = x(idx2);
 
     else # catch any arrays passed to x or varargin with nargin==2
       error (["repelem: when called with only two inputs they must be " ...
diff --git a/scripts/plot/appearance/camlookat.m b/scripts/plot/appearance/camlookat.m
--- a/scripts/plot/appearance/camlookat.m
+++ b/scripts/plot/appearance/camlookat.m
@@ -95,43 +95,43 @@ function camlookat (hh)
     else
       x0 = min (x0, x0_);  x1 = max (x1, x1_);
       y0 = min (y0, y0_);  y1 = max (y1, y1_);
       z0 = min (z0, z0_);  z1 = max (z1, z1_);
     endif
   endfor
 
   dar = daspect (hax);
-  
+
   ## current view direction
   curdir = (camtarget (hax) - campos (hax)) ./ dar;
   curdir /= norm (curdir);
 
   ## target to middle of bounding box
   mid = [x0+x1, y0+y1, z0+z1]/2 ./ dar;
 
   ## vertices of the bounding box
   bb = [x0 y0 z0;
         x0 y0 z1;
         x0 y1 z0;
         x0 y1 z1;
         x1 y0 z0;
         x1 y0 z1;
         x1 y1 z0;
         x1 y1 z1] ./ dar;
- 
+
   ## Find corner of bounding box with maximum opening angle.
   ## Make sure temporary pov is well outside boundary of bounding box.
   bb_diag = norm ([x0-x1, y0-y1, z0-z1] ./ dar);
   cp_test = mid - 2*bb_diag*curdir;
   bb_cp = bb - cp_test;
   bb_cp ./= norm (bb_cp, 2, "rows");
   aperture = norm (curdir .* bb_cp, 2, "rows");
   max_corner = find (aperture == max (aperture), 1, "first");
-  
+
   ## projection of corner on line of sight
   sz = curdir * (bb(max_corner,:) - mid)';
   bb_proj = mid + sz * curdir;
 
   ## Calculate distance for which that corner appears at camva/2
   dist = norm (bb(max_corner,:) - bb_proj) / tand (camva () / 2);
 
   ## Is bb_proj in front of or behind mid?
diff --git a/scripts/plot/appearance/module.mk b/scripts/plot/appearance/module.mk
--- a/scripts/plot/appearance/module.mk
+++ b/scripts/plot/appearance/module.mk
@@ -49,17 +49,16 @@ FCN_FILE_DIRS += \
   %reldir%/ylabel.m \
   %reldir%/ylim.m \
   %reldir%/yticks.m \
   %reldir%/yticklabels.m \
   %reldir%/zlabel.m \
   %reldir%/zlim.m \
   %reldir%/zticks.m \
   %reldir%/zticklabels.m
-  
 
 %canon_reldir%dir = $(fcnfiledir)/plot/appearance
 
 %canon_reldir%_DATA = $(%canon_reldir%_FCN_FILES)
 
 %canon_reldir%_privatedir = $(fcnfiledir)/plot/appearance/private
 
 %canon_reldir%_private_DATA = $(%canon_reldir%_PRIVATE_FCN_FILES)
diff --git a/scripts/plot/appearance/rticks.m b/scripts/plot/appearance/rticks.m
--- a/scripts/plot/appearance/rticks.m
+++ b/scripts/plot/appearance/rticks.m
@@ -52,17 +52,17 @@ function retval = rticks (varargin)
       retval = get (gca (), "rtick");  # will error if no rtick exists.
       return;
 
     case 1
       if (isaxes (varargin{1}))
         retval = get (varargin{1}, "rtick");
         return;
       else
-        arg = varargin{1};     
+        arg = varargin{1};
       endif
 
     case 2
       if (! isaxes (varargin{1}))
         error ("rticks: HAX must be a handle to an axes object");
       endif
       hax = varargin{1};
       arg = varargin{2};
diff --git a/scripts/plot/appearance/thetaticks.m b/scripts/plot/appearance/thetaticks.m
--- a/scripts/plot/appearance/thetaticks.m
+++ b/scripts/plot/appearance/thetaticks.m
@@ -56,17 +56,17 @@ function retval = thetaticks (varargin)
       retval = get (gca , "ttick");  # will error if no ttick exists.
       return;
 
     case 1
       if (isaxes (varargin{1}))
         retval = get (varargin{1}, "ttick");
         return;
       else
-        arg = varargin{1};     
+        arg = varargin{1};
       endif
 
     case 2
       if (! ishandle (varargin{1}))
         error ("thetaticks: HAX must be a handle to an axes object");
       endif
       hax = varargin{1};
       arg = varargin{2};
diff --git a/scripts/plot/appearance/xticklabels.m b/scripts/plot/appearance/xticklabels.m
--- a/scripts/plot/appearance/xticklabels.m
+++ b/scripts/plot/appearance/xticklabels.m
@@ -60,17 +60,17 @@ function retval = xticklabels (varargin)
       retval = get (gca , "xticklabel");  # will error if no xticklabel exists.
       return;
 
     case 1
       if (isaxes (varargin{1}))
         retval = get (varargin{1}, "xticklabel");
         return;
       else
-        arg = varargin{1};     
+        arg = varargin{1};
       endif
 
     case 2
       if (! isaxes (varargin{1}))
         error ("xticklabels: HAX must be a handle to an axes object");
       endif
       hax = varargin{1};
       arg = varargin{2};
diff --git a/scripts/plot/appearance/xticks.m b/scripts/plot/appearance/xticks.m
--- a/scripts/plot/appearance/xticks.m
+++ b/scripts/plot/appearance/xticks.m
@@ -57,17 +57,17 @@ function retval = xticks (varargin)
       retval = get (gca, "xtick");  # will error if no xtick exists.
       return;
 
     case 1
       if (isaxes (varargin{1}))
         retval = get (varargin{1}, "xtick");
         return;
       else
-        arg = varargin{1};     
+        arg = varargin{1};
       endif
 
     case 2
       if (! isaxes (varargin{1}))
         error ("xticks: HAX must be a handle to an axes object");
       endif
       hax = varargin{1};
       arg = varargin{2};
diff --git a/scripts/plot/appearance/yticklabels.m b/scripts/plot/appearance/yticklabels.m
--- a/scripts/plot/appearance/yticklabels.m
+++ b/scripts/plot/appearance/yticklabels.m
@@ -60,17 +60,17 @@ function retval = yticklabels (varargin)
       retval = get (gca , "yticklabel"); # will error if no yticklabel exists.
       return;
 
     case 1
       if (isaxes (varargin{1}))
         retval = get (varargin{1}, "yticklabel");
         return;
       else
-        arg = varargin{1};     
+        arg = varargin{1};
       endif
 
     case 2
       if (! isaxes (varargin{1}))
         error ("yticklabels: HAX must be a handle to an axes object");
       endif
       hax = varargin{1};
       arg = varargin{2};
diff --git a/scripts/plot/appearance/yticks.m b/scripts/plot/appearance/yticks.m
--- a/scripts/plot/appearance/yticks.m
+++ b/scripts/plot/appearance/yticks.m
@@ -57,17 +57,17 @@ function retval = yticks (varargin)
       retval = get (gca , "ytick");  # will error if no ytick exists.
       return;
 
     case 1
       if (isaxes (varargin{1}))
         retval = get (varargin{1}, "ytick");
         return;
       else
-        arg = varargin{1};     
+        arg = varargin{1};
       endif
 
     case 2
       if (! isaxes (varargin{1}))
         error ("yticks: HAX must be a handle to an axes object");
       endif
       hax = varargin{1};
       arg = varargin{2};
diff --git a/scripts/plot/appearance/zticklabels.m b/scripts/plot/appearance/zticklabels.m
--- a/scripts/plot/appearance/zticklabels.m
+++ b/scripts/plot/appearance/zticklabels.m
@@ -60,17 +60,17 @@ function retval = zticklabels (varargin)
       retval = get (gca , "zticklabel"); # will error if no zticklabel exists.
       return;
 
     case 1
       if (isaxes (varargin{1}))
         retval = get (varargin{1}, "zticklabel");
         return;
       else
-        arg = varargin{1};     
+        arg = varargin{1};
       endif
 
     case 2
       if (! isaxes (varargin{1}))
         error ("zticklabels: HAX must be a handle to an axes object");
       endif
       hax = varargin{1};
       arg = varargin{2};
diff --git a/scripts/plot/appearance/zticks.m b/scripts/plot/appearance/zticks.m
--- a/scripts/plot/appearance/zticks.m
+++ b/scripts/plot/appearance/zticks.m
@@ -57,17 +57,17 @@ function retval = zticks (varargin)
       retval = get (gca , "ztick");  # will error if no ztick exists.
       return;
 
     case 1
       if (isaxes (varargin{1}))
         retval = get (varargin{1}, "ztick");
         return;
       else
-        arg = varargin{1};     
+        arg = varargin{1};
       endif
 
     case 2
       if (! isaxes (varargin{1}))
         error ("zticks: HAX must be a handle to an axes object");
       endif
       hax = varargin{1};
       arg = varargin{2};
diff --git a/scripts/plot/draw/patch.m b/scripts/plot/draw/patch.m
--- a/scripts/plot/draw/patch.m
+++ b/scripts/plot/draw/patch.m
@@ -60,17 +60,17 @@
 ##
 ## If the first argument @var{hax} is an axes handle, then plot into this axis,
 ## rather than the current axes returned by @code{gca}.
 ##
 ## The optional return value @var{h} is a graphics handle to the created patch
 ## object.
 ##
 ## Implementation Note: Patches are highly configurable objects.  To truly
-## customize them requires setting patch properties directly 
+## customize them requires setting patch properties directly
 ## (@pxref{Patch Properties}).  Useful patch properties include: @qcode{"cdata"},
 ## @qcode{"edgecolor"}, @qcode{"facecolor"}, @qcode{"faces"},
 ## @qcode{"facevertexcdata"}.
 ## @seealso{fill, get, set}
 ## @end deftypefn
 
 ## Author: jwe
 
diff --git a/scripts/plot/util/print.m b/scripts/plot/util/print.m
--- a/scripts/plot/util/print.m
+++ b/scripts/plot/util/print.m
@@ -411,17 +411,17 @@ function print (varargin)
           props(end+1).h = hax(n);
           props(end).name = "minorgridcolor";
           props(end).value = {get(hax(n), "minorgridcolor")};
           set (hax(n), "minorgridcolor", [0.75 0.75 0.75]);
           nfig += 2;
         endif
       endfor
     endif
-    
+
     ## print() requires figure units to be "pixels"
     props(end+1).h = opts.figure;
     props(end).name = "units";
     props(end).value = {get(opts.figure, "units")};
     set (opts.figure, "units", "pixels");
     nfig += 1;
 
     ## graphics toolkit translates figure position to eps bbox (points)
diff --git a/scripts/statistics/base/lscov.m b/scripts/statistics/base/lscov.m
--- a/scripts/statistics/base/lscov.m
+++ b/scripts/statistics/base/lscov.m
@@ -93,20 +93,20 @@ function [x, stdx, mse, S] = lscov (A, b
   pinv_A = pinv (A);
 
   x = pinv_A * b;
 
   if (nargout > 1)
     dof = n - p;  # degrees of freedom remaining after fit
     SSE = sumsq (b - A * x);
     mse = SSE / dof;
-    
+
     s = pinv_A * pinv_A';
     stdx = sqrt (diag (s) * mse);
-    
+
     if (nargout > 3)
       if (k == 1)
         S = mse * s;
       else
         S = NaN (p, p, k);
         for i = 1:k
           S(:, :, i) = mse(i) * s;
         endfor
diff --git a/test/bug-35881/bug-35881.tst b/test/bug-35881/bug-35881.tst
--- a/test/bug-35881/bug-35881.tst
+++ b/test/bug-35881/bug-35881.tst
@@ -15,18 +15,18 @@
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 %!test
 %! global _tstvar_;  # Final test does "clear all" which removes this var.
 %!
 %! _tstvar_ = struct ("init1",-1, "a1",-1, "init2",-1, "a2",-1);
-%! bug35881 (0); 
+%! bug35881 (0);
 %! assert (_tstvar_, struct ("init1",true, "a1",1, "init2",false, "a2",1));
 %! clear -f bug35881
 %!
 %! _tstvar_ = struct ("init1",-1, "a1",-1, "init2",-1, "a2",-1);
-%! bug35881 (1); 
+%! bug35881 (1);
 %! assert (_tstvar_, struct ("init1",true, "a1",1, "init2",false, "a2",1));
 %!
 %! _tstvar_ = struct ("init1",-1, "a1",-1, "init2",-1, "a2",-1);
 %! fail ("bug35881 (2)", "'a' undefined near line");
diff --git a/test/bug-35881/bug35881.m b/test/bug-35881/bug35881.m
--- a/test/bug-35881/bug35881.m
+++ b/test/bug-35881/bug35881.m
@@ -50,11 +50,11 @@ subf: a=1
 subf: INIT, a=1
 subf: a=1
 ------
 
 >> clear all;  bug35881 (2)
 subf: INIT, a=1
 subf: Reference to a cleared variable a.
 Error in test_clear_inside_function (line 13)
-subf ();  fprintf ('a=%d\n', a); 
+subf ();  fprintf ('a=%d\n', a);
 #}
 
