# HG changeset patch
# User jwe
# Date 1103382260 0
#      Sat Dec 18 15:04:20 2004 +0000
# Node ID ab4e64f925266db483e2fedbc2f3740035734294
# Parent  69b822a4129caf6b585deb92235c3e3c0095fd73
[project @ 2004-12-18 15:04:20 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,16 @@
+2004-12-17  John W. Eaton  <jwe@octave.org>
+
+	* configure.in: Use AC_GNU_SOURCE.
+
+2004-12-17  Orion Poplawski  <orion@cora.nwra.com>
+
+	* configure.in: Also check for signbit decl.
+
 2004-12-03  John W. Eaton  <jwe@octave.org>
 
 	* aclocal.m4 (OCTAVE_PROG_GPERF): Check with -L C++, not -L ANSI_C.
 	* Makefile.in (header-msg): Change recommended gperf version to
 	3.0.1 or more recent.
 
 2004-11-12  John W. Eaton  <jwe@octave.org>
 
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -24,25 +24,27 @@ dnl Copyright (C) 1996, 1997 John W. Eat
 ### Preserve CFLAGS and CXXFLAGS from the environment before doing
 ### anything else because we don't know which macros might call
 ### AC_PROG_CC or AC_PROG_CXX.
 
 EXTERN_CFLAGS="$CFLAGS"
 EXTERN_CXXFLAGS="$CXXFLAGS"
 
 AC_INIT
-AC_REVISION($Revision: 1.458 $)
+AC_REVISION($Revision: 1.459 $)
 AC_PREREQ(2.57)
 AC_CONFIG_SRCDIR([src/octave.cc])
 AC_CONFIG_HEADER(config.h)
 
 AC_DEFINE(OCTAVE_SOURCE, 1, [Define if this is Octave.])
   
 OCTAVE_HOST_TYPE
 
+AC_GNU_SOURCE
+
 AC_AIX
 AC_MINIX
 AC_ISC_POSIX
 
 ### some defaults
 
 OCTAVE_SET_DEFAULT(man1dir, '$(mandir)/man1')
 OCTAVE_SET_DEFAULT(man1ext, '.1')
@@ -1148,16 +1150,17 @@ case "$canonical_host_type" in
     AC_DEFINE(SCO, 1, [Define if using an SCO system.])
     AC_MSG_RESULT([forcing HAVE_ISINF for SCO])
     AC_DEFINE(HAVE_ISINF, 1, [Define if you have isinf().])
     AC_MSG_RESULT([forcing HAVE_ISNAN for SCO])
     AC_DEFINE(HAVE_ISNAN, 1, [Define if you have isnan().])
   ;;
   *)
     AC_CHECK_FUNCS(finite isnan isinf copysign signbit)
+    AC_CHECK_DECLS(signbit, , , [#include <math.h>])
   ;;
 esac
 
 ### Check for nonstandard but common math functions that we need.
 
 AC_CHECK_FUNCS(acosh asinh atanh erf erfc)
 
 ### Checks for OS specific cruft.
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,15 @@
+2004-12-17  John W. Eaton  <jwe@octave.org>
+
+	* lo-cieee.c (lo_ieee_signbit): New function.
+	* lo-ieee.h: Provide decl.
+	Don't define lo_ieee_signbit as a macro here.
+	From Orion Poplawski <orion@cora.nwra.com>.
+
 2004-11-18  John W. Eaton  <jwe@octave.org>
 
 	* int32NDArray.cc (pow): Delete instantiation.
 	* int16NDArray.cc (pow): Likewise.
 	* int8NDArray.cc (pow): Likewise.
 	* uint32NDArray.cc (pow): Likewise.
 	* uint16NDArray.cc (pow): Likewise.
 	* uint8NDArray.cc (pow): Likewise.
diff --git a/liboctave/lo-cieee.c b/liboctave/lo-cieee.c
--- a/liboctave/lo-cieee.c
+++ b/liboctave/lo-cieee.c
@@ -148,13 +148,37 @@ lo_ieee_na_value (void)
 }
 
 double
 lo_ieee_nan_value (void)
 {
   return octave_NaN;
 }
 
+#if ! (defined (signbit) || defined (HAVE_DECL_SIGNBIT)) && defined (HAVE_SIGNBIT)
+extern int signbit (double);
+#endif
+
+int
+lo_ieee_signbit (double x)
+{
+/* In the following definitions, only check x < 0 explicitly to avoid
+   a function call when it looks like signbit or copysign are actually
+   functions.  */
+
+#if defined (signbit)
+  return signbit (x);
+#elif defined (HAVE_SIGNBIT)
+  return (x < 0 || signbit (x));
+#elif defined (copysign)
+  return (copysign (1.0, x) < 0);
+#elif defined (HAVE_COPYSIGN)
+  return (x < 0 || copysign (1.0, x) < 0);
+#else
+  return x < 0;
+#endif
+}
+
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
diff --git a/liboctave/lo-ieee.h b/liboctave/lo-ieee.h
--- a/liboctave/lo-ieee.h
+++ b/liboctave/lo-ieee.h
@@ -61,34 +61,17 @@ extern int lo_ieee_isinf (double x);
 
 extern int lo_ieee_is_NA (double);
 extern int lo_ieee_is_NaN_or_NA (double);
 
 extern double lo_ieee_inf_value (void);
 extern double lo_ieee_na_value (void);
 extern double lo_ieee_nan_value (void);
 
-/* In the following definitions, only check x < 0 explicitly to avoid
-   a function call when it looks like signbit or copysign are actually
-   functions.  */
-
-#if defined (signbit)
-#define lo_ieee_signbit(x) signbit (x)
-#elif defined (HAVE_SIGNBIT)
-#if defined (__MINGW32__)
-extern int signbit (double);
-#endif
-#define lo_ieee_signbit(x) (x < 0 || signbit (x))
-#elif defined (copysign)
-#define lo_ieee_signbit(x) (copysign (1.0, x) < 0)
-#elif defined (HAVE_COPYSIGN)
-#define lo_ieee_signbit(x) (x < 0 || copysign (1.0, x) < 0)
-#else
-#define lo_ieee_signbit(x) 0
-#endif
+extern int lo_ieee_signbit (double);
 
 #ifdef	__cplusplus
 }
 #endif
 
 #endif
 
 /*
