# HG changeset patch
# User Rik <rik@octave.org>
# Date 1471828127 25200
#      Sun Aug 21 18:08:47 2016 -0700
# Node ID d71ae2cd510bc224e8c80c85a603df69d8237a13
# Parent  e6df1ddfc3cff4d1de78c1e3cd71635d51b4115e
build: Change known failures to xtest so that 'make check' produces a clean run.

* gzip.cc: Change two BIST tests to xtests.

diff --git a/libinterp/dldfcn/gzip.cc b/libinterp/dldfcn/gzip.cc
--- a/libinterp/dldfcn/gzip.cc
+++ b/libinterp/dldfcn/gzip.cc
@@ -679,17 +679,17 @@ The optional output @var{filelist} is a 
 %!  unlink_or_error (test_file);
 %!  uz_filelist = z.unzip (z_file);
 %!  assert (uz_filelist, {test_file})
 %!
 %!  assert (hash ("md5", fileread (test_file)), md5)
 %!endfunction
 %!test run_test_function (@test_large_file)
 
-## Test that xzipped files are rexzipped
+## Test that xzipped files are rexzipped (hits bug #48597, #48598)
 %!function test_z_z (test_dir, z)
 %!  ori_file = tempname (test_dir);
 %!  create_file (ori_file, rand (100, 1));
 %!  md5_ori = hash ("md5", fileread (ori_file));
 %!
 %!  z_file = [ori_file z.ext];
 %!  z_filelist = z.zip (ori_file);
 %!  assert (z_filelist, {z_file}) # check output
@@ -711,17 +711,17 @@ The optional output @var{filelist} is a 
 %!
 %!  md5_z = hash ("md5", fileread (z_file));
 %!  unlink_or_error (z_file);
 %!  uz_z_filelist = z.unzip (z_z_file);
 %!  assert (uz_z_filelist, {z_file}) # bug #48598
 %!  assert (exist (z_z_file), 2) # bug #48597
 %!  assert (hash ("md5", fileread (z_file)), md5_z)
 %!endfunction
-%!test run_test_function (@test_z_z)
+%!xtest run_test_function (@test_z_z)
 
 %!function test_xzip_dir (test_dir, z) # bug #43431
 %!  fpaths = fullfile (test_dir, {"test1", "test2", "test3"});
 %!  md5s = cell (1, 3);
 %!  for idx = 1:numel(fpaths)
 %!    create_file (fpaths{idx}, rand (100, 1));
 %!    md5s(idx) = hash ("md5", fileread (fpaths{idx}));
 %!  endfor
@@ -745,17 +745,17 @@ The optional output @var{filelist} is a 
 %!      uz_filelist(idx) = z.unzip (z_filelist{idx});
 %!    endfor
 %!  endif
 %!  assert (sort (uz_filelist), fpaths(:)) # bug #48598
 %!  for idx = 1:numel(fpaths)
 %!    assert (hash ("md5", fileread (fpaths{idx})), md5s{idx})
 %!  endfor
 %!endfunction
-%!test run_test_function (@test_xzip_dir)
+%!xtest run_test_function (@test_xzip_dir)
 
 %!function test_save_to_dir (test_dir, z)
 %!  filename = "test-file";
 %!  filepath = fullfile (test_dir, filename);
 %!  create_file (filepath, rand (100, 1));
 %!  md5 = hash ("md5", fileread (filepath));
 %!
 %!  ## test with existing and non-existing directory
