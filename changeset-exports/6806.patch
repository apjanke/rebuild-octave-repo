# HG changeset patch
# User jwe
# Date 1185820562 0
#      Mon Jul 30 18:36:02 2007 +0000
# Node ID afa9123c5faac8e8f853d111d64e92ca121d7e92
# Parent  41d8841124b3551423dd858d0914cb4567891c3c
[project @ 2007-07-30 18:36:01 by jwe]

diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -24,17 +24,17 @@ dnl Copyright (C) 1996, 1997 John W. Eat
 ### Preserve CFLAGS and CXXFLAGS from the environment before doing
 ### anything else because we don't know which macros might call
 ### AC_PROG_CC or AC_PROG_CXX.
 
 EXTERN_CFLAGS="$CFLAGS"
 EXTERN_CXXFLAGS="$CXXFLAGS"
 
 AC_INIT
-AC_REVISION($Revision: 1.569 $)
+AC_REVISION($Revision: 1.570 $)
 AC_PREREQ(2.57)
 AC_CONFIG_SRCDIR([src/octave.cc])
 AC_CONFIG_HEADER(config.h)
 
 OCTAVE_HOST_TYPE
 
 AC_DEFINE(OCTAVE_SOURCE, 1, [Define if this is Octave.])
   
@@ -577,42 +577,38 @@ fi
 
 # Checks for GLPK header and library.
 
 AC_ARG_WITH(glpk,
   [AS_HELP_STRING([--without-glpk], [don't use GLPK])],
   with_glpk=$withval, with_glpk=yes)
 
 glpk_lib=
-glpk_missing=no
 if test "$with_glpk" = yes; then
   glpk_lib="glpk"
 elif test "$with_glpk" != no; then
   glpk_lib="$with_glpk"
-else
-  glpk_missing=yes
 fi
 
 GLPK_LIBS=
 if test -n "$glpk_lib"; then
-  AC_CHECK_LIB($glpk_lib, glp_lpx_simplex, [
-    GLPK_LIBS="-l$glpk_lib"
-    AC_DEFINE(GLPK_PRE_4_14, 1, [Define if GLPK version is less than 4.14.])], [
-    AC_CHECK_LIB($glpk_lib, _glp_lpx_simplex, [GLPK_LIBS="-l$glpk_lib"], [])])
-  if test -n "$GLPK_LIBS"; then
-    AC_CHECK_HEADERS([glpk/glpk.h glpk.h], [
-      glpk_missing=no
+  AC_CHECK_HEADERS([glpk/glpk.h glpk.h], [
+    AC_CHECK_LIB($glpk_lib, glp_lpx_simplex, [
       GLPK_LIBS="-l$glpk_lib"
-      AC_DEFINE(HAVE_GLPK, 1, [Define if GLPK is available.])], [
-        GLPK_LIBS=
-        glpk_missing=yes])
-  fi
+      AC_DEFINE(GLPK_PRE_4_14, 1, [Define if GLPK version is less than 4.14.])], [
+        AC_CHECK_LIB($glpk_lib, _glp_lpx_simplex, [
+          GLPK_LIBS="-l$glpk_lib"], [])])
+
+    if test -n "$GLPK_LIBS"; then
+      AC_DEFINE(HAVE_GLPK, 1, [Define if GLPK is available.])
+    fi
+    break])
 fi
 AC_SUBST(GLPK_LIBS)
-if test "$glpk_missing" = yes; then
+if test -z "$GLPK_LIBS"; then
   warn_glpk="GLPK library not found.  The glpk function for solving linear programs will be disabled."
 fi
 
 # Checks for CURL header and library.
 
 AC_ARG_WITH(curl,
   [AS_HELP_STRING([--without-curl], [don't use CURL])],
   with_curl=$withval, with_curl=yes)
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,19 @@
+2007-07-30  John W. Eaton  <jwe@octave.org>
+
+	* mex.cc (mxArray_number::mxArray_number (int, const char **)):
+	First arg is now mwSize.
+	(max_str_len): Return mwSize value, not int.
+	* mxarray.h.in (mxArray::mxArray (int, const char **)):
+	First arg is now mwSize.
+	(mxArray::mxArray (mxClassID, mwSize, mwSize, int, mxComplexity)):
+	Third arg is now mwSize.
+	(mxArray::get_string (char *, int)): Second arg is now mwSize.
+
 2007-07-26  John W. Eaton  <jwe@octave.org>
 
 	* DLD-FUNCTIONS/__glpk__.cc: Include glpk/glpk.h if
 	HAVE_GLPK_GLPK_H is defined.
 
 2007-07-26  David Bateman  <dbateman@free.fr>
 
 	* pr-output.cc (Frats): Return character array with same number of
diff --git a/src/mex.cc b/src/mex.cc
--- a/src/mex.cc
+++ b/src/mex.cc
@@ -32,24 +32,24 @@ class mxArray;
 // #define DEBUG 1
 
 static void
 xfree (void *ptr)
 {
   ::free (ptr);
 }
 
-static int
-max_str_len (int m, const char **str)
+static mwSize
+max_str_len (mwSize m, const char **str)
 {
   int max_len = 0;
 
-  for (int i = 0; i < m; i++)
+  for (mwSize i = 0; i < m; i++)
     {
-      int tmp = strlen (str[i]);
+      mwSize tmp = strlen (str[i]);
 
       if (tmp > max_len)
 	max_len = tmp;
     }
 
   return max_len;
 }
 
@@ -1102,17 +1102,17 @@ public:
   {
     mxChar *cpr = static_cast<mxChar *> (pr);
     mwSize nel = get_number_of_elements ();
     for (mwIndex i = 0; i < nel; i++)
       cpr[i] = str[i];
   }
 
   // FIXME??
-  mxArray_number (int m, const char **str)
+  mxArray_number (mwSize m, const char **str)
     : mxArray_matlab (mxCHAR_CLASS, m, max_str_len (m, str)),
       pr (calloc (get_number_of_elements (), get_element_size ())),
       pi (0)
   {
     mxChar *cpr = static_cast<mxChar *> (pr);
     
     mwSize *dv = get_dimensions ();
 
diff --git a/src/mxarray.h.in b/src/mxarray.h.in
--- a/src/mxarray.h.in
+++ b/src/mxarray.h.in
@@ -140,19 +140,20 @@ public:
   mxArray (mxClassID id, mwSize m, mwSize n, mxComplexity flag = mxREAL);
 
   mxArray (mxClassID id, double val);
 
   mxArray (mxClassID id, mxLogical val);
 
   mxArray (const char *str);
 
-  mxArray (int m, const char **str);
+  mxArray (mwSize m, const char **str);
 
-  mxArray (mxClassID id, mwSize m, mwSize n, int nzmax, mxComplexity flag = mxREAL);
+  mxArray (mxClassID id, mwSize m, mwSize n, mwSize nzmax,
+	   mxComplexity flag = mxREAL);
 
   mxArray (mwSize ndims, const mwSize *dims, int num_keys, const char **keys);
 
   mxArray (const dim_vector& dv, int num_keys, const char **keys);
 
   mxArray (mwSize m, mwSize n, int num_keys, const char **keys);
 
   mxArray (mwSize ndims, const mwSize *dims);
@@ -275,17 +276,17 @@ public:
   virtual void set_field_by_number (mwIndex index, int key_num, mxArray *val) { DO_VOID_MUTABLE_METHOD (set_field_by_number (index, key_num, val)); }
 
   virtual int get_number_of_fields (void) const { return rep->get_number_of_fields (); }
 
   virtual const char *get_field_name_by_number (int key_num) const { DO_MUTABLE_METHOD (const char*, get_field_name_by_number (key_num)); }
 
   virtual int get_field_number (const char *key) const { DO_MUTABLE_METHOD (int, get_field_number (key)); }
 
-  virtual int get_string (char *buf, int buflen) const { return rep->get_string (buf, buflen); }
+  virtual int get_string (char *buf, mwSize buflen) const { return rep->get_string (buf, buflen); }
 
   virtual char *array_to_string (void) const { return rep->array_to_string (); }
 
   virtual mwIndex calc_single_subscript (mwSize nsubs, mwIndex *subs) const { return rep->calc_single_subscript (nsubs, subs); }
 
   virtual size_t get_element_size (void) const { return rep->get_element_size (); }
 
   virtual bool mutation_needed (void) const { return rep->mutation_needed (); }
