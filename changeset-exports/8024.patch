# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1218139211 14400
#      Thu Aug 07 16:00:11 2008 -0400
# Node ID dc36eb214129f7ffd5cf504e75f938cf4b4e6141
# Parent  0ff67bd96f8d317144cd97210797e54637bc7776
ov.cc (octave_value::idx_type_value): don't include default argument value in definition

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,13 @@
 2008-08-07  John W. Eaton  <jwe@octave.org>
 
+	* ov.cc (octave_value::idx_type_value): Don't include default
+	argument values in definition.
+
 	* src/glrender.h, src/zfstream.h: Don't include config.h.
 
 	* oct-errno.h: Include <cerrno>.
 
 	* Cell.cc, DLD-FUNCTIONS/regexp.cc, DLD-FUNCTIONS/dlmread.cc,
 	debug.cc, error.cc, file-io.cc, graphics.cc, help.cc, input.cc,
 	lex.l, load-path.cc, load-save.cc, ls-mat-ascii.cc,
 	ls-oct-ascii.cc, oct-stream.cc, octave.cc, variables.cc,
diff --git a/src/ov.cc b/src/ov.cc
--- a/src/ov.cc
+++ b/src/ov.cc
@@ -1226,18 +1226,17 @@ octave_value::cell_value (void) const
 {
   return rep->cell_value ();
 }
 
 // Define the idx_type_value function here instead of in ov.h to avoid
 // needing definitions for the SIZEOF_X macros in ov.h.
 
 octave_idx_type
-octave_value::idx_type_value (bool req_int = false,
-			      bool frc_str_conv = false) const
+octave_value::idx_type_value (bool req_int, bool frc_str_conv) const
 {
 #if SIZEOF_OCTAVE_IDX_TYPE == SIZEOF_LONG
   return long_value (req_int, frc_str_conv);
 #elif SIZEOF_OCTAVE_IDX_TYPE == SIZEOF_INT
   return int_value (req_int, frc_str_conv);
 #else
 #error "no octave_value extractor for octave_idx_type"
 #endif
