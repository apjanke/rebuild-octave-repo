# HG changeset patch
# User jwe
# Date 1192809949 0
#      Fri Oct 19 16:05:49 2007 +0000
# Node ID 4482ba9814b780af7d241e91c66b12fd2a0179b4
# Parent  b1ca2c453b77ba252a3b366ec1e808637fdc9f81
[project @ 2007-10-19 16:05:48 by jwe]

diff --git a/NEWS b/NEWS
--- a/NEWS
+++ b/NEWS
@@ -1,17 +1,17 @@
 Summary of important user-visible changes for version 3.0:
 ---------------------------------------------------------
 
  ** Compatibility with Matlab graphics is much better now.  We now
     have some graphics features that work like Matlab's Handle
     Graphics (tm):
 
     + You can make a subplot and then use the print function to
-      generate file with the plot.
+      generate a file with the plot.
 
     + RGB line colors are supported if you use gnuplot 4.2.  Octave
       can still use gnuplot 4.0, but there is no way to set arbitrary
       line colors with it when using the Matlab-style plot functions.
       There never was any way to do this reliably with older versions
       of gnuplot (whether run from Octave or not) since it only
       provided a limited set to choose from, and they were terminal
       dependent, so choosing color 1 with the X11 terminal would be
@@ -29,30 +29,43 @@ Summary of important user-visible change
     + With gnuplot 4.2, image data is plotted with gnuplot and may be
       combined with other 2-d plot data.
 
     + Lines for contour plots are generated with an Octave function, so
       contour plots are now 2-d plots instead of special 3-d plots, and
       this allows you to plot additional 2-d data on top of a contour
       plot.
 
-    + It is no longer possible to mix Matlab-style plot commands with
-      the old (and now considered obsolete) style of plot commands
-      (__gnuplot_set__, etc.).  You can do one or the other, but not
-      both for the same plot.
+    + The following plot commands are now considered obsolete and will
+      be removed from a future version of Octave:
+
+	__gnuplot_set__
+	__gnuplot_show__
+	__gnuplot_plot__
+	__gnuplot_splot__
+	__gnuplot_replot__
+
+      Additionally, these functions no longer have any effect on plots
+      created with the Matlab-style plot commands (plot, line, mesh,
+      semilogx, etc.).
 
     + Plot property values are not extensively checked.  Specifying
       invalid property values may produce unpredictible results.
 
     + Octave now sends data over the same pipe that is used to send
       commands to gnuplot.  While this avoids the problem of
       cluttering /tmp with data files, it is no longer possible to use
       the mouse to zoom in on plots.  This is a limitation of gnuplot,
       which is unable to zoom when the data it plots is not stored in
-      a file.
+      a file.  Some work has been done to fix this problem in newer
+      versions of gnuplot (> 4.2.2).  See for example, this thread
+
+        http://www.nabble.com/zooming-of-inline-data-tf4357017.html#a12416496
+
+      on the gnuplot development list.
 
  ** The way Octave handles search paths has changed.  Instead of
     setting the built-in variable LOADPATH, you must use addpath,
     rmpath, or path to manipulate the function search path.  These
     functions will maintain "." at the head of the path, for
     compatibility with Matlab.
 
     Leading, trailing or doubled colons are no longer special.
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2007-10-19  Olli Saarela  <Olli.Saarela@kcl.fi>
+
+	* help.cc (Flookfor): Call print_usage instead of usage.
+	* DLD-FUNCTIONS/cellfun.cc (Fmat2cell): Likewise.
+
 2007-10-17  John W. Eaton  <jwe@octave.org>
 
 	* DLD-FUNCTIONS/spchol.cc (Fsymbfact): Delete special code for METIS.
 
 2007-10-17  Gabriele Pannocchia  <g.pannocchia@ing.unipi.it>
 
 	* DLD-FUNCTIONS/__qp__.cc (qp): Fix check for Wact(j).
 
diff --git a/src/DLD-FUNCTIONS/cellfun.cc b/src/DLD-FUNCTIONS/cellfun.cc
--- a/src/DLD-FUNCTIONS/cellfun.cc
+++ b/src/DLD-FUNCTIONS/cellfun.cc
@@ -671,17 +671,17 @@ mat2cell (reshape(1:16,4,4),[3,1],[3,1])
 @end example\n\
 @seealso{num2cell, cell2mat}\n\
 @end deftypefn")
 {
   int nargin = args.length();
   octave_value retval;
 
   if (nargin < 2)
-    usage ("mat2cell");
+    print_usage ();
   else
     {
       dim_vector dv = args(0).dims();
       dim_vector new_dv;
       new_dv.resize(dv.length());
       
       if (nargin > 2)
 	{
diff --git a/src/help.cc b/src/help.cc
--- a/src/help.cc
+++ b/src/help.cc
@@ -1764,17 +1764,17 @@ to find related functions that are not p
 @end deffn")
 {
   octave_value_list retval;
   int nargin = args.length ();
   bool first_sentence_only = true;
 
   if (nargin != 1 && nargin != 2)
     {
-      usage ("lookfor");
+      print_usage ();
       return retval;
     }
 
   string_vector ret[2];
 
   std::string txt;
 
   if (args(0).is_string ())
