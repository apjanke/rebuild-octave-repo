# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1417726609 18000
#      Thu Dec 04 15:56:49 2014 -0500
# Branch gui-release
# Node ID f7ccd02bc06054e152f0ae6c68701f8a8b7a83e0
# Parent  302eef6de090ffd177275013fd68ea49b0fab322
provide access to the readline variable rl_erase_empty_line

* cmd-edit.h, cmd-edit.cc (command_editor::erase_empty_line,
command_editor::do_erase_empty_line,
gnu_readline::do_erase_empty_line): New functions.
* oct-rl-edit.h, oct-rl-edit.c (octave_rl_erase_empty_line):
New function.

diff --git a/liboctave/util/cmd-edit.cc b/liboctave/util/cmd-edit.cc
--- a/liboctave/util/cmd-edit.cc
+++ b/liboctave/util/cmd-edit.cc
@@ -103,16 +103,18 @@ public:
   void do_set_screen_size (int ht, int wd);
 
   std::string newline_chars (void);
 
   void do_restore_terminal_state (void);
 
   void do_blink_matching_paren (bool flag);
 
+  bool do_erase_empty_line (bool flag);
+
   void do_set_basic_word_break_characters (const std::string& s);
 
   void do_set_completer_word_break_characters (const std::string& s);
 
   void do_set_basic_quote_characters (const std::string& s);
 
   void do_set_filename_quote_characters (const std::string& s);
 
@@ -374,16 +376,22 @@ gnu_readline::do_restore_terminal_state 
 }
 
 void
 gnu_readline::do_blink_matching_paren (bool flag)
 {
   ::octave_rl_enable_paren_matching (flag ? 1 : 0);
 }
 
+bool
+gnu_readline::do_erase_empty_line (bool flag)
+{
+  return ::octave_rl_erase_empty_line (flag ? 1 : 0);
+}
+
 void
 gnu_readline::do_set_basic_word_break_characters (const std::string& s)
 {
   ::octave_rl_set_basic_word_break_characters (s.c_str ());
 }
 
 void
 gnu_readline::do_set_completer_word_break_characters (const std::string& s)
@@ -1172,16 +1180,22 @@ command_editor::restore_terminal_state (
 
 void
 command_editor::blink_matching_paren (bool flag)
 {
   if (instance_ok ())
     instance->do_blink_matching_paren (flag);
 }
 
+bool
+command_editor::erase_empty_line (bool flag)
+{
+  return instance_ok () ? instance->do_erase_empty_line (flag) : false;
+}
+
 void
 command_editor::set_basic_word_break_characters (const std::string& s)
 {
   if (instance_ok ())
     instance->do_set_basic_word_break_characters (s);
 }
 
 void
diff --git a/liboctave/util/cmd-edit.h b/liboctave/util/cmd-edit.h
--- a/liboctave/util/cmd-edit.h
+++ b/liboctave/util/cmd-edit.h
@@ -86,16 +86,18 @@ public:
   static void set_screen_size (int ht, int wd);
 
   static std::string decode_prompt_string (const std::string& s);
 
   static void restore_terminal_state (void);
 
   static void blink_matching_paren (bool flag);
 
+  static bool erase_empty_line (bool flag);
+
   static void set_basic_word_break_characters (const std::string& s);
 
   static void set_completer_word_break_characters (const std::string& s);
 
   static void set_basic_quote_characters (const std::string& s);
 
   static void set_filename_quote_characters (const std::string& s);
 
@@ -257,16 +259,18 @@ protected:
   virtual std::string do_decode_prompt_string (const std::string&);
 
   virtual std::string newline_chars (void) { return "\n"; }
 
   virtual void do_restore_terminal_state (void) { }
 
   virtual void do_blink_matching_paren (bool) { }
 
+  virtual bool do_erase_empty_line (bool) { return false; }
+
   virtual void do_set_basic_word_break_characters (const std::string&) { }
 
   virtual void do_set_completer_word_break_characters (const std::string&) { }
 
   virtual void do_set_basic_quote_characters (const std::string&) { }
 
   virtual void do_set_filename_quote_characters (const std::string&) { }
 
diff --git a/liboctave/util/oct-rl-edit.c b/liboctave/util/oct-rl-edit.c
--- a/liboctave/util/oct-rl-edit.c
+++ b/liboctave/util/oct-rl-edit.c
@@ -69,16 +69,24 @@ octave_rl_screen_width (void)
 }
 
 void
 octave_rl_enable_paren_matching (int val)
 {
   rl_variable_bind ("blink-matching-paren", val ? "1" : "0");
 }
 
+int
+octave_rl_erase_empty_line (int val)
+{
+  int retval = rl_erase_empty_line;
+  rl_erase_empty_line = val;
+  return retval;
+}
+
 /* It would be much simpler if we could just call _rl_clear_screen to
    only clear the screen, but it is not a public function, and on some
    systems, it is not exported from shared library versions of
    readline, so we can't use it.
 
    Instead, temporarily redefine the redisplay function to do nothing.
 
    FIXME -- It would be safer to do this when protected from
diff --git a/liboctave/util/oct-rl-edit.h b/liboctave/util/oct-rl-edit.h
--- a/liboctave/util/oct-rl-edit.h
+++ b/liboctave/util/oct-rl-edit.h
@@ -51,16 +51,18 @@ extern "C"
 extern void octave_rl_redisplay (void);
 
 extern int octave_rl_screen_height (void);
 
 extern int octave_rl_screen_width (void);
 
 extern void octave_rl_enable_paren_matching (int);
 
+extern int octave_rl_erase_empty_line (int);
+
 extern void octave_rl_init (void);
 
 extern void octave_rl_clear_screen (int skip_redisplay);
 
 extern void octave_rl_resize_terminal (void);
 
 extern void octave_rl_resize_terminal (void);
 
