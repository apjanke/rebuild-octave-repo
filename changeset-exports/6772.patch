# HG changeset patch
# User dbateman
# Date 1184061263 0
#      Tue Jul 10 09:54:23 2007 +0000
# Node ID 315bc7c8f9b5d3265e811fef550e8a4a7afe84db
# Parent  ffaac3c723acf6c88a8e3b46d34255b8397ac552
[project @ 2007-07-10 09:51:39 by dbateman]

diff --git a/scripts/general/Makefile.in b/scripts/general/Makefile.in
--- a/scripts/general/Makefile.in
+++ b/scripts/general/Makefile.in
@@ -15,19 +15,19 @@ top_srcdir = @top_srcdir@
 VPATH = @srcdir@
 
 include $(TOPDIR)/Makeconf
 
 INSTALL = @INSTALL@
 INSTALL_PROGRAM = @INSTALL_PROGRAM@
 INSTALL_DATA = @INSTALL_DATA@
 
-SOURCES = __isequal__.m __splinen__.m arrayfun.m bicubic.m bitcmp.m bitget.m \
-  bitset.m blkdiag.m cart2pol.m cart2sph.m cell2mat.m circshift.m \
-  common_size.m cplxpair.m cumtrapz.m deal.m diff.m flipdim.m \
+SOURCES = __isequal__.m __splinen__.m accumarray.m arrayfun.m bicubic.m \
+  bitcmp.m bitget.m bitset.m blkdiag.m cart2pol.m cart2sph.m cell2mat.m \
+  circshift.m common_size.m cplxpair.m cumtrapz.m deal.m diff.m flipdim.m \
   fliplr.m flipud.m gradient.m ind2sub.m int2str.m interp1.m \
   interp2.m interp3.m interpn.m interpft.m is_duplicate_entry.m isa.m \
   isdefinite.m isdir.m isequal.m isequalwithequalnans.m isscalar.m \
   issquare.m issymmetric.m isvector.m logical.m logspace.m lookup.m mod.m \
   nargchk.m nextpow2.m nthroot.m num2str.m perror.m pol2cart.m \
   polyarea.m postpad.m prepad.m quadl.m randperm.m rem.m \
   repmat.m rot90.m rotdim.m shift.m shiftdim.m sortrows.m \
   sph2cart.m strerror.m sub2ind.m trapz.m tril.m triu.m
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,12 +1,13 @@
 2007-06-27  David Bateman  <dbateman@free.fr>
 
 	* DLD-FUNCTIONS/sparse.cc (Fspdiag): Ensure spdiag(zeros(1,0)) returns
-	0x0 matrix.
+	0x0 matrix. Doc update.
+	* data.cc (Fdiag): Doc update.
 
 2007-06-28  John W. Eaton  <jwe@octave.org>
 
 	* ov-cell.cc (octave_cell::subsasgn): Given x = {}, convert to
 	struct for assignments like x(1).f = val;
 
 	* oct-stream.cc (octave_scan_1): New function
 	(octave_scan): Use it.  Handle fmt.width.
diff --git a/src/DLD-FUNCTIONS/sparse.cc b/src/DLD-FUNCTIONS/sparse.cc
--- a/src/DLD-FUNCTIONS/sparse.cc
+++ b/src/DLD-FUNCTIONS/sparse.cc
@@ -1049,24 +1049,30 @@ DEFUN_DLD (spdiag, args, ,
 @deftypefn {Loadable Function} {} spdiag (@var{v}, @var{k})\n\
 Return a diagonal matrix with the sparse vector @var{v} on diagonal\n\
 @var{k}. The second argument is optional. If it is positive, the vector is\n\
 placed on the @var{k}-th super-diagonal. If it is negative, it is placed\n\
 on the @var{-k}-th sub-diagonal.  The default value of @var{k} is 0, and\n\
 the vector is placed on the main diagonal.  For example,\n\
 \n\
 @example\n\
+@group\n\
 spdiag ([1, 2, 3], 1)\n\
 ans =\n\
 \n\
 Compressed Column Sparse (rows=4, cols=4, nnz=3)\n\
   (1 , 2) -> 1\n\
   (2 , 3) -> 2\n\
   (3 , 4) -> 3\n\
+@end group\n\
 @end example\n\
+\n\
+@noindent\n\
+Given a matrix argument, instead of a vector, @code{spdiag} extracts the\n\
+@var{k}-th diagonal of the sparse matrix.\n\ 
 @seealso{diag}\n\
 @end deftypefn")
 {
   octave_value retval;
 
   int nargin = args.length ();
 
   if (nargin == 1 && args(0).is_defined ())
diff --git a/src/data.cc b/src/data.cc
--- a/src/data.cc
+++ b/src/data.cc
@@ -648,16 +648,20 @@ vector is placed on the main diagonal.  
 @group\n\
 diag ([1, 2, 3], 1)\n\
      @result{}  0  1  0  0\n\
          0  0  2  0\n\
          0  0  0  3\n\
          0  0  0  0\n\
 @end group\n\
 @end example\n\
+\n\
+@noindent\n\
+Given a matrix argument, instead of a vector, @code{diag} extracts the\n\
+@var{k}-th diagonal of the matrix.\n\ 
 @end deftypefn")
 {
   octave_value retval;
 
   int nargin = args.length ();
 
   if (nargin == 1 && args(0).is_defined ())
     retval = make_diag (args(0));
