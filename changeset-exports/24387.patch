# HG changeset patch
# User Rik <rik@octave.org>
# Date 1512683275 28800
#      Thu Dec 07 13:47:55 2017 -0800
# Node ID 268d31e7aa4f96c77a3ef1369b7bd48c168fc02e
# Parent  a164fd6e7e7b16232a42c6408828df3117b4df64
build: Silence compile warning about unknown GCC warning "-Wimplicit-fallthrough".

* configure.ac: Check that compiler accepts "-Wimplicit-fallthrough" option.
AC_DEFINE HAVE_WARNING_IMPLICIT_FALLTHROUGH if option is available.

* lex.ll: Wrap "#pragma GCC diagnostic" code that uses "-Wimplicit-fallthrough"
with "#if defined (HAVE_WARNING_IMPLICIT_FALLTHROUGH)"/"#endif".

diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -2924,17 +2924,24 @@ AC_CACHE_CHECK([for @%:@pragma GCC diagn
     ],
     [octave_cv_gcc_has_pragma_GCC_diagnostic=yes],
     [octave_cv_gcc_has_pragma_GCC_diagnostic=no])
    AC_LANG_POP(C++)],
   ])
 
 if test $octave_cv_gcc_has_pragma_GCC_diagnostic = yes; then
   AC_DEFINE(HAVE_PRAGMA_GCC_DIAGNOSTIC, 1,
-   [define if GCC supports @%:@pragma GCC diagnostic ...])
+    [define if GCC supports @%:@pragma GCC diagnostic ...])
+fi
+
+## Check for one unusual warning used in pragmas that is not always available
+if test $octave_cv_gcc_has_pragma_GCC_diagnostic = yes; then
+  OCTAVE_CC_FLAG([-Wimplicit-fallthrough],
+    [AC_DEFINE(HAVE_WARN_IMPLICIT_FALLTHROUGH, 1,
+      [define if GCC supports -Wimplicit-fallthrough warning])])
 fi
 
 ### These are recommended by the gnulib bootstrap script:
 
 GNULIB_LINK_DEPS="$FREXPF_LIBM $FREXP_LIBM $GETHOSTNAME_LIB $LIBSOCKET $LIB_CLOCK_GETTIME $LIB_CRYPTO $LIB_GETLOGIN $LIB_NANOSLEEP $LIB_SELECT $LTLIBICONV $LTLIBINTL $LTLIBTHREAD"
 
 MKOCTFILE_GNULIB_LINK_DEPS="$FREXPF_LIBM $FREXP_LIBM $GETHOSTNAME_LIB $LIBSOCKET $LIB_CLOCK_GETTIME $LIB_CRYPTO $LIB_GETLOGIN $LIB_NANOSLEEP $LIB_SELECT $LIBICONV $LIBINTL $LIBTHREAD"
 
diff --git a/libinterp/parse-tree/lex.ll b/libinterp/parse-tree/lex.ll
--- a/libinterp/parse-tree/lex.ll
+++ b/libinterp/parse-tree/lex.ll
@@ -42,17 +42,19 @@ object) relevant global values before an
 
 // Disable these warnings for code that is generated by flex, including
 // pattern rules.  Push the current state so we can restore the warning
 // state prior to functions we define at the bottom of the file.
 #pragma GCC diagnostic push
 #pragma GCC diagnostic ignored "-Wold-style-cast"
 #pragma GCC diagnostic ignored "-Wsign-compare"
 #pragma GCC diagnostic ignored "-Wzero-as-null-pointer-constant"
-#pragma GCC diagnostic ignored "-Wimplicit-fallthrough"
+#if defined (HAVE_WARNING_IMPLICIT_FALLTHROUGH)
+#  pragma GCC diagnostic ignored "-Wimplicit-fallthrough"
+#endif
 
 #endif
 
 // Define away the deprecated register storage class specifier to avoid
 // potential warnings about it.
 #if ! defined (register)
 #  define register
 #endif
