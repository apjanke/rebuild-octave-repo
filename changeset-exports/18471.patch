# HG changeset patch
# User Rik <rik@octave.org>
# Date 1392524382 28800
#      Sat Feb 15 20:19:42 2014 -0800
# Node ID b2a2f097c5e0e4b62b626851373746641e6d4247
# Parent  0bfa7798c4966150a0db8427149193900c0f4d20
# Parent  044bbf569cd34806da67a21d298d7dff79b32dfb
maint: merge gui-release to default.

diff --git a/libinterp/corefcn/sighandlers.cc b/libinterp/corefcn/sighandlers.cc
--- a/libinterp/corefcn/sighandlers.cc
+++ b/libinterp/corefcn/sighandlers.cc
@@ -134,24 +134,31 @@ private:
   void do_octave_jump_to_enclosing_context (void)
   {
     bool is_interrupt_thread = (GetCurrentThreadId () == thread_id);
 
     if (is_interrupt_thread)
       octave_jump_to_enclosing_context_sync ();
     else
       {
+        // 64-bit Windows does not appear to have threadContext.Eip.
+        // Something else must be done here to allow interrupts to
+        // properly work across threads.
+
+#if ! (defined (__MINGW64__) || defined (_WIN64))
+
         CONTEXT threadContext;
 
         SuspendThread (thread);
         threadContext.ContextFlags = CONTEXT_CONTROL;
         GetThreadContext (thread, &threadContext);
         threadContext.Eip = (DWORD) octave_jump_to_enclosing_context_sync;
         SetThreadContext (thread, &threadContext);
         ResumeThread (thread);
+#endif
       }
   }
 
   void do_user_abort (const char *sig_name, int sig_number)
   {
     bool is_interrupt_thread = (GetCurrentThreadId () == thread_id);
 
     if (is_interrupt_thread)
diff --git a/libinterp/parse-tree/lex.ll b/libinterp/parse-tree/lex.ll
--- a/libinterp/parse-tree/lex.ll
+++ b/libinterp/parse-tree/lex.ll
@@ -456,17 +456,17 @@ ANY_INCLUDING_NL (.|{NL})
     curr_lexer->current_input_column += yyleng;
   }
 
 %{
 // Everything else is slurped into the command arguments.
 %}
 
 <COMMAND_START>([\.]|[^#% \t\r\n\.\,\;\"\'\(\[\{\}\]\)]*) {
-    curr_lexer->lexer_debug ("<COMMAND_START>([\.]|[^#% \\t\\r\n\\.\\,\\;\\\"\\'\\(\\[\\{\\}\\]\\)]*");
+    curr_lexer->lexer_debug ("<COMMAND_START>([\\.]|[^#% \\t\\r\\n\\.\\,\\;\\\"\\'\\(\\[\\{\\}\\]\\)]*");
 
     curr_lexer->string_text += yytext;
     curr_lexer->current_input_column += yyleng;
   }
 
 <MATRIX_START>{S}* {
     curr_lexer->lexer_debug ("<MATRIX_START>{S}*");
 
