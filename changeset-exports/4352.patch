# HG changeset patch
# User jwe
# Date 1045857699 0
#      Fri Feb 21 20:01:39 2003 +0000
# Node ID 80b83de0aa2a6ffb12fafee83fe7a4ff55cdaffe
# Parent  1e7f4405e03734d930818e781f28496f04378dd3
[project @ 2003-02-21 20:01:38 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,10 +1,13 @@
 2003-02-21  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* configure.in (AH_BOTTOM): Define HAVE_PLACEMENT_DELETE for gcc
+	3.2 and later.
+
 	* configure.in: Check for copysign and signbit.
 
 2003-02-18  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* emacs/Makefile.in (DISTFILES): Add otags.1 to the list.
 
 2003-02-18  Dirk Eddelbuettel <edd@debian.org>
 
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -17,17 +17,17 @@ dnl Copyright (C) 1996, 1997 John W. Eat
 ### for more details.
 ### 
 ### You should have received a copy of the GNU General Public License
 ### along with Octave; see the file COPYING.  If not, write to the Free
 ### Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ### 02111-1307, USA. 
 
 AC_INIT
-AC_REVISION($Revision: 1.414 $)
+AC_REVISION($Revision: 1.415 $)
 AC_PREREQ(2.52)
 AC_CONFIG_SRCDIR([src/octave.cc])
 AC_CONFIG_HEADER(config.h)
 
 AC_DEFINE(OCTAVE_SOURCE, 1, [Define if this is Octave.])
   
 OCTAVE_HOST_TYPE
 
@@ -1383,16 +1383,20 @@ typedef int sig_atomic_t;
 #define OCTAVE_LOCAL_BUFFER(T, buf, size) \
   std::auto_ptr<T> buf ## _auto_ptr (new T [size]); \
   T *buf = buf ## _auto_ptr.get ()
 #endif
 
 #if defined (__DECCXX)
 #define __USE_STD_IOSTREAM
 #endif
+
+#if defined (__GNUG__) && __GNUC__ >= 3 && __GNUC_MINOR__ >= 2
+#define HAVE_PLACEMENT_DELETE 1
+#endif
 ])
 
 ### Do the substitutions in all the Makefiles.
 
 AC_CONFIG_FILES([Makefile octMakefile Makeconf install-octave \
   test/Makefile dlfcn/Makefile \
   doc/Makefile doc/faq/Makefile doc/interpreter/Makefile \
   doc/liboctave/Makefile doc/refcard/Makefile emacs/Makefile \
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,10 +1,13 @@
 2003-02-21  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* oct-alloc.h (DECLARE_OCTAVE_ALLOCATOR): Handle systems with or
+	without placement delete.
+
 	* CMatrix.cc (ComplexMatrix::all_elements_are_real): Don't lose -0
 	imaginary parts.
 
 	* lo-ieee.h (lo_ieee_signbit): New macro.
 
 2003-02-18  David Bateman <dbateman@free.fr>
 
 	* dMatrix.cc (Matrix::inverse, Matrix::determinant, Matrix::solve):
diff --git a/liboctave/oct-alloc.h b/liboctave/oct-alloc.h
--- a/liboctave/oct-alloc.h
+++ b/liboctave/oct-alloc.h
@@ -54,22 +54,31 @@ private:
   // The size of each item on the list (or, if that is smaller than
   // the size of list*, the size of list*.
   size_t item_size;
 
   // How to grow the free list.
   bool grow (void);
 };
 
+#if defined (HAVE_PLACEMENT_DELETE)
+#define DECLARE_OCTAVE_ALLOCATOR_PLACEMENT_DELETE \
+    void operator delete (void *p, void *) \
+      { ::operator delete (p, static_cast<void*> (0)); }
+#else
+#define DECLARE_OCTAVE_ALLOCATOR_PLACEMENT_DELETE \
+    void operator delete (void *p, void *) \
+      { ::operator delete (p); }
+#endif
+
 #define DECLARE_OCTAVE_ALLOCATOR \
   public: \
     void *operator new (size_t size, void *p) \
       { return ::operator new (size, p); } \
-    void operator delete (void *p, void *) \
-      { ::operator delete (p); } \
+    DECLARE_OCTAVE_ALLOCATOR_PLACEMENT_DELETE \
     void *operator new (size_t size) { return allocator.alloc (size); } \
     void operator delete (void *p, size_t size) { allocator.free (p, size); } \
   private: \
     static octave_allocator allocator;
 
 #define DEFINE_OCTAVE_ALLOCATOR(t) \
   octave_allocator t::allocator (sizeof (t))
 
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2003-02-21  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* oct-obj.h (octave_value_list::operator delete): Handle systems
+	with or without placement delete.
+
 2003-02-21  Paul Kienzle <pkienzle@users.sf.net>
 
 	* utils.cc (octave_vsnprintf): Return value of vsnprintf is int,
 	not size_t.  Make sure there is some space left in the buffer for
 	vsnprintf versions which return the number of characters written
 	even when the buffer is too short.
 
 2003-02-20  John W. Eaton  <jwe@bevo.che.wisc.edu>
diff --git a/src/oct-obj.h b/src/oct-obj.h
--- a/src/oct-obj.h
+++ b/src/oct-obj.h
@@ -61,17 +61,23 @@ public:
     { allocator.free (p, size); }
 
   // XXX FIXME XXX -- without this, I have errors with the stack of
   // octave_value_list objects in ov-usr-fcn.h.  Why?
   void *operator new (size_t size, void *p)
     { return ::operator new (size, p); }
 
   void operator delete (void *p, void *)
-    { ::operator delete (p, static_cast<void *> (0)); }
+    {
+#if defined (HAVE_PLACEMENT_DELETE)
+      ::operator delete (p, static_cast<void *> (0));
+#else
+      ::operator delete (p);
+#endif
+    }
 
   octave_value_list& operator = (const octave_value_list& obj)
     {
       if (this != &obj)
 	{
 	  data = obj.data;
 	  names = obj.names;
 	}
