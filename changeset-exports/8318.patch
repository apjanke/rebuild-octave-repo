# HG changeset patch
# User David Bateman <dbateman@free.fr>
# Date 1226501100 -3600
#      Wed Nov 12 15:45:00 2008 +0100
# Node ID cc29ef9a2d84c53334567fa7c97f09b64c8eaa79
# Parent  135c0e7d78020fc0f5eb3344f5e12c4168b2ea83
Correct cast of matrix by cell or struct concatenation

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,13 +1,19 @@
 2008-11-12  Michael Goffioul  <michael.goffioul@gmail.com>
 
 	* dirfcn.cc (Ffilesep): Make it return all file separators when 'all'
 	is given as argument.
 
+2008-11-12  David Bateman  <dbateman@free.fr>
+
+	* OPERATORS/op-cell.cc (op_catop_matrix_cell): Cast args in the correct
+	order.
+	* OPERATORS/op-struct.cc (op_catop_matrix_struct): Ditto.
+
 2008-11-11  Jaroslav Hajek <highegg@gmail.com>
 
 	* pt-assign.cc: Fix handling of empty cs-lists in assignment LHS.
 
 2008-11-11  John W. Eaton  <jwe@octave.org>
 
 	* lex.l (<MATRIX_START>{S}+): Don't insert separator if next token
 	is a separator.
diff --git a/src/OPERATORS/op-cell.cc b/src/OPERATORS/op-cell.cc
--- a/src/OPERATORS/op-cell.cc
+++ b/src/OPERATORS/op-cell.cc
@@ -66,17 +66,17 @@ oct_catop_cell_matrix (octave_base_value
   return retval;
 }
 
 static octave_value
 oct_catop_matrix_cell (octave_base_value& a1, const octave_base_value& a2,
 			 const Array<octave_idx_type>&)
 {
   octave_value retval;
-  CAST_BINOP_ARGS (const octave_cell&, const octave_matrix&);
+  CAST_BINOP_ARGS (const octave_matrix&, const octave_cell&);
   NDArray tmp = v1.array_value ();
   dim_vector dv = tmp.dims ();
   if (dv.all_zero ())
     retval = octave_value (v2.cell_value ());
   else
     error ("invalid concatenation of cell array with matrix");
   return retval;
 }
diff --git a/src/OPERATORS/op-struct.cc b/src/OPERATORS/op-struct.cc
--- a/src/OPERATORS/op-struct.cc
+++ b/src/OPERATORS/op-struct.cc
@@ -64,17 +64,17 @@ oct_catop_struct_matrix (octave_base_val
   return retval;
 }
 
 static octave_value
 oct_catop_matrix_struct (octave_base_value& a1, const octave_base_value& a2,
 			 const Array<octave_idx_type>&)
 {
   octave_value retval;
-  CAST_BINOP_ARGS (const octave_struct&, const octave_matrix&);
+  CAST_BINOP_ARGS (const octave_matrix&, const octave_struct&);
   NDArray tmp = v1.array_value ();
   dim_vector dv = tmp.dims ();
   if (dv.all_zero ())
     retval = octave_value (v2.map_value ());
   else
     error ("invalid concatenation of structure with matrix");
   return retval;
 }
