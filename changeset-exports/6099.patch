# HG changeset patch
# User jwe
# Date 1161878190 0
#      Thu Oct 26 15:56:30 2006 +0000
# Node ID 2b065bbbd1c2ea6915989308de18f18237859930
# Parent  70158d7ab8efb050211a757593f95074c6058543
[project @ 2006-10-26 15:56:30 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,18 @@
+2006-10-26  Michael Goffioul  <michael.goffioul@swing.be>
+
+	* help.cc (display_help_text): Quote sed patterns with ".
+
+2006-10-26  John W. Eaton  <jwe@octave.org>
+
+	* ov-bool.h (octave_bool::sparse_matrix_value,
+	octave_bool::sparse_complex_matrix_value
+	octave_bool::sparse_bool_matrix_value): New functions.
+
 2006-10-25  John W. Eaton  <jwe@octave.org>
 
 	* sighandlers.cc: Check defined (RETSIGTYPE_IS_VOID) instead of
 	RETSIGTYPE == void.
 
 	* oct-procbuf.cc (BUFSIZ): Define if not already defined.
 	(octave_procbuf::open): Pass BUFSIZ as size argument to setvbuf.
 
diff --git a/src/help.cc b/src/help.cc
--- a/src/help.cc
+++ b/src/help.cc
@@ -774,17 +774,19 @@ display_help_text (std::ostream& os, con
       if (cols > 64)
 	cols -= 7;
 
       if (cols > 80)
 	cols = 72;
 
       std::ostringstream buf;
 
-      buf << "sed -e 's/^[#%][#%]* *//' -e 's/^ *@/@/' | "
+      // Use double quotes to quote the sed patterns for Windows.
+
+      buf << "sed -e \"s/^[#%][#%]* *//\" -e \"s/^ *@/@/\" | "
 	  << "\"" << Vmakeinfo_program << "\""
 	  << " -D \"VERSION " << OCTAVE_VERSION << "\""
 	  << " -D \"OCTAVEHOME " << OCTAVE_PREFIX << "\""
 	  << " -D \"TARGETHOSTTYPE " << OCTAVE_CANONICAL_HOST_TYPE << "\""
 	  << " --fill-column " << cols
 	  << " --no-warn"
 	  << " --no-validate"
 	  << " --no-headers"
diff --git a/src/ov-bool.h b/src/ov-bool.h
--- a/src/ov-bool.h
+++ b/src/ov-bool.h
@@ -131,16 +131,26 @@ public:
   Complex complex_value (bool = false) const { return scalar; }
 
   ComplexMatrix complex_matrix_value (bool = false) const
     { return  ComplexMatrix (1, 1, Complex (scalar)); }
 
   ComplexNDArray complex_array_value (bool = false) const
     { return ComplexNDArray (dim_vector (1, 1), Complex (scalar)); }
 
+  SparseMatrix sparse_matrix_value (bool = false) const
+    { return SparseMatrix (Matrix (1, 1, scalar)); }
+
+  // XXX FIXME XXX Need SparseComplexMatrix (Matrix) constructor!!!
+  SparseComplexMatrix sparse_complex_matrix_value (bool = false) const
+    { return SparseComplexMatrix (sparse_matrix_value ()); }
+
+  SparseBoolMatrix sparse_bool_matrix_value (bool = false) const
+    { return SparseBoolMatrix (boolMatrix (1, 1, scalar)); }
+
   charNDArray
   char_array_value (bool = false) const
   {
     charNDArray retval (dim_vector (1, 1));
     retval(0) = static_cast<char> (scalar);
     return retval;
   }
 
