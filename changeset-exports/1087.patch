# HG changeset patch
# User jwe
# Date 791658164 0
#      Wed Feb 01 17:02:44 1995 +0000
# Node ID 85731fac3a15d14e2a5446d5dfd24c621546717c
# Parent  75fc9822038987405f40d51d2a358751239358fe
[project @ 1995-02-01 17:02:44 by jwe]

diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -16,17 +16,17 @@ dnl Copyright (C) 1992, 1993, 1994, 1995
 ### ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 ### FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ### for more details.
 ### 
 ### You should have received a copy of the GNU General Public License
 ### along with Octave; see the file COPYING.  If not, write to the Free
 ### Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
 
-AC_REVISION($Revision: 1.90 $)
+AC_REVISION($Revision: 1.91 $)
 AC_PREREQ(2.0)
 AC_INIT(src/octave.cc)
 AC_CONFIG_HEADER(config.h kpathsea/c-auto.h)
 
 AC_DEFINE(OCTAVE_SOURCE, 1)
 
 AC_CANONICAL_HOST
 if test -z "$host"; then
@@ -200,21 +200,23 @@ AC_PROG_CXXCPP
 
 ADD_CXX_WALL=false
 NO_IMPLICIT_TEMPLATES=
 gxx_version=`$CXX -v 2>&1 | grep "^g.. version" | sed 's/^g.. version *//'`
 case "$gxx_version" in
 changequote(,)dnl
   2.[6789].*|2.[123456789][0123456789].*)
 changequote([,])dnl
-    CXXFLAGS="-g -O"
-    AC_MSG_RESULT([defining CXXFLAGS to be $CXXFLAGS])
+    if test -z "$CXXFLAGS"; then
+      CXXFLAGS="-g -O"
+      AC_MSG_RESULT([defining CXXFLAGS to be $CXXFLAGS])
+      ADD_CXX_WALL=true
+    fi
     NO_IMPLICIT_TEMPLATES="-fno-implicit-templates"
     AC_MSG_RESULT([defining NO_IMPLICIT_TEMPLATES to be $NO_IMPLICIT_TEMPLATES])
-    ADD_CXX_WALL=true
   ;;
 changequote(,)dnl
   1.*|2.[012345].*)
 changequote([,])dnl
     AC_MSG_WARN([g++ version $gxx_version will not work to compile Octave])
   ;;
   *)
     AC_MSG_WARN([Octave has only been tested with g++, and I can't find it])
@@ -252,21 +254,25 @@ AC_PROG_CPP
 AC_PROG_GCC_TRADITIONAL
 
 ### Do special things for gcc.
 
 ADD_CC_WALL=false
 gcc_version=`$CC -v 2>&1 | grep "^gcc version" | sed 's/^gcc version *//'`
 case "$gcc_version" in
   2.*)
-    CFLAGS="-g -O"
-    AC_MSG_RESULT([defining CFLAGS to be $CFLAGS])
-    LDFLAGS="-g"
-    AC_MSG_RESULT([defining LDFLAGS to be $LDFLAGS])
-    ADD_CC_WALL=true
+    if test -z "$CFLAGS"; then
+      CFLAGS="-g -O"
+      AC_MSG_RESULT([defining CFLAGS to be $CFLAGS])
+      ADD_CC_WALL=true
+    fi
+    if test -z "$LDFLAGS"; then
+      LDFLAGS="-g"
+      AC_MSG_RESULT([defining LDFLAGS to be $LDFLAGS])
+    fi
   ;;
   1.*)
     AC_MSG_WARN([gcc version $gcc_version is likely to cause problems])
   ;;
   *)
     AC_MSG_WARN([Octave has only been tested with gcc, and I can't find it])
   ;;
 esac
@@ -360,17 +366,16 @@ AC_C_CONST
 ###    g77 : GNU Fortran (someday...)
 ###     fc : Convex
 ###
 ### I don't think the Cray compiler will ever work like f2c...
 
 if $use_f2c; then
   true
 else
-  F77=
   AC_CHECK_PROGS(F77, xlf cf77 f77 g77 fc)
 
   # If it looks like we have a Fortran compiler, try to determine
   # whether it might be compatible with f2c.
 
   if test -n "$F77"; then
     AC_MSG_CHECKING([$F77/f2c compatibility])
     export F77
@@ -391,19 +396,25 @@ fi
 
 ### If we can't find a Fortran compiler, or if it looks like it isn't
 ### compatible with f2c, try to find f2c.
 
 if test -z "$F77"; then
   AC_CHECK_PROG(F2C, f2c, f2c, [])
 fi
 
-F2CFLAGS=
-FFLAGS="-O"
-AC_MSG_RESULT([defining FFLAGS to be $FFLAGS])
+if test -z "$F2CFLAGS"; then
+  F2CFLAGS=
+fi
+
+if test -z "$FFLAGS"; then
+  FFLAGS="-O"
+  AC_MSG_RESULT([defining FFLAGS to be $FFLAGS])
+fi
+
 if test -n "$F77"; then
   export F77
   FLIBS=`sh $srcdir/flibs.sh`
   AC_MSG_RESULT([defining FLIBS to be $FLIBS])
   DOT_C_FROM_DOT_F_CMD=
   DOT_O_FROM_DOT_F_PAT=
 elif test -n "$F2C" || $use_f2c; then
   AC_CHECK_LIB(f2c, main, FLIBS=-lf2c, [])
