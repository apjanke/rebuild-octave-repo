# HG changeset patch
# User Rik <rik@octave.org>
# Date 1477502391 25200
#      Wed Oct 26 10:19:51 2016 -0700
# Node ID 305706823a2d11cd8d318ca9a432e26409505643
# Parent  c159d5850f6173b56576be908fe10f74e5985bda
# Parent  bcfcbb5653e6f89e4d42825b8525f94652b35b8f
maint: merge stable to default.

diff --git a/scripts/ode/private/integrate_adaptive.m b/scripts/ode/private/integrate_adaptive.m
--- a/scripts/ode/private/integrate_adaptive.m
+++ b/scripts/ode/private/integrate_adaptive.m
@@ -188,17 +188,17 @@ function solution = integrate_adaptive (
           ## Call OutputFcn only if a valid result has been found.
           ## Stop integration if function returns true.
           if (options.haveoutputfunction)
             cnt = options.Refine + 1;
             approxtime = linspace (t_old, t_new, cnt);
             approxvals = interp1 ([t_old, t(t_caught), t_new],
                                   [x_old, x(:, t_caught), x_new] .',
                                   approxtime, "linear") .';
-            if (isvector (approxvals))
+            if (isvector (approxvals) && ! isscalar (approxtime))
               approxvals = approxvals.';
             endif
             if (! isempty (options.OutputSel))
               approxvals = approxvals(options.OutputSel, :);
             endif
             stop_solve = false;
             for ii = 1:numel (approxtime)
               stop_solve = feval (options.OutputFcn,
@@ -239,17 +239,17 @@ function solution = integrate_adaptive (
         ## Call OutputFcn only if a valid result has been found.
         ## Stop integration if function returns true.
         if (options.haveoutputfunction)
           cnt = options.Refine + 1;
           approxtime = linspace (t_old, t_new, cnt);
           approxvals = interp1 ([t_old, t_new],
                                 [x_old, x_new] .',
                                 approxtime, "linear") .';
-          if (isvector (approxvals))
+          if (isvector (approxvals) && ! isscalar (approxtime))
             approxvals = approxvals.';
           endif
           if (! isempty (options.OutputSel))
             approxvals = approxvals(options.OutputSel, :);
           endif
           stop_solve = false;
           for ii = 1:numel (approxtime)
             stop_solve = feval (options.OutputFcn,
