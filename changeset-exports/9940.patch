# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1260218772 -3600
#      Mon Dec 07 21:46:12 2009 +0100
# Node ID 1707df25953684d0cae7356c04c87175b634a1f2
# Parent  f0f7c2477cdb295b15b4595abb281dd6db29ceac
optimize interp1q

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2009-12-07  Jaroslav Hajek  <highegg@gmail.com>
+
+	* general/interp1q.m: Use more optimal code.
+
 2009-12-08  John W. Eaton  <jwe@octave.org>
 
 	* Makefile.am (DOCSTRINGS): Depend on $(GEN_FCN_FILES) instead
 	of $(FCN_FILES_IN).  Pass $(GEN_FCN_FILES) to mkdoc instead of
 	$(FCN_FILES_IN).  Use mv instead of $(simple_move_if_change_rule).
 	(EXTRA_DIST): Include  $(GEN_FCN_FILES) in the list.
 
 2009-12-07  Jaroslav Hajek  <highegg@gmail.com>
diff --git a/scripts/general/interp1q.m b/scripts/general/interp1q.m
--- a/scripts/general/interp1q.m
+++ b/scripts/general/interp1q.m
@@ -34,29 +34,27 @@
 ## is relatively small.
 ## @seealso{interp1}
 ## @end deftypefn
 
 function yi = interp1q (x, y, xi)
   x = x(:);
   nx = size (x, 1);
   szy = size (y);
-  ny = szy (1);
-  nc = prod (szy (2 : end));
-  y = reshape (y, ny, nc);
+  y = y(:,:);
+  [ny, nc] = size (y);
   szx = size (xi);
   xi = xi (:);
-  range = find (xi >= x (1) & xi <= x (nx));
-  yi = NA (size(xi, 1), size (y, 2));
-  xi = xi (range);
-  dy = y (2 : ny, :) - y (1 : ny - 1, :);
-  dx = x (2 : nx) - x (1 : nx - 1);
+  dy = diff (y);
+  dx = diff (x);
   idx = lookup (x, xi, "lr");
   s = (xi - x (idx)) ./ dx (idx);
-  yi (range, :) = s (:, ones (1, nc)) .* dy (idx, :) + y (idx, :);
+  yi = bsxfun (@times, s, dy(idx,:)) + y(idx,:);
+  range = xi < x(1) | !(xi <= x(nx));
+  yi(range,:) = NA;
   if (length (szx) == 2 && any (szx == 1))
     yi = reshape (yi, [max(szx), szy(2:end)]);
   else
     yi = reshape (yi, [szx, szy(2:end)]);
   endif
 endfunction
 
 %!shared xp, yp, xi, yi
