# HG changeset patch
# User dbateman
# Date 1172760924 0
#      Thu Mar 01 14:55:24 2007 +0000
# Node ID b51f76ee24bb5a19a531643fd1d3484d06a81caf
# Parent  6edb00b095a36dcdf4a184f54641f1f47e4654af
[project @ 2007-03-01 14:55:23 by dbateman]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2007-03-01  David Bateman  <dbateman@free.fr>
+
+	* DLD-FUNCTIONS/matrix_type.cc (Fmatrix_type): Special case scalar
+	types and always return "Full" matrix type.
+
 2007-02-28  John W. Eaton  <jwe@octave.org>
 
 	* input.cc (interactive_input): Also call flush_octave_stdout
 	after calling drawnow.
 
 2007-02-27  John W. Eaton  <jwe@octave.org>
 
 	* Makefile.in (uninstall): Also remove octave-$(version)$(EXEEXT), 
diff --git a/src/DLD-FUNCTIONS/matrix_type.cc b/src/DLD-FUNCTIONS/matrix_type.cc
--- a/src/DLD-FUNCTIONS/matrix_type.cc
+++ b/src/DLD-FUNCTIONS/matrix_type.cc
@@ -104,23 +104,30 @@ matrix type.\n\
   octave_value retval;
 
   if (nargin == 0)
     print_usage ();
   else if (nargin > 4)
     error ("matrix_type: incorrect number of arguments");
   else
     {
-      if (args(0).is_sparse_type ())
+      if (args(0).is_scalar_type())
+	{
+	  if (nargin == 1)
+	    retval = octave_value ("Full");
+	  else
+	    retval = args(0);
+	}
+      else if (args(0).is_sparse_type ())
 	{
 	  if (nargin == 1)
 	    {
 	      MatrixType mattyp;
 
-	      if (args(0).type_name () == "sparse complex matrix" ) 
+	      if (args(0).is_complex_type ()) 
 		{
 		  mattyp = args(0).matrix_type ();
 
 		  if (mattyp.is_unknown ())
 		    {
 		      SparseComplexMatrix m = 
 			args(0).sparse_complex_matrix_value ();
 		      if (!error_state)
@@ -278,17 +285,17 @@ matrix type.\n\
 			}
 		      else if (nargin != 2 && str_typ != "banded positive definite" &&
 			       str_typ != "banded")
 			error ("matrix_type: Invalid number of arguments");
 
 		      if (! error_state)
 			{
 			  // Set the matrix type
-			  if (args(0).type_name () == "sparse complex matrix" ) 
+			  if (args(0).is_complex_type ())
 			    retval = 
 			      octave_value (args(0).sparse_complex_matrix_value (), 
 					    mattyp);
 			  else
 			    retval = octave_value (args(0).sparse_matrix_value (), 
 						   mattyp);
 			}
 		    }
@@ -296,17 +303,17 @@ matrix type.\n\
 	    }
 	}
       else
 	{
 	  if (nargin == 1)
 	    {
 	      MatrixType mattyp;
 
-	      if (args(0).type_name () == "complex matrix" ) 
+	      if (args(0).is_complex_type ())
 		{
 		  mattyp = args(0).matrix_type ();
 
 		  if (mattyp.is_unknown ())
 		    {
 		      ComplexMatrix m = args(0).complex_matrix_value ();
 		      if (!error_state)
 			{
@@ -421,17 +428,17 @@ matrix type.\n\
 			    }
 			}
 		      else if (nargin != 2)
 			error ("matrix_type: Invalid number of arguments");
 
 		      if (! error_state)
 			{
 			  // Set the matrix type
-			  if (args(0).type_name () == "complex matrix" ) 
+			  if (args(0).is_complex_type())
 			    retval = 
 			      octave_value (args(0).complex_matrix_value (), 
 					    mattyp);
 			  else
 			    retval = octave_value (args(0).matrix_value (), 
 						   mattyp);
 			}
 		    }
