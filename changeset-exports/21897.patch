# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1465925009 14400
#      Tue Jun 14 13:23:29 2016 -0400
# Node ID 39afd54c2981b9eddce13668ff8928c685ddae4c
# Parent  83c824c727c9aafd5ab6b51b9e39a3dc7f4d5512
perform tilde expansion for more file and directory functions

* dirfns.cc (Freaddir, Flink, Fsymlink, Freadlink, Frename):
Perform tilde expansion on filename arguments.

diff --git a/libinterp/corefcn/dirfns.cc b/libinterp/corefcn/dirfns.cc
--- a/libinterp/corefcn/dirfns.cc
+++ b/libinterp/corefcn/dirfns.cc
@@ -174,16 +174,18 @@ error message.\n\
 {
   if (args.length () != 1)
     print_usage ();
 
   std::string dirname = args(0).xstring_value ("readdir: DIR must be a string");
 
   octave_value_list retval = ovl (Cell (), -1.0, "");
 
+  dirname = octave::sys::file_ops::tilde_expand (dirname);
+
   octave::sys::dir_entry dir (dirname);
 
   if (dir)
     {
       string_vector dirlist = dir.read ();
       retval(0) = Cell (dirlist.sort ());
       retval(1) = 0.0;
     }
@@ -310,16 +312,19 @@ error message.\n\
 @end deftypefn")
 {
   if (args.length () != 2)
     print_usage ();
 
   std::string from = args(0).xstring_value ("link: OLD must be a string");
   std::string to = args(1).xstring_value ("link: NEW must be a string");
 
+  from = octave::sys::file_ops::tilde_expand (from);
+  to = octave::sys::file_ops::tilde_expand (to);
+
   std::string msg;
 
   int status = octave::sys::link (from, to, msg);
 
   if (status < 0)
     return ovl (-1.0, msg);
   else
     return ovl (status, "");
@@ -338,16 +343,19 @@ error message.\n\
 @end deftypefn")
 {
   if (args.length () != 2)
     print_usage ();
 
   std::string from = args(0).xstring_value ("symlink: OLD must be a string");
   std::string to = args(1).xstring_value ("symlink: NEW must be a string");
 
+  from = octave::sys::file_ops::tilde_expand (from);
+  to = octave::sys::file_ops::tilde_expand (to);
+
   std::string msg;
 
   int status = octave::sys::symlink (from, to, msg);
 
   if (status < 0)
     return ovl (-1.0, msg);
   else
     return ovl (status, "");
@@ -366,16 +374,18 @@ error message.\n\
 @seealso{lstat, symlink, link, unlink, delete}\n\
 @end deftypefn")
 {
   if (args.length () != 1)
     print_usage ();
 
   std::string symlink = args(0).xstring_value ("readlink: SYMLINK must be a string");
 
+  symlink = octave::sys::file_ops::tilde_expand (symlink);
+
   std::string result, msg;
 
   int status = octave::sys::readlink (symlink, result, msg);
 
   if (status < 0)
     return ovl ("", -1.0, msg);
   else
     return ovl (result, status, "");
@@ -394,16 +404,19 @@ error message.\n\
 @end deftypefn")
 {
   if (args.length () != 2)
     print_usage ();
 
   std::string from = args(0).xstring_value ("rename: OLD must be a string");
   std::string to = args(1).xstring_value ("rename: NEW must be a string");
 
+  from = octave::sys::file_ops::tilde_expand (from);
+  to = octave::sys::file_ops::tilde_expand (to);
+
   std::string msg;
 
   int status = octave::sys::rename (from, to, msg);
 
   if (status < 0)
     return ovl (-1.0, msg);
   else
     return ovl (status, "");
