# HG changeset patch
# User jwe
# Date 775167802 0
#      Mon Jul 25 20:23:22 1994 +0000
# Node ID e6ae50d8d4eb6337bf0324201550914b478223b3
# Parent  b805b12f3b6616bcb432653e3ace869b6e3beba3
[project @ 1994-07-25 20:23:22 by jwe]
Initial revision

diff --git a/scripts/linear-algebra/null.m b/scripts/linear-algebra/null.m
new file mode 100644
--- /dev/null
+++ b/scripts/linear-algebra/null.m
@@ -0,0 +1,36 @@
+function retval = null (A, tol)
+
+# usage: null (A, tol)
+#        null (A)
+#
+# Returns an orthonormal basis of the null space of A.
+#
+# The dimension of the null space is taken as the number of singular
+# values of A not greater than tol;  the default for tol is
+# max (size (A)) * sigma_max (A) * eps, where sigma_max (A) is the
+# maximal singular value of A. 
+
+# written by KH (Kurt.Hornik@neuro.tuwien.ac.at) on Dec 24, 1993
+# copyright Dept of Probability Theory and Statistics TU Wien
+
+  [U, S, V] = svd (A);
+
+  [rows, cols] = size (A);
+
+  s = diag (S);
+
+  if (nargin == 1)
+    tol = max (size (A)) * s (1) * eps;
+  else (nargin != 2)
+    error("usage: null(A [, tol])"); 
+  endif
+
+  rank = sum (s > tol);
+
+  if (rank < cols)
+    retval = V (:, rank+1:cols);
+  else
+    retval = zeros (cols, 0);
+  endif
+
+endfunction
diff --git a/scripts/linear-algebra/orth.m b/scripts/linear-algebra/orth.m
new file mode 100644
--- /dev/null
+++ b/scripts/linear-algebra/orth.m
@@ -0,0 +1,36 @@
+function retval = orth (A, tol)
+
+# usage: orth (A, tol)
+#        orth (A)
+#
+# Returns an orthonormal basis of the range of A.
+#
+# The dimension of the range space is taken as the number of singular
+# values of A greater than tol; the default for tol is
+# max (size (A)) * sigma_max (A) * eps, where sigma_max (A) is the
+# maximal singular value of A.
+
+# written by KH (Kurt.Hornik@neuro.tuwien.ac.at) on Dec 24, 1993
+# copyright Dept of Probability Theory and Statistics TU Wien
+
+  [U, S, V] = svd (A);
+
+  [rows, cols] = size (A);
+
+  s = diag (S);
+
+  if (nargin == 1)
+    tol = max (size (A)) * s (1) * eps;
+  else if (nargin != 2)
+    error ("usage: orth (A [, tol])"); 
+  endif
+
+  rank = sum (s > tol);
+
+  if (rank > 0)
+    retval = -U (:, 1:rank);
+  else
+    retval = zeros (rows, 0);
+  endif
+
+endfunction
