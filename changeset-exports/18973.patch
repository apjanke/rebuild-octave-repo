# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1404244560 14400
#      Tue Jul 01 15:56:00 2014 -0400
# Branch stable
# Node ID 625e3bb65885db18b1821b8b6c2c0e46409b3c05
# Parent  a5add7b660acd575fb204161c9993daa9abd3e34
don't require Qt 4.7 (bug #42657)

* acinclude.m4 (OCTAVE_CHECK_QFONT_FORCE_INTEGER_METRICS): New macro.
* configure.ac: Use it.
* unix/TerminalView.cpp (TerminalView::setVTFont): Only use
QFont::ForceIntegerMetrics if it is available.

diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -2763,16 +2763,17 @@ if test $build_gui = yes; then
     if test $octave_cv_func_qabstractitemmodel_beginresetmodel = no; then
       warn_gui="QAbstractItemModel::beginResetModel() not found -- disabling GUI"
       build_gui=no
     fi
   fi
 
   if test $build_gui = yes; then
     OCTAVE_CHECK_QFONT_MONOSPACE
+    OCTAVE_CHECK_QFONT_FORCE_INTEGER_METRICS
     OCTAVE_CHECK_FUNC_SETPLACEHOLDERTEXT
   fi
 
   if test $build_gui = yes; then
     ## Check for Qscintilla library which is used in the GUI editor. 
     AC_CACHE_CHECK([whether Qscintilla library is installed],
       [octave_cv_lib_qscintilla],
       [save_CPPFLAGS="$CPPFLAGS"
diff --git a/libgui/qterminal/libqterminal/unix/TerminalView.cpp b/libgui/qterminal/libqterminal/unix/TerminalView.cpp
--- a/libgui/qterminal/libqterminal/unix/TerminalView.cpp
+++ b/libgui/qterminal/libqterminal/unix/TerminalView.cpp
@@ -207,18 +207,21 @@ void TerminalView::setVTFont(const QFont
       if (!_antialiasText)
         font.setStyleStrategy( QFont::NoAntialias );
 
       // experimental optimization.  Konsole assumes that the terminal is using a
       // mono-spaced font, in which case kerning information should have an effect.
       // Disabling kerning saves some computation when rendering text.
       // font.setKerning(false);
 
-      font.setStyleStrategy (  QFont::StyleStrategy(font.styleStrategy()
-                             | QFont::ForceIntegerMetrics)  );
+      QFont::StyleStrategy strategy = font.styleStrategy();
+#if defined (HAVE_QFONT_FORCE_INTEGER_METRICS)
+      strategy |= QFont::ForceIntegerMetrics;
+#endif
+      font.setStyleStrategy(QFont::StyleStrategy(strategy));
 
       QWidget::setFont(font);
       fontChange(font);
     }
 }
 
 void TerminalView::setFont(const QFont &)
 {
diff --git a/m4/acinclude.m4 b/m4/acinclude.m4
--- a/m4/acinclude.m4
+++ b/m4/acinclude.m4
@@ -378,16 +378,40 @@ AC_DEFUN([OCTAVE_CHECK_QFONT_MONOSPACE],
     AC_LANG_POP(C++)
   ])
   if test $octave_cv_decl_qfont_monospace = yes; then
     AC_DEFINE(HAVE_QFONT_MONOSPACE, 1,
       [Define to 1 if Qt provides QFont::Monospace.])
   fi
 ])
 dnl
+dnl Check whether Qt provides QFont::ForceIntegerMetrics
+dnl
+AC_DEFUN([OCTAVE_CHECK_QFONT_FORCE_INTEGER_METRICS], [
+  AC_CACHE_CHECK([whether Qt provides QFont::ForceIntegerMetrics],
+    [octave_cv_decl_qfont_force_integer_metrics],
+    [AC_LANG_PUSH(C++)
+    ac_octave_save_CPPFLAGS="$CPPFLAGS"
+    CPPFLAGS="$QT_CPPFLAGS $CPPFLAGS"
+    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
+        #include <QFont>
+        ]], [[
+        QFont::StyleStrategy strategy = QFont::ForceIntegerMetrics;
+        ]])],
+      octave_cv_decl_qfont_force_integer_metrics=yes,
+      octave_cv_decl_qfont_force_integer_metrics=no)
+    CPPFLAGS="$ac_octave_save_CPPFLAGS"
+    AC_LANG_POP(C++)
+  ])
+  if test $octave_cv_decl_qfont_force_integer_metrics = yes; then
+    AC_DEFINE(HAVE_QFONT_FORCE_INTEGER_METRICS, 1,
+      [Define to 1 if Qt provides QFont::ForceIntegerMetrics.])
+  fi
+])
+dnl
 dnl Check whether Qscintilla SetPlaceholderText function exists.
 dnl FIXME: This test uses a version number.  It potentially could
 dnl        be re-written to actually call the function, but is it worth it?
 dnl
 AC_DEFUN([OCTAVE_CHECK_FUNC_SETPLACEHOLDERTEXT], [
   AC_CACHE_CHECK([whether Qt has SetPlaceholderText function],
     [octave_cv_func_setplaceholdertext],
     [AC_LANG_PUSH(C++)
