# HG changeset patch
# User jwe
# Date 853819067 0
#      Tue Jan 21 03:57:47 1997 +0000
# Node ID ae47b09118635f3634316939f13ac991928d2f3b
# Parent  5bcee07be597189eb74e4faa5371aad3c9dfe3a9
[project @ 1997-01-21 03:57:46 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,15 @@
 Mon Jan 20 11:11:12 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* lex.l (token_stack): Don't declare static.
+	* pt-plot.cc (tmp_files): Likewise.
+	* toplev.cc (octave_atexit_functions): Likewise.
+	* unwind-prot.cc (unwind_protect_list): Likewise.
+
 	* ops.h (MX_MX_BOOL_OP): Correctly handle case of one or both
 	arguments being empty.  Change all callers.
 
 	* oct-stream.cc (printf_value_cache::looking_at_string):
 	Handle empty strings correctly now that they are 0x0.
 
 	* file-io.cc: Don't include "syswait.h" here.
 
diff --git a/src/lex.l b/src/lex.l
--- a/src/lex.l
+++ b/src/lex.l
@@ -65,17 +65,20 @@ Software Foundation, 59 Temple Place - S
 
 // Flags that need to be shared between the lexer and parser.
 lexical_feedback lexer_flags;
 
 // Stack to hold tokens so that we can delete them when the parser is
 // reset and avoid growing forever just because we are stashing some
 // information.  This has to appear before lex.h is included, because
 // one of the macros defined there uses token_stack.
-static SLStack <token*> token_stack;
+//
+// XXX FIXME XXX -- this should really be static, but that causes
+// problems on some systems.
+SLStack <token*> token_stack;
 
 // Did eat_whitespace() eat a space or tab, or a newline, or both?
 
 typedef int yum_yum;
 
 const yum_yum ATE_NOTHING = 0;
 const yum_yum ATE_SPACE_OR_TAB = 1;
 const yum_yum ATE_NEWLINE = 2;
diff --git a/src/pt-plot.cc b/src/pt-plot.cc
--- a/src/pt-plot.cc
+++ b/src/pt-plot.cc
@@ -86,17 +86,20 @@ static bool parametric_plot = false;
 
 // The gnuplot terminal type.
 static char *gnuplot_terminal_type = 0;
 
 // Should the graph window be cleared before plotting the next line?
 static bool clear_before_plotting = true;
 
 // List of files to delete when we exit or crash.
-static SLStack <string> tmp_files;
+//
+// XXX FIXME XXX -- this should really be static, but that causes
+// problems on some systems.
+SLStack <string> tmp_files;
 
 // Pipe to gnuplot.
 static oprocstream *plot_stream = 0;
 
 // ID of the plotter process.
 static pid_t plot_stream_pid = 0;
 
 // Use shortest possible abbreviations to minimize trouble caused by
diff --git a/src/toplev.cc b/src/toplev.cc
--- a/src/toplev.cc
+++ b/src/toplev.cc
@@ -745,17 +745,19 @@ or\n\
   else
     print_usage ("system");
 
   return retval;
 }
 
 DEFALIAS (shell_cmd, system);
 
-static SLStack<string> octave_atexit_functions;
+// XXX FIXME XXX -- this should really be static, but that causes
+// problems on some systems.
+SLStack<string> octave_atexit_functions;
 
 void
 do_octave_atexit (void)
 {
   while (! octave_atexit_functions.empty ())
     {
       octave_value_list fcn = octave_atexit_functions.pop ();
 
diff --git a/src/unwind-prot.cc b/src/unwind-prot.cc
--- a/src/unwind-prot.cc
+++ b/src/unwind-prot.cc
@@ -35,17 +35,19 @@ Software Foundation, 59 Temple Place - S
 #include "SLStack.h"
 
 #include "CMatrix.h"
 
 #include "error.h"
 #include "unwind-prot.h"
 #include "utils.h"
 
-static SLStack <unwind_elem> unwind_protect_list;
+// XXX FIXME XXX -- this should really be static, but that causes
+// problems on some systems.
+SLStack <unwind_elem> unwind_protect_list;
 
 void
 add_unwind_protect (cleanup_func fptr, void *ptr)
 {
   unwind_elem el (fptr, ptr);
   unwind_protect_list.push (el);
 }
 
