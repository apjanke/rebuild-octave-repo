# HG changeset patch
# User Jacob Dawid <jacob.dawid@googlemail.com>
# Date 1340026884 -7200
#      Mon Jun 18 15:41:24 2012 +0200
# Branch gui
# Node ID f43916137064a96de072f1bc80a5c876ff436f34
# Parent  dc2a8d66e40bd97cb9f6128b4222d62ed3a9b5ba
Added debug menu to file editor.

* file-editor-interface.h: Changed interface so debugging on/off can be passed through.
* file-editor.cc: Added debug menu.
* file-editor.h: Added debug menu.

diff --git a/gui/src/m-editor/file-editor-interface.h b/gui/src/m-editor/file-editor-interface.h
--- a/gui/src/m-editor/file-editor-interface.h
+++ b/gui/src/m-editor/file-editor-interface.h
@@ -39,16 +39,19 @@ class file_editor_interface : public QDo
     }
 
     virtual ~file_editor_interface () { }
   public slots:
     virtual void request_new_file () = 0;
     virtual void request_open_file () = 0;
     virtual void request_open_file (QString fileName) = 0;
 
+    virtual void handle_entered_debug_mode () = 0;
+    virtual void handle_quit_debug_mode () = 0;
+
   signals:
       void active_changed (bool active);
 
   protected:
     QTerminal* _terminal;
     main_window* _main_window;
 
     void closeEvent (QCloseEvent *event)
diff --git a/gui/src/m-editor/file-editor.cc b/gui/src/m-editor/file-editor.cc
--- a/gui/src/m-editor/file-editor.cc
+++ b/gui/src/m-editor/file-editor.cc
@@ -95,16 +95,28 @@ file_editor::request_open_file (QString 
   if (fileEditorTab)
     {
       add_file_editor_tab (fileEditorTab);
       fileEditorTab->load_file (fileName);
     }
 }
 
 void
+file_editor::handle_entered_debug_mode ()
+{
+
+}
+
+void
+file_editor::handle_quit_debug_mode ()
+{
+
+}
+
+void
 file_editor::request_undo ()
 {
   file_editor_tab *activeFileEditorTab = active_editor_tab ();
   if (activeFileEditorTab)
     activeFileEditorTab->undo ();
 }
 
 void
@@ -389,16 +401,30 @@ file_editor::construct ()
   editMenu->addAction (uncomment_selection_action);
   editMenu->addSeparator ();
   editMenu->addAction (toggle_bookmark_action);
   editMenu->addAction (next_bookmark_action);
   editMenu->addAction (previous_bookmark_action);
   editMenu->addAction (remove_bookmark_action);
   _menu_bar->addMenu (editMenu);
 
+  _debug_menu = new QMenu (tr ("&Debug"), _menu_bar);
+  QAction * debug_continue = _debug_menu->addAction (tr ("Continue"));
+  debug_continue->setShortcut (Qt::Key_F5);
+  QAction * debug_step_into = _debug_menu->addAction (tr ("Step into"));
+  debug_step_into->setShortcut (Qt::Key_F9);
+  QAction * debug_step_over = _debug_menu->addAction (tr ("Next"));
+  debug_step_over->setShortcut (Qt::Key_F10);
+  QAction * debug_step_out = _debug_menu->addAction (tr ("Step out"));
+  debug_step_out->setShortcut (Qt::Key_F11);
+  _debug_menu->addSeparator ();
+  QAction * debug_quit = _debug_menu->addAction (tr ("Quit"));
+  debug_quit->setShortcut (Qt::Key_Escape);
+  _menu_bar->addMenu (_debug_menu);
+
   QMenu *runMenu = new QMenu (tr ("&Run"), _menu_bar);
   runMenu->addAction (run_action);
   _menu_bar->addMenu (runMenu);
 
   QVBoxLayout *layout = new QVBoxLayout ();
   layout->addWidget (_menu_bar);
   layout->addWidget (_tool_bar);
   layout->addWidget (_tab_widget);
diff --git a/gui/src/m-editor/file-editor.h b/gui/src/m-editor/file-editor.h
--- a/gui/src/m-editor/file-editor.h
+++ b/gui/src/m-editor/file-editor.h
@@ -54,16 +54,19 @@ public:
   QTerminal *       terminal ();
   main_window *     mainWindow ();
 
 public slots:
   void request_new_file ();
   void request_open_file ();
   void request_open_file (QString fileName);
 
+  void handle_entered_debug_mode ();
+  void handle_quit_debug_mode ();
+
   void request_undo ();
   void request_redo ();
   void request_copy ();
   void request_cut ();
   void request_paste ();
   void request_save_file ();
   void request_save_file_as ();
   void request_run_file ();
@@ -82,16 +85,17 @@ public slots:
 
 private:
   void construct ();
   void add_file_editor_tab(file_editor_tab *f);
   file_editor_tab *active_editor_tab();
 
   QMenuBar *        _menu_bar;
   QToolBar *        _tool_bar;
+  QMenu *           _debug_menu;
   QAction*          _copy_action;
   QAction*          _cut_action;
   QTabWidget *      _tab_widget;
   int               _marker_bookmark;
   lexer_octave_gui *_lexer;
   QsciAPIs *        _lexer_api;
 };
 
diff --git a/gui/src/main-window.cc b/gui/src/main-window.cc
--- a/gui/src/main-window.cc
+++ b/gui/src/main-window.cc
@@ -202,23 +202,25 @@ main_window::current_working_directory_u
   _terminal->setFocus ();
 }
 
 
 void
 main_window::handle_entered_debug_mode ()
 {
   setWindowTitle ("Octave (Debugging)");
+  _file_editor->handle_entered_debug_mode ();
   _debug_menu->setEnabled (true);
 }
 
 void
 main_window::handle_quit_debug_mode ()
 {
   setWindowTitle ("Octave");
+  _file_editor->handle_quit_debug_mode ();
   _debug_menu->setEnabled (false);
 }
 
 void
 main_window::debug_continue ()
 {
   octave_link::instance ()
       ->post_event (new octave_debug_continue_event (*this));
