# HG changeset patch
# User David Bateman  <dbateman@free.fr>
# Date 1307041028 25200
#      Thu Jun 02 11:57:08 2011 -0700
# Node ID c0d102ad9bba26e797aa71c26a8fc9d9183f0f31
# Parent  53c0ed961de83fb617e6af5ab077d8d7b876b8c7
Fix loading of objects in MAT-files (bug #32641).

* ls-mat5.cc: Fix loading of objects in MAT-files (bug #32641).

diff --git a/src/ls-mat5.cc b/src/ls-mat5.cc
--- a/src/ls-mat5.cc
+++ b/src/ls-mat5.cc
@@ -1220,31 +1220,39 @@ read_mat5_binary_element (std::istream& 
                 // overload of a function handle. Special case.
                 tc =
                   new octave_fcn_inline (m.contents("expr")(0).string_value(),
                                          m.contents("args")(0).string_value());
               }
             else
               {
                 octave_class* cls = new octave_class (m, classname);
-                cls->reconstruct_exemplar ();
-
-                if (! cls->reconstruct_parents ())
-                  warning ("load: unable to reconstruct object inheritance");
-
-                tc = cls;
-                if (load_path::find_method (classname, "loadobj") !=
-                    std::string())
+
+                if (cls->reconstruct_exemplar ())
                   {
-                    octave_value_list tmp = feval ("loadobj", tc, 1);
-
-                    if (! error_state)
-                      tc = tmp(0);
-                    else
-                      goto data_read_error;
+
+                    if (! cls->reconstruct_parents ())
+                      warning ("load: unable to reconstruct object inheritance");
+
+                    tc = cls;
+                    if (load_path::find_method (classname, "loadobj") !=
+                        std::string())
+                      {
+                        octave_value_list tmp = feval ("loadobj", tc, 1);
+
+                        if (! error_state)
+                          tc = tmp(0);
+                        else
+                          goto data_read_error;
+                      }
+                  }
+                else
+                  {
+                    tc = m;
+                    warning ("load: element has been converted to a structure");
                   }
               }
           }
         else
           tc = m;
       }
       break;
 
