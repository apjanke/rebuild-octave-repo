# HG changeset patch
# User Jordi Gutiérrez Hermoso <jordigh@gmail.com>
# Date 1295189926 21600
#      Sun Jan 16 08:58:46 2011 -0600
# Node ID 50a7935f25122c94ecde47007013ca64d4d2f15f
# Parent  e1851653d59c06515a909fabe08633fef1f415f7
Don't invalidate iterators when calling std::map::erase, found by cppcheck

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,14 @@
+2011-01-15  Jordi Gutiérrez Hermoso  <jordigh@gmail.com>
+
+	* symtab.h (do_clear_global_pattern): Reword so as to not
+	invalidate iterators when calling std::map::erase().
+	* DLD-FUNCTIONS/urwlwrite.cc (~curl_handles): Ditto.
+
 2011-01-15  Rik  <octave@nomad.inbox5.com>
 
 	* src/dirfns.cc, src/help.cc, src/input.cc, src/load-save.cc,
 	src/oct-hist.cc, src/pager.cc, src/pr-output.cc, src/variables.cc:
 	Eliminate @deffn macros.
 
 2011-01-15  John W. Eaton  <jwe@octave.org>
 
diff --git a/src/DLD-FUNCTIONS/urlwrite.cc b/src/DLD-FUNCTIONS/urlwrite.cc
--- a/src/DLD-FUNCTIONS/urlwrite.cc
+++ b/src/DLD-FUNCTIONS/urlwrite.cc
@@ -608,18 +608,17 @@ public:
    {
      curl_global_init(CURL_GLOBAL_DEFAULT);
    }
   
   ~curl_handles (void) 
     {
       // Remove the elements of the map explicitly as they should
       // be deleted before the call to curl_global_cleanup
-      for (iterator pa = begin (); pa != end (); pa++)
-        map.erase (pa);
+      map.erase (begin(), end());
 
       curl_global_cleanup ();
     }
 
   iterator begin (void) { return iterator (map.begin ()); }
   const_iterator begin (void) const { return const_iterator (map.begin ()); }
 
   iterator end (void) { return iterator (map.end ()); }
diff --git a/src/symtab.h b/src/symtab.h
--- a/src/symtab.h
+++ b/src/symtab.h
@@ -2216,21 +2216,25 @@ private:
     for (table_iterator p = table.begin (); p != table.end (); p++)
       {
         symbol_record& sr = p->second;
 
         if (sr.is_global () && pattern.match (sr.name ()))
           sr.unmark_global ();
       }
 
+
     for (global_table_iterator q = global_table.begin (); 
-         q != global_table.end (); q++)
+         q != global_table.end ();)
       {
         if (pattern.match (q->first))
-          global_table.erase (q);
+          global_table.erase (q++); //Gotta be careful to not
+                                    //invalidate iterators
+        else
+          q++;
       }
 
 
   }
 
   void do_clear_variable_pattern (const std::string& pat)
   {
     glob_match pattern (pat);
