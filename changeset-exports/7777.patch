# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1211227536 14400
#      Mon May 19 16:05:36 2008 -0400
# Node ID 221fe75ac5c95c52d574e5166611d09aa30c0969
# Parent  4c3665e65bcd28dc694d9a6ba7c26bdb3247d192
isa.m: fix tests

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2008-05-19  John W. Eaton  <jwe@octave.org>
+
+	* general/isa.m: Fix tests.
+
 2008-05-13  Bill Denney  <bill@denney.ws>
 
 	* general/isa.m: Use persistent cell arrays to hold class names
 	instead of multiple strcmp calls.
 
 2008-05-12  David Bateman  <dbateman@free.fr>
 
 	* general/isa.m: Also treat "float: and "numeric" as the class
diff --git a/scripts/general/isa.m b/scripts/general/isa.m
--- a/scripts/general/isa.m
+++ b/scripts/general/isa.m
@@ -41,30 +41,30 @@ function retval = isa (x, cname)
   elseif (strcmp (cname, "fnumeric"))
     retval = any (strcmp (class (x), fnum_classes));
   else
     retval = strcmp (class (x), cname);
   endif
 
 endfunction
 
-%!assert (isa ("char", "float"), 0)
-%!assert (isa (double (13), "float"), 1)
-%!assert (isa (single (13), "float"), 1)
-%!assert (isa (int8 (13), "float"), 0)
-%!assert (isa (int16 (13), "float"), 0)
-%!assert (isa (int32 (13), "float"), 0)
-%!assert (isa (int64 (13), "float"), 0)
-%!assert (isa (uint8 (13), "float"), 0)
-%!assert (isa (uint16 (13), "float"), 0)
-%!assert (isa (uint32 (13), "float"), 0)
-%!assert (isa (uint64 (13), "float"), 0)
-%!assert (isa ("char", "fnumeric"), 0)
-%!assert (isa (double (13), "fnumeric"), 1)
-%!assert (isa (single (13), "fnumeric"), 1)
-%!assert (isa (int8 (13), "fnumeric"), 1)
-%!assert (isa (int16 (13), "fnumeric"), 1)
-%!assert (isa (int32 (13), "fnumeric"), 1)
-%!assert (isa (int64 (13), "fnumeric"), 1)
-%!assert (isa (uint8 (13), "fnumeric"), 1)
-%!assert (isa (uint16 (13), "fnumeric"), 1)
-%!assert (isa (uint32 (13), "fnumeric"), 1)
-%!assert (isa (uint64 (13), "fnumeric"), 1)
+%!assert (isa ("char", "float"), false)
+%!assert (isa (double (13), "float"), true)
+%!assert (isa (single (13), "float"), true)
+%!assert (isa (int8 (13), "float"), false)
+%!assert (isa (int16 (13), "float"), false)
+%!assert (isa (int32 (13), "float"), false)
+%!assert (isa (int64 (13), "float"), false)
+%!assert (isa (uint8 (13), "float"), false)
+%!assert (isa (uint16 (13), "float"), false)
+%!assert (isa (uint32 (13), "float"), false)
+%!assert (isa (uint64 (13), "float"), false)
+%!assert (isa ("char", "fnumeric"), false)
+%!assert (isa (double (13), "fnumeric"), true)
+%!assert (isa (single (13), "fnumeric"), true)
+%!assert (isa (int8 (13), "fnumeric"), true)
+%!assert (isa (int16 (13), "fnumeric"), true)
+%!assert (isa (int32 (13), "fnumeric"), true)
+%!assert (isa (int64 (13), "fnumeric"), true)
+%!assert (isa (uint8 (13), "fnumeric"), true)
+%!assert (isa (uint16 (13), "fnumeric"), true)
+%!assert (isa (uint32 (13), "fnumeric"), true)
+%!assert (isa (uint64 (13), "fnumeric"), true)
