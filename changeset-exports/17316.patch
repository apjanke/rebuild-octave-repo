# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1377197289 14400
#      Thu Aug 22 14:48:09 2013 -0400
# Node ID 8e2906e2fb2660c00ccfa66e6f367c5e6a093f92
# Parent  3abed16370adc301fcfd0146747e81f6fa4f8ec5
avoid reduce/reduce conflict in parser rules

* oct-parse.in.yy (return_list): Don't accept multiple values outside
of square brackets by using identifier instead of return_list1.
* pt-misc.h (tree_argument_list::tree_argument_list): New constructor
with tree_identifier* as argument.
* test/nest/varg_nest2.m: Fix syntax of function declaration.

diff --git a/libinterp/parse-tree/oct-parse.in.yy b/libinterp/parse-tree/oct-parse.in.yy
--- a/libinterp/parse-tree/oct-parse.in.yy
+++ b/libinterp/parse-tree/oct-parse.in.yy
@@ -1081,29 +1081,41 @@ param_list2     : decl2
 
 // ===================================
 // List of function return value names
 // ===================================
 
 return_list     : '[' ']'
                   {
                     lexer.looking_at_return_list = false;
+
                     $$ = new tree_parameter_list ();
                   }
-                | return_list1
+                | identifier
                   {
                     lexer.looking_at_return_list = false;
-                    if ($1->validate (tree_parameter_list::out))
-                      $$ = $1;
+
+                    tree_parameter_list *tmp = new tree_parameter_list ($1);
+
+                    // Even though this parameter list can contain only
+                    // a single identifier, we still need to validate it
+                    // to check for varargin or varargout.
+
+                    if (tmp->validate (tree_parameter_list::out))
+                      $$ = tmp;
                     else
                       ABORT_PARSE;
                   }
                 | '[' return_list1 ']'
                   {
                     lexer.looking_at_return_list = false;
+
+                    // Check for duplicate parameter names, varargin,
+                    // or varargout.
+
                     if ($2->validate (tree_parameter_list::out))
                       $$ = $2;
                     else
                       ABORT_PARSE;
                   }
                 ;
 
 return_list1    : identifier
diff --git a/libinterp/parse-tree/pt-misc.h b/libinterp/parse-tree/pt-misc.h
--- a/libinterp/parse-tree/pt-misc.h
+++ b/libinterp/parse-tree/pt-misc.h
@@ -54,16 +54,19 @@ public:
     };
 
   tree_parameter_list (void)
     : marked_for_varargs (0) { }
 
   tree_parameter_list (tree_decl_elt *t)
     : marked_for_varargs (0) { append (t); }
 
+  tree_parameter_list (tree_identifier *id)
+    : marked_for_varargs (0) { append (new tree_decl_elt (id)); }
+
   ~tree_parameter_list (void);
 
   void mark_as_formal_parameters (void);
 
   bool validate (in_or_out type);
 
   bool takes_varargs (void) const { return marked_for_varargs != 0; }
 
diff --git a/test/nest/varg_nest2.m b/test/nest/varg_nest2.m
--- a/test/nest/varg_nest2.m
+++ b/test/nest/varg_nest2.m
@@ -1,14 +1,14 @@
 function x = varg_nest2
   [a, b] = f;
   x = a;
 
   if nargout == 1
     x = a;
   endif
 
-  function a, b = f
+  function [a, b] = f
     if nargout == 2
       a = b = 5;
     endif
   endfunction
 endfunction
