# HG changeset patch
# User Rik <rik@octave.org>
# Date 1374732748 25200
#      Wed Jul 24 23:12:28 2013 -0700
# Node ID db90efd8f32b15f5c85937159a10b6a1146c93eb
# Parent  f694f791709b16e0a708864133fc4e07de65bc29
image.m: Update to use new __plt_get_axis_arg__ without using "axes" and "newplot" function.
Added an axes handle argument to __img__ so that currentfigure/axes properties
don't have to be changed. Removed unwind_protect block which is not needed any more.

* scripts/image/image.m: Update to use new __plt_get_axis_arg__ without using
"axes" and "newplot" function.

diff --git a/scripts/image/image.m b/scripts/image/image.m
--- a/scripts/image/image.m
+++ b/scripts/image/image.m
@@ -48,17 +48,21 @@
 ## @end deftypefn
 
 ## Author: Tony Richardson <arichard@stark.cc.oh.us>
 ## Created: July 1994
 ## Adapted-By: jwe
 
 function h = image (varargin)
 
-  [ax, varargin, nargin] = __plt_get_axis_arg__ ("image", varargin{:});
+  [hax, varargin, nargin] = __plt_get_axis_arg__ ("image", varargin{:});
+  
+  if (isempty (hax))
+    hax = gca ();
+  endif
 
   chararg = find (cellfun ("isclass", varargin, "char"), 1, "first");
   
   if (nargin == 0 || chararg == 1)
     img = imread ("default.img");
     x = y = [];
   elseif (nargin == 1 || chararg == 2)
     img = varargin{1};
@@ -66,25 +70,19 @@ function h = image (varargin)
   elseif (nargin == 2 || chararg == 3)
     print_usage ();
   else
     x = varargin{1};
     y = varargin{2};
     img = varargin{3};
     chararg = 4;
   endif
-
-  oldax = gca ();
-  unwind_protect
-    axes (ax);
-    htmp = __img__ (x, y, img, varargin{chararg:end});
-    set (ax, "layer", "top");
-  unwind_protect_cleanup
-    axes (oldax);
-  end_unwind_protect
+  
+  htmp = __img__ (hax, x, y, img, varargin{chararg:end});
+  set (hax, "layer", "top");
 
   if (nargout > 0)
     h = htmp;
   endif
 
 endfunction
 
 ## Generic image creation.
@@ -92,19 +90,17 @@ endfunction
 ## The axis values corresponding to the matrix elements are specified in
 ## @var{x} and @var{y}.  If you're not using gnuplot 4.2 or later, these
 ## variables are ignored.
 
 ## Author: Tony Richardson <arichard@stark.cc.oh.us>
 ## Created: July 1994
 ## Adapted-By: jwe
 
-function h = __img__ (x, y, img, varargin)
-  
-  newplot ();
+function h = __img__ (hax, x, y, img, varargin)
 
   if (isempty (img))
     error ("__img__: matrix is empty");
   endif
 
   ## FIXME: Hack for integer formats which use zero-based indexing
   ##        Hack favors correctness of display over size of image in memory.
   ##        True fix will be done in C++ code. 
@@ -131,19 +127,17 @@ function h = __img__ (x, y, img, varargi
     dy = diff (y);
     dx = std (dx) / mean (abs (dx));
     dy = std (dy) / mean (abs (dy));
     if (any (dx > tol) || any (dy > tol))
       warning ("image: non-linear X, Y data is ignored.  IMG will be shown with linear mapping");
     endif
   endif
 
-  ca = gca ();
-
-  htmp = __go_image__ (ca, "cdata", img, "xdata", xdata, "ydata", ydata,
+  htmp = __go_image__ (hax, "cdata", img, "xdata", xdata, "ydata", ydata,
                        "cdatamapping", "direct", varargin {:});
 
   px = __image_pixel_size__ (htmp);
 
   if (xdata(2) < xdata(1))
     xdata = fliplr (xdata);
   elseif (xdata(2) == xdata(1))
     xdata = xdata(1) + [0, columns(img)-1];
@@ -157,32 +151,32 @@ function h = __img__ (x, y, img, varargi
   ylim = ydata + [-px(2), px(2)];
 
   ## FIXME -- how can we do this and also get the {x,y}limmode
   ## properties to remain "auto"?  I suppose this adjustment should
   ## happen automatically in axes::update_axis_limits instead of
   ## explicitly setting the values here.  But then what information is
   ## available to axes::update_axis_limits to determine that the
   ## adjustment is necessary?
-  set (ca, "xlim", xlim, "ylim", ylim);
+  set (hax, "xlim", xlim, "ylim", ylim);
 
   if (ndims (img) == 3)
     if (isinteger (img))
       cls = class (img);
       mn = intmin (cls);
       mx = intmax (cls);
-      set (ca, "clim", double ([mn, mx]));
+      set (hax, "clim", double ([mn, mx]));
     endif
   endif
 
-  set (ca, "view", [0, 90]);
+  set (hax, "view", [0, 90]);
 
-  if (strcmp (get (ca, "nextplot"), "replace"))
+  if (strcmp (get (hax, "nextplot"), "replace"))
     # Always reverse y-axis for images, unless hold is on
-    set (ca, "ydir", "reverse");
+    set (hax, "ydir", "reverse");
   endif
 
   if (nargout > 0)
     h = htmp;
   endif
 
 endfunction
 
