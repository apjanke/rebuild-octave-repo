# HG changeset patch
# User Colin Macdonald <cbm@m.fsf.org>
# Date 1486210251 -3600
#      Sat Feb 04 13:10:51 2017 +0100
# Branch stable
# Node ID d99584de7d721136cd0b494b93e9c6a783289664
# Parent  900ae902aa9007d528cf7d47ae8821a449ef1c80
check if input is class method before declaring it unimplemented (patch #9238) (bug #49694)

Octave helpfully checks for functions that are implemented in Octave Forge
packages.  If one of those function names is actually a class method (of a
class provided by the package) and the package is loaded, then the resulting
warning incorrectly states it is unimplemented.  Instead, we give a hint and
link to the appropriate help call.  This commit adds this support for the
"symbolic" package but the support is general if other packages need it too.

* scripts/help/__unimplemented__.m: improve behaviour for class methods

Pushed by siko1056 <k.ohlhus@gmail.com>.

diff --git a/scripts/help/__unimplemented__.m b/scripts/help/__unimplemented__.m
--- a/scripts/help/__unimplemented__.m
+++ b/scripts/help/__unimplemented__.m
@@ -1,10 +1,11 @@
-## Copyright (C) 2010-2016 John W. Eaton
+## Copyright (C) 2010-2017 John W. Eaton
 ## Copyright (C) 2010 VZLU Prague
+## Copyright (C) 2017 Colin B. Macdonald
 ##
 ## This file is part of Octave.
 ##
 ## Octave is free software; you can redistribute it and/or modify it
 ## under the terms of the GNU General Public License as published by
 ## the Free Software Foundation; either version 3 of the License, or (at
 ## your option) any later version.
 ##
@@ -484,17 +485,18 @@ function txt = __unimplemented__ (fcn)
           "gegenbauerC", "harmonic", "heaviside", "hermiteH", "hypergeom", ...
           "igamma", "jacobiP", "kroneckerDelta", "kummerU", "laguerreL", ...
           "legendreP", "logint", "minpoly", "pochhammer", "poles", ...
           "poly2sym", "polylog", "pretty", "quorem", "rectangularPulse", ...
           "signIm", "simplify", "sinhint", "sinint", "solve", "ssinint", ...
           "sym", "sym2poly", "symfun", "sympref", "syms", "symvar", ...
           "triangularPulse", "vpa", "vpasolve", "whittakerM", "whittakerW", ...
           "zeta"}
-      txt = check_package (fcn, "symbolic");
+      classes = {"sym", "symfun"};
+      txt = check_package (fcn, "symbolic", classes);
 
     ## optimization
     case {"bintprog", "color", "fgoalattain", "fmincon", "fminimax", ...
           "fminsearch", "fseminf", "fzmult", "gangstr", "ktrlink", ...
           "linprog", "lsqcurvefit", "lsqlin", "lsqnonlin", "optimoptions", ...
           "optimtool", "quadprog"}
       txt = check_package (fcn, "optim");
 
@@ -515,24 +517,42 @@ function txt = __unimplemented__ (fcn)
   endif
 
   if (nargout == 0)
     warning ("Octave:missing-function", "%s\n", txt);
   endif
 
 endfunction
 
-function txt = check_package (fcn, name)
+function txt = check_package (fcn, name, classes)
+
+  if (nargin < 3)
+    classes = {};
+  endif
 
   txt = sprintf ("the '%s' function belongs to the %s package from Octave Forge",
                  fcn, name);
 
   [~, status] = pkg ("describe", name);
   switch (tolower (status{1}))
     case "loaded",
+      for i = 1:length (classes)
+        cls = classes{i};
+        try
+          meths = methods (cls);
+        catch
+          meths = {};
+        end_try_catch
+        if (any (strcmp (fcn, meths)))
+          txt = sprintf (["'%s' is a method of class '%s'; it must be ", ...
+                          "called with a '%s' argument (see 'help @@%s/%s')."],
+                         fcn, cls, cls, cls, fcn);
+          return
+        endif
+      endfor
       txt = sprintf ("%s but has not yet been implemented.", txt);
     case "not loaded",
       txt = sprintf (["%s which you have installed but not loaded.  To ", ...
                       "load the package, run `pkg load %s' from the ", ...
                       "Octave prompt."], txt, name);
     otherwise
       ## this includes "not installed" and anything else if pkg changes
       ## the output of describe
