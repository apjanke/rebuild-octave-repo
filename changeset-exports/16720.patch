# HG changeset patch
# User Torsten <ttl@justmail.de>
# Date 1370200427 -7200
#      Sun Jun 02 21:13:47 2013 +0200
# Node ID 973fd2367d442503551c938176344adcd3603a73
# Parent  0f6f14e3ac6a76bb6a6d99c1d59e93b9b3728a02
select octave lexer for unnamed files and bash lexer for files without extension

* file-editor-tab.cc(update_lexer): differentiate between unnamed files (octave
  lexer) and files without or with unknown extension (bash lexer),
  (notice_settings): unconditionally call update_lexer for noticing style
  changes for unnamed files; do not update the title of the tab

diff --git a/libgui/src/m-editor/file-editor-tab.cc b/libgui/src/m-editor/file-editor-tab.cc
--- a/libgui/src/m-editor/file-editor-tab.cc
+++ b/libgui/src/m-editor/file-editor-tab.cc
@@ -247,26 +247,31 @@ file_editor_tab::update_lexer ()
       else if (_file_name.endsWith (".bat"))
         {
           lexer = new QsciLexerBatch ();
         }
       else if (_file_name.endsWith (".diff"))
         {
           lexer = new QsciLexerDiff ();
         }
-      else
-        {
+      else if (_file_name.isEmpty ()
+                || _file_name.at (_file_name.count () - 1) == '/')
+        { // new, no yet named file: let us assume it is octave
 #if defined (HAVE_LEXER_OCTAVE)
           lexer = new QsciLexerOctave ();
 #elif defined (HAVE_LEXER_MATLAB)
           lexer = new QsciLexerMatlab ();
 #else
           lexer = new QsciLexerBash ();
 #endif
         }
+      else
+        { // other or no extension
+          lexer = new QsciLexerBash ();
+        }
     }
 
   _lexer_apis = new QsciAPIs(lexer);
   if (_lexer_apis)
     {
       // get path to prepared api info
       QDesktopServices desktopServices;
       QString prep_apis_path
@@ -1135,18 +1140,17 @@ file_editor_tab::file_has_changed (const
     }
 }
 
 void
 file_editor_tab::notice_settings (const QSettings *settings)
 {
   // QSettings pointer is checked before emitting.
 
-  if (!_file_name.isEmpty ())
-    update_lexer (); // do not update lexer when tab is just created
+  update_lexer ();
 
   //highlight current line color
   QVariant default_var = QColor (240, 240, 240);
   QColor setting_color = settings->value ("editor/highlight_current_line_color",
                                           default_var).value<QColor> ();
   _edit_area->setCaretLineBackgroundColor (setting_color);
   _edit_area->setCaretLineVisible
     (settings->value ("editor/highlightCurrentLine", true).toBool ());
@@ -1209,17 +1213,16 @@ file_editor_tab::notice_settings (const 
   _edit_area->setIndentationGuides
         (settings->value ("editor/show_indent_guides",false).toBool ());
 
   _edit_area->setTabWidth
         (settings->value ("editor/tab_width",2).toInt ());
 
   _long_title = settings->value ("editor/longWindowTitle", false).toBool ();
 
-  update_window_title (false);
 }
 
 void
 file_editor_tab::auto_margin_width ()
 {
   _edit_area->setMarginWidth (2, "1"+QString::number (_edit_area->lines ()));
 }
 
