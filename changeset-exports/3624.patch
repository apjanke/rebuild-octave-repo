# HG changeset patch
# User jwe
# Date 953793621 0
#      Thu Mar 23 06:40:21 2000 +0000
# Node ID 770e36505264fdb01540b4b1a288a74b0a2ae30d
# Parent  35070534ea95c759c18839738c4b937f2cdef973
[project @ 2000-03-23 06:39:16 by jwe]

diff --git a/src/c_file_ptr_stream.cc b/src/c_file_ptr_stream.cc
--- a/src/c_file_ptr_stream.cc
+++ b/src/c_file_ptr_stream.cc
@@ -80,19 +80,19 @@ std::streamsize
 c_file_ptr_buf::xsgetn (char *s, std::streamsize n)
 {
   return fread (s, 1, n, f);
 }
 
 static inline int
 seekdir_to_whence (std::ios::seekdir dir)
 {
-  return ((dir == ios::beg) ? SEEK_SET :
-	  (dir == ios::cur) ? SEEK_CUR :
-	  (dir == ios::end) ? SEEK_END :
+  return ((dir == std::ios::beg) ? SEEK_SET :
+	  (dir == std::ios::cur) ? SEEK_CUR :
+	  (dir == std::ios::end) ? SEEK_END :
 	  dir);
 }
 
 std::streampos
 c_file_ptr_buf::seekoff (std::streamoff offset, std::ios::seekdir dir,
 			 std::ios::openmode)
 {
   // XXX FIXME XXX -- is this the right thing to do?
diff --git a/src/c_file_ptr_stream.h b/src/c_file_ptr_stream.h
--- a/src/c_file_ptr_stream.h
+++ b/src/c_file_ptr_stream.h
@@ -53,48 +53,50 @@ public:
 
   int pbackfail (int);
 
   std::streamsize xsputn (const char*, std::streamsize);
 
   std::streamsize xsgetn (char *, std::streamsize);
 
   std::streampos seekoff (std::streamoff, std::ios::seekdir,
-			  std::ios::openmode = ios::in | ios::out);
+			  std::ios::openmode = std::ios::in | std::ios::out);
   
   std::streampos seekpos (std::streampos,
-			  std::ios::openmode = ios::in | ios::out);
+			  std::ios::openmode = std::ios::in | std::ios::out);
 
   int sync (void);
 };
 
 class
-i_c_file_ptr_stream : public istream
+i_c_file_ptr_stream : public std::istream
 {
 private:
 
   c_file_ptr_buf f;
 
 public:
 
-  i_c_file_ptr_stream (FILE* f_arg) : istream (), f (f_arg) { init (&f); }
+  i_c_file_ptr_stream (FILE* f_arg)
+    : std::istream (), f (f_arg) { init (&f); }
 
   c_file_ptr_buf *rdbuf (void) { return &f; }
 };
 
 class
-o_c_file_ptr_stream : public ostream
+o_c_file_ptr_stream : public std::ostream
 {
 private:
 
   c_file_ptr_buf f;
 
 public:
 
-  o_c_file_ptr_stream (FILE* f_arg) : ostream (), f (f_arg) { init (&f); }
+  o_c_file_ptr_stream (FILE* f_arg)
+    : std::ostream (), f (f_arg) { init (&f); }
 
   c_file_ptr_buf *rdbuf (void) { return &f; }
 };
 
 #endif
 
 /*
 ;;; Local Variables: ***
