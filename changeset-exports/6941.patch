# HG changeset patch
# User jwe
# Date 1191265109 0
#      Mon Oct 01 18:58:29 2007 +0000
# Node ID 3d555cd5ad0f92aaafe14cbcdb8704506a4f7ad7
# Parent  cf41866340d377bc2492b82e9d42a182c260076d
[project @ 2007-10-01 18:58:29 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,14 @@
+2007-10-01  John W. Eaton  <jwe@octave.org>
+
+	* aclocal.m4 (OCTAVE_CHECK_STRPTIME): Delete.
+	* configure.in: Don't use OCTAVE_CHECK_STRPTIME, simply check for
+	strptime.
+
 2007-09-18  Thomas Treichl  <Thomas.Treichl@gmx.net>
 
 	* aclocal.m4 (OCTAVE_CHECK_STRPTIME): New macro.
 	* configure.in: Use it.
 
 2007-09-06  John W. Eaton  <jwe@octave.org>
 
 	* configure.in: Avoid broken strptime function on Cygwin systems.
diff --git a/aclocal.m4 b/aclocal.m4
--- a/aclocal.m4
+++ b/aclocal.m4
@@ -982,77 +982,16 @@ AC_DEFUN([OCTAVE_HDF5_DLL], [
       CFLAGS="$CFLAGS -DWIN32 -D_HDF5USEDLL_"
       AC_TRY_LINK([#include <hdf5.h>], [hid_t x = H5T_NATIVE_DOUBLE; return x],
         octave_cv_hdf5_dll=yes,
 	octave_cv_hdf5_dll=no)
       CFLAGS=$CFLAGS_old])])
   if test "$octave_cv_hdf5_dll" = yes; then
     AC_DEFINE(_HDF5USEDLL_, 1, [Define if using HDF5 dll (Win32)])
   fi])
-dnl 
-dnl Check to see if the function 'strptime' fills all fields of the tm
-dnl structure correctly or if some systems maybe forget about the tm_wday
-dnl and tm_yday fields (see inline comments below)
-dnl
-AC_DEFUN([OCTAVE_CHECK_STRPTIME],[
-  AC_CHECK_FUNC(strptime)
-  if test "$ac_cv_func_strptime" == yes; then
-    AC_MSG_CHECKING([whether strptime works])
-    AC_CACHE_VAL([octave_cv_strptime],[
-      AC_TRY_RUN([#include <stdio.h>
-      #include <time.h>
-
-      int main (int argc, char *argv[]) {
-
-        struct tm tm;
-        time_t t;
-
-        /* Checks for a handle error if return value == NULL, if so then
-           return an error number immediately */
-        if (strptime("17-09-2007 12:10:20", "%d-%m-%Y %H:%M:%S", &tm) == NULL) {
-          /* printf ("strptime: An handle error occured\n"); */
-          return (1);
-        }
-        /* printf("year: %d; month: %d; day: %d;\n", 
-             tm.tm_year, tm.tm_mon, tm.tm_mday);
-           printf("hour: %d; minute: %d; second: %d\n", 
-             tm.tm_hour, tm.tm_min, tm.tm_sec);
-           printf("strptime: week day: %d, year day: %d\n",
-             tm.tm_wday, tm.tm_yday); */
-
-        /* The hard coded date from above is a 'Monday' and the day
-           number '259' of the year 2007, so tm_wday == 1 and
-           tm_yday == 259, if these values are not set then return 
-           the error number 1 */
-        if (tm.tm_year != 107) return (1);
-        if (tm.tm_mon  != 8)   return (1);
-        if (tm.tm_mday != 17)  return (1);
-        if (tm.tm_hour != 12)  return (1);
-        if (tm.tm_min  != 10)  return (1);
-        if (tm.tm_sec  != 20)  return (1);
-        /* On some system eg. MacOSX and Cygwin the following two fields
-           may be zero, ie. the function does not work as expected */
-        if (tm.tm_wday != 1)   return (1);
-        if (tm.tm_yday != 259) return (1);
-
-        /* If not already returned from this test program then function
-           seems to work correctly */
-        return (0);
-      }],[octave_cv_strptime=yes],[octave_cv_strptime=no],[octave_cv_strptime=no]
-      ) # end of TRY_RUN
-    ])  # end of CACHE_VAL
-
-    AC_MSG_RESULT([$octave_cv_strptime])
-    if test x$octave_cv_strptime = xyes
-    then
-      AC_DEFINE(HAVE_STRPTIME, 1,
-         [Define to 1 if you have a working `strptime' function.])
-    fi
-  fi # if test "$ac_cv_func_strptime" == yes; then
-]) # end of AC_DEFUN of OCTAVE_CHECK_STRPTIME
 dnl
 dnl Check for the QHull version.
 dnl
 AC_DEFUN(AC_CHECK_QHULL_VERSION,
 [AC_MSG_CHECKING([for qh_qhull in -lqhull with qh_version])
 AC_CACHE_VAL(octave_cv_lib_qhull_version,  [
 cat > conftest.c <<EOF
 #include <stdio.h>
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -24,17 +24,17 @@ dnl Copyright (C) 1996, 1997 John W. Eat
 ### Preserve CFLAGS and CXXFLAGS from the environment before doing
 ### anything else because we don't know which macros might call
 ### AC_PROG_CC or AC_PROG_CXX.
 
 EXTERN_CFLAGS="$CFLAGS"
 EXTERN_CXXFLAGS="$CXXFLAGS"
 
 AC_INIT
-AC_REVISION($Revision: 1.575 $)
+AC_REVISION($Revision: 1.576 $)
 AC_PREREQ(2.57)
 AC_CONFIG_SRCDIR([src/octave.cc])
 AC_CONFIG_HEADER(config.h)
 
 OCTAVE_HOST_TYPE
 
 AC_DEFINE(OCTAVE_SOURCE, 1, [Define if this is Octave.])
   
@@ -1432,33 +1432,31 @@ fi
 AC_CHECK_FUNCS(atexit basename bcopy bzero canonicalize_file_name chmod \
   dup2 endgrent endpwent execvp fcntl fork getcwd getegid geteuid \
   getgid getgrent getgrgid getgrnam getpgrp getpid getppid getpwent \
   getpwuid gettimeofday getuid getwd _kbhit kill link localtime_r \
   lstat memmove mkdir mkfifo mkstemp on_exit pipe poll putenv raise \
   readlink realpath rename resolvepath rindex rmdir round select setgrent \
   setlocale setpwent setvbuf sigaction siglongjmp sigpending sigprocmask \
   sigsuspend snprintf stat strcasecmp strdup strerror stricmp \
-  strncasecmp strnicmp strsignal symlink tempnam umask \
+  strncasecmp strnicmp strptime strsignal symlink tempnam umask \
   uname unlink usleep utime vfprintf vsprintf vsnprintf waitpid \
   _chmod _snprintf x_utime _utime32)
 
 case "$canonical_host_type" in
   *-*-msdosmsvc)
     ## The %T format specifier for strftime is reportedly broken,
     ## so use our version.  We could use an actual configure test
     ## for this.
   ;;
   *)
     AC_CHECK_FUNCS(strftime)
   ;;
 esac
 
-OCTAVE_CHECK_STRPTIME
-
 OCTAVE_SMART_PUTENV
 
 case "$canonical_host_type" in
   *-*-msdosmsvc | *-*-mingw*)
     AC_MSG_CHECKING([for required _WIN32_WINNT])
     AC_COMPILE_IFELSE(AC_LANG_PROGRAM([[
 #include <windows.h>
 #if _WIN32_WINNT < 0x0403
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,10 +1,14 @@
 2007-10-01  John W. Eaton  <jwe@octave.org>
 
+	* oct-time.cc (octave_strptime::init): Call mktime to propertly
+	initialize wday and yday.
+	From Matthias Drochner <m.drochner@fz-juelich.de>.
+
 	* cmd-edit.cc (command_editor::do_decode_prompt_string): Don't
 	insert extra '\001' when decoding \[ and \].
 
 2007-09-26  David Bateman  <dbateman@free.fr>
 
 	* dMatrix.cc (lssolve): Replace the use of xGELSS with xGELSY with
 	is much faster and no less accurate.
 	* CMatrix.cc (lssolve): ditto.
diff --git a/liboctave/oct-time.cc b/liboctave/oct-time.cc
--- a/liboctave/oct-time.cc
+++ b/liboctave/oct-time.cc
@@ -22,16 +22,17 @@ 02110-1301, USA.
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <climits>
 #include <cmath>
+#include <ctime>
 
 #ifdef HAVE_UNISTD_H
 #ifdef HAVE_SYS_TYPES_H
 #include <sys/types.h>
 #endif
 #include <unistd.h>
 #endif
 
@@ -350,16 +351,20 @@ octave_strptime::init (const std::string
   char *ps = strsave ("");
   t.tm_zone = ps;
 #endif
 
   char *p = strsave (str.c_str ());
 
   char *q = oct_strptime (p, fmt.c_str (), &t);
 
+  // Fill in wday and yday.
+  t.tm_isdst = -1;
+  mktime (&t);
+
   if (q)
     nchars = q - p + 1;
   else
     nchars = 0;
 
   delete [] p;
 
   octave_base_tm::init (&t);
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -43,16 +43,17 @@ 2007-09-26  David Bateman  <dbateman@fre
 
 	* mk-pkg-add: Simplfy the autoload commands.
 	* parse.y (Fautoload): Allow bare filename if file is in the same
 	directory as the script from where the autoload command is run.
 
 2007-09-25  Matthias Drochner  <m.drochner@fz-juelich.de>
 
 	* syscalls.cc (Fpopen2): Doc fix.
+	Use "sort -r" instead of "sort -nr" in test.
 
 2007-09-18  John W. Eaton  <jwe@octave.org>
 
 	* input.cc (input_event_hook, Finput_event_hook): Call
 	command_editor::add_event_hook and
 	command_editor::remove_event_hook intstead of
 	command_editor::set_event_hook and
 	command_editor::restore_event_hook.
