# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1266399636 -3600
#      Wed Feb 17 10:40:36 2010 +0100
# Node ID 83fa590b8a09d9318b3c649901e156717d9a6c2a
# Parent  2210d3070543c720003ac1cd14f7dc210d5b26c6
simplify min/max definitions in liboctave

diff --git a/liboctave/CNDArray.cc b/liboctave/CNDArray.cc
--- a/liboctave/CNDArray.cc
+++ b/liboctave/CNDArray.cc
@@ -909,51 +909,17 @@ operator >> (std::istream& is, ComplexND
           }
     }
 
  done:
 
   return is;
 }
 
-ComplexNDArray
-min (const Complex& s, const ComplexNDArray& m)
-{
-  return do_sm_binary_op<ComplexNDArray> (s, m, mx_inline_xmin);
-}
-
-ComplexNDArray
-min (const ComplexNDArray& m, const Complex& s)
-{
-  return do_ms_binary_op<ComplexNDArray> (m, s, mx_inline_xmin);
-}
-
-ComplexNDArray
-min (const ComplexNDArray& a, const ComplexNDArray& b)
-{
-  return do_mm_binary_op<ComplexNDArray> (a, b, mx_inline_xmin, "min");
-}
-
-ComplexNDArray
-max (const Complex& s, const ComplexNDArray& m)
-{
-  return do_sm_binary_op<ComplexNDArray> (s, m, mx_inline_xmax);
-}
-
-ComplexNDArray
-max (const ComplexNDArray& m, const Complex& s)
-{
-  return do_ms_binary_op<ComplexNDArray> (m, s, mx_inline_xmax);
-}
-
-ComplexNDArray
-max (const ComplexNDArray& a, const ComplexNDArray& b)
-{
-  return do_mm_binary_op<ComplexNDArray> (a, b, mx_inline_xmax, "max");
-}
+MINMAX_FCNS (ComplexNDArray, Complex)
 
 NDS_CMP_OPS (ComplexNDArray, Complex)
 NDS_BOOL_OPS (ComplexNDArray, Complex)
 
 SND_CMP_OPS (Complex, ComplexNDArray)
 SND_BOOL_OPS (Complex, ComplexNDArray)
 
 NDND_CMP_OPS (ComplexNDArray, ComplexNDArray)
diff --git a/liboctave/CNDArray.h b/liboctave/CNDArray.h
--- a/liboctave/CNDArray.h
+++ b/liboctave/CNDArray.h
@@ -151,23 +151,17 @@ public:
 private:
 
   ComplexNDArray (Complex *d, const dim_vector& dv)
     : MArrayN<Complex> (d, dv) { }
 };
 
 extern OCTAVE_API ComplexNDArray conj (const ComplexNDArray& a);
 
-extern OCTAVE_API ComplexNDArray min (const Complex& c, const ComplexNDArray& m);
-extern OCTAVE_API ComplexNDArray min (const ComplexNDArray& m, const Complex& c);
-extern OCTAVE_API ComplexNDArray min (const ComplexNDArray& a, const ComplexNDArray& b);
-
-extern OCTAVE_API ComplexNDArray max (const Complex& c, const ComplexNDArray& m);
-extern OCTAVE_API ComplexNDArray max (const ComplexNDArray& m, const Complex& c);
-extern OCTAVE_API ComplexNDArray max (const ComplexNDArray& a, const ComplexNDArray& b);
+MINMAX_DECLS (ComplexNDArray, Complex, OCTAVE_API)
 
 NDS_CMP_OP_DECLS (ComplexNDArray, Complex, OCTAVE_API)
 NDS_BOOL_OP_DECLS (ComplexNDArray, Complex, OCTAVE_API)
 
 SND_CMP_OP_DECLS (Complex, ComplexNDArray, OCTAVE_API)
 SND_BOOL_OP_DECLS (Complex, ComplexNDArray, OCTAVE_API)
 
 NDND_CMP_OP_DECLS (ComplexNDArray, ComplexNDArray, OCTAVE_API)
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,27 @@
+2010-02-17  Jaroslav Hajek  <highegg@gmail.com>
+
+	* mx-op-defs.h (MINMAX_FCNS): Generalize.
+	* mx-op-decl.h (MINMAX_DECLS): Likewise.
+
+	* int16NDArray.h, int32NDArray.h, int64NDArray.h, int8NDArray.h,
+	uint16NDArray.h, uint32NDArray.h, uint64NDArray.h, uint8NDArray.h: 
+	Update.
+	* int16NDArray.cc, int32NDArray.cc, int64NDArray.cc, int8NDArray.cc,
+	uint16NDArray.cc, uint32NDArray.cc, uint64NDArray.cc, uint8NDArray.cc:
+	Update.
+
+	* CNDArray.h, dNDArray.h, fCNDArray.h, fNDArray.h: Replace explicit
+	decls.
+
+	* CNDArray.cc, dNDArray.cc, fCNDArray.cc, fNDArray.cc: Replace explicit
+	definitions.
+
+
 2010-02-11  John W. Eaton  <jwe@octave.org>
 
 	* sparse-mk-ops.awk, mk-ops.awk, filemode.c, lo-cieee.c,
 	oct-rl-hist.c, randgamma.c, randmtzig.c, randpoisson.c,
 	tempnam.c, tempname.c: Untabify.
 
 2010-02-11  John W. Eaton  <jwe@octave.org>
 
diff --git a/liboctave/dNDArray.cc b/liboctave/dNDArray.cc
--- a/liboctave/dNDArray.cc
+++ b/liboctave/dNDArray.cc
@@ -976,51 +976,17 @@ operator >> (std::istream& is, NDArray& 
           }
     }
 
  done:
 
   return is;
 }
 
-NDArray
-min (double s, const NDArray& m)
-{
-  return do_sm_binary_op<NDArray> (s, m, mx_inline_xmin);
-}
-
-NDArray
-min (const NDArray& m, double s)
-{
-  return do_ms_binary_op<NDArray> (m, s, mx_inline_xmin);
-}
-
-NDArray
-min (const NDArray& a, const NDArray& b)
-{
-  return do_mm_binary_op<NDArray> (a, b, mx_inline_xmin, "min");
-}
-
-NDArray
-max (double s, const NDArray& m)
-{
-  return do_sm_binary_op<NDArray> (s, m, mx_inline_xmax);
-}
-
-NDArray
-max (const NDArray& m, double s)
-{
-  return do_ms_binary_op<NDArray> (m, s, mx_inline_xmax);
-}
-
-NDArray
-max (const NDArray& a, const NDArray& b)
-{
-  return do_mm_binary_op<NDArray> (a, b, mx_inline_xmax, "max");
-}
+MINMAX_FCNS (NDArray, double)
 
 NDS_CMP_OPS (NDArray, double)
 NDS_BOOL_OPS (NDArray, double)
 
 SND_CMP_OPS (double, NDArray)
 SND_BOOL_OPS (double, NDArray)
 
 NDND_CMP_OPS (NDArray, NDArray)
diff --git a/liboctave/dNDArray.h b/liboctave/dNDArray.h
--- a/liboctave/dNDArray.h
+++ b/liboctave/dNDArray.h
@@ -165,23 +165,17 @@ private:
   NDArray (double *d, const dim_vector& dv) : MArrayN<double> (d, dv) { }
 };
 
 // Publish externally used friend functions.
 
 extern OCTAVE_API NDArray real (const ComplexNDArray& a);
 extern OCTAVE_API NDArray imag (const ComplexNDArray& a);
 
-extern OCTAVE_API NDArray min (double d, const NDArray& m);
-extern OCTAVE_API NDArray min (const NDArray& m, double d);
-extern OCTAVE_API NDArray min (const NDArray& a, const NDArray& b);
-
-extern OCTAVE_API NDArray max (double d, const NDArray& m);
-extern OCTAVE_API NDArray max (const NDArray& m, double d);
-extern OCTAVE_API NDArray max (const NDArray& a, const NDArray& b);
+MINMAX_DECLS (NDArray, double, OCTAVE_API)
 
 NDS_CMP_OP_DECLS (NDArray, double, OCTAVE_API)
 NDS_BOOL_OP_DECLS (NDArray, double, OCTAVE_API)
 
 SND_CMP_OP_DECLS (double, NDArray, OCTAVE_API)
 SND_BOOL_OP_DECLS (double, NDArray, OCTAVE_API)
 
 NDND_CMP_OP_DECLS (NDArray, NDArray, OCTAVE_API)
diff --git a/liboctave/fCNDArray.cc b/liboctave/fCNDArray.cc
--- a/liboctave/fCNDArray.cc
+++ b/liboctave/fCNDArray.cc
@@ -904,51 +904,17 @@ operator >> (std::istream& is, FloatComp
           }
     }
 
  done:
 
   return is;
 }
 
-FloatComplexNDArray
-min (const FloatComplex& s, const FloatComplexNDArray& m)
-{
-  return do_sm_binary_op<FloatComplexNDArray> (s, m, mx_inline_xmin);
-}
-
-FloatComplexNDArray
-min (const FloatComplexNDArray& m, const FloatComplex& s)
-{
-  return do_ms_binary_op<FloatComplexNDArray> (m, s, mx_inline_xmin);
-}
-
-FloatComplexNDArray
-min (const FloatComplexNDArray& a, const FloatComplexNDArray& b)
-{
-  return do_mm_binary_op<FloatComplexNDArray> (a, b, mx_inline_xmin, "min");
-}
-
-FloatComplexNDArray
-max (const FloatComplex& s, const FloatComplexNDArray& m)
-{
-  return do_sm_binary_op<FloatComplexNDArray> (s, m, mx_inline_xmax);
-}
-
-FloatComplexNDArray
-max (const FloatComplexNDArray& m, const FloatComplex& s)
-{
-  return do_ms_binary_op<FloatComplexNDArray> (m, s, mx_inline_xmax);
-}
-
-FloatComplexNDArray
-max (const FloatComplexNDArray& a, const FloatComplexNDArray& b)
-{
-  return do_mm_binary_op<FloatComplexNDArray> (a, b, mx_inline_xmax, "max");
-}
+MINMAX_FCNS (FloatComplexNDArray, FloatComplex)
 
 NDS_CMP_OPS (FloatComplexNDArray, FloatComplex)
 NDS_BOOL_OPS (FloatComplexNDArray, FloatComplex)
 
 SND_CMP_OPS (FloatComplex, FloatComplexNDArray)
 SND_BOOL_OPS (FloatComplex, FloatComplexNDArray)
 
 NDND_CMP_OPS (FloatComplexNDArray, FloatComplexNDArray)
diff --git a/liboctave/fCNDArray.h b/liboctave/fCNDArray.h
--- a/liboctave/fCNDArray.h
+++ b/liboctave/fCNDArray.h
@@ -151,23 +151,17 @@ public:
 private:
 
   FloatComplexNDArray (FloatComplex *d, const dim_vector& dv)
     : MArrayN<FloatComplex> (d, dv) { }
 };
 
 extern OCTAVE_API FloatComplexNDArray conj (const FloatComplexNDArray& a);
 
-extern OCTAVE_API FloatComplexNDArray min (const FloatComplex& c, const FloatComplexNDArray& m);
-extern OCTAVE_API FloatComplexNDArray min (const FloatComplexNDArray& m, const FloatComplex& c);
-extern OCTAVE_API FloatComplexNDArray min (const FloatComplexNDArray& a, const FloatComplexNDArray& b);
-
-extern OCTAVE_API FloatComplexNDArray max (const FloatComplex& c, const FloatComplexNDArray& m);
-extern OCTAVE_API FloatComplexNDArray max (const FloatComplexNDArray& m, const FloatComplex& c);
-extern OCTAVE_API FloatComplexNDArray max (const FloatComplexNDArray& a, const FloatComplexNDArray& b);
+MINMAX_DECLS (FloatComplexNDArray, FloatComplex, OCTAVE_API)
 
 NDS_CMP_OP_DECLS (FloatComplexNDArray, FloatComplex, OCTAVE_API)
 NDS_BOOL_OP_DECLS (FloatComplexNDArray, FloatComplex, OCTAVE_API)
 
 SND_CMP_OP_DECLS (FloatComplex, FloatComplexNDArray, OCTAVE_API)
 SND_BOOL_OP_DECLS (FloatComplex, FloatComplexNDArray, OCTAVE_API)
 
 NDND_CMP_OP_DECLS (FloatComplexNDArray, FloatComplexNDArray, OCTAVE_API)
diff --git a/liboctave/fNDArray.cc b/liboctave/fNDArray.cc
--- a/liboctave/fNDArray.cc
+++ b/liboctave/fNDArray.cc
@@ -934,51 +934,17 @@ operator >> (std::istream& is, FloatNDAr
           }
     }
 
  done:
 
   return is;
 }
 
-FloatNDArray
-min (float s, const FloatNDArray& m)
-{
-  return do_sm_binary_op<FloatNDArray> (s, m, mx_inline_xmin);
-}
-
-FloatNDArray
-min (const FloatNDArray& m, float s)
-{
-  return do_ms_binary_op<FloatNDArray> (m, s, mx_inline_xmin);
-}
-
-FloatNDArray
-min (const FloatNDArray& a, const FloatNDArray& b)
-{
-  return do_mm_binary_op<FloatNDArray> (a, b, mx_inline_xmin, "min");
-}
-
-FloatNDArray
-max (float s, const FloatNDArray& m)
-{
-  return do_sm_binary_op<FloatNDArray> (s, m, mx_inline_xmax);
-}
-
-FloatNDArray
-max (const FloatNDArray& m, float s)
-{
-  return do_ms_binary_op<FloatNDArray> (m, s, mx_inline_xmax);
-}
-
-FloatNDArray
-max (const FloatNDArray& a, const FloatNDArray& b)
-{
-  return do_mm_binary_op<FloatNDArray> (a, b, mx_inline_xmax, "max");
-}
+MINMAX_FCNS (FloatNDArray, float)
 
 NDS_CMP_OPS (FloatNDArray, float)
 NDS_BOOL_OPS (FloatNDArray, float)
 
 SND_CMP_OPS (float, FloatNDArray)
 SND_BOOL_OPS (float, FloatNDArray)
 
 NDND_CMP_OPS (FloatNDArray, FloatNDArray)
diff --git a/liboctave/fNDArray.h b/liboctave/fNDArray.h
--- a/liboctave/fNDArray.h
+++ b/liboctave/fNDArray.h
@@ -162,23 +162,17 @@ private:
   FloatNDArray (float *d, const dim_vector& dv) : MArrayN<float> (d, dv) { }
 };
 
 // Publish externally used friend functions.
 
 extern OCTAVE_API FloatNDArray real (const FloatComplexNDArray& a);
 extern OCTAVE_API FloatNDArray imag (const FloatComplexNDArray& a);
 
-extern OCTAVE_API FloatNDArray min (float d, const FloatNDArray& m);
-extern OCTAVE_API FloatNDArray min (const FloatNDArray& m, float d);
-extern OCTAVE_API FloatNDArray min (const FloatNDArray& a, const FloatNDArray& b);
-
-extern OCTAVE_API FloatNDArray max (float d, const FloatNDArray& m);
-extern OCTAVE_API FloatNDArray max (const FloatNDArray& m, float d);
-extern OCTAVE_API FloatNDArray max (const FloatNDArray& a, const FloatNDArray& b);
+MINMAX_DECLS (FloatNDArray, float, OCTAVE_API)
 
 NDS_CMP_OP_DECLS (FloatNDArray, float, OCTAVE_API)
 NDS_BOOL_OP_DECLS (FloatNDArray, float, OCTAVE_API)
 
 SND_CMP_OP_DECLS (float, FloatNDArray, OCTAVE_API)
 SND_BOOL_OP_DECLS (float, FloatNDArray, OCTAVE_API)
 
 NDND_CMP_OP_DECLS (FloatNDArray, FloatNDArray, OCTAVE_API)
diff --git a/liboctave/int16NDArray.cc b/liboctave/int16NDArray.cc
--- a/liboctave/int16NDArray.cc
+++ b/liboctave/int16NDArray.cc
@@ -45,12 +45,12 @@ NDS_CMP_OPS (int16NDArray, octave_int16)
 NDS_BOOL_OPS (int16NDArray, octave_int16)
 
 SND_CMP_OPS (octave_int16, int16NDArray)
 SND_BOOL_OPS (octave_int16, int16NDArray)
 
 NDND_CMP_OPS (int16NDArray, int16NDArray)
 NDND_BOOL_OPS (int16NDArray, int16NDArray)
 
-MINMAX_FCNS (int16)
+MINMAX_FCNS (int16NDArray, octave_int16)
 
 BSXFUN_STDOP_DEFS_MXLOOP (int16NDArray)
 BSXFUN_STDREL_DEFS_MXLOOP (int16NDArray)
diff --git a/liboctave/int16NDArray.h b/liboctave/int16NDArray.h
--- a/liboctave/int16NDArray.h
+++ b/liboctave/int16NDArray.h
@@ -36,14 +36,14 @@ NDS_BOOL_OP_DECLS (int16NDArray, octave_
 SND_CMP_OP_DECLS (octave_int16, int16NDArray, OCTAVE_API)
 SND_BOOL_OP_DECLS (octave_int16, int16NDArray, OCTAVE_API)
 
 NDND_CMP_OP_DECLS (int16NDArray, int16NDArray, OCTAVE_API)
 NDND_BOOL_OP_DECLS (int16NDArray, int16NDArray, OCTAVE_API)
 
 MARRAY_FORWARD_DEFS (MArrayN, int16NDArray, octave_int16)
 
-MINMAX_DECLS (int16)
+MINMAX_DECLS (int16NDArray, octave_int16, OCTAVE_API)
 
 BSXFUN_STDOP_DECLS (int16NDArray, OCTAVE_API)
 BSXFUN_STDREL_DECLS (int16NDArray, OCTAVE_API)
 
 #endif
diff --git a/liboctave/int32NDArray.cc b/liboctave/int32NDArray.cc
--- a/liboctave/int32NDArray.cc
+++ b/liboctave/int32NDArray.cc
@@ -45,12 +45,12 @@ NDS_CMP_OPS (int32NDArray, octave_int32)
 NDS_BOOL_OPS (int32NDArray, octave_int32)
 
 SND_CMP_OPS (octave_int32, int32NDArray)
 SND_BOOL_OPS (octave_int32, int32NDArray)
 
 NDND_CMP_OPS (int32NDArray, int32NDArray)
 NDND_BOOL_OPS (int32NDArray, int32NDArray)
 
-MINMAX_FCNS (int32)
+MINMAX_FCNS (int32NDArray, octave_int32)
 
 BSXFUN_STDOP_DEFS_MXLOOP (int32NDArray)
 BSXFUN_STDREL_DEFS_MXLOOP (int32NDArray)
diff --git a/liboctave/int32NDArray.h b/liboctave/int32NDArray.h
--- a/liboctave/int32NDArray.h
+++ b/liboctave/int32NDArray.h
@@ -36,14 +36,14 @@ NDS_BOOL_OP_DECLS (int32NDArray, octave_
 SND_CMP_OP_DECLS (octave_int32, int32NDArray, OCTAVE_API)
 SND_BOOL_OP_DECLS (octave_int32, int32NDArray, OCTAVE_API)
 
 NDND_CMP_OP_DECLS (int32NDArray, int32NDArray, OCTAVE_API)
 NDND_BOOL_OP_DECLS (int32NDArray, int32NDArray, OCTAVE_API)
 
 MARRAY_FORWARD_DEFS (MArrayN, int32NDArray, octave_int32)
 
-MINMAX_DECLS (int32)
+MINMAX_DECLS (int32NDArray, octave_int32, OCTAVE_API)
 
 BSXFUN_STDOP_DECLS (int32NDArray, OCTAVE_API)
 BSXFUN_STDREL_DECLS (int32NDArray, OCTAVE_API)
 
 #endif
diff --git a/liboctave/int64NDArray.cc b/liboctave/int64NDArray.cc
--- a/liboctave/int64NDArray.cc
+++ b/liboctave/int64NDArray.cc
@@ -45,12 +45,12 @@ NDS_CMP_OPS (int64NDArray, octave_int64)
 NDS_BOOL_OPS (int64NDArray, octave_int64)
 
 SND_CMP_OPS (octave_int64, int64NDArray)
 SND_BOOL_OPS (octave_int64, int64NDArray)
 
 NDND_CMP_OPS (int64NDArray, int64NDArray)
 NDND_BOOL_OPS (int64NDArray, int64NDArray)
 
-MINMAX_FCNS (int64)
+MINMAX_FCNS (int64NDArray, octave_int64)
 
 BSXFUN_STDOP_DEFS_MXLOOP (int64NDArray)
 BSXFUN_STDREL_DEFS_MXLOOP (int64NDArray)
diff --git a/liboctave/int64NDArray.h b/liboctave/int64NDArray.h
--- a/liboctave/int64NDArray.h
+++ b/liboctave/int64NDArray.h
@@ -36,14 +36,14 @@ NDS_BOOL_OP_DECLS (int64NDArray, octave_
 SND_CMP_OP_DECLS (octave_int64, int64NDArray, OCTAVE_API)
 SND_BOOL_OP_DECLS (octave_int64, int64NDArray, OCTAVE_API)
 
 NDND_CMP_OP_DECLS (int64NDArray, int64NDArray, OCTAVE_API)
 NDND_BOOL_OP_DECLS (int64NDArray, int64NDArray, OCTAVE_API)
 
 MARRAY_FORWARD_DEFS (MArrayN, int64NDArray, octave_int64)
 
-MINMAX_DECLS (int64)
+MINMAX_DECLS (int64NDArray, octave_int64, OCTAVE_API)
 
 BSXFUN_STDOP_DECLS (int64NDArray, OCTAVE_API)
 BSXFUN_STDREL_DECLS (int64NDArray, OCTAVE_API)
 
 #endif
diff --git a/liboctave/int8NDArray.cc b/liboctave/int8NDArray.cc
--- a/liboctave/int8NDArray.cc
+++ b/liboctave/int8NDArray.cc
@@ -45,12 +45,12 @@ NDS_CMP_OPS (int8NDArray, octave_int8)
 NDS_BOOL_OPS (int8NDArray, octave_int8)
 
 SND_CMP_OPS (octave_int8, int8NDArray)
 SND_BOOL_OPS (octave_int8, int8NDArray)
 
 NDND_CMP_OPS (int8NDArray, int8NDArray)
 NDND_BOOL_OPS (int8NDArray, int8NDArray)
 
-MINMAX_FCNS (int8)
+MINMAX_FCNS (int8NDArray, octave_int8)
 
 BSXFUN_STDOP_DEFS_MXLOOP (int8NDArray)
 BSXFUN_STDREL_DEFS_MXLOOP (int8NDArray)
diff --git a/liboctave/int8NDArray.h b/liboctave/int8NDArray.h
--- a/liboctave/int8NDArray.h
+++ b/liboctave/int8NDArray.h
@@ -36,14 +36,14 @@ NDS_BOOL_OP_DECLS (int8NDArray, octave_i
 SND_CMP_OP_DECLS (octave_int8, int8NDArray, OCTAVE_API)
 SND_BOOL_OP_DECLS (octave_int8, int8NDArray, OCTAVE_API)
 
 NDND_CMP_OP_DECLS (int8NDArray, int8NDArray, OCTAVE_API)
 NDND_BOOL_OP_DECLS (int8NDArray, int8NDArray, OCTAVE_API)
 
 MARRAY_FORWARD_DEFS (MArrayN, int8NDArray, octave_int8)
 
-MINMAX_DECLS (int8)
+MINMAX_DECLS (int8NDArray, octave_int8, OCTAVE_API)
 
 BSXFUN_STDOP_DECLS (int8NDArray, OCTAVE_API)
 BSXFUN_STDREL_DECLS (int8NDArray, OCTAVE_API)
 
 #endif
diff --git a/liboctave/mx-op-decl.h b/liboctave/mx-op-decl.h
--- a/liboctave/mx-op-decl.h
+++ b/liboctave/mx-op-decl.h
@@ -278,25 +278,23 @@ class boolNDArray;
   BIN_OP_DECL (R, operator -, DM1, DM2, API); \
   BIN_OP_DECL (R, product, DM1, DM2, API);
 
 #define DMDM_OP_DECLS(R, DM1, DM2, API) \
   DMDM_BIN_OP_DECLS (R, DM1, DM2, API)
 
 // scalar by N-d array min/max ops
 
-#define MINMAX_DECLS(T) \
-  extern OCTAVE_API T ## NDArray min (octave_ ## T d, const T ## NDArray& m); \
-  extern OCTAVE_API T ## NDArray min (const T ## NDArray& m, octave_ ## T d); \
-  extern OCTAVE_API T ## NDArray min (const T ## NDArray& a,  \
-                                       const T ## NDArray& b); \
-  extern OCTAVE_API T ## NDArray max (octave_ ## T d, const T ## NDArray& m); \
-  extern OCTAVE_API T ## NDArray max (const T ## NDArray& m, octave_ ## T d); \
-  extern OCTAVE_API T ## NDArray max (const T ## NDArray& a, \
-                                       const T ## NDArray& b);
+#define MINMAX_DECLS(T, S, API) \
+  extern API T min (S d, const T& m); \
+  extern API T min (const T& m, S d); \
+  extern API T min (const T& a, const T& b); \
+  extern API T max (S d, const T& m); \
+  extern API T max (const T& m, S d); \
+  extern API T max (const T& a, const T& b);
 
 // permutation matrix by matrix ops and vice versa
 
 #define PMM_BIN_OP_DECLS(R, PM, M, API) \
   BIN_OP_DECL (R, operator *, PM, M, API);
 
 #define MPM_BIN_OP_DECLS(R, M, PM, API) \
   BIN_OP_DECL (R, operator *, M, PM, API);
diff --git a/liboctave/mx-op-defs.h b/liboctave/mx-op-defs.h
--- a/liboctave/mx-op-defs.h
+++ b/liboctave/mx-op-defs.h
@@ -541,44 +541,44 @@ operator * (const DM& dm, const M& m) \
 
 #define DMDM_BIN_OPS(R, DM1, DM2) \
   DMDM_BIN_OP (R, operator +, DM1, DM2, mx_inline_add) \
   DMDM_BIN_OP (R, operator -, DM1, DM2, mx_inline_sub) \
   DMDM_BIN_OP (R, product,    DM1, DM2, mx_inline_mul)
 
 // scalar by N-d array min/max ops
 
-#define SND_MINMAX_FCN(FCN, OP, T) \
-T ## NDArray \
-FCN (octave_ ## T d, const T ## NDArray& m) \
+#define SND_MINMAX_FCN(FCN, OP, T, S) \
+T \
+FCN (S d, const T& m) \
 { \
-  return do_sm_binary_op<T##NDArray, octave_##T, T##NDArray> (d, m, mx_inline_x##FCN); \
+  return do_sm_binary_op<T, S, T> (d, m, mx_inline_x##FCN); \
 }
 
-#define NDS_MINMAX_FCN(FCN, OP, T) \
-T ## NDArray \
-FCN (const T ## NDArray& m, octave_ ## T d) \
+#define NDS_MINMAX_FCN(FCN, OP, T, S) \
+T \
+FCN (const T& m, S d) \
 { \
-  return do_ms_binary_op<T##NDArray, T##NDArray, octave_##T> (m, d, mx_inline_x##FCN); \
+  return do_ms_binary_op<T, T, S> (m, d, mx_inline_x##FCN); \
 }
 
-#define NDND_MINMAX_FCN(FCN, OP, T) \
-T ## NDArray \
-FCN (const T ## NDArray& a, const T ## NDArray& b) \
+#define NDND_MINMAX_FCN(FCN, OP, T, S) \
+T \
+FCN (const T& a, const T& b) \
 { \
-  return do_mm_binary_op<T##NDArray, T##NDArray, T##NDArray> (a, b, mx_inline_x##FCN, #FCN); \
+  return do_mm_binary_op<T, T, T> (a, b, mx_inline_x##FCN, #FCN); \
 }
 
-#define MINMAX_FCNS(T) \
-  SND_MINMAX_FCN (min, <, T) \
-  NDS_MINMAX_FCN (min, <, T) \
-  NDND_MINMAX_FCN (min, <, T) \
-  SND_MINMAX_FCN (max, >, T) \
-  NDS_MINMAX_FCN (max, >, T) \
-  NDND_MINMAX_FCN (max, >, T)
+#define MINMAX_FCNS(T, S) \
+  SND_MINMAX_FCN (min, <, T, S) \
+  NDS_MINMAX_FCN (min, <, T, S) \
+  NDND_MINMAX_FCN (min, <, T, S) \
+  SND_MINMAX_FCN (max, >, T, S) \
+  NDS_MINMAX_FCN (max, >, T, S) \
+  NDND_MINMAX_FCN (max, >, T, S)
 
 // permutation matrix by matrix ops and vice versa
 
 #define PMM_MULTIPLY_OP(PM, M) \
 M operator * (const PM& p, const M& x) \
 { \
   octave_idx_type nr = x.rows (), nc = x.columns (); \
   M result; \
diff --git a/liboctave/uint16NDArray.cc b/liboctave/uint16NDArray.cc
--- a/liboctave/uint16NDArray.cc
+++ b/liboctave/uint16NDArray.cc
@@ -45,12 +45,12 @@ NDS_CMP_OPS (uint16NDArray, octave_uint1
 NDS_BOOL_OPS (uint16NDArray, octave_uint16)
 
 SND_CMP_OPS (octave_uint16, uint16NDArray)
 SND_BOOL_OPS (octave_uint16, uint16NDArray)
 
 NDND_CMP_OPS (uint16NDArray, uint16NDArray)
 NDND_BOOL_OPS (uint16NDArray, uint16NDArray)
 
-MINMAX_FCNS (uint16)
+MINMAX_FCNS (uint16NDArray, octave_uint16)
 
 BSXFUN_STDOP_DEFS_MXLOOP (uint16NDArray)
 BSXFUN_STDREL_DEFS_MXLOOP (uint16NDArray)
diff --git a/liboctave/uint16NDArray.h b/liboctave/uint16NDArray.h
--- a/liboctave/uint16NDArray.h
+++ b/liboctave/uint16NDArray.h
@@ -36,14 +36,14 @@ NDS_BOOL_OP_DECLS (uint16NDArray, octave
 SND_CMP_OP_DECLS (octave_uint16, uint16NDArray, OCTAVE_API)
 SND_BOOL_OP_DECLS (octave_uint16, uint16NDArray, OCTAVE_API)
 
 NDND_CMP_OP_DECLS (uint16NDArray, uint16NDArray, OCTAVE_API)
 NDND_BOOL_OP_DECLS (uint16NDArray, uint16NDArray, OCTAVE_API)
 
 MARRAY_FORWARD_DEFS (MArrayN, uint16NDArray, octave_uint16)
 
-MINMAX_DECLS (uint16)
+MINMAX_DECLS (uint16NDArray, octave_uint16, OCTAVE_API)
 
 BSXFUN_STDOP_DECLS (uint16NDArray, OCTAVE_API)
 BSXFUN_STDREL_DECLS (uint16NDArray, OCTAVE_API)
 
 #endif
diff --git a/liboctave/uint32NDArray.cc b/liboctave/uint32NDArray.cc
--- a/liboctave/uint32NDArray.cc
+++ b/liboctave/uint32NDArray.cc
@@ -45,12 +45,12 @@ NDS_CMP_OPS (uint32NDArray, octave_uint3
 NDS_BOOL_OPS (uint32NDArray, octave_uint32)
 
 SND_CMP_OPS (octave_uint32, uint32NDArray)
 SND_BOOL_OPS (octave_uint32, uint32NDArray)
 
 NDND_CMP_OPS (uint32NDArray, uint32NDArray)
 NDND_BOOL_OPS (uint32NDArray, uint32NDArray)
 
-MINMAX_FCNS (uint32)
+MINMAX_FCNS (uint32NDArray, octave_uint32)
 
 BSXFUN_STDOP_DEFS_MXLOOP (uint32NDArray)
 BSXFUN_STDREL_DEFS_MXLOOP (uint32NDArray)
diff --git a/liboctave/uint32NDArray.h b/liboctave/uint32NDArray.h
--- a/liboctave/uint32NDArray.h
+++ b/liboctave/uint32NDArray.h
@@ -36,14 +36,14 @@ NDS_BOOL_OP_DECLS (uint32NDArray, octave
 SND_CMP_OP_DECLS (octave_uint32, uint32NDArray, OCTAVE_API)
 SND_BOOL_OP_DECLS (octave_uint32, uint32NDArray, OCTAVE_API)
 
 NDND_CMP_OP_DECLS (uint32NDArray, uint32NDArray, OCTAVE_API)
 NDND_BOOL_OP_DECLS (uint32NDArray, uint32NDArray, OCTAVE_API)
 
 MARRAY_FORWARD_DEFS (MArrayN, uint32NDArray, octave_uint32)
 
-MINMAX_DECLS (uint32)
+MINMAX_DECLS (uint32NDArray, octave_uint32, OCTAVE_API)
 
 BSXFUN_STDOP_DECLS (uint32NDArray, OCTAVE_API)
 BSXFUN_STDREL_DECLS (uint32NDArray, OCTAVE_API)
 
 #endif
diff --git a/liboctave/uint64NDArray.cc b/liboctave/uint64NDArray.cc
--- a/liboctave/uint64NDArray.cc
+++ b/liboctave/uint64NDArray.cc
@@ -45,12 +45,12 @@ NDS_CMP_OPS (uint64NDArray, octave_uint6
 NDS_BOOL_OPS (uint64NDArray, octave_uint64)
 
 SND_CMP_OPS (octave_uint64, uint64NDArray)
 SND_BOOL_OPS (octave_uint64, uint64NDArray)
 
 NDND_CMP_OPS (uint64NDArray, uint64NDArray)
 NDND_BOOL_OPS (uint64NDArray, uint64NDArray)
 
-MINMAX_FCNS (uint64)
+MINMAX_FCNS (uint64NDArray, octave_uint64)
 
 BSXFUN_STDOP_DEFS_MXLOOP (uint64NDArray)
 BSXFUN_STDREL_DEFS_MXLOOP (uint64NDArray)
diff --git a/liboctave/uint64NDArray.h b/liboctave/uint64NDArray.h
--- a/liboctave/uint64NDArray.h
+++ b/liboctave/uint64NDArray.h
@@ -36,14 +36,14 @@ NDS_BOOL_OP_DECLS (uint64NDArray, octave
 SND_CMP_OP_DECLS (octave_uint64, uint64NDArray, OCTAVE_API)
 SND_BOOL_OP_DECLS (octave_uint64, uint64NDArray, OCTAVE_API)
 
 NDND_CMP_OP_DECLS (uint64NDArray, uint64NDArray, OCTAVE_API)
 NDND_BOOL_OP_DECLS (uint64NDArray, uint64NDArray, OCTAVE_API)
 
 MARRAY_FORWARD_DEFS (MArrayN, uint64NDArray, octave_uint64)
 
-MINMAX_DECLS (uint64)
+MINMAX_DECLS (uint64NDArray, octave_uint64, OCTAVE_API)
 
 BSXFUN_STDOP_DECLS (uint64NDArray, OCTAVE_API)
 BSXFUN_STDREL_DECLS (uint64NDArray, OCTAVE_API)
 
 #endif
diff --git a/liboctave/uint8NDArray.cc b/liboctave/uint8NDArray.cc
--- a/liboctave/uint8NDArray.cc
+++ b/liboctave/uint8NDArray.cc
@@ -45,12 +45,12 @@ NDS_CMP_OPS (uint8NDArray, octave_uint8)
 NDS_BOOL_OPS (uint8NDArray, octave_uint8)
 
 SND_CMP_OPS (octave_uint8, uint8NDArray)
 SND_BOOL_OPS (octave_uint8, uint8NDArray)
 
 NDND_CMP_OPS (uint8NDArray, uint8NDArray)
 NDND_BOOL_OPS (uint8NDArray, uint8NDArray)
 
-MINMAX_FCNS (uint8)
+MINMAX_FCNS (uint8NDArray, octave_uint8)
 
 BSXFUN_STDOP_DEFS_MXLOOP (uint8NDArray)
 BSXFUN_STDREL_DEFS_MXLOOP (uint8NDArray)
diff --git a/liboctave/uint8NDArray.h b/liboctave/uint8NDArray.h
--- a/liboctave/uint8NDArray.h
+++ b/liboctave/uint8NDArray.h
@@ -36,14 +36,14 @@ NDS_BOOL_OP_DECLS (uint8NDArray, octave_
 SND_CMP_OP_DECLS (octave_uint8, uint8NDArray, OCTAVE_API)
 SND_BOOL_OP_DECLS (octave_uint8, uint8NDArray, OCTAVE_API)
 
 NDND_CMP_OP_DECLS (uint8NDArray, uint8NDArray, OCTAVE_API)
 NDND_BOOL_OP_DECLS (uint8NDArray, uint8NDArray, OCTAVE_API)
 
 MARRAY_FORWARD_DEFS (MArrayN, uint8NDArray, octave_uint8)
 
-MINMAX_DECLS (uint8)
+MINMAX_DECLS (uint8NDArray, octave_uint8, OCTAVE_API)
 
 BSXFUN_STDOP_DECLS (uint8NDArray, OCTAVE_API)
 BSXFUN_STDREL_DECLS (uint8NDArray, OCTAVE_API)
 
 #endif
