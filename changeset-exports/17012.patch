# HG changeset patch
# User Ben Abbott  <bpabbott@mac.com>
# Date 1374200255 14400
#      Thu Jul 18 22:17:35 2013 -0400
# Node ID 942d892524b35171d38353c207ef72446459065a
# Parent  350cad34b0f8b551b0ff3c9fd21c125fc8aabf74
Handle alignment of subplots in subplot.m.

script/plot/subplot.m: Introduce listener (subplot_align) to manage alignment
of subplots by synchronizing looseinset and tightinset across all subplots.
"activepositionproperty". This obsoletes using autopos_tag property.
Modify demo and add new demo.

diff --git a/scripts/plot/subplot.m b/scripts/plot/subplot.m
--- a/scripts/plot/subplot.m
+++ b/scripts/plot/subplot.m
@@ -169,22 +169,25 @@ function h = subplot (varargin)
     ##        which will set "activepositionproperty" to "position".
     ##        Î¤his can yield to text overlap between labels and titles
     ##        see bug #31610
     if (strcmp (get (cf, "__graphics_toolkit__"), "gnuplot"))
       align_axes = true;
     endif
 
     if (! have_position)
+      pos = subplot_position (rows, cols, index, "position");
+      outerpos = subplot_position (rows, cols, index, "outerposition");
+      box = [pos(1:2), pos(1:2)+pos(3:4)];
+      outerbox = [outerpos(1:2), outerpos(1:2)+outerpos(3:4)];
+      looseinset = [box(1:2)-outerbox(1:2), outerbox(3:4)-box(3:4)];
       if (align_axes)
-        pos = subplot_position (rows, cols, index, "position");
-      elseif (strcmp (get (cf, "__graphics_toolkit__"), "gnuplot"))
-        pos = subplot_position (rows, cols, index, "outerpositiontight");
+        activepositionproperty = "position";
       else
-        pos = subplot_position (rows, cols, index, "outerposition");
+        activepositionproperty = "outerposition";
       endif
     endif
 
     set (cf, "nextplot", "add");
 
     found = false;
     kids = get (cf, "children");
     for child = reshape (kids, 1, numel (kids))
@@ -205,17 +208,17 @@ function h = subplot (varargin)
           objpos = get (child, "position");
         else
           objpos = get (child, "outerposition");
         endif
         if (all (abs (objpos - pos) < eps) && ! replace_axes)
           ## If the new axes are in exactly the same position as an
           ## existing axes object, use the existing axes.
           found = true;
-          tmp = child;
+          hsubplot = child;
         else
           ## If the new axes overlap an old axes object, delete the old
           ## axes.
           x0 = pos(1);
           x1 = x0 + pos(3);
           y0 = pos(2);
           y1 = y0 + pos(4);
           objx0 = objpos(1);
@@ -226,32 +229,37 @@ function h = subplot (varargin)
             delete (child);
           endif
         endif
       endif
     endfor
 
     if (found)
       set (cf, "currentaxes", tmp);
-    elseif (align_axes)
-      tmp = axes ("box", "off", "position", pos, varargin{:});
-    elseif (strcmp (get (cf, "__graphics_toolkit__"), "gnuplot"))
-      tmp = axes ("box", "off", "outerposition", pos, varargin{:});
     else
-      tmp = axes ("looseinset", [0 0 0 0], "box", "off", "outerposition", pos,
-                  "autopos_tag", "subplot", varargin{:});
+      hsubplot = axes ("box", "off",
+                       "position", pos,
+                       "looseinset", looseinset,
+                       "activepositionproperty", activepositionproperty,
+                       varargin{:});
+      addproperty ("subplot_align", hsubplot, "boolean", true);
+      addlistener (hsubplot, "position", @subplot_align);
+      if (! align_axes)
+        set (hsubplot, "subplot_align", false)
+        subplot_align (hsubplot)
+      endif
     endif
 
   unwind_protect_cleanup
     set (0, "defaultaxesunits", axesunits);
     set (cf, "units", figureunits);
   end_unwind_protect
 
   if (nargout > 0)
-    h = tmp;
+    h = hsubplot;
   endif
 
 endfunction
 
 function pos = subplot_position (rows, cols, index, position_property)
 
   if (rows == 1 && cols == 1)
     ## Trivial result for subplot (1,1,1)
@@ -322,16 +330,40 @@ function pos = subplot_position (rows, c
     pos = [x0, y0, x1-x0, y1-y0];
   else
     ## subplot (row, col, num)
     pos = [x0, y0, width, height];
   endif
 
 endfunction
 
+function subplot_align (h, varargin)
+  persistent updating = false
+  if (! updating)
+    unwind_protect
+      updating = true;
+      hfig = ancestor (h, "figure");
+      hsubplots = findall (hfig, 'type', 'axes', 'subplot_align', 'off');
+      if (! isempty (hsubplots))
+        tightinset = get (hsubplots, 'tightinset');
+        if (iscell (tightinset))
+          tightinset = max (cell2mat (tightinset));
+        endif
+        looseinset = get (hsubplots, 'looseinset');
+        if (iscell (looseinset))
+          looseinset = max (cell2mat (looseinset));
+        endif
+        looseinset = max (tightinset, looseinset);
+        set (hsubplots, 'looseinset', looseinset);
+      endif
+    unwind_protect_cleanup
+      updating = false;
+    end_unwind_protect
+  endif
+endfunction
 
 %!demo
 %! clf;
 %! r = 3;
 %! c = 3;
 %! fmt = {'horizontalalignment', 'center', 'verticalalignment', 'middle'};
 %! for n = 1 : r*c
 %!   subplot (r, c, n);
@@ -360,27 +392,66 @@ endfunction
 %! end
 %! subplot (1,2,1, 'align');
 %! plot (x, x);
 %! xlabel ('xlabel (1,2,1)');
 %! ylabel ('ylabel (1,2,1)');
 %! title ('title (1,2,1)');
 
 %!demo
+%! clf;
 %! x = 0:10;
-%! subplot (221);
+%! ax(1) = subplot (221);
+%! set (ax(1), 'tag', '1');
+%! plot (x, rand (3, 11))
+%! title ('x & y labels & ticklabels');
+%! xlabel xlabel
+%! ylabel ylabel
+%! ax(2) = subplot (222);
+%! set (ax(2), 'tag', '2');
+%! plot (x, rand (3, 11))
+%! title ('no labels');
+%! axis ('nolabel','tic')
+%! ax(3) = subplot (223);
+%! set (ax(3), 'tag', '3');
+%! plot (x, rand (3, 11))
+%! title ('no labels');
+%! axis ('nolabel','tic')
+%! ax(4) = subplot (224);
+%! set (ax(4), 'tag', '4');
 %! plot (x, rand (3, 11))
 %! title ('x & y labels & ticklabels');
 %! xlabel xlabel
 %! ylabel ylabel
+
+%!demo
+%! x = 0:10;
+%! subplot (221);
+%! plot (x, rand (3, 11))
+%! ylim ([0, 1]);
+%! text (0.5, 0.5, '{x,y}labels & {x,y}ticklabels', ...
+%!       'horizontalalignment', 'center', ...
+%!       'units', 'normalized');
+%! xlabel xlabel
+%! ylabel ylabel
+%! title title
 %! subplot (222);
 %! plot (x, rand (3, 11))
-%! title ('no labels');
-%! axis ('nolabel','tic');
+%! axis ('labely');
+%! ylabel ylabel
+%! text (0.5, 0.5, 'no xlabels, xticklabels', ...
+%!       'horizontalalignment', 'center', ...
+%!       'units', 'normalized');
 %! subplot (223);
 %! plot (x, rand (3, 11))
-%! title ('no labels');
-%! axis ('nolabel','tic');
+%! axis ('labelx');
+%! text (0.5, 0.5, 'no ylabels, yticklabels', ...
+%!       'horizontalalignment', 'center', ...
+%!       'units', 'normalized');
+%! xlabel xlabel
+%! title title
 %! subplot (224);
 %! plot (x, rand (3, 11))
-%! title ('x & y labels & ticklabels');
-%! xlabel xlabel
-%! ylabel ylabel
+%! axis ('nolabel','tic');
+%! text (0.5, 0.5, 'no {x,y}labels, {x,y}ticklabels', ...
+%!       'horizontalalignment', 'center', ...
+%!       'units', 'normalized');
+
