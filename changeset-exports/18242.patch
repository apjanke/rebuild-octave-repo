# HG changeset patch
# User John Donoghue <john.donoghue@ieee.org>
# Date 1389110229 18000
#      Tue Jan 07 10:57:09 2014 -0500
# Branch stable
# Node ID 450f50d3eb18040376ac8f8d5b33e990f92e0173
# Parent  f26d527c1a71c8a24bc4b2b9523a96858d1196a6
GUI: Use WriteConsoleInput for sending terminal newline (Bug #41123)

* libgui/qterminal/libqterminal/win32/QWinTerminalImpl.cpp
  (QConsolePrivate::sendConsoleText): Use WriteConsoleInput instead of SendMessage to send newline to console.

diff --git a/libgui/qterminal/libqterminal/win32/QWinTerminalImpl.cpp b/libgui/qterminal/libqterminal/win32/QWinTerminalImpl.cpp
--- a/libgui/qterminal/libqterminal/win32/QWinTerminalImpl.cpp
+++ b/libgui/qterminal/libqterminal/win32/QWinTerminalImpl.cpp
@@ -1179,24 +1179,32 @@ void QConsolePrivate::sendConsoleText (c
   for (int i = 0; i < len; i++)
     {
       QChar c = s.at (i);
 
       if (c == L'\r' || c == L'\n')
         {
           if (c == L'\r' && i < (len - 1) && s.at (i+1) == L'\n')
             i++;
-          if (nEvents)
-            {
-              WriteConsoleInput (hStdIn, events, nEvents, &written);
-              nEvents = 0;
-              ZeroMemory (events, sizeof (events));
-            }
-          PostMessage (m_consoleWindow, WM_KEYDOWN, VK_RETURN, 0x001C0001);
-          PostMessage (m_consoleWindow, WM_KEYDOWN, VK_RETURN, 0xC01C0001);
+
+          // add new line
+          events[nEvents].EventType                        = KEY_EVENT;
+          events[nEvents].Event.KeyEvent.bKeyDown          = TRUE;
+          events[nEvents].Event.KeyEvent.wRepeatCount      = 1;
+          events[nEvents].Event.KeyEvent.wVirtualKeyCode   =
+            VK_RETURN;
+          events[nEvents].Event.KeyEvent.wVirtualScanCode  = 0;
+          events[nEvents].Event.KeyEvent.uChar.UnicodeChar = c.unicode ();
+          events[nEvents].Event.KeyEvent.dwControlKeyState = 0;
+          nEvents++;
+ 
+          WriteConsoleInput (hStdIn, events, nEvents, &written);
+          nEvents = 0;
+          ZeroMemory (events, sizeof (events));
+ 
         }
       else
         {
           events[nEvents].EventType                        = KEY_EVENT;
           events[nEvents].Event.KeyEvent.bKeyDown          = TRUE;
           events[nEvents].Event.KeyEvent.wRepeatCount      = 1;
           events[nEvents].Event.KeyEvent.wVirtualKeyCode   =
             LOBYTE (VkKeyScan (c.unicode ()));
