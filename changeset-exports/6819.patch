# HG changeset patch
# User dbateman
# Date 1187772814 0
#      Wed Aug 22 08:53:34 2007 +0000
# Node ID 3350e816e2a4d6cbecebd7098426721adcec8362
# Parent  9483da8d87e5a7b4e018b690f5389d9f20d6d0f2
[project @ 2007-08-22 08:53:34 by dbateman]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2007-08-22  David Bateman  <dbateman@free.fr>
+
+	* variables.cc (Fmunlock): Call munlock and not mlock.
+	* symtab.cc (symbol_record::mark_as_formal_parameter): Typo. 
+
 2007-08-10  John W. Eaton  <jwe@octave.org>
 
 	* pt-idx.cc (tree_index_expression::get_struct_index): Improve
 	error message.
 	* ov-struct.cc (Fstruct, Fcell2struct): Trap invalid field names here.
 
 2007-08-10  Peter A. Gustafson  <petegus@umich.edu>
 
diff --git a/src/symtab.cc b/src/symtab.cc
--- a/src/symtab.cc
+++ b/src/symtab.cc
@@ -285,17 +285,17 @@ symbol_record::alias (symbol_record *s, 
 
 void
 symbol_record::mark_as_formal_parameter (void)
 {
   if (is_linked_to_global ())
     error ("can't mark global variable `%s' as function parameter",
 	   nm.c_str ());
   else if (is_static ())
-    error ("can't mark static variable `%s' as function paraemter",
+    error ("can't mark static variable `%s' as function parameter",
 	   nm.c_str ());
   else
     formal_param = 1;
 }
 
 void
 symbol_record::mark_as_automatic_variable (void)
 {
diff --git a/src/variables.cc b/src/variables.cc
--- a/src/variables.cc
+++ b/src/variables.cc
@@ -1991,17 +1991,17 @@ then unlock the current function.\n\
       else
 	error ("munlock: expecting argument to be a function name");
     }
   else if (args.length () == 0)
     {
       octave_user_function *fcn = octave_call_stack::caller_user_function ();
 
       if (fcn)
-        mlock (fcn->name ());
+        munlock (fcn->name ());
       else
         error ("munlock: invalid use outside a function");
     }
   else
     print_usage ();
 
   return retval;
 }
