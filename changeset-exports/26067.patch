# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1542096817 18000
#      Tue Nov 13 03:13:37 2018 -0500
# Node ID b2a96efc88eb6d777082504da1f1b10f5bd21c90
# Parent  759740b9454b08c7aa48e15478129e91a2d77a3e
fix registration of qt graphics toolkit

* __init_qt__.cc: In PKG_ADD command, use __octave_link_enabled__
instead of isguirunning to decide whether to register qt graphics
toolkit.

* main-window.cc (octave_interpreter::octave_interpreter):
Don't call built-in function to register qt graphics toolkit here.

diff --git a/libgui/graphics/__init_qt__.cc b/libgui/graphics/__init_qt__.cc
--- a/libgui/graphics/__init_qt__.cc
+++ b/libgui/graphics/__init_qt__.cc
@@ -36,17 +36,17 @@ along with Octave; see the file COPYING.
 #include "gtk-manager.h"
 #include "interpreter.h"
 #include "symtab.h"
 
 #include "Backend.h"
 #include "QtHandlesUtils.h"
 #include "__init_qt__.h"
 
-// PKG_ADD: if (__have_feature__ ("QT") && __have_feature__ ("OPENGL") && have_window_system () && isguirunning ()) register_graphics_toolkit ("qt"); endif
+// PKG_ADD: if (__have_feature__ ("QT") && __have_feature__ ("OPENGL") && have_window_system () && __octave_link_enabled__ ()) register_graphics_toolkit ("qt"); endif
 
 namespace QtHandles
 {
 
   static bool qtHandlesInitialized = false;
 
   bool
   __init__ (octave::interpreter& interp)
diff --git a/libgui/src/main-window.cc b/libgui/src/main-window.cc
--- a/libgui/src/main-window.cc
+++ b/libgui/src/main-window.cc
@@ -135,23 +135,16 @@ namespace octave
           {
             // The interpreter should be completely ready at this point so let
             // the GUI know.
 
             emit octave_ready_signal ();
 
             // Start executing commands in the command window.
 
-#if defined (HAVE_QT_GRAPHICS)
-            // The qt graphics toolkit must be registered before startup
-            // files are executed.
-
-            Fregister_graphics_toolkit (interp, ovl ("qt"));
-#endif
-
             exit_status = interp.execute ();
           }
       }
     catch (const exit_exception& ex)
       {
         exit_status = ex.exit_status ();
       }
 
