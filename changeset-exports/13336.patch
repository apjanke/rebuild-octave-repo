# HG changeset patch
# User Jacob Dawid <jacob.dawid@googlemail.com>
# Date 1302030498 -7200
#      Tue Apr 05 21:08:18 2011 +0200
# Node ID 45fa9f4247377c5262bb333eabd2c260579ae6ec
# Parent  609facb07bad8febd90cbce304ad2479e3456644
Subclassed line edit to prepare for extended functionality.

diff --git a/gui//octaveterminal.cpp b/gui//octaveterminal.cpp
--- a/gui//octaveterminal.cpp
+++ b/gui//octaveterminal.cpp
@@ -5,46 +5,41 @@
 OctaveTerminal::OctaveTerminal(QWidget *parent) :
     QMdiSubWindow(parent),
     m_client(0) {
     setWindowTitle("Octave Terminal");
 
     setWidget(new QWidget(this));
     m_mainToolBar = new QToolBar(widget());
     m_octaveOutput = new QTextBrowser(widget());
-    m_commandLine = new QLineEdit(widget());
+    m_commandLine = new TerminalCommandLine(widget());
 
     QVBoxLayout *layout = new QVBoxLayout();
     layout->addWidget(m_mainToolBar);
     layout->addWidget(m_octaveOutput);
     layout->addWidget(m_commandLine);
     widget()->setLayout(layout);
 
     QPushButton *showEnvironmentButton = new QPushButton("Show Environment (who)");
     m_mainToolBar->addWidget(showEnvironmentButton);
 
     m_octaveOutput->setFontFamily("Monospace");
     m_octaveOutput->setReadOnly(true);
 
     blockUserInput();
-    connect(m_commandLine, SIGNAL(returnPressed()), this, SLOT(sendCommand()));
+    connect(m_commandLine, SIGNAL(claimCommand(QString)), this, SLOT(sendCommand(QString)));
     connect(showEnvironmentButton, SIGNAL(clicked()), this, SLOT(showEnvironment()));
 
     m_terminalHighlighter = new TerminalHighlighter(m_octaveOutput->document());
 }
 
-void OctaveTerminal::sendCommand() {
-    QString command = m_commandLine->text();
+void OctaveTerminal::sendCommand(QString command) {
     m_octaveOutput->setFontUnderline(true);
     m_octaveOutput->append(command);
-    command.append("\n");
-
     QMetaObject::invokeMethod(m_client, "send", Q_ARG(QString, command));
-
-    m_commandLine->clear();
 }
 
 void OctaveTerminal::blockUserInput() {
     m_commandLine->setEnabled(false);
 }
 
 void OctaveTerminal::allowUserInput() {
     m_commandLine->setEnabled(true);
diff --git a/gui//octaveterminal.h b/gui//octaveterminal.h
--- a/gui//octaveterminal.h
+++ b/gui//octaveterminal.h
@@ -3,40 +3,66 @@
 
 #include <QMdiSubWindow>
 #include <QLineEdit>
 #include <QTextBrowser>
 #include <QAction>
 #include <QMenuBar>
 #include <QMenu>
 #include <QToolBar>
+#include <QKeyEvent>
 
 #include "client.h"
 #include "terminalhighlighter.h"
 
+class TerminalCommandLine : public QLineEdit {
+    Q_OBJECT
+public:
+    TerminalCommandLine(QWidget *parent = 0)
+        : QLineEdit(parent) {
+    }
+
+signals:
+    void claimCommand(QString command);
+
+protected:
+    void keyPressEvent(QKeyEvent *keyEvent) {
+        switch(keyEvent->key()) {
+            case Qt::Key_Return:
+                emit claimCommand(text() + "\n");
+                setText("");
+                break;
+
+            default:
+                QLineEdit::keyPressEvent(keyEvent);
+                break;
+        }
+    }
+};
+
 class OctaveTerminal : public QMdiSubWindow {
     Q_OBJECT
 public:
     explicit OctaveTerminal(QWidget *parent = 0);
 
 signals:
 
 public slots:
-    void sendCommand();
+    void sendCommand(QString command);
     void blockUserInput();
     void allowUserInput();
 
     void assignClient(Client* client);
     void showEnvironment();
 
 protected slots:
     void handleDataFromClient(QString data);
     void handleErrorFromClient(QString error);
 
 private:
     QToolBar *m_mainToolBar;
     QTextBrowser *m_octaveOutput;
-    QLineEdit *m_commandLine;
+    TerminalCommandLine *m_commandLine;
     Client *m_client;
     TerminalHighlighter *m_terminalHighlighter;
 };
 
 #endif // OCTAVETERMINAL_H
