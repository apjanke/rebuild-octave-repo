# HG changeset patch
# User Kai T. Ohlhus <k.ohlhus@gmail.com>
# Date 1543492455 -3600
#      Thu Nov 29 12:54:15 2018 +0100
# Node ID 216d857732eb8cee5778e2db64e46e3d1f8d7ef5
# Parent  389d86d41cbfcffd91b30487df8fb7381636f2bb
Add static compile-time checking of printf functions (bug #55046).

* build-aux/mk-octave-config-h.sh, oct-conf-post.in.h: New macro
OCTAVE_FORMAT_ATTRIBUTE.

* libinterp/corefcn/error.h: Use macro OCTAVE_FORMAT_ATTRIBUTE for printf
functions.

diff --git a/build-aux/mk-octave-config-h.sh b/build-aux/mk-octave-config-h.sh
--- a/build-aux/mk-octave-config-h.sh
+++ b/build-aux/mk-octave-config-h.sh
@@ -101,24 +101,26 @@ since all of Octave's header files alrea
 #  endif
 
 #  if defined (__GNUC__)
 #    if __GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 #      define OCTAVE_DEPRECATED(ver, msg) __attribute__ ((__deprecated__ ("[" #ver "]: " msg)))
 #    else
 #      define OCTAVE_DEPRECATED(ver, msg) __attribute__ ((__deprecated__))
 #    endif
+#    define OCTAVE_FORMAT_ATTRIBUTE(type, index, first) __attribute__ ((__format__(type, index, first)))
 #    define OCTAVE_NORETURN __attribute__ ((__noreturn__))
 #    define OCTAVE_UNUSED __attribute__ ((__unused__))
 
 #    define HAVE_OCTAVE_DEPRECATED_ATTR 1
 #    define HAVE_OCTAVE_NORETURN_ATTR 1
 #    define HAVE_OCTAVE_UNUSED_ATTR 1
 #  else
 #    define OCTAVE_DEPRECATED(ver, msg)
+#    define OCTAVE_FORMAT_ATTRIBUTE(type, index, first)
 #    define OCTAVE_NORETURN
 #    define OCTAVE_UNUSED
 
 /* #    undef HAVE_OCTAVE_DEPRECATED_ATTR */
 /* #    undef HAVE_OCTAVE_NORETURN_ATTR */
 /* #    undef HAVE_OCTAVE_UNUSED_ATTR */
 #  endif
 
diff --git a/libinterp/corefcn/error.h b/libinterp/corefcn/error.h
--- a/libinterp/corefcn/error.h
+++ b/libinterp/corefcn/error.h
@@ -45,79 +45,95 @@ extern OCTINTERP_API void reset_error_ha
 extern OCTINTERP_API int warning_enabled (const std::string& id);
 
 extern OCTINTERP_API octave::execution_exception
 make_execution_exception (const char *who);
 
 extern OCTINTERP_API void
 vmessage (const char *name, const char *fmt, va_list args);
 
+OCTAVE_FORMAT_ATTRIBUTE (__printf__, 2, 3)
 extern OCTINTERP_API void message (const char *name, const char *fmt, ...);
 
 extern OCTINTERP_API void vwarning (const char *fmt, va_list args);
+OCTAVE_FORMAT_ATTRIBUTE (__printf__, 1, 2)
 extern OCTINTERP_API void warning (const char *fmt, ...);
 
 OCTAVE_NORETURN OCTINTERP_API extern
 void verror (const char *fmt, va_list args);
 
+OCTAVE_FORMAT_ATTRIBUTE (__printf__, 1, 2)
 OCTAVE_NORETURN OCTINTERP_API extern
 void error (const char *fmt, ...);
 
 OCTAVE_NORETURN OCTINTERP_API extern
 void verror (octave::execution_exception&, const char *fmt, va_list args);
+
+OCTAVE_FORMAT_ATTRIBUTE (__printf__, 2, 3)
 OCTAVE_NORETURN OCTINTERP_API extern
 void error (octave::execution_exception&, const char *fmt, ...);
 
 OCTAVE_NORETURN OCTINTERP_API extern
 void verror_with_cfn (const char *fmt, va_list args);
+
+OCTAVE_FORMAT_ATTRIBUTE (__printf__, 1, 2)
 OCTAVE_NORETURN OCTINTERP_API extern
 void error_with_cfn (const char *fmt, ...);
 
 OCTAVE_NORETURN OCTINTERP_API extern
 void vparse_error (const char *fmt, va_list args);
+
+OCTAVE_FORMAT_ATTRIBUTE (__printf__, 1, 2)
 OCTAVE_NORETURN OCTINTERP_API extern
 void parse_error (const char *fmt, ...);
 
 extern OCTINTERP_API void
 vmessage_with_id (const char *id, const char *name,
                   const char *fmt, va_list args);
 
+OCTAVE_FORMAT_ATTRIBUTE (__printf__, 3, 4)
 extern OCTINTERP_API void
 message_with_id (const char *id, const char *name, const char *fmt, ...);
 
 OCTAVE_NORETURN OCTINTERP_API extern
 void vusage_with_id (const char *id, const char *fmt, va_list args);
 
+OCTAVE_FORMAT_ATTRIBUTE (__printf__, 2, 3)
 OCTAVE_NORETURN OCTINTERP_API extern
 void usage_with_id (const char *id, const char *fmt, ...);
 
 extern OCTINTERP_API void
 vwarning_with_id (const char *id, const char *fmt, va_list args);
 
+OCTAVE_FORMAT_ATTRIBUTE (__printf__, 2, 3)
 extern OCTINTERP_API void
 warning_with_id (const char *id, const char *fmt, ...);
 
 OCTAVE_NORETURN OCTINTERP_API extern
 void verror_with_id (const char *id, const char *fmt, va_list args);
 
+OCTAVE_FORMAT_ATTRIBUTE (__printf__, 2, 3)
 OCTAVE_NORETURN OCTINTERP_API extern
 void error_with_id (const char *id, const char *fmt, ...);
 
 OCTAVE_NORETURN OCTINTERP_API extern
 void verror_with_id_cfn (const char *id, const char *fmt, va_list args);
 
+OCTAVE_FORMAT_ATTRIBUTE (__printf__, 2, 3)
 OCTAVE_NORETURN OCTINTERP_API extern
 void error_with_id_cfn (const char *id, const char *fmt, ...);
 
 OCTAVE_NORETURN OCTINTERP_API extern
 void vparse_error_with_id (const char *id, const char *fmt, va_list args);
 
+OCTAVE_FORMAT_ATTRIBUTE (__printf__, 2, 3)
 OCTAVE_NORETURN OCTINTERP_API extern
 void parse_error_with_id (const char *id, const char *fmt, ...);
 
+OCTAVE_FORMAT_ATTRIBUTE (__printf__, 1, 2)
 OCTAVE_NORETURN OCTINTERP_API extern
 void panic (const char *fmt, ...);
 
 //! Helper function for print_usage defined in defun.cc.
 
 extern OCTINTERP_API void defun_usage_message (const std::string& msg);
 
 extern OCTINTERP_API octave_value_list
diff --git a/oct-conf-post.in.h b/oct-conf-post.in.h
--- a/oct-conf-post.in.h
+++ b/oct-conf-post.in.h
@@ -34,23 +34,27 @@ along with Octave; see the file COPYING.
    /* The following attributes are used with gcc and clang compilers.  */
 #  if __GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 #    define OCTAVE_DEPRECATED(ver, msg) __attribute__ ((__deprecated__ ("[" #ver "]: " msg)))
 #  else
 #    define OCTAVE_DEPRECATED(ver, msg) __attribute__ ((__deprecated__))
 #  endif
 #  define HAVE_OCTAVE_DEPRECATED_ATTR 1
 
+#  define OCTAVE_FORMAT_ATTRIBUTE(type, index, first) __attribute__ ((__format__(type, index, first)))
+#  define HAVE_OCTAVE_FORMAT_ATTRIBUTE_ATTR 1
+
 #  define OCTAVE_NORETURN __attribute__ ((__noreturn__))
 #  define HAVE_OCTAVE_NORETURN_ATTR 1
 
 #  define OCTAVE_UNUSED __attribute__ ((__unused__))
 #  define HAVE_OCTAVE_UNUSED_ATTR 1
 #else
 #  define OCTAVE_DEPRECATED(ver, msg)
+#  define OCTAVE_FORMAT_ATTRIBUTE(type, index, first)
 #  define OCTAVE_NORETURN
 #  define OCTAVE_UNUSED
 #endif
 
 #if ! defined (OCTAVE_FALLTHROUGH)
 #  if defined (__cplusplus) && __cplusplus > 201402L
 #    define OCTAVE_FALLTHROUGH [[fallthrough]]
 #  elif defined (__GNUC__) && __GNUC__ < 7
