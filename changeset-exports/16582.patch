# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1367192942 14400
#      Sun Apr 28 19:49:02 2013 -0400
# Node ID 868d0bcfabaebebebfc8a0c8bda66fb64368c15e
# Parent  fa4a035e0cf433b0ad3742ac18fc698fd56f681b
style fixes

* dialog.cc, octave-link.cc: Style fixes.

diff --git a/libgui/src/dialog.cc b/libgui/src/dialog.cc
--- a/libgui/src/dialog.cc
+++ b/libgui/src/dialog.cc
@@ -415,35 +415,33 @@ InputDialog::buttonCancel_clicked (void)
 
   
 void
 InputDialog::reject (void)
 {
   buttonCancel_clicked ();
 }
 
-FileDialog::FileDialog (const QStringList& filters,
-                        const QString& title,
-                        const QString& filename,
-                        const QString& dirname,
+FileDialog::FileDialog (const QStringList& filters, const QString& title,
+                        const QString& filename, const QString& dirname,
                         const QString& multimode)
   : QFileDialog()
 {
   // Create a NonModal message.
   setWindowModality (Qt::NonModal);
 
   setWindowTitle (title.isEmpty () ? " " : title);
   setDirectory (dirname);
 
   if (multimode == "on")         // uigetfile multiselect=on
     {
       setFileMode (QFileDialog::ExistingFiles);
       setAcceptMode (QFileDialog::AcceptOpen);
     }
-  else if(multimode == "create") // uiputfile
+  else if (multimode == "create") // uiputfile
     {
       setFileMode (QFileDialog::AnyFile); 
       setAcceptMode (QFileDialog::AcceptSave);
       setOption (QFileDialog::DontConfirmOverwrite, false);
       setConfirmOverwrite(true);
     }
   else                           // uigetfile multiselect=off
     {
diff --git a/libinterp/interpfcn/octave-link.cc b/libinterp/interpfcn/octave-link.cc
--- a/libinterp/interpfcn/octave-link.cc
+++ b/libinterp/interpfcn/octave-link.cc
@@ -199,22 +199,22 @@ DEFUN (__octave_link_file_dialog__, args
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
   if (args.length () == 6)
     {
 
-      const Array<std::string> flist = args (0).cellstr_value ();
-      std::string title = args (1).string_value ();
-      std::string filename = args (2).string_value ();
-      Matrix pos = args (3).matrix_value ();
-      std::string multi_on = args (4).string_value (); // on, off, create
-      std::string pathname = args (5).string_value ();
+      const Array<std::string> flist = args(0).cellstr_value ();
+      std::string title = args(1).string_value ();
+      std::string filename = args(2).string_value ();
+      Matrix pos = args(3).matrix_value ();
+      std::string multi_on = args(4).string_value (); // on, off, create
+      std::string pathname = args(5).string_value ();
 
       octave_idx_type nel = flist.numel ();
       octave_link::filter_list filter_lst;
 
       for (octave_idx_type i = 0; i < flist.rows (); i++)
         filter_lst.push_back (std::make_pair (flist(i,0),
                                               (flist.columns () > 1
                                                ? flist(i,1) : "")));
@@ -235,21 +235,21 @@ Undocumented internal function.\n\
           if (nel <= 3)
             {
               int idx = 0;
               for (std::list<std::string>::iterator it = items_lst.begin ();
                    it != items_lst.end (); it++)
                 {
                   retval(idx++) = *it;
 
-                  if (idx == 1 && retval (0).string_value ().length () == 0)
+                  if (idx == 1 && retval(0).string_value ().length () == 0)
                     retval(0) = 0;
 
                   if (idx == 3)
-                    retval(2) = atoi (retval (2).string_value ().c_str ());
+                    retval(2) = atoi (retval(2).string_value ().c_str ());
                 }
             }
           else
             {
               // Multiple files.
               nel = items_lst.size ();
               Cell items (dim_vector (1, nel));
 
