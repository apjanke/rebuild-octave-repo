# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1245823663 -7200
#      Wed Jun 24 08:07:43 2009 +0200
# Node ID 8bec23396924aaac06ff26cf9963efe0beec7bdc
# Parent  d57f0c56195f265b719d959deb8bb749077668d8
hide copy constructors in unwind-prot.h

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2009-06-24  Jaroslav Hajek  <highegg@gmail.com>
+
+	* unwind-prot.h (restore_var, restore_mem): Hide also copy
+	constructors.
+
 2009-06-23  Jaroslav Hajek  <highegg@gmail.com>
 
 	* quit.h (octave_quit_exception): Delete.
 	(exit_status, quitting_gracefully): New globals.
 	* quit.cc: Initialize them.
 	(Fquit): Set the globals, simulate interrupt.
 	(main_loop): Handle exit properly.
 	* octave.cc (execute_eval_option_code): Ditto.
diff --git a/src/unwind-prot.h b/src/unwind-prot.h
--- a/src/unwind-prot.h
+++ b/src/unwind-prot.h
@@ -56,16 +56,17 @@ public:
     static void cleanup (void *ptr)
       {
         delete reinterpret_cast<restore_var *> (ptr);
       }
 
   private:
 
     // No copying!
+    restore_var (const restore_var&);
     void operator = (const restore_var&); 
 
     T *rptr, rval;
   };
 
   // This class is used to restore arbitrary memory area using std::memcpy.
 
   class
@@ -79,16 +80,17 @@ public:
     static void cleanup (void *ptr)
       {
         delete reinterpret_cast<restore_mem *> (ptr);
       }
 
   private:
 
     // No copying!
+    restore_mem (const restore_mem&);
     void operator = (const restore_mem&); 
 
     void *rptr, *sptr;
     size_t rsize;
   };
 
   typedef void (*cleanup_func) (void *ptr);
 
