# HG changeset patch
# User Lachlan Andrew <lachlanbis@gmail.com>
# Date 1461919388 -36000
#      Fri Apr 29 18:43:08 2016 +1000
# Node ID c32590cd0080b1e1c7d8ed2347a349b8e7a0fcd2
# Parent  a0ebc922fd5238a5386d835c00e97d2132bfdf5f
Do not redraw while figures are being deleted (bug #47699).

* graphics.cc (delete_graphics_objects): New static variable delete_executing.
Use unwind_protect frame to change delete_executing to true before deleting
objects.
* graphics.cc (Fdrawnow): Don't redraw if in the middle of a delete operation
indicated by delete_executing flag.
* graphics.cc (gh_manager::do_close_all_figures): Replace assert that all
handles are closed, with a warning.

diff --git a/libinterp/corefcn/graphics.cc b/libinterp/corefcn/graphics.cc
--- a/libinterp/corefcn/graphics.cc
+++ b/libinterp/corefcn/graphics.cc
@@ -2654,19 +2654,27 @@ delete_graphics_object (const graphics_h
 }
 
 static void
 delete_graphics_object (double val)
 {
   delete_graphics_object (gh_manager::lookup (val));
 }
 
+// Flag to stop redraws due to callbacks while deletion is in progress.
+static bool delete_executing = false;
+
 static void
 delete_graphics_objects (const NDArray vals)
 {
+  // Prevent redraw of partially deleted objects.
+  unwind_protect frame;
+  frame.protect_var (delete_executing);
+  delete_executing = true;
+
   for (octave_idx_type i = 0; i < vals.numel (); i++)
     delete_graphics_object (vals.elem (i));
 }
 
 static void
 close_figure (const graphics_handle& h)
 {
   octave_value closerequestfcn = xget (h, "closerequestfcn");
@@ -2717,17 +2725,18 @@ gh_manager::do_close_all_figures (void)
       if (h.ok ())
         force_close_figure (h);
     }
 
   // None left now, right?
 
   hlist = do_figure_handle_list (true);
 
-  assert (hlist.numel () == 0);
+  if (hlist.numel () != 0)
+    warning ("gh_manager::do_close_all_figures: some graphics elements failed to close.");
 
   // Clear all callback objects from our list.
 
   callback_objects.clear ();
 }
 
 static void
 adopt (const graphics_handle& parent_h, const graphics_handle& h)
@@ -10710,17 +10719,18 @@ undocumented.\n\
   if (args.length () > 4)
     print_usage ();
 
   unwind_protect frame;
 
   frame.protect_var (Vdrawnow_requested, false);
   frame.protect_var (drawnow_executing);
 
-  if (++drawnow_executing <= 1)
+  // Redraw, unless we are in the middle of an existing redraw or deletion.
+  if (++drawnow_executing <= 1 && ! delete_executing)
     {
       gh_manager::auto_lock guard;
 
       if (args.length () == 0 || args.length () == 1)
         {
           Matrix hlist = gh_manager::figure_handle_list (true);
 
           for (int i = 0; i < hlist.numel (); i++)
