# HG changeset patch
# User jwe
# Date 955479725 0
#      Tue Apr 11 19:02:05 2000 +0000
# Node ID a908150a3a323eac7866c24834e18d84c13f9809
# Parent  96679fb690a4c5bc49273b7d3f193f8f662b1a17
[project @ 2000-04-11 19:02:03 by jwe]

diff --git a/liboctave/Array.cc b/liboctave/Array.cc
--- a/liboctave/Array.cc
+++ b/liboctave/Array.cc
@@ -80,17 +80,16 @@ Array<T>::operator = (const Array<T>& a)
       if (--rep->count <= 0)
 	delete rep;
 
       rep = a.rep;
       rep->count++;
     }
 
 #ifdef HEAVYWEIGHT_INDEXING
-  max_indices = 1;
   idx_count = 0;
   idx = 0;
 #endif
 
   return *this;
 }
 
 template <class T>
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,12 @@
+2000-04-06  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* Array.cc (Array<T>::operator =): Don't set max_indices to 1 here.
+
 2000-03-23  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* lo-sysdep.h: octave_chdir returns int, not bool.
 
 2000-03-21  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* Makefile.in (liboctave.$(SHLEXT)): Delete target
 	before rebuilding.
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,16 @@
+2000-04-11  Joao Cardoso <jcardoso@inescn.pt>
+
+	* sysdep.cc (kbhit): New arg, wait.
+	(raw_mode): Ditto.
+	(Fkbhit): If given an arg, call kbhit with wait = false.
+
+	* DLD-FUNCTIONS/minmax.cc (Fmax, Fmin): Fix doc string.
+
 2000-04-04  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* dynamic-ld.cc (octave_dynamic_loader::do_load): Undo previous change.
 
 2000-04-03  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* dynamic-ld.cc (octave_dynamic_loader::do_load): Also fail with
 	error message if we don't find the mangled function name in the
diff --git a/src/DLD-FUNCTIONS/minmax.cc b/src/DLD-FUNCTIONS/minmax.cc
--- a/src/DLD-FUNCTIONS/minmax.cc
+++ b/src/DLD-FUNCTIONS/minmax.cc
@@ -282,17 +282,26 @@ vector.  Thus,\n\
 @example\n\
 min (min (@var{x}))\n\
 @end example\n\
 \n\
 @noindent\n\
 returns the smallest element of @var{x}.\n\
 \n\
 For complex arguments, the magnitude of the elements are used for\n\
-comparison.")
+comparison.\n\
+\n\
+If called with two output arguments, also returns the index of the\n\
+minimum value(s). Thus,\n\
+@example\n
+[x, ix] = min ([1, 3, 0, 2, 5])\n\
+@end example\n\
+\n\
+@noindent\n\
+returns @var{x} = 0 and @var{ix} = 3.")
 {
   octave_value_list retval;
 
   int nargin = args.length ();
 
   if (nargin < 1 || nargin > 2 || nargout > 2)
     {
       print_usage ("min");
@@ -509,17 +518,26 @@ vector.  Thus,\n\
 @example\n\
 max (max (@var{x}))\n\
 @end example\n\
 \n\
 @noindent\n\
 returns the largest element of @var{x}.\n\
 \n\
 For complex arguments, the magnitude of the elements are used for\n\
-comparison.")
+comparison.
+\n\
+If called with two output arguments, also returns the index of the\n\
+maximum value(s). Thus,\n\
+@example\n
+[x, ix] = max([1, 3, 5, 2, 5])\n\
+@end example\n\
+\n\
+@noindent\n\
+returns @var{x} = 5 and @var{ix} = 3.")
 {
   octave_value_list retval;
 
   int nargin = args.length ();
 
   if (nargin < 1 || nargin > 2 || nargout > 2)
     {
       print_usage ("max");
diff --git a/src/sysdep.cc b/src/sysdep.cc
--- a/src/sysdep.cc
+++ b/src/sysdep.cc
@@ -164,19 +164,19 @@ sysdep_init (void)
 //	2. Input is not echoed.  
 //	3. On output, \n is mapped to \r\n.
 //	4. \t is NOT expanded into spaces.
 //	5. Signal-causing characters such as ctrl-C (interrupt),
 //	   etc. are NOT disabled.
 // It doesn't matter whether an input \n is mapped to \r, or vice versa.
 
 void
-raw_mode (int on)
+raw_mode (bool on, bool wait)
 {
-  static int curr_on = 0;
+  static bool curr_on = false;
 
   int tty_fd = STDIN_FILENO;
   if (! isatty (tty_fd))
     {
       if (interactive)
 	error ("stdin is not a tty!");
       return;
     }
@@ -210,17 +210,20 @@ raw_mode (int on)
 	s.c_oflag &= ~(OCRNL);
 #endif
 #if defined (ONOCR)
 	s.c_oflag &= ~(ONOCR);
 #endif
 #if defined (ONLRET)
 	s.c_oflag &= ~(ONLRET);
 #endif
-	s.c_cc[VMIN] = 1;
+	if (wait)
+	  s.c_cc[VMIN] = 1;
+	else
+	  s.c_cc[VMIN] = 0;		
 	s.c_cc[VTIME] = 0;
       }      
     else
       {
 	// Restore saved modes.
 
 	s = save_term;
       }
@@ -252,17 +255,20 @@ raw_mode (int on)
 	s.c_oflag &= ~(OCRNL);
 #endif
 #if defined (ONOCR)
 	s.c_oflag &= ~(ONOCR);
 #endif
 #if defined (ONLRET)
 	s.c_oflag &= ~(ONLRET);
 #endif
-	s.c_cc[VMIN] = 1;
+	if (wait)
+	  s.c_cc[VMIN] = 1;
+	else
+	  s.c_cc[VMIN] = 0;		
 	s.c_cc[VTIME] = 0;
       }      
     else
       {
 	// Restore saved modes.
 
 	s = save_term;
       }
@@ -304,22 +310,24 @@ LOSE! LOSE!
 #endif
 
   curr_on = on;
 }
 
 // Read one character from the terminal.
 
 int
-kbhit (void)
+kbhit (bool wait)
 {
   int c;
-  raw_mode (1);
+  raw_mode (1, wait);
   c = std::cin.get ();
-  raw_mode (0);
+  if (std::cin.fail())
+	  std::cin.clear ();
+  raw_mode (0, 1);
   return c;
 }
 
 DEFUN (clc, , ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} clc ()\n\
 @deftypefnx {Built-in Function} {} home ()\n\
 Clear the terminal screen and move the cursor to the upper left corner.\n\
@@ -391,37 +399,57 @@ Set the value of the environment variabl
   else
     print_usage ("putenv");
 
   return retval;
 }
 
 // XXX FIXME XXX -- perhaps kbhit should also be able to print a prompt?
 
-DEFUN (kbhit, , ,
+DEFUN (kbhit, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} kbhit ()\n\
-Read a single keystroke from the keyboard.  For example,\n\
+Read a single keystroke from the keyboard. If called with one\n\
+argument, don't wait for a keypress.  For example,\n\
 \n\
 @example\n\
 x = kbhit ();\n\
 @end example\n\
 \n\
 @noindent\n\
 will set @var{x} to the next character typed at the keyboard as soon as\n\
 it is typed.\n\
+\n\
+@example\n\
+x = kbhit (1);\n\
+@end example\n\
+\n\
+@noindent\n\
+identical to the above example, but don't wait for a keypress,\n\
+returning the empty string if no key is available.\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
   // XXX FIXME XXX -- add timeout and default value args?
 
+  int nargin = args.length ();
+	
   if (interactive)
     {
-      int c = kbhit ();
+    	int c;
+
+	if (nargin == 1)
+	  c = kbhit (false);
+      	else
+	  c = kbhit (true);
+
+	if (c == -1)
+	  c = 0;
+
       char *s = new char [2];
       s[0] = c;
       s[1] = '\0';
       retval = s;
     }
 
   return retval;
 }
diff --git a/src/sysdep.h b/src/sysdep.h
--- a/src/sysdep.h
+++ b/src/sysdep.h
@@ -25,18 +25,19 @@ Software Foundation, 59 Temple Place - S
 
 #include <string>
 
 #include "lo-ieee.h"
 #include "lo-sysdep.h"
 
 extern void sysdep_init (void);
 
-extern void raw_mode (int);
-extern int kbhit (void);
+extern void raw_mode (bool, bool wait = true);
+
+extern int kbhit (bool wait = true);
 
 #endif
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
