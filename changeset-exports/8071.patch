# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1219950523 14400
#      Thu Aug 28 15:08:43 2008 -0400
# Node ID b6e85fb238c10e611c13fff764a5fe2353b40fda
# Parent  3b53b25e255035f1fe7117fe7826aa12b041ccb9
doc fixes

diff --git a/doc/ChangeLog b/doc/ChangeLog
--- a/doc/ChangeLog
+++ b/doc/ChangeLog
@@ -1,8 +1,13 @@
+2008-08-28  John W. Eaton  <jwe@octave.org>
+
+	* interpreter/plot.txi: Doc fixes suggested by Francesco Potorti`
+	<Potorti@isti.cnr.it>.
+
 2008-08-28  David Bateman  <dbateman@free.fr>
 
 	* interpreter/plot.txi: Add description of data sources and line
 	series objects.
 
 2008-08-26  David Bateman  <dbateman@free.fr>
 
 	* interpreter/plot.txi: Document the group objects (bar, stem,
diff --git a/doc/interpreter/plot.txi b/doc/interpreter/plot.txi
--- a/doc/interpreter/plot.txi
+++ b/doc/interpreter/plot.txi
@@ -449,39 +449,55 @@ at the Octave prompt should display a th
 
 Plots in Octave are constructed from the following @dfn{graphics
 objects}.  Each graphics object has a set of properties that define its
 appearance and may also contain links to other graphics objects.
 Graphics objects are only referenced by a numeric index, or @dfn{handle}.
 
 @table @asis
 @item root figure
+@cindex root figure graphics object
+@cindex graphics object, root figure
 The parent of all figure objects.  The index for the root figure is
 defined to be 0.
 
 @item figure
+@cindex figure graphics object
+@cindex graphics object, figure
 A figure window.
 
 @item axes
+@cindex axes graphics object
+@cindex graphics object, axes
 An set of axes.  This object is a child of a figure object and may be a
 parent of line, text, image, patch, or surface objects.
 
 @item line
+@cindex line graphics object
+@cindex graphics object, line
 A line in two or three dimensions.
 
 @item text
+@cindex text graphics object
+@cindex graphics object, text
 Text annotations.
 
 @item image
+@cindex image graphics object
+@cindex graphics object, image
 A bitmap image.
 
 @item patch
+@cindex patch graphics object
+@cindex graphics object, patch
 A filled polygon, currently limited to two dimensions.
 
 @item surface
+@cindex surface graphics object
+@cindex graphics object, surface 
 A three-dimensional surface.
 @end table
 
 To determine whether an object is a graphics object index or a figure
 index, use the functions @code{ishandle} and @code{isfigure}.
 
 @DOCSTRING(ishandle)
 
@@ -654,16 +670,17 @@ Index to graphics object for the current
 
 @c FIXME -- does this work?
 @c @item visible
 @c Either @code{"on"} or @code{"off"} to toggle display of figures.
 @end table
 
 @node Figure Properties
 @subsubsection Figure Properties
+@cindex figure properties
 
 @table @code
 @item nextplot
 May be one of
 @table @code
 @item "new"
 @item "add"
 @item "replace"
@@ -684,24 +701,27 @@ Either @code{"on"} or @code{"off"} to to
 
 @item paperorientation
 Indicates the orientation for printing.  Either @code{"landscape"} or
 @code{"portrait"}.
 @end table
 
 @node Axes Properties
 @subsubsection Axes Properties
+@cindex axes properties
 
 @table @code
 @item position
-A four-element vector specifying the coordinates of the lower left
-corner and width and height of the plot, in normalized units.  For
-example, @code{[0.2, 0.3, 0.4, 0.5]} sets the lower left corner of the
-axes at @math{(0.2, 0.3)} and the width and height to be 0.4 and 0.5
-respectively.
+A vector specifying the position of the plot, excluding titles, axes and
+legend.  The four elements of the vector are the coordinates of the
+lower left corner and width and height of the plot, in units normalized
+to the width and height of the plot window.  For example, @code{[0.2,
+0.3, 0.4, 0.5]} sets the lower left corner of the axes at @math{(0.2,
+0.3)} and the width and height to be 0.4 and 0.5 respectively.  See also
+the @code{outerposition} property.
 
 @item title
 Index of text object for the axes title.
 
 @item box
 Either @code{"on"} or @code{"off"} to toggle display of the box around
 the axes.
 
@@ -810,25 +830,28 @@ May be one of
 @table @code
 @item "new"
 @item "add"
 @item "replace"
 @item "replacechildren"
 @end table
 
 @item outerposition
-A four-element vector specifying the coordinates of the lower left
-corner and width and height of the plot, in normalized units including
-the tics, labels etc.  For example, @code{[0.2, 0.3, 0.4, 0.5]} sets the
-lower left corner of the axes at @math{(0.2, 0.3)} and the width and
-height to be 0.4 and 0.5 respectively.
+A vector specifying the position of the plot, including titles, axes and
+legend.  The four elements of the vector are the coordinates of the
+lower left corner and width and height of the plot, in units normalized
+to the width and height of the plot window.  For example, @code{[0.2,
+0.3, 0.4, 0.5]} sets the lower left corner of the axes at @math{(0.2,
+0.3)} and the width and height to be 0.4 and 0.5 respectively.  See also
+the @code{position} property.
 @end table
 
 @node Line Properties
 @subsubsection Line Properties
+@cindex line properties
 
 @table @code
 @itemx xdata
 @itemx ydata
 @itemx zdata
 @itemx ldata
 @itemx udata
 @itemx xldata
@@ -853,16 +876,17 @@ The RGB color of the line, or a color na
 @item keylabel
 The text of the legend entry corresponding to this line.  Note that this
 property is not compatible with @sc{Matlab} and may be removed in a
 future version of Octave.
 @end table
 
 @node Text Properties
 @subsubsection Text Properties
+@cindex text properties
 
 @table @code
 @item string
 The character string contained by the text object.
 
 @item units
 May be @code{"normalized"} or @code{"graph"}.
 
@@ -1136,16 +1160,17 @@ The result of which can be seen in @ref{
 @float Figure,fig:extendedtext
 @image{extended,8cm}
 @caption{Example of inclusion of text with the @sc{TeX} interpreter}
 @end float
 @end ifnotinfo
 
 @node Image Properties
 @subsubsection Image Properties
+@cindex image properties
 
 @table @code
 @item cdata
 The data for the image.  Each pixel of the image corresponds to an
 element of @code{cdata}.  The value of an element of @code{cdata}
 specifies the row-index into the colormap of the axes object containing
 the image.  The color value found in the color map for the given index
 determines the color of the pixel.
@@ -1153,16 +1178,17 @@ determines the color of the pixel.
 @item xdata
 @itemx ydata
 Two-element vectors specifying the range of the x- and y- coordinates for
 the image.
 @end table
 
 @node Patch Properties
 @subsubsection Patch Properties
+@cindex patch properties
 
 @table @code
 @item cdata
 @itemx xdata
 @itemx ydata
 @itemx zdata
 Data defining the patch object.
 
@@ -1183,16 +1209,17 @@ The color of the line defining the patch
 @itemx markeredgecolor
 @itemx markerfacecolor
 @itemx markersize
 @xref{Marker Styles}.
 @end table
 
 @node Surface Properties
 @subsubsection Surface Properties
+@cindex surface properties
 
 @table @code
 @item xdata
 @itemx ydata
 @itemx zdata
 The data determining the surface.  The @code{xdata} and @code{ydata}
 elements are vectors and @code{zdata} must be a matrix.
 
@@ -1207,16 +1234,18 @@ future version of Octave.
 
 @DOCSTRING(findobj)
 
 @DOCSTRING(findall)
 
 
 @node Managing Default Properties
 @subsection Managing Default Properties
+@cindex default graphics properties
+@cindex graphics properties, default
 
 Object properties have two classes of default values, @dfn{factory
 defaults} (the initial values) and @dfn{user-defined defaults}, which
 may override the factory defaults.
 
 Although default values may be set for any object, they are set in
 parent objects and apply to child objects.  For example,
 
@@ -1293,24 +1322,29 @@ command
 get (0, "factory");
 @end example
 
 @noindent
 returns a list of factory defaults.
 
 @node Colors
 @subsection Colors
+@cindex graphics colors
+@cindex colors, graphics
 
 Colors may be specified as RGB triplets with values ranging from zero to
 one, or by name.  Recognized color names include @code{"blue"},
 @code{"black"}, @code{"cyan"}, @code{"green"}, @code{"magenta"},
 @code{"red"}, @code{"white"}, and @code{"yellow"}.
 
 @node Line Styles
 @subsection Line Styles
+@cindex line styles, graphics
+@cindex graphics line styles
+
 Line styles are specified by the following properties:
 
 @table @code
 @item linestyle
 May be one of
 @table @code
 @item "-"
 Solid lines.
@@ -1324,16 +1358,19 @@ A dash-dot line.
 
 @item linewidth
 A number specifying the width of the line.  The default is 1.  A value
 of 2 is twice as wide as the default, etc.
 @end table
 
 @node Marker Styles
 @subsection Marker Styles
+@cindex graphics marker styles
+@cindex marker styles, graphics
+
 Marker styles are specified by the following properties:
 @table @code
 @item marker
 A character indicating a plot marker to be place at each data point, or
 @code{"none"}, meaning no markers should be displayed.
 
 @itemx markeredgecolor
 The color of the edge around the marker, or @code{"auto"}, meaning that
@@ -1345,16 +1382,17 @@ should not be filled.  @xref{Colors}.
 
 @itemx markersize
 A number specifying the size of the marker.  The default is 1.  A value
 of 2 is twice as large as the default, etc.
 @end table
 
 @node Callbacks
 @subsection Callbacks
+@cindex callbacks
 
 Callback functions can be associated with graphics objects and triggered
 after certain events occur. The basic structure of all callback function
 is 
 
 @example
 @group
 function mycallback (src, data)
@@ -1415,16 +1453,17 @@ functions.
 
 @DOCSTRING(gcbf)
 
 Callbacks can equally be added to properties with the @code{addlistener}
 function described below.
 
 @node Object Groups
 @subsection Object Groups
+@cindex object groups
 
 A number of Octave high level plot functions return groups of other
 graphics objects or they return graphics objects that are have their
 properties linked in such a way that changes to one of the properties
 results in changes in the others. A graphic object that groups other
 objects is an @code{hggroup}
 
 @DOCSTRING(hggroup)
@@ -1551,28 +1590,31 @@ corresponding hggroup elements.
 * Scatter group::
 * Stair group::
 * Stem Series::
 * Surface group::
 @end menu
 
 @node Data sources in object groups
 @subsubsection Data sources in object groups
+@cindex data sources in object groups
 
 All of the group objects contain data source parameters. There are
 string parameters that contain an expression that is evaluated to update
 the relevant data property of the group when the @code{refreshdata}
 function is called. 
 
 @DOCSTRING(refreshdata)
 
 @c add the description of the linkdata function here when it is written
 
 @node Area series
 @subsubsection Area series
+@cindex series objects
+@cindex area series
 
 Area series objects are created by the @code{area} function. Each of the
 @code{hggroup} elements contains a single patch object. The properties
 of the area series are
 
 @table @code
 @item basevalue
 The value where the base of the area plot is drawn.
@@ -1594,16 +1636,18 @@ function.
 
 @item xdatasource
 @itemx ydatasource
 Data source variables.
 @end table
 
 @node Bar series
 @subsubsection Bar series
+@cindex series objects
+@cindex bar series
 
 Bar series objects are created by the @code{bar} or @code{barh}
 functions. Each @code{hgrroup} element contains a single patch object. 
 The properties of the bar series are
 
 @table @code
 @item showbaseline
 @itemx baseline
@@ -1648,26 +1692,32 @@ The y value of the bars in the @code{hgg
 
 @item xdatasource
 @itemx ydatasource
 Data source variables.
 @end table
 
 @node Contour groups
 @subsubsection Contour groups
+@cindex series objects
+@cindex contour series
 
 TO BE WRITTEN
 
 @node Error bar series
 @subsubsection Error bar series
+@cindex series objects
+@cindex error bar series
 
 TO BE WRITTEN
 
 @node Line series
 @subsubsection Line series
+@cindex series objects
+@cindex line series
 
 line series objects are created by the @code{plot}  and @code{plot3}
 functions. Each @code{hggroup} element of the series contains a single
 line object as a child representing the stair. The properties of the
 line series are a one-to-one reflection of the children line object, and
 so the line series is only useful for its ability to add data sources to
 the group object.
 
@@ -1695,16 +1745,18 @@ The original x, y and z data of the stai
 @item xdatasource
 @itemx ydatasource
 @itemx zdatasource
 Data source variables.
 @end table
 
 @node Quiver group
 @subsubsection Quiver group
+@cindex group objects
+@cindex quiver group
 
 Quiver series objects are created by the @code{quiver} or @code{quiver3}
 functions. Each @code{hggroup} element of the series contains three line
 objects as children representing the body and head of the arrow,
 together with a marker as the point of original of the arrows. The 
 properties of the quiver series are
 
 @table @code
@@ -1751,21 +1803,25 @@ The values of the vector field to plot.
 @itemx udatasource
 @itemx vdatasource
 @itemx wdatasource
 Data source variables.
 @end table
 
 @node Scatter group
 @subsubsection Scatter group
+@cindex group objects
+@cindex scatter group
 
 TO BE WRITTEN
 
 @node Stair group
 @subsubsection Stair group
+@cindex group objects
+@cindex stair group
 
 Stair series objects are created by the @code{stair} function. Each
 @code{hggroup} element of the series contains a single line object as a
 child representing the stair. The properties of the stair series are
 
 @table @code
 @item color
 The RGB color or color name of the line objects of the stairs. @xref{Colors}.
@@ -1786,29 +1842,34 @@ The original x and y data of the stairs.
 
 @item xdatasource
 @itemx ydatasource
 Data source variables.
 @end table
 
 @node Surface group
 @subsubsection Surface group
+@cindex group objects
+@cindex surface group
 
 TO BE WRITTEN
 
 @node Graphics backends
 @subsection Graphics backends
+@cindex graphics backends
+@cindex backends, graphics
 
 @DOCSTRING(backends)
 
 @DOCSTRING(available_backends)
 
 @menu
 * Interaction with gnuplot::
 @end menu
 
 @node Interaction with gnuplot
 @subsubsection Interaction with @code{gnuplot}
+@cindex gnuplot interaction
 
 @DOCSTRING(gnuplot_binary)
 
 @DOCSTRING(gnuplot_use_title_option)
 
