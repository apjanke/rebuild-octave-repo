# HG changeset patch
# User jwe
# Date 796689302 0
#      Fri Mar 31 22:35:02 1995 +0000
# Node ID 50cc3480a2db9338047b8695e7fe1925645304ac
# Parent  4f1bfa351b992306cccb64f60a7c8a276d47ad18
[project @ 1995-03-31 22:35:02 by jwe]

diff --git a/src/tc-rep.cc b/src/tc-rep.cc
--- a/src/tc-rep.cc
+++ b/src/tc-rep.cc
@@ -55,16 +55,28 @@ Software Foundation, 675 Mass Ave, Cambr
 static TC_REP *newlist = 0;
 
 // Multiplier for allocating new blocks.
 static const int newlist_grow_size = 128;
 
 // Indentation level for structures.
 static int structure_indent_level = 0;
 
+static void
+increment_structure_indent_level (void)
+{
+  structure_indent_level += 2;
+}
+
+static void
+decrement_structure_indent_level (void)
+{
+  structure_indent_level -= 2;
+}
+
 static int
 any_element_is_complex (const ComplexMatrix& a)
 {
   int nr = a.rows ();
   int nc = a.columns ();
   for (int j = 0; j < nc; j++)
     for (int i = 0; i < nr; i++)
       if (imag (a.elem (i, j)) != 0.0)
@@ -1767,38 +1779,40 @@ TC_REP::print (ostream& output_buf)
 // XXX FIXME XXX -- would be nice to print the output in some standard
 // order.  Maybe all substructures first, maybe alphabetize entries,
 // etc.
 	begin_unwind_frame ("TC_REP_print");
 
 	unwind_protect_int (structure_indent_level);
 	unwind_protect_int (user_pref.struct_levels_to_print);
 
-	structure_indent_level += 2;
-
 	if (user_pref.struct_levels_to_print > 0)
 	  {
 	    user_pref.struct_levels_to_print--;
 
+	    increment_structure_indent_level ();
+
 	    for (Pix p = a_map->first (); p != 0; a_map->next (p))
 	      {
 		const char *key = a_map->key (p);
 		tree_constant val = a_map->contents (p);
 
 		output_buf.form ("%*s%s = ", structure_indent_level,
 				 "", key);
 
 		if (print_as_structure (val))
 		  output_buf << "{\n";
 		else if (! print_as_scalar (val))
 		  output_buf << "\n";
 
 		val.print (output_buf);
 	      }
 
+	    decrement_structure_indent_level ();
+
 	    output_buf.form ("%*s%s", structure_indent_level, "", "}\n");
 	  }
 	else
 	  output_buf << "<structure>\n";
 
 	run_unwind_frame ("TC_REP_print");
       }
       break;
