# HG changeset patch
# User dbateman
# Date 1191525683 0
#      Thu Oct 04 19:21:23 2007 +0000
# Node ID a18c784ae599096c3caab6cc6d33872bf002c924
# Parent  768a19157591c99aa934ec5db29eb224fea02ab2
[project @ 2007-10-04 19:21:23 by dbateman]

diff --git a/liboctave/CMatrix.cc b/liboctave/CMatrix.cc
--- a/liboctave/CMatrix.cc
+++ b/liboctave/CMatrix.cc
@@ -2622,34 +2622,35 @@ static double padec [] =
 
 ComplexMatrix
 ComplexMatrix::expm (void) const
 {
   ComplexMatrix retval;
 
   ComplexMatrix m = *this;
 
-  if (numel () == 1)
-    return ComplexMatrix (1, 1, exp (m(0)));
-
   octave_idx_type nc = columns ();
 
   // Preconditioning step 1: trace normalization to reduce dynamic
   // range of poles, but avoid making stable eigenvalues unstable.
 
   // trace shift value
   Complex trshift = 0.0;
 
   for (octave_idx_type i = 0; i < nc; i++)
     trshift += m.elem (i, i);
 
   trshift /= nc;
 
   if (trshift.real () < 0.0)
-    trshift = trshift.imag ();
+    {
+      trshift = trshift.imag ();
+      if (trshift.real () > 709.0)
+	trshift = 709.0;
+    }
 
   for (octave_idx_type i = 0; i < nc; i++)
     m.elem (i, i) -= trshift;
 
   // Preconditioning step 2: eigenvalue balancing.
   // code follows development in AEPBAL
 
   Complex *mp = m.fortran_vec ();
@@ -2717,25 +2718,33 @@ ComplexMatrix::expm (void) const
 	scale_factor *= 2.0;
 
       m = m / scale_factor;
     }
 
   // npp, dpp: pade' approx polynomial matrices.
 
   ComplexMatrix npp (nc, nc, 0.0);
+  Complex *pnpp = npp.fortran_vec ();
   ComplexMatrix dpp = npp;
+  Complex *pdpp = dpp.fortran_vec ();
 
   // Now powers a^8 ... a^1.
 
   int minus_one_j = -1;
   for (octave_idx_type j = 7; j >= 0; j--)
     {
-      npp = m * npp + m * padec[j];
-      dpp = m * dpp + m * (minus_one_j * padec[j]);
+      for (octave_idx_type i = 0; i < nc; i++)
+	{
+	  octave_idx_type k = i * nc + i;
+	  pnpp [k] = pnpp [k] + padec [j];
+	  pdpp [k] = pdpp [k] + minus_one_j * padec [j];
+	}      
+      npp = m * npp;
+      dpp = m * dpp;
       minus_one_j *= -1;
     }
 
   // Zero power.
 
   dpp = -dpp;
   for (octave_idx_type j = 0; j < nc; j++)
     {
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+2007-10-04  Marco Caliari  <mcaliari@math.unipd.it>
+
+	* CMatrix.cc (ComplexMatrix::expm): Limit shift to values less
+	than log(realmax) to avoid issues with NaN.
+
 2007-10-01  John W. Eaton  <jwe@octave.org>
 
 	* oct-time.cc (octave_strptime::init): Call mktime to propertly
 	initialize wday and yday.
 	From Matthias Drochner <m.drochner@fz-juelich.de>.
 
 	* cmd-edit.cc (command_editor::do_decode_prompt_string): Don't
 	insert extra '\001' when decoding \[ and \].
