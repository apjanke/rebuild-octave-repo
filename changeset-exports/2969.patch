# HG changeset patch
# User jwe
# Date 863719110 0
#      Thu May 15 17:58:30 1997 +0000
# Node ID 1b47dd00a8319b1846c5c512f16f2cefbdbd8f91
# Parent  e330cb788508fb12ee91d2a1ea5df038f87c9b45
[project @ 1997-05-15 17:57:48 by jwe]

diff --git a/src/dynamic-ld.cc b/src/dynamic-ld.cc
--- a/src/dynamic-ld.cc
+++ b/src/dynamic-ld.cc
@@ -45,17 +45,17 @@ extern "C"
 
 #include <defaults.h>
 #include "dirfns.h"
 #include "dynamic-ld.h"
 #include "error.h"
 #include "toplev.h"
 #include "pathsearch.h"
 #include "oct-obj.h"
-#include "oct-builtin.h"
+#include "ov-builtin.h"
 #include "ov.h"
 #include "utils.h"
 #include "variables.h"
 
 #if defined (WITH_DL)
 
 class
 octave_dlopen_dynamic_loader : public octave_dynamic_loader
@@ -64,46 +64,46 @@ public:
 
   octave_dlopen_dynamic_loader (void)
     : octave_dynamic_loader () { }
 
   ~octave_dlopen_dynamic_loader (void) { }
 
 private:
 
-  octave_dynamic_loader::builtin_fcn
+  octave_dynamic_loader::builtin_fcn_installer
   resolve_reference (const string& mangled_name, const string& file);
 
   // No copying!
 
   octave_dlopen_dynamic_loader (const octave_dlopen_dynamic_loader&);
 
   octave_dlopen_dynamic_loader&
   operator = (const octave_dlopen_dynamic_loader&);
 };
 
-octave_dynamic_loader::builtin_fcn
+octave_dynamic_loader::builtin_fcn_installer
 octave_dlopen_dynamic_loader::resolve_reference (const string& name,
 						 const string& file)
 {
-  octave_dynamic_loader::builtin_fcn retval = 0;
+  octave_dynamic_loader::builtin_fcn_installer retval = 0;
 
   // Dynamic linking with dlopen/dlsym doesn't require specification
   // of the libraries at runtime.  Instead, they are specified when
   // the .oct file is created.
 
   void *handle = dlopen (file.c_str (), RTLD_LAZY);
 
   const char *nm = name.c_str ();
 
   if (handle)
     {
       void *tmp = dlsym (handle, nm);
 
-      retval = static_cast<octave_dynamic_loader::builtin_fcn> (tmp);
+      retval = static_cast<octave_dynamic_loader::builtin_fcn_installer> (tmp);
 
       if (! retval)
 	{
 	  const char *errmsg = dlerror ();
 
 	  if (errmsg)
 	    error("%s: `%s'", nm, errmsg);
 	  else
@@ -127,32 +127,32 @@ public:
 
   octave_shl_load_dynamic_loader (void)
     : octave_dynamic_loader () { }
 
   ~octave_shl_load_dynamic_loader (void) { }
 
 private:
 
-  octave_dynamic_loader::builtin_fcn
+  octave_dynamic_loader::builtin_fcn_installer
   resolve_reference (const string& mangled_name, const string& file);
 
   // No copying!
 
   octave_shl_load_dynamic_loader (const octave_shl_load_dynamic_loader&);
 
   octave_shl_load_dynamic_loader&
   operator = (const octave_shl_load_dynamic_loader&);
 };
 
-octave_dynamic_loader::builtin_fcn
+octave_dynamic_loader::builtin_fcn_installer
 octave_shl_load_dynamic_loader::resolve_reference (const string& name,
 						   const string& file)
 {
-  octave_dynamic_loader::builtin_fcn retval = 0;
+  octave_dynamic_loader::builtin_fcn_installer retval = 0;
 
   // Dynamic linking with shl_load/shl_findsym doesn't require
   // specification of the libraries at runtime.  Instead, they are
   // specified when the .oct file is created.
 
   shl_t handle = shl_load (file.c_str (), BIND_DEFERRED, 0L);
 
   const char *nm = name.c_str ();
@@ -208,48 +208,41 @@ octave_dynamic_loader::make_dynamic_load
   instance = new octave_dlopen_dynamic_loader ();
 #elif defined (WITH_SHL)
   instance = new octave_sh_load_dynamic_loader ();
 #else
   instance = new octave_dynamic_loader ();
 #endif
 }
 
-int
+bool
 octave_dynamic_loader::load_fcn_from_dot_oct_file (const string& fcn_name)
 {
   if (! instance_ok ())
     make_dynamic_loader ();
 
-  int retval = 0;
+  bool retval = false;
 
   string oct_file = oct_file_in_path (fcn_name);
 
   if (! oct_file.empty ())
     {
       string mangled_name = instance->mangle_name (fcn_name);
 
-      builtin_fcn f = instance->resolve_reference (mangled_name, oct_file);
+      builtin_fcn_installer f
+	= instance->resolve_reference (mangled_name, oct_file);
 
       if (f)
-	{
-	  octave_builtin *obj = f ();
-
-	  if (obj)
-	    {
-	      install_builtin_function (obj);
-	      retval = 1;
-	    }
-	}
+	retval = f ();
     }
 
   return retval;
 }
 
-octave_dynamic_loader::builtin_fcn
+octave_dynamic_loader::builtin_fcn_installer
 octave_dynamic_loader::resolve_reference (const string&, const string&)
 {
   return 0;
 }
 
 string
 octave_dynamic_loader::mangle_name (const string& name)
 {
diff --git a/src/pt-pr-code.cc b/src/pt-pr-code.cc
--- a/src/pt-pr-code.cc
+++ b/src/pt-pr-code.cc
@@ -26,26 +26,25 @@ Software Foundation, 59 Temple Place - S
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <iostream.h>
 
 #include "error.h"
-#include "oct-usr-fcn.h"
+#include "ov-usr-fcn.h"
 #include "pr-output.h"
 #include "pt-cmd.h"
 #include "pt-const.h"
 #include "pt-exp.h"
 #include "pt-id.h"
 #include "pt-indir.h"
 #include "pt-mat.h"
 #include "pt-misc.h"
-#include "pt-mvr.h"
 #include "pt-plot.h"
 #include "pt-pr-code.h"
 
 void
 tree_print_code::visit_argument_list (tree_argument_list& lst)
 {
   Pix p = lst.first ();
 
@@ -152,20 +151,24 @@ tree_print_code::visit_decl_command (tre
 void
 tree_print_code::visit_decl_elt (tree_decl_elt& cmd)
 {
   tree_identifier *id = cmd.ident ();
 
   if (id)
     id->accept (*this);
 
-  tree_simple_assignment_expression *ass_expr = cmd.assign_expr ();
+  tree_expression *expr = cmd.expression ();
 
-  if (ass_expr)
-    ass_expr->accept (*this);
+  if (expr)
+    {
+      os << " = ";
+
+      expr->accept (*this);
+    }
 }
 
 void
 tree_print_code::visit_decl_init_list (tree_decl_init_list& lst)
 {
   Pix p = lst.first ();
 
   while (p)
@@ -180,26 +183,26 @@ tree_print_code::visit_decl_init_list (t
 
 	  if (p)
 	    os << ", ";
 	}
     }
 }
 
 void
-tree_print_code::visit_for_command (tree_for_command& cmd)
+tree_print_code::visit_simple_for_command (tree_simple_for_command& cmd)
 {
   indent ();
 
   os << "for ";
 
-  tree_index_expression *id = cmd.ident ();
+  tree_expression *lhs = cmd.left_hand_side ();
 
-  if (id)
-    id->accept (*this);
+  if (lhs)
+    lhs->accept (*this);
 
   os << " = ";
 
   tree_expression *expr = cmd.control_expr ();
 
   if (expr)
     expr->accept (*this);
 
@@ -215,16 +218,51 @@ tree_print_code::visit_for_command (tree
     }
 
   indent ();
 
   os << "endfor";
 }
 
 void
+tree_print_code::visit_complex_for_command (tree_complex_for_command& cmd)
+{
+  indent ();
+
+  os << "for [";
+
+  tree_argument_list *lhs = cmd.left_hand_side ();
+
+  if (lhs)
+    lhs->accept (*this);
+
+  os << "] = ";
+
+  tree_expression *expr = cmd.control_expr ();
+
+  if (expr)
+    expr->accept (*this);
+
+  newline ();
+
+  tree_statement_list *list = cmd.body ();
+
+  if (list)
+    {
+      increment_indent_level ();
+      list->accept (*this);
+      decrement_indent_level ();
+    }
+
+  indent ();
+
+  os << "endfor";
+}
+
+void
 tree_print_code::visit_octave_user_function (octave_user_function& fcn)
 {
   reset ();
 
   visit_octave_user_function_header (fcn);
 
   tree_statement_list *cmd_list = fcn.body ();
 
@@ -405,20 +443,20 @@ tree_print_code::visit_if_command_list (
 
 void
 tree_print_code::visit_index_expression (tree_index_expression& expr)
 {
   indent ();
 
   print_parens (expr, "(");
 
-  tree_indirect_ref *id = expr.ident ();
+  tree_expression *e= expr.expression ();
 
-  if (id)
-    id->accept (*this);
+  if (e)
+    e->accept (*this);
 
   tree_argument_list *list = expr.arg_list ();
 
   if (list)
     {
       os << " (";
       list->accept (*this);
       os << ")";
@@ -429,20 +467,22 @@ tree_print_code::visit_index_expression 
 
 void
 tree_print_code::visit_indirect_ref (tree_indirect_ref& expr)
 {
   indent ();
 
   print_parens (expr, "(");
 
-  // The name of the indirect ref includes the sub-elements.
+  tree_expression *e = expr.expression ();
 
-  string nm = expr.name ();
-  os << (nm.empty () ? string ("(empty)") : nm);
+  if (e)
+    e->accept (*this);
+
+  os << "." << expr.elt_name ();
 
   print_parens (expr, ")");
 }
 
 void
 tree_print_code::visit_matrix (tree_matrix& lst)
 {
   indent ();
@@ -450,17 +490,17 @@ tree_print_code::visit_matrix (tree_matr
   print_parens (lst, "(");
 
   os << "[";
 
   Pix p = lst.first ();
 
   while (p)
     {
-      tree_matrix_row *elt = lst (p);
+      tree_argument_list *elt = lst (p);
 
       lst.next (p);
 
       if (elt)
 	{
 	  elt->accept (*this);
 
 	  if (p)
@@ -469,62 +509,40 @@ tree_print_code::visit_matrix (tree_matr
     }
 
   os << "]";
 
   print_parens (lst, ")");
 }
 
 void
-tree_print_code::visit_matrix_row (tree_matrix_row& lst)
-{
-  Pix p = lst.first ();
-
-  while (p)
-    {
-      tree_expression *elt = lst (p);
-
-      lst.next (p);
-
-      if (elt)
-	{
-	  elt->accept (*this);
-
-	  if (p)
-	    os << ", ";
-	}
-    }
-}
-
-void
-tree_print_code::visit_multi_assignment_expression
-  (tree_multi_assignment_expression& expr)
+tree_print_code::visit_multi_assignment (tree_multi_assignment& expr)
 {
   indent ();
 
   print_parens (expr, "(");
 
-  tree_return_list *lhs = expr.left_hand_side ();
+  tree_argument_list *lhs = expr.left_hand_side ();
 
   if (lhs)
     {
       int len = lhs->length ();
 
       if (len > 1)
 	os << "[";
 
       lhs->accept (*this);
 
       if (len > 1)
 	os << "]";
     }
 
   os << " = ";
 
-  tree_multi_val_ret *rhs = expr.right_hand_side ();
+  tree_expression *rhs = expr.right_hand_side ();
 
   if (rhs)
     rhs->accept (*this);
 
   print_parens (expr, ")");
 }
 
 void
@@ -709,41 +727,28 @@ tree_print_code::visit_return_list (tree
 
 	  if (p)
 	    os << ", ";
 	}
     }
 }
 
 void
-tree_print_code::visit_simple_assignment_expression
-  (tree_simple_assignment_expression& expr)
+tree_print_code::visit_simple_assignment (tree_simple_assignment& expr)
 {
   indent ();
 
   print_parens (expr, "(");
 
-  if (! expr.is_ans_assign ())
-    {
-      tree_indirect_ref *lhs = expr.left_hand_side ();
-
-      if (lhs)
-	lhs->accept (*this);
-
-      tree_argument_list *index = expr.lhs_index ();
+  tree_expression *lhs = expr.left_hand_side ();
 
-      if (index)
-	{
-	  os << " (";
-	  index->accept (*this);
-	  os << ")";
-	}
+  if (lhs)
+    lhs->accept (*this);
 
-      os << " " << expr.oper () << " ";
-    }
+  os << " " << expr.oper () << " ";
 
   tree_expression *rhs = expr.right_hand_side ();
 
   if (rhs)
     rhs->accept (*this);
 
   print_parens (expr, ")");
 }
diff --git a/src/pt-pr-code.h b/src/pt-pr-code.h
--- a/src/pt-pr-code.h
+++ b/src/pt-pr-code.h
@@ -57,17 +57,19 @@ public:
   void visit_continue_command (tree_continue_command&);
 
   void visit_decl_command (tree_decl_command&);
 
   void visit_decl_elt (tree_decl_elt&);
 
   void visit_decl_init_list (tree_decl_init_list&);
 
-  void visit_for_command (tree_for_command&);
+  void visit_simple_for_command (tree_simple_for_command&);
+
+  void visit_complex_for_command (tree_complex_for_command&);
 
   void visit_octave_user_function (octave_user_function&);
 
   void visit_octave_user_function_header (octave_user_function&);
 
   void visit_octave_user_function_trailer (octave_user_function&);
 
   void visit_identifier (tree_identifier&);
@@ -79,19 +81,17 @@ public:
   void visit_if_command_list (tree_if_command_list&);
 
   void visit_index_expression (tree_index_expression&);
 
   void visit_indirect_ref (tree_indirect_ref&);
 
   void visit_matrix (tree_matrix&);
 
-  void visit_matrix_row (tree_matrix_row&);
-
-  void visit_multi_assignment_expression (tree_multi_assignment_expression&);
+  void visit_multi_assignment (tree_multi_assignment&);
 
   void visit_no_op_command (tree_no_op_command&);
 
   void visit_oct_obj (tree_oct_obj&);
 
   void visit_constant (tree_constant&);
 
   void visit_parameter_list (tree_parameter_list&);
@@ -105,17 +105,17 @@ public:
   void visit_postfix_expression (tree_postfix_expression&);
 
   void visit_prefix_expression (tree_prefix_expression&);
 
   void visit_return_command (tree_return_command&);
 
   void visit_return_list (tree_return_list&);
 
-  void visit_simple_assignment_expression (tree_simple_assignment_expression&);
+  void visit_simple_assignment (tree_simple_assignment&);
 
   void visit_statement (tree_statement&);
 
   void visit_statement_list (tree_statement_list&);
 
   void visit_subplot (subplot&);
 
   void visit_subplot_list (subplot_list&);
diff --git a/src/pt-walk.h b/src/pt-walk.h
--- a/src/pt-walk.h
+++ b/src/pt-walk.h
@@ -26,42 +26,42 @@ Software Foundation, 59 Temple Place - S
 class tree_argument_list;
 class tree_binary_expression;
 class tree_break_command;
 class tree_colon_expression;
 class tree_continue_command;
 class tree_decl_command;
 class tree_decl_elt;
 class tree_decl_init_list;
-class tree_for_command;
+class tree_simple_for_command;
+class tree_complex_for_command;
 class octave_user_function;
 class tree_identifier;
 class tree_if_clause;
 class tree_if_command;
 class tree_if_command_list;
 class tree_switch_case;
 class tree_switch_case_list;
 class tree_switch_command;
 class tree_index_expression;
 class tree_indirect_ref;
 class tree_matrix;
-class tree_matrix_row;
-class tree_multi_assignment_expression;
+class tree_multi_assignment;
 class tree_no_op_command;
 class tree_oct_obj;
 class tree_constant;
 class tree_parameter_list;
 class tree_plot_command;
 class plot_limits;
 class plot_range;
 class tree_postfix_expression;
 class tree_prefix_expression;
 class tree_return_command;
 class tree_return_list;
-class tree_simple_assignment_expression;
+class tree_simple_assignment;
 class tree_statement;
 class tree_statement_list;
 class subplot;
 class subplot_list;
 class subplot_style;
 class subplot_using;
 class tree_try_catch_command;
 class tree_unwind_protect_command;
@@ -92,17 +92,20 @@ public:
 
   virtual void
   visit_decl_elt (tree_decl_elt&) = 0;
 
   virtual void
   visit_decl_init_list (tree_decl_init_list&) = 0;
 
   virtual void
-  visit_for_command (tree_for_command&) = 0;
+  visit_simple_for_command (tree_simple_for_command&) = 0;
+
+  virtual void
+  visit_complex_for_command (tree_complex_for_command&) = 0;
 
   virtual void
   visit_octave_user_function (octave_user_function&) = 0;
 
   virtual void
   visit_identifier (tree_identifier&) = 0;
 
   virtual void
@@ -128,20 +131,17 @@ public:
 
   virtual void
   visit_indirect_ref (tree_indirect_ref&) = 0;
 
   virtual void
   visit_matrix (tree_matrix&) = 0;
 
   virtual void
-  visit_matrix_row (tree_matrix_row&) = 0;
-
-  virtual void
-  visit_multi_assignment_expression (tree_multi_assignment_expression&) = 0;
+  visit_multi_assignment (tree_multi_assignment&) = 0;
 
   virtual void
   visit_no_op_command (tree_no_op_command&) = 0;
 
   virtual void
   visit_oct_obj (tree_oct_obj&) = 0;
 
   virtual void
@@ -167,17 +167,17 @@ public:
 
   virtual void
   visit_return_command (tree_return_command&) = 0;
 
   virtual void
   visit_return_list (tree_return_list&) = 0;
 
   virtual void
-  visit_simple_assignment_expression (tree_simple_assignment_expression&) = 0;
+  visit_simple_assignment (tree_simple_assignment&) = 0;
 
   virtual void
   visit_statement (tree_statement&) = 0;
 
   virtual void
   visit_statement_list (tree_statement_list&) = 0;
 
   virtual void
