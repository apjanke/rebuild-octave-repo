# HG changeset patch
# User jwe
# Date 827496762 0
#      Fri Mar 22 12:12:42 1996 +0000
# Node ID fdb389192822f4e2bb2e361f36c06d00d30411b0
# Parent  1d831915c580060d7a363bd1d332eababed1c513
[project @ 1996-03-22 12:12:42 by jwe]

diff --git a/src/resource.cc b/src/resource.cc
--- a/src/resource.cc
+++ b/src/resource.cc
@@ -22,107 +22,146 @@ Software Foundation, 59 Temple Place - S
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "systime.h"
 
 #ifdef HAVE_SYS_RESOURCE_H
+
 #include <sys/resource.h>
+
+#elif defined (HAVE_TIMES) && defined (HAVE_SYS_TIMES_H)
+
+#include <sys/types.h>
+#if defined (HAVE_SYS_PARAM_H)
+#include <sys/param.h>
+#endif
+#include <sys/times.h>
+
+#if !defined (HZ)
+#if defined (CLK_TCK)
+#define HZ CLK_TCK
+#elif defined (USG)
+#define HZ 100
+#else
+#define HZ 60
+#endif
+#endif
+
 #endif
 
 #include "defun.h"
 #include "help.h"
 #include "oct-map.h"
 #include "sysdep.h"
 #include "pt-const.h"
 #include "oct-obj.h"
 #include "utils.h"
 
 #ifndef RUSAGE_SELF
 #define RUSAGE_SELF 0
 #endif
 
 // System resource functions.
 
-static Octave_map
-mk_ru_map (struct rusage *ru)
+DEFUN (getrusage, , ,
+  "getrusage ()\n\
+\n\
+Return system resource statistics.")
 {
   Octave_map m;
   Octave_map tv_tmp;
 
 #if defined (HAVE_GETRUSAGE)
-  tv_tmp ["sec"] = (double) ru->ru_utime.tv_sec;
-  tv_tmp ["usec"] = (double) ru->ru_utime.tv_usec;
+
+  struct rusage ru;
+
+  getrusage (RUSAGE_SELF, &ru);
+
+  tv_tmp ["sec"] = (double) ru.ru_utime.tv_sec;
+  tv_tmp ["usec"] = (double) ru.ru_utime.tv_usec;
   m ["utime"] = tree_constant (tv_tmp);
 
-  tv_tmp ["sec"] = (double) ru->ru_stime.tv_sec;
-  tv_tmp ["usec"] = (double) ru->ru_stime.tv_usec;
+  tv_tmp ["sec"] = (double) ru.ru_stime.tv_sec;
+  tv_tmp ["usec"] = (double) ru.ru_stime.tv_usec;
   m ["stime"] = tree_constant (tv_tmp);
 
-  m ["maxrss"] = (double) ru->ru_maxrss;
-  m ["ixrss"] = (double) ru->ru_ixrss;
-  m ["idrss"] = (double) ru->ru_idrss;
-  m ["isrss"] = (double) ru->ru_isrss;
-  m ["minflt"] = (double) ru->ru_minflt;
-  m ["majflt"] = (double) ru->ru_majflt;
-  m ["nswap"] = (double) ru->ru_nswap;
-  m ["inblock"] = (double) ru->ru_inblock;
-  m ["oublock"] = (double) ru->ru_oublock;
-  m ["msgsnd"] = (double) ru->ru_msgsnd;
-  m ["msgrcv"] = (double) ru->ru_msgrcv;
-  m ["nsignals"] = (double) ru->ru_nsignals;
-  m ["nvcsw"] = (double) ru->ru_nvcsw;
-  m ["nivcsw"] = (double) ru->ru_nivcsw;
+  m ["maxrss"] = (double) ru.ru_maxrss;
+  m ["ixrss"] = (double) ru.ru_ixrss;
+  m ["idrss"] = (double) ru.ru_idrss;
+  m ["isrss"] = (double) ru.ru_isrss;
+  m ["minflt"] = (double) ru.ru_minflt;
+  m ["majflt"] = (double) ru.ru_majflt;
+  m ["nswap"] = (double) ru.ru_nswap;
+  m ["inblock"] = (double) ru.ru_inblock;
+  m ["oublock"] = (double) ru.ru_oublock;
+  m ["msgsnd"] = (double) ru.ru_msgsnd;
+  m ["msgrcv"] = (double) ru.ru_msgrcv;
+  m ["nsignals"] = (double) ru.ru_nsignals;
+  m ["nvcsw"] = (double) ru.ru_nvcsw;
+  m ["nivcsw"] = (double) ru.ru_nivcsw;
+
 #else
-  tv_tmp ["sec"] = octave_NaN;
-  tv_tmp ["usec"] = octave_NaN;
+#if defined (HAVE_TIMES) && defined (HAVE_SYS_TIMES_H)
+
+  struct tms t;
+
+  times (&t);
+
+  unsigned long ticks;
+  unsigned long seconds;
+  unsigned long fraction;
+
+  ticks = t.tms_utime + t.tms_cutime;
+  fraction = ticks % HZ;
+  seconds = ticks / HZ;
+
+  tv_tmp ["sec"] = (double) seconds;
+  tv_tmp ["usec"] = (double) (fraction * 1e6 / HZ);
   m ["utime"] = tree_constant (tv_tmp);
 
-  tv_tmp ["sec"] = octave_NaN;
-  tv_tmp ["usec"] = octave_NaN;
+  ticks = t.tms_stime + t.tms_cstime;
+  fraction = ticks % HZ;
+  seconds = ticks / HZ;
+
+  tv_tmp ["sec"] = (double) seconds;
+  tv_tmp ["usec"] = (double) (fraction * 1e6 / HZ);
   m ["stime"] = tree_constant (tv_tmp);
 
+#else
+
+  tv_tmp ["sec"] = 0.0;
+  tv_tmp ["usec"] = 0.0;
+  m ["utime"] = tree_constant (tv_tmp);
+
+  tv_tmp ["sec"] = 0.0;
+  tv_tmp ["usec"] = 0.0;
+  m ["stime"] = tree_constant (tv_tmp);
+
+#endif
+
   m ["maxrss"] = octave_NaN;
   m ["ixrss"] = octave_NaN;
   m ["idrss"] = octave_NaN;
   m ["isrss"] = octave_NaN;
   m ["minflt"] = octave_NaN;
   m ["majflt"] = octave_NaN;
   m ["nswap"] = octave_NaN;
   m ["inblock"] = octave_NaN;
   m ["oublock"] = octave_NaN;
   m ["msgsnd"] = octave_NaN;
   m ["msgrcv"] = octave_NaN;
   m ["nsignals"] = octave_NaN;
   m ["nvcsw"] = octave_NaN;
   m ["nivcsw"] = octave_NaN;
-#endif
-
-  return m;
-}
-
-DEFUN (getrusage, , ,
-  "getrusage ()\n\
-\n\
-Return system resource statistics.")
-{
-  Octave_object retval;
-
-#if defined (HAVE_GETRUSAGE)
-
-  struct rusage resource_stats;
-
-  getrusage (RUSAGE_SELF, &resource_stats);
-
-  retval = tree_constant (mk_ru_map (&resource_stats));
 
 #endif
 
-  return retval;
+  return tree_constant (m);
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
