# HG changeset patch
# User Rik <rik@octave.org>
# Date 1371758099 25200
#      Thu Jun 20 12:54:59 2013 -0700
# Node ID 0e75f5412f1e58383d9ee1a0387612df036d5164
# Parent  3d981b47be424ab81e9d0bfedd1ed279824423ea
__gnuplot_ginput__.m: Correctly stop early if <RETURN> key pressed (bug #32178).

* scripts/plot/private/__gnuplot_ginput__.m: Check for abort condition
(<RETURN>) before checking whether number of desired inputs has been reached so
that an abort for the last keystroke is not included with the returned buttons.

diff --git a/scripts/plot/private/__gnuplot_ginput__.m b/scripts/plot/private/__gnuplot_ginput__.m
--- a/scripts/plot/private/__gnuplot_ginput__.m
+++ b/scripts/plot/private/__gnuplot_ginput__.m
@@ -120,33 +120,28 @@ function [x, y, button] = __gnuplot_ginp
         [x(k), y(k), button(k), count] = sscanf (str{end}(8:end), "%f %f %d", "C");
       endif
 
       if ([x(k), y(k), button(k)] == [0, 0, -1])
         ## Mousing not active (no plot yet).
         break;
       endif
 
-      if (nargin > 1)
-        ## Input argument n was given => stop when k == n.
-        if (k == n)
-          break;
-        endif
-      else
-        ## Input argument n not given => stop when hitting a return key.
-        ## if (button(k) == 0x0D || button(k) == 0x0A)
-        ##   ## hit Return or Enter
-        if (button(k) == 0x0D)
-          ## hit Return
-          x(k:end) = [];
-          y(k:end) = [];
-          button(k:end) = [];
-          break;
-        endif
+      if (button(k) == 0x0D || button(k) == 0x0A)
+        ## Stop when hitting a RETURN or ENTER key.
+        x(k:end) = [];
+        y(k:end) = [];
+        button(k:end) = [];
+        break;
       endif
+      if (nargin > 1 && k == n)
+        ## Input argument n was given, stop when k == n.
+        break;
+      endif
+
     endwhile
 
   unwind_protect_cleanup
     if (use_mkfifo)
       unlink (gpin_name);
     endif
   end_unwind_protect
 
