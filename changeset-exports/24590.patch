# HG changeset patch
# User Rik <rik@octave.org>
# Date 1515773326 28800
#      Fri Jan 12 08:08:46 2018 -0800
# Node ID b6818c2b04837d7c277f834e07cd40b4281f9a4f
# Parent  9b36fc7bd0026e7a1c377bae98b79da44a60759e
test.m: Remove requirement to avoid nested functions in %!test blocks.

* test.m: Remove regexp test for function definitions in %!test blocks
which effectively become nested functions.  This no longer produces segfaults.

diff --git a/scripts/testfun/test.m b/scripts/testfun/test.m
--- a/scripts/testfun/test.m
+++ b/scripts/testfun/test.m
@@ -639,27 +639,19 @@ function [__n, __nmax, __nxfail, __nbug,
         __success = false;
         __msg = [__signal_fail "unknown test type!\n"];
         __code = ""; # skip the code
       endif
 
       ## evaluate code for test, shared, and assert.
       if (! isempty(__code))
         try
-          ## FIXME: Must check for embedded test functions, which cause
-          ## segfaults, until issues with subfunctions in functions are fixed.
-          embed_func = regexp (__code, '^\s*function ', 'once', 'lineanchors');
-          if (isempty (embed_func))
-            eval (sprintf ("function %s__test__(%s)\n%s\nendfunction",
-                           __shared_r, __shared, __code));
-            eval (sprintf ("%s__test__(%s);", __shared_r, __shared));
-          else
-            error (["Functions embedded in %!test blocks are not allowed.\n", ...
-                    "Use the %!function/%!endfunction syntax instead to define shared functions for testing.\n"]);
-          endif
+          eval (sprintf ("function %s__test__(%s)\n%s\nendfunction",
+                         __shared_r, __shared, __code));
+          eval (sprintf ("%s__test__(%s);", __shared_r, __shared));
         catch
           if (isempty (lasterr ()))
             error ("test: empty error text, probably Ctrl-C --- aborting");
           else
             __success = false;
             if (__isxtest)
               if (isempty (__bug_id))
                 if (__fixed_bug)
