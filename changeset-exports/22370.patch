# HG changeset patch
# User Pantxo Diribarne <pantxo.diribarne@gmail.com>
# Date 1471886464 -7200
#      Mon Aug 22 19:21:04 2016 +0200
# Node ID 0a2961d5893c656e611cb4a3c1b6f3c0a231615d
# Parent  17c9cc85842e81b21b6f8ab48d4b79da641dcdfd
Fix calculation of window height in Qt, FLTK (bug #48833, bug #48522).

* Figure.cc (Figure): Delete "+ 1" from top offset calculation
when menubar is present.
* Figure.cc (update): Delete "+ 1" from top offset calculation
when menubar is present.  Delete "+ 1" from bottom offset calculation
when statusbar is present.
* Figure.cc (showMenuBar): Delete "+ 1" from dy calculation of menubar height.

* __init_fltk__.cc (plot_window): Remove extra +1/-1 fudge factors from
calculation of window size, status bar size.
* __init_fltk__.cc (update_toolbar_position): Remove extra +1/-1 fudge factors
from calculation of status bar resize.

diff --git a/libgui/graphics/Figure.cc b/libgui/graphics/Figure.cc
--- a/libgui/graphics/Figure.cc
+++ b/libgui/graphics/Figure.cc
@@ -148,17 +148,17 @@ Figure::Figure (const graphics_object& g
     }
   else
     {
       m_figureToolBar->hide ();
       m_statusBar->hide ();
     }
 
   if (fp.menubar_is ("figure") || hasUiMenuChildren (fp))
-    toffset += m_menuBar->sizeHint ().height () + 1;
+    toffset += m_menuBar->sizeHint ().height ();
   else
     m_menuBar->hide ();
 
   m_innerRect = boundingBoxToRect (fp.get_boundingbox (true));
   m_outerRect = boundingBoxToRect (fp.get_boundingbox (false));
 
   win->setGeometry (m_innerRect.adjusted (0, -toffset, 0, boffset));
 
@@ -425,20 +425,20 @@ Figure::update (int pId)
           int toffset = 0;
           int boffset = 0;
 
           foreach (QToolBar* tb, win->findChildren<QToolBar*> ())
             if (! tb->isHidden ())
               toffset += tb->sizeHint ().height ();
 
           if (! m_menuBar->isHidden ())
-            toffset += m_menuBar->sizeHint ().height () + 1;
+            toffset += m_menuBar->sizeHint ().height ();
 
           if (! m_statusBar->isHidden ())
-            boffset += m_statusBar->sizeHint ().height () + 1;
+            boffset += m_statusBar->sizeHint ().height ();
 
           win->setGeometry (m_innerRect.adjusted (0, -toffset, 0, boffset));
         }
       break;
 
     case figure::properties::ID_NAME:
     case figure::properties::ID_NUMBERTITLE:
       win->setWindowTitle (Utils::fromStdString (fp.get_title ()));
@@ -539,19 +539,19 @@ Figure::showMenuBar (bool visible)
     if (a->objectName () == "builtinMenu")
       a->setVisible (visible);
 
   int h2 = m_menuBar->sizeHint ().height ();
 
   if (! visible)
     visible = hasUiMenuChildren (properties<figure> ());
 
-  if ((! m_menuBar->isHidden ()) != visible)
+  if (! m_menuBar->isHidden ())
     {
-      int dy = qMax (h1, h2) + 1;
+      int dy = qMax (h1, h2);
       QRect r = qWidget<QWidget> ()->geometry ();
 
       //qDebug () << "Figure::showMenuBar:" << r;
       if (! visible)
         r.adjust (0, dy, 0, 0);
       else
         r.adjust (0, -dy, 0, 0);
       //qDebug () << "Figure::showMenuBar(adjusted):" << r;
diff --git a/libinterp/dldfcn/__init_fltk__.cc b/libinterp/dldfcn/__init_fltk__.cc
--- a/libinterp/dldfcn/__init_fltk__.cc
+++ b/libinterp/dldfcn/__init_fltk__.cc
@@ -761,18 +761,18 @@ public:
     : Fl_Window (xx, yy, ww, hh + menu_h + status_h + 2, "octave"),
       window_label (), fp (xfp), canvas (0),
       autoscale (0), togglegrid (0), panzoom (0), rotate (0), help (0),
       status (0), resize_dummy (0), ax_obj (), pos_x (0), pos_y (0)
   {
     callback (window_close, static_cast<void*> (this));
 
     // The size of the resize_dummy box also determines the minimum window size
-    resize_dummy = new Fl_Box (5 * status_h + 1, menu_h + 1,
-                               ww - 5 * status_h - 1, hh);
+    resize_dummy = new Fl_Box (5 * status_h, menu_h,
+                               ww - 5 * status_h, hh);
     // See http://fltk.org/articles.php?L415+I0+T+M1000+P1
     // for how resizable works
     resizable (resize_dummy);
 
     // FIXME: The function below is only available in FLTK >= 1.3
     // At some point support for FLTK 1.1 will be dropped in Octave.
     // At that point this function should be uncommented.
     // The current solution is to call xclass() before show() for each window.
@@ -783,18 +783,18 @@ public:
     uimenu = new fltk_uimenu (0, 0, ww, menu_h);
     canvas = new OpenGL_fltk (0, menu_h, ww, hh, number ());
 
     // The bottom toolbar is a composite of "autoscale", "togglegrid",
     // "panzoom", "rotate", "help", and "status".
     // Only "status" should be resized.
 
     int toolbar_y = menu_h + hh + 1;
-    status = new Fl_Output (5 * status_h + 1, toolbar_y,
-                            ww - 5 * status_h - 1, status_h, "");
+    status = new Fl_Output (5 * status_h, toolbar_y,
+                            ww - 5 * status_h, status_h, "");
 
     status->textcolor (FL_BLACK);
     status->color (FL_GRAY);
     status->textfont (FL_COURIER);
     status->textsize (10);
     status->box (FL_ENGRAVED_BOX);
 
     autoscale = new Fl_Button (0, toolbar_y, status_h, status_h, "A");
@@ -980,19 +980,18 @@ public:
     canvas->resize (0, menu_dy (), w (), old_canvas_h);
 
     int toolbar_y = canvas->h () + menu_dy () + 1;
     autoscale->position (0, toolbar_y);
     togglegrid->position (status_h, toolbar_y);
     panzoom->position (2 * status_h, toolbar_y);
     rotate->position (3 * status_h, toolbar_y);
     help->position (4 * status_h, toolbar_y);
-    status->resize (5 * status_h + 1, toolbar_y,
-                    w () - 5 * status_h - 1, status_h);
-
+    status->resize (5 * status_h, toolbar_y,
+                    w () - 5 * status_h, status_h);
     init_sizes ();
     redraw ();
   }
 
   Matrix outerposition2position (const Matrix& outerpos)
   {
     Matrix pos = outerpos;
     pos(1) += menu_dy ();
