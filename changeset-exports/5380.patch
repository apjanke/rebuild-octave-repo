# HG changeset patch
# User dbateman
# Date 1117945990 0
#      Sun Jun 05 04:33:10 2005 +0000
# Node ID 1eb29d3bed2bd3ff7774dc76aeff6658369f4929
# Parent  27986bd3e23890b346f9173fd24a331e80ad4ce6
[project @ 2005-06-05 04:32:21 by dbateman]

diff --git a/src/DLD-FUNCTIONS/spparms.cc b/src/DLD-FUNCTIONS/spparms.cc
--- a/src/DLD-FUNCTIONS/spparms.cc
+++ b/src/DLD-FUNCTIONS/spparms.cc
@@ -47,27 +47,27 @@ functions. The first four calls above ge
 settings, while the others change the current settings. The parameters are\n\
 stored as pairs of keys and values, where the values are all floats and the\n\
 keys are one of the strings\n\
 \n\
 @itemize\n\
 @item spumoni\n\
 Printing level of debugging information of the solvers (default 0)\n\
 @item ths_rel\n\
-?? (default 1)\n\
+Included for compatiability. Bot used. (default 1)\n\
 @item ths_abs\n\
-?? (default 1)\n\
+Included for compatiability. Bot used. (default 1)\n\
 @item exact_d\n\
-?? (default 0)\n\
+Included for compatiability. Bot used. (default 0)\n\
 @item supernd\n\
-?? (default 3)\n\
+Included for compatiability. Not used. (default 3)\n\
 @item rreduce\n\
-?? (default 3)\n\
+Included for compatiability. Not used. (default 3)\n\
 @item wh_frac\n\
-?? (default 0.5)\n\
+Inluded for compatiability. Not used. (default 0.5)\n\
 @item autommd\n\
 Flag whether the LU/QR and the '\\' and '/' operators will automatically\n\
 use the sparsity preserving mmd functions (default 1)\n\
 @item autoamd\n\
 Flag whether the LU and the '\\' and '/' operators will automatically\n\
 use the sparsity preserving amd functions (default 1)\n\
 @item piv_tol\n\
 The pivot tolerance of the UMFPACK solvers (default 0.1)\n\
@@ -95,17 +95,17 @@ time.\n\
       else if (nargout == 1)
 	retval(0) =  Voctave_sparse_controls.get_vals ();
       else if (nargout == 2)
 	{
 	  retval (0) = Voctave_sparse_controls.get_keys ();
 	  retval (1) = Voctave_sparse_controls.get_vals ();
 	}
       else
-	error ("spparms: too many outpu arguments"); 
+	error ("spparms: too many output arguments"); 
     }
   else if (nargin == 1)
     {
       if (args(0).is_string ())
 	{
 	  std::string str = args(0).string_value ();
 	  int len = str.length ();
 	  for (int i = 0; i < len; i++)
diff --git a/src/load-save.cc b/src/load-save.cc
--- a/src/load-save.cc
+++ b/src/load-save.cc
@@ -1511,17 +1511,17 @@ values to be saved can be represented in
 @item -save-builtins\n\
 Force Octave to save the values of built-in variables too.  By default,\n\
 Octave does not save built-in variables.\n\
 \n\
 @item -zip\n\
 @itemx -z\n\
 Use the gzip algorithm to compress the file. This works equally on files that\n\
 are compressed with gzip outside of octave, and gzip can equally be used to\n\
-convert the files for backward compatibility."
+convert the files for backward compatibility.\n"
 
 HAVE_ZLIB_HELP_STRING
 
 "@end table\n\
 \n\
 The list of variables to save may include wildcard patterns containing\n\
 the following special characters:\n\
 @table @code\n\
