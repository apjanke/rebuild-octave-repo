# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1385344486 18000
#      Sun Nov 24 20:54:46 2013 -0500
# Node ID f82fd6854dbf57ca32947d6b3bb355c7bfb97b33
# Parent  8dd4275381474c6d9e354f592528605cc0eec935
use gnulib sigemptyset and sigaddset in thread_manager class

* thread-manager.cc (block_or_unblock_signal): Use gnulib sigemptyset
and sigaddset functions.

diff --git a/libgui/src/thread-manager.cc b/libgui/src/thread-manager.cc
--- a/libgui/src/thread-manager.cc
+++ b/libgui/src/thread-manager.cc
@@ -82,32 +82,44 @@ private:
 };
 
 #endif
 
 octave_thread_manager::octave_thread_manager (void)
   : rep (octave_thread_manager::create_rep ())
 { }
 
+// The following is a workaround for an apparent bug in GCC 4.1.2 and
+// possibly earlier versions.  See Octave bug report #30685 for details.
+#if defined (__GNUC__)
+# if ! (__GNUC__ > 4 \
+        || (__GNUC__ == 4 && (__GNUC_MINOR__ > 1 \
+                              || (__GNUC_MINOR__ == 1 && __GNUC_PATCHLEVEL__ > 2))))
+#  undef GNULIB_NAMESPACE
+#  define GNULIB_NAMESPACE
+#  warning "disabling GNULIB_NAMESPACE for signal functions -- consider upgrading to a current version of GCC"
+# endif
+#endif
+
 static void
 block_or_unblock_signal (int how, int sig)
 {
 #if ! defined (__WIN32__) || defined (__CYGWIN__)
   // Blocking/unblocking signals at thread level is only supported
   // on platform with fully compliant POSIX threads. This is not
   // supported on Win32. Moreover, we have to make sure that SIGINT
   // handler is not installed before calling AllocConsole: installing
   // a SIGINT handler internally calls SetConsoleCtrlHandler, which
   // must be called after AllocConsole to be effective.
 
   sigset_t signal_mask;
 
-  sigemptyset (&signal_mask);
+  GNULIB_NAMESPACE::sigemptyset (&signal_mask);
 
-  sigaddset (&signal_mask, sig);
+  GNULIB_NAMESPACE::sigaddset (&signal_mask, sig);
 
   pthread_sigmask (how, &signal_mask, 0);
 #endif
 }
 
 void
 octave_thread_manager::block_interrupt_signal (void)
 {
