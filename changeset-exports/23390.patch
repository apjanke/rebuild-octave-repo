# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1492018681 14400
#      Wed Apr 12 13:38:01 2017 -0400
# Node ID 1ae9f4c1f48a9549bdd424b1f90d855579c8ac85
# Parent  f0eb5d4431b774a635d49be8a474607accd53ba3
define all suitesparse NAME macros in oct-sparse.h

* amd.cc, ccolamd.cc, colamd.cc: Move NAME macros to private
oct-sparse.h header.

diff --git a/libinterp/dldfcn/amd.cc b/libinterp/dldfcn/amd.cc
--- a/libinterp/dldfcn/amd.cc
+++ b/libinterp/dldfcn/amd.cc
@@ -37,22 +37,16 @@ along with Octave; see the file COPYING.
 
 #include "defun-dld.h"
 #include "error.h"
 #include "errwarn.h"
 #include "oct-map.h"
 #include "ov.h"
 #include "ovl.h"
 
-#if defined (OCTAVE_ENABLE_64)
-#  define AMD_NAME(name) amd_l ## name
-#else
-#  define AMD_NAME(name) amd ## name
-#endif
-
 DEFUN_DLD (amd, args, nargout,
            doc: /* -*- texinfo -*-
 @deftypefn  {} {@var{p} =} amd (@var{S})
 @deftypefnx {} {@var{p} =} amd (@var{S}, @var{opts})
 
 Return the approximate minimum degree permutation of a matrix.
 
 This is a permutation such that the Cholesky@tie{}factorization of
diff --git a/libinterp/dldfcn/ccolamd.cc b/libinterp/dldfcn/ccolamd.cc
--- a/libinterp/dldfcn/ccolamd.cc
+++ b/libinterp/dldfcn/ccolamd.cc
@@ -36,24 +36,16 @@ along with Octave; see the file COPYING.
 #include "oct-sparse.h"
 
 #include "defun-dld.h"
 #include "error.h"
 #include "errwarn.h"
 #include "ov.h"
 #include "pager.h"
 
-#if defined (OCTAVE_ENABLE_64)
-#  define CCOLAMD_NAME(name) ccolamd_l ## name
-#  define CSYMAMD_NAME(name) csymamd_l ## name
-#else
-#  define CCOLAMD_NAME(name) ccolamd ## name
-#  define CSYMAMD_NAME(name) csymamd ## name
-#endif
-
 DEFUN_DLD (ccolamd, args, nargout,
            doc: /* -*- texinfo -*-
 @deftypefn  {} {@var{p} =} ccolamd (@var{S})
 @deftypefnx {} {@var{p} =} ccolamd (@var{S}, @var{knobs})
 @deftypefnx {} {@var{p} =} ccolamd (@var{S}, @var{knobs}, @var{cmember})
 @deftypefnx {} {[@var{p}, @var{stats}] =} ccolamd (@dots{})
 
 Constrained column approximate minimum degree permutation.
diff --git a/libinterp/dldfcn/colamd.cc b/libinterp/dldfcn/colamd.cc
--- a/libinterp/dldfcn/colamd.cc
+++ b/libinterp/dldfcn/colamd.cc
@@ -39,24 +39,16 @@ along with Octave; see the file COPYING.
 #include "oct-sparse.h"
 
 #include "defun-dld.h"
 #include "error.h"
 #include "errwarn.h"
 #include "ovl.h"
 #include "pager.h"
 
-#if defined (OCTAVE_ENABLE_64)
-#  define COLAMD_NAME(name) colamd_l ## name
-#  define SYMAMD_NAME(name) symamd_l ## name
-#else
-#  define COLAMD_NAME(name) colamd ## name
-#  define SYMAMD_NAME(name) symamd ## name
-#endif
-
 // The symmetric column elimination tree code take from the Davis LDL code.
 // Copyright given elsewhere in this file.
 static void
 symetree (const octave_idx_type *ridx, const octave_idx_type *cidx,
           octave_idx_type *Parent, octave_idx_type *P, octave_idx_type n)
 {
   OCTAVE_LOCAL_BUFFER (octave_idx_type, Flag, n);
   OCTAVE_LOCAL_BUFFER (octave_idx_type, Pinv, (P ? n : 0));
diff --git a/liboctave/util/oct-sparse.h b/liboctave/util/oct-sparse.h
--- a/liboctave/util/oct-sparse.h
+++ b/liboctave/util/oct-sparse.h
@@ -30,36 +30,16 @@ along with Octave; see the file COPYING.
 #elif defined (HAVE_UFSPARSE_AMD_H)
 #  include <ufsparse/amd.h>
 #elif defined (HAVE_AMD_AMD_H)
 #  include <amd/amd.h>
 #elif defined (HAVE_AMD_H)
 #  include <amd.h>
 #endif
 
-#if defined (HAVE_SUITESPARSE_UMFPACK_H)
-#  include <suitesparse/umfpack.h>
-#elif defined (HAVE_UFSPARSE_UMFPACK_H)
-#  include <ufsparse/umfpack.h>
-#elif defined (HAVE_UMFPACK_UMFPACK_H)
-#  include <umfpack/umfpack.h>
-#elif defined (HAVE_UMFPACK_H)
-#  include <umfpack.h>
-#endif
-
-#if defined (HAVE_SUITESPARSE_COLAMD_H)
-#  include <suitesparse/colamd.h>
-#elif defined (HAVE_UFSPARSE_COLAMD_H)
-#  include <ufsparse/colamd.h>
-#elif defined (HAVE_COLAMD_COLAMD_H)
-#  include <colamd/colamd.h>
-#elif defined (HAVE_COLAMD_H)
-#  include <colamd.h>
-#endif
-
 #if defined (HAVE_SUITESPARSE_CCOLAMD_H)
 #  include <suitesparse/ccolamd.h>
 #elif defined (HAVE_UFSPARSE_CCOLAMD_H)
 #  include <ufsparse/ccolamd.h>
 #elif defined (HAVE_CCOLAMD_CCOLAMD_H)
 #  include <ccolamd/ccolamd.h>
 #elif defined (HAVE_CCOLAMD_H)
 #  include <ccolamd.h>
@@ -70,50 +50,97 @@ along with Octave; see the file COPYING.
 #elif defined (HAVE_UFSPARSE_CHOLMOD_H)
 #  include <ufsparse/cholmod.h>
 #elif defined (HAVE_CHOLMOD_CHOLMOD_H)
 #  include <cholmod/cholmod.h>
 #elif defined (HAVE_CHOLMOD_H)
 #  include <cholmod.h>
 #endif
 
+#if defined (HAVE_SUITESPARSE_COLAMD_H)
+#  include <suitesparse/colamd.h>
+#elif defined (HAVE_UFSPARSE_COLAMD_H)
+#  include <ufsparse/colamd.h>
+#elif defined (HAVE_COLAMD_COLAMD_H)
+#  include <colamd/colamd.h>
+#elif defined (HAVE_COLAMD_H)
+#  include <colamd.h>
+#endif
+
 #if defined (HAVE_SUITESPARSE_CS_H)
 #  include <suitesparse/cs.h>
 #elif defined (HAVE_UFSPARSE_CS_H)
 #  include <ufsparse/cs.h>
 #elif defined (HAVE_CXSPARSE_CS_H)
 #  include <cxsparse/cs.h>
 #elif defined (HAVE_CS_H)
 #  include <cs.h>
 #endif
 
-#if (defined (HAVE_SUITESPARSE_CHOLMOD_H)       \
-     || defined (HAVE_UFSPARSE_CHOLMOD_H)       \
-     || defined (HAVE_CHOLMOD_CHOLMOD_H)        \
-     || defined (HAVE_CHOLMOD_H))
-#  if defined (OCTAVE_ENABLE_64)
-#    define CHOLMOD_NAME(name) cholmod_l_ ## name
-#  else
-#    define CHOLMOD_NAME(name) cholmod_ ## name
-#  endif
+#if defined (HAVE_SUITESPARSE_UMFPACK_H)
+#  include <suitesparse/umfpack.h>
+#elif defined (HAVE_UFSPARSE_UMFPACK_H)
+#  include <ufsparse/umfpack.h>
+#elif defined (HAVE_UMFPACK_UMFPACK_H)
+#  include <umfpack/umfpack.h>
+#elif defined (HAVE_UMFPACK_H)
+#  include <umfpack.h>
 #endif
 
 // Cope with new SuiteSparse versions
 
 #if defined (SUITESPARSE_VERSION)
 #  if (SUITESPARSE_VERSION >= SUITESPARSE_VER_CODE (4, 3))
 #    define SUITESPARSE_NAME(name) SuiteSparse_ ## name
 #    define SUITESPARSE_ASSIGN_FPTR(f_name, f_var, f_assign) (SuiteSparse_config.f_name = f_assign)
 #    define SUITESPARSE_ASSIGN_FPTR2(f_name, f_var, f_assign) (SuiteSparse_config.f_name = SUITESPARSE_NAME (f_assign))
 #  else
 #    define SUITESPARSE_ASSIGN_FPTR(f_name, f_var, f_assign) (f_var = f_assign)
 #    define SUITESPARSE_ASSIGN_FPTR2(f_name, f_var, f_assign) (f_var = CHOLMOD_NAME (f_assign))
 #  endif
 #endif
 
+// Function names depend on integer type.
+
+#if defined (HAVE_AMD)
+#  if defined (OCTAVE_ENABLE_64)
+#    define AMD_NAME(name) amd_l ## name
+#  else
+#    define AMD_NAME(name) amd ## name
+#  endif
+#endif
+
+#if defined (HAVE_CCOLAMD)
+#  if defined (OCTAVE_ENABLE_64)
+#    define CCOLAMD_NAME(name) ccolamd_l ## name
+#    define CSYMAMD_NAME(name) csymamd_l ## name
+#  else
+#    define CCOLAMD_NAME(name) ccolamd ## name
+#    define CSYMAMD_NAME(name) csymamd ## name
+#  endif
+#endif
+
+#if defined (HAVE_CHOLMOD)
+#  if defined (OCTAVE_ENABLE_64)
+#    define CHOLMOD_NAME(name) cholmod_l_ ## name
+#  else
+#    define CHOLMOD_NAME(name) cholmod_ ## name
+#  endif
+#endif
+
+#if defined (HAVE_COLAMD)
+#  if defined (OCTAVE_ENABLE_64)
+#    define COLAMD_NAME(name) colamd_l ## name
+#    define SYMAMD_NAME(name) symamd_l ## name
+#  else
+#    define COLAMD_NAME(name) colamd ## name
+#    define SYMAMD_NAME(name) symamd ## name
+#  endif
+#endif
+
 #if defined (HAVE_CXSPARSE)
 #  if defined (OCTAVE_ENABLE_64)
 #    define CXSPARSE_DNAME(name) cs_dl ## name
 #    define CXSPARSE_ZNAME(name) cs_cl ## name
 #  else
 #    define CXSPARSE_DNAME(name) cs_di ## name
 #    define CXSPARSE_ZNAME(name) cs_ci ## name
 #  endif
