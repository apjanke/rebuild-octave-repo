# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1497569824 14400
#      Thu Jun 15 19:37:04 2017 -0400
# Branch stable
# Node ID fecca33388f738b47c4c3cd232714d28fed5a672
# Parent  ff6bcf3d7e1fbaf6bc0bddd69587c801c62723d8
also run unwind protect cleanup code on interrupt exceptions (bug #51209)

* pt-eval.cc (tree_evaluator::visit_unwind_protect_command):
Also perform cleanup block for interrupt exceptions.

diff --git a/libinterp/parse-tree/pt-eval.cc b/libinterp/parse-tree/pt-eval.cc
--- a/libinterp/parse-tree/pt-eval.cc
+++ b/libinterp/parse-tree/pt-eval.cc
@@ -983,16 +983,23 @@ namespace octave
             // Run the cleanup code on exceptions, so that it is run even
             // in case of interrupt or out-of-memory.
             do_unwind_protect_cleanup_code (cleanup_code);
 
             // If an error occurs inside the cleanup code, a new
             // exception will be thrown instead of the original.
             throw;
           }
+        catch (const octave::interrupt_exception&)
+          {
+            // The comments above apply here as well.
+            recover_from_exception ();
+            do_unwind_protect_cleanup_code (cleanup_code);
+            throw;
+          }
 
         // Also execute the unwind_protect_cleanump code if the
         // unwind_protect block runs without error.
         do_unwind_protect_cleanup_code (cleanup_code);
       }
   }
 
   void
