# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1468775878 14400
#      Sun Jul 17 13:17:58 2016 -0400
# Node ID 27b63b55bacb2dea24c7869ea9f7464f32e68314
# Parent  fdbe2eab2aefba8a13d1dbbe5efe1f94ee34f67b
use r1mach for single precision code (partial fix for bug #48531)

* slsode.f: Use R1MACH, not D1MACH.

diff --git a/liboctave/cruft/odepack/slsode.f b/liboctave/cruft/odepack/slsode.f
--- a/liboctave/cruft/odepack/slsode.f
+++ b/liboctave/cruft/odepack/slsode.f
@@ -1110,17 +1110,17 @@ C
 C     If the user supplies this function, it should return a nonnegative
 C     value of SVNORM suitable for use in the error control in SLSODE.
 C     None of the arguments should be altered by SVNORM.  For example, a
 C     user-supplied SVNORM routine might:
 C     - Substitute a max-norm of (v(i)*w(i)) for the rms-norm, or
 C     - Ignore some components of v in the norm, with the effect of
 C       suppressing the error control on those components of Y.
 C  ---------------------------------------------------------------------
-C***ROUTINES CALLED  SEWSET, SINTDY, D1MACH, SSTODE, SVNORM, XERRWD
+C***ROUTINES CALLED  SEWSET, SINTDY, R1MACH, SSTODE, SVNORM, XERRWD
 C***COMMON BLOCKS    SLS001
 C***REVISION HISTORY  (YYYYMMDD)
 C 19791129  DATE WRITTEN
 C 19791213  Minor changes to declarations; DELP init. in STODE.
 C 19800118  Treat NEQ as array; integer declarations added throughout;
 C           minor changes to prologue.
 C 19800306  Corrected TESCO(1,NQP1) setting in CFODE.
 C 19800519  Corrected access of YH on forced order reduction;
@@ -1189,27 +1189,27 @@ C  SSOLSY   manages solution of linear s
 C  SEWSET   sets the error weight vector EWT before each step.
 C  SVNORM   computes the weighted R.M.S. norm of a vector.
 C  SSRCOM   is a user-callable routine to save and restore
 C           the contents of the internal Common block.
 C  DGETRF AND DGETRS   ARE ROUTINES FROM LAPACK FOR SOLVING FULL
 C           SYSTEMS OF LINEAR ALGEBRAIC EQUATIONS.
 C  DGBTRF AND DGBTRS   ARE ROUTINES FROM LAPACK FOR SOLVING BANDED
 C           LINEAR SYSTEMS.
-C  D1MACH   computes the unit roundoff in a machine-independent manner.
+C  R1MACH   computes the unit roundoff in a machine-independent manner.
 C  XERRWD, XSETUN, XSETF, IXSAV, IUMACH   handle the printing of all
 C           error messages and warnings.  XERRWD is machine-dependent.
-C Note: SVNORM, D1MACH, IXSAV, and IUMACH are function routines.
+C Note: SVNORM, R1MACH, IXSAV, and IUMACH are function routines.
 C All the others are subroutines.
 C
 C**End
 C
 C  Declare externals.
       EXTERNAL SPREPJ, SSOLSY
-      REAL D1MACH, SVNORM
+      REAL R1MACH, SVNORM
 C
 C  Declare all other variables.
       INTEGER INIT, MXSTEP, MXHNIL, NHNIL, NSLAST, NYH, IOWNS,
      1   ICF, IERPJ, IERSL, JCUR, JSTART, KFLAG, L,
      2   LYH, LEWT, LACOR, LSAVF, LWM, LIWM, METH, MITER,
      3   MAXORD, MAXCOR, MSBP, MXNCF, N, NQ, NST, NFE, NJE, NQU
       INTEGER I, I1, I2, IFLAG, IMXER, KGO, LF0,
      1   LENIW, LENRW, LENWM, ML, MORD, MU, MXHNL0, MXSTP0
@@ -1362,17 +1362,17 @@ C NEQ was reduced.  Zero part of YH to a
       GO TO 200
 C-----------------------------------------------------------------------
 C Block C.
 C The next block is for the initial call only (ISTATE = 1).
 C It contains all remaining initializations, the initial call to F,
 C and the calculation of the initial step size.
 C The error weights in EWT are inverted after being loaded.
 C-----------------------------------------------------------------------
- 100  UROUND = D1MACH(4)
+ 100  UROUND = R1MACH(4)
       TN = T
       IF (ITASK .NE. 4 .AND. ITASK .NE. 5) GO TO 110
       TCRIT = RWORK(1)
       IF ((TCRIT - TOUT)*(TOUT - T) .LT. 0.0E0) GO TO 625
       IF (H0 .NE. 0.0E0 .AND. (T + H0 - TCRIT)*H0 .GT. 0.0E0)
      1   H0 = TCRIT - T
  110  JSTART = 0
       IF (MITER .GT. 0) RWORK(LWM) = SQRT(UROUND)
