# HG changeset patch
# User jwe
# Date 781980706 0
#      Wed Oct 12 16:51:46 1994 +0000
# Node ID f7b9920e968b7b9da1a062026d538ad396e7d17b
# Parent  ac49764105cfdaf9b4267d1f59563de243cb4929
[project @ 1994-10-12 16:51:46 by jwe]

diff --git a/src/octave.cc b/src/octave.cc
--- a/src/octave.cc
+++ b/src/octave.cc
@@ -107,16 +107,19 @@ char *load_path = 0;
 char *info_file = 0;
 
 // Name of the editor to be invoked by the edit_history command.
 char *editor = 0;
 
 // If nonzero, don't do fancy line editing.
 int no_line_editing = 0;
 
+// If nonzero, print verbose info in some cases.
+int verbose_flag = 0;
+
 // Command number, counting from the beginning of this session.
 int current_command_number = 1;
 
 // Nonzero means we are exiting via the builtin exit or quit functions.
 int quitting_gracefully = 0;
 
 // Current command to execute.
 tree_statement_list *global_command = 0;
@@ -152,37 +155,38 @@ static int read_init_files = 1;
 static int reading_startup_message_printed = 0;
 
 // Nonzero means we don\'t print the usual startup message.
 // (--quiet; --silent; -q)
 static int inhibit_startup_message = 0;
 
 // Usage message
 static const char *usage_string = 
-  "octave [-?dfhiqvx] [-p path] [--debug] [--help] [--interactive]\n\
-         [--info-file file] [--norc] [--path path] [--quiet] [--version]\n\
-         [--echo-commands] [file]";
+  "octave [-?Vdfhiqvx] [-p path] [--debug] [--help] [--interactive]\n\
+         [--info-file file] [--norc] [--path path] [--quiet] [--verbose]\n\
+         [--version] [--echo-commands] [file]";
 
 // This is here so that it\'s more likely that the usage message and
 // the real set of options will agree.
-static const char *short_opts = "?dfhip:qvx";
+static const char *short_opts = "?Vdfhip:qvx";
 
 // Long options.
 #define INFO_FILE_OPTION 1
 static struct option long_opts[] =
   {
     { "debug", 0, 0, 'd' },
     { "help", 0, 0, 'h' },
     { "interactive", 0, 0, 'i' },
     { "info-file", 1, 0, INFO_FILE_OPTION },
     { "norc", 0, 0, 'f' },
     { "ignore-init-file", 0, 0, 'f' },
     { "path", 1, 0, 'p' },
     { "quiet", 0, 0, 'q' },
     { "silent", 0, 0, 'q' },
+    { "verbose", 0, 0, 'V' },
     { "version", 0, 0, 'v' },
     { "echo-commands", 0, 0, 'x' },
     { 0, 0, 0, 0 }
   };
 
 // Initialize some global variables for later use.
 
 static void
@@ -286,17 +290,17 @@ parse_and_execute (char *s, int print, i
       unwind_protect_int (echo_input);
 
       input_line_number = 0;
       current_input_column = 1;
       echo_input = 0;
 
       if (verbose)
 	{
-	  cout << "Reading commands from " << s << " ... ";
+	  cout << "reading commands from " << s << " ... ";
 	  reading_startup_message_printed = 1;
 	  cout.flush ();
 	}
 
       parse_and_execute (f, print);
 
       if (verbose)
 	cout << "done." << endl;
@@ -310,17 +314,17 @@ parse_and_execute (char *s, int print, i
 static void
 execute_startup_files (void)
 {
   begin_unwind_frame ("execute_startup_files");
 
   unwind_protect_int (input_from_startup_file);
   input_from_startup_file = 1;
 
-  int verbose = ! inhibit_startup_message;
+  int verbose = (verbose_flag && ! inhibit_startup_message);
 
 // Execute commands from the site-wide configuration file.
 
   char *sd = get_site_defaults ();
 
   parse_and_execute (sd, 0, verbose);
 
 // Try to execute commands from $HOME/.octaverc and ./.octaverc.
@@ -447,16 +451,20 @@ main (int argc, char **argv)
 
   initialize_globals (argv[0]);
 
   int optc;
   while ((optc = getopt_long (argc, argv, short_opts, long_opts, 0)) != EOF)
     {
       switch (optc)
 	{
+	case 'V':
+	  verbose_flag++;
+	  break;
+
 	case 'd':
 	  yydebug++;
 	  break;
 
 	case 'f':
 	  read_init_files = 0;
 	  break;
 
