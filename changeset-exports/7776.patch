# HG changeset patch
# User David Bateman <dbateman@free.fr>
# Date 1210781038 -7200
#      Wed May 14 18:03:58 2008 +0200
# Node ID 4c3665e65bcd28dc694d9a6ba7c26bdb3247d192
# Parent  c10d77387d96f1185e565284b5e92471af7e43fc
Typo DPBCON -> DGBCON

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+2008-05-19  David Bateman  <dbateman@free.fr>
+
+	* dSparse.cc: Replace some DGBCON with GPBCON where they are
+	incorrectly used.
+
 2008-05-13  David Bateman  <dbateman@free.fr>
 
 	* idx-vector.cc (IDX_VEC_REP::idx_vector_rep (const boolNDArray&)):
 	If len is zero size the index vector in the same manner as if len
 	is not zero.
 
 2008-05-05  John W. Eaton  <jwe@octave.org>
 
diff --git a/liboctave/dSparse.cc b/liboctave/dSparse.cc
--- a/liboctave/dSparse.cc
+++ b/liboctave/dSparse.cc
@@ -4452,17 +4452,17 @@ SparseMatrix::bsolve (MatrixType &mattyp
 	    {
 	      if (calc_cond)
 		{
 		  Array<double> z (3 * nr);
 		  double *pz = z.fortran_vec ();
 		  Array<octave_idx_type> iz (nr);
 		  octave_idx_type *piz = iz.fortran_vec ();
 
-		  F77_XFCN (dpbcon, DGBCON, 
+		  F77_XFCN (dpbcon, DPBCON, 
 		    (F77_CONST_CHAR_ARG2 (&job, 1),
 		     nr, n_lower, tmp_data, ldm,
 		     anorm, rcond, pz, piz, err
 		     F77_CHAR_ARG_LEN (1)));
 
 		  if (err != 0) 
 		    err = -2;
 
@@ -4700,17 +4700,17 @@ SparseMatrix::bsolve (MatrixType &mattyp
 	    {
 	      if (calc_cond)
 		{
 		  Array<double> z (3 * nr);
 		  double *pz = z.fortran_vec ();
 		  Array<octave_idx_type> iz (nr);
 		  octave_idx_type *piz = iz.fortran_vec ();
 
-		  F77_XFCN (dpbcon, DGBCON, 
+		  F77_XFCN (dpbcon, DPBCON, 
 		    (F77_CONST_CHAR_ARG2 (&job, 1),
 		     nr, n_lower, tmp_data, ldm,
 		     anorm, rcond, pz, piz, err
 		     F77_CHAR_ARG_LEN (1)));
 
 		  if (err != 0) 
 		    err = -2;
 
@@ -5020,17 +5020,17 @@ SparseMatrix::bsolve (MatrixType &mattyp
 	    {
 	      if (calc_cond)
 		{
 		  Array<double> z (3 * nr);
 		  double *pz = z.fortran_vec ();
 		  Array<octave_idx_type> iz (nr);
 		  octave_idx_type *piz = iz.fortran_vec ();
 
-		  F77_XFCN (dpbcon, DGBCON, 
+		  F77_XFCN (dpbcon, DPBCON, 
 		    (F77_CONST_CHAR_ARG2 (&job, 1),
 		     nr, n_lower, tmp_data, ldm,
 		     anorm, rcond, pz, piz, err
 		     F77_CHAR_ARG_LEN (1)));
 
 		  if (err != 0) 
 		    err = -2;
 
@@ -5171,17 +5171,17 @@ SparseMatrix::bsolve (MatrixType &mattyp
 	      if (calc_cond)
 		{
 		  char job = '1';
 		  Array<double> z (3 * nr);
 		  double *pz = z.fortran_vec ();
 		  Array<octave_idx_type> iz (nr);
 		  octave_idx_type *piz = iz.fortran_vec ();
 
-		  F77_XFCN (dpbcon, DGBCON, 
+		  F77_XFCN (dpbcon, DPBCON, 
 		    (F77_CONST_CHAR_ARG2 (&job, 1),
 		     nr, n_lower, tmp_data, ldm,
 		     anorm, rcond, pz, piz, err
 		     F77_CHAR_ARG_LEN (1)));
 
 		  if (err != 0) 
 		    err = -2;
 
@@ -5320,17 +5320,17 @@ SparseMatrix::bsolve (MatrixType &mattyp
 	    {
 	      if (calc_cond)
 		{
 		  Array<double> z (3 * nr);
 		  double *pz = z.fortran_vec ();
 		  Array<octave_idx_type> iz (nr);
 		  octave_idx_type *piz = iz.fortran_vec ();
 
-		  F77_XFCN (dpbcon, DGBCON, 
+		  F77_XFCN (dpbcon, DPBCON, 
 		    (F77_CONST_CHAR_ARG2 (&job, 1),
 		     nr, n_lower, tmp_data, ldm,
 		     anorm, rcond, pz, piz, err
 		     F77_CHAR_ARG_LEN (1)));
 
 		  if (err != 0) 
 		    err = -2;
 
