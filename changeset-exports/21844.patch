# HG changeset patch
# User Daniel J Sebald <daniel.sebald@ieee.org>
# Date 1465452137 18000
#      Thu Jun 09 01:02:17 2016 -0500
# Node ID c0a552e71cebe3b5ebd42b83c2c9e816dffa60c4
# Parent  f7a57b07c81d53068a66286e3ebfc9694ec7ed9a
Fix gnuplot toolkit text object bug introduced by changeset 7fe10fcd8370.

* __gnuplot_draw_axes.m: Pass axis reference rather than number of dimensions
  into do_text().
  (do_text): Change input variable nd to hax.  Use hax rather than text
  object's parent for retrieving 'yaxislocation' property.  Simplify 2D/3D
  label command construction to common elements with the z-coordinate string
  created separately.

diff --git a/scripts/plot/util/private/__gnuplot_draw_axes__.m b/scripts/plot/util/private/__gnuplot_draw_axes__.m
--- a/scripts/plot/util/private/__gnuplot_draw_axes__.m
+++ b/scripts/plot/util/private/__gnuplot_draw_axes__.m
@@ -181,17 +181,17 @@ function __gnuplot_draw_axes__ (h, plot_
         end_unwind_protect
       endif
       t = get(axis_obj.title);
       axispos = axis_obj.position;
       screenpos = t.position;
       screenpos(1) = axispos(1)+screenpos(1)*axispos(3);
       screenpos(2) = axispos(2)+screenpos(2)*axispos(4);
       fputs (plot_stream, "unset title;\n");
-      do_text (plot_stream, gnuplot_term, enhanced, t, nd, screenpos);
+      do_text (plot_stream, gnuplot_term, enhanced, t, h, screenpos);
     endif
   endif
 
   if (! isempty (axis_obj.xlabel))
     t = get (axis_obj.xlabel);
     angle = t.rotation;
     colorspec = get_text_colorspec (t.color);
     if (isempty (t.string))
@@ -1312,17 +1312,17 @@ function __gnuplot_draw_axes__ (h, plot_
               data{data_idx} = zz;
               withclause{data_idx} = sprintf ("with %s %s %s",
                                               style{i_stl}, scmd, sopt);
             endfor
           endfor
         endif
 
       case "text"
-        do_text (plot_stream, gnuplot_term, enhanced, obj, nd);
+        do_text (plot_stream, gnuplot_term, enhanced, obj, h);
 
       case "hggroup"
         ## Push group children into the kid list.
         if (isempty (kids))
           kids = obj.children;
         elseif (! isempty (obj.children))
           kids = [kids; obj.children];
         endif
@@ -2663,32 +2663,32 @@ function retval = __do_enhanced_option__
       retval = "noenhanced";
     else
       retval = "enhanced";
     endif
   endif
 
 endfunction
 
-function do_text (stream, gpterm, enhanced, obj, nd, screenpos)
+function do_text (stream, gpterm, enhanced, obj, hax, screenpos)
 
   [label, f, s] = __maybe_munge_text__ (enhanced, obj, "string");
   fontspec = create_fontspec (f, s, gpterm);
   lpos = obj.position;
   halign = obj.horizontalalignment;
   valign = obj.verticalalignment;
   angle = obj.rotation;
   units = obj.units;
   color = obj.color;
   if (nargin > 5)
     units = "screen";
     lpos = screenpos;
   elseif (strcmpi (units, "normalized"))
     units = "graph";
-  elseif (strcmp (get (obj.parent, "yaxislocation"), "right")
+  elseif (strcmp (get (hax, "yaxislocation"), "right")
           && strcmp (units, "data"))
     units = "second";
   else
     units = "";
   endif
 
   if (isnumeric (color))
     colorspec = get_text_colorspec (color);
@@ -2716,30 +2716,26 @@ function do_text (stream, gpterm, enhanc
   ## Gnuplot's Character units are different for x/y and vary with
   ## fontsize.  The aspect ratio of 1:1.7 was determined by experiment
   ## to work for eps/ps/etc.  For the MacOS aqua terminal a value of 2.5
   ## is needed.  However, the difference is barely noticeable.
   dx_and_dy = [(-dy * sind (angle)), (dy * cosd (angle))] .* [1.7 1];
 
   ## FIXME: Multiline text produced the gnuplot
   ##        "warning: ft_render: skipping glyph"
-  if (nd == 3)
-    ## This produces the desired vertical alignment in 3D.
-    fprintf (stream,
-             "set label \"%s\" at %s %.15e,%.15e,%.15e %s rotate by %f offset character %f,%f %s %s front %s;\n",
-             undo_string_escapes (label), units, lpos(1),
-             lpos(2), lpos(3), halign, angle, dx_and_dy, fontspec,
-             __do_enhanced_option__ (enhanced, obj), colorspec);
+  if (__calc_dimensions__ (hax) == 3)
+    zstr = sprintf(",%.15e", lpos(3));
   else
-    fprintf (stream,
-             "set label \"%s\" at %s %.15e,%.15e %s rotate by %f offset character %f,%f %s %s front %s;\n",
-             undo_string_escapes (label), units,
-             lpos(1), lpos(2), halign, angle, dx_and_dy, fontspec,
-             __do_enhanced_option__ (enhanced, obj), colorspec);
+    zstr = "";
   endif
+  fprintf (stream,
+           "set label \"%s\" at %s %.15e,%.15e%s %s rotate by %f offset character %f,%f %s %s front %s;\n",
+           undo_string_escapes (label), units, lpos(1),
+           lpos(2), zstr, halign, angle, dx_and_dy, fontspec,
+           __do_enhanced_option__ (enhanced, obj), colorspec);
 
 endfunction
 
 function maybe_do_xtick_mirror (plot_stream, axis_obj)
 
   if (! isempty(axis_obj.xtick))
     fprintf (plot_stream, "unset x2tics; set xtics %s nomirror\n",
                           axis_obj.tickdir);
