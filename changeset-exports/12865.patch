# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1311183719 25200
#      Wed Jul 20 10:41:59 2011 -0700
# Node ID a4d1581f9e7296e41ddf49144564624dbf2af009
# Parent  213c791292a66b0b8f3ab1413df3eae7e14eec50
Return correct struct for nargchk, nargoutchk (Bug #33808).

* nargchk.m, nargoutchk.m: Return struct with message and identifier fields
when number of arguments is valid, not just an empty struct.

diff --git a/scripts/general/nargchk.m b/scripts/general/nargchk.m
--- a/scripts/general/nargchk.m
+++ b/scripts/general/nargchk.m
@@ -50,31 +50,31 @@ function msg = nargchk (minargs, maxargs
     msg.identifier = "Octave:nargchk:not-enough-inputs";
   elseif (nargs > maxargs)
     msg.message = "too many input arguments";
     msg.identifier = "Octave:nargchk:too-many-inputs";
   endif
 
   if (strcmpi (outtype, "string"))
     msg = msg.message;
-  elseif (isempty (msg.message))
-    msg = struct ();
   endif
 
 endfunction
 
 
 ## Tests
-%!shared stmin, stmax
+%!shared stnul, stmin, stmax
+%!  stnul = struct ("message", "",
+%!                  "identifier", "");
 %!  stmin = struct ("message", "not enough input arguments",
 %!                  "identifier", "Octave:nargchk:not-enough-inputs");
 %!  stmax = struct ("message", "too many input arguments",
 %!                  "identifier", "Octave:nargchk:too-many-inputs");
 %!assert (nargchk (0, 1, 0), "")
 %!assert (nargchk (0, 1, 1), "")
 %!assert (nargchk (1, 1, 0), "not enough input arguments")
 %!assert (nargchk (0, 1, 2), "too many input arguments")
 %!assert (nargchk (0, 1, 2, "string"), "too many input arguments")
 ## Struct outputs
-%!assert (nargchk (0, 1, 0, "struct"), struct())
-%!assert (nargchk (0, 1, 1, "struct"), struct())
+%!assert (nargchk (0, 1, 0, "struct"), stnul)
+%!assert (nargchk (0, 1, 1, "struct"), stnul)
 %!assert (nargchk (1, 1, 0, "struct"), stmin)
 %!assert (nargchk (0, 1, 2, "struct"), stmax)
diff --git a/scripts/general/nargoutchk.m b/scripts/general/nargoutchk.m
--- a/scripts/general/nargoutchk.m
+++ b/scripts/general/nargoutchk.m
@@ -50,31 +50,32 @@ function msg = nargoutchk (minargs, maxa
     msg.identifier = "Octave:nargoutchk:not-enough-outputs";
   elseif (nargs > maxargs)
     msg.message = "too many output arguments";
     msg.identifier = "Octave:nargoutchk:too-many-outputs";
   endif
 
   if (strcmpi (outtype, "string"))
     msg = msg.message;
-  elseif (isempty (msg.message))
-    msg = struct ();
   endif
 
 endfunction
 
 
 ## Tests
-%!shared stmin, stmax
+%!shared stnul, stmin, stmax
+%!  stnul = struct ("message", "",
+%!                  "identifier", "");
 %!  stmin = struct ("message", "not enough output arguments",
 %!                  "identifier", "Octave:nargoutchk:not-enough-outputs");
 %!  stmax = struct ("message", "too many output arguments",
 %!                  "identifier", "Octave:nargoutchk:too-many-outputs");
 %!assert (nargoutchk (0, 1, 0), "")
 %!assert (nargoutchk (0, 1, 1), "")
 %!assert (nargoutchk (1, 1, 0), "not enough output arguments")
 %!assert (nargoutchk (0, 1, 2), "too many output arguments")
 %!assert (nargoutchk (0, 1, 2, "string"), "too many output arguments")
 ## Struct outputs
-#%!assert (nargoutchk (0, 1, 0, "struct"), struct())
-#%!assert (nargoutchk (0, 1, 1, "struct"), struct())
-#%!assert (nargoutchk (1, 1, 0, "struct"), stmin)
-#%!assert (nargoutchk (0, 1, 2, "struct"), stmax)
+%!assert (nargoutchk (0, 1, 0, "struct"), stnul)
+%!assert (nargoutchk (0, 1, 1, "struct"), stnul)
+%!assert (nargoutchk (1, 1, 0, "struct"), stmin)
+%!assert (nargoutchk (0, 1, 2, "struct"), stmax)
+
