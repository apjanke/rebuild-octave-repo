# HG changeset patch
# User jwe
# Date 1200338066 0
#      Mon Jan 14 19:14:26 2008 +0000
# Node ID 74d64ead0cd7cd001243cef038075b9f1d116023
# Parent  39160daffccbd194364e92c5aff6fe59dcbcf033
[project @ 2008-01-14 19:12:45 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -2,17 +2,26 @@ 2008-01-14  Kai Habel  <kai.habel@gmx.de
 
 	* graphics.h.in (class patch::properties): New properties:
 	cdatamapping, facevertexalphadata, facevertexcdata, vertexnormals,
 	normalmode, facelighting, edgealpha, edgelighting,
 	backfacelighting, ambientstrength, diffusestrength,
 	specularstrength, specularexponent, specularcolorreflectance,
 	erasemode.
 
-2008-01-14  Michael Goffioul <michael.goffioul@gmail.com>
+2008-01-14  Michael Goffioul  <michael.goffioul@gmail.com>
+
+	* graphics.h.in (gh_manager::do_make_graphics_handle,
+	gh_manager::make_graphics_handle): New boolean parameter
+	do_createfcn.
+	* graphics.cc (xcreatefcn): New static function.
+	(gh_manager::do_make_graphics_handle): New boolean parameter
+	do_createfcn.  Execute createfcn callback accordingly.
+	(make_graphics_object, F__go_figure__): Use do_createfcn
+	parameter and call xcreatefcn
 
 	* genprops.awk (emit_get_callback): Pass user data to execute method.
 	* graphics.cc (execute_callback): New static function.
 	(callback_property::validate): Make it work.
 	(callback_property::execute): Make it work.
 	(gh_manager::do_free): Execute delete function here.
 	* graphics.h.in (callback_property::execute): Fix decl.
 	(base_properties::buttondownfcn, base_properties::createfcn,
@@ -24,23 +33,23 @@ 2008-01-14  Michael Goffioul <michael.go
 2007-12-13  Shai Ayal  <shaiay@users.sourceforge.net>
 
 	* graphics.h.in, graphics.cc (class base_properties): New
 	properties: busyaction, buttondownfcn, clipping, createfcn,
 	deletefcn, handlevisibility, hittest, interruptible, selected,
 	selectionhighlight, uicontextmenu, userdata, visible.
 	(class figure): Delete visible property.
 
-2008-01-13  Michael Goffioul <michael.goffioul@gmail.com>
+2008-01-13  Michael Goffioul  <michael.goffioul@gmail.com>
 
 	* grahpics.h.in: Sprinkle with OCTINTERP_API as needed.
 	(axes::properties::xaxislocation): Allow value of zero.
 	(axes::properties::yaxislocation): Likewise.
 
-2008-01-12  Michael Goffioul <michael.goffioul@gmail.com>
+2008-01-12  Michael Goffioul  <michael.goffioul@gmail.com>
 
 	* Makefile.in (distclean): Delete graphics-props.cc.
 
 	* genprops.awk: Handle new graphics property classes.
 
 	* graphics.h.in, graphics.cc: Adapt for new specific property types.
 
 2008-01-12  John W. Eaton  <jwe@octave.org>
@@ -86,17 +95,17 @@ 2008-01-07  John W. Eaton  <jwe@octave.o
 	* oct-stream.cc (printf_value_cache::printf_value_cache):
 	Reject structs, cells, objects, and lists.
 	(octave_base_stream::do_printf): Quit early if printf_value_cache
 	constructor fails.
 
 	* parse.y (make_anon_fcn_handle): Don't attempt to convert
 	expression to assignment to __retval__.
 
-2008-01-07  Michael Goffioul <michael.goffioul@gmail.com>
+2008-01-07  Michael Goffioul  <michael.goffioul@gmail.com>
 
 	* ov-builtin.h (octave_builtin): Tag with OCTINTERP_API.
 	* ov-dld-fcn.h (octave_dld_function): Likewise.
 
 	* ov-dld-fcn.cc (octave_dld_function::create): New function.
 	* ov-dld-fcn.h: Provide decl.
 	* defun.h (DEFINE_FUNX_INSTALLER_FUN3): Call it instead of
 	creating a new octave_dld_function object directly.
@@ -899,17 +908,17 @@ 2007-11-26  David Bateman  <dbateman@fre
 	* graphics.cc (class figure): ditto.
 
 2007-11-26  Shai Ayal  <shaiay@users.sourceforge.net>
 
 	* graphics.cc (string_properties): delete class 
 	(property_name): rename class to caseless_str. 
 	(radio_values::possible_vals): change type to caseless_str.
 
-2007-11-26  Michael Goffioul <michael.goffioul@gmail.com>
+2007-11-26  Michael Goffioul  <michael.goffioul@gmail.com>
 
 	* builtins.h (install_builtins): Tag with OCTINTERP_API.
 	* toplev.h (octave_interpreter_ready, octave_initialized): Likewise.
 
 2007-11-14  John W. Eaton  <jwe@octave.org>
 
 	* mex.cc (mex::foreign_memlist): New data member.
 	(mex::mark_foreign, mex::unmark_foreign): New functions.
@@ -1035,17 +1044,17 @@ 2007-11-06  Kai Habel  <kai.habel@gmx.de
 2007-11-06  David Bateman  <dbateman@free.fr>
 
 	* data.cc (DATA_REDUCTION): Handle the 'native' and 'double'
 	arguments of the Fsum function.
 	* OPERATORS/op-bm-bm.cc (matrix_to_bool_matrix,
 	scalar_to_bool_matrix): New type conversion functions.
 	(install_bm_bm_ops): Install new type conversions functions.
 
-2007-11-06  Michael Goffioul <michael.goffioul@gmail.com>
+2007-11-06  Michael Goffioul  <michael.goffioul@gmail.com>
 
 	* toplev.cc (Fsystem) [__WIN32__ && ! __CYGWIN__]:
 	Quote the complete command.
 
 2007-11-06  John W. Eaton  <jwe@octave.org>
 
 	* data.cc (Fnorm): New tests.
 
@@ -1110,26 +1119,26 @@ 2007-10-30  David Bateman  <dbateman@fre
 
 	* symtab.cc: Doc fixes for small book format.
 
 2007-10-30  John W. Eaton  <jwe@octave.org>
 
 	* file-io.cc (fopen_mode_to_ios_mode): Handle 'W' as 'w' and 'R'
 	as 'r', but warn about them.
 
-2007-10-29  Thomas Treichl <Thomas.Treichl@gmx.net>
+2007-10-29  Thomas Treichl  <Thomas.Treichl@gmx.net>
 
 	* data.cc: Include sytime.h, sys/types.h, and sys/resource.h.
 
 2007-10-25  John W. Eaton  <jwe@octave.org>
 
 	* graphics.cc (figure::properties::set_currentaxes): 
 	Allow currentfigure to be NaN.
 
-2007-10-25  Michael Goffioul <michael.goffioul@gmail.com>
+2007-10-25  Michael Goffioul  <michael.goffioul@gmail.com>
 
 	* DLD-FUNCTIONS/__contourc__.cc: Use unsigned int instead of uint.
 	(drawcn): Use 1 << k instead of pow (2, k).
 
 2007-10-25  John W. Eaton  <jwe@octave.org>
 
 	* symtab.h (symbol_record::TYPE): Delete trailing comma in enum decl.
 
@@ -1398,17 +1407,17 @@ 2007-10-08  John W. Eaton  <jwe@octave.o
 	* ov-scalar.cc (octave_scalar::save_ascii): Remove warning about
 	reloading inf/nan values.  Delete unused arg, INFNAN_WARNED.
 	* ov-complex.cc (octave_complex::save_ascii): Likewise.
 	* ov-re-mat.cc (octave_matrix::save_ascii): Likewise.
 	* ov-cx-mat.cc (octave_complex_matrix::save_ascii): Likewise.
 
 	* ov-fcn-inline.cc (Finline): Use DEFUNX instead of DEFUN.
 
-2007-10-08  Michael Goffioul <michael.goffioul@gmail.com>
+2007-10-08  Michael Goffioul  <michael.goffioul@gmail.com>
 
 	* sighandlers.h (can_interrupt): Tag with OCTINERP_API.
 	* sysdep.h (raw_mode, octave_popen, octave_pclose,
 	same_file_internal): Likewise.
 
 2007-10-06  John W. Eaton  <jwe@octave.org>
 
 	* oct-stream.cc (octave_base_stream::do_scanf):
@@ -1466,27 +1475,27 @@ 2007-10-04  Jason Riedy  <jason@acm.org>
 
         * ls-mat5.cc (read_mat5_binary_data): Map miUTF16 to miUINT16,
         miUTF32 to miUINT32.  The matfile format currently states that
         wide UTF formats are in the same byte order as the integers.
         (read_mat5_binary_element): Replace all UTF16 and UTF32
         characters with the high bit set (value >127) by '?' and warn
         that we've done so.
 
-2007-10-04  Michael Goffioul <michael.goffioul@gmail.com>
+2007-10-04  Michael Goffioul  <michael.goffioul@gmail.com>
 
 	* sysdep.cc (w32_set_octave_home): Base OCTAVE_HOME location on
 	octinterp, not the main exe.
 
 2007-10-03  John W. Eaton  <jwe@octave.org>
 
 	* data.cc (Fnorm): New function.
 	(F__vnorm__): Delete.
 
-2007-10-03  Michael Goffioul <michael.goffioul@gmail.com>
+2007-10-03  Michael Goffioul  <michael.goffioul@gmail.com>
 
 	* DLD-FUNCTIONS/typecast.cc: Include <algorithm>.
 
 2007-10-03  John W. Eaton  <jwe@octave.org>
 
 	* oct-map.cc (Octave_map::Octave_map (const dim_vector&, 
 	const string_vector&)): Delete.
 	(Octave_map::Octave_map (const dim_vector&, const Cell&)):
@@ -1499,17 +1508,17 @@ 2007-10-01  Shai Ayal  <shaiay@users.sou
 	* graphics.cc ((color_property::color_property (const
 	octave_value& val)): Undo change from 2007-09-26
 	(patch::properties::properties): use the "a" modifier to
 	face_color & edge_color properties
 	(patch::properties::set): Undo change from 2007-09-26
 	* graphics.h.in	(color_property::color_property
 	(const octave_value& val)): Undo change from 2007-09-26
 
-2007-10-01  Michael Goffioul <michael.goffioul@gmail.com>
+2007-10-01  Michael Goffioul  <michael.goffioul@gmail.com>
 
 	* octave.cc (octave_main): Add "--line-editing" option to force
 	readline line editing.
 
 2007-09-28  David Bateman  <dbateman@free.fr>
 
 	* ov-range.h (int8_array_value, int16_array_value, int32_array_value,
 	int64_array_value, uint8_array_value, uint16_array_value, 
@@ -1657,17 +1666,17 @@ 2007-09-06  David Bateman  <dbateman@fre
         * DLD-FUNCTIONS/typecast.cc: New function.
         * Makefile.in (DLD_XSRC): Add bsxfun.cc and typecast.cc.
         * ov.cc (do_cat_op): Modify use of Array<int> to 
         Array<octave_idx_type> and adjust where necessary.
         * ov.h (do_cat_op): ditto.
         * data.cc (do_cat): ditto.
         * pt-mat.cc (tree_matrix::rvalue): ditto.
 
-2007-09-05  Michael Goffioul <michael.goffioul@gmail.com>
+2007-09-05  Michael Goffioul  <michael.goffioul@gmail.com>
 
 	* oct-stream.cc (octave_base_stream::do_printf): Ignore precision
 	portion of format string if printing Inf, NaN, or NA values.
 
 2007-09-05  David Bateman  <dbateman@free.fr>
 
         * DLD-FUNCTIONS/sort.cc (mx_sort_sparse, mx_sort_sparse_indexed):
         New template classes for sparse sort functions.
@@ -1688,17 +1697,17 @@ 2007-09-05  David Bateman  <dbateman@fre
         Sparse<double>&, const MatrixType&)): ditto.
 
 2007-09-04  Gabriele Pannocchia  <g.pannocchia@ing.unipi.it>
 
 	* DLD-FUNCTIONS/__qp__.cc (qp): Use Wact(j) == i - n_eq when
 	checking for blocking constraint.  Don't resize lambda_tmp.  Only
 	compute Y = Aact.pseudo_inverse () if it is needed.
 
-2007-08-31  Michael Goffioul <michael.goffioul@gmail.com>
+2007-08-31  Michael Goffioul  <michael.goffioul@gmail.com>
 
 	* ls-mat-ascii.cc (get_lines_and_columns): Check beg variable for
 	NPOS to avoid segmentation fault. 
 
 	* load-path.cc (load_path::do_find_file): Do not assume paths
 	use forward slashes.
 
 2007-08-30  John W. Eaton  <jwe@octave.org>
diff --git a/src/graphics.cc b/src/graphics.cc
--- a/src/graphics.cc
+++ b/src/graphics.cc
@@ -810,16 +810,23 @@ is_handle (const octave_value& val)
 static bool
 is_figure (double val)
 {
   graphics_object obj = gh_manager::get_object (val);
 
   return obj && obj.isa ("figure");
 }
 
+static void
+xcreatefcn (const graphics_handle& h)
+{
+  graphics_object obj = gh_manager::get_object (h);
+  obj.get_properties ().execute_createfcn  ();
+}
+
 // ---------------------------------------------------------------------
 
 static int
 compare (const void *a_arg, const void *b_arg)
 {
   double a = *(static_cast<const double *> (a_arg));
   double b = *(static_cast<const double *> (b_arg));
 
@@ -1735,17 +1742,17 @@ gh_manager::gh_manager (void)
   : handle_map (), handle_free_list (),
     next_handle (-1.0 - (rand () + 1.0) / (RAND_MAX + 2.0))
 {
   handle_map[0] = graphics_object (new root_figure ());
 }
 
 graphics_handle
 gh_manager::do_make_graphics_handle (const std::string& go_name,
-				     const graphics_handle& p)
+				     const graphics_handle& p, bool do_createfcn)
 {
   graphics_handle h = get_handle (go_name);
 
   base_graphics_object *go = 0;
 
   if (go_name == "figure")
     go = new figure (h, p);
   else if (go_name == "axes")
@@ -1756,17 +1763,21 @@ gh_manager::do_make_graphics_handle (con
     go = new text (h, p);
   else if (go_name == "image")
     go = new image (h, p);
   else if (go_name == "patch")
     go = new patch (h, p);
   else if (go_name == "surface")
     go = new surface (h, p);
   if (go)
-    handle_map[h] = graphics_object (go);
+    {
+      handle_map[h] = graphics_object (go);
+      if (do_createfcn)
+        go->get_properties ().execute_createfcn ();
+    }
   else
     error ("gh_manager::do_make_graphics_handle: invalid object type `%s'",
 	   go_name.c_str ());
 
   return h;
 }
 
 graphics_handle
@@ -1965,23 +1976,24 @@ make_graphics_object (const std::string&
 
   if (! error_state)
     {
       graphics_handle parent = gh_manager::lookup (val);
 
       if (parent.ok ())
 	{
 	  graphics_handle h
-	    = gh_manager::make_graphics_handle (go_name, parent);
+	    = gh_manager::make_graphics_handle (go_name, parent, false);
 
 	  if (! error_state)
 	    {
 	      adopt (parent, h);
 
 	      xset (h, args.splice (0, 1));
+	      xcreatefcn (h);
 
 	      retval = h.value ();
 
 	      if (! error_state)
 		feval ("__request_drawnow__");
 	    }
 	  else
 	    error ("__go%s__: unable to create graphics handle",
@@ -2018,27 +2030,28 @@ Undocumented internal function.\n\
 
 	      retval = h.value ();
 	    }
 	  else
 	    {
 	      graphics_handle h = octave_NaN;
 
 	      if (xisnan (val))
-		h = gh_manager::make_graphics_handle ("figure", 0);
+		h = gh_manager::make_graphics_handle ("figure", 0, false);
 	      else if (val > 0 && D_NINT (val) == val)
 		h = gh_manager::make_figure_handle (val);
 	      else
 		error ("__go_figure__: invalid figure number");
 
 	      if (! error_state && h.ok ())
 		{
 		  adopt (0, h);
 
 		  xset (h, args.splice (0, 1));
+		  xcreatefcn (h);
 
 		  retval = h.value ();
 		}
 	      else
 		error ("__go_figure__: failed to create figure handle");
 	    }
 	}
       else
diff --git a/src/graphics.h.in b/src/graphics.h.in
--- a/src/graphics.h.in
+++ b/src/graphics.h.in
@@ -2542,20 +2542,20 @@ public:
 
   static graphics_object get_object (const graphics_handle& h)
   {
     return instance_ok () ? instance->do_get_object (h) : graphics_object ();
   }
 
   static graphics_handle
   make_graphics_handle (const std::string& go_name,
-			const graphics_handle& parent)
+			const graphics_handle& parent, bool do_createfcn = true)
   {
     return instance_ok ()
-      ? instance->do_make_graphics_handle (go_name, parent)
+      ? instance->do_make_graphics_handle (go_name, parent, do_createfcn)
       : graphics_handle ();
   }
 
   static graphics_handle make_figure_handle (double val)
   {
     return instance_ok ()
       ? instance->do_make_figure_handle (val) : graphics_handle ();
   }
@@ -2628,17 +2628,17 @@ private:
   graphics_object do_get_object (const graphics_handle& h)
   {
     iterator p = handle_map.find (h);
 
     return (p != handle_map.end ()) ? p->second : graphics_object ();
   }
 
   graphics_handle do_make_graphics_handle (const std::string& go_name,
-					   const graphics_handle& p);
+					   const graphics_handle& p, bool do_createfcn);
 
   graphics_handle do_make_figure_handle (double val);
 
   Matrix do_handle_list (void)
   {
     Matrix retval (1, handle_map.size ());
     octave_idx_type i = 0;
     for (const_iterator p = handle_map.begin (); p != handle_map.end (); p++)
