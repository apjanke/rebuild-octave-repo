# HG changeset patch
# User jwe
# Date 1198099643 0
#      Wed Dec 19 21:27:23 2007 +0000
# Node ID fcc6d853df9e180356e59cb8c04e3cf89f6c5ca3
# Parent  67aef14de9c200ee9fce6c3dc2194f14eb90fde7
[project @ 2007-12-19 21:27:23 by jwe]

diff --git a/liboctave/Sparse.cc b/liboctave/Sparse.cc
--- a/liboctave/Sparse.cc
+++ b/liboctave/Sparse.cc
@@ -1968,18 +1968,17 @@ Sparse<T>::index (idx_vector& idx_i, idx
 			      octave_idx_type ii = start_nodes [ridx(i)];
 
 			      if (ii >= 0)
 				{
 				  struct idx_node inode = nodes[ii];
 			      
 				  while (true)
 				    {
-				      if (idx_i.elem (inode.i) >= 0 && 
-					  idx_i.elem (inode.i) < nr)
+				      if (idx_i.elem (inode.i) < nr)
 					new_nzmx ++;
 				      if (inode.next == 0)
 					break;
 				      else
 					inode = *inode.next;
 				    }
 				}
 			    }
@@ -2005,18 +2004,17 @@ Sparse<T>::index (idx_vector& idx_i, idx
 			      octave_idx_type ii = start_nodes [ridx(i)];
 
 			      if (ii >= 0)
 				{
 				  struct idx_node inode = nodes[ii];
 			      
 				  while (true)
 				    {
-				      if (idx_i.elem (inode.i) >= 0 && 
-					  idx_i.elem (inode.i) < nr)
+				      if (idx_i.elem (inode.i) < nr)
 					{
 					  X [inode.i] = data (i);
 					  retval.xridx (kk++) = inode.i;
 					}
 
 				      if (inode.next == 0)
 					break;
 				      else
diff --git a/test/build_sparse_tests.sh b/test/build_sparse_tests.sh
--- a/test/build_sparse_tests.sh
+++ b/test/build_sparse_tests.sh
@@ -785,16 +785,23 @@ cat >>$TESTS <<EOF
 
 
 EOF
 }
 
 # =======================================================
 # sparse selection tests
 
+gen_scalar_select_tests () {
+    cat >>$TESTS <<EOF
+%!assert (sparse(42)([1,1]),sparse([42,42]))
+%!assert (sparse(42*1i)([1,1]),sparse([42,42].*1i))
+EOF
+}
+
 gen_select_tests() {
     cat >>$TESTS <<EOF
 %!test as=sparse(af);
 
 %% Point tests
 %!test idx=ridx(:)+rows(as)*(cidx(:)-1);
 %!assert(sparse(as(idx)),sparse(af(idx)));
 %!assert(as(idx),sparse(af(idx)));
@@ -1221,16 +1228,17 @@ else
 %! % generate m,n from 1 to <5000
 %! m=floor(lognormal_rnd(8,2)+1);
 %! n=floor(lognormal_rnd(8,2)+1);
 %! as=sprandn(m,n,0.3); af = full(as+1i*sprandn(as));
 %! ridx = ceil(m*rand(1,ceil(rand*m))
 %! cidx = ceil(n*rand(1,ceil(rand*n))
 EOF
 fi
+gen_scalar_select_tests
 gen_select_tests
 echo '%!test af=real(af);' >> $TESTS
 gen_select_tests
 gen_section
 echo '%!shared alpha,beta,df,pdf,lf,plf,uf,puf,bf,cf,bcf,tf,tcf,xf,ds,pds,ls,pls,us,pus,bs,cs,bcs,ts,tcs,xs' >>$TESTS
 echo '%!test alpha=1;beta=1;' >> $TESTS
 gen_solver_tests
 echo '%!test alpha=1;beta=1i;' >> $TESTS
