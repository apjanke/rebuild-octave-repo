# HG changeset patch
# User jwe
# Date 863190970 0
#      Fri May 09 15:16:10 1997 +0000
# Node ID dfffbf305468f6e2719c6314d4e8cd5f3cda01fb
# Parent  ac3368dba5d3e8e2ce02b407663ce6309a53fa2e
[project @ 1997-05-09 15:15:18 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,34 @@
 Fri May  9 07:40:59 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* pt-exp.cc (tree_simple_assignment_expression::eval): Use new
+	octave_variabl_reference::index function to handle indexing.
+
+	* oct-var-ref.h, oct-var-ref.cc (idx): New data member.
+	(octave_variable_reference::index): Set it.
+	(octave_variable_reference::assign): Handle indexing here.
+	Delete version of this function htat takes index arg.	
+
+	* variables.h (struct builtin_varaible): Delete.
+	* variables.cc (install_builtin_variable): Take all elts of
+	builtin_variable struct directly.
+	* defun.h (DEFVAR_INT): Call install_builtin_variable directly.
+
+	* symtab.h, defun-int.h: Don't include variables.h.
+
+	* symtab.h (symbol_record::sv_function): Move typedef here.
+	* variables.h: From here.
+
+	* oct-var-ref.h, oct-var-ref.cc: New files for
+	octave_variable_reference class, extracted from variables.h and
+	variables.cc
+
+	* oct-obj.h (octave_value_list::empty): New function.
+
 	* variables.h (class octave_variable_reference):  Rewrite to work
 	as a proxy class to store a pointer to octave_value and,
 	optionally, the change function to call and the name of the
 	structure element we are referencing.  Handle assignment,
 	increment, decrement, and value operations.
 
 	* ov-re-mat.h, ov-re-mat.cc (struct_elt_ref, struct_elt_val,
 	assign_struct_elt): Provide functions for looking up and setting
diff --git a/src/Makefile.in b/src/Makefile.in
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -76,17 +76,17 @@ PT_INCLUDES := pt-base.h pt-cmd.h \
 	pt-plot.h pt-pr-code.h pt-walk.h 
 
 INCLUDES := BaseSLList.h Map.h SLList.h SLStack.h Stack.h defun-dld.h \
 	defun-int.h defun.h dirfns.h dynamic-ld.h error.h file-io.h \
 	fn-cache.h gripes.h help.h input.h lex.h load-save.h \
 	oct-builtin.h oct-fcn.h oct-fstrm.h oct-hist.h oct-iostrm.h \
 	oct-map.h oct-mapper.h oct-obj.h oct-prcstrm.h oct-procbuf.h \
 	oct-stdstrm.h oct-stream.h oct-strstrm.h oct-sym.h \
-	oct-usr-fcn.h oct.h ops.h pager.h parse.h \
+	oct-usr-fcn.h oct-var-ref.h oct.h ops.h pager.h parse.h \
 	pr-output.h procstream.h sighandlers.h symtab.h sysdep.h \
 	systime.h syswait.h token.h toplev.h unwind-prot.h utils.h \
 	variables.h version.h xdiv.h xpow.h $(OV_INCLUDES) $(PT_INCLUDES)
 
 TI_XSRC := Array-oc.cc Array-os.cc Array-tc.cc Map-fnc.cc \
 	Map-tc.cc SLList-expr.cc SLList-misc.cc SLList-plot.cc \
 	SLList-tc.cc SLList-tm.cc SLStack-i.cc SLStack-pc.cc \
 	SLStack-str.cc SLStack-sym.cc SLStack-tok.cc \
@@ -114,17 +114,17 @@ PT_SRC := pt-base.cc pt-cmd.cc pt-const.
 	pt-mvr-base.cc pt-mvr.cc pt-plot.cc pt-pr-code.cc 
 
 SOURCES := BaseSLList.cc Map.cc SLList.cc SLStack.cc Stack.cc \
 	data.cc defaults.cc dirfns.cc dynamic-ld.cc error.cc \
 	file-io.cc fn-cache.cc gripes.cc help.cc input.cc lex.l \
 	load-save.cc mappers.cc oct-fstrm.cc oct-hist.cc \
 	oct-iostrm.cc oct-map.cc oct-obj.cc oct-prcstrm.cc \
 	oct-procbuf.cc oct-stdstrm.cc oct-stream.cc oct-strstrm.cc \
-	pager.cc parse.y pr-output.cc procstream.cc \
+	oct-var-ref.cc pager.cc parse.y pr-output.cc procstream.cc \
 	sighandlers.cc strcasecmp.c strncase.c strfns.cc \
 	strftime.c symtab.cc syscalls.cc sysdep.cc token.cc \
 	toplev.cc unwind-prot.cc utils.cc variables.cc xdiv.cc \
 	xpow.cc oct-fcn.cc oct-builtin.cc oct-mapper.cc \
 	oct-usr-fcn.cc \
 	$(OP_SRC) $(OV_SRC) $(PT_SRC) $(TI_SRC)
 
 OBJECTS_4 := $(notdir $(SOURCES))
diff --git a/src/mappers.cc b/src/mappers.cc
--- a/src/mappers.cc
+++ b/src/mappers.cc
@@ -26,16 +26,17 @@ Software Foundation, 59 Temple Place - S
 
 #include <cctype>
 
 #include "lo-mappers.h"
 
 #include "defun.h"
 #include "error.h"
 #include "oct-mapper.h"
+#include "variables.h"
 
 // XXX FIXME XXX -- perhaps this could be avoided by determining
 // whether the is* functions are actually functions or just macros.
 
 static int
 xisalnum (int c)
 {
   return isalnum (c);
diff --git a/src/pt-exp.cc b/src/pt-exp.cc
--- a/src/pt-exp.cc
+++ b/src/pt-exp.cc
@@ -32,16 +32,17 @@ Software Foundation, 59 Temple Place - S
 #include <strstream.h>
 
 #include "defun.h"
 #include "error.h"
 #include "gripes.h"
 #include "help.h"
 #include "input.h"
 #include "oct-obj.h"
+#include "oct-var-ref.h"
 #include "pager.h"
 #include "ov.h"
 #include "pt-exp.h"
 #include "pt-id.h"
 #include "pt-indir.h"
 #include "pt-misc.h"
 #include "pt-mvr.h"
 #include "pt-pr-code.h"
@@ -556,17 +557,19 @@ tree_simple_assignment_expression::eval 
 		  if (error_state)
 		    eval_error ();
 		  else
 		    {
 		      int nargin = args.length ();
 
 		      if (nargin > 0)
 			{
-			  ult.assign (etype, args, rhs_val);
+			  ult.index (args);
+
+			  ult.assign (etype, rhs_val);
 
 			  if (error_state)
 			    eval_error ();
 			  else
 			    {
 			      lhs_val = ult.value ();
 
 			      retval = rhs_val;
diff --git a/src/pt-id.cc b/src/pt-id.cc
--- a/src/pt-id.cc
+++ b/src/pt-id.cc
@@ -27,16 +27,17 @@ Software Foundation, 59 Temple Place - S
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "error.h"
 #include "oct-obj.h"
 #include "oct-fcn.h"
 #include "oct-sym.h"
+#include "oct-var-ref.h"
 #include "pager.h"
 #include "pt-const.h"
 #include "pt-id.h"
 #include "pt-walk.h"
 #include "symtab.h"
 #include "utils.h"
 
 // Symbols from the symbol table.
diff --git a/src/pt-indir.cc b/src/pt-indir.cc
--- a/src/pt-indir.cc
+++ b/src/pt-indir.cc
@@ -28,16 +28,17 @@ Software Foundation, 59 Temple Place - S
 #include <config.h>
 #endif
 
 #include "error.h"
 #include "gripes.h"
 #include "oct-map.h"
 #include "oct-obj.h"
 #include "oct-sym.h"
+#include "oct-var-ref.h"
 #include "pager.h"
 #include "pt-const.h"
 #include "pt-id.h"
 #include "pt-indir.h"
 #include "pt-walk.h"
 #include "symtab.h"
 #include "utils.h"
 
