# HG changeset patch
# User Rik <rik@octave.org>
# Date 1454811752 28800
#      Sat Feb 06 18:22:32 2016 -0800
# Node ID f7d1050b9b5331433ace013874a3659ae962211d
# Parent  7eca4ba9bb6dc56a8419fd241ab1c0d1bee879e6
maint: Clean up various usages of #ifdef.

* randmtzig.c: Use #ifdef rather than just #if.

* EditControl.h : Use '#if ! defined' rather than '#ifndef' in
guard block to match Octave style.

* dialog.cc, settings-dialog.cc: Add FIXME notes about questionable use of #if
mechanism.

* file-editor-tab.cc, Array-b.cc, Array-ch.cc, Array-d.cc, Array-f.cc,
Array-i.cc, Array-s.cc, MatrixType.h, quit.h, lo-sysdep.cc, lo-cutils.c,
oct-alloc.h, oct-shlib.cc, sparse-sort.h: #define HAVE_XXX macros to 1, not
just empty but defined.

* octave-txt-lexer.h, octave-cmd.h, octave-preserve-stream-state.h, txt-eng.h,
zfstream.h, oct-conf-features.h, oct-conf.h: Use octave_ namespace prefix on
name of #define used to prevent multiple inclusion of headers.

* parser.h, webinfo.h, ov-oncleanup.h, op-int.h, display-available.h,
shared-fcns.h: Add #define guard to prevent multiple inclusion.

* quadcc.cc: use all capitals for #define MIN_CQUAD_HEAPSIZE.

* ov-intx.h: Add note that this file must not use guard #define.

* eigs-base.h, randmtzig.h: Write '! defined' rather than '!defined'.

* file-ops.cc, oct-sparse.h: Use parentheses around complex #if tests.

* oct-syscalls.cc, oct-base64.cc, statdefs.h: Indent #ifdef blocks correctly.

* oct-conf-post.in.h: Use "! defined".  Define macros to 1, not just empty but
defined.

diff --git a/libgui/graphics/EditControl.h b/libgui/graphics/EditControl.h
--- a/libgui/graphics/EditControl.h
+++ b/libgui/graphics/EditControl.h
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifndef octave_EditControl_h
+#if ! defined (octave_EditControl_h)
 #define octave_EditControl_h 1
 
 #include "BaseControl.h"
 
 class QLineEdit;
 class QWidget;
 
 namespace QtHandles
diff --git a/libgui/src/dialog.cc b/libgui/src/dialog.cc
--- a/libgui/src/dialog.cc
+++ b/libgui/src/dialog.cc
@@ -179,16 +179,17 @@ MessageDialog::MessageDialog (const QStr
             erole = QMessageBox::AcceptRole;
 
           QPushButton *pbutton = addButton (qsbutton.at (i), erole);
           if (qsbutton.at (i) == defbutton)
             setDefaultButton (pbutton);
           // Make the last button the button pressed when <esc> key activated.
           if (i == N-1)
             {
+// FIXME: Why define and then immediately test value?
 #define ACTIVE_ESCAPE 1
 #if ACTIVE_ESCAPE
               setEscapeButton (pbutton);
 #else
               setEscapeButton (0);
 #endif
 #undef ACTIVE_ESCAPE
             }
@@ -243,16 +244,17 @@ ListDialog::ListDialog (const QStringLis
   if (! prompt.isEmpty ())
     {
       // For now, assume html-like Rich Text.  May be incompatible
       // with something down the road, but just testing capability.
       QString prompt_string;
       for (int j = 0; j < prompt.length (); j++)
         {
           if (j > 0)
+// FIXME: Why define and then immediately test value?
 #define RICH_TEXT 1
 #if RICH_TEXT
             prompt_string.append ("<br>");
 #else
             prompt_string.append ("\n");
 #endif
           prompt_string.append (prompt.at (j));
         }
@@ -349,17 +351,17 @@ ListDialog::item_double_clicked (const Q
 }
 
 
 InputDialog::InputDialog (const QStringList& prompt, const QString& title,
                           const QFloatList& nr, const QFloatList& nc,
                           const QStringList& defaults)
   : QDialog ()
 {
-
+// FIXME: Why define and then immediately test value?
 #define LINE_EDIT_FOLLOWS_PROMPT 0
 
 #if LINE_EDIT_FOLLOWS_PROMPT
   // Prompt on left followed by input on right.
   QGridLayout *promptInputLayout = new QGridLayout;
 #else
   // Prompt aligned above input.
   QVBoxLayout *promptInputLayout = new QVBoxLayout;
diff --git a/libgui/src/m-editor/file-editor-tab.cc b/libgui/src/m-editor/file-editor-tab.cc
--- a/libgui/src/m-editor/file-editor-tab.cc
+++ b/libgui/src/m-editor/file-editor-tab.cc
@@ -28,20 +28,20 @@ along with Octave; see the file COPYING.
 
 #ifdef HAVE_CONFIG_H
 #  include <config.h>
 #endif
 
 #ifdef HAVE_QSCINTILLA
 
 #if defined (HAVE_QSCI_QSCILEXEROCTAVE_H)
-#  define HAVE_LEXER_OCTAVE
+#  define HAVE_LEXER_OCTAVE 1
 #  include <Qsci/qscilexeroctave.h>
 #elif defined (HAVE_QSCI_QSCILEXERMATLAB_H)
-#  define HAVE_LEXER_MATLAB
+#  define HAVE_LEXER_MATLAB 1
 #  include <Qsci/qscilexermatlab.h>
 #endif
 #include <Qsci/qscilexercpp.h>
 #include <Qsci/qscilexerbash.h>
 #include <Qsci/qscilexerperl.h>
 #include <Qsci/qscilexerbatch.h>
 #include <Qsci/qscilexerdiff.h>
 #include <Qsci/qsciprinter.h>
diff --git a/libgui/src/m-editor/octave-txt-lexer.h b/libgui/src/m-editor/octave-txt-lexer.h
--- a/libgui/src/m-editor/octave-txt-lexer.h
+++ b/libgui/src/m-editor/octave-txt-lexer.h
@@ -17,18 +17,18 @@ for more details.
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 // Author: Torsten <ttl@justmail.de>
 
-#if ! defined (octave_txt_lexer_h)
-#define octave_txt_lexer_h 1
+#if ! defined (octave_octave_txt_lexer_h)
+#define octave_octave_txt_lexer_h 1
 
 #include <Qsci/qsciscintilla.h>
 #include <Qsci/qscilexer.h>
 
 
 class octave_txt_lexer : public QsciLexer
 {
   Q_OBJECT
@@ -36,9 +36,9 @@ class octave_txt_lexer : public QsciLexe
 public:
 
   virtual const char *language () const;
   virtual const char *lexer () const;
   virtual QString description (int style) const;
 
 };
 
-#endif
\ No newline at end of file
+#endif
diff --git a/libgui/src/octave-cmd.h b/libgui/src/octave-cmd.h
--- a/libgui/src/octave-cmd.h
+++ b/libgui/src/octave-cmd.h
@@ -17,18 +17,18 @@ for more details.
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 // Author: Torsten <ttl@justmail.de>
 
-#if ! defined (octave_cmd_h)
-#define octave_cmd_h 1
+#if ! defined (octave_octave_cmd_h)
+#define octave_octave_cmd_h 1
 
 #include <QSemaphore>
 #include <QMutex>
 #include <QString>
 #include <QFileInfo>
 
 #include "octave-qt-link.h"
 
diff --git a/libgui/src/qtinfo/parser.h b/libgui/src/qtinfo/parser.h
--- a/libgui/src/qtinfo/parser.h
+++ b/libgui/src/qtinfo/parser.h
@@ -19,16 +19,19 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 // Author: P. L. Lucas
 // Author: Jacob Dawid <jacob.dawid@cybercatalyst.com>
 
+#if ! defined (octave_parser_h)
+#define octave_parser_h 1
+
 #include <QStringList>
 #include <QIODevice>
 #include <QFileInfoList>
 #include <QHash>
 
 /**
  * @class parser
  * This class gets nodes and searchs inside of 'info files'.
@@ -115,8 +118,10 @@ private:
 
   QString                       _info_path;
   QFileInfoList                 _info_files;
   QHash<QString, node_map_item> _node_map;
   QHash<QString, node_position> _ref_map;
   QList<info_file_item>         _info_file_real_size_list;
   QHash<QString, QString>       _compressors_map;
 };
+
+#endif
diff --git a/libgui/src/qtinfo/webinfo.h b/libgui/src/qtinfo/webinfo.h
--- a/libgui/src/qtinfo/webinfo.h
+++ b/libgui/src/qtinfo/webinfo.h
@@ -19,16 +19,19 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 // Author: P. L. Lucas
 // Author: 2012 Jacob Dawid <jacob.dawid@cybercatalyst.com>
 
+#if ! defined (octave_webinfo_h)
+#define octave_webinfo_h 1
+
 #include <QTextBrowser>
 #include "parser.h"
 #include <QStackedWidget>
 #include <QTabBar>
 #include <QPushButton>
 #include <QLineEdit>
 #include <QCheckBox>
 #include <QToolButton>
@@ -64,8 +67,10 @@ private:
   QToolButton         *_zoom_in_button;
   QToolButton         *_zoom_out_button;
 
   parser              _parser;
   QFont               _font_web;
 
   QTextBrowser *addNewTab (const QString& name);
 };
+
+#endif
diff --git a/libgui/src/settings-dialog.cc b/libgui/src/settings-dialog.cc
--- a/libgui/src/settings-dialog.cc
+++ b/libgui/src/settings-dialog.cc
@@ -37,20 +37,20 @@ along with Octave; see the file COPYING.
 #include <QTextCodec>
 
 #ifdef HAVE_QSCINTILLA
 #  include "octave-qscintilla.h"
 #  include "octave-txt-lexer.h"
 #  include <QScrollArea>
 
 #  if defined (HAVE_QSCI_QSCILEXEROCTAVE_H)
-#    define HAVE_LEXER_OCTAVE
+#    define HAVE_LEXER_OCTAVE 1
 #    include <Qsci/qscilexeroctave.h>
 #  elif defined (HAVE_QSCI_QSCILEXERMATLAB_H)
-#    define HAVE_LEXER_MATLAB
+#    define HAVE_LEXER_MATLAB 1
 #    include <Qsci/qscilexermatlab.h>
 #  endif
 
 #  include <Qsci/qscilexercpp.h>
 #  include <Qsci/qscilexerbash.h>
 #  include <Qsci/qscilexerperl.h>
 #  include <Qsci/qscilexerbatch.h>
 #  include <Qsci/qscilexerdiff.h>
diff --git a/libinterp/corefcn/octave-preserve-stream-state.h b/libinterp/corefcn/octave-preserve-stream-state.h
--- a/libinterp/corefcn/octave-preserve-stream-state.h
+++ b/libinterp/corefcn/octave-preserve-stream-state.h
@@ -15,18 +15,18 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#if ! defined (octave_preserve_stream_state_h)
-#define octave_preserve_stream_state_h 1
+#if ! defined (octave_octave_preserve_stream_state_h)
+#define octave_octave_preserve_stream_state_h 1
 
 class
 octave_preserve_stream_state
 {
 public:
 
   octave_preserve_stream_state (std::ios& s)
     : stream (s), oflags (s.flags ()), oprecision (s.precision ()),
diff --git a/libinterp/corefcn/quadcc.cc b/libinterp/corefcn/quadcc.cc
--- a/libinterp/corefcn/quadcc.cc
+++ b/libinterp/corefcn/quadcc.cc
@@ -33,17 +33,17 @@ along with Octave; see the file COPYING.
 #include "parse.h"
 #include "utils.h"
 #include "variables.h"
 
 // Extended debugging.
 #define DEBUG_QUADCC 0
 
 // Define the minimum size of the interval heap.
-#define min_cquad_heapsize  200
+#define MIN_CQUAD_HEAPSIZE  200
 
 // Data of a single interval.
 typedef struct
 {
   double a, b;
   double c[64];
   double fx[33];
   double igral, err;
@@ -1610,18 +1610,18 @@ Mathematical Software, Vol. 37, Issue 3,
 
   if (nargin < 5)
     nivals = 1;
   else if (!(args(4).is_real_scalar () || args(4).is_real_matrix ()))
     error ("quadcc: list of singularities (SING) must be a vector of real values");
   else
     nivals = 1 + args(4).numel ();
 
-  int cquad_heapsize = (nivals >= min_cquad_heapsize ? nivals + 1
-                                                     : min_cquad_heapsize);
+  int cquad_heapsize = (nivals >= MIN_CQUAD_HEAPSIZE ? nivals + 1
+                                                     : MIN_CQUAD_HEAPSIZE);
   // The interval heap.
   OCTAVE_LOCAL_BUFFER (cquad_ival, ivals, cquad_heapsize);
   OCTAVE_LOCAL_BUFFER (double, iivals, cquad_heapsize);
   OCTAVE_LOCAL_BUFFER (int, heap, cquad_heapsize);
 
   if (nivals == 1)
     {
       iivals[0] = a;
diff --git a/libinterp/corefcn/txt-eng.h b/libinterp/corefcn/txt-eng.h
--- a/libinterp/corefcn/txt-eng.h
+++ b/libinterp/corefcn/txt-eng.h
@@ -15,18 +15,18 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#if ! defined (txt_eng_h)
-#define txt_eng_h 1
+#if ! defined (octave_txt_eng_h)
+#define octave_txt_eng_h 1
 
 #include <memory>
 #include <string>
 
 #include "base-list.h"
 #include "caseless-str.h"
 #include "dMatrix.h"
 
diff --git a/libinterp/corefcn/zfstream.h b/libinterp/corefcn/zfstream.h
--- a/libinterp/corefcn/zfstream.h
+++ b/libinterp/corefcn/zfstream.h
@@ -25,18 +25,18 @@ along with Octave; see the file COPYING.
  This file is adapted from the zlib 1.2.2 contrib/iostream3 code,
  written by
 
    Ludwig Schwardt <schwardt@sun.ac.za>
    original version by Kevin Ruland <kevin@rodin.wustl.edu>
 
 */
 
-#ifndef ZFSTREAM_H
-#define ZFSTREAM_H
+#if ! defined (octave_zfsstream_h)
+#define octave_zfsstream_h 1
 
 #ifdef HAVE_ZLIB
 
 #include <iosfwd>
 
 #include "zlib.h"
 
 /**
diff --git a/libinterp/oct-conf-features.h b/libinterp/oct-conf-features.h
--- a/libinterp/oct-conf-features.h
+++ b/libinterp/oct-conf-features.h
@@ -15,18 +15,18 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#if ! defined (octave_conf_features_h)
-#define octave_conf_features_h 1
+#if ! defined (octave_oct_conf_features_h)
+#define octave_oct_conf_features_h 1
 
 #include "oct-map.h"
 
 namespace octave
 {
   namespace config
   {
     extern OCTAVE_API octave_scalar_map features (void);
diff --git a/libinterp/oct-conf.h b/libinterp/oct-conf.h
--- a/libinterp/oct-conf.h
+++ b/libinterp/oct-conf.h
@@ -15,18 +15,18 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#if ! defined (octave_conf_h)
-#define octave_conf_h 1
+#if ! defined (octave_oct_conf_h)
+#define octave_oct_conf_h 1
 
 namespace octave
 {
   namespace config
   {
     extern const char *ALL_CFLAGS;
     extern const char *ALL_CXXFLAGS;
     extern const char *ALL_FFLAGS;
diff --git a/libinterp/octave-value/ov-intx.h b/libinterp/octave-value/ov-intx.h
--- a/libinterp/octave-value/ov-intx.h
+++ b/libinterp/octave-value/ov-intx.h
@@ -16,16 +16,21 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
+// FIXME: Do not uncomment these lines to have this file included only once.
+//        The build will break (2/6/2016).
+// #if ! defined (octave_ov_intx_h)
+// #define octave_ov_intx_h 1
+
 #include <cstdlib>
 
 #include <iosfwd>
 #include <string>
 
 #include "mx-base.h"
 #include "str-vec.h"
 
diff --git a/libinterp/octave-value/ov-oncleanup.h b/libinterp/octave-value/ov-oncleanup.h
--- a/libinterp/octave-value/ov-oncleanup.h
+++ b/libinterp/octave-value/ov-oncleanup.h
@@ -15,16 +15,19 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
+#if ! defined (octave_ov_oncleanup_h)
+#define octave_ov_oncleanup_h 1
+
 #include <iosfwd>
 
 #include "ov-base.h"
 #include "ov-struct.h"
 #include "ov.h"
 
 
 class octave_oncleanup : public octave_base_value
@@ -83,8 +86,10 @@ public:
 private:
 
   DECLARE_OV_TYPEID_FUNCTIONS_AND_DATA
 
 protected:
 
   octave_value fcn;
 };
+
+#endif
diff --git a/libinterp/operators/op-int.h b/libinterp/operators/op-int.h
--- a/libinterp/operators/op-int.h
+++ b/libinterp/operators/op-int.h
@@ -15,16 +15,19 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
+#if ! defined (octave_op_int_h)
+#define octave_op_int_h 1
+
 #include "quit.h"
 #include "bsxfun.h"
 
 #define DEFINTBINOP_OP(name, t1, t2, op, t3) \
   BINOPDECL (name, a1, a2) \
   { \
     CAST_BINOP_ARGS (const octave_ ## t1&, const octave_ ## t2&); \
     octave_value retval = octave_value \
@@ -1158,8 +1161,10 @@ octave_value elem_xpow (FloatNDArray a, 
   OCTAVE_MS_INT_CMP_OPS (T1 ## _ ## T2 ## _ms, T1 ## _, T2 ## _) \
   OCTAVE_MM_INT_CMP_OPS (T1 ## _ ## T2 ## _mm, T1 ## _, T2 ## _)
 
 #define OCTAVE_INSTALL_MIXED_INT_CMP_OPS(T1, T2) \
   OCTAVE_INSTALL_SS_INT_CMP_OPS (T1 ## _ ## T2 ## _ss, T1 ## _, T2 ## _) \
   OCTAVE_INSTALL_SM_INT_CMP_OPS (T1 ## _ ## T2 ## _sm, T1 ## _, T2 ## _) \
   OCTAVE_INSTALL_MS_INT_CMP_OPS (T1 ## _ ## T2 ## _ms, T1 ## _, T2 ## _) \
   OCTAVE_INSTALL_MM_INT_CMP_OPS (T1 ## _ ## T2 ## _mm, T1 ## _, T2 ## _)
+
+#endif
diff --git a/liboctave/array/Array-b.cc b/liboctave/array/Array-b.cc
--- a/liboctave/array/Array-b.cc
+++ b/liboctave/array/Array-b.cc
@@ -23,18 +23,18 @@ along with Octave; see the file COPYING.
 #ifdef HAVE_CONFIG_H
 #  include <config.h>
 #endif
 
 // Instantiate Arrays of bool values.
 
 #include "Array.h"
 #include "Array.cc"
-#define INLINE_ASCENDING_SORT
-#define INLINE_DESCENDING_SORT
+#define INLINE_ASCENDING_SORT 1
+#define INLINE_DESCENDING_SORT 1
 #include "oct-sort.cc"
 
 // Specialize bool sorting (aka stable partitioning).
 
 template <bool desc>
 static void do_bool_partition (bool *data, octave_idx_type nel)
 {
   octave_idx_type k = 0;
diff --git a/liboctave/array/Array-ch.cc b/liboctave/array/Array-ch.cc
--- a/liboctave/array/Array-ch.cc
+++ b/liboctave/array/Array-ch.cc
@@ -23,18 +23,18 @@ along with Octave; see the file COPYING.
 #ifdef HAVE_CONFIG_H
 #  include <config.h>
 #endif
 
 // Instantiate Arrays of char values.
 
 #include "Array.h"
 #include "Array.cc"
-#define INLINE_ASCENDING_SORT
-#define INLINE_DESCENDING_SORT
+#define INLINE_ASCENDING_SORT 1
+#define INLINE_DESCENDING_SORT 1
 #include "oct-sort.cc"
 
 template class OCTAVE_API octave_sort<char>;
 
 INSTANTIATE_ARRAY (char, OCTAVE_API);
 
 template OCTAVE_API std::ostream& operator << (std::ostream&,
                                                const Array<char>&);
diff --git a/liboctave/array/Array-d.cc b/liboctave/array/Array-d.cc
--- a/liboctave/array/Array-d.cc
+++ b/liboctave/array/Array-d.cc
@@ -27,18 +27,18 @@ along with Octave; see the file COPYING.
 
 // Instantiate Arrays of double values.
 
 #include "lo-mappers.h"
 #include "Array.h"
 #include "Array.cc"
 #include "oct-locbuf.h"
 
-#define INLINE_ASCENDING_SORT
-#define INLINE_DESCENDING_SORT
+#define INLINE_ASCENDING_SORT 1
+#define INLINE_DESCENDING_SORT 1
 #include "oct-sort.cc"
 
 template <>
 inline bool
 sort_isnan<double> (double x)
 {
   return xisnan (x);
 }
diff --git a/liboctave/array/Array-f.cc b/liboctave/array/Array-f.cc
--- a/liboctave/array/Array-f.cc
+++ b/liboctave/array/Array-f.cc
@@ -27,18 +27,18 @@ along with Octave; see the file COPYING.
 
 // Instantiate Arrays of float values.
 
 #include "lo-mappers.h"
 #include "Array.h"
 #include "Array.cc"
 #include "oct-locbuf.h"
 
-#define INLINE_ASCENDING_SORT
-#define INLINE_DESCENDING_SORT
+#define INLINE_ASCENDING_SORT 1
+#define INLINE_DESCENDING_SORT 1
 #include "oct-sort.cc"
 
 template <>
 inline bool
 sort_isnan<float> (float x)
 {
   return xisnan (x);
 }
diff --git a/liboctave/array/Array-i.cc b/liboctave/array/Array-i.cc
--- a/liboctave/array/Array-i.cc
+++ b/liboctave/array/Array-i.cc
@@ -26,18 +26,18 @@ along with Octave; see the file COPYING.
 
 #include "oct-inttypes.h"
 
 // Instantiate Arrays of integer values.
 
 #include "Array.h"
 #include "Array.cc"
 
-#define INLINE_ASCENDING_SORT
-#define INLINE_DESCENDING_SORT
+#define INLINE_ASCENDING_SORT 1
+#define INLINE_DESCENDING_SORT 1
 #include "oct-sort.cc"
 
 template class OCTAVE_API octave_sort<int>;
 template class OCTAVE_API octave_sort<long>;
 #if defined (HAVE_LONG_LONG_INT)
 template class OCTAVE_API octave_sort<long long>;
 #endif
 
diff --git a/liboctave/array/Array-s.cc b/liboctave/array/Array-s.cc
--- a/liboctave/array/Array-s.cc
+++ b/liboctave/array/Array-s.cc
@@ -24,18 +24,18 @@ along with Octave; see the file COPYING.
 #  include <config.h>
 #endif
 
 // Instantiate Arrays of short int values.
 
 #include "Array.h"
 #include "Array.cc"
 
-#define INLINE_ASCENDING_SORT
-#define INLINE_DESCENDING_SORT
+#define INLINE_ASCENDING_SORT 1
+#define INLINE_DESCENDING_SORT 1
 #include "oct-sort.cc"
 
 template class OCTAVE_API octave_sort<short>;
 
 INSTANTIATE_ARRAY (short, OCTAVE_API);
 
 #include "DiagArray2.h"
 #include "DiagArray2.cc"
diff --git a/liboctave/array/MatrixType.h b/liboctave/array/MatrixType.h
--- a/liboctave/array/MatrixType.h
+++ b/liboctave/array/MatrixType.h
@@ -17,17 +17,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #if ! defined (octave_MatrixType_h)
-#define octave_MatrixType_h
+#define octave_MatrixType_h 1
 
 class Matrix;
 class ComplexMatrix;
 class FloatMatrix;
 class FloatComplexMatrix;
 class SparseMatrix;
 class SparseComplexMatrix;
 
diff --git a/liboctave/cruft/misc/quit.h b/liboctave/cruft/misc/quit.h
--- a/liboctave/cruft/misc/quit.h
+++ b/liboctave/cruft/misc/quit.h
@@ -31,17 +31,17 @@ along with Octave; see the file COPYING.
 #ifdef __cplusplus
 #  include <new>
 #  include <string>
 extern "C" {
 #endif
 
 #if defined (__WIN32__) && ! defined (_POSIX_VERSION)
 
-#define WIN32_LEAN_AND_MEAN
+#define WIN32_LEAN_AND_MEAN 1
 #include <windows.h>
 
 CRUFT_API extern void w32_sigint_init (void);   /* setup */
 CRUFT_API extern void w32_raise_final (void);   /* tear down */
 CRUFT_API extern void w32_raise (int sig);      /* raise signal in main thread */
 CRUFT_API extern int w32_in_main_thread (void); /* return true if in main thread */
 
 #endif
diff --git a/liboctave/numeric/eigs-base.h b/liboctave/numeric/eigs-base.h
--- a/liboctave/numeric/eigs-base.h
+++ b/liboctave/numeric/eigs-base.h
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#if !defined (octave_eigs_base_h)
+#if ! defined (octave_eigs_base_h)
 #define octave_eigs_base_h 1
 
 #include <iosfwd>
 
 class ColumnVector;
 class ComplexColumnVector;
 class Matrix;
 class ComplexMatrix;
diff --git a/liboctave/numeric/randmtzig.c b/liboctave/numeric/randmtzig.c
--- a/liboctave/numeric/randmtzig.c
+++ b/liboctave/numeric/randmtzig.c
@@ -357,33 +357,33 @@ randmt (void)
 /* Select which 32 bit generator to use */
 #define randi32 randmt
 
 static uint64_t
 randi53 (void)
 {
   const uint32_t lo = randi32 ();
   const uint32_t hi = randi32 ()&0x1FFFFF;
-#if HAVE_X86_32
+#ifdef HAVE_X86_32
   uint64_t u;
   uint32_t *p = (uint32_t *)&u;
   p[0] = lo;
   p[1] = hi;
   return u;
 #else
   return (((uint64_t)hi<<32)|lo);
 #endif
 }
 
 static uint64_t
 randi54 (void)
 {
   const uint32_t lo = randi32 ();
   const uint32_t hi = randi32 ()&0x3FFFFF;
-#if HAVE_X86_32
+#ifdef HAVE_X86_32
   uint64_t u;
   uint32_t *p = (uint32_t *)&u;
   p[0] = lo;
   p[1] = hi;
   return u;
 #else
   return (((uint64_t)hi<<32)|lo);
 #endif
@@ -572,17 +572,17 @@ oct_randn (void)
       /* The following code is specialized for 32-bit mantissa.
        * Compared to the arbitrary mantissa code, there is a performance
        * gain for 32-bits:  PPC: 2%, MIPS: 8%, x86: 40%
        * There is a bigger performance gain compared to using a full
        * 53-bit mantissa:  PPC: 60%, MIPS: 65%, x86: 240%
        * Of course, different compilers and operating systems may
        * have something to do with this.
        */
-# if HAVE_X86_32
+# ifdef HAVE_X86_32
       /* 53-bit mantissa, 1-bit sign, x86 32-bit architecture */
       double x;
       int si,idx;
       register uint32_t lo, hi;
       int64_t rabs;
       uint32_t *p = (uint32_t *)&rabs;
       lo = randi32 ();
       idx = lo&0xFF;
diff --git a/liboctave/numeric/randmtzig.h b/liboctave/numeric/randmtzig.h
--- a/liboctave/numeric/randmtzig.h
+++ b/liboctave/numeric/randmtzig.h
@@ -56,17 +56,17 @@ along with Octave; see the file COPYING.
    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
    LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
    NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
    SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
 */
 
-#if !defined (octave_randmtzig_h)
+#if ! defined (octave_randmtzig_h)
 #define octave_randmtzig_h 1
 
 #define MT_N 624
 
 #ifdef __cplusplus
 extern "C" {
 #endif
 
diff --git a/liboctave/system/lo-sysdep.cc b/liboctave/system/lo-sysdep.cc
--- a/liboctave/system/lo-sysdep.cc
+++ b/liboctave/system/lo-sysdep.cc
@@ -29,17 +29,17 @@ along with Octave; see the file COPYING.
 #include <vector>
 
 #include <sys/types.h>
 #include <unistd.h>
 
 #include <fcntl.h>
 
 #if defined (__WIN32__) && ! defined (__CYGWIN__)
-#  define WIN32_LEAN_AND_MEAN
+#  define WIN32_LEAN_AND_MEAN 1
 #  include <windows.h>
 #endif
 
 #include "file-ops.h"
 #include "lo-error.h"
 #include "pathlen.h"
 #include "lo-sysdep.h"
 #include "str-vec.h"
diff --git a/liboctave/system/oct-syscalls.cc b/liboctave/system/oct-syscalls.cc
--- a/liboctave/system/oct-syscalls.cc
+++ b/liboctave/system/oct-syscalls.cc
@@ -124,19 +124,19 @@ octave_syscalls::fork (std::string& msg)
 pid_t
 octave_syscalls::vfork (std::string& msg)
 {
   pid_t status = -1;
 
 #if defined (HAVE_VFORK) || defined (HAVE_FORK)
 #  if defined (HAVE_VFORK)
   status = ::vfork ();
-#else
+#  else
   status = ::fork ();
-#endif
+#  endif
 
   if (status < 0)
     msg = gnulib::strerror (errno);
 #else
   msg = NOT_SUPPORTED ("vfork");
 #endif
 
   return status;
diff --git a/liboctave/util/lo-cutils.c b/liboctave/util/lo-cutils.c
--- a/liboctave/util/lo-cutils.c
+++ b/liboctave/util/lo-cutils.c
@@ -25,17 +25,17 @@ along with Octave; see the file COPYING.
 #endif
 
 #include "lo-error.h"
 
 /* This gives us a better chance of finding a prototype for strptime
    on some systems.  */
 
 #if ! defined (_XOPEN_SOURCE)
-#define _XOPEN_SOURCE
+#  define _XOPEN_SOURCE 1
 #endif
 
 #include <sys/types.h>
 #include <unistd.h>
 
 #include <stdlib.h>
 #include <string.h>
 #include <time.h>
diff --git a/liboctave/util/lo-cutils.h b/liboctave/util/lo-cutils.h
--- a/liboctave/util/lo-cutils.h
+++ b/liboctave/util/lo-cutils.h
@@ -21,17 +21,17 @@ along with Octave; see the file COPYING.
 */
 
 #if ! defined (octave_lo_cutils_h)
 #define octave_lo_cutils_h 1
 
 #include <sys/types.h>
 
 #ifdef HAVE_LOADLIBRARY_API
-#  define WIN32_LEAN_AND_MEAN
+#  define WIN32_LEAN_AND_MEAN 1
 #  include <windows.h>
 #endif
 
 #ifdef __cplusplus
 extern "C" {
 #endif
 
 OCTAVE_API void
diff --git a/liboctave/util/oct-alloc.h b/liboctave/util/oct-alloc.h
--- a/liboctave/util/oct-alloc.h
+++ b/liboctave/util/oct-alloc.h
@@ -20,13 +20,13 @@ along with Octave; see the file COPYING.
 
 */
 
 #if ! defined (octave_oct_alloc_h)
 #define octave_oct_alloc_h 1
 
 #warning "the octave_allocator class has been deprecated and will be removed in a future release of Octave"
 
-#define DECLARE_OCTAVE_ALLOCATOR
+#define DECLARE_OCTAVE_ALLOCATOR 1
 #define DEFINE_OCTAVE_ALLOCATOR(t)
 #define DEFINE_OCTAVE_ALLOCATOR2(t, s)
 
 #endif
diff --git a/liboctave/util/oct-base64.cc b/liboctave/util/oct-base64.cc
--- a/liboctave/util/oct-base64.cc
+++ b/liboctave/util/oct-base64.cc
@@ -15,26 +15,26 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-  #ifdef HAVE_CONFIG_H
-#    include <config.h>
-#  endif
+#ifdef HAVE_CONFIG_H
+#  include <config.h>
+#endif
 
-#  include <algorithm>
+#include <algorithm>
 
-#  include <base64.h>
+#include <base64.h>
 
-#  include "Array.h"
-#  include "oct-base64.h"
+#include "Array.h"
+#include "oct-base64.h"
 
 bool
 octave_base64_encode (const char *inc, const size_t inlen, char **out)
 {
   bool ret = false;
 
   size_t outlen = base64_encode_alloc (inc, inlen, out);
 
diff --git a/liboctave/util/oct-shlib.cc b/liboctave/util/oct-shlib.cc
--- a/liboctave/util/oct-shlib.cc
+++ b/liboctave/util/oct-shlib.cc
@@ -45,17 +45,17 @@ extern "C"
 extern void *dlopen (const char *, int);
 extern const char *dlerror (void);
 extern void *dlsym (void *, const char *);
 extern int dlclose (void *);
 #  endif
 #elif defined (HAVE_SHL_LOAD_API)
 #  include <dl.h>
 #elif defined (HAVE_LOADLIBRARY_API)
-#  define WIN32_LEAN_AND_MEAN
+#  define WIN32_LEAN_AND_MEAN 1
 #  include <windows.h>
 #endif
 }
 
 #include "file-stat.h"
 #include "lo-error.h"
 #include "oct-shlib.h"
 #include "str-vec.h"
diff --git a/liboctave/util/oct-sparse.h b/liboctave/util/oct-sparse.h
--- a/liboctave/util/oct-sparse.h
+++ b/liboctave/util/oct-sparse.h
@@ -92,17 +92,17 @@ along with Octave; see the file COPYING.
 #  else
 #    define CHOLMOD_NAME(name) cholmod_ ## name
 #  endif
 #endif
 
 // Cope with new SuiteSparse versions
 
 #if defined (SUITESPARSE_VERSION)
-#  if SUITESPARSE_VERSION >= SUITESPARSE_VER_CODE (4, 3)
+#  if (SUITESPARSE_VERSION >= SUITESPARSE_VER_CODE (4, 3))
 #    define SUITESPARSE_NAME(name) SuiteSparse_ ## name
 #    define SUITESPARSE_ASSIGN_FPTR(f_name, f_var, f_assign) (SuiteSparse_config.f_name = f_assign)
 #    define SUITESPARSE_ASSIGN_FPTR2(f_name, f_var, f_assign) (SuiteSparse_config.f_name = SUITESPARSE_NAME (f_assign))
 #  else
 #    define SUITESPARSE_ASSIGN_FPTR(f_name, f_var, f_assign) (f_var = f_assign)
 #    define SUITESPARSE_ASSIGN_FPTR2(f_name, f_var, f_assign) (f_var = CHOLMOD_NAME (f_assign))
 #  endif
 #endif
diff --git a/liboctave/util/sparse-sort.h b/liboctave/util/sparse-sort.h
--- a/liboctave/util/sparse-sort.h
+++ b/liboctave/util/sparse-sort.h
@@ -17,17 +17,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #if ! defined (octave_sparse_sort_h)
-#define octave_sparse_sort_h
+#define octave_sparse_sort_h 1
 
 #include "oct-sort.h"
 
 class
 octave_sparse_sort_idxl
 {
 public:
   octave_idx_type r;
diff --git a/liboctave/util/statdefs.h b/liboctave/util/statdefs.h
--- a/liboctave/util/statdefs.h
+++ b/liboctave/util/statdefs.h
@@ -30,41 +30,41 @@ along with Octave; see the file COPYING.
 #endif
 
 #ifndef S_ISREG
 #  ifndef mode_t
 #    define mode_t unsigned short
 #  endif
 #endif
 #if ! defined (S_ISBLK) && defined (S_IFBLK)
-#define S_ISBLK(m) (((m) & S_IFMT) == S_IFBLK)
+#  define S_ISBLK(m) (((m) & S_IFMT) == S_IFBLK)
 #endif
 #if ! defined (S_ISCHR) && defined (S_IFCHR)
-#define S_ISCHR(m) (((m) & S_IFMT) == S_IFCHR)
+#  define S_ISCHR(m) (((m) & S_IFMT) == S_IFCHR)
 #endif
 #if ! defined (S_ISDIR) && defined (S_IFDIR)
-#define S_ISDIR(m) (((m) & S_IFMT) == S_IFDIR)
+#  define S_ISDIR(m) (((m) & S_IFMT) == S_IFDIR)
 #endif
 #if ! defined (S_ISREG) && defined (S_IFREG)
-#define S_ISREG(m) (((m) & S_IFMT) == S_IFREG)
+#  define S_ISREG(m) (((m) & S_IFMT) == S_IFREG)
 #endif
 #if ! defined (S_ISFIFO) && defined (S_IFIFO)
-#define S_ISFIFO(m) (((m) & S_IFMT) == S_IFIFO)
+#  define S_ISFIFO(m) (((m) & S_IFMT) == S_IFIFO)
 #endif
 #if ! defined (S_ISLNK) && defined (S_IFLNK)
-#define S_ISLNK(m) (((m) & S_IFMT) == S_IFLNK)
+#  define S_ISLNK(m) (((m) & S_IFMT) == S_IFLNK)
 #endif
 #if ! defined (S_ISSOCK) && defined (S_IFSOCK)
-#define S_ISSOCK(m) (((m) & S_IFMT) == S_IFSOCK)
+#  define S_ISSOCK(m) (((m) & S_IFMT) == S_IFSOCK)
 #endif
 #if ! defined (S_ISMPB) && defined (S_IFMPB)
-#define S_ISMPB(m) (((m) & S_IFMT) == S_IFMPB)
-#define S_ISMPC(m) (((m) & S_IFMT) == S_IFMPC)
+#  define S_ISMPB(m) (((m) & S_IFMT) == S_IFMPB)
+#  define S_ISMPC(m) (((m) & S_IFMT) == S_IFMPC)
 #endif
 #if ! defined (S_ISNWK) && defined (S_IFNWK)
-#define S_ISNWK(m) (((m) & S_IFMT) == S_IFNWK)
+#  define S_ISNWK(m) (((m) & S_IFMT) == S_IFNWK)
 #endif
 
 #ifndef S_ISLNK
 #  undef HAVE_LSTAT
 #endif
 
 #endif
diff --git a/oct-conf-post.in.h b/oct-conf-post.in.h
--- a/oct-conf-post.in.h
+++ b/oct-conf-post.in.h
@@ -15,57 +15,57 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#if !defined (GNULIB_NAMESPACE)
+#if ! defined (GNULIB_NAMESPACE)
 #  define GNULIB_NAMESPACE gnulib
 #endif
 
 /* The C++ standard is evolving to allow attribute hints in a
    compiler-independent manner.  In C++ 2011 support for noreturn was
    added.  In C++ 2014 support for deprecated was added.  The Octave
    code base has been future-proofed by using macros of the form
    OCTAVE_ATTRIBUTE_NAME in place of vendor specific attribute
    mechanisms.  As compilers evolve, the underlying implementation can
    be changed with the macro definitions below.  FIXME: Update macros
    to use C++ standard attribute syntax when Octave moves to C++ 2011
    standard.  */
 
 #if defined (__GNUC__)
    /* The following attributes are used with gcc and clang compilers.  */
 #  define OCTAVE_DEPRECATED(msg) __attribute__ ((__deprecated__ (msg)))
-#  define HAVE_ATTR_DEPRECATED
+#  define HAVE_ATTR_DEPRECATED 1
 
 #  define OCTAVE_NORETURN __attribute__ ((__noreturn__))
-#  define HAVE_ATTR_NORETURN
+#  define HAVE_ATTR_NORETURN 1
 
 #  define OCTAVE_UNUSED __attribute__ ((__unused__))
-#  define HAVE_ATTR_UNUSED
+#  define HAVE_ATTR_UNUSED 1
 #else
 #  define OCTAVE_DEPRECATED(msg)
 #  define OCTAVE_NORETURN
 #  define OCTAVE_UNUSED
 #endif
 
 #if ! defined (HAVE_DEV_T)
 typedef short dev_t;
 #endif
 
 #if ! defined (HAVE_INO_T)
 typedef unsigned long ino_t;
 #endif
 
 #if defined (_MSC_VER)
-#  define __WIN32__
-#  define WIN32
+#  define __WIN32__ 1
+#  define WIN32 1
    /* missing parameters in macros */
 #  pragma warning (disable: 4003)
    /* missing implementations in template instantiation */
 #  pragma warning (disable: 4996)
    /* deprecated function names (FIXME: ???) */
 #  pragma warning (disable: 4661)
 #endif
 
@@ -84,17 +84,17 @@ typedef unsigned long ino_t;
 #endif
 
 #if defined (__APPLE__) && defined (__MACH__)
 #  define OCTAVE_USE_OS_X_API 1
 #endif
 
 /* sigsetjmp is a macro, not a function. */
 #if defined (sigsetjmp) && defined (HAVE_SIGLONGJMP)
-#  define OCTAVE_HAVE_SIG_JUMP
+#  define OCTAVE_HAVE_SIG_JUMP 1
 #endif
 
 #if defined (_UNICOS)
 #  define F77_USES_CRAY_CALLING_CONVENTION
 #endif
 
 #if 0
 #  define F77_USES_VISUAL_FORTRAN_CALLING_CONVENTION
@@ -170,21 +170,21 @@ typedef unsigned long ino_t;
 
 /* Backward compatibility */
 
 #if defined (ENABLE_ATOMIC_REFCOUNT)
 #  define USE_ATOMIC_REFCOUNT 1
 #endif
 
 #if defined (ENABLE_64)
-#  define USE_64_BIT_IDX_T
+#  define USE_64_BIT_IDX_T 1
 #endif
 
 #if defined (ENABLE_OPENMP)
-#  define HAVE_OPENMP
+#  define HAVE_OPENMP 1
 #endif
 
 #if defined (ENABLE_FLOAT_TRUNCATE)
 #  define FLOAT_TRUNCATE volatile
 #else
 #  define FLOAT_TRUNCATE
 #endif
 
diff --git a/src/display-available.h b/src/display-available.h
--- a/src/display-available.h
+++ b/src/display-available.h
@@ -15,18 +15,23 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
+#if ! defined (octave_display_available_h)
+#define octave_display_available_h 1
+
 #ifdef __cplusplus
 #  include <new>
 extern "C" {
 #endif
 
 extern const char *display_available (int *dpy_avail);
 
 #ifdef __cplusplus
 }
 #endif
+
+#endif
diff --git a/src/shared-fcns.h b/src/shared-fcns.h
--- a/src/shared-fcns.h
+++ b/src/shared-fcns.h
@@ -15,16 +15,19 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
+#if ! defined (octave_shared_fcns_h)
+#define octave_shared_fcns_h 1
+
 #if defined (__WIN32__) && ! defined (_POSIX_VERSION)
 
 #include <windows.h>
 #include <tlhelp32.h>
 
 #ifdef _MSC_VER
 #  define popen _popen
 #  define pclose _pclose
@@ -135,8 +138,10 @@ subst_octave_home (const std::string& s)
         retval.replace (0, len, octave_home);
     }
 
   if (dir_sep_char != '/')
     std::replace (retval.begin (), retval.end (), '/', dir_sep_char);
 
   return retval;
 }
+
+#endif
