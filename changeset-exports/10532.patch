# HG changeset patch
# User Ben Abbott <bpabbott@mac.com>
# Date 1271676150 14400
#      Mon Apr 19 07:22:30 2010 -0400
# Node ID 568c7c041facce27789bba29a9a3d1a38ea7708f
# Parent  2dd8ea8bfd71439702d820f806e595a40dcbd6b9
colorbar.m: Consistent treatment of plotboxaspectratio. Add listener for plotboxaspectratiomode.

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,15 @@
+2010-04-19  Ben Abbott <bpabbott@mac.com>
+
+	* /plot/colorbar.m: Consistent treatment of plotboxaspectratio, and
+	add listener for plotboxaspectratiomode.
+	* /plot/axis.m: Consistent treatment of plotboxaspectratio.
+	* /plot/__go_draw_axes__.m: Consistently determine axes position.
+
 2010-04-17  Ben Abbott <bpabbott@mac.com>
 
 	* plot/private/__actual_axis_position__.m: Fix bug when restoring
 	figure position property to its original value.
 
 2010-04-16  David Bateman  <dbateman@free.fr>
 
 	* plot/__go_draw_figure__.m: Pass bg_is_set to __go_draw_axes__. Don't
diff --git a/scripts/plot/__go_draw_axes__.m b/scripts/plot/__go_draw_axes__.m
--- a/scripts/plot/__go_draw_axes__.m
+++ b/scripts/plot/__go_draw_axes__.m
@@ -41,22 +41,23 @@ function __go_draw_axes__ (h, plot_strea
     ## Set to false for plotyy axes.
     if (strcmp (axis_obj.tag, "plotyy"))
       ymirror = false;
     else
       ymirror = true;
     endif
 
     nd = __calc_dimensions__ (axis_obj);
-    pos = axis_obj.position;
-    pos = pos - implicit_margin([1, 2, 1, 2]).*[1, 1, -0.5, -0.5];
+    if (strcmpi (axis_obj.plotboxaspectratiomode, "manual"))
+      pos = __actual_axis_position__ (axis_obj);
+    else
+      pos = axis_obj.position;
+      pos = pos - implicit_margin([1, 2, 1, 2]).*[1, 1, -0.5, -0.5];
+    endif
     if (__gnuplot_has_feature__ ("screen_coordinates_for_{lrtb}margin"))
-      if (strcmpi (axis_obj.plotboxaspectratiomode, "manual"))
-	pos = __actual_axis_position__ (axis_obj);
-      endif
       if (nd == 2)
 	x = [1, 1];
       else
 	## 3D plots need to be sized down to fit in the window.
 	x = 1.0 ./ sqrt([2, 2.5]);
       endif
       fprintf (plot_stream, "set tmargin screen %.15g;\n", pos(2)+pos(4)/2+x(2)*pos(4)/2);
       fprintf (plot_stream, "set bmargin screen %.15g;\n", pos(2)+pos(4)/2-x(2)*pos(4)/2);
@@ -67,18 +68,18 @@ function __go_draw_axes__ (h, plot_strea
       fprintf (plot_stream, "set tmargin 0;\n");
       fprintf (plot_stream, "set bmargin 0;\n");
       fprintf (plot_stream, "set lmargin 0;\n");
       fprintf (plot_stream, "set rmargin 0;\n");
 
       fprintf (plot_stream, "set origin %.15g, %.15g;\n", pos(1), pos(2));
       fprintf (plot_stream, "set size %.15g, %.15g;\n", pos(3), pos(4));
 
-      if (strcmpi (axis_obj.plotboxaspectratiomode, "manual"))
-        r = axis_obj.plotboxaspectratio;
+      if (strcmpi (axis_obj.dataaspectratiomode, "manual"))
+        r = axis_obj.dataaspectratio;
         fprintf (plot_stream, "set size ratio %.15g;\n", -r(2)/r(1));
       else
         fputs (plot_stream, "set size noratio;\n");
       endif
     endif
 
     ## Reset all labels, axis-labels, tick-labels, and title
     ## FIXME - We should have an function to initialize the axis.
diff --git a/scripts/plot/axis.m b/scripts/plot/axis.m
--- a/scripts/plot/axis.m
+++ b/scripts/plot/axis.m
@@ -159,31 +159,21 @@ function curr_axis = __axis__ (ca, ax, v
     elseif (strcmpi (ax, "xy"))
       set (ca, "ydir", "normal");
 
       ## aspect ratio
     elseif (strcmpi (ax, "image"))
       __axis__ (ca, "equal")
       __do_tight_option__ (ca);
     elseif (strcmpi (ax, "square"))
-      if (__gnuplot_has_feature__ ("screen_coordinates_for_{lrtb}margin"))
-        set (ca, "plotboxaspectratio", [1, 1, 1]);
-      else
-        x = xlim;
-        y = ylim;
-        set (ca, "plotboxaspectratio", [(y(2)-y(1)), (x(2)-x(1)), 1]);
-      endif
+      set (ca, "plotboxaspectratio", [1, 1, 1]);
     elseif  (strcmp (ax, "equal"))
-      if (__gnuplot_has_feature__ ("screen_coordinates_for_{lrtb}margin"))
-        x = xlim;
-        y = ylim;
-        set (ca, "plotboxaspectratio", [(x(2)-x(1)), (y(2)-y(1)), 1]);
-      else
-        set (ca, "plotboxaspectratio", [1, 1, 1]);
-      endif
+      x = xlim;
+      y = ylim;
+      set (ca, "plotboxaspectratio", [(x(2)-x(1)), (y(2)-y(1)), 1]);
     elseif (strcmpi (ax, "normal"))
       set (ca, "plotboxaspectratiomode", "auto");
 
       ## axis limits
     elseif (len >= 4 && strcmpi (ax(1:4), "auto"))
       if (len > 4)
 	if (any (ax == "x"))
 	  set (ca, "xlimmode", "auto");
diff --git a/scripts/plot/colorbar.m b/scripts/plot/colorbar.m
--- a/scripts/plot/colorbar.m
+++ b/scripts/plot/colorbar.m
@@ -103,17 +103,17 @@ function h = colorbar (varargin)
     clen = rows (get (get (ax, "parent"), "colormap"));
     cext = get (ax, "clim");
     cdiff = (cext(2) - cext(1)) / clen / 2;
     cmin = cext(1) + cdiff;
     cmax = cext(2) - cdiff;
 
     orig_pos = obj.position;
     orig_opos = obj.outerposition;
-    [pos, cpos, vertical, mirror, aspect] =  ...
+    [pos, cpos, vertical, mirror] =  ...
 	__position_colorbox__ (loc, obj, ancestor (ax, "figure"));
     set (ax, "activepositionproperty", "position", "position", pos);
 
     cax = __go_axes__ (get (ax, "parent"), "tag", "colorbar", 
     		       "handlevisibility", "on", 
 		       "activepositionproperty", "position", 
 		       "position", cpos);
     addproperty ("location", cax, "radio",
@@ -140,29 +140,26 @@ function h = colorbar (varargin)
 	     "xaxislocation", "top", args{:});
       else
 	set (cax, "ytick", [], "xdir", "normal", "ydir", "normal",
 	     "xlim", cext, "xlimmode", "manual",
 	     "xaxislocation", "bottom", args{:});
       endif
     endif
 
-    if (! isnan (aspect))
-      set (cax, "plotboxaspectratio", aspect);
-    endif
-
     ctext = text (0, 0, "", "tag", "colorbar","visible", "off", 
 		  "handlevisibility", "off", "xliminclude", "off",  
 		  "yliminclude", "off", "zliminclude", "off",
 		  "deletefcn", {@deletecolorbar, cax, orig_pos, orig_opos});
 
     set (cax, "deletefcn", {@resetaxis, orig_pos, orig_opos});
 
     addlistener (ax, "clim", {@update_colorbar_clim, hi, vertical})
     addlistener (ax, "plotboxaspectratio", {@update_colorbar_axis, cax})
+    addlistener (ax, "plotboxaspectratiomode", {@update_colorbar_axis, cax})
     addlistener (ax, "position", {@update_colorbar_axis, cax})
 
   endif
 
   if (nargout > 0)
     h = cax;
   endif
 endfunction
@@ -209,17 +206,17 @@ function update_colorbar_clim (h, d, hi,
   endif
 endfunction
 
 function update_colorbar_axis (h, d, cax)
   if (ishandle (cax) && strcmp (get (cax, "type"), "axes") && 
       (isempty (gcbf()) || strcmp (get (gcbf(), "beingdeleted"),"off")))
     loc = get (cax, "location");
     obj = get (h);
-    [pos, cpos, vertical, mirror, aspect] =  ...
+    [pos, cpos, vertical, mirror] =  ...
 	__position_colorbox__ (loc, obj, ancestor (h, "figure"));
 
     if (vertical)
       if (mirror)
 	set (cax, "xtick", [], "xdir", "normal", "ydir", "normal",
 	     "yaxislocation", "right", "position", cpos);
       else
 	set (cax, "xtick", [], "xdir", "normal", "ydir", "normal",
@@ -230,23 +227,20 @@ function update_colorbar_axis (h, d, cax
 	set (cax, "ytick", [], "xdir", "normal", "ydir", "normal",
 	     "xaxislocation", "top", "position", cpos);
       else
 	set (cax, "ytick", [], "xdir", "normal", "ydir", "normal",
 	     "xaxislocation", "bottom", "position", cpos);
       endif
     endif
 
-    if (! isnan (aspect))
-      set (cax, "plotboxaspectratio", aspect);
-    endif
   endif
 endfunction
 
-function [pos, cpos, vertical, mirr, aspect] = __position_colorbox__ (cbox, obj, cf)
+function [pos, cpos, vertical, mirr] = __position_colorbox__ (cbox, obj, cf)
 
   pos = obj.position;
   sz = pos(3:4);
 
   off = 0;
   if (strcmpi (obj.plotboxaspectratiomode, "manual"))
     r = obj.plotboxaspectratio;
     if (pos(3) > pos(4))
@@ -320,43 +314,32 @@ function [pos, cpos, vertical, mirr, asp
       sz = sz .* [0.06, 1.0] .* 0.9;
       mirr = true;
       vertical = true;
   endswitch
 
   cpos = [origin, sz];
 
   if (strcmpi (obj.plotboxaspectratiomode, "manual"))
-    if (__gnuplot_has_feature__ ("screen_coordinates_for_{lrtb}margin"))
-      obj.position = pos;
-      actual_pos = __actual_axis_position__ (obj);
-      if (strfind (cbox, "outside"))
-	scale = 1.0;
-      else
-	scale = 0.9;
-      endif
-      if (sz(1) > sz(2))
-	dx = (1-scale)*actual_pos(3);
-	cpos(1) = actual_pos(1) + dx/2;
-	cpos(3) = actual_pos(3) - dx;
-      else
-	dy = (1-scale)*actual_pos(4);
-	cpos(2) = actual_pos(2) + dy/2;
-	cpos(4) = actual_pos(4) - dy;
-      endif
-      aspect = NaN;
+    obj.position = pos;
+    actual_pos = __actual_axis_position__ (obj);
+    if (strfind (cbox, "outside"))
+      scale = 1.0;
     else
-      if (vertical)
-	aspect = [1, 0.21, 1];
-      else
-	aspect = [0.21, 1, 1];
-      endif
+      scale = 0.9;
     endif
-  else
-    aspect = NaN;
+    if (sz(1) > sz(2))
+      dx = (1-scale)*actual_pos(3);
+      cpos(1) = actual_pos(1) + dx/2;
+      cpos(3) = actual_pos(3) - dx;
+    else
+      dy = (1-scale)*actual_pos(4);
+      cpos(2) = actual_pos(2) + dy/2;
+      cpos(4) = actual_pos(4) - dy;
+    endif
   endif
 
 endfunction
 
 %!demo
 %! clf
 %! n = 64; x = kron (1:n,ones(n,1)); x = abs(x - x.'); 
 %! imagesc(x)
