# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1294429735 18000
#      Fri Jan 07 14:48:55 2011 -0500
# Node ID 990c9cb52e5f4783b460c591b963b75d14885cd2
# Parent  93a039fe681e97ad32dfa183a35c6cbba60dec99
__isequal__: compare objects as if they are structures

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2011-01-07  John W. Eaton  <jwe@octave.org>
+
+	* general/private/__isequal__.m: Compare objects as if they are
+	structures.
+
 2011-01-07  John W. Eaton  <jwe@octave.org>
 
 	* linear-algebra/logm.m: Style fixes.
 
 2011-01-06  John W. Eaton  <jwe@octave.org>
 
 	* optimization/optimset.m: Remove "i" option from call to
 	lookup.  Bug #31392.
diff --git a/scripts/general/private/__isequal__.m b/scripts/general/private/__isequal__.m
--- a/scripts/general/private/__isequal__.m
+++ b/scripts/general/private/__isequal__.m
@@ -54,17 +54,17 @@ function t = __isequal__ (nans_compare_e
 
   l_v = nargin - 2;
 
   ## Generic tests.
 
   ## All arguments must either be of the same class or they must be
   ## numeric values.
   t = (all (strcmp (class(x),
-                   cellfun (@class, varargin, "uniformoutput", false)))
+                    cellfun (@class, varargin, "uniformoutput", false)))
        || ((isnumeric (x) || islogical (x))
            && all (cellfun (@isnumeric, varargin)
                    | cellfun (@islogical, varargin))));
 
   if (t)
     ## Test that everything has the same number of dimensions.
     s_x = size (x);
     s_v = cellfun (@size, varargin, "uniformoutput", false);
@@ -78,16 +78,22 @@ function t = __isequal__ (nans_compare_e
     s_v = reshape ([s_v{:}], length (s_x), []);
     idx = 0;
     while (t && idx < l_x)
       idx++;
       t = all (s_x(idx) == s_v(idx,:));
     endwhile
   endif
 
+  ## From here on, compare objects as if they were structures.
+  if (isobject (x))
+    x = struct (x);
+    varargin = cellfun (@struct, varargin, "uniformoutput", false);
+  endif
+
   if (t)
     ## Check individual classes.
     if (isstruct (x))
       ## Test the number of fields.
       fn_x = fieldnames (x);
       l_fn_x = length (fn_x);
       fn_v = cellfun (@fieldnames, varargin, "uniformoutput", false);
       t = all (l_fn_x == cellfun (@length, fn_v));
