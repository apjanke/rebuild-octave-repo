# HG changeset patch
# User jwe
# Date 953286270 0
#      Fri Mar 17 09:44:30 2000 +0000
# Node ID b1ff6597576f31a51dca1575b97766be0640098f
# Parent  1222153daafbc56b9b12bb8f912f661c4ed31d04
[project @ 2000-03-17 09:44:29 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,19 @@
+2000-03-17  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* c_file_ptr_stream.h, c_file_ptr_stream.cc: New files.
+	* oct-stdstrm.h, oct-stdstrm.cc, oct-prcstrm.cc:
+	Use c_file_ptr_buf, i_c_file_ptr_stream, and o_c_fie_ptr_stream
+	instead of stdiobuf, istdiostream, and ostdiostream.
+
+	* pr-output.cc (set_real_format, set_real_matrix_format,
+	set_complex_format, set_complex_matrix_format, set_range_format):
+	Do the right thing again for int, NaN, and Inf values.
+
 2000-03-14  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* pr-output.cc (pr_plus_format): Rename from do_plus_format.
 	Change all callers.
 	(pr_float, pr_complex): New arg, scale.  Handle scaling here.
 	(float_format): New class for managing details of formatting
 	floats.  Use it instead of character string formats and the
 	nonstandard form() function from the GNU iostream library.
diff --git a/src/Makefile.in b/src/Makefile.in
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -73,19 +73,19 @@ OV_INCLUDES := ov-re-mat.h ov-cx-mat.h o
 
 PT_INCLUDES := pt.h pt-all.h pt-arg-list.h pt-assign.h pt-binop.h \
 	pt-cell.h pt-check.h pt-cmd.h pt-colon.h pt-const.h pt-decl.h \
 	pt-except.h pt-exp.h pt-id.h pt-idx.h pt-indir.h \
 	pt-jump.h pt-loop.h pt-mat.h pt-misc.h pt-plot.h \
 	pt-pr-code.h pt-select.h pt-stmt.h pt-unop.h pt-walk.h
 
 INCLUDES := BaseSLList.h Cell.h DLList.h Map.h Pix.h SLList.h \
-	SLStack.h Stack.h defun-dld.h defun-int.h defun.h \
-	dirfns.h dynamic-ld.h error.h file-io.h fn-cache.h \
-	gripes.h help.h input.h lex.h load-save.h \
+	SLStack.h Stack.h c_file_ptr_stream.h defun-dld.h \
+	defun-int.h defun.h dirfns.h dynamic-ld.h error.h file-io.h \
+	fn-cache.h gripes.h help.h input.h lex.h load-save.h \
 	oct-fstrm.h oct-hist.h oct-iostrm.h oct-map.h oct-obj.h \
 	oct-prcstrm.h oct-procbuf.h oct-stdstrm.h oct-stream.h \
 	oct-strstrm.h oct-lvalue.h oct.h ops.h pager.h parse.h \
 	pr-output.h procstream.h sighandlers.h siglist.h symtab.h \
 	sysdep.h token.h toplev.h unwind-prot.h utils.h \
 	variables.h version.h xdiv.h xpow.h $(OV_INCLUDES) $(PT_INCLUDES)
 
 TI_XSRC := Array-oc.cc Array-os.cc Array-sym.cc Array-tc.cc Map-fnc.cc \
@@ -115,26 +115,26 @@ OV_SRC := ov-base.cc ov-base-mat.cc ov-b
 
 PT_SRC := pt.cc pt-arg-list.cc pt-assign.cc pt-binop.cc pt-cell.cc \
 	pt-check.cc pt-cmd.cc pt-colon.cc pt-const.cc pt-decl.cc \
 	pt-except.cc pt-exp.cc pt-id.cc pt-idx.cc pt-indir.cc pt-jump.cc \
 	pt-loop.cc pt-mat.cc pt-misc.cc pt-plot.cc pt-pr-code.cc \
 	pt-select.cc pt-stmt.cc pt-unop.cc
 
 DIST_SRC := BaseSLList.cc Cell.cc DLList.cc Map.cc SLList.cc \
-	SLStack.cc Stack.cc cutils.c data.cc defaults.cc defun.cc \
-	dirfns.cc dynamic-ld.cc error.cc file-io.cc fn-cache.cc \
-	gripes.cc help.cc input.cc lex.l load-save.cc mappers.cc \
-	matherr.c oct-fstrm.cc oct-hist.cc oct-iostrm.cc oct-map.cc \
-	oct-obj.cc oct-prcstrm.cc oct-procbuf.cc oct-stdstrm.cc \
-	oct-stream.cc oct-strstrm.cc oct-lvalue.cc pager.cc parse.y \
-	pr-output.cc procstream.cc sighandlers.cc siglist.c \
-	strcasecmp.c strncase.c strfns.cc symtab.cc syscalls.cc \
-	sysdep.cc system.c token.cc toplev.cc unwind-prot.cc \
-	utils.cc variables.cc xdiv.cc xpow.cc \
+	SLStack.cc Stack.cc c_file_ptr_stream.cc cutils.c data.cc \
+	defaults.cc defun.cc dirfns.cc dynamic-ld.cc error.cc \
+	file-io.cc fn-cache.cc gripes.cc help.cc input.cc lex.l \
+	load-save.cc mappers.cc matherr.c oct-fstrm.cc oct-hist.cc \
+	oct-iostrm.cc oct-map.cc oct-obj.cc oct-prcstrm.cc \
+	oct-procbuf.cc oct-stdstrm.cc oct-stream.cc oct-strstrm.cc \
+	oct-lvalue.cc pager.cc parse.y pr-output.cc procstream.cc \
+	sighandlers.cc siglist.c strcasecmp.c strncase.c strfns.cc \
+	symtab.cc syscalls.cc sysdep.cc system.c token.cc toplev.cc \
+	unwind-prot.cc utils.cc variables.cc xdiv.cc xpow.cc \
 	$(OV_SRC) \
 	$(PT_SRC)
 
 SOURCES := $(DIST_SRC) $(OP_SRC) $(TI_SRC)
 
 OBJECTS_4 := $(notdir $(SOURCES))
 OBJECTS_3 := $(patsubst %.l, %.o, $(OBJECTS_4))
 OBJECTS_2 := $(patsubst %.y, %.o, $(OBJECTS_3))
diff --git a/src/oct-prcstrm.cc b/src/oct-prcstrm.cc
--- a/src/oct-prcstrm.cc
+++ b/src/oct-prcstrm.cc
@@ -40,17 +40,17 @@ octave_iprocstream::octave_iprocstream (
 					oct_mach_info::float_format flt_fmt)
   : octave_istdiostream (n, 0, arg_md, flt_fmt)
 {
   fp = popen (n.c_str (), "r");
 
   if (fp)
     {
       delete is;
-      is = new std::istdiostream (fp);
+      is = new i_c_file_ptr_stream (fp);
     }
 }
 
 octave_iprocstream::~octave_iprocstream (void)
 {
   if (fp)
     {
       pclose (fp);
@@ -70,17 +70,17 @@ octave_oprocstream::octave_oprocstream (
 					oct_mach_info::float_format flt_fmt)
   : octave_ostdiostream (n, 0, arg_md, flt_fmt)
 {
   fp = popen (n.c_str (), "w");
 
   if (fp)
     {
       delete os;
-      os = new std::ostdiostream (fp);
+      os = new o_c_file_ptr_stream (fp);
     }
 }
 
 octave_oprocstream::~octave_oprocstream (void)
 {
   if (fp)
     {
       pclose (fp);
diff --git a/src/oct-stdstrm.cc b/src/oct-stdstrm.cc
--- a/src/oct-stdstrm.cc
+++ b/src/oct-stdstrm.cc
@@ -41,44 +41,44 @@ octave_base_stdiostream::~octave_base_st
 
 int
 octave_base_stdiostream::seek (std::streamoff offset, std::ios::seek_dir origin)
 {
   int retval = -1;
 
   if (! bad ())
     {
-      stdiobuf *sb = rdbuf ();
+      c_file_ptr_buf *sb = rdbuf ();
 
       if (sb)
 	{
 	  clear ();
 
-	  sb->seekoff (offset, origin);
+	  sb->pubseekoff (offset, origin);
 	  retval = bad () ? -1 : 0;
 	}
     }
 
   return retval;
 }
 
 // Return current stream position.
 
 long
 octave_base_stdiostream::tell (void) const
 {
   long retval = -1;
 
   if (! bad ())
     {
-      stdiobuf *sb = rdbuf ();
+      c_file_ptr_buf *sb = rdbuf ();
 
       if (sb)
 	{
-	  retval = static_cast<long> (sb->seekoff (0, ios::cur));
+	  retval = static_cast<long> (sb->pubseekoff (0, std::ios::cur));
 
 	  if (bad ())
 	    retval = -1;
 	}
     }
 
   return retval;
 }
@@ -92,17 +92,17 @@ octave_istdiostream::create (const std::
 }
 
 octave_istdiostream::octave_istdiostream (const std::string& n, FILE *f,
 					  ios::openmode arg_md,
 					  oct_mach_info::float_format flt_fmt)
   : octave_base_stdiostream (n, f, arg_md, flt_fmt), is (0)
 {
   if (f)
-    is = new std::istdiostream (f);
+    is = new i_c_file_ptr_stream (f);
 }
 
 octave_istdiostream::~octave_istdiostream (void)
 {
   delete is;
 }
 
 octave_stream
@@ -114,17 +114,17 @@ octave_ostdiostream::create (const std::
 }
 
 octave_ostdiostream::octave_ostdiostream (const std::string& n, FILE *f,
 					  ios::openmode arg_md,
 					  oct_mach_info::float_format flt_fmt)
   : octave_base_stdiostream (n, f, arg_md, flt_fmt), os (0)
 {
   if (f)
-    os = new std::ostdiostream (f);
+    os = new o_c_file_ptr_stream (f);
 }
 
 octave_ostdiostream::~octave_ostdiostream (void)
 {
   delete os;
 }
 
 /*
diff --git a/src/oct-stdstrm.h b/src/oct-stdstrm.h
--- a/src/oct-stdstrm.h
+++ b/src/oct-stdstrm.h
@@ -18,19 +18,18 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, write to the Free
 Software Foundation, 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 */
 
 #if !defined (octave_octave_stdiostream_h)
 #define octave_octave_stdiostream_h 1
 
-#include <stdiostream.h>
-
 #include "oct-stream.h"
+#include "c_file_ptr_stream.h"
 
 class
 octave_base_stdiostream : public octave_base_stream
 {
 public:
 
   octave_base_stdiostream
     (const std::string& n, FILE *f,
@@ -45,17 +44,17 @@ public:
   // Return current stream position.
 
   long tell (void) const;
 
   // The name of the file.
 
   std::string name (void) const { return nm; }
 
-  virtual stdiobuf *rdbuf (void) const = 0;
+  virtual c_file_ptr_buf *rdbuf (void) const = 0;
 
   virtual bool bad (void) const = 0;
 
   virtual void clear (void) = 0;
 
 protected:
 
   std::string nm;
@@ -90,30 +89,29 @@ public:
 
   bool eof (void) const { return is ? is->eof () : true; }
 
   std::istream *input_stream (void) { return is; }
 
   std::ostream *output_stream (void) { return 0; }
 
   // XXX FIXME XXX -- should not have to cast away const here.
-  stdiobuf *rdbuf (void) const
-    { return is ? (const_cast<std::istdiostream *> (is))->rdbuf () : 0; }
+  c_file_ptr_buf *rdbuf (void) const { return is ? is->rdbuf () : 0; }
 
   bool bad (void) const { return is ? is->bad () : true; }
 
   void clear (void)
     {
       if (is)
 	is->clear ();
     }
 
 protected:
 
-  std::istdiostream *is;
+  i_c_file_ptr_stream *is;
 
   ~octave_istdiostream (void);
 
 private:
 
   // No copying!
 
   octave_istdiostream (const octave_istdiostream&);
@@ -140,30 +138,30 @@ public:
 
   bool eof (void) const { return os ? os->eof () : true; }
 
   std::istream *input_stream (void) { return 0; }
 
   std::ostream *output_stream (void) { return os; }
 
   // XXX FIXME XXX -- should not have to cast away const here.
-  stdiobuf *rdbuf (void) const
-    { return os ? (const_cast<std::ostdiostream *> (os))->rdbuf () : 0; }
+  c_file_ptr_buf *rdbuf (void) const
+    { return os ? (const_cast<o_c_file_ptr_stream *> (os))->rdbuf () : 0; }
 
   bool bad (void) const { return os ? os->bad () : true; }
 
   void clear (void)
     {
       if (os)
 	os->clear ();
     }
 
 protected:
 
-  std::ostdiostream *os;
+  o_c_file_ptr_stream *os;
 
   ~octave_ostdiostream (void);
 
 private:
 
   // No copying!
 
   octave_ostdiostream (const octave_ostdiostream&);
diff --git a/src/pr-output.cc b/src/pr-output.cc
--- a/src/pr-output.cc
+++ b/src/pr-output.cc
@@ -242,17 +242,17 @@ pr_min_internal (const Matrix& m)
 
   return result;
 }
 
 // XXX FIXME XXX -- it would be nice to share more code among these
 // functions,..
 
 static void
-set_real_format (bool sign, int digits, bool inf_or_nan, bool nan_or_int,
+set_real_format (bool sign, int digits, bool inf_or_nan, bool int_only,
 		 int &fw)
 {
   static float_format fmt;
 
   int prec = Voutput_precision;
 
   int ld, rd;
 
@@ -269,17 +269,17 @@ set_real_format (bool sign, int digits, 
       fw = 2 * sizeof (double);
       rd = 0;
     }
   else if (bit_format)
     {
       fw = 8 * sizeof (double);
       rd = 0;
     }
-  else if (nan_or_int)
+  else if (inf_or_nan || int_only)
     {
       fw = digits;
       if (inf_or_nan && fw < 3)
 	fw = 3;
       fw += sign;
       rd = 0;
     }
   else
@@ -315,16 +315,18 @@ set_real_format (bool sign, int digits, 
 	fw = 3;
       fw += sign;
 
       fmt = float_format (fw, prec - 1, std::ios::scientific);
 
       if (print_big_e)
 	fmt.uppercase ();
     }
+  else if (inf_or_nan || int_only)
+    fmt = float_format (fw, rd);
   else
     fmt = float_format (fw, rd, std::ios::fixed);
 
   curr_real_fmt = &fmt;
 }
 
 static void
 set_format (double d, int& fw)
@@ -334,24 +336,24 @@ set_format (double d, int& fw)
 
   if (free_format)
     return;
 
   bool sign = (d < 0.0);
 
   bool inf_or_nan = (xisinf (d) || xisnan (d));
 
-  bool nan_or_int = (xisnan (d) || D_NINT (d) == d);
+  bool int_only = (! inf_or_nan && D_NINT (d) == d);
 
   double d_abs = d < 0.0 ? -d : d;
 
   int digits = (inf_or_nan || d_abs == 0.0)
     ? 0 : static_cast<int> (floor (log10 (d_abs) + 1.0));
 
-  set_real_format (sign, digits, inf_or_nan, nan_or_int, fw);
+  set_real_format (sign, digits, inf_or_nan, int_only, fw);
 }
 
 static inline void
 set_format (double d)
 {
   int fw;
   set_format (d, fw);
 }
@@ -454,16 +456,18 @@ set_real_matrix_format (bool sign, int x
 	fw = 3;
       fw += sign;
 
       fmt = float_format (fw, prec - 1, std::ios::scientific);
 
       if (print_big_e)
 	fmt.uppercase ();
     }
+  else if (int_or_inf_or_nan)
+    fmt = float_format (fw, rd);
   else
     fmt = float_format (fw, rd, std::ios::fixed);
 
   curr_real_fmt = &fmt;
 }
 
 static void
 set_format (const Matrix& m, int& fw, double& scale)
@@ -601,16 +605,21 @@ set_complex_format (bool sign, int x_max
       i_fmt = float_format (i_fw, prec - 1, std::ios::scientific);
 
       if (print_big_e)
 	{
 	  r_fmt.uppercase ();
 	  i_fmt.uppercase ();
 	}
     }
+  else if (inf_or_nan || int_only)
+    {
+      r_fmt = float_format (r_fw, rd);
+      i_fmt = float_format (i_fw, rd);
+    }
   else
     {
       r_fmt = float_format (r_fw, rd, std::ios::fixed);
       i_fmt = float_format (i_fw, rd, std::ios::fixed);
     }
 
   curr_real_fmt = &r_fmt;
   curr_imag_fmt = &i_fmt;
@@ -774,16 +783,21 @@ set_complex_matrix_format (bool sign, in
       i_fmt = float_format (i_fw, prec - 1, std::ios::scientific);
 
       if (print_big_e)
 	{
 	  r_fmt.uppercase ();
 	  i_fmt.uppercase ();
 	}
     }
+  else if (int_or_inf_or_nan)
+    {
+      r_fmt = float_format (r_fw, rd);
+      i_fmt = float_format (i_fw, rd);
+    }
   else
     {
       r_fmt = float_format (r_fw, rd, std::ios::fixed);
       i_fmt = float_format (i_fw, rd, std::ios::fixed);
     }
 
   curr_real_fmt = &r_fmt;
   curr_imag_fmt = &i_fmt;
@@ -927,16 +941,18 @@ set_range_format (bool sign, int x_max, 
 
       fw = sign + 2 + prec + exp_field;
 
       fmt = float_format (fw, prec - 1, std::ios::scientific);
 
       if (print_big_e)
 	fmt.uppercase ();
     }
+  else if (all_ints)
+    fmt = float_format (fw, rd);
   else
     fmt = float_format (fw, rd, std::ios::fixed);
 
   curr_real_fmt = &fmt;
 }
 
 static void
 set_format (const Range& r, int& fw, double& scale)
