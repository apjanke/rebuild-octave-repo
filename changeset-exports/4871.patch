# HG changeset patch
# User jwe
# Date 1082574328 0
#      Wed Apr 21 19:05:28 2004 +0000
# Node ID 9c89c1408c325ebb26b6369c4b36687a0d4dec5c
# Parent  2cbc6f37b0c2d11727c617b828b457bbb2e76d56
[project @ 2004-04-21 19:05:28 by jwe]

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,12 @@
+2004-04-21  John W. Eaton  <jwe@octave.org>
+
+	* mx-inlines.cc (MX_ND_REDUCTION): Chop trailing singletons.
+
 2004-04-06  David Bateman  <dbateman@free.fr>
 
 	* Array.cc (Array<T>::resize_no_fill (const dim_vector& dv),
 	Array<T>::resize_and_fill (const dim_vector& dv, const T& val)):
 	Make their behavior equivalent except for filling vs. not filling.
 
   	* oct-sort.cc: New template class for arbitrary sorting.
   	* oct-sort.h: Declaration of sort class.
diff --git a/liboctave/mx-inlines.cc b/liboctave/mx-inlines.cc
--- a/liboctave/mx-inlines.cc
+++ b/liboctave/mx-inlines.cc
@@ -477,16 +477,18 @@ OP_DUP_FCN (conj, mx_inline_conj_dup, Co
       if (dim > -1) \
         iter_idx (dim) = 0; \
  \
       END_EXPR;\
  \
       increment_index (iter_idx, dv); \
     } \
  \
+  retval.chop_trailing_singletons (); \
+ \
   return retval
 
 #define MX_ND_REAL_OP_REDUCTION(ASN_EXPR, INIT_VAL) \
   MX_ND_REDUCTION (acc ASN_EXPR, retval.elem (iter_idx) = acc, \
                    INIT_VAL, double acc = INIT_VAL, NDArray)
 
 #define MX_ND_COMPLEX_OP_REDUCTION(ASN_EXPR, INIT_VAL) \
   MX_ND_REDUCTION (acc ASN_EXPR, retval.elem (iter_idx) = acc, \
