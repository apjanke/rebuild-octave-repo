# HG changeset patch
# User Olaf Till <olaf.till@uni-jena.de>
# Date 1442409224 -7200
#      Wed Sep 16 15:13:44 2015 +0200
# Node ID 8644e7df7fc72d9bea9df404d07f0f5841fae7d5
# Parent  cbb197e84b60b75cb49840c2786e5799261e2bda
print and save anonymous functions with varargin correctly (bug #45972)

* pt-pr-code.cc (tree_print_code::visit_parameter_list ()): Print 'varargin' if
marked for varargs.
* pt-pr-code.cc (tree_print_code::visit_octave_user_function_header ()): Never
print 'varargin', rely on visit_parameter_list () for this.

* test/bug-45972/bug-45972.tst: New testfile for saving anonymous functions
with varargin.

* test/module.mk, test/bug-45972/module.mk: Add bug-45972.tst to build system.

diff --git a/libinterp/parse-tree/pt-pr-code.cc b/libinterp/parse-tree/pt-pr-code.cc
--- a/libinterp/parse-tree/pt-pr-code.cc
+++ b/libinterp/parse-tree/pt-pr-code.cc
@@ -386,24 +386,16 @@ namespace octave
         if (len > 0 || takes_varargs)
           {
             m_os << '(';
             m_nesting.push ('(');
           }
 
         param_list->accept (*this);
 
-        if (takes_varargs)
-          {
-            if (len > 0)
-              m_os << ", ";
-
-            m_os << "varargin";
-          }
-
         if (len > 0 || takes_varargs)
           {
             m_nesting.pop ();
             m_os << ')';
             newline ();
           }
       }
     else
@@ -759,20 +751,23 @@ namespace octave
     while (p != lst.end ())
       {
         tree_decl_elt *elt = *p++;
 
         if (elt)
           {
             elt->accept (*this);
 
-            if (p != lst.end ())
+            if (p != lst.end () || lst.takes_varargs ())
               m_os << ", ";
           }
       }
+ 
+    if (lst.takes_varargs ())
+      m_os << "varargin";
   }
 
   void
   tree_print_code::visit_postfix_expression (tree_postfix_expression& expr)
   {
     indent ();
 
     print_parens (expr, "(");
diff --git a/test/bug-45972/bug-45972.tst b/test/bug-45972/bug-45972.tst
new file mode 100644
--- /dev/null
+++ b/test/bug-45972/bug-45972.tst
@@ -0,0 +1,20 @@
+%!test
+%! ascii_filename = tempname ();
+%! binary_filename = tempname ();
+%! hdf5_filename = tempname ();
+%! f = @ (x, y, varargin) x + y + varargin{1};
+%! unwind_protect
+%!   save ("-text", ascii_filename, "f");
+%!   save ("-binary", binary_filename, "f");
+%!   save ("-hdf5", hdf5_filename, "f");
+%!   ascii = load (ascii_filename);
+%!   binary = load (binary_filename);
+%!   hdf5 = load (hdf5_filename);
+%!   assert (f (1, 2, 3), ascii.f (1, 2, 3));
+%!   assert (f (1, 2, 3), binary.f (1, 2, 3));
+%!   assert (f (1, 2, 3), hdf5.f (1, 2, 3));
+%! unwind_protect_cleanup
+%!   unlink (ascii_filename);
+%!   unlink (binary_filename);
+%!   unlink (hdf5_filename);
+%! end_unwind_protect
diff --git a/test/bug-45972/module.mk b/test/bug-45972/module.mk
new file mode 100644
--- /dev/null
+++ b/test/bug-45972/module.mk
@@ -0,0 +1,4 @@
+bug_45972_TEST_FILES = \
+  %reldir%/bug-45972.tst
+
+TEST_FILES += $(bug_45972_TEST_FILES)
diff --git a/test/module.mk b/test/module.mk
--- a/test/module.mk
+++ b/test/module.mk
@@ -52,16 +52,17 @@ DIRSTAMP_FILES += %reldir%/$(octave_dirs
 
 include %reldir%/bug-35448/module.mk
 include %reldir%/bug-35881/module.mk
 include %reldir%/bug-36025/module.mk
 include %reldir%/bug-38236/module.mk
 include %reldir%/bug-38691/module.mk
 include %reldir%/bug-41723/module.mk
 include %reldir%/bug-44940/module.mk
+include %reldir%/bug-45972/module.mk
 include %reldir%/bug-46660/module.mk
 include %reldir%/bug-49379/module.mk
 include %reldir%/bug-50014/module.mk
 include %reldir%/bug-50035/module.mk
 include %reldir%/bug-50716/module.mk
 include %reldir%/bug-51192/module.mk
 include %reldir%/bug-51532/module.mk
 include %reldir%/bug-51534/module.mk
