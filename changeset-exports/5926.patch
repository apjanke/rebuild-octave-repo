# HG changeset patch
# User jwe
# Date 1155582967 0
#      Mon Aug 14 19:16:07 2006 +0000
# Node ID ddfe040624674c4d7538166aa90ac543e1a13b7b
# Parent  fe5cedbf3806208110365e7db4cf1845da6bfce4
[project @ 2006-08-14 19:16:07 by jwe]

diff --git a/doc/ChangeLog b/doc/ChangeLog
--- a/doc/ChangeLog
+++ b/doc/ChangeLog
@@ -1,8 +1,13 @@
+2006-08-14  Dmitri A. Sergatskov  <dasergatskov@gmail.com>
+
+	* interpreter/images/sparseimages.m: Adapt to new automatic_replot
+	definition.
+	
 2006-06-27  John W. Eaton  <jwe@octave.org>
 
 	* interpreter/Makefile.in: Elminate double-colon rules.
 
 2006-05-31  John W. Eaton  <jwe@octave.org>
 
 	* interpreter/images/Makefile.in (run-octave):
 	Use $(TOPDIR)/run-octave script to execute Octave.
diff --git a/doc/interpreter/images/sparseimages.m b/doc/interpreter/images/sparseimages.m
--- a/doc/interpreter/images/sparseimages.m
+++ b/doc/interpreter/images/sparseimages.m
@@ -15,17 +15,17 @@ function sparseimages(nm,typ)
   ## it exits and gnuplot will fail...
   sleep (1);
 endfunction
 
 ## Use this function before plotting commands and after every call to
 ## print since print() resets output to stdout (unfortunately, gnpulot
 ## can't pop output as it can the terminal type).
 function bury_output ()
-  automatic_replot = false;
+  automatic_replot(0);
   __gnuplot_set__ term dumb
   [status, dummy] = fileattrib("/dev/null");
   if (status)
     __gnuplot_raw__ ("set output \"/dev/null\"\n");
   endif
 endfunction
 
 function gplotimages(nm,typ)
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2006-08-14  Dmitri A. Sergatskov  <dasergatskov@gmail.com>
+
+	* sparse/spy.m, control/base/bode.m, control/base/__stepimp__.m,
+	signal/freqz_plot.m: Adapt to new automatic_replot definition.
+	
 2006-08-14  Søren Hauberg  <hauberg@gmail.com>
 
 	* strings/bin2dec.m: Ignore spaces in input for compatibility.
 
         * colormap.m: Change global variable to persistent.
 
 	* rgb2ind.m: Handle single 3-d array as rgb image.
 
diff --git a/scripts/control/base/__stepimp__.m b/scripts/control/base/__stepimp__.m
--- a/scripts/control/base/__stepimp__.m
+++ b/scripts/control/base/__stepimp__.m
@@ -211,17 +211,17 @@ function [y, t] = __stepimp__ (sitype, s
     for i = 1:n
       y(:,i) = C * x + D;
       x = F * x + G;
     endfor
   endif
   
   save_automatic_replot = automatic_replot;
   unwind_protect
-    automatic_replot = 0;
+    automatic_replot(0);
     if(nargout == 0)
       ## Plot the information
       oneplot();
       __gnuplot_set__ nogrid
       __gnuplot_set__ nologscale
       __gnuplot_set__ autoscale
       __gnuplot_set__ nokey
       if (IMPULSE)
@@ -267,11 +267,11 @@ function [y, t] = __stepimp__ (sitype, s
       endfor
       ## leave gnuplot in multiplot mode is bad style
       oneplot();
       y=[];
       t=[];
     endif
     ## printf("##STEPIMP-DEBUG: gratulations, successfull completion.\n");
   unwind_protect_cleanup
-    automatic_replot = save_automatic_replot;
+    automatic_replot(save_automatic_replot);
   end_unwind_protect
 endfunction  
diff --git a/scripts/control/base/bode.m b/scripts/control/base/bode.m
--- a/scripts/control/base/bode.m
+++ b/scripts/control/base/bode.m
@@ -142,17 +142,17 @@ function [mag_r, phase_r, w_r] = bode (s
   ## Get the magnitude and phase of f.
   mag = abs(f);
   phase = arg(f)*180.0/pi;
 
   if (nargout < 1),
     ## Plot the information
     save_automatic_replot = automatic_replot;
     unwind_protect
-      automatic_replot = 0;
+      automatic_replot(0);
       oneplot();
       __gnuplot_set__ autoscale;
       __gnuplot_set__ nokey;
       clearplot();
       __gnuplot_set__ data style lines;
       if(is_digital(sys))
 	xlstr = ["Digital frequency w=rad/sec.  pi/T=",num2str(pi/systsam)];
 	tistr = "(exp(jwT)) ";
@@ -199,16 +199,16 @@ function [mag_r, phase_r, w_r] = bode (s
 	title([ "phase([Y/U]", tistr, ...
 	   "), u=", inname{1},", y=",outname{1}]);
 	grid("on");
 	semilogx(w,phase);
 	## This should be the default for subsequent plot commands.
 	oneplot();
       endif
     unwind_protect_cleanup
-      automatic_replot = save_automatic_replot;
+      automatic_replot(save_automatic_replot);
     end_unwind_protect
   else
     mag_r = mag;
     phase_r = phase;
     w_r = w;
   endif
 endfunction
diff --git a/scripts/signal/freqz_plot.m b/scripts/signal/freqz_plot.m
--- a/scripts/signal/freqz_plot.m
+++ b/scripts/signal/freqz_plot.m
@@ -37,17 +37,17 @@ function freqz_plot(w,h)
     phase = unwrap (arg (h));
     maxmag = max (mag);
 
     unwind_protect
 
       ## Protect graph state.
 
       replot_state = automatic_replot;
-      automatic_replot = 0;
+      automatic_replot(0);
 
       subplot (311);
       __gnuplot_set__ lmargin 10;
       axis ("labely");
       xlabel ("");
       grid ("on");
       axis ([ w(1), w(n), maxmag-3, maxmag ]);
       plot (w, mag, ";Pass band (dB);");
@@ -83,13 +83,13 @@ function freqz_plot(w,h)
       ## will have to do it themselves.
 
       grid ("off");
       axis ("auto", "label");
       __gnuplot_set__ lmargin;
       __gnuplot_set__ tmargin;
       oneplot ();
 
-      automatic_replot = replot_state;
+      automatic_replot(replot_state);
 
     end_unwind_protect
 
 endfunction
diff --git a/scripts/sparse/spy.m b/scripts/sparse/spy.m
--- a/scripts/sparse/spy.m
+++ b/scripts/sparse/spy.m
@@ -25,27 +25,27 @@ function spy(S)
     [i,j,s,m,n]= spfind(S);
   else
     [i,j,s] = find(S);
     [m,n] = size(S);
   endif
 
   arp = automatic_replot;
   unwind_protect
-    automatic_replot = 0;
+    automatic_replot (0);
 
     eval(sprintf('__gnuplot_set__ nokey'))
     eval(sprintf('__gnuplot_set__ yrange [0:%d] reverse',m+1))
     eval(sprintf('__gnuplot_set__ xrange [0:%d] noreverse',n+1))
 
     if (length(i)<1000)
       plot(j,i,'*');
     else
       plot(j,i,'.');
     endif
 
     #TODO: we should store the reverse state so we don't undo it
     __gnuplot_set__ yrange [0:1] noreverse
     axis;
   unwind_protect_cleanup
-    automatic_replot = arp;
+    automatic_replot (arp);
   end_unwind_protect
 endfunction
