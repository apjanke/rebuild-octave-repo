# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1497993799 14400
#      Tue Jun 20 17:23:19 2017 -0400
# Node ID 114691e86b993a7d459b3188cf8fea2a6c2fee33
# Parent  6fee94b27af1d172b49eb68ee84595c43bdc83ae
make classdef constructors work again

* symtab.cc
(symbol_table::fcn_info::fcn_info_rep::load_class_constructor):
Allow load_fcn_from_file to return something other than an actual
octave_function object.

diff --git a/libinterp/corefcn/symtab.cc b/libinterp/corefcn/symtab.cc
--- a/libinterp/corefcn/symtab.cc
+++ b/libinterp/corefcn/symtab.cc
@@ -536,25 +536,23 @@ symbol_table::fcn_info::fcn_info_rep::lo
   if (! file_name.empty ())
     {
       octave_value ov_fcn
         = octave::load_fcn_from_file (file_name, dir_name, name,
                                       package_name);
 
       if (ov_fcn.is_defined ())
         {
-          octave_function *tmpfcn = ov_fcn.function_value ();
+          // Note: ov_fcn may be an octave_classdef_meta object instead
+          // of the actual constructor function.
 
-          if (tmpfcn && tmpfcn->is_class_constructor (name))
-            {
-              retval = ov_fcn;
+          retval = ov_fcn;
 
-              class_constructors[name] = retval;
-              class_methods[name] = retval;
-            }
+          class_constructors[name] = retval;
+          class_methods[name] = retval;
         }
     }
   else
     {
       // Classdef constructors can be defined anywhere in the path, not
       // necessarily in @-folders.  Look for a normal function and load it.
       // If the loaded function is a classdef constructor, store it as such
       // and restore function_on_path to its previous value.
