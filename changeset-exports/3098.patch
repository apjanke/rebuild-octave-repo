# HG changeset patch
# User jwe
# Date 879499829 0
#      Fri Nov 14 09:30:29 1997 +0000
# Node ID f4acdc9a77cc7fa22850c5b4f0155c4b8075fd64
# Parent  d12c312d1cfb78803165149608ee93d2f04cca36
[project @ 1997-11-14 09:30:20 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,17 @@
 Fri Nov 14 01:53:13 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* input.cc (get_user_input (const octave_value_list&, bool)):
+	Return octave_value() if user enters `quit', `exit', or `return'.
+	If debugging, let eval_string handle the printing chores and
+	reset error_state before asking for more input.
+
+	* input.cc (Fkeyboard): Unconditionally turn on history here.
+
 	* lex.l (have_continuation, have_ellipsis_continuation): Declare
 	arg as bool, not int.  Change callers.
 
 	* lex.l (Vbackslash_escapes): New static variable.
 	(backslash_escapes): New function.
 	(do_string_escapes): Return immediately if ! Vbackslash_escapes.
 	(eat_whitespace, eat_continuation): Only call have_continuation if
 	Vbackslash_escapes.
diff --git a/src/input.cc b/src/input.cc
--- a/src/input.cc
+++ b/src/input.cc
@@ -59,16 +59,17 @@ Software Foundation, 59 Temple Place - S
 #include "oct-obj.h"
 #include "pager.h"
 #include "parse.h"
 #include "pathlen.h"
 #include "pt-const.h"
 #include "sighandlers.h"
 #include "symtab.h"
 #include "sysdep.h"
+#include "unwind-prot.h"
 #include "utils.h"
 #include "variables.h"
 
 // Primary prompt string.
 static string Vps1;
 
 // Secondary prompt string.
 static string Vps2;
@@ -536,32 +537,37 @@ get_user_input (const octave_value_list&
 	    retval = "";
 	  else
 	    retval = input_buf;
 	}
       else
 	{
 	  int parse_status = 0;
 
-	  retval = eval_string (input_buf, true, parse_status);
+	  retval = eval_string (input_buf, (! debug), parse_status);
 
-	  if (retval.is_defined ())
-	    {
-	      if (debug)
-		retval.print (octave_stdout);
-	    }
-	  else
+	  if (retval.is_undefined ())
 	    retval = Matrix ();
 	}
     }
   else
     error ("input: reading user-input failed!");
 
   if (debug)
-    goto again;
+    {
+      // Clear error_state so that if errors were encountered while
+      // evaluating user input, extra error messages will not be
+      // printed after we return.
+
+      error_state = 0;
+
+      retval = octave_value ();
+
+      goto again;
+    }
 
   return retval;
 }
 
 DEFUN (input, args, ,
   "input (PROMPT [, S])\n\
 \n\
 Prompt user for input.  If the second argument is present, return\n\
@@ -574,27 +580,50 @@ value as a string.")
   if (nargin == 1 || nargin == 2)
     retval = get_user_input (args);
   else
     print_usage ("input");
 
   return retval;
 }
 
+static void
+restore_command_history (void *)
+{
+  command_history::ignore_entries (! Vsaving_history);
+}
+
 DEFUN (keyboard, args, ,
   "keyboard (PROMPT)\n\
 \n\
 maybe help in debugging function files")
 {
   octave_value_list retval;
 
   int nargin = args.length ();
 
   if (nargin == 0 || nargin == 1)
-    retval = get_user_input (args, true);
+    {
+      unwind_protect::begin_frame ("keyboard");
+
+      // XXX FIXME XXX -- we shouldn't need both the
+      // command_history object and the
+      // Vsaving_history variable...
+      command_history::ignore_entries (false);
+
+      unwind_protect::add (restore_command_history, 0);
+
+      unwind_protect_bool (Vsaving_history);
+
+      Vsaving_history = true;
+
+      retval = get_user_input (args, true);
+
+      unwind_protect::run_frame ("keyboard");
+    }
   else
     print_usage ("keyboard");
 
   return retval;
 }
 
 DEFUN_TEXT(echo, args, ,
   "echo [options]\n\
