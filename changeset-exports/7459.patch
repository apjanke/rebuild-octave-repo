# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1202458419 18000
#      Fri Feb 08 03:13:39 2008 -0500
# Node ID d3fe4d466bc2466acf85f5490d171adb92b1abbb
# Parent  1032e24f199f6679577c9f73af138913705d27d5
don't inhibit drawnow in debug mode

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,14 @@
+2008-02-08  John W. Eaton  <jwe@octave.org>
+
+	* input.cc (interactive_input): Eliminate debug arg.  Change All uses.
+	(get_user_input): Don't process input_buf if there is an error.
+	Call reset_error_handler instead of setting error_state to 0.
+
 2008-02-07  John W. Eaton  <jwe@octave.org>
 
 	* ov-range.h (octave_range::sort): New functions.
 
 2008-02-07  David Bateman  <dbateman@free.fr>
 
 	* Makefile.in (DLD_XSRC): Delete spkron.cc.
 	* DLD-FUNCTIONS/spkron.cc: Delete.
diff --git a/src/input.cc b/src/input.cc
--- a/src/input.cc
+++ b/src/input.cc
@@ -208,23 +208,21 @@ gnu_readline (const std::string& s, bool
 
       retval = octave_fgets (curr_stream);
     }
 
   return retval;
 }
 
 static inline std::string
-interactive_input (const std::string& s, bool debug = false,
-		   bool force_readline = false)
+interactive_input (const std::string& s, bool force_readline = false)
 {
   Vlast_prompt_time.stamp ();
 
-  if (! debug
-      && (Vdrawnow_requested && (interactive || forced_interactive)))
+  if (Vdrawnow_requested && (interactive || forced_interactive))
     {
       feval ("drawnow");
 
       flush_octave_stdout ();
 
       // We set Vdrawnow_requested to false even if there is an error
       // in drawnow so that the error doesn't reappear at every prompt.
 
@@ -653,19 +651,19 @@ get_user_input (const octave_value_list&
     }
 
  again:
 
   flush_octave_stdout ();
 
   octave_diary << prompt;
 
-  std::string input_buf = interactive_input (prompt.c_str (), debug, true);
+  std::string input_buf = interactive_input (prompt.c_str (), true);
 
-  if (! input_buf.empty ())
+  if (! (error_state || input_buf.empty ()))
     {
       if (! input_from_startup_file)
 	command_history::add (input_buf);
 
       size_t len = input_buf.length ();
 
       octave_diary << input_buf;
 
@@ -735,17 +733,17 @@ get_user_input (const octave_value_list&
     error ("input: reading user-input failed!");
 
   if (debug)
     {
       // Clear error_state so that if errors were encountered while
       // evaluating user input, extra error messages will not be
       // printed after we return.
 
-      error_state = 0;
+      reset_error_handler ();
 
       retval = octave_value_list ();
 
       goto again;
     }
 
   return retval;
 }
@@ -800,17 +798,17 @@ the screen before your prompt.  @xref{In
 
 bool
 octave_yes_or_no (const std::string& prompt)
 {
   std::string prompt_string = prompt + "(yes or no) ";
 
   while (1)
     {
-      std::string input_buf = interactive_input (prompt_string, false, true);
+      std::string input_buf = interactive_input (prompt_string, true);
 
       if (input_buf == "yes")
 	return true;
       else if (input_buf == "no")
 	return false;
       else
 	message (0, "Please answer yes or no.");
     }
