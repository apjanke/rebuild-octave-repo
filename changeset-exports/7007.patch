# HG changeset patch
# User jwe
# Date 1192119997 0
#      Thu Oct 11 16:26:37 2007 +0000
# Node ID 6304d9ea0a301e19a392a6ec1340121cc877a07a
# Parent  039ef140ac355210aea5c10b945edb0d0384f5fd
[project @ 2007-10-11 16:26:36 by jwe]

diff --git a/doc/ChangeLog b/doc/ChangeLog
--- a/doc/ChangeLog
+++ b/doc/ChangeLog
@@ -1,8 +1,14 @@
+2007-10-11  Brian Gough  <bjg@network-theory.co.uk>
+
+	* interpreter/dynamic.txi, interpreter/geometry.txi,
+	interpreter/package.txi, interpreter/sparse.txi,
+	interpreter/system.txi: Spelling fixes.
+
 2007-10-10  Olli Saarela  <Olli.Saarela@kcl.fi>
 
 	* interpreter/arith.txi, interpreter/basics.txi,
 	interpreter/container.txi, interpreter/dynamic.txi,
 	interpreter/eval.txi, interpreter/expr.txi, interpreter/func.txi,
 	interpreter/geometry.txi, interpreter/intro.txi,
 	interpreter/numbers.txi, interpreter/plot.txi,
 	interpreter/poly.txi, interpreter/set.txi, interpreter/sparse.txi,
diff --git a/doc/interpreter/dynamic.txi b/doc/interpreter/dynamic.txi
--- a/doc/interpreter/dynamic.txi
+++ b/doc/interpreter/dynamic.txi
@@ -1373,17 +1373,17 @@ mystring(["First String"; "Second String
 @end group
 @end example
 
 There are a couple of additional functions available in mex-files of
 interest in the treatment of strings.  These are @code{mxCreateString},
 @code{mxArrayToString} and @code{mxCreateCharMatrixFromStrings}.  A
 string in a mex-file is considered to be a vector rather than a
 matrix.  This is perhaps an arbitrary distinction as the data in the
-mxArray for the matrix is consequetive in any case.
+mxArray for the matrix is consecutive in any case.
 
 @node Cell Arrays with Mex-Files
 @subsection Cell Arrays with Mex-Files
 
 We can perform exactly the same operations in Cell arrays in mex-files
 as we can in oct-files.  An example that reduplicates the functional of
 the @file{celldemo.cc} oct-file in a mex-file is given by
 @file{mycell.c} as below
@@ -1411,17 +1411,17 @@ Note in the example the use of the @code
 is needed as the @code{mxArray} pointer returned by @code{mxGetCell}
 might be deallocated.  The inverse function to @code{mxGetCell} is
 @code{mcSetCell} and is defined as
 
 @example
 void mxSetCell (mxArray *ptr, int idx, mxArray *val);
 @end example
 
-Finally, to create a cell array or matrix, the appropraiate functions are
+Finally, to create a cell array or matrix, the appropriate functions are
 
 @example
 @group
 mxArray *mxCreateCellArray (int ndims, const int *dims);
 mxArray *mxCreateCellMatrix (int m, int n);
 @end group
 @end example
 
diff --git a/doc/interpreter/geometry.txi b/doc/interpreter/geometry.txi
--- a/doc/interpreter/geometry.txi
+++ b/doc/interpreter/geometry.txi
@@ -36,17 +36,17 @@ circum-circle. In this case the Delaunay
 
 @DOCSTRING(delaunay)
 
 The 3- and N-dimensional extension of the Delaunay triangulation are
 given by @code{delaunay3} and @code{delaunayn} respectively.  
 @code{delaunay3} returns a set of tetrahedra that satisfy the
 Delaunay circum-circle criteria.  Similarly, @code{delaunayn} returns the
 N-dimensional simplex satisfying the Delaunay circum-circle criteria.  
-The N-dimensional extension of a triangulation is called a tesselation.
+The N-dimensional extension of a triangulation is called a tessellation.
 
 @DOCSTRING(delaunay3)
 
 @DOCSTRING(delaunayn)
 
 An example of a Delaunay triangulation of a set of points is
 
 @example
@@ -114,22 +114,22 @@ The output of the above can be seen in @
 @caption{Delaunay triangulation of a random set of points}
 @end float
 @end ifnotinfo
 
 @node Identifying points in Triangulation
 @subsection Identifying points in Triangulation
 
 It is often necessary to identify whether a particular point in the
-N-dimensional space is within the Delaunay tesselation of a set of
+N-dimensional space is within the Delaunay tessellation of a set of
 points in this N-dimensional space, and if so which N-Simplex contains
-the point and which point in the tesselation is closest to the desired
+the point and which point in the tessellation is closest to the desired
 point.  The functions @code{tsearch} and @code{dsearch} perform this
 function in a triangulation, and @code{tsearchn} and @code{dsearchn} in
-an N-dimensional tesselation.
+an N-dimensional tessellation.
 
 To identify whether a particular point represented by a vector @var{p}
 falls within one of the simplices of an N-Simplex, we can write the
 Cartesian coordinates of the point in a parametric form with respect to
 the N-Simplex.  This parametric form is called the Barycentric
 Coordinates of the point.  If the points defining the N-Simplex are given
 by @code{@var{N} + 1} vectors @var{t}(@var{i},:), then the Barycentric
 coordinates defining the point @var{p} is given by
@@ -353,17 +353,17 @@ points inside a polygon}
 @end float
 @end ifnotinfo
 
 @node Convex Hull
 @section Convex Hull
 
 The convex hull of a set of points is the minimum convex envelope
 containing all of the points. Octave has the functions @code{convhull}
-and @code{convhulln} to calculate the convec hull of 2-dimensional and
+and @code{convhulln} to calculate the convex hull of 2-dimensional and
 N-dimensional sets of points.
 
 @DOCSTRING(convhull)
 
 @DOCSTRING(convhulln)
 
 An example of the use of @code{convhull} is
 
diff --git a/doc/interpreter/package.txi b/doc/interpreter/package.txi
--- a/doc/interpreter/package.txi
+++ b/doc/interpreter/package.txi
@@ -425,17 +425,17 @@ The format can be summarized with the fo
 
 @example
 # A comment
 toolbox >> Toolbox name
 Category Name 1
  function1 function2 function3
  function4
 Category Name 2
- functio2 function5
+ function2 function5
 @end example
 
 @node PKG_ADD and PKG_DEL directives
 @subsection PKG_ADD and PKG_DEL directives
 
 If the package contains files called @code{PKG_ADD} or @code{PKG_DEL}
 the commands in these files will be executed when the package is
 added or removed from the users path. In some situations such files
diff --git a/doc/interpreter/sparse.txi b/doc/interpreter/sparse.txi
--- a/doc/interpreter/sparse.txi
+++ b/doc/interpreter/sparse.txi
@@ -361,17 +361,17 @@ This allows the cost of determining the 
 avoided. However, incorrectly defining the matrix type will result in
 incorrect results from solutions of linear equations, and so it is
 entirely the responsibility of the user to correctly identify the
 matrix type
 
 There are several graphical means of finding out information about
 sparse matrices. The first is the @dfn{spy} command, which displays
 the structure of the non-zero elements of the
-matrix. @xref{fig:spmatrix}, for an exaple of the use of
+matrix. @xref{fig:spmatrix}, for an example of the use of
 @dfn{spy}.  More advanced graphical information can be obtained with the
 @dfn{treeplot}, @dfn{etreeplot} and @dfn{gplot} commands.
 
 @float Figure,fig:spmatrix
 @image{spmatrix,8cm}
 @caption{Structure of simple sparse matrix.}
 @end float
 
diff --git a/doc/interpreter/system.txi b/doc/interpreter/system.txi
--- a/doc/interpreter/system.txi
+++ b/doc/interpreter/system.txi
@@ -411,17 +411,17 @@ and looking for differences. However, th
 a hash of the string or file can be a rapid way of finding if the files
 differ.
 
 Another use of the hashing function is to check for file integrity. The
 user can check the hash of the file against a known value and find if
 the file they have is the same as the one that the original hash was
 produced with.
 
-Octave supplies the @code{md5sum} function to perfrom MD5 hashes on
+Octave supplies the @code{md5sum} function to perform MD5 hashes on
 strings and files. An example of the use of @code{md5sum} function might
 be
 
 @example
 @group
 if exist (file, "file")
   hash = md5sum (file);
 else
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,12 @@
+2007-10-11  Brian Gough  <bjg@network-theory.co.uk>
+
+	* DASSL-opts.in, LSODE-opts.in: Spelling fixes.
+
 2007-10-10  Olli Saarela  <Olli.Saarela@kcl.fi>
 
 	* DASPK-opts.in, DASRT-opts.in, DASSL-opts.in: Spelling fixes.
 
 2007-10-10  John W. Eaton  <jwe@octave.org>
 
 	* LPsolve.h, LPsolve.cc: Delete.
 	* Makefile.in: Remove them from the INCLUDES and
diff --git a/liboctave/DASSL-opts.in b/liboctave/DASSL-opts.in
--- a/liboctave/DASSL-opts.in
+++ b/liboctave/DASSL-opts.in
@@ -59,17 +59,17 @@ The local error test applied at each int
     void set_$OPT (const $TYPE& val)
       { $OPTVAR = val; reset = true; }
   END_SET_CODE
 END_OPTION
 
 OPTION
   NAME = "compute consistent initial condition"
   DOC_ITEM
-If nonzero, @code{dassl} will attempt to compute a consistent set of intial
+If nonzero, @code{dassl} will attempt to compute a consistent set of initial
 conditions.  This is generally not reliable, so it is best to provide
 a consistent set and leave this option set to zero.
   END_DOC_ITEM
   TYPE = "octave_idx_type"
   INIT_VALUE = "0"
   SET_EXPR = "val"
 END_OPTION
 
diff --git a/liboctave/LSODE-opts.in b/liboctave/LSODE-opts.in
--- a/liboctave/LSODE-opts.in
+++ b/liboctave/LSODE-opts.in
@@ -42,17 +42,17 @@ The local error test applied at each int
   TYPE = "double"
   INIT_VALUE = "::sqrt (DBL_EPSILON)"
   SET_EXPR = "(val > 0.0) ? val : ::sqrt (DBL_EPSILON)"
 END_OPTION
 
 OPTION
   NAME = "integration method"
   DOC_ITEM
-A string specifing the method of integration to use to solve the ODE
+A string specifying the method of integration to use to solve the ODE
 system.  Valid values are
 
 @table @asis
 @item \"adams\"
 @itemx \"non-stiff\"
 No Jacobian used (even if it is available).
 @item \"bdf\"
 @item \"stiff\"
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,33 @@
+2007-10-11  Brian Gough  <bjg@network-theory.co.uk>
+
+	* control/csrefcard.lt, control/system/is_detectable.m,
+	control/system/sysgroup.m, geometry/voronoin.m,
+	miscellaneous/dir.m, sparse/pcg.m, sparse/treeplot.m,
+	statistics/base/mode.m, statistics/distributions/betarnd.m,
+	statistics/distributions/binornd.m,
+	statistics/distributions/cauchy_rnd.m,
+	statistics/distributions/chi2rnd.m,
+	statistics/distributions/discrete_rnd.m,
+	statistics/distributions/exprnd.m,
+	statistics/distributions/frnd.m,
+	statistics/distributions/gamrnd.m,
+	statistics/distributions/geornd.m,
+	statistics/distributions/laplace_rnd.m,
+	statistics/distributions/logistic_rnd.m,
+	statistics/distributions/lognrnd.m,
+	statistics/distributions/nbinrnd.m,
+	statistics/distributions/normrnd.m,
+	statistics/distributions/poissrnd.m,
+	statistics/distributions/stdnormal_rnd.m,
+	statistics/distributions/trnd.m,
+	statistics/distributions/unifrnd.m,
+	statistics/distributions/wblrnd.m: Spelling fixes.
+
 2007-10-10  Thomas Treichl  <Thomas.Treichl@gmx.net>
 
 	* time/tic.m: New optional output value.
 
 	* general/int2str.m: Doc fix.
 
 2007-10-10  Arno Onken  <asnelt@asnelt.org>
 
diff --git a/scripts/control/csrefcard.lt b/scripts/control/csrefcard.lt
--- a/scripts/control/csrefcard.lt
+++ b/scripts/control/csrefcard.lt
@@ -881,33 +881,33 @@ of Octave. It is still under constructio
       B { function to state-space conversion
           @DP { Helvetica Base -2p } @Font @CurveBox {
 	  *** no description ***
 	}
       }
       C { }
     @Rowb above { yes }
       A { tf2sys }
-      B { tranfer function to system conversion
+      B { transfer function to system conversion
           @DP { Helvetica Base -2p } @Font @CurveBox {
 	  *** no description ***
 	}
       }
       C { }
     @Rowb above { yes }
       A { tf2sysl }
       B { strips leading zero coefficient in polynonials
           @DP { Helvetica Base -2p } @Font @CurveBox {
 	  *** no description ***
 	}
       }
       C { internal use (used by tf2sys) }
     @Rowb above { yes }
       A { tf2zp }
-      B { tranfer function to state-space conversion
+      B { transfer function to state-space conversion
           @DP { Helvetica Base -2p } @Font @CurveBox {
 	  *** no description ***
 	}
       }
       C { }
     @Rowb above { yes }
       A { zp2ss }
       B { zero-pole representation to state space form conversion
diff --git a/scripts/control/system/is_detectable.m b/scripts/control/system/is_detectable.m
--- a/scripts/control/system/is_detectable.m
+++ b/scripts/control/system/is_detectable.m
@@ -15,17 +15,17 @@
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
 ## 02110-1301 USA.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {@var{retval} =} is_detectable (@var{a}, @var{c}, @var{tol}, @var{dflg})
 ## @deftypefnx {Function File} {@var{retval} =} is_detectable (@var{sys}, @var{tol})
-## Test for detactability (observability of unstable modes) of (@var{a}, @var{c}).
+## Test for detectability (observability of unstable modes) of (@var{a}, @var{c}).
 ##
 ## Returns 1 if the system @var{a} or the pair (@var{a}, @var{c}) is
 ## detectable, 0 if not, and -1 if the system has unobservable modes at the
 ## imaginary axis (unit circle for discrete-time systems).
 ##
 ## @strong{See} @command{is_stabilizable} for detailed description of
 ## arguments and computational method.
 ## @seealso{is_stabilizable, size, rows, columns, length, ismatrix,
diff --git a/scripts/control/system/syscont.m b/scripts/control/system/syscont.m
--- a/scripts/control/system/syscont.m
+++ b/scripts/control/system/syscont.m
@@ -31,17 +31,17 @@
 ## @table @var
 ## @item csys
 ## is the purely continuous input/output connections of @var{sys}
 ## @item acd
 ## @itemx ccd
 ## connections from discrete states to continuous states,
 ## discrete states to continuous outputs, respectively.
 ##
-## returns @var{csys} empty if no continuous/continous path exists
+## If no continuous path exists, @var{csys} will be empty.
 ## @end table
 ## @end deftypefn
 
 ## Author: John Ingram <ingraje@eng.auburn.edu>
 ## Created: August 1996
 
 function [csys, Acd, Ccd] = syscont (sys)
 
diff --git a/scripts/control/system/sysgroup.m b/scripts/control/system/sysgroup.m
--- a/scripts/control/system/sysgroup.m
+++ b/scripts/control/system/sysgroup.m
@@ -153,17 +153,17 @@ function sys = sysgroup (varargin)
     elseif(isempty(Bst))
 	stname = Ast;
     else
       stname= __sysconcat__(Ast,Bst);
     endif
     inname = __sysconcat__(Ain,Bin);
     outname = __sysconcat__(Aout,Bout);
 
-    ## Sort states into continous first, then discrete
+    ## Sort states into continuous first, then discrete
     dstates = ones(1,(nA+nB));
     if(An)
 	dstates(1:(An)) = zeros(1,An);
     endif
     if(Bn)
 	dstates((nA+1):(nA+Bn)) = zeros(1,Bn);
     endif
     [tmp,pv] = sort(dstates);
diff --git a/scripts/geometry/voronoin.m b/scripts/geometry/voronoin.m
--- a/scripts/geometry/voronoin.m
+++ b/scripts/geometry/voronoin.m
@@ -15,17 +15,17 @@
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
 ## 02110-1301, USA.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {[@var{C}, @var{F}] =} voronoin (@var{pts})
 ## @deftypefnx {Function File} {[@var{C}, @var{F}] =} voronoin (@var{pts}, @var{options})
-## computes n- dimensinal voronoi facets.  The input matrix @var{pts}
+## computes n- dimensional voronoi facets.  The input matrix @var{pts}
 ## of size [n, dim] contains n points of dimension dim.
 ## @var{C} contains the points of the voronoi facets. The list @var{F}
 ## contains for each facet the indices of the voronoi points.
 ##
 ## A second optional argument, which must be a string, contains extra options
 ## passed to the underlying qhull command.  See the documentation for the
 ## Qhull library for details.
 ## @seealso{voronoin, delaunay, convhull}
diff --git a/scripts/miscellaneous/dir.m b/scripts/miscellaneous/dir.m
--- a/scripts/miscellaneous/dir.m
+++ b/scripts/miscellaneous/dir.m
@@ -38,17 +38,17 @@
 ##
 ## If @var{directory} is not a directory, return information about the
 ## named @var{filename}.  @var{directory} may be a list of directories
 ## specified either by name or with wildcard characters (like * and ?)
 ## which will be expanded with glob.
 ##
 ## Note that for symbolic links, @code{dir} returns information about
 ## the file that a symbolic link points to instead of the link itself.
-## However, if the link points to a nonexisent file, @code{dir} returns
+## However, if the link points to a nonexistent file, @code{dir} returns
 ## information about the link.
 ## @seealso{ls, stat, lstat, readdir, glob, filesep}
 ## @end deftypefn
 
 ## Author: jwe
 
 ## PKG_ADD: mark_as_command dir
 
diff --git a/scripts/sparse/pcg.m b/scripts/sparse/pcg.m
--- a/scripts/sparse/pcg.m
+++ b/scripts/sparse/pcg.m
@@ -102,17 +102,17 @@
 ## @code{@var{r} = @var{b} - @var{a} * @var{x}}, see also the
 ## description of @var{m}. If @var{eigest} is not required, only
 ## @code{@var{resvec} (:,1)} is returned.
 ## 
 ## @item
 ## @var{eigest} returns the estimate for the smallest @code{@var{eigest}
 ## (1)} and largest @code{@var{eigest} (2)} eigenvalues of the
 ## preconditioned matrix @code{@var{P} = @var{m} \ @var{a}}. In 
-## particular, if no preconditioning is used, the extimates for the
+## particular, if no preconditioning is used, the estimates for the
 ## extreme eigenvalues of @var{a} are returned. @code{@var{eigest} (1)}
 ## is an overestimate and @code{@var{eigest} (2)} is an underestimate, 
 ## so that @code{@var{eigest} (2) / @var{eigest} (1)} is a lower bound
 ## for @code{cond (@var{P}, 2)}, which nevertheless in the limit should
 ## theoretically be equal to the actual value of the condition number. 
 ## The method which computes @var{eigest} works only for symmetric positive
 ## definite @var{a} and @var{m}, and the user is responsible for
 ## verifying this assumption. 
@@ -184,17 +184,17 @@
 ## parameter @var{k}.
 ## 
 ## @example
 ## @group
 ##   function y = applyM (x, varargin)
 ##   K = varargin@{1@}; 
 ##   y = x;
 ##   y(1:K) = x(1:K)./[1:K]';
-##   endfuntion
+##   endfunction
 ## 
 ##   [x, flag, relres, iter, resvec, eigest] = ...
 ##        pcg (A, b, [], [], "applyM", [], [], 3)
 ## @end group
 ## @end example
 ## 
 ## @sc{References}
 ## 
diff --git a/scripts/sparse/treeplot.m b/scripts/sparse/treeplot.m
--- a/scripts/sparse/treeplot.m
+++ b/scripts/sparse/treeplot.m
@@ -14,17 +14,17 @@
 ## along with this program; if not, write to the Free Software
 ## Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
 ## 02110-1301  USA
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} treeplot (@var{Tree})
 ## @deftypefnx {Function File} {} treeplot (@var{Tree}, @var{LineStyle}, @var{EdgeStyle})
 ## Produces a graph of tree or forest. The first argument is vector of
-## predecessors, optional parametres @var{LineStyle} and @var{EdgeStyle}
+## predecessors, optional parameters @var{LineStyle} and @var{EdgeStyle}
 ## define the output style. The complexity of the algorithm is O(n) in
 ## terms of is time and memory requirements.
 ## @seealso{etreeplot, gplot}
 ## @end deftypefn
 
 function treeplot (Tree, NodeS, EdgeS)
 
   if (nargin < 1 || nargin > 3 || nargout > 0)
diff --git a/scripts/statistics/base/mode.m b/scripts/statistics/base/mode.m
--- a/scripts/statistics/base/mode.m
+++ b/scripts/statistics/base/mode.m
@@ -21,17 +21,17 @@
 ## @deftypefn {Function File} {[@var{m}, @var{f}, @var{c}] =} mode (@var{x}, @var{dim})
 ## Count the most frequently appearing value. @code{mode} counts the 
 ## frequency along the first non-singleton dimension and if two or more
 ## values have te same frequency returns the smallest of the two in
 ## @var{m}. The dimension along which to count can be specified by the
 ## @var{dim} parameter.
 ##
 ## The variable @var{f} counts the frequency of each of the most frequently 
-## occuring ellements. The cell array @var{c} contains all of the elements
+## occurring elements. The cell array @var{c} contains all of the elements
 ## with the maximum frequency .
 ## @end deftypefn
 
 function [m, f, c] = mode (x, dim)
 
   if (nargin < 1 || nargin > 2)
     print_usage ();
   endif
diff --git a/scripts/statistics/distributions/betarnd.m b/scripts/statistics/distributions/betarnd.m
--- a/scripts/statistics/distributions/betarnd.m
+++ b/scripts/statistics/distributions/betarnd.m
@@ -57,17 +57,17 @@ function rnd = betarnd (a, b, r, c)
       error ("betarnd: a and b must be scalar or of size [r,c]");
     endif
   elseif (nargin == 3)
     if (isscalar (r) && (r > 0))
       sz = [r, r];
     elseif (isvector(r) && all (r > 0))
       sz = r(:)';
     else
-      error ("betarnd: r must be a postive integer or vector");
+      error ("betarnd: r must be a positive integer or vector");
     endif
 
     if (any (size (a) != 1)
 	&& (length (size (a)) != length (sz) || any (size (a) != sz)))
       error ("betarnd: a and b must be scalar or of size sz");
     endif
   elseif (nargin == 2)
     sz = size(a);
diff --git a/scripts/statistics/distributions/binornd.m b/scripts/statistics/distributions/binornd.m
--- a/scripts/statistics/distributions/binornd.m
+++ b/scripts/statistics/distributions/binornd.m
@@ -57,17 +57,17 @@ function rnd = binornd (n, p, r, c)
       error ("binornd: n and must be scalar or of size [r, c]");
     endif
   elseif (nargin == 3)
     if (isscalar (r) && (r > 0))
       sz = [r, r];
     elseif (isvector(r) && all (r > 0))
       sz = r(:)';
     else
-      error ("binornd: r must be a postive integer or vector");
+      error ("binornd: r must be a positive integer or vector");
     endif
 
     if (any (size (n) != 1)
 	&& (length (size (n)) != length (sz) || any (size (n) != sz)))
       error ("binornd: n and must be scalar or of size sz");
     endif
   elseif (nargin == 2)
     sz = size(n);
diff --git a/scripts/statistics/distributions/cauchy_rnd.m b/scripts/statistics/distributions/cauchy_rnd.m
--- a/scripts/statistics/distributions/cauchy_rnd.m
+++ b/scripts/statistics/distributions/cauchy_rnd.m
@@ -56,17 +56,17 @@ function rnd = cauchy_rnd (l, scale, r, 
       error ("cauchy_rnd: lambda and sigma must be scalar or of size [r, c]");
     endif
   elseif (nargin == 3)
     if (isscalar (r) && (r > 0))
       sz = [r, r];
     elseif (isvector(r) && all (r > 0))
       sz = r(:)';
     else
-      error ("cauchy_rnd: r must be a postive integer or vector");
+      error ("cauchy_rnd: r must be a positive integer or vector");
     endif
 
     if (any (size (l) != 1)
 	&& (length (size (l)) != length (sz) ||	any (size (l) != sz)))
       error ("cauchy_rnd: lambda and sigma must be scalar or of size sz");
     endif
   elseif (nargin == 2)
     sz = size(l);
diff --git a/scripts/statistics/distributions/chi2rnd.m b/scripts/statistics/distributions/chi2rnd.m
--- a/scripts/statistics/distributions/chi2rnd.m
+++ b/scripts/statistics/distributions/chi2rnd.m
@@ -47,17 +47,17 @@ function rnd = chi2rnd (n, r, c)
       error ("chi2rnd: n must be scalar or of size [r, c]");
     endif
   elseif (nargin == 2)
     if (isscalar (r) && (r > 0))
       sz = [r, r];
     elseif (isvector(r) && all (r > 0))
       sz = r(:)';
     else
-      error ("chi2rnd: r must be a postive integer or vector");
+      error ("chi2rnd: r must be a positive integer or vector");
     endif
 
     if (any (size (n) != 1)
 	&& (length (size (n)) != length (sz) || any (size (n) != sz)))
       error ("chi2rnd: n must be scalar or of size sz");
     endif
   elseif (nargin == 1)
     sz = size(n);
diff --git a/scripts/statistics/distributions/discrete_rnd.m b/scripts/statistics/distributions/discrete_rnd.m
--- a/scripts/statistics/distributions/discrete_rnd.m
+++ b/scripts/statistics/distributions/discrete_rnd.m
@@ -54,17 +54,17 @@ function rnd = discrete_rnd (v, p, r, c)
       v = p;
       p = r;
     else
       if (isscalar (r) && (r > 0))
 	sz = [r, r];
       elseif (isvector(r) && all (r > 0))
 	sz = r(:)';
       else
-	error ("discrete_rnd: r must be a postive integer or vector");
+	error ("discrete_rnd: r must be a positive integer or vector");
       endif
     endif
   else
     print_usage ();
   endif
 
   if (! isvector (v))
     error ("discrete_rnd: v must be a vector");
diff --git a/scripts/statistics/distributions/exprnd.m b/scripts/statistics/distributions/exprnd.m
--- a/scripts/statistics/distributions/exprnd.m
+++ b/scripts/statistics/distributions/exprnd.m
@@ -48,17 +48,17 @@ function rnd = exprnd (l, r, c)
       error ("exprnd: lambda must be scalar or of size [r, c]");
     endif
   elseif (nargin == 2)
     if (isscalar (r) && (r > 0))
       sz = [r, r];
     elseif (isvector(r) && all (r > 0))
       sz = r(:)';
     else
-      error ("exprnd: r must be a postive integer or vector");
+      error ("exprnd: r must be a positive integer or vector");
     endif
 
     if (any (size (l) != 1) && 
 	((length (size (l)) != length (sz)) || any (size (l) != sz)))
       error ("exprnd: lambda must be scalar or of size sz");
     endif
   elseif (nargin == 1)
     sz = size (l);
diff --git a/scripts/statistics/distributions/frnd.m b/scripts/statistics/distributions/frnd.m
--- a/scripts/statistics/distributions/frnd.m
+++ b/scripts/statistics/distributions/frnd.m
@@ -59,17 +59,17 @@ function rnd = frnd (m, n, r, c)
       error ("frnd: m and n must be scalar or of size [r,c]");
     endif
   elseif (nargin == 3)
     if (isscalar (r) && (r > 0))
       sz = [r, r];
     elseif (isvector(r) && all (r > 0))
       sz = r(:)';
     else
-      error ("frnd: r must be a postive integer or vector");
+      error ("frnd: r must be a positive integer or vector");
     endif
 
     if (any (size (m) != 1) && 
 	((length (size (m)) != length (sz)) || any (size (m) != sz)))
       error ("frnd: m and n must be scalar or of size sz");
     endif
   elseif (nargin == 2)
     sz = size(a);
diff --git a/scripts/statistics/distributions/gamrnd.m b/scripts/statistics/distributions/gamrnd.m
--- a/scripts/statistics/distributions/gamrnd.m
+++ b/scripts/statistics/distributions/gamrnd.m
@@ -58,17 +58,17 @@ function rnd = gamrnd (a, b, r, c)
       error ("gamrnd: a and b must be scalar or of size [r, c]");
     endif
   elseif (nargin == 3)
     if (isscalar (r) && (r > 0))
       sz = [r, r];
     elseif (isvector(r) && all (r > 0))
       sz = r(:)';
     else
-      error ("gamrnd: r must be a postive integer or vector");
+      error ("gamrnd: r must be a positive integer or vector");
     endif
 
     if (any (size (a) != 1)
 	&& (length (size (a)) != length (sz) || any (size (a) != sz)))
       error ("gamrnd: a and b must be scalar or of size sz");
     endif
   elseif (nargin == 2)
     sz = size(a);
diff --git a/scripts/statistics/distributions/geornd.m b/scripts/statistics/distributions/geornd.m
--- a/scripts/statistics/distributions/geornd.m
+++ b/scripts/statistics/distributions/geornd.m
@@ -48,17 +48,17 @@ function rnd = geornd (p, r, c)
       error ("geornd: p must be scalar or of size [r, c]");
     endif
   elseif (nargin == 2)
     if (isscalar (r) && (r > 0))
       sz = [r, r];
     elseif (isvector(r) && all (r > 0))
       sz = r(:)';
     else
-      error ("geornd: r must be a postive integer or vector");
+      error ("geornd: r must be a positive integer or vector");
     endif
 
     if (any (size (p) != 1) && ((length (size (p)) != length (sz)) ||
 				any (size (p) != sz)))
       error ("geornd: n must be scalar or of size sz");
     endif
   elseif (nargin == 1)
     sz = size(n);
diff --git a/scripts/statistics/distributions/laplace_rnd.m b/scripts/statistics/distributions/laplace_rnd.m
--- a/scripts/statistics/distributions/laplace_rnd.m
+++ b/scripts/statistics/distributions/laplace_rnd.m
@@ -39,17 +39,17 @@ function rnd = laplace_rnd (r, c)
     endif
     sz = [r, c];
   elseif (nargin == 1)
     if (isscalar (r) && (r > 0))
       sz = [r, r];
     elseif (isvector(r) && all (r > 0))
       sz = r(:)';
     else
-      error ("laplace_rnd: r must be a postive integer or vector");
+      error ("laplace_rnd: r must be a positive integer or vector");
     endif
   else
     print_usage ();
   endif
 
   tmp = rand (sz);
   rnd = ((tmp < 1/2) .* log (2 * tmp)
          - (tmp > 1/2) .* log (2 * (1 - tmp)));
diff --git a/scripts/statistics/distributions/logistic_rnd.m b/scripts/statistics/distributions/logistic_rnd.m
--- a/scripts/statistics/distributions/logistic_rnd.m
+++ b/scripts/statistics/distributions/logistic_rnd.m
@@ -40,17 +40,17 @@ function rnd = logistic_rnd (r, c)
     endif
     sz = [r, c];
   elseif (nargin == 1)
     if (isscalar (r) && (r > 0))
       sz = [r, r];
     elseif (isvector(r) && all (r > 0))
       sz = r(:)';
     else
-      error ("logistic_rnd: r must be a postive integer or vector");
+      error ("logistic_rnd: r must be a positive integer or vector");
     endif
   else
     print_usage ();
   endif
 
   rnd = - log (1 ./ rand (sz) - 1);
 
 endfunction
diff --git a/scripts/statistics/distributions/lognrnd.m b/scripts/statistics/distributions/lognrnd.m
--- a/scripts/statistics/distributions/lognrnd.m
+++ b/scripts/statistics/distributions/lognrnd.m
@@ -59,17 +59,17 @@ function rnd = lognrnd (mu, sigma, r, c)
     endif
 
   elseif (nargin == 3)
     if (isscalar (r) && (r > 0))
       sz = [r, r];
     elseif (isvector(r) && all (r > 0))
       sz = r(:)';
     else
-      error ("lognrnd: r must be a postive integer or vector");
+      error ("lognrnd: r must be a positive integer or vector");
     endif
 
     if (any (size (mu) != 1) && 
 	((length (size (mu)) != length (sz)) || any (size (mu) != sz)))
       error ("lognrnd: mu and sigma must be scalar or of size sz");
     endif
   elseif (nargin == 2)
     sz = size(mu);
diff --git a/scripts/statistics/distributions/nbinrnd.m b/scripts/statistics/distributions/nbinrnd.m
--- a/scripts/statistics/distributions/nbinrnd.m
+++ b/scripts/statistics/distributions/nbinrnd.m
@@ -58,17 +58,17 @@ function rnd = nbinrnd (n, p, r, c)
     endif
 
   elseif (nargin == 3)
     if (isscalar (r) && (r > 0))
       sz = [r, r];
     elseif (isvector(r) && all (r > 0))
       sz = r(:)';
     else
-      error ("nbinrnd: r must be a postive integer or vector");
+      error ("nbinrnd: r must be a positive integer or vector");
     endif
 
     if (any (size (n) != 1) && 
 	((length (size (n)) != length (sz)) || any (size (n) != sz)))
       error ("nbinrnd: n and p must be scalar or of size sz");
     endif
   elseif (nargin == 2)
     sz = size(n);
diff --git a/scripts/statistics/distributions/normrnd.m b/scripts/statistics/distributions/normrnd.m
--- a/scripts/statistics/distributions/normrnd.m
+++ b/scripts/statistics/distributions/normrnd.m
@@ -57,17 +57,17 @@ function rnd = normrnd (m, s, r, c)
       error ("normrnd: m and s must be scalar or of size [r, c]");
     endif
   elseif (nargin == 3)
     if (isscalar (r) && (r > 0))
       sz = [r, r];
     elseif (isvector(r) && all (r > 0))
       sz = r(:)';
     else
-      error ("normrnd: r must be a postive integer or vector");
+      error ("normrnd: r must be a positive integer or vector");
     endif
 
     if (any (size (m) != 1)
 	&& (length (size (m)) != length (sz) || any (size (m) != sz)))
       error ("normrnd: m and s must be scalar or of size sz");
     endif
   elseif (nargin == 2)
     sz = size(m);
diff --git a/scripts/statistics/distributions/poissrnd.m b/scripts/statistics/distributions/poissrnd.m
--- a/scripts/statistics/distributions/poissrnd.m
+++ b/scripts/statistics/distributions/poissrnd.m
@@ -46,17 +46,17 @@ function rnd = poissrnd (l, r, c)
       error ("poissrnd: lambda must be scalar or of size [r, c]");
     endif
   elseif (nargin == 2)
     if (isscalar (r) && (r > 0))
       sz = [r, r];
     elseif (isvector(r) && all (r > 0))
       sz = r(:)';
     else
-      error ("poissrnd: r must be a postive integer or vector");
+      error ("poissrnd: r must be a positive integer or vector");
     endif
 
     if (any (size (l) != 1) && 
 	((length (size (l)) != length (sz)) || any (size (l) != sz)))
       error ("poissrnd: lambda must be scalar or of size sz");
     endif
   elseif (nargin == 1)
     sz = size (l);
diff --git a/scripts/statistics/distributions/stdnormal_rnd.m b/scripts/statistics/distributions/stdnormal_rnd.m
--- a/scripts/statistics/distributions/stdnormal_rnd.m
+++ b/scripts/statistics/distributions/stdnormal_rnd.m
@@ -42,15 +42,15 @@ function rnd = stdnormal_rnd (r, c)
     endif
     sz = [r, c];
   else
     if (isscalar (r) && (r > 0))
       sz = [r, r];
     elseif (isvector(r) && all (r > 0))
       sz = r(:)';
     else
-      error ("stdnormal_rnd: r must be a postive integer or vector");
+      error ("stdnormal_rnd: r must be a positive integer or vector");
     endif
   endif
 
   rnd = randn (sz);
 
 endfunction
diff --git a/scripts/statistics/distributions/trnd.m b/scripts/statistics/distributions/trnd.m
--- a/scripts/statistics/distributions/trnd.m
+++ b/scripts/statistics/distributions/trnd.m
@@ -48,17 +48,17 @@ function rnd = trnd (n, r, c)
       error ("trnd: n must be scalar or of size sz");
     endif
   elseif (nargin == 2)
     if (isscalar (r) && (r > 0))
       sz = [r, r];
     elseif (isvector(r) && all (r > 0))
       sz = r(:)';
     else
-      error ("trnd: r must be a postive integer or vector");
+      error ("trnd: r must be a positive integer or vector");
     endif
 
     if (any (size (n) != 1) && 
 	((length (size (n)) != length (sz)) || any (size (n) != sz)))
       error ("trnd: n must be scalar or of size sz");
     endif
   elseif (nargin == 1)
     sz = size (n);
diff --git a/scripts/statistics/distributions/unifrnd.m b/scripts/statistics/distributions/unifrnd.m
--- a/scripts/statistics/distributions/unifrnd.m
+++ b/scripts/statistics/distributions/unifrnd.m
@@ -56,17 +56,17 @@ function rnd = unifrnd (a, b, r, c)
       error ("unifrnd: a and b must be scalar or of size [r, c]");
     endif
   elseif (nargin == 3)
     if (isscalar (r) && (r > 0))
       sz = [r, r];
     elseif (isvector(r) && all (r > 0))
       sz = r(:)';
     else
-      error ("unifrnd: r must be a postive integer or vector");
+      error ("unifrnd: r must be a positive integer or vector");
     endif
 
     if (any (size (a) != 1)
 	&& (length (size (a)) != length (sz) || any (size (a) != sz)))
       error ("unifrnd: a and b must be scalar or of size sz");
     endif
   elseif (nargin == 2)
     sz = size(a);
diff --git a/scripts/statistics/distributions/wblrnd.m b/scripts/statistics/distributions/wblrnd.m
--- a/scripts/statistics/distributions/wblrnd.m
+++ b/scripts/statistics/distributions/wblrnd.m
@@ -58,17 +58,17 @@ function rnd = wblrnd (scale, shape, r, 
       error ("wblrnd: shape and scale must be scalar or of size [r, c]");
     endif
   elseif (nargin == 3)
     if (isscalar (r) && (r > 0))
       sz = [r, r];
     elseif (isvector(r) && all (r > 0))
       sz = r(:)';
     else
-      error ("wblrnd: r must be a postive integer or vector");
+      error ("wblrnd: r must be a positive integer or vector");
     endif
 
     if (any (size (scale) != 1) && 
 	((length (size (scale)) != length (sz)) ||
 	 any (size (scale) != sz)))
       error ("wblrnd: shape and scale must be scalar or of size sz");
     endif
   elseif (nargin == 2)
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2007-10-11  Brian Gough  <bjg@network-theory.co.uk>
+
+	* DLD-FUNCTIONS/fftn.cc, DLD-FUNCTIONS/regexp.cc, dirfns.cc,
+	input.cc: Spelling fixes.
+
 2007-10-10  John W. Eaton  <jwe@octave.org>
 
 	* OPERATORS/op-sbm-sbm.cc (bool_matrix_to_double_matrix):
 	New conversion function.
 	(install_sbm_sbm_ops): Install it.
 
 	* ov-re-mat.cc (double): Handle sparse as a special case.
 
diff --git a/src/DLD-FUNCTIONS/fftn.cc b/src/DLD-FUNCTIONS/fftn.cc
--- a/src/DLD-FUNCTIONS/fftn.cc
+++ b/src/DLD-FUNCTIONS/fftn.cc
@@ -134,17 +134,17 @@ is resized and padded with zeros.\n\
 @end deftypefn")
 {
   return do_fftn (args, "fftn", 0);
 }
 
 DEFUN_DLD (ifftn, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {} ifftn (@var{a}, @var{size})\n\
-Compute the invesre N dimensional FFT of @var{a} using subroutines from\n"
+Compute the inverse N dimensional FFT of @var{a} using subroutines from\n"
 FFTSRC
 ". The optional vector argument @var{size} may be used specify the\n\
 dimensions of the array to be used. If an element of @var{size} is\n\
 smaller than the corresponding dimension, then the dimension is\n\
 truncated prior to performing the inverse FFT. Otherwise if an element\n\
 of @var{size} is larger than the corresponding dimension @var{a}\n\
 is resized and padded with zeros.\n\
 @seealso {fftn, ifft, ifft2, fftw}\n\
diff --git a/src/DLD-FUNCTIONS/regexp.cc b/src/DLD-FUNCTIONS/regexp.cc
--- a/src/DLD-FUNCTIONS/regexp.cc
+++ b/src/DLD-FUNCTIONS/regexp.cc
@@ -1389,17 +1389,17 @@ octregexprep (const octave_value_list &a
 }
 
 DEFUN_DLD (regexprep, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Loadable Function}  {@var{string} =} regexprep (@var{string}, @var{pat}, @var{repstr}, @var{options})\n\
 Replace matches of @var{pat} in  @var{string} with @var{repstr}.\n\
 \n\
 \n\
-The replacement can contain @code{$i}, which subsubstitutes\n\
+The replacement can contain @code{$i}, which substitutes\n\
 for the ith set of parentheses in the match string.  E.g.,\n\
 @example\n\
 \n\
    regexprep(\"Bill Dunn\",'(\\w+) (\\w+)','$2, $1')\n\
 \n\
 @end example\n\
 returns \"Dunn, Bill\"\n\
 \n\
diff --git a/src/data.cc b/src/data.cc
--- a/src/data.cc
+++ b/src/data.cc
@@ -2575,17 +2575,17 @@ by an empty argument.\n\
   return retval;
 }
 
 DEFUN (squeeze, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} squeeze (@var{x})\n\
 Remove singleton dimensions from @var{x} and return the result.\n\
 Note that for compatibility with @sc{Matlab}, all objects have\n\
-a minimum of two dimensions.\n\
+a minimum of two dimensions and row vectors are left unchanged.\n\
 @end deftypefn")
 {
   octave_value retval;
 
   if (args.length () == 1)
     retval = args(0).squeeze ();
   else
     print_usage ();    
diff --git a/src/dirfns.cc b/src/dirfns.cc
--- a/src/dirfns.cc
+++ b/src/dirfns.cc
@@ -280,17 +280,17 @@ DEFCMD (rmdir, args, ,
 @deftypefnx {Built-in Function} {[@var{status}, @var{msg}, @var{msgid}] =} rmdir (@var{dir}, @code{\"s\"})\n\
 Remove the directory named @var{dir}.\n\
 \n\
 If successful, @var{status} is 1, with @var{msg} and @var{msgid} empty\n\
 character strings.  Otherwise, @var{status} is 0, @var{msg} contains a\n\
 system-dependent error message, and @var{msgid} contains a unique\n\
 message identifier.\n\
 \n\
-If the optional second parameter is suplied with value @code{\"s\"},\n\
+If the optional second parameter is supplied with value @code{\"s\"},\n\
 recursively remove all subdirectories as well.\n\
 @seealso{mkdir, confirm_recursive_rmdir}\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
   retval(2) = std::string ();
   retval(1) = std::string ();
diff --git a/src/input.cc b/src/input.cc
--- a/src/input.cc
+++ b/src/input.cc
@@ -1065,17 +1065,17 @@ a feature, not a bug.\n\
     print_usage ();
 
   return retval;
 }
 
 DEFUN (read_readline_init_file, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} read_readline_init_file (@var{file})\n\
-Read the readline library initialiazation file @var{file}.  If\n\
+Read the readline library initialization file @var{file}.  If\n\
 @var{file} is omitted, read the default initialization file (normally\n\
 @file{~/.inputrc}).\n\
 \n\
 @xref{Readline Init File, , , readline, GNU Readline Library},\n\
 for details.\n\
 @end deftypefn")
 {
   octave_value_list retval;
