# HG changeset patch
# User Rik <rik@octave.org>
# Date 1454169318 28800
#      Sat Jan 30 07:55:18 2016 -0800
# Branch stable
# Node ID 8b1e030d3d4f7445db19b519e40d770ac624b77a
# Parent  6f6eae08836f57d5542e1fee977abad7b87aa4f2
doc: Correct example errobar code and plot (bug #46972).

* plot.txi: Correct example code in manual.

* plotimages.m: Use correct code from manual to generate errorbar plot.

diff --git a/doc/interpreter/plot.txi b/doc/interpreter/plot.txi
--- a/doc/interpreter/plot.txi
+++ b/doc/interpreter/plot.txi
@@ -172,19 +172,19 @@ produce two-dimensional contour plots fr
 The @code{errorbar}, @code{semilogxerr}, @code{semilogyerr}, and
 @code{loglogerr} functions produce plots with error bar markers.  For
 example,
 
 @example
 @group
 x = 0:0.1:10;
 y = sin (x);
-yp =  0.1 .* randn (size (x));
-ym = -0.1 .* randn (size (x));
-errorbar (x, sin (x), ym, yp);
+lerr = 0.1 .* rand (size (x));
+uerr = 0.1 .* rand (size (x));
+errorbar (x, y, lerr, uerr);
 @end group
 @end example
 
 @noindent
 produces the figure shown in @ref{fig:errorbar}.
 
 @float Figure,fig:errorbar
 @center @image{errorbar,4in}
diff --git a/doc/interpreter/plotimages.m b/doc/interpreter/plotimages.m
--- a/doc/interpreter/plotimages.m
+++ b/doc/interpreter/plotimages.m
@@ -44,19 +44,19 @@ function plotimages (nm, typ)
     xlabel ("Value");
     ylabel ("Count");
     title ("Histogram of 10,000 normally distributed random numbers");
     print ([nm "." typ], d_typ);
   elseif (strcmp (nm, "errorbar"))
     rand ("state", 2);
     x = 0:0.1:10;
     y = sin (x);
-    yl = 0.1 .* rand (size (x));
-    yu = 0.1 .* rand (size (x));
-    errorbar (x, sin (x), yl, yu);
+    lerr = 0.1 .* rand (size (x));
+    uerr = 0.1 .* rand (size (x));
+    errorbar (x, y, lerr, uerr);
     axis ([0, 10, -1.1, 1.1]);
     xlabel ("x");
     ylabel ("sin (x)");
     title ("Errorbar plot of sin (x)");
     print ([nm "." typ], d_typ);
   elseif (strcmp (nm, "polar"))
     polar (0:0.1:10*pi, 0:0.1:10*pi);
     title ("Example polar plot from 0 to 10*pi");
