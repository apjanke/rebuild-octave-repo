# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1552684159 0
#      Fri Mar 15 21:09:19 2019 +0000
# Node ID 71724787d9727b4c504fda13ea5f024ae1d49e7c
# Parent  7fdbb03d5f76bd0e583d34df587b6abe6fbd4901
don't call inherited delete methods (bug #53956)

* cdef-method.h, cdef-method.cc (cdef_method::is_defined_in_class,
cdef_method::cdef_method_rep::is_defined_in_class): New functions.

* cdef-class.cc (cdef_class::cdef_clsas_rep::delete_object): Skip
calls to inherited delete methods.

* test/bug-53956/bug-53956.tst, test/bug-53956/bug53956_class_2.m,
test/bug-53956/bug53956_class_3.m, test/bug-53956/bug53956_class_4.m,
test/bug-53956/module.mk: New files.
* test/module.mk: Update.

diff --git a/libinterp/octave-value/cdef-class.cc b/libinterp/octave-value/cdef-class.cc
--- a/libinterp/octave-value/cdef-class.cc
+++ b/libinterp/octave-value/cdef-class.cc
@@ -524,17 +524,20 @@ namespace octave
     return v.sort (true);
   }
 
   void
   cdef_class::cdef_class_rep::delete_object (const cdef_object& obj)
   {
     cdef_method dtor = find_method ("delete");
 
-    if (dtor.ok ())
+    // FIXME: would it be better to tell find_method above to not find
+    // overloaded functions?
+
+    if (dtor.ok () && dtor.is_defined_in_class (get_name ()))
       dtor.execute (obj, octave_value_list (), 0, true, "destructor");
 
     // FIXME: should we destroy corresponding properties here?
 
     // Call "delete" in super classes
 
     Cell super_classes = get ("SuperClasses").cell_value ();
 
diff --git a/libinterp/octave-value/cdef-method.cc b/libinterp/octave-value/cdef-method.cc
--- a/libinterp/octave-value/cdef-method.cc
+++ b/libinterp/octave-value/cdef-method.cc
@@ -176,16 +176,24 @@ namespace octave
   {
     if (function.is_function())
       return function.function_value ()->is_classdef_constructor ();
 
     return false;
   }
 
   bool
+  cdef_method::cdef_method_rep::is_defined_in_class (const std::string &cname) const
+  {
+    return (function.is_function ()
+            ? function.function_value ()->dispatch_class () == cname
+            : false);
+  }
+
+  bool
   cdef_method::cdef_method_rep::check_access (void) const
   {
     cdef_class cls (to_cdef (get ("DefiningClass")));
 
     return octave::check_access (cls, get ("Access"), get_name ());
   }
 
   octave_value_list
diff --git a/libinterp/octave-value/cdef-method.h b/libinterp/octave-value/cdef-method.h
--- a/libinterp/octave-value/cdef-method.h
+++ b/libinterp/octave-value/cdef-method.h
@@ -85,16 +85,18 @@ namespace octave
 
       octave_value_list execute (const cdef_object& obj,
                                  const octave_value_list& args, int nargout,
                                  bool do_check_access = true,
                                  const std::string& who = "");
 
       bool is_constructor (void) const;
 
+      bool is_defined_in_class (const std::string& cname) const;
+
       octave_value_list
       meta_subsref (const std::string& type,
                     const std::list<octave_value_list>& idx, int nargout);
 
       bool meta_accepts_postfix_index (char type) const
       {
         return (type == '(' || type == '.');
       }
@@ -185,16 +187,21 @@ namespace octave
       return get_rep ()->get_function ();
     }
 
     bool is_constructor (void) const
     {
       return get_rep ()->is_constructor ();
     }
 
+    bool is_defined_in_class (const std::string& cname) const
+    {
+      return get_rep ()->is_defined_in_class (cname);
+    }
+
     bool is_external (void) const { return get_rep ()->is_external (); }
 
     void mark_as_external (const std::string& dtype)
     {
       get_rep ()->mark_as_external (dtype);
     }
 
   private:
diff --git a/test/bug-53956/bug-53956.tst b/test/bug-53956/bug-53956.tst
new file mode 100644
--- /dev/null
+++ b/test/bug-53956/bug-53956.tst
@@ -0,0 +1,15 @@
+%!test <53956>
+%! global dtor2_called dtor4_called
+%!
+%! dtor2_called = dtor4_called = 0;
+%! x = bug53956_class_3 ();
+%! clear x
+%! assert (dtor2_called, 1);
+%!
+%! dtor2_called = dtor4_called = 0;
+%! x = bug53956_class_4 ();
+%! clear x
+%! assert (dtor2_called, 1);
+%! assert (dtor4_called, 1);
+%!
+%! clear -global dtor2_called dtor4_called;  # cleanup after test
diff --git a/test/bug-53956/bug53956_class_2.m b/test/bug-53956/bug53956_class_2.m
new file mode 100644
--- /dev/null
+++ b/test/bug-53956/bug53956_class_2.m
@@ -0,0 +1,10 @@
+classdef bug53956_class_2 < handle
+  properties
+  end
+  methods
+    function delete (self)
+      global dtor2_called
+      dtor2_called++;
+    end
+  end
+end
diff --git a/test/bug-53956/bug53956_class_3.m b/test/bug-53956/bug53956_class_3.m
new file mode 100644
--- /dev/null
+++ b/test/bug-53956/bug53956_class_3.m
@@ -0,0 +1,6 @@
+classdef bug53956_class_3 < bug53956_class_2
+  properties
+  end
+  methods
+  end
+end
diff --git a/test/bug-53956/bug53956_class_4.m b/test/bug-53956/bug53956_class_4.m
new file mode 100644
--- /dev/null
+++ b/test/bug-53956/bug53956_class_4.m
@@ -0,0 +1,10 @@
+classdef bug53956_class_4 < bug53956_class_3
+  properties
+  end
+  methods
+    function delete (self)
+      global dtor4_called
+      dtor4_called++;
+    end
+  end
+end
diff --git a/test/bug-53956/module.mk b/test/bug-53956/module.mk
new file mode 100644
--- /dev/null
+++ b/test/bug-53956/module.mk
@@ -0,0 +1,7 @@
+bug_53956_TEST_FILES = \
+  %reldir%/bug-53956.tst \
+  %reldir%/bug53956_class_2.m \
+  %reldir%/bug53956_class_3.m \
+  %reldir%/bug53956_class_4.m
+
+TEST_FILES += $(bug_53956_TEST_FILES)
diff --git a/test/module.mk b/test/module.mk
--- a/test/module.mk
+++ b/test/module.mk
@@ -72,16 +72,17 @@ include %reldir%/bug-50716/module.mk
 include %reldir%/bug-51192/module.mk
 include %reldir%/bug-51532/module.mk
 include %reldir%/bug-51534/module.mk
 include %reldir%/bug-51599/module.mk
 include %reldir%/bug-52075/module.mk
 include %reldir%/bug-52722/module.mk
 include %reldir%/bug-53027/module.mk
 include %reldir%/bug-53468/module.mk
+include %reldir%/bug-53956/module.mk
 include %reldir%/bug-54995/module.mk
 include %reldir%/bug-55758/module.mk
 include %reldir%/class-concat/module.mk
 include %reldir%/classdef/module.mk
 include %reldir%/classdef-multiple-inheritance/module.mk
 include %reldir%/classes/module.mk
 include %reldir%/ctor-vs-method/module.mk
 include %reldir%/fcn-handle-derived-resolution/module.mk
