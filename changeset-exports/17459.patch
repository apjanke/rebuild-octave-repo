# HG changeset patch
# User Rik <rik@octave.org>
# Date 1379862959 25200
#      Sun Sep 22 08:15:59 2013 -0700
# Node ID f271fa40074d74e1cc68fe525891abef85394e1e
# Parent  f0ecb52097ec5ee1c6fe6d0423350b33f9badf99
runtests.m, rundemos.m: Use readdir, rather than dir, for ~700X speed-up.

* scripts/testfun/rundemos.m, scripts/testfun/runtests.m:
Use readdir, rather than dir, for ~700X speed-up.

diff --git a/scripts/testfun/rundemos.m b/scripts/testfun/rundemos.m
--- a/scripts/testfun/rundemos.m
+++ b/scripts/testfun/rundemos.m
@@ -59,36 +59,38 @@ function rundemos (directory)
   for i = 1:numel (dirs)
     d = dirs{i};
     run_all_demos (d, do_class_dirs);
   endfor
 
 endfunction
 
 function run_all_demos (directory, do_class_dirs)
-  flist = dir (directory);
+  flist = readdir (directory);
   dirs = {};
   for i = 1:numel (flist)
-    f = flist(i).name;
+    f = flist{i};
     if ((length (f) > 2 && strcmpi (f((end-1):end), ".m")) ||
         (length (f) > 3 && strcmpi (f((end-2):end), ".cc")))
       f = fullfile (directory, f);
       if (has_demos (f))
         try
           demo (f);
         catch
           printf ("error: %s\n\n", lasterror().message);
         end_try_catch
         if (i != numel (flist))
           input ("Press <enter> to continue: ", "s");
         endif
       endif
-    elseif (flist(i).isdir && f(1) == "@")
+    elseif (f(1) == "@")
       f = fullfile (directory, f);
-      dirs = {dirs{:}, f};
+      if (isdir (f))
+        dirs(end+1) = f;
+      endif
     endif
   endfor
 
   ## Recurse into class directories since they are implied in the path
   if (do_class_dirs)
     for i = 1:numel (dirs)
       d = dirs{i};
       run_all_demos (d, false);
diff --git a/scripts/testfun/runtests.m b/scripts/testfun/runtests.m
--- a/scripts/testfun/runtests.m
+++ b/scripts/testfun/runtests.m
@@ -59,37 +59,39 @@ function runtests (directory)
   for i = 1:numel (dirs)
     d = dirs{i};
     run_all_tests (d, do_class_dirs);
   endfor
 
 endfunction
 
 function run_all_tests (directory, do_class_dirs)
-  flist = dir (directory);
+  flist = readdir (directory);
   dirs = {};
   no_tests = {};
   printf ("Processing files in %s:\n\n", directory);
   fflush (stdout);
   for i = 1:numel (flist)
-    f = flist(i).name;
+    f = flist{i};
     if ((length (f) > 2 && strcmpi (f((end-1):end), ".m")) ||
         (length (f) > 3 && strcmpi (f((end-2):end), ".cc")))
       ff = fullfile (directory, f);
       if (has_tests (ff))
         print_test_file_name (f);
         [p, n, xf, sk] = test (ff, "quiet");
         print_pass_fail (n, p);
         fflush (stdout);
       elseif (has_functions (ff))
-        no_tests{end+1} = f;
+        no_tests(end+1) = f;
       endif
-    elseif (flist(i).isdir && f(1) == "@")
+    elseif (f(1) == "@")
       f = fullfile (directory, f);
-      dirs = {dirs{:}, f};
+      if (isdir (f))
+        dirs(end+1) = f;
+      endif
     endif
   endfor
   if (! isempty (no_tests))
     printf ("\nThe following files in %s have no tests:\n\n", directory);
     printf ("%s", list_in_columns (no_tests));
   endif
 
   ## Recurse into class directories since they are implied in the path
