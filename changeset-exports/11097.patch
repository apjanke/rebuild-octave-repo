# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1287071584 14400
#      Thu Oct 14 11:53:04 2010 -0400
# Node ID ffb2f1ef209743fc0ab88ba67452d05e82ddbd0c
# Parent  04c3aacbbc46ba38bcae330b0b1a7e113d151ac0
make issparse, sparse, and spalloc built-in functions

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2010-10-14  John W. Eaton  <jwe@octave.org>
+
+	* set/unique.m: Remove check for issparse existence since it is
+	now a built-in function.
+
 2010-10-14  Ben Abbott <bpabbott@mac.com>
 
 	* strings/strjust.m: Clarify that justification  applies to spaces and
 	null characters.
 
 2010-10-09  Ben Abbott <bpabbott@mac.com>
 
 	* plot/__go_draw_axes__.m: Enable linetypes for gnuplot.
diff --git a/scripts/set/unique.m b/scripts/set/unique.m
--- a/scripts/set/unique.m
+++ b/scripts/set/unique.m
@@ -77,30 +77,24 @@ function [y, i, j] = unique (x, varargin
   ##
   ##   match = (y(1:n-1) == y(2:n));
   ##   y(idx) = [];
   ##
   ## are very slow on sparse matrices.  Until they are fixed to be as
   ## fast as for full matrices, operate on the nonzero elements of the
   ## sparse array as long as we are not operating on rows.
 
-  ## FIXME -- unique is called when PKG_ADD files are parsed, but
-  ## issparse is not yet available because it is coming from a .oct
-  ## file?!?
-
-  if (exist ("issparse"))
-    if (issparse (x) && ! optrows && nargout <= 1)
-      if (nnz (x) < numel (x)) 
-        y = unique ([0; (full (nonzeros (x)))], varargin{:});
-      else
-        ## Corner case where sparse matrix is actually full
-        y = unique (full (x), varargin{:});
-      endif
-      return;
+  if (issparse (x) && ! optrows && nargout <= 1)
+    if (nnz (x) < numel (x)) 
+      y = unique ([0; (full (nonzeros (x)))], varargin{:});
+    else
+      ## Corner case where sparse matrix is actually full
+      y = unique (full (x), varargin{:});
     endif
+    return;
   endif
 
   if (optrows)
     n = rows (x);
     dim = 1;
   else
     n = numel (x);
     dim = (rows (x) == 1) + 1;
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,16 @@
+2010-10-14  John W. Eaton  <jwe@octave.org>
+
+	* sparse.cc: Rename from DLD-FUNCTIONS/sparse.cc.  Include
+	defun.h, not defun-dld.h.
+	(Fissparse, Fsparse, Fspalloc): Use DEFUN, not DEFUN_DLD.
+	* Makefile.am (DIST_SRC): Add sparse.cc to the list.
+	* DLD-FUNCTIONS/module-files: Remove sparse.cc from the list of files.
+
 2010-10-09  Ben Abbott <bpabbott@mac.com>
 
 	* gl-render.cc: Treat images with scalar unique(x/ydata) like Matlab.
 
 2010-10-08  John W. Eaton  <jwe@octave.org>
 
 	* octave.cc (maximum_braindamage):
 	Set do_braindead_shortcircuit_evaluation to true.
diff --git a/src/DLD-FUNCTIONS/module-files b/src/DLD-FUNCTIONS/module-files
--- a/src/DLD-FUNCTIONS/module-files
+++ b/src/DLD-FUNCTIONS/module-files
@@ -58,17 +58,16 @@ onCleanup.cc
 pinv.cc
 qr.cc
 quad.cc
 qz.cc
 rand.cc
 rcond.cc
 regexp.cc
 schur.cc
-sparse.cc
 spparms.cc
 sqrtm.cc
 strfind.cc
 str2double.cc
 sub2ind.cc
 svd.cc
 syl.cc
 symbfact.cc
diff --git a/src/Makefile.am b/src/Makefile.am
--- a/src/Makefile.am
+++ b/src/Makefile.am
@@ -429,16 +429,17 @@ DIST_SRC = \
   oct-stream.cc \
   oct-strstrm.cc \
   octave.cc \
   pager.cc \
   pr-output.cc \
   procstream.cc \
   sighandlers.cc \
   siglist.c \
+  sparse.cc \
   sparse-xdiv.cc \
   sparse-xpow.cc \
   strfns.cc \
   symtab.cc \
   syscalls.cc \
   sysdep.cc \
   token.cc \
   toplev.cc \
diff --git a/src/DLD-FUNCTIONS/sparse.cc b/src/sparse.cc
rename from src/DLD-FUNCTIONS/sparse.cc
rename to src/sparse.cc
--- a/src/DLD-FUNCTIONS/sparse.cc
+++ b/src/sparse.cc
@@ -27,41 +27,41 @@ along with Octave; see the file COPYING.
 #endif
 
 #include <cstdlib>
 #include <string>
 
 #include "variables.h"
 #include "utils.h"
 #include "pager.h"
-#include "defun-dld.h"
+#include "defun.h"
 #include "gripes.h"
 #include "quit.h"
 #include "unwind-prot.h"
 
 #include "ov-re-sparse.h"
 #include "ov-cx-sparse.h"
 #include "ov-bool-sparse.h"
 
-DEFUN_DLD (issparse, args, ,
+DEFUN (issparse, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {} issparse (@var{expr})\n\
 Return 1 if the value of the expression @var{expr} is a sparse matrix.\n\
 @end deftypefn") 
 {
    if (args.length() != 1) 
      {
        print_usage ();
        return octave_value ();
      }
    else 
      return octave_value (args(0).is_sparse_type ());
 }
 
-DEFUN_DLD (sparse, args, ,
+DEFUN (sparse, args, ,
     "-*- texinfo -*-\n\
 @deftypefn  {Loadable Function} {@var{s} =} sparse (@var{a})\n\
 @deftypefnx {Loadable Function} {@var{s} =} sparse (@var{i}, @var{j}, @var{sv}, @var{m}, @var{n}, @var{nzmax})\n\
 @deftypefnx {Loadable Function} {@var{s} =} sparse (@var{i}, @var{j}, @var{sv})\n\
 @deftypefnx {Loadable Function} {@var{s} =} sparse (@var{i}, @var{j}, @var{s}, @var{m}, @var{n}, \"unique\")\n\
 @deftypefnx {Loadable Function} {@var{s} =} sparse (@var{m}, @var{n})\n\
 Create a sparse matrix from the full matrix or row, column, value triplets.\n\
 If @var{a} is a full matrix, convert it to a sparse matrix representation,\n\
@@ -200,17 +200,17 @@ to have a common size.\n\
              }
 
          }
      }
 
    return retval;
 }
 
-DEFUN_DLD (spalloc, args, ,
+DEFUN (spalloc, args, ,
     "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {@var{s} =} spalloc (@var{m}, @var{n}, @var{nz})\n\
 Creates a @var{m}-by-@var{n} sparse matrix with pre-allocated space for at\n\
 most @var{nz} nonzero elements.  This is useful for building the matrix\n\
 incrementally by a sequence of indexed assignments.  Subsequent indexed\n\
 assignments will reuse the pre-allocated memory, provided they are of one of\n\
 the simple forms\n\
 \n\
