# HG changeset patch
# User Torsten <mttl@mailbox.org>
# Date 1540755068 -3600
#      Sun Oct 28 20:31:08 2018 +0100
# Node ID c3cd63006870b7d83a1288ca7f9b7c3529507195
# Parent  c9ae077dedd16a3effe88ddc8b06707c6c42f052
add preference for disabling workspace colors for different attributes

* gui-preferences.h: add new and mive existing preferences for the
  workspace view

* settings-dialog.cc (settings_dialog, write_changed_settings):
  remove use of workspace prefs here;
  (read_workspace_colors): construct all elements of the workspace tab by
  code instead of the designer file;
  (write_workspace_colors): store the values of the check boxes for
  workspace preferences

* settings-dialog.h: add check boxes of workspace view, that are removed from
  the designer file and now constructed in the code, as class variables;

* settings-dialog.ui: clear the workspace tab, all elements are now
  constructed and laid out in the the code

* workspace-model.cc (data): set background color only if attribute colors
  are desired

* workspace-model.h: new class variable holding whether colors are used or not

* workspace-view.cc (notice_settings): use constants from gui-preferences.h
  for key names and default values instead of hard coded values and store
  preference for using attribute colors

diff --git a/libgui/src/gui-preferences.h b/libgui/src/gui-preferences.h
--- a/libgui/src/gui-preferences.h
+++ b/libgui/src/gui-preferences.h
@@ -83,9 +83,14 @@ const gui_pref fb_show_altcol ("filesdoc
 const gui_pref fb_sort_column ("filesdockwidget/sort_files_by_column", QVariant (0));
 const gui_pref fb_sort_order ("filesdockwidget/sort_files_by_order", QVariant (Qt::AscendingOrder));
 const gui_pref fb_sync_octdir ("filesdockwidget/sync_octave_directory", QVariant (true));
 const gui_pref fb_restore_last_dir ("filesdockwidget/restore_last_dir", QVariant (false));
 const gui_pref fb_startup_dir ("filesdockwidget/startup_dir", QVariant (QString ()));
 const gui_pref fb_txt_file_ext ("filesdockwidget/txt_file_extensions",
                                 QVariant ("m;c;cc;cpp;h;txt"));
 
+// Workspace view
+
+const gui_pref ws_enable_colors ("workspaceview/enable_colors", QVariant (false));
+const gui_pref ws_hide_tool_tips ("workspaceview/hide_tools_tips", QVariant (false));
+
 #endif
diff --git a/libgui/src/settings-dialog.cc b/libgui/src/settings-dialog.cc
--- a/libgui/src/settings-dialog.cc
+++ b/libgui/src/settings-dialog.cc
@@ -383,20 +383,17 @@ namespace octave
         proxyType->setCurrentIndex (currentIndex);
       }
 
     proxyPort->setText (settings->value ("proxyPort").toString ());
     proxyUserName->setText (settings->value ("proxyUserName").toString ());
     proxyPassword->setText (settings->value ("proxyPassword").toString ());
 
     // Workspace
-    // colors
     read_workspace_colors (settings);
-    // hide tool tips
-    cb_hide_tool_tips->setChecked (settings->value ("workspaceview/hide_tool_tips", false).toBool ());
 
     // terminal colors
     read_terminal_colors (settings);
 
     // variable editor
     varedit_columnWidth->setValue (settings->value ("variable_editor/column_width", 100).toInt ());
     varedit_autoFitColumnWidth->setChecked (settings->value ("variable_editor/autofit_column_width", false).toBool ());
     varedit_autofitType->setCurrentIndex (settings->value ("autofit_type", 0).toInt ());
@@ -960,18 +957,16 @@ namespace octave
     lexer = new octave::octave_txt_lexer ();
     write_lexer_settings (lexer, settings);
     delete lexer;
 
 #endif
 
     // Workspace
     write_workspace_colors (settings);
-    // hide tool tips
-    settings->setValue ("workspaceview/hide_tool_tips", cb_hide_tool_tips->isChecked ());
 
     // Terminal
     write_terminal_colors (settings);
 
     // Variable editor
     settings->setValue ("variable_editor/autofit_column_width", varedit_autoFitColumnWidth->isChecked ());
     settings->setValue ("variable_editor/autofit_type", varedit_autofitType->currentIndex ());
     settings->setValue ("variable_editor/column_width", varedit_columnWidth->value ());
@@ -991,54 +986,79 @@ namespace octave
     settings->setValue ("settings/last_tab", tabWidget->currentIndex ());
     settings->setValue ("settings/geometry", saveGeometry ());
 
     settings->sync ();
   }
 
   void settings_dialog::read_workspace_colors (QSettings *settings)
   {
-
+    // Construct the grid with all color related settings
     QList<QColor> default_colors =
       resource_manager::storage_class_default_colors ();
     QStringList class_names = resource_manager::storage_class_names ();
     QString class_chars = resource_manager::storage_class_chars ();
     int nr_of_classes = class_chars.length ();
 
     QGridLayout *style_grid = new QGridLayout ();
     QVector<QLabel*> description (nr_of_classes);
     QVector<color_picker*> color (nr_of_classes);
 
     int column = 0;
     int row = 0;
+
+    m_ws_enable_colors = new QCheckBox (tr ("Enable attribute colors"));
+    style_grid->addWidget (m_ws_enable_colors, row++, column, 1, 4);
+
+    m_ws_hide_tool_tips = new QCheckBox (tr ("Hide tools tips"));
+    style_grid->addWidget (m_ws_hide_tool_tips, row++, column, 1, 4);
+    connect (m_ws_enable_colors, SIGNAL (toggled (bool)),
+             m_ws_hide_tool_tips, SLOT(setEnabled (bool)));
+    m_ws_hide_tool_tips->setChecked (
+      settings->value (ws_hide_tool_tips.key, ws_hide_tool_tips.def).toBool ());
+
     for (int i = 0; i < nr_of_classes; i++)
       {
         description[i] = new QLabel ("    " + class_names.at (i));
         description[i]->setAlignment (Qt::AlignRight);
+        connect (m_ws_enable_colors, SIGNAL (toggled (bool)),
+                 description[i], SLOT(setEnabled (bool)));
+
         QVariant default_var = default_colors.at (i);
         QColor setting_color = settings->value ("workspaceview/color_" + class_chars.mid (i, 1), default_var).value<QColor> ();
         color[i] = new color_picker (setting_color);
         color[i]->setObjectName ("color_" + class_chars.mid (i, 1));
         color[i]->setMinimumSize (30, 10);
+        connect (m_ws_enable_colors, SIGNAL (toggled (bool)),
+                 color[i], SLOT(setEnabled (bool)));
+
         style_grid->addWidget (description[i], row, 3*column);
         style_grid->addWidget (color[i], row, 3*column+1);
         if (++column == 3)
           {
             style_grid->setColumnStretch (4*column, 10);
             row++;
             column = 0;
           }
       }
 
+    // Load enable settings at the end for having signals already connected
+    bool colors_enabled =
+        settings->value (ws_enable_colors.key, ws_enable_colors.def).toBool ();
+    m_ws_enable_colors->setChecked (colors_enabled);
+    m_ws_hide_tool_tips->setEnabled (colors_enabled);
+
     // place grid with elements into the tab
     workspace_colors_box->setLayout (style_grid);
   }
 
   void settings_dialog::write_workspace_colors (QSettings *settings)
   {
+    settings->setValue (ws_enable_colors.key, m_ws_enable_colors->isChecked ());
+    settings->setValue (ws_hide_tool_tips.key, m_ws_hide_tool_tips->isChecked ());
 
     QString class_chars = resource_manager::storage_class_chars ();
     color_picker *color;
 
     for (int i = 0; i < class_chars.length (); i++)
       {
         color = workspace_colors_box->findChild <color_picker *> ("color_" + class_chars.mid (i, 1));
         if (color)
diff --git a/libgui/src/settings-dialog.h b/libgui/src/settings-dialog.h
--- a/libgui/src/settings-dialog.h
+++ b/libgui/src/settings-dialog.h
@@ -18,16 +18,17 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, see
 <https://www.gnu.org/licenses/>.
 
 */
 
 #if ! defined (octave_settings_dialog_h)
 #define octave_settings_dialog_h 1
 
+#include <QCheckBox>
 #include <QDialog>
 #include <QSettings>
 #include <QLineEdit>
 #include <QRadioButton>
 
 #include "color-picker.h"
 #include "gui-preferences.h"
 #include "ui-settings-dialog.h"
@@ -87,12 +88,15 @@ namespace octave
     color_picker *m_widget_title_bg_color;
     color_picker *m_widget_title_bg_color_active;
     color_picker *m_widget_title_fg_color;
     color_picker *m_widget_title_fg_color_active;
     color_picker *m_editor_current_line_color;
 
     QRadioButton *m_rb_comment_strings[ed_comment_strings_count];
     QRadioButton *m_rb_uncomment_strings[ed_comment_strings_count];
+
+    QCheckBox *m_ws_enable_colors;
+    QCheckBox *m_ws_hide_tool_tips;
   };
 }
 
 #endif
diff --git a/libgui/src/settings-dialog.ui b/libgui/src/settings-dialog.ui
--- a/libgui/src/settings-dialog.ui
+++ b/libgui/src/settings-dialog.ui
@@ -27,17 +27,17 @@
     <widget class="QTabWidget" name="tabWidget">
      <property name="minimumSize">
       <size>
        <width>0</width>
        <height>0</height>
       </size>
      </property>
      <property name="currentIndex">
-      <number>2</number>
+      <number>4</number>
      </property>
      <widget class="QWidget" name="tab_general">
       <property name="enabled">
        <bool>true</bool>
       </property>
       <attribute name="title">
        <string>General</string>
       </attribute>
@@ -48,17 +48,17 @@
           <bool>true</bool>
          </property>
          <widget class="QWidget" name="scrollAreaWidgetContents_2">
           <property name="geometry">
            <rect>
             <x>0</x>
             <y>0</y>
             <width>658</width>
-            <height>573</height>
+            <height>571</height>
            </rect>
           </property>
           <layout class="QVBoxLayout" name="verticalLayout_17">
            <item>
             <widget class="QGroupBox" name="groupBox">
              <property name="title">
               <string>Interface</string>
              </property>
@@ -505,17 +505,17 @@
           <bool>true</bool>
          </property>
          <widget class="QWidget" name="scrollAreaWidgetContents_4">
           <property name="geometry">
            <rect>
             <x>0</x>
             <y>0</y>
             <width>658</width>
-            <height>573</height>
+            <height>571</height>
            </rect>
           </property>
           <layout class="QVBoxLayout" name="verticalLayout_7">
            <item>
             <layout class="QVBoxLayout" name="verticalLayout_8">
              <item>
               <layout class="QGridLayout" name="gridLayout_7">
                <property name="sizeHint" stdset="0">
@@ -784,19 +784,19 @@
         <widget class="QScrollArea" name="tab_editor_scroll_area">
          <property name="widgetResizable">
           <bool>true</bool>
          </property>
          <widget class="QWidget" name="scrollAreaWidgetContents">
           <property name="geometry">
            <rect>
             <x>0</x>
-            <y>-585</y>
+            <y>0</y>
             <width>645</width>
-            <height>1196</height>
+            <height>1213</height>
            </rect>
           </property>
           <layout class="QVBoxLayout" name="verticalLayout_16">
            <item>
             <widget class="QGroupBox" name="groupBox_5">
              <property name="title">
               <string>General</string>
              </property>
@@ -2112,17 +2112,17 @@
           <bool>true</bool>
          </property>
          <widget class="QWidget" name="scrollAreaWidgetContents_5">
           <property name="geometry">
            <rect>
             <x>0</x>
             <y>0</y>
             <width>658</width>
-            <height>573</height>
+            <height>571</height>
            </rect>
           </property>
           <layout class="QGridLayout" name="gridLayout_8">
            <item row="0" column="0">
             <widget class="QGroupBox" name="groupBox_4">
              <property name="title">
               <string>Behavior</string>
              </property>
@@ -2256,17 +2256,17 @@
           <bool>true</bool>
          </property>
          <widget class="QWidget" name="scrollAreaWidgetContents_6">
           <property name="geometry">
            <rect>
             <x>0</x>
             <y>0</y>
             <width>658</width>
-            <height>573</height>
+            <height>571</height>
            </rect>
           </property>
           <layout class="QVBoxLayout" name="verticalLayout_19">
            <item>
             <layout class="QGridLayout" name="gridLayout_14">
              <property name="topMargin">
               <number>0</number>
              </property>
@@ -2281,23 +2281,16 @@
                  <verstretch>0</verstretch>
                 </sizepolicy>
                </property>
                <property name="title">
                 <string>Colors for variable attributes</string>
                </property>
               </widget>
              </item>
-             <item row="1" column="0">
-              <widget class="QCheckBox" name="cb_hide_tool_tips">
-               <property name="text">
-                <string>Hide tool tips</string>
-               </property>
-              </widget>
-             </item>
             </layout>
            </item>
            <item>
             <spacer name="verticalSpacer_6">
              <property name="orientation">
               <enum>Qt::Vertical</enum>
              </property>
              <property name="sizeHint" stdset="0">
@@ -2324,18 +2317,18 @@
          <property name="widgetResizable">
           <bool>true</bool>
          </property>
          <widget class="QWidget" name="scrollAreaWidgetContents_3">
           <property name="geometry">
            <rect>
             <x>0</x>
             <y>0</y>
-            <width>671</width>
-            <height>560</height>
+            <width>669</width>
+            <height>558</height>
            </rect>
           </property>
           <layout class="QVBoxLayout" name="verticalLayout_vesc_manual">
            <property name="geometry" stdset="0">
             <rect>
              <x>0</x>
              <y>0</y>
              <width>678</width>
@@ -2527,17 +2520,17 @@
           <bool>true</bool>
          </property>
          <widget class="QWidget" name="scrollAreaWidgetContents_8">
           <property name="geometry">
            <rect>
             <x>0</x>
             <y>0</y>
             <width>658</width>
-            <height>573</height>
+            <height>571</height>
            </rect>
           </property>
           <layout class="QVBoxLayout" name="verticalLayout_25">
            <item>
             <layout class="QVBoxLayout" name="verticalLayout_26">
              <property name="sizeConstraint">
               <enum>QLayout::SetDefaultConstraint</enum>
              </property>
@@ -2726,17 +2719,17 @@
           <bool>true</bool>
          </property>
          <widget class="QWidget" name="scrollAreaWidgetContents_7">
           <property name="geometry">
            <rect>
             <x>0</x>
             <y>0</y>
             <width>658</width>
-            <height>573</height>
+            <height>571</height>
            </rect>
           </property>
           <layout class="QVBoxLayout" name="verticalLayout_20">
            <item>
             <layout class="QVBoxLayout" name="verticalLayout">
              <item>
               <widget class="QCheckBox" name="checkbox_allow_web_connect">
                <property name="text">
diff --git a/libgui/src/workspace-model.cc b/libgui/src/workspace-model.cc
--- a/libgui/src/workspace-model.cc
+++ b/libgui/src/workspace-model.cc
@@ -27,16 +27,17 @@ along with Octave; see the file COPYING.
 
 #include <QTreeWidget>
 #include <QSettings>
 
 #include "symscope.h"
 #include "utils.h"
 
 #include "resource-manager.h"
+#include "gui-preferences.h"
 #include "workspace-model.h"
 
 namespace octave
 {
   workspace_model::workspace_model (QObject *p)
     : QAbstractTableModel (p)
   {
     m_columnNames.append (tr ("Name"));
@@ -126,17 +127,17 @@ namespace octave
 
   QVariant
   workspace_model::data (const QModelIndex& idx, int role) const
   {
     QVariant retval;
 
     if (idx.isValid ())
       {
-        if (role == Qt::BackgroundColorRole)
+        if (role == Qt::BackgroundColorRole && m_enable_colors)
           {
             QString class_chars = resource_manager::storage_class_chars ();
             int actual_class
               = class_chars.indexOf (m_scopes[idx.row ()].toLatin1 ());
             if (actual_class >= 0)
               return QVariant (m_storage_class_colors.at (actual_class));
             else
               return retval;
@@ -249,16 +250,19 @@ namespace octave
 
   void
   workspace_model::notice_settings (const QSettings *settings)
   {
     QList<QColor> default_colors =
       resource_manager::storage_class_default_colors ();
     QString class_chars = resource_manager::storage_class_chars ();
 
+    m_enable_colors =
+        settings->value (ws_enable_colors.key, ws_enable_colors.key).toBool ();
+
     for (int i = 0; i < class_chars.length (); i++)
       {
         QVariant default_var = default_colors.at (i);
         QColor setting_color = settings->value ("workspaceview/color_"
                                                 + class_chars.mid (i,1),
                                                 default_var).value<QColor> ();
         m_storage_class_colors.replace (i,setting_color);
       }
diff --git a/libgui/src/workspace-model.h b/libgui/src/workspace-model.h
--- a/libgui/src/workspace-model.h
+++ b/libgui/src/workspace-model.h
@@ -106,13 +106,14 @@ namespace octave
     QStringList m_class_names;
     QStringList m_dimensions;
     QStringList m_values;
     QIntList m_complex_flags;
 
     QStringList m_columnNames;
 
     QList<QColor>  m_storage_class_colors;
+    bool m_enable_colors;
 
   };
 }
 
 #endif
diff --git a/libgui/src/workspace-view.cc b/libgui/src/workspace-view.cc
--- a/libgui/src/workspace-view.cc
+++ b/libgui/src/workspace-view.cc
@@ -34,16 +34,17 @@ along with Octave; see the file COPYING.
 #include <QHBoxLayout>
 #include <QVBoxLayout>
 #include <QPushButton>
 #include <QMenu>
 #include <QLabel>
 #include <QCompleter>
 #include <QSignalMapper>
 
+#include "gui-preferences.h"
 #include "workspace-view.h"
 #include "resource-manager.h"
 
 #include "interpreter-private.h"
 #include "symscope.h"
 
 namespace octave
 {
@@ -187,17 +188,18 @@ namespace octave
 
     m_model->notice_settings (settings); // update colors of model first
 
     for (i = 0; i < m_columns_shown_keys.size (); i++)
       m_view->setColumnHidden (i + 1, ! settings->value (m_columns_shown_keys.at (i),true).toBool ());
 
     QString tool_tip;
 
-    if (! settings->value ("workspaceview/hide_tool_tips",false).toBool ())
+    if (settings->value (ws_enable_colors.key, ws_enable_colors.def).toBool ()
+        && ! settings->value (ws_hide_tool_tips.key, ws_hide_tool_tips.def).toBool ())
       {
         tool_tip  = QString (tr ("View the variables in the active workspace.<br>"));
         tool_tip += QString (tr ("Colors for variable attributes:"));
         for (i = 0; i < resource_manager::storage_class_chars ().length (); i++)
           {
             tool_tip +=
               QString (R"(<div style="background-color:%1;color:#000000">%2</div>)")
               .arg (m_model->storage_class_color (i).name ())
