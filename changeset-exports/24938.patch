# HG changeset patch
# User Mike Miller <mtmiller@octave.org>
# Date 1521516025 25200
#      Mon Mar 19 20:20:25 2018 -0700
# Branch stable
# Node ID 4f1da669b610ee48ad26f2301b29b6546b5f02c6
# Parent  a0297217d3d30bfac2e922b96c384b6aab30180c
build: export and use qcollectiongenerator command line options correctly

* acinclude.m4 (OCTAVE_CHECK_QT_VERSION): Export QCOLLECTIONGENERATORFLAGS
and QHELPGENERATORFLAGS.
* doc/interpreter/module.mk ($(OCTAVE_QTHELP_FILES)): Add command line options
from $(QCOLLECTIONGENERATORFLAGS).

diff --git a/doc/interpreter/module.mk b/doc/interpreter/module.mk
--- a/doc/interpreter/module.mk
+++ b/doc/interpreter/module.mk
@@ -200,17 +200,17 @@ octdoc_DATA += \
 $(srcdir)/%reldir%/octave.info: $(DOC_IMAGES_TXT) $(octave_TEXINFOS)
 %reldir%/octave.dvi: $(DOC_IMAGES_EPS) $(octave_TEXINFOS)
 %reldir%/octave.pdf: $(DOC_IMAGES_PDF) $(octave_TEXINFOS)
 $(OCTAVE_HTML_STAMP): $(DOC_IMAGES_PNG) $(octave_TEXINFOS)
 
 $(OCTAVE_QTHELP_FILES): $(OCTAVE_HTML_STAMP) $(srcdir)/%reldir%/prepare_qhelp.py
 	$(AM_V_GEN)rm -f $(OCTAVE_QTHELP_FILES) && \
 	$(PYTHON) $(srcdir)/%reldir%/prepare_qhelp.py %reldir%/octave_interpreter octave.html && \
-	$(QCOLLECTIONGENERATOR) %reldir%/octave_interpreter.qhcp -o %reldir%/octave_interpreter.qhc >/dev/null && \
+	$(QCOLLECTIONGENERATOR) $(QCOLLECTIONGENERATORFLAGS) %reldir%/octave_interpreter.qhcp -o %reldir%/octave_interpreter.qhc >/dev/null && \
 	rm -f %reldir%/octave_interpreter.qhcp %reldir%/octave_interpreter.qhp
 
 ## The Qt help collection generator command produces two output files
 ## with the same base name: the compressed help (qch) file and the help
 ## collection (qhc) file.  Declare the qhc file to depend on the
 ## associated qch file, so that the files are built serially.
 %reldir%/octave_interpreter.qhc: %reldir%/octave_interpreter.qch
 
diff --git a/m4/acinclude.m4 b/m4/acinclude.m4
--- a/m4/acinclude.m4
+++ b/m4/acinclude.m4
@@ -1950,26 +1950,28 @@ AC_DEFUN([OCTAVE_CHECK_QT_VERSION], [AC_
       RCC_QTVER=
       LRELEASE_QTVER=
       QCOLLECTIONGENERATOR_QTVER=
       QHELPGENERATOR_QTVER=
       MOCFLAGS=
       UICFLAGS=
       RCCFLAGS=
       LRELEASEFLAGS=
+      QCOLLECTIONGENERATORFLAGS=
       QHELPGENERATORFLAGS=
-      QCOLLECTIONGENERATORFLAGS=
       $as_unset ac_cv_prog_MOC_QTVER
       $as_unset ac_cv_prog_ac_ct_MOC_QTVER
       $as_unset ac_cv_prog_UIC_QTVER
       $as_unset ac_cv_prog_ac_ct_UIC_QTVER
       $as_unset ac_cv_prog_RCC_QTVER
       $as_unset ac_cv_prog_ac_ct_RCC_QTVER
       $as_unset ac_cv_prog_LRELEASE_QTVER
       $as_unset ac_cv_prog_ac_ct_LRELEASE_QTVER
+      $as_unset ac_cv_prog_QCOLLECTIONGENERATOR_QTVER
+      $as_unset ac_cv_prog_ac_ct_QCOLLECTIONGENERATOR_QTVER
       $as_unset ac_cv_prog_QHELPGENERATOR_QTVER
       $as_unset ac_cv_prog_ac_ct_QHELPGENERATOR_QTVER
     fi
   fi
 
   if test $build_qt_gui = yes; then
     AC_CHECK_FUNCS([setlocale], [],
       [build_qt_gui=no
@@ -2052,16 +2054,18 @@ AC_DEFUN([OCTAVE_CHECK_QT_VERSION], [AC_
 
     OCTAVE_CHECK_QSCINTILLA([$qt_version])
 
   fi
   AC_SUBST(MOCFLAGS)
   AC_SUBST(UICFLAGS)
   AC_SUBST(RCCFLAGS)
   AC_SUBST(LRELEASEFLAGS)
+  AC_SUBST(QCOLLECTIONGENERATORFLAGS)
+  AC_SUBST(QHELPGENERATORFLAGS)
   AC_SUBST(QT_CPPFLAGS)
   AC_SUBST(QT_LDFLAGS)
   AC_SUBST(QT_LIBS)
 ])
 dnl
 dnl Check if the default Fortran INTEGER is 64 bits wide.
 dnl If cross-compiling, assume 4 bytes unless the cache value
 dnl is already set.
