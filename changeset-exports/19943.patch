# HG changeset patch
# User Torsten <ttl@justmail.de>
# Date 1426342851 -3600
#      Sat Mar 14 15:20:51 2015 +0100
# Node ID 88233ac3f3ead9de7ec471ba5c3e399738b412ba
# Parent  526b1a2d04ca1f90b3365cac330fbaeddbe2f638
fix issue with ctrl-c for copying when editor has focus and is docked

* QTerminal.cc (set_global_shortcuts): new slot for en-/disabling interrupt
  shortcut in terminal depending on terminal focus_out

* QTerminal.h: new slot set_global_shortcuts

* TerminalView.cpp (TerminalView), for Linux:
* QWinTerminalImpl.cpp (QWinTerminalImpl), for windows:
  connect set_global_shortcuts_signal also to the new slot in QTerminal

diff --git a/libgui/qterminal/libqterminal/QTerminal.cc b/libgui/qterminal/libqterminal/QTerminal.cc
--- a/libgui/qterminal/libqterminal/QTerminal.cc
+++ b/libgui/qterminal/libqterminal/QTerminal.cc
@@ -66,16 +66,27 @@ QTerminal::color_names (void)
             << QObject::tr ("background")
             << QObject::tr ("selection")
             << QObject::tr ("cursor");
     }
 
   return names;
 }
 
+// slot for disabling the interrupt action when terminal loses focus
+void
+QTerminal::set_global_shortcuts (bool focus_out)
+  {
+    if (focus_out)
+      _interrupt_action->setShortcut (QKeySequence ());
+    else
+     _interrupt_action->setShortcut (
+              QKeySequence (Qt::ControlModifier + Qt::Key_C));
+  }
+
 void
 QTerminal::notice_settings (const QSettings *settings)
 {
   // QSettings pointer is checked before emitting.
 
   // Set terminal font:
   QFont term_font = QFont ();
   term_font.setStyleHint (QFont::TypeWriter);
diff --git a/libgui/qterminal/libqterminal/QTerminal.h b/libgui/qterminal/libqterminal/QTerminal.h
--- a/libgui/qterminal/libqterminal/QTerminal.h
+++ b/libgui/qterminal/libqterminal/QTerminal.h
@@ -114,16 +114,18 @@ public slots:
   }
 
   void notice_settings (const QSettings *settings);
 
   virtual void init_terminal_size (void) { }
 
   void terminal_interrupt (void) { emit interrupt_signal (); }
 
+  void set_global_shortcuts (bool focus_out);
+
 protected:
 
   QTerminal (QWidget *xparent = 0) : QWidget (xparent)
   {
     // context menu
     setContextMenuPolicy (Qt::CustomContextMenu);
 
     _contextMenu = new QMenu (this);
diff --git a/libgui/qterminal/libqterminal/unix/TerminalView.cpp b/libgui/qterminal/libqterminal/unix/TerminalView.cpp
--- a/libgui/qterminal/libqterminal/unix/TerminalView.cpp
+++ b/libgui/qterminal/libqterminal/unix/TerminalView.cpp
@@ -323,16 +323,18 @@ TerminalView::TerminalView(QWidget *pare
 
   _gridLayout = new QGridLayout(this);
   _gridLayout->setMargin(0);
 
   setLayout( _gridLayout );
 
   connect (this, SIGNAL (set_global_shortcuts_signal (bool)),
            parent->parent (), SLOT (set_global_shortcuts (bool)));
+  connect (this, SIGNAL (set_global_shortcuts_signal (bool)),
+           parent, SLOT (set_global_shortcuts (bool)));
 
 }
 
 TerminalView::~TerminalView()
 {
   qApp->removeEventFilter( this );
 
   delete[] _image;
diff --git a/libgui/qterminal/libqterminal/win32/QWinTerminalImpl.cpp b/libgui/qterminal/libqterminal/win32/QWinTerminalImpl.cpp
--- a/libgui/qterminal/libqterminal/win32/QWinTerminalImpl.cpp
+++ b/libgui/qterminal/libqterminal/win32/QWinTerminalImpl.cpp
@@ -1421,16 +1421,18 @@ QConsolePrivate::cursorRect (void)
 QWinTerminalImpl::QWinTerminalImpl (QWidget* parent)
     : QTerminal (parent), d (new QConsolePrivate (this)),
       allowTripleClick (false)
 {
     installEventFilter (this);
 
     connect (this, SIGNAL (set_global_shortcuts_signal (bool)),
            parent, SLOT (set_global_shortcuts (bool)));
+    connect (this, SIGNAL (set_global_shortcuts_signal (bool)),
+             this, SLOT (set_global_shortcuts (bool)));
 
     connect (this, SIGNAL (set_screen_size_signal (int, int)),
              parent, SLOT (set_screen_size (int, int)));
 
     setAcceptDrops (true);
 }
 
 //////////////////////////////////////////////////////////////////////////////
