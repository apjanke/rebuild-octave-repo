# HG changeset patch
# User Rik <rik@octave.org>
# Date 1471994011 25200
#      Tue Aug 23 16:13:31 2016 -0700
# Node ID 17c9cc85842e81b21b6f8ab48d4b79da641dcdfd
# Parent  3dc8764e3bd55f1d5935097bdd2e12d72230b3e5
Fix display of scaled images in OpenGL toolkits (bug #48879).

* gl-render.cc (draw_image): Adjust spacing and wrap long lines,
for readability.

* graphics.cc (convert_cdata_2): Use 'fix' rather than 'round'
when scaling data to climits.

* imagesc.m: Add %!demo to test display.

diff --git a/libinterp/corefcn/gl-render.cc b/libinterp/corefcn/gl-render.cc
--- a/libinterp/corefcn/gl-render.cc
+++ b/libinterp/corefcn/gl-render.cc
@@ -3207,56 +3207,57 @@ namespace octave
     octave_value cdata = props.get_color_data ();
     dim_vector dv (cdata.dims ());
     int h = dv(0);
     int w = dv(1);
 
     Matrix x = props.get_xdata ().matrix_value ();
     Matrix y = props.get_ydata ().matrix_value ();
 
-    // Someone wants us to draw an empty image? No way.
+    // Someone wants us to draw an empty image?  No way.
     if (x.is_empty () || y.is_empty ())
       return;
 
     if (w > 1 && x(1) == x(0))
       x(1) = x(1) + (w-1);
 
     if (h > 1 && y(1) == y(0))
       y(1) = y(1) + (h-1);
 
     const ColumnVector p0 = xform.transform (x(0), y(0), 0);
     const ColumnVector p1 = xform.transform (x(1), y(1), 0);
 
-    if (octave::math::isnan (p0(0)) || octave::math::isnan (p0(1)) || octave::math::isnan (p1(0)) || octave::math::isnan (p1(1)))
+    if (octave::math::isnan (p0(0)) || octave::math::isnan (p0(1))
+        || octave::math::isnan (p1(0)) || octave::math::isnan (p1(1)))
       {
         warning ("opengl_renderer: image X,Y data too large to draw");
         return;
       }
 
     // image pixel size in screen pixel units
     float pix_dx, pix_dy;
     // image pixel size in normalized units
     float nor_dx, nor_dy;
 
     if (w > 1)
       {
-        pix_dx = (p1(0) - p0(0))/(w-1);
-        nor_dx = (x(1) - x(0))/(w-1);
+        pix_dx = (p1(0) - p0(0)) / (w-1);
+        nor_dx = (x(1) - x(0)) / (w-1);
       }
     else
       {
         const ColumnVector p1w = xform.transform (x(1) + 1, y(1), 0);
         pix_dx = p1w(0) - p0(0);
         nor_dx = 1;
       }
 
     if (h > 1)
       {
-        pix_dy = (p1(1) - p0(1))/(h-1);
-        nor_dy = (y(1) - y(0))/(h-1);
+        pix_dy = (p1(1) - p0(1)) / (h-1);
+        nor_dy = (y(1) - y(0)) / (h-1);
       }
     else
       {
         const ColumnVector p1h = xform.transform (x(1), y(1) + 1, 0);
         pix_dy = p1h(1) - p0(1);
         nor_dy = 1;
       }
 
@@ -3283,17 +3284,16 @@ namespace octave
         if (im_ymax > ymax)
           i1 -= (im_ymax - ymax)/nor_dy;
       }
     else // clip to viewport
       {
         GLfloat vp[4];
         glGetFloatv (GL_VIEWPORT, vp);
         // FIXME: actually add the code to do it!
-
       }
 
     if (i0 >= i1 || j0 >= j1)
       return;
 
     glPixelZoom (pix_dx, -pix_dy);
     glRasterPos3d (im_xmin + nor_dx*j0, im_ymin + nor_dy*i0, 0);
 
diff --git a/libinterp/corefcn/graphics.cc b/libinterp/corefcn/graphics.cc
--- a/libinterp/corefcn/graphics.cc
+++ b/libinterp/corefcn/graphics.cc
@@ -847,17 +847,17 @@ screen_size_pixels (void)
 }
 
 static void
 convert_cdata_2 (bool is_scaled, bool is_real, double clim_0, double clim_1,
                  const double *cmapv, double x, octave_idx_type lda,
                  octave_idx_type nc, octave_idx_type i, double *av)
 {
   if (is_scaled)
-    x = octave::math::round ((nc - 1) * (x - clim_0) / (clim_1 - clim_0));
+    x = octave::math::fix (nc * (x - clim_0) / (clim_1 - clim_0));
   else if (is_real)
     x = octave::math::round (x - 1);
 
   if (octave::math::isnan (x))
     {
       av[i]       = x;
       av[i+lda]   = x;
       av[i+2*lda] = x;
diff --git a/scripts/image/imagesc.m b/scripts/image/imagesc.m
--- a/scripts/image/imagesc.m
+++ b/scripts/image/imagesc.m
@@ -176,8 +176,15 @@ endfunction
 %! imagesc (g, g, sin (h));
 %! plot (g, 11.0 * ones (size (g)));
 %! imagesc (g, g+12, cos (h/2));
 %! plot (g, 11.5 * ones (size (g)));
 %! axis ([0 10 0 22]);
 %! hold off;
 %! title ("line, image, line, image, line w/hold()");
 
+%!demo  # bug #48879
+%! clf;
+%! img = reshape (1:100, 10, 10);
+%! imagesc (img);
+%! colormap (prism (10));
+%! title ("10 vertical color bars");
+
