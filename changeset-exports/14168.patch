# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1325958274 18000
#      Sat Jan 07 12:44:34 2012 -0500
# Branch stable
# Node ID 7ffd2a0791ef389474bb52228e9b046a3721ab3f
# Parent  906eecd4bf43b0146c50019ee41acac2dc83c935
fix name lookup problem with static nested class

* oct-inttypes.h (octave_int_arith_base<T,false>::mul):
Tag truncate_int with octave_int_base<T>::.
(octave_int_arith_base<T,true>::mul): Likewise.

diff --git a/liboctave/oct-inttypes.h b/liboctave/oct-inttypes.h
--- a/liboctave/oct-inttypes.h
+++ b/liboctave/oct-inttypes.h
@@ -361,18 +361,18 @@ public:
 
   // Multiplication is done using promotion to wider integer type. If there is
   // no suitable promotion type, this operation *MUST* be specialized.
   static T
   mul (T x, T y)
     {
       // Promotion type for multiplication (if exists).
       typedef typename query_integer_type<2*sizeof (T), false>::type mptype;
-      return truncate_int (static_cast<mptype> (x)
-                           * static_cast<mptype> (y));
+      return octave_int_base<T>::truncate_int (static_cast<mptype> (x)
+                                               * static_cast<mptype> (y));
     }
 
   // Division with rounding to nearest. Note that / and % are probably
   // computed by a single instruction.
   static T
   div (T x, T y)
     {
       if (y != 0)
@@ -616,18 +616,18 @@ public:
 
   // Multiplication is done using promotion to wider integer type. If there is
   // no suitable promotion type, this operation *MUST* be specialized.
   static T
   mul (T x, T y)
     {
       // Promotion type for multiplication (if exists).
       typedef typename query_integer_type<2*sizeof (T), true>::type mptype;
-      return truncate_int (static_cast<mptype> (x)
-                           * static_cast<mptype> (y));
+      return octave_int_base<T>::truncate_int (static_cast<mptype> (x)
+                                               * static_cast<mptype> (y));
     }
 
   // Division.
   static T
   div (T x, T y)
     {
       T z;
       if (y == 0)
