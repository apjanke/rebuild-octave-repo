# HG changeset patch
# User Rik <rik@octave.org>
# Date 1487562164 28800
#      Sun Feb 19 19:42:44 2017 -0800
# Branch stable
# Node ID 525c36d5f9857588768edeb9b87fef549c5ae58d
# Parent  1468c2234478afc40e6b31ebde90693415022708
Workaround segfault in file_stat (bug #50234).

* file-stat.cc (file_stat): Move constructor from header file.
* file-stat.cc (~file_stat): Move destructor from header file.

* file-stat.h: (file_stat): Declare constructor only.
* file-stat.h: (~file_stat): Declare destructor only.

diff --git a/liboctave/system/file-stat.cc b/liboctave/system/file-stat.cc
--- a/liboctave/system/file-stat.cc
+++ b/liboctave/system/file-stat.cc
@@ -162,16 +162,25 @@ namespace octave
     {
       file_stat fs (file);
 
       return fs ? fs.is_newer (time) : -1;
     }
 
     // Private stuff:
 
+    file_stat::file_stat (const std::string& n, bool fl)
+        : base_file_stat (), file_name (n), follow_links (fl)
+      {
+        if (! file_name.empty ())
+          update_internal ();
+      }
+
+    inline file_stat::~file_stat () { }
+
     void
     file_stat::update_internal (bool force)
     {
       if (! initialized || force)
         {
           initialized = false;
           fail = false;
 
diff --git a/liboctave/system/file-stat.h b/liboctave/system/file-stat.h
--- a/liboctave/system/file-stat.h
+++ b/liboctave/system/file-stat.h
@@ -206,22 +206,19 @@ namespace octave
     };
 
     class
     OCTAVE_API
     file_stat : public base_file_stat
     {
     public:
 
-      file_stat (const std::string& n = "", bool fl = true)
-        : base_file_stat (), file_name (n), follow_links (fl)
-      {
-        if (! file_name.empty ())
-          update_internal ();
-      }
+      // This constructor must remain defined in the cpp file rather than in
+      // the header file (bug #50234).
+      file_stat (const std::string& n = "", bool fl = true);
 
       file_stat (const file_stat& fs)
         : base_file_stat (fs), file_name (fs.file_name),
           follow_links (fs.follow_links) { }
 
       file_stat& operator = (const file_stat& fs)
       {
         if (this != &fs)
@@ -230,17 +227,19 @@ namespace octave
 
             file_name = fs.file_name;
             follow_links = fs.follow_links;
           }
 
         return *this;
       }
 
-      ~file_stat (void) { }
+      // This destructor must remain as an empty destructor defined in the
+      // cpp file rather than in the header file (bug #50234).
+      ~file_stat (void);
 
       void get_stats (bool force = false)
       {
         if (! initialized || force)
           update_internal (force);
       }
 
       void get_stats (const std::string& n, bool force = false)
