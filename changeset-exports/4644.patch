# HG changeset patch
# User jwe
# Date 1069505920 0
#      Sat Nov 22 12:58:40 2003 +0000
# Node ID 3b74f1a867504a36ca822c40615aa685c484e1a1
# Parent  ef3a14fb6847290a27ef2b9b90aa652543059cc8
[project @ 2003-11-22 12:58:40 by jwe]

diff --git a/src/ov-mapper.h b/src/ov-mapper.h
--- a/src/ov-mapper.h
+++ b/src/ov-mapper.h
@@ -22,32 +22,36 @@ Software Foundation, 59 Temple Place - S
 
 #if !defined (octave_mapper_h)
 #define octave_mapper_h 1
 
 #if defined (__GNUG__) && defined (USE_PRAGMA_INTERFACE_IMPLEMENTATION)
 #pragma interface
 #endif
 
+#include <cstdlib>
+
 #include <string>
 
 #include "oct-obj.h"
 #include "ov-fcn.h"
 #include "ov-typeinfo.h"
 
 class octave_value;
 class octave_value_list;
 
 // Builtin mapper functions.
 
 class
 octave_mapper : public octave_function
 {
 public:
 
+  octave_mapper (void) { abort (); }
+
   typedef int (*ch_mapper) (int);
   typedef bool (*d_b_mapper) (double);
   typedef bool (*c_b_mapper) (const Complex&);
   typedef double (*d_d_mapper) (double);
   typedef double (*d_c_mapper) (const Complex&);
   typedef Complex (*c_c_mapper) (const Complex&);
 
   octave_mapper (ch_mapper ch, d_b_mapper db, c_b_mapper cb,
@@ -77,18 +81,16 @@ public:
 			     const std::list<octave_value_list>& idx,
 			     int nargout);
 
   octave_value_list
   do_multi_index_op (int nargout, const octave_value_list& args);
 
 private:
 
-  octave_mapper (void);
-
   octave_mapper (const octave_mapper& m);
 
   octave_value apply (const octave_value& arg) const;
 
   // ch_map_fcn is a kluge.
 
   ch_mapper ch_map_fcn;
   d_b_mapper d_b_map_fcn;
