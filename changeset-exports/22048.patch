# HG changeset patch
# User Daniel J Sebald <daniel.sebald@ieee.org>
# Date 1467793773 18000
#      Wed Jul 06 03:29:33 2016 -0500
# Node ID 1a8e2a0251c38f3055536aa06606d7b78dda62d5
# Parent  ff17e1c873b257d907f8f440af1802eb5ca9b965
Add minor grid line control and alpha blending for gnuplot toolkit (bug #48401).

* __gnuplot_draw_axes__.m: Replace have_grid with have_major_grid and
  have_minor_grid.  Add visible_gls and visible_mgls variables derived from
  gridlinestyle and minorgridlinestyle properties.  Add condition visible_gls
  to setting grids on and condition visible_mgls to setting minor grids on.
  Create a linetype for major and minor grid line if present and use the index
  in the 'set grid' command.  Use linetype 0 if not present.
  (do_linestyle_command): If the object has an alpha field, convert the value
  to 8-bit and add two characters to the front of RGB specification.

diff --git a/scripts/plot/util/private/__gnuplot_draw_axes__.m b/scripts/plot/util/private/__gnuplot_draw_axes__.m
--- a/scripts/plot/util/private/__gnuplot_draw_axes__.m
+++ b/scripts/plot/util/private/__gnuplot_draw_axes__.m
@@ -278,67 +278,72 @@ function __gnuplot_draw_axes__ (h, plot_
   else
     yaxisloc = "y";
     yaxisloc_using = "y1";
     if (strcmpi (axis_obj.yaxislocation, "zero"))
       fputs (plot_stream, "set yzeroaxis;\n");
     endif
   endif
 
-  have_grid = false;
+  have_major_grid = false;
+  have_minor_grid = false;
+  visible_gls = ! strcmp (axis_obj.gridlinestyle, "none") ...
+                && ! strcmp (axis_obj.gridcolor, "none");
+  visible_mgls = ! strcmp (axis_obj.minorgridlinestyle, "none") ...
+                 && ! strcmp (axis_obj.minorgridcolor, "none");
 
-  if (strcmpi (axis_obj.xgrid, "on"))
-    have_grid = true;
+  if (strcmp (axis_obj.xgrid, "on") && visible_gls)
+    have_major_grid = true;
     fprintf (plot_stream, "set grid %stics;\n", xaxisloc);
   else
     fprintf (plot_stream, "set grid no%stics;\n", xaxisloc);
   endif
 
-  if (strcmpi (axis_obj.ygrid, "on"))
-    have_grid = true;
+  if (strcmp (axis_obj.ygrid, "on") && visible_gls)
+    have_major_grid = true;
     fprintf (plot_stream, "set grid %stics;\n", yaxisloc);
   else
     fprintf (plot_stream, "set grid no%stics;\n", yaxisloc);
   endif
 
-  if (strcmpi (axis_obj.zgrid, "on"))
-    have_grid = true;
+  if (strcmp (axis_obj.zgrid, "on") && visible_gls)
+    have_major_grid = true;
     fputs (plot_stream, "set grid ztics;\n");
   else
     fputs (plot_stream, "set grid noztics;\n");
   endif
 
-  if (strcmpi (axis_obj.xminorgrid, "on"))
-    have_grid = true;
+  if (strcmp (axis_obj.xminorgrid, "on") && visible_mgls)
+    have_minor_grid = true;
     if (strcmp (axis_obj.xscale, "log"))
       m = 10;
     else
       m = 5;
     endif
     fprintf (plot_stream, "set m%stics %d;\n", xaxisloc, m);
     fprintf (plot_stream, "set grid m%stics;\n", xaxisloc);
   else
     fprintf (plot_stream, "set grid nom%stics;\n", xaxisloc);
   endif
 
-  if (strcmpi (axis_obj.yminorgrid, "on"))
-    have_grid = true;
+  if (strcmp (axis_obj.yminorgrid, "on") && visible_mgls)
+    have_minor_grid = true;
     if (strcmp (axis_obj.yscale, "log"))
       m = 10;
     else
       m = 5;
     endif
     fprintf (plot_stream, "set m%stics %d;\n", yaxisloc, m);
     fprintf (plot_stream, "set grid m%stics;\n", yaxisloc);
   else
     fprintf (plot_stream, "set grid nom%stics;\n", yaxisloc);
   endif
 
-  if (strcmpi (axis_obj.zminorgrid, "on"))
-    have_grid = true;
+  if (strcmp (axis_obj.zminorgrid, "on") && visible_mgls)
+    have_minor_grid = true;
     if (strcmp (axis_obj.zscale, "log"))
       m = 10;
     else
       m = 5;
     endif
     fprintf (plot_stream, "set mztics %d;\n", m);
     fputs (plot_stream, "set grid mztics;\n");
   else
@@ -1291,26 +1296,26 @@ function __gnuplot_draw_axes__ (h, plot_
             endif
 
             zz = zz.';
 
             for i_stl = 1:length (style)
               if (flat_interp_edge)
                 sopt = "";
               else
-                sopt = sprintf("%d", sidx(i_stl));
+                sopt = sprintf ("%d", sidx(i_stl));
               endif
               data_idx += 1;
               is_image_data(data_idx) = false;
               parametric(data_idx) = false;
               if (flat_interp_edge)
                 have_cdata(data_idx) = true;
               else
                 have_cdata(data_idx) = false;
-              end
+              endif
               have_3d_patch(data_idx) = false;
               titlespec{data_idx} = tspec;
               usingclause{data_idx} = sprintf ("record=%dx1 using ($1):($2):($3)%s",
                                                yrec, ccol);
               if isempty (style{i_stl})
                 style{i_stl} = "points";
                 data{data_idx} = {};
               else
@@ -1465,30 +1470,47 @@ function __gnuplot_draw_axes__ (h, plot_
           endif
         endif
         axis_idx = do_border_2d (axis_obj, plot_stream, axis_idx);
       endif
     endif
   endif
 
   grid_idx = axis_idx;
-  if (! have_grid)
+  if (! have_major_grid && ! have_minor_grid)
     fputs (plot_stream, "unset grid;\n");
   else
-    grid_idx += 1;
-    grid_obj.linestyle = axis_obj.gridlinestyle;
-    grid_obj.linewidth = axis_obj.linewidth;
-    [style, sidx] = do_linestyle_command (grid_obj, axis_obj.gridcolor,
-                                          grid_idx, plot_stream);
+    if (have_major_grid)
+      grid_idx += 1;
+      grid_obj.linestyle = axis_obj.gridlinestyle;
+      grid_obj.linewidth = axis_obj.linewidth;
+      grid_obj.alpha = axis_obj.gridalpha;
+      [style, sidx_major] = do_linestyle_command (grid_obj, axis_obj.gridcolor,
+                                                  grid_idx, plot_stream);
+    else
+      sidx_major = 0;
+    endif
+    if (have_minor_grid)
+      grid_idx += 1;
+      grid_obj.linestyle = axis_obj.minorgridlinestyle;
+      grid_obj.linewidth = axis_obj.linewidth;
+      grid_obj.alpha = axis_obj.minorgridalpha;
+      [style, sidx_minor] = do_linestyle_command (grid_obj,
+                                                  axis_obj.minorgridcolor,
+                                                  grid_idx, plot_stream);
+    else
+      sidx_minor = 0;
+    endif
     if (__gnuplot_has_feature__ ("linetype"))
       scmd = "linetype";
     else
       scmd = "linestyle";
     endif
-    fprintf (plot_stream, "set grid %s %d, %s %d;\n", scmd, sidx, scmd, sidx);
+    fprintf (plot_stream, "set grid %s %d, %s %d;\n",
+             scmd, sidx_major, scmd, sidx_minor);
   endif
 
   if (! isempty (hlgnd) && ! isempty (hlgnd.children)
       && any (strcmpi (get (hlgnd.children, "visible"), "on")))
     if (strcmpi (hlgnd.box, "on"))
       box = "box";
     else
       box = "nobox";
@@ -1830,18 +1852,23 @@ function [style, ltidx] = do_linestyle_c
     scommand = "style line";
   endif
   fprintf (plot_stream, "set %s %d default;\n", scommand, idx);
   fprintf (plot_stream, "set %s %d", scommand, idx);
 
   found_style = false;
   if (isnumeric (linecolor))
     color = linecolor;
-    fprintf (plot_stream, " linecolor rgb \"#%02x%02x%02x\"",
-             round (255*color));
+    if (isfield (obj, "alpha"))
+      alphastr = sprintf ("%02x", round (255*obj.alpha));
+    else
+      alphastr = "";
+    endif
+    fprintf (plot_stream, " linecolor rgb \"#%s%02x%02x%02x\"",
+             alphastr, round (255*color));
   else
     color = [0, 0, 0];
   endif
 
   lt = gnuplot_linetype (obj);
   if (! isempty (lt))
     fprintf (plot_stream, " %s", lt);
   endif
@@ -2739,17 +2766,17 @@ function do_text (stream, gpterm, enhanc
   ## fontsize.  The aspect ratio of 1:1.7 was determined by experiment
   ## to work for eps/ps/etc.  For the MacOS aqua terminal a value of 2.5
   ## is needed.  However, the difference is barely noticeable.
   dx_and_dy = [(-dy * sind (angle)), (dy * cosd (angle))] .* [1.7 1];
 
   ## FIXME: Multiline text produced the gnuplot
   ##        "warning: ft_render: skipping glyph"
   if (__calc_dimensions__ (hax) == 3)
-    zstr = sprintf(",%.15e", lpos(3));
+    zstr = sprintf (",%.15e", lpos(3));
   else
     zstr = "";
   endif
   fprintf (stream,
            "set label \"%s\" at %s %.15e,%.15e%s %s rotate by %f offset character %f,%f %s %s front %s;\n",
            undo_string_escapes (label), units, lpos(1),
            lpos(2), zstr, halign, angle, dx_and_dy, fontspec,
            __do_enhanced_option__ (enhanced, obj), colorspec);
