# HG changeset patch
# User Rik <rik@octave.org>
# Date 1547009269 28800
#      Tue Jan 08 20:47:49 2019 -0800
# Branch stable
# Node ID af476ac04cfd628bad82bb6be087b215aa987710
# Parent  c7e5fb5c63c95890fcbc595f1151e1806dec5575
fDiagMatrix.cc: Fix static analyzer detected issues (bug #55347).

* fDiagMatrix.cc (FloatDiagMatrix::row (octave_idx_type)): Delete useless
check on "r > c".
* fDiagMatrix.cc (FloatDiagMatrix::row (char *s)): Get first character
with "s[0]" rather than "*s".
* fDiagMatrix.cc (FloatDiagMatrix::column (octave_idx_type)): Delete useless
check on "r < c".
* fDiagMatrix.cc (FloatDiagMatrix::column (char *s)): Get first character
with "s[0]" rather than "*s".

diff --git a/liboctave/array/fDiagMatrix.cc b/liboctave/array/fDiagMatrix.cc
--- a/liboctave/array/fDiagMatrix.cc
+++ b/liboctave/array/fDiagMatrix.cc
@@ -165,29 +165,29 @@ FloatRowVector
 FloatDiagMatrix::row (octave_idx_type i) const
 {
   octave_idx_type r = rows ();
   octave_idx_type c = cols ();
   if (i < 0 || i >= r)
     (*current_liboctave_error_handler) ("invalid row selection");
 
   FloatRowVector retval (c, 0.0);
-  if (r <= c || (r > c && i < c))
+  if (r <= c || i < c)
     retval.elem (i) = elem (i, i);
 
   return retval;
 }
 
 FloatRowVector
 FloatDiagMatrix::row (char *s) const
 {
   if (! s)
     (*current_liboctave_error_handler) ("invalid row selection");
 
-  char c = *s;
+  char c = s[0];
   if (c == 'f' || c == 'F')
     return row (static_cast<octave_idx_type> (0));
   else if (c == 'l' || c == 'L')
     return row (rows () - 1);
   else
     (*current_liboctave_error_handler) ("invalid row selection");
 }
 
@@ -195,29 +195,29 @@ FloatColumnVector
 FloatDiagMatrix::column (octave_idx_type i) const
 {
   octave_idx_type r = rows ();
   octave_idx_type c = cols ();
   if (i < 0 || i >= c)
     (*current_liboctave_error_handler) ("invalid column selection");
 
   FloatColumnVector retval (r, 0.0);
-  if (r >= c || (r < c && i < r))
+  if (r >= c || i < r)
     retval.elem (i) = elem (i, i);
 
   return retval;
 }
 
 FloatColumnVector
 FloatDiagMatrix::column (char *s) const
 {
   if (! s)
     (*current_liboctave_error_handler) ("invalid column selection");
 
-  char c = *s;
+  char c = s[0];
   if (c == 'f' || c == 'F')
     return column (static_cast<octave_idx_type> (0));
   else if (c == 'l' || c == 'L')
     return column (cols () - 1);
   else
     (*current_liboctave_error_handler) ("invalid column selection");
 }
 
