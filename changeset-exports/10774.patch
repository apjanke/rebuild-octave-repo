# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1278576048 -7200
#      Thu Jul 08 10:00:48 2010 +0200
# Node ID cfb13443434f06e4dfd5a976b1a08adf06efc514
# Parent  cd16c1c3bc7315564d323efa5ba492bd7961bf53
update NEWS

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,12 @@
+2010-07-08  Jaroslav Hajek  <highegg@gmail.com>
+
+	* NEWS: Update.
+
 2010-06-23  Jaroslav Hajek  <highegg@gmail.com>
 
 	* mkoctfile.in: F77_INTEGER_8_FLAG -> OCTAVE_CONF_F77_INTEGER_8_FLAG.
 
 2010-06-23  Jaroslav Hajek  <highegg@gmail.com>
 
 	* configure.ac: Temporarily include F77_INTEGER_8_FLAG in FFLAGS for
 	BLAS checking.
diff --git a/NEWS b/NEWS
--- a/NEWS
+++ b/NEWS
@@ -277,17 +277,38 @@ Summary of important user-visible change
       ...
     endfunction
     
     Upon return, confirm_recursive_rmdir will be restored to the value 
     it had on entry to the function, even if there were subsequent 
     changes to the variable in function rm_rf or any of the functions
     it calls.
 
+ ** pkg now accepts a -forge option for downloading and installing packages 
+    from OctaveForge automatically. For example, 
+    
+      pkg install -forge general
+    
+    will automatically download the latest release of the general package and
+    attempt to install it. No automatic resolving of dependencies is provided.
+    Further,
 
+      pkg list -forge
+    
+    can be used to list all available packages.
+
+  ** The internal data representation of structs has been completely rewritten
+     to make certain optimizations feasible. The field data can now be shared 
+     between structs with equal keys but different dimensions or values, making
+     operations that preserve the fields faster. Economized storage is now used
+     for scalar structs (just like most other scalars), making their usage more
+     memory-efficient. Certain array-like operations on structs (concatenation,
+     uniform cellfun, num2cell) have gained a significant speed-up.
+     Additionally, the octave_scalar_map class now provides a simpler interface
+     to work with scalar structs within a C++ DLD function.
 
 Summary of important user-visible changes for version 3.2:
 ---------------------------------------------------------
 
  ** Compatibility with Matlab graphics has been improved.
 
     The hggroup object and associated listener callback functions have
     been added allowing the inclusion of group objects.  Data sources
