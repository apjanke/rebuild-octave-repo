# HG changeset patch
# User jwe
# Date 758871629 0
#      Tue Jan 18 05:40:29 1994 +0000
# Node ID 676b70238e682f4d2903034a5f28bc698f6955d2
# Parent  707bd95636cf94f48fafac96025eb26c56e1214d
[project @ 1994-01-18 05:38:48 by jwe]

diff --git a/liboctave/DAE.h b/liboctave/DAE.h
--- a/liboctave/DAE.h
+++ b/liboctave/DAE.h
@@ -35,26 +35,26 @@ Software Foundation, 675 Mass Ave, Cambr
 class DAE : public ODE, public DAEFunc
 {
 public:
 
   DAE (void);
 
   DAE (int);
 
-  DAE (Vector& x, double time, DAEFunc& f);
+  DAE (const Vector& x, double time, DAEFunc& f);
 
-  DAE (Vector& x, Vector& xdot, double time, DAEFunc& f);
+  DAE (const Vector& x, const Vector& xdot, double time, DAEFunc& f);
 
  ~DAE (void);
 
   Vector deriv (void);
 
-  virtual void initialize (Vector& x, double t);
-  virtual void initialize (Vector& x, Vector& xdot, double t);
+  virtual void initialize (const Vector& x, double t);
+  virtual void initialize (const Vector& x, Vector& xdot, double t);
 
   Vector integrate (double t);
 
   Matrix integrate (const Vector& tout, Matrix& xdot_out);
   Matrix integrate (const Vector& tout, Matrix& xdot_out,
 		    const Vector& tcrit); 
 
 protected:
diff --git a/liboctave/DASSL.cc b/liboctave/DASSL.cc
--- a/liboctave/DASSL.cc
+++ b/liboctave/DASSL.cc
@@ -90,17 +90,17 @@ DAE::DAE (int size)
   info  = new int [15];
   iwork = new int [liw];
   rwork = new double [lrw];
 
   for (int i = 0; i < 15; i++)
     info [i] = 0;
 }
 
-DAE::DAE (Vector& state, double time, DAEFunc& f)
+DAE::DAE (const Vector& state, double time, DAEFunc& f)
 {
   n = state.capacity ();
   t = time;
   x = state;
   xdot.resize (n, 0.0);
 
   stop_time_set = 0;
   stop_time = 0.0;
@@ -117,17 +117,17 @@ DAE::DAE (Vector& state, double time, DA
   info  = new int [15];
   iwork = new int [liw];
   rwork = new double [lrw];
 
   for (int i = 0; i < 15; i++)
     info [i] = 0;
 }
 
-DAE::DAE (Vector& state, Vector& deriv, double time, DAEFunc& f)
+DAE::DAE (const Vector& state, const Vector& deriv, double time, DAEFunc& f)
 {
   if (deriv.capacity () != state.capacity ())
     {
       (*current_liboctave_error_handler)
 	("x, xdot size mismatch in DAE constructor");
       n = 0;
       t = 0.0;
       return;
@@ -164,28 +164,28 @@ DAE::~DAE (void)
 
 Vector
 DAE::deriv (void)
 {
   return xdot;
 }
 
 void
-DAE::initialize (Vector& state, double time)
+DAE::initialize (const Vector& state, double time)
 {
   integration_error = 0;
   restart = 1;
   x = state;
   int nx = x.capacity ();
   xdot.resize (nx, 0.0);
   t = time;
 }
 
 void
-DAE::initialize (Vector& state, Vector& deriv, double time)
+DAE::initialize (const Vector& state, const Vector& deriv, double time)
 {
   integration_error = 0;
   restart = 1;
   xdot = deriv;
   x = state;
   t = time;
 }
 
