# HG changeset patch
# User jwe
# Date 784006056 0
#      Sat Nov 05 03:27:36 1994 +0000
# Node ID e8a677c3f042be389d6238172b655776498c71a1
# Parent  ba6acc6309ec51b5fdcd0547471b8fc676b565c9
[project @ 1994-11-05 03:23:14 by jwe]

diff --git a/src/pt-const.h b/src/pt-const.h
--- a/src/pt-const.h
+++ b/src/pt-const.h
@@ -19,20 +19,16 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, write to the Free
 Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
 
 */
 
 #if !defined (octave_tree_const_h)
 #define octave_tree_const_h 1
 
-#if defined (__GNUG__)
-#pragma interface
-#endif
-
 #include <iostream.h>
 
 #include <stdlib.h>
 
 #include "mx-base.h"
 #include "Range.h"
 
 #include "tree-base.h"
diff --git a/src/pt-exp-base.cc b/src/pt-exp-base.cc
--- a/src/pt-exp-base.cc
+++ b/src/pt-exp-base.cc
@@ -20,20 +20,16 @@ along with Octave; see the file COPYING.
 Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include "config.h"
 #endif
 
-#if defined (__GNUG__)
-#pragma implementation
-#endif
-
 #include <sys/types.h>
 #ifdef HAVE_UNISTD_H
 #include <unistd.h>
 #endif
 
 #include <iostream.h>
 #include <strstream.h>
 #include <string.h>
diff --git a/src/pt-exp-base.h b/src/pt-exp-base.h
--- a/src/pt-exp-base.h
+++ b/src/pt-exp-base.h
@@ -19,20 +19,16 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, write to the Free
 Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
 
 */
 
 #if !defined (octave_tree_expr_h)
 #define octave_tree_expr_h 1
 
-#if defined (__GNUG__)
-#pragma interface
-#endif
-
 #include <time.h>
 #include <stdio.h>
 #include <iostream.h>
 
 #include "SLList.h"
 
 #include "variables.h"
 #include "mappers.h"
@@ -112,17 +108,17 @@ public:
    };
 
   tree_expression (int l = -1, int c = -1) : tree (l, c)
     {
       in_parens = 0;
       etype = unknown;
     }
 
-  ~tree_expression (void) { }
+  virtual ~tree_expression (void) { }
 
   virtual int is_multi_val_ret_expression (void) const
     { return 0; }
 
   virtual int is_identifier (void) const
     { return 0; }
 
   virtual int is_indirect_ref (void) const
@@ -263,18 +259,16 @@ public:
     }
 
   tree_identifier (symbol_record *s, int l = -1, int c = -1) : tree_fvc (l, c)
     {
       sym = s;
       maybe_do_ans_assign = 0;
     }
 
-  ~tree_identifier (void) { }
-
   int is_identifier (void) const
     { return 1; }
 
   char *name (void) const;
 
   tree_identifier *define (tree_constant *t);
   tree_identifier *define (tree_function *t);
 
@@ -772,18 +766,16 @@ public:
   tree_builtin (const char *nm = 0);
 
   tree_builtin (int i_max, int o_max, Mapper_fcn& m_fcn,
 		const char *nm = 0);
 
   tree_builtin (int i_max, int o_max, Octave_builtin_fcn f,
 		const char *nm = 0);
 
-  ~tree_builtin (void) { }
-
 //  int is_builtin (void) const;
 
   int is_mapper_function (void) const
     { return is_mapper; }
 
   tree_constant eval (int print);
 
   Octave_object eval (int print, int nargout, const Octave_object& args);
@@ -838,18 +830,16 @@ public:
 		 int l = -1, int c = -1)
      : tree_fvc (l, c)
        {
 	 init ();
 	 sym_tab = st;
 	 cmd_list = cl;
        }
 
-  ~tree_function (void) { }
-
 //  tree_function *define (tree_statement_list *t);
   tree_function *define_param_list (tree_parameter_list *t);
   tree_function *define_ret_list (tree_parameter_list *t);
 
   void stash_fcn_file_name (char * s);
 
   void stash_fcn_file_time (time_t t)
     { t_parsed = t; }
diff --git a/src/pt-plot.cc b/src/pt-plot.cc
--- a/src/pt-plot.cc
+++ b/src/pt-plot.cc
@@ -20,20 +20,16 @@ along with Octave; see the file COPYING.
 Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include "config.h"
 #endif
 
-#if defined (__GNUG__)
-#pragma implementation
-#endif
-
 #include <sys/types.h>
 #ifdef HAVE_UNISTD_H
 #include <unistd.h>
 #endif
 #include <string.h>
 #include <iostream.h>
 #include <strstream.h>
 #include <fstream.h>
@@ -720,16 +716,54 @@ subplot_style::print_code (ostream& os)
 
   if (pointtype)
     {
       os << " ";
       pointtype->print_code (os);
     }
 }
 
+subplot::subplot (void)
+{
+  plot_data = 0;
+  using = 0;
+  title = 0;
+  style = 0;
+}
+
+subplot::subplot (tree_expression *data)
+{
+  plot_data = data;
+  using = 0;
+  title = 0;
+  style = 0;
+}
+
+subplot::subplot (subplot_using *u, tree_expression *t, subplot_style *s)
+{
+  plot_data = 0;
+  using = u;
+  title = t;
+  style = s;
+}
+
+subplot::~subplot (void)
+{
+  delete plot_data;
+  delete using;
+  delete title;
+  delete style;
+}
+
+void
+subplot::set_data (tree_expression *data)
+{
+  plot_data = data;
+}
+
 tree_constant
 subplot::extract_plot_data (int ndim, tree_constant& data)
 {
   tree_constant retval;
 
   if (using)
     {
       ColumnVector val = using->values (ndim);
@@ -895,17 +929,16 @@ subplot::print_code (ostream& os)
 
   if (title)
     title->print_code (os);
 
   if (style)
     style->print_code (os);
 }
 
-int
 subplot_list::print (int ndim, ostrstream& plot_buf)
 {
   int status = 0;
 
   for (Pix p = first (); p != 0; next (p))
     {
       subplot *elt = this->operator () (p);
 
diff --git a/src/pt-plot.h b/src/pt-plot.h
--- a/src/pt-plot.h
+++ b/src/pt-plot.h
@@ -19,20 +19,16 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, write to the Free
 Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
 
 */
 
 #if !defined (octave_tree_plot_h)
 #define octave_tree_plot_h 1
 
-#if defined (__GNUG__)
-#pragma interface
-#endif
-
 #include <iostream.h>
 
 class tree_command;
 class tree_plot_command;
 class plot_limits;
 class plot_range;
 class subplot_using;
 class subplot_style;
@@ -158,72 +154,45 @@ private:
   tree_expression *linetype;
   tree_expression *pointtype;
 };
 
 class
 subplot : public tree_print_code
 {
 public:
-  subplot (void)
-    {
-      plot_data = 0;
-      using = 0;
-      title = 0;
-      style = 0;
-    }
-
-  subplot (tree_expression *data)
-    {
-      plot_data = data;
-      using = 0;
-      title = 0;
-      style = 0;
-    }
+  subplot (void);
+  subplot (tree_expression *data);
+  subplot (subplot_using *u, tree_expression *t, subplot_style *s);
 
-  subplot (subplot_using *u, tree_expression *t,
-		subplot_style *s)
-    {
-      plot_data = 0;
-      using = u;
-      title = t;
-      style = s;
-    }
+  ~subplot (void);
 
-  ~subplot (void)
-    {
-      delete plot_data;
-      delete using;
-      delete title;
-      delete style;
-    }
-
-  void set_data (tree_expression *data)
-    { plot_data = data; }
-
-  int print (int ndim, ostrstream& plot_buf);
+  void set_data (tree_expression *data);
 
   tree_constant extract_plot_data (int ndim, tree_constant& data);
 
   int handle_plot_data (int ndim, ostrstream& plot_buf);
 
+  int print (int ndim, ostrstream& plot_buf);
+
   void print_code (ostream& os);
 
 private:
   tree_expression *plot_data;
   subplot_using *using;
   tree_expression *title;
   subplot_style *style;
 };
 
 class
 subplot_list : public SLList<subplot *>, public tree_print_code
 {
  public:
   subplot_list (void) : SLList<subplot *> () { }
+
   subplot_list (subplot *t) : SLList<subplot *> ()
     { append (t); }
 
   ~subplot_list (void)
     {
       while (! empty ())
 	{
 	  subplot *t = remove_front ();
