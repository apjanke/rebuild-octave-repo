# HG changeset patch
# User jwe
# Date 1142363621 0
#      Tue Mar 14 19:13:41 2006 +0000
# Node ID d42bd103de79f30fc2828bf34be80a363449fdad
# Parent  f043021a9df7495fcda273d0c0ae26569ffb44b6
[project @ 2006-03-14 19:13:40 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,16 @@
+2006-03-14  Bill Denney  <bill@givebillmoney.com>
+
+         * load-save.cc (Fload, Fsave): Update docstring for functional form.
+
+2006-03-14  John W. Eaton  <jwe@octave.org>
+
+	* xpow.cc (elem_xpow): Undo previous change.
+
 2006-03-14  Paul Kienzle  <pkienzle@users.sf.net>
 
 	* xpow.cc: New tests.
 
 2006-03-13  John W. Eaton  <jwe@octave.org>
 
 	* variables.cc (fcn_out_of_date): No longer static.
 	* ov-fcn-handle.cc (warn_reload): New function.
diff --git a/src/load-save.cc b/src/load-save.cc
--- a/src/load-save.cc
+++ b/src/load-save.cc
@@ -595,16 +595,26 @@ Load the named variables from the file @
 you may specify a list of variables and @code{load} will only extract\n\
 those variables with names that match.  For example, to restore the\n\
 variables saved in the file @file{data}, use the command\n\
 \n\
 @example\n\
 load data\n\
 @end example\n\
 \n\
+If load is invoked using the functional form\n\
+\n\
+@example\n\
+load (\"-text\", \"file.txt\", \"a\")\n\
+@end example\n\
+\n\
+@noindent\n\
+then the @var{options}, @var{file}, and variable name arguments\n\
+(@var{v1}, @dots{}) must be specified as character strings.\n\
+\n\
 If a variable that is not marked as global is loaded from a file when a\n\
 global symbol with the same name already exists, it is loaded in the\n\
 global symbol table.  Also, if a variable is marked as global in a file\n\
 and a local symbol exists, the local symbol is moved to the global\n\
 symbol table and given the value from the file.  Since it seems that\n\
 both of these cases are likely to be the result of some sort of error,\n\
 they will generate warnings.\n\
 \n\
@@ -1442,25 +1452,35 @@ dump_octave_core (void)
 #else /* ! HAVE_ZLIB */
 #define HAVE_ZLIB_HELP_STRING "\n\
 This option is not available, as this Octave executable was not linked with\n\
 the zlib library."
 #endif /* ! HAVE ZLIB */
 
 DEFCMD (save, args, ,
   "-*- texinfo -*-\n\
-@deffn {Command} save options file v1 v2 @dots{}\n\
+@deffn {Command} save options file @var{v1} @var{v2} @dots{}\n\
 Save the named variables @var{v1}, @var{v2}, @dots{} in the file\n\
 @var{file}.  The special filename @samp{-} can be used to write the\n\
 output to your terminal.  If no variable names are listed, Octave saves\n\
 all the variables in the current scope.  Valid options for the\n\
 @code{save} command are listed in the following table.  Options that\n\
 modify the output format override the format specified by the built-in\n\
 variable @code{default_save_options}.\n\
 \n\
+If save is invoked using the functional form\n\
+\n\
+@example\n\
+save (\"-text\", \"file.txt\", \"a\")\n\
+@end example\n\
+\n\
+@noindent\n\
+then the @var{options}, @var{file}, and variable name arguments\n\
+(@var{vname1}, @dots{}) must be specified as character strings.\n\
+\n\
 @table @code\n\
 @item -ascii\n\
 Save the data in Octave's text data format.\n\
 \n\
 @strong{WARNING: the meaning of this option will change in a future\n\
 version of Octave to be compatible with @sc{Matlab}.  To keep the\n\
 meaning of your code the same across this change, use the @code{-text}\n\
 option instead.}\n\
diff --git a/src/xpow.cc b/src/xpow.cc
--- a/src/xpow.cc
+++ b/src/xpow.cc
@@ -564,25 +564,21 @@ elem_xpow (const Matrix& a, double b)
 
   if (static_cast<int> (b) != b && a.any_element_is_negative ())
     {
       ComplexMatrix result (nr, nc);
 
       for (octave_idx_type j = 0; j < nc; j++)
 	for (octave_idx_type i = 0; i < nr; i++)
 	  {
-	    OCTAVE_QUIT;
-	    double ax = a (i, j);
-	    if (ax < 0.0)
-	      {
-		Complex atmp (ax);
-		result (i, j) = std::pow (atmp, b);
-	      }
-	    else
-	      result (i, j) = std::pow (ax, b);
+	    OCTAVE_QUIT; 
+      
+	    Complex atmp (a (i, j));
+
+	    result (i, j) = std::pow (atmp, b);
 	  }
 
       retval = result;
     }
   else
     {
       Matrix result (nr, nc);
 
@@ -636,26 +632,19 @@ done:
   if (convert_to_complex)
     {
       ComplexMatrix complex_result (nr, nc);
 
       for (octave_idx_type j = 0; j < nc; j++)
 	for (octave_idx_type i = 0; i < nr; i++)
 	  {
 	    OCTAVE_QUIT;
-	    double ax = a (i, j);
-	    double bx = b (i, j);
-	    if (ax < 0.0 && static_cast<int> (bx) != bx)
-	      {
-		Complex atmp (ax);
-		Complex btmp (bx);
-		complex_result (i, j) = std::pow (atmp, btmp);
-	      }
-	    else
-	      complex_result (i, j) = std::pow (ax, bx);
+	    Complex atmp (a (i, j));
+	    Complex btmp (b (i, j));
+	    complex_result (i, j) = std::pow (atmp, btmp);
 	  }
 
       retval = complex_result;
     }
   else
     {
       Matrix result (nr, nc);
 
@@ -959,24 +948,20 @@ elem_xpow (const NDArray& a, double b)
 
   if (static_cast<int> (b) != b && a.any_element_is_negative ())
     {
       ComplexNDArray result (a.dims ());
 
       for (octave_idx_type i = 0; i < a.length (); i++)
 	{
 	  OCTAVE_QUIT;
-	  double ax = a (i);
-	  if (ax < 0.0)
-	    {
-	      Complex atmp (ax);
-	      result(i) = std::pow (atmp, b);
-	    }
-	  else
-	    result(i) = std::pow (ax, b);
+
+	  Complex atmp (a (i));
+
+	  result(i) = std::pow (atmp, b);
 	}
 
       retval = result;
     }
   else
     {
       NDArray result (a.dims ());
 
@@ -1027,26 +1012,19 @@ done:
 
   if (convert_to_complex)
     {
       ComplexNDArray complex_result (a_dims);
 
       for (octave_idx_type i = 0; i < len; i++)
 	{
 	  OCTAVE_QUIT;
-	  double ax = a(i);
-	  double bx = b(i);
-	  if (ax < 0.0 && static_cast<int> (bx) != bx)
-	    {
-	      Complex atmp (ax);
-	      Complex btmp (bx);
-	      complex_result(i) = std::pow (atmp, btmp);
-	    }
-	  else
-	    complex_result(i) = std::pow (ax, bx);
+	  Complex atmp (a(i));
+	  Complex btmp (b(i));
+	  complex_result(i) = std::pow (atmp, btmp);
 	}
 
       retval = complex_result;
     }
   else
     {
       NDArray result (a_dims);
 
