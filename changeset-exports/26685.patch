# HG changeset patch
# User Rik <rik@octave.org>
# Date 1549494157 28800
#      Wed Feb 06 15:02:37 2019 -0800
# Node ID 466e9b261689d67af8b31259491bd0ff890a121d
# Parent  0780d3f4ecad5db5f914a165a3db35ec8b3813e9
Don't cycle line() colors unless input is more than one line.

* __line__.m: Use unwind_protect block to save/restore axes properties of
"ColorOrderIndex" and "LinestyleOrderIndex".

diff --git a/scripts/plot/draw/private/__line__.m b/scripts/plot/draw/private/__line__.m
--- a/scripts/plot/draw/private/__line__.m
+++ b/scripts/plot/draw/private/__line__.m
@@ -126,34 +126,46 @@ function h = __line__ (hp, varargin)
 
     nlines = nc;
 
     data = cell (1, 3);
     data(1:num_data_args) = varargin(1:num_data_args);
     data_args = {"xdata", data{1}, "ydata", data{2}, "zdata", data{3}};
     mask = [false, ismat(1), false, ismat(2), false, ismat(3)];
 
-    handles = zeros (nlines, 1);
-    for i = 1:nlines
-      data_args(mask) = cellindexmat (data(ismat), ":", i);
+    [colororder_idx, styleorder_idx] = get (hp, {"ColorOrderIndex",
+                                                 "LinestyleOrderIndex"}){:};
+
+    unwind_protect
+      handles = zeros (nlines, 1);
+      for i = 1:nlines
+        data_args(mask) = cellindexmat (data(ismat), ":", i);
 
-      ## FIXME: Technically, it may not be the right thing to do to rotate
-      ##        the style if the options in other_args specify a color
-      ##        or linestyle.  The plot will be made correctly, but the next
-      ##        call to line may not use the correct value.
-      [linestyle, marker] = __next_line_style__ ();
-      if (nr == 1)
-        ## Marker for a single point is always '.' (bug #38825).
-        marker = '.';
-      endif
-      color = __next_line_color__ ();
+        ## FIXME: It would be potentially more efficient to write code to
+        ##        cycle line styles and colors within __line__.m itself.
+        ##        However, these are not easy routines to get exactly right,
+        ##        and then there would be duplicate code.  For the time being,
+        ##        use an unwind_protect block to restore any values we may
+        ##        have modified.  Testing shows only 4 millisecond extra delay
+        ##        when plotting 53 lines.
+        [linestyle, marker] = __next_line_style__ ();
+        if (nr == 1)
+          ## Marker for a single point is always '.' (bug #38825).
+          marker = '.';
+        endif
+        color = __next_line_color__ ();
 
-      handles(i) = __go_line__ (hp, data_args{:},
-                                "color", color, "linestyle", linestyle,
-                                "marker", marker, other_args{:});
-    endfor
+        handles(i) = __go_line__ (hp, data_args{:},
+                                  "color", color, "linestyle", linestyle,
+                                  "marker", marker, other_args{:});
+      endfor
+    unwind_protect_cleanup
+      set (hp, {"ColorOrderIndex", "LinestyleOrderIndex"},
+               {colororder_idx, styleorder_idx});
+    end_unwind_protect
+
   endif
 
   if (nargout > 0)
     h = handles;
   endif
 
 endfunction
