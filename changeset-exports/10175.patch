# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1264059446 18000
#      Thu Jan 21 02:37:26 2010 -0500
# Node ID d354be89b2c37de8e8ddc6b00d79e83ae9a200a3
# Parent  eb64bf1c61073a1932f5eacd3efb736b58cb50e9
use link module from gnulib

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,12 @@
+2010-01-21  John W. Eaton  <jwe@octave.org>
+
+	* bootstrap.conf (gnulib_modules): Include link in the list.
+
 2010-01-21  John W. Eaton  <jwe@octave.org>
 
 	* bootstrap.conf (gnulib_modules): Include unlink in the list.
 
 2010-01-21  John W. Eaton  <jwe@octave.org>
 
 	* bootstrap.conf (gnulib_modules): Include strptime in the list.
 
diff --git a/bootstrap.conf b/bootstrap.conf
--- a/bootstrap.conf
+++ b/bootstrap.conf
@@ -19,16 +19,17 @@
 # gnulib modules used by this package.
 gnulib_modules="
   c-strcase
   crypto/md5
   fnmatch
   getopt-gnu
   gettimeofday
   glob
+  link
   lstat
   mkdir
   mkfifo
   rename
   rmdir
   stat
   strftime
   strptime
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,14 @@
+2010-01-21  John W. Eaton  <jwe@octave.org>
+
+	* lo-cutils.c (octave_link): New funtion.
+	* lo-utils.h: Provide decl.
+	* file-ops.cc (file_ops::link): Call octave_link.
+
 2010-01-21  John W. Eaton  <jwe@octave.org>
 
 	* lo-cutils.c (octave_unlink): New funtion.
 	* lo-utils.h: Provide decl.
 	* file-ops.cc (file_ops::unlink): Call octave_unlink.
 
 2010-01-21  John W. Eaton  <jwe@octave.org>
 
diff --git a/liboctave/file-ops.cc b/liboctave/file-ops.cc
--- a/liboctave/file-ops.cc
+++ b/liboctave/file-ops.cc
@@ -162,27 +162,23 @@ file_ops::link (const std::string& old_n
 int
 file_ops::link (const std::string& old_name,
 		const std::string& new_name, std::string& msg)
 {
   msg = std::string ();
 
   int status = -1;
 
-#if defined (HAVE_LINK)
-  status = ::link (old_name.c_str (), new_name.c_str ());
+  status = octave_link (old_name.c_str (), new_name.c_str ());
 
   if (status < 0)
     {
       using namespace std;
       msg = ::strerror (errno);
     }
-#else
-  msg = NOT_SUPPORTED ("link");
-#endif
 
   return status;
 }
 
 // I don't know how to emulate this on systems that don't provide it.
 
 int
 file_ops::symlink (const std::string& old_name, const std::string& new_name)
diff --git a/liboctave/lo-cutils.c b/liboctave/lo-cutils.c
--- a/liboctave/lo-cutils.c
+++ b/liboctave/lo-cutils.c
@@ -48,16 +48,22 @@ Software Foundation, Inc.
 
 #include <stdlib.h>
 #include <string.h>
 #include <time.h>
 
 #include "syswait.h"
 
 OCTAVE_API int
+octave_link (const char *old_name, const char *new_name)
+{
+  return link (old_name, new_name);
+}
+
+OCTAVE_API int
 octave_mkdir (const char *name, mode_t mode)
 {
   return mkdir (name, mode);
 }
 
 OCTAVE_API int
 octave_mkfifo (const char *name, mode_t mode)
 {
diff --git a/liboctave/lo-utils.h b/liboctave/lo-utils.h
--- a/liboctave/lo-utils.h
+++ b/liboctave/lo-utils.h
@@ -46,16 +46,19 @@ extern OCTAVE_API void octave_putenv (co
 extern OCTAVE_API std::string octave_fgets (std::FILE *);
 extern OCTAVE_API std::string octave_fgetl (std::FILE *);
 
 extern OCTAVE_API std::string octave_fgets (std::FILE *, bool& eof);
 extern OCTAVE_API std::string octave_fgetl (std::FILE *, bool& eof);
 
 extern "C" OCTAVE_API int octave_gethostname (char *, int);
 
+extern "C" OCTAVE_API int
+octave_link (const char *old_name, const char *new_name);
+
 extern "C" OCTAVE_API int octave_mkdir (const char *name, mode_t mode);
 
 extern "C" OCTAVE_API int octave_mkfifo (const char *name, mode_t mode);
 
 extern "C" OCTAVE_API void octave_qsort (void *base, size_t n, size_t size,
 			      int (*cmp) (const void *, const void *));
 
 extern "C" OCTAVE_API int octave_rmdir (const char *name);
