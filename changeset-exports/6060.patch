# HG changeset patch
# User jwe
# Date 1161140214 0
#      Wed Oct 18 02:56:54 2006 +0000
# Node ID ced23ae2b5ccc08956e0ad60331722ea1970de83
# Parent  8fd77759707c6c7446fb2df2b128d4196c94b4aa
[project @ 2006-10-18 02:56:22 by jwe]

diff --git a/liboctave/CMatrix.cc b/liboctave/CMatrix.cc
--- a/liboctave/CMatrix.cc
+++ b/liboctave/CMatrix.cc
@@ -2165,17 +2165,17 @@ ComplexMatrix::solve (const ComplexMatri
   return solve (b, info, rcond, 0);
 }
 
 ComplexMatrix
 ComplexMatrix::solve (const ComplexMatrix& b, octave_idx_type& info, double& rcond,
 		      solve_singularity_handler sing_handler) const
 {
   MatrixType mattype (*this);
-  return solve (b, info, rcond, sing_handler);
+  return solve (mattype, b, info, rcond, sing_handler);
 }
 
 ComplexColumnVector
 ComplexMatrix::solve (const ColumnVector& b) const
 {
   octave_idx_type info;
   double rcond;
   return solve (ComplexColumnVector (b), info, rcond, 0);
diff --git a/liboctave/CSparse.cc b/liboctave/CSparse.cc
--- a/liboctave/CSparse.cc
+++ b/liboctave/CSparse.cc
@@ -500,17 +500,17 @@ SparseComplexMatrix::min (Array2<octave_
 }
 
 // destructive insert/delete/reorder operations
 
 SparseComplexMatrix&
 SparseComplexMatrix::insert (const SparseMatrix& a, octave_idx_type r, octave_idx_type c)
 {
   SparseComplexMatrix tmp (a);
-  return insert (a, r, c);
+  return insert (tmp /*a*/, r, c);
 }
 
 SparseComplexMatrix&
 SparseComplexMatrix::insert (const SparseComplexMatrix& a, octave_idx_type r, octave_idx_type c)
 {
   MSparse<Complex>::insert (a, r, c);
   return *this;
 }
diff --git a/liboctave/oct-syscalls.cc b/liboctave/oct-syscalls.cc
--- a/liboctave/oct-syscalls.cc
+++ b/liboctave/oct-syscalls.cc
@@ -304,20 +304,21 @@ octave_syscalls::waitpid (pid_t pid, int
   std::string msg;
   return waitpid (pid, status, options, msg);
 }
 
 pid_t
 octave_syscalls::waitpid (pid_t pid, int *status, int options,
 			  std::string& msg)
 {
+  pid_t retval = -1;
   msg = std::string ();
 
 #if defined (HAVE_WAITPID)
-  pid_t retval = ::octave_waitpid (pid, status, options);
+  retval = ::octave_waitpid (pid, status, options);
 
   if (retval < 0)
     {
       using namespace std;
       msg = ::strerror (errno);
     }
 #else
   msg = NOT_SUPPORTED ("waitpid");
