# HG changeset patch
# User Rik <rdrider0-list@yahoo.com>
# Date 1256005069 25200
#      Mon Oct 19 19:17:49 2009 -0700
# Node ID 9f8ff01abc657d0f12603b2e4cca0fe6c491d6c9
# Parent  36840b4ebda6a80ed3b19ca50a30788d068be1f7
.cc files are now included in the list of files requiring
tests only if they define a user function (DEFUN or DEFUN_DLD)

diff --git a/test/ChangeLog b/test/ChangeLog
--- a/test/ChangeLog
+++ b/test/ChangeLog
@@ -1,9 +1,14 @@
-2009-10-08  Rik  <octdev@nomad.inbox5.com>
+2009-10-19  Rik  <octdev@nomad.inbox5.com>
+
+	* fntests.m: .cc files are now included in the list of files requiring
+	tests only if they define a user function (DEFUN or DEFUN_DLD)
+
+2009-10-19  Rik  <octdev@nomad.inbox5.com>
 
 	* fntests.m: Remove deprecated functions from list of functions requiring
 	new tests to be written
 
 2009-10-08  Rik  <octdev@nomad.inbox5.com>
 
 	* fntests.m: Fix typo of an extra space in instructions to user
 
diff --git a/test/fntests.m b/test/fntests.m
--- a/test/fntests.m
+++ b/test/fntests.m
@@ -63,16 +63,27 @@ function print_pass_fail (n, p)
     nfail = n - p;
     if (nfail > 0)
       printf (" FAIL %d", nfail);
     endif
   endif
   puts ("\n");
 endfunction
 
+function y = hasfunctions (f)
+  fid = fopen (f);
+  if (fid < 0)
+    error ("fopen failed: %s", f);
+  else
+    str = fread (fid, "*char")';
+    fclose (fid);
+    y = regexp (str,'^(DEFUN|DEFUN_DLD)\b', "lineanchors");
+  endif
+endfunction
+
 ## FIXME -- should we only try match the keyword at the start of a line?
 function y = hastests (f)
   fid = fopen (f);
   if (fid < 0)
     error ("fopen failed: %s", f);
   else
     str = fread (fid, "*char")';
     fclose (fid);
@@ -123,19 +134,19 @@ function [dp, dn, dxf, dsk] = run_test_s
       dp += p;
       dn += n;
       dxf += xf;
       dsk += sk;
     endif
   endfor
   for i = 1:length (lst)
     nm = lst(i).name;
-    if ((length (nm) > 3 && strcmp (nm((end-2):end), ".cc"))
-	|| (length (nm) > 2 && strcmp (nm((end-1):end), ".m")))
-      f = fullfile (d, nm);
+    f = fullfile (d, nm);
+    if ((length (nm) > 2 && strcmp (nm((end-1):end), ".m")) || 
+        (length (nm) > 3 && strcmp (nm((end-2):end), ".cc") && hasfunctions(f)))
       p = n = xf = 0;
       ## Only run if it contains %!test, %!assert %!error or %!warning
       if (hastests (f))
 	tmp = strrep (f, [topsrcdir, "/"], "");
 	tmp = strrep (tmp, [topbuilddir, "/"], "../");
 	print_test_file_name (tmp);
 	[p, n, xf, sk] = test (f, "quiet", fid);
 	print_pass_fail (n, p);
