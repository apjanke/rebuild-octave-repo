# HG changeset patch
# User Rik <rik@octave.org>
# Date 1347647157 25200
#      Fri Sep 14 11:25:57 2012 -0700
# Node ID ad2c3902b826b62818e55046fcbac605e7c8d57c
# Parent  f918db8102d540000cbdac2492029ed94ad88150
configure.ac: Implement some portable sh programming recommendations from Autoconf.

* configure.ac: Don't double quote arguments to 'test' unnecessarily.
Don't double quote argument to case statement.
Don't use double quotes with backticks.
Don't unnecessarily quote "yes" and "no".
Don't use test XXX -a YYY for AND functionality.
Do use "test STR1 != STR2" rather than less clear
  "if test STR1 = STR2; then true; else ACTION; fi"

diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -53,27 +53,26 @@ AM_INIT_AUTOMAKE([1.11 tar-ustar])
 OCTAVE_HOST_TYPE
 
 AC_DEFINE(OCTAVE_SOURCE, 1, [Define to 1 if this is Octave.])
   
 AC_USE_SYSTEM_EXTENSIONS
 
 ### Path separator.
 
-sepchar=:
+sepchar=':'
 AC_ARG_WITH([sepchar],
   [AS_HELP_STRING([--with-sepchar=<char>],
     [use <char> as the path separation character])])
 case $with_sepchar in
   yes | "")
-    case "$canonical_host_type" in
+    case $canonical_host_type in
       *-*-mingw* | *-*-msdosmsvc)
-        sepchar=';'
-        ;;
-      esac
+        sepchar=';' ;;
+    esac
     ;;
   no)
     AC_MSG_ERROR([You are required to define a path separation character])
     ;;
   *)
     sepchar=$with_sepchar
     ;;
 esac
@@ -235,33 +234,33 @@ AC_PROG_CXXCPP
 GXX_VERSION=
 if test "$GXX" = yes; then
   gxx_version=`$CXX -v 2>&1 | grep "^.*g.. version" | \
     sed -e 's/^.*g.. version *//' -e 's/cygnus-//' -e 's/egcs-//' -e 's/ .*//'`
 
   AX_COMPARE_VERSION([$gxx_version], [lt], [3.5],
     [AC_MSG_ERROR([g++ version $gxx_version will probably fail to compile Octave])])
 
-  GXX_VERSION="$gxx_version"
+  GXX_VERSION=$gxx_version
 fi
 AC_SUBST(GXX_VERSION)
 
 ## FIXME: CXX_VERSION is deprecated and should be removed in Octave version 3.12
-CXX_VERSION="$gxx_version"
+CXX_VERSION=$gxx_version
 AC_SUBST(CXX_VERSION)
 
 ### Determine which C compiler to use (we expect to find gcc).
 
 AC_PROG_CC
 AC_PROG_CPP
 AC_PROG_GCC_TRADITIONAL
 
 ## Check for MSVC
 have_msvc=no
-case "$canonical_host_type" in
+case $canonical_host_type in
   *-*-msdosmsvc)
     have_msvc=yes
   ;;
   *-*-mingw*)
     AC_MSG_CHECKING([for MSVC compiler])
     AC_PREPROC_IFELSE([AC_LANG_SOURCE([[
         #ifndef _MSC_VER
         #error "Not MSVC compiler"
@@ -283,42 +282,40 @@ GCC_VERSION=
 if test "$GCC" = yes; then
   gcc_version=`$CC -v 2>&1 | grep "^.*gcc version" | \
     sed -e 's/^.*g.. version *//' -e 's/cygnus-//' -e 's/egcs-//' -e 's/ .*//'`
 
   AX_COMPARE_VERSION([$gcc_version], [lt], [3],
     [warn_gcc_version="gcc version $gcc_version is likely to cause problems"
      OCTAVE_CONFIGURE_WARNING([warn_gcc_version])])
 
-  GCC_VERSION="$gcc_version"
+  GCC_VERSION=$gcc_version
 fi
 AC_SUBST(CC_VERSION)
 
 ## FIXME: CC_VERSION is deprecated and should be removed in Octave version 3.12
-CC_VERSION="$gcc_version"
+CC_VERSION=$gcc_version
 AC_SUBST(GCC_VERSION)
 
 ### Determine the compiler flag necessary to create dependencies
 
 ## Assume GCC.
 INCLUDE_DEPS=true
 DEPEND_FLAGS="-M"
 DEPEND_EXTRA_SED_PATTERN=""
-if test "$GCC" = yes; then
-  true
-else
-  case "$canonical_host_type" in
+if test "$GCC" != yes; then
+  case $canonical_host_type in
     sparc-sun-solaris2* | i386-pc-solaris2*)
       DEPEND_FLAGS="-xM1"
       DEPEND_EXTRA_SED_PATTERN="-e '/\/opt\/SUNWspro/d'"
     ;;
     *-*-msdosmsvc)
     ;;
     *-*-mingw*)
-      if test "$have_msvc" = "no"; then
+      if test $have_msvc = no; then
         INCLUDE_DEPS=false
       fi
     ;;
     *)
       INCLUDE_DEPS=false
     ;;
   esac
 fi
@@ -341,34 +338,34 @@ CXXFLAGS="$CXXFLAGS $PTHREAD_CFLAGS"
 ### but it also degrades performance.
 ### Thus, we provide a FLOAT_TRUNCATE macro that may be defined to "volatile"
 ### when compiling for x87 target, or left empty for modern SSE math, that
 ### doesn't suffer from this problem at all.
 AC_ARG_ENABLE([float-truncate],
   [AS_HELP_STRING([--enable-float-truncate],
     [enables truncating intermediate FP results.])],
   [if test "$enableval" = yes; then
-     ac_float_truncate=volatile;
+     ac_float_truncate=volatile
    else
-     ac_float_truncate=;
+     ac_float_truncate=
    fi],
   [ac_float_truncate=])
 
 AC_DEFINE_UNQUOTED(FLOAT_TRUNCATE, [$ac_float_truncate], 
   [Define to volatile if you need to truncate intermediate FP results.])
 
 ### Determine extra CFLAGS that may be necessary for Octave.
 
 ## On Intel systems with gcc, we may need to compile with -mieee-fp
 ## to get full support for IEEE floating point.
 ##
 ## On Alpha/OSF systems, we need -mieee.
 
 ieee_fp_flag=
-case "$canonical_host_type" in
+case $canonical_host_type in
   i[[3456789]]86-*-*)
     if test "$GCC" = yes; then
       OCTAVE_CC_FLAG([-mieee-fp], [
         ieee_fp_flag=-mieee-fp
         XTRA_CFLAGS="$XTRA_CFLAGS -mieee-fp"
         AC_MSG_NOTICE([adding -mieee-fp to XTRA_CFLAGS])])
     fi
     if test "$GXX" = yes; then
@@ -418,17 +415,17 @@ AC_SUBST(XTRA_CXXFLAGS)
 ### it by default.  Enable it with the flag --enable-openmp.
 
 USE_OPENMP=false
 AC_ARG_ENABLE([openmp],
   [AS_HELP_STRING([--enable-openmp],
     [(EXPERIMENTAL) use OpenMP SMP multi-threading])],
   [if test "$enableval" = yes; then USE_OPENMP=true; fi], [])
 if $USE_OPENMP; then
-  case "$canonical_host_type" in
+  case $canonical_host_type in
     *-*-mingw* | *-*-cygwin* | *-*-gnu*)
       OCTAVE_CHECK_OPENMP(-fopenmp)
     ;;
     *-*-msdosmsvc)
       ## FIXME: is this the right flag for MSVC?
       OCTAVE_CHECK_OPENMP(-openmp)
     ;;
     ## Add other compilers supporting OpenMP here
@@ -448,28 +445,28 @@ if test "$cross_compiling" = yes; then
   BUILD_LDFLAGS=""
   BUILD_EXEEXT=""
 else
   BUILD_CC='$(CC)'
   BUILD_CFLAGS='$(CFLAGS)'
   BUILD_CXX='$(CXX)'
   BUILD_CXXFLAGS='$(CXXFLAGS)'
   BUILD_LDFLAGS='$(LDFLAGS)'
-  ## 2012/07/31: Commented out special build requirements
-  ## for Sun compiler now that gendoc.cc is no longer part of build.
-  ##################################################################
-  #case "$canonical_host_type" in
-  #  sparc-sun-solaris2*)
-  #    if test "$GCC" != yes; then
-  #      ## The Sun C++ compiler never seems to complete compiling
-  #      ## gendoc.cc unless we reduce the optimization level...
-  #      ## BUILD_CXXFLAGS="-g -O1"
-  #    fi
-  #  ;;
-  #esac
+  dnl ## 2012/07/31: Commented out special build requirements
+  dnl ## for Sun compiler now that gendoc.cc is no longer part of build.
+  dnl ##################################################################
+  dnl #case $canonical_host_type in
+  dnl #  sparc-sun-solaris2*)
+  dnl #    if test "$GCC" != yes; then
+  dnl #      ## The Sun C++ compiler never seems to complete compiling
+  dnl #      ## gendoc.cc unless we reduce the optimization level...
+  dnl #      ## BUILD_CXXFLAGS="-g -O1"
+  dnl #    fi
+  dnl #  ;;
+  dnl #esac
   BUILD_EXEEXT='$(EXEEXT)'
 fi
 
 AC_ARG_VAR([BUILD_CC],
   [build system C compiler (used if cross compiling)])
 AC_ARG_VAR([BUILD_CFLAGS],
   [build system C compiler flags (used if cross compiling)])
 AC_ARG_VAR([BUILD_CXX],
@@ -482,64 +479,64 @@ AC_ARG_VAR([BUILD_EXEEXT],
   [build system executable extension (used if cross compiling)])
 
 dnl This is bogus.  We shouldn't have to explicitly add libc too!
 dnl Keep this check before the check for the Fortran compiler,
 dnl in case -lm is needed to compile Fortran programs.
 
 ### Look for math library.  If found, this will add -lm to LIBS.
 
-case "$canonical_host_type" in
+case $canonical_host_type in
   *-*-linux*)
     AC_CHECK_LIB(m, sin, , , -lc)
   ;;
   *)
     AC_CHECK_LIB(m, sin)
   ;;
 esac
 
 ### Determine the Fortran compiler and how to invoke it
 
 ## Default FFLAGS is -O.
-if test "x$FFLAGS" = x; then
+if test x"$FFLAGS" = x""; then
   FFLAGS="-O"
 fi
 
 ## the F77 variable, if set, overrides AC_PROG_F77 automatically
 AC_PROG_F77
 AC_F77_LIBRARY_LDFLAGS
 AC_F77_DUMMY_MAIN
 AC_F77_WRAPPERS
 
 F77_TOLOWER=true
 F77_APPEND_UNDERSCORE=true
 F77_APPEND_EXTRA_UNDERSCORE=true
 
-case "$ac_cv_f77_mangling" in
+case $ac_cv_f77_mangling in
   "upper case") F77_TOLOWER=false ;;
 esac
-case "$ac_cv_f77_mangling" in
+case $ac_cv_f77_mangling in
   "no underscore") F77_APPEND_UNDERSCORE=false ;;
 esac
-case "$ac_cv_f77_mangling" in
+case $ac_cv_f77_mangling in
   "no extra underscore") F77_APPEND_EXTRA_UNDERSCORE=false ;;
 esac
 
-case "$canonical_host_type" in
+case $canonical_host_type in
   i[[3456789]]86-*-*)
-    if test "$ac_cv_f77_compiler_gnu" = yes; then
-      OCTAVE_F77_FLAG(-mieee-fp)
+    if test $ac_cv_f77_compiler_gnu = yes; then
+      OCTAVE_F77_FLAG([-mieee-fp])
     fi
   ;;
   alpha*-*-*)
-    if test "$ac_cv_f77_compiler_gnu" = yes; then
-      OCTAVE_F77_FLAG(-mieee)
+    if test $ac_cv_f77_compiler_gnu = yes; then
+      OCTAVE_F77_FLAG([-mieee])
     else
-      OCTAVE_F77_FLAG(-ieee)
-      OCTAVE_F77_FLAG(-fpe1)
+      OCTAVE_F77_FLAG([-ieee])
+      OCTAVE_F77_FLAG([-fpe1])
     fi
   ;;
   powerpc-apple-machten*)
     FFLAGS=
   ;;
 esac
 
 if test -n "$FFLAGS"; then
@@ -551,32 +548,32 @@ AC_SUBST(F77_APPEND_UNDERSCORE)
 AC_SUBST(F77_APPEND_EXTRA_UNDERSCORE)
 
 if test -z "$F77"; then
   AC_MSG_ERROR([in order to build Octave, you must have a compatible Fortran compiler or wrapper script for f2c that functions as a Fortran compiler installed and in your path.  See the file INSTALL for more information.])
 fi
 
 OCTAVE_CHECK_FUNC_FORTRAN_ISNAN
 F77_ISNAN_MACRO=
-if test "x$octave_cv_func_fortran_isnan" = xno; then
+if test $octave_cv_func_fortran_isnan = no; then
   AC_MSG_NOTICE([substituting ISNAN(X) with X.NE.X in Fortran sources])
   F77_ISNAN_MACRO="s|ISNAN(\(@<:@^)@:>@*\))|(\1.NE.\1)|"
 fi
 AC_SUBST(F77_ISNAN_MACRO)
 
 OCTAVE_CHECK_SIZEOF_FORTRAN_INTEGER
-if test "x$octave_cv_sizeof_fortran_integer" = xno; then
+if test $octave_cv_sizeof_fortran_integer = no; then
   if $USE_64_BIT_IDX_T; then
-    case "$F77" in
+    case $F77 in
       *gfortran*)
-        case "$F77_INTEGER_8_FLAG" in
+        case $F77_INTEGER_8_FLAG in
           *-fdefault-integer-8*)
           ;;
           *)
-            case "$FFLAGS" in
+            case $FFLAGS in
               *-fdefault-integer-8*)
                 AC_MSG_NOTICE([setting -fdefault-integer-8 in F77_INTEGER_8_FLAG instead of FFLAGS])
                 FFLAGS=`echo $FFLAGS | sed 's/-fdefault-integer-8//g'`
                 F77_INTEGER_8_FLAG="-fdefault-integer-8"
               ;;
               *)
                 AC_MSG_NOTICE([adding -fdefault-integer-8 to F77_INTEGER_8_FLAG])
                 F77_INTEGER_8_FLAG="-fdefault-integer-8"
@@ -586,30 +583,30 @@ if test "x$octave_cv_sizeof_fortran_inte
             esac
           ;;
         esac
       ;;
     esac
     if test -z "$octave_cv_sizeof_fortran_integer"; then
       OCTAVE_CHECK_SIZEOF_FORTRAN_INTEGER
     fi
-    if test "x$octave_cv_sizeof_fortran_integer" = xno; then
+    if test $octave_cv_sizeof_fortran_integer = no; then
       AC_MSG_ERROR([in order to build Octave with 64-bit indexing support your Fortran compiler must have an option for setting the default integer size to 8 bytes.  See the file INSTALL for more information.])
     fi
   else
     AC_MSG_ERROR([your Fortran compiler must have an option to make integers the same size as octave_idx_type ($OCTAVE_IDX_TYPE).  See the file INSTALL for more information.])
   fi
 fi
 AC_SUBST(F77_INTEGER_8_FLAG)
 
 ## FIXME: Is this really used?  Makefile seems to use $F77 for compiler
 FC=$F77
 AC_SUBST(FC)
 
-OCTAVE_F77_FLAG(-ffloat-store, [
+OCTAVE_F77_FLAG([-ffloat-store], [
   AC_MSG_RESULT([setting F77_FLOAT_STORE_FLAG to -ffloat-store])
   F77_FLOAT_STORE_FLAG=-ffloat-store
   AC_SUBST(F77_FLOAT_STORE_FLAG)
 ])
 
 ### Check for the Qhull library
 
 OCTAVE_CHECK_LIB(qhull, QHull,
@@ -647,17 +644,17 @@ AC_CACHE_CHECK([whether pcre.h defines t
     #endif],
     ac_cv_pcre_h_macros_present=yes, ac_cv_pcre_h_macros_present=no)])
 
 if test $ac_cv_pcre_h_macros_present = yes; then
   ## check for pcre-config, and if so, set XTRA_CXXFLAGS appropriately
   AC_CHECK_PROG(HAVE_PCRE_CONFIG, pcre-config, [yes], [no])
   if test $HAVE_PCRE_CONFIG = yes; then
     XTRA_CXXFLAGS="$XTRA_CXXFLAGS `pcre-config --cflags`"
-    REGEX_LIBS="`pcre-config --libs`"
+    REGEX_LIBS=`pcre-config --libs`
   else
     REGEX_LIBS="-lpcre"
   fi
   save_LIBS="$LIBS"
   LIBS="$REGEX_LIBS $LIBS"
   AC_CHECK_FUNCS([pcre_compile],
     [AC_SUBST(REGEX_LIBS)],
     [AC_MSG_ERROR([$pcre_fail_msg])])
@@ -736,22 +733,21 @@ if test $build_jit = true; then
   else
     build_jit=false
     LLVM_CPPFLAGS=
     LLVM_CXXFLAGS=
     LLVM_LDFLAGS=
     LLVM_LIBS=
     OCTAVE_CONFIGURE_WARNING([warn_llvm])
   fi
-
-## FIXME: Re-instate when JIT is enabled by default
-#else
-#  ## JIT build disabled
-#  warn_llvm="JIT compiler disabled, some performance loss for loops"
-#  OCTAVE_CONFIGURE_WARNING([warn_llvm])
+dnl FIXME: Re-instate when JIT is enabled by default
+dnl else
+dnl   ## JIT build disabled
+dnl   warn_llvm="JIT compiler disabled, some performance loss for loops"
+dnl   OCTAVE_CONFIGURE_WARNING([warn_llvm])
 fi
 
 AC_SUBST(LLVM_CPPFLAGS)
 AC_SUBST(LLVM_CXXFLAGS)
 AC_SUBST(LLVM_LDFLAGS)
 AC_SUBST(LLVM_LIBS)
 
 ### Check for HDF5 library.
@@ -763,17 +759,17 @@ LIBS="$Z_LDFLAGS $Z_LIBS $LIBS"
 OCTAVE_CHECK_LIB(hdf5, HDF5,
   [HDF5 library not found.  Octave will not be able to save or load HDF5 data files.],
   [hdf5.h], [H5Gget_num_objs], [], [],
   [warn_hdf5=
    OCTAVE_CHECK_HDF5_HAS_VER_16_API
    TEXINFO_HDF5="@set HAVE_HDF5"
    AC_DEFINE(HAVE_HDF5, 1,
      [Define to 1 if HDF5 is available and newer than version 1.6.])
-   if test "$have_msvc" = "yes"; then
+   if test $have_msvc = yes; then
      OCTAVE_CHECK_LIB_HDF5_DLL
    fi
   ])
 CPPFLAGS="$save_CPPFLAGS"
 LIBS="$save_LIBS"
 
 ### Check for FFTW library.  Default to Fortran FFTPACK if it is not available.
 
@@ -821,17 +817,17 @@ if test -z "$warn_curl"; then
     [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
       #include <curl/curl.h>
       ]], [[
       curl_easy_setopt ((CURL*)NULL, CURLOPT_DIRLISTONLY, 0);
       ]])],
       [octave_cv_header_define_curlopt_dirlistonly=no],
       [octave_cv_header_define_curlopt_dirlistonly=yes])
     ])
-  if test $octave_cv_header_define_curlopt_dirlistonly = "yes"; then
+  if test $octave_cv_header_define_curlopt_dirlistonly = yes; then
     AC_DEFINE(CURLOPT_DIRLISTONLY, CURLOPT_FTPLISTONLY,
       [Define to the legacy option name if using an older version of cURL.])]
   fi
 fi
 LIBS="$save_LIBS"
 CPPFLAGS="$save_CPPFLAGS"
 
 ### Check for either of Graphics/ImageMagick++ libraries
@@ -894,55 +890,55 @@ else
 fi
 AC_SUBST(MAGICK_CPPFLAGS)
 AC_SUBST(MAGICK_LDFLAGS)
 AC_SUBST(MAGICK_LIBS)
 
 ### Check for X11 libraries
 
 AC_PATH_X
-if test "$have_x" = "yes"; then
+if test "$have_x" = yes; then
   AC_DEFINE(HAVE_X_WINDOWS, 1, [Define to 1 if you have X11.])
 
   if test "$x_includes" != "NONE"; then
     X11_INCFLAGS="$x_includes"
   fi
   AC_SUBST(X11_INCFLAGS)
 
-  if test -z $x_libraries; then
-    AC_CHECK_LIB([X11], XrmInitialize, [X11_LIBS=-lX11], [X11_LIBS=])
+  if test -z "$x_libraries"; then
+    AC_CHECK_LIB([X11], XrmInitialize, [X11_LIBS="-lX11"], [X11_LIBS=])
   elif test $x_libraries != "NONE"; then
     AC_CHECK_LIB([X11], XrmInitialize, 
       [X11_LIBS="-L$x_libraries -lX11"], [X11_LIBS=], "-L$x_libraries")
   fi
   AC_SUBST(X11_LIBS)
 fi
 
 ### Check for the Carbon framework on MacOSX systems
 OCTAVE_HAVE_FRAMEWORK([Carbon],
   [[#include <Carbon/Carbon.h>]], [[CGMainDisplayID ()]],
-  [have_framework_carbon="yes"], [have_framework_carbon="no"])
-if test $have_framework_carbon = "yes"; then
+  [have_framework_carbon=yes], [have_framework_carbon=no])
+if test $have_framework_carbon = yes; then
   AC_DEFINE(HAVE_FRAMEWORK_CARBON, 1,
     [Define to 1 if framework CARBON is available.])
   CARBON_LIBS="-Wl,-framework -Wl,Carbon"
   AC_MSG_NOTICE([adding -Wl,-framework -Wl,Carbon to CARBON_LIBS])
   AC_SUBST(CARBON_LIBS)
 fi
 
 ### Check for list of libraries needed for native graphics renderer.
 
 native_graphics=true
 warn_freetype=""
 
 check_opengl=false
 AC_ARG_WITH([opengl],
   [AS_HELP_STRING([--without-opengl],
     [don't use OpenGL libraries, disable native graphics])],
-  [if test "x$withval" = xno; then
+  [if test x"$withval" = x"no"; then
      native_graphics=false
      warn_opengl="--without-opengl specified.  Native graphics will be disabled."
      OCTAVE_CONFIGURE_WARNING([warn_opengl])
    else
      check_opengl=true
    fi],
   [check_opengl=true])
 
@@ -1004,46 +1000,46 @@ if test -n "$OPENGL_LIBS"; then
     [fltk_prefix=""])
 
   AC_ARG_WITH([fltk-exec-prefix], [
     AS_HELP_STRING([--with-fltk-exec-prefix=PFX],
       [exec prefix where FLTK is installed (optional)])],
     [fltk_exec_prefix="$withval"],
     [fltk_exec_prefix=""])
 
-  if test -n "$fltk_exec_prefix"; then
+  if test x"$fltk_exec_prefix" != x""; then
     fltk_args="$fltk_args --exec-prefix=$fltk_exec_prefix"
     if test "x${FLTK_CONFIG+set}" != xset ; then
       FLTK_CONFIG="$fltk_exec_prefix/bin/fltk-config"
     fi
   fi
 
-  if test -n "$fltk_prefix"; then
+  if test x"$fltk_prefix" != x""; then
     fltk_args="$fltk_args --prefix=$fltk_prefix"
     if test x${FLTK_CONFIG+set} != xset ; then
       FLTK_CONFIG="$fltk_prefix/bin/fltk-config"
     fi
   fi
 
   AC_PATH_PROG([FLTK_CONFIG], [fltk-config], [no])
 
   warn_fltk_config=""
   warn_fltk_opengl=""
 
-  if test "$FLTK_CONFIG" = "no" ; then
+  if test "$FLTK_CONFIG" = no; then
     native_graphics=false
     warn_fltk_config="FLTK config script not found.  Native graphics will be disabled."
     OCTAVE_CONFIGURE_WARNING([warn_fltk_config])
   else
-    FLTK_CFLAGS="`$FLTK_CONFIG $fltkconf_args --use-gl --cflags`"
-    FLTK_LDFLAGS="`$FLTK_CONFIG $fltkconf_args --use-gl --ldflags`"
+    FLTK_CFLAGS=`$FLTK_CONFIG $fltkconf_args --use-gl --cflags`
+    FLTK_LDFLAGS=`$FLTK_CONFIG $fltkconf_args --use-gl --ldflags`
 
-    case "$canonical_host_type" in
+    case $canonical_host_type in
       *-*-mingw*)
-        FLTK_LDFLAGS="`echo $FLTK_LDFLAGS | sed -e 's/-mwindows//g'`"
+        FLTK_LDFLAGS=`echo $FLTK_LDFLAGS | sed -e 's/-mwindows//g'`
       ;;
     esac
 
     AC_CACHE_CHECK([for OpenGL support in FLTK],
       [octave_cv_fltk_opengl_support],
       [save_CFLAGS="$CFLAGS"
       CFLAGS="$CFLAGS $FLTK_CFLAGS"
       AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
@@ -1072,17 +1068,17 @@ if test -n "$OPENGL_LIBS"; then
 fi
 
 AC_SUBST(GRAPHICS_CFLAGS)
 AC_SUBST(GRAPHICS_LIBS)
 
 ### Start determination of shared vs. static libraries
 
 ## Use -static if compiling on Alpha OSF/1 1.3 systems.
-case "$canonical_host_type" in
+case $canonical_host_type in
   alpha*-dec-osf1.3)
     LD_STATIC_FLAG=-static
   ;;
 esac
 if test -n "$LD_STATIC_FLAG"; then
   AC_MSG_NOTICE([defining LD_STATIC_FLAG to be $LD_STATIC_FLAG])
 fi
 AC_SUBST(LD_STATIC_FLAG)
@@ -1092,30 +1088,30 @@ OCTAVE_PROG_AR
 ifdef([LT_INIT], [], [
   errprint([error: you must have libtool 2.2.2 or a more recent version
 ])
   m4exit([1])])
 
 LT_PREREQ([2.2.2])
 LT_INIT([disable-static dlopen win32-dll])
 
-if test x$enable_shared = xyes; then
+if test x"$enable_shared" = x"yes"; then
   SHARED_LIBS=true
 else
   SHARED_LIBS=false
 fi
 
-if test x$enable_static = xyes; then
+if test x"$enable_static" = x"yes"; then
   STATIC_LIBS=true
 else
   STATIC_LIBS=false
 fi
 
 XTRA_CRUFT_SH_LDFLAGS=
-if test "$have_msvc" = "yes"; then
+if test $have_msvc = yes; then
   FLIBS="$FLIBS -lkernel32"
   XTRA_CRUFT_SH_LDFLAGS="-Wl,-def:cruft.def"
 fi
 AC_SUBST(XTRA_CRUFT_SH_LDFLAGS)
 
 ### Check for BLAS and LAPACK libraries:
 
 ## Need to adjust FFLAGS to include correct integer size.
@@ -1124,35 +1120,35 @@ FFLAGS="$FFLAGS $F77_INTEGER_8_FLAG"
 
 AX_BLAS_WITH_F77_FUNC([:], [:])
 AX_LAPACK([:], [:])
 
 ## Restore FFLAGS.
 FFLAGS="$save_FFLAGS"
 
 ## If necessary, try again with -ff2c in FFLAGS
-if test "x$ax_blas_f77_func_ok" = "xno"; then
+if test $ax_blas_f77_func_ok = no; then
   save_FFLAGS="$FFLAGS"
   FFLAGS="-ff2c $FFLAGS $F77_INTEGER_8_FLAG"
 
   AX_BLAS_WITH_F77_FUNC([:], [:])
   AX_LAPACK([:], [:])
 
   ## Restore FFLAGS, with -ff2c if that was helpful
 
-  if test "x$ax_blas_f77_func_ok" = "xno"; then
+  if test $ax_blas_f77_func_ok = no; then
     FFLAGS="$save_FFLAGS"
   else
     FFLAGS="-ff2c $save_FFLAGS"
   fi
 fi
 
 ## On OSX, try again with a wrapper library (without -ff2c!)
-if test "x$ax_blas_f77_func_ok" = "xno"; then
-  case "$canonical_host_type" in
+if test $ax_blas_f77_func_ok = no; then
+  case $canonical_host_type in
     *-*-darwin*)
       ## test if wrapper functions help
       octave_blaswrap_save_CFLAGS="$CFLAGS"
       CFLAGS="$CFLAGS -DUSE_BLASWRAP"
       AC_LANG_PUSH(C)
       AC_COMPILE_IFELSE([AC_LANG_SOURCE([[
           #include "liboctave/cruft/misc/blaswrap.c"
         ]])],
@@ -1170,54 +1166,54 @@ if test "x$ax_blas_f77_func_ok" = "xno";
          FFLAGS="$save_FFLAGS"
 
          ## remove temp file
          rm -f blaswrap.$ac_objext],
         [AC_MSG_FAILURE([cannot compile liboctave/cruft/misc/blaswrap.c])])
       AC_LANG_POP(C)
       CFLAGS="$octave_blaswrap_save_CFLAGS"
 
-      if test "x$ax_blas_f77_func_ok" = "xno"; then
+      if test $ax_blas_f77_func_ok = no; then
         BLAS_LIBS="$octave_blaswrap_save_BLAS_LIBS"
       else
         ## wrapper in cruft, remove from BLAS_LIBS
-        BLAS_LIBS="`echo $BLAS_LIBS | sed -e 's/blaswrap.[[^ ]]* //g'`"
+        BLAS_LIBS=`echo $BLAS_LIBS | sed -e 's/blaswrap.[[^ ]]* //g'`
         AC_DEFINE(USE_BLASWRAP, 1,
           [Define to 1 if BLAS functions need to be wrapped (potentially needed for 64-bit OSX only).])
       fi
     ;;
   esac
 fi
 
-if test "x$ax_blas_f77_func_ok" = "xno"; then
-  if $USE_64_BIT_IDX_T && test "$ax_blas_integer_size_ok" = "no" ; then
+if test $ax_blas_f77_func_ok = no; then
+  if $USE_64_BIT_IDX_T && test $ax_blas_integer_size_ok = no; then
     ## Attempt to be more informative.
     AC_MSG_ERROR([BLAS doesn't seem to support 64-bit integers.  This is incompatible with --enable-64.])
   else
     AC_MSG_ERROR([A BLAS library was detected but found incompatible with your Fortran 77 compiler settings.])
   fi
 fi
 
-if test x$ax_blas_ok = xno || test x$ax_lapack_ok = xno; then
+if test $ax_blas_ok = no || test $ax_lapack_ok = no; then
   AC_MSG_ERROR([BLAS and LAPACK libraries are required])
 fi
 
 ### Check for the qrupdate library
 
 ## No need to adjust FFLAGS because only link is attempted. 
 ## Must supply proper LIBS, however.
 save_LIBS="$LIBS"
 LIBS="$LAPACK_LIBS $BLAS_LIBS $FLIBS $LIBS"
 OCTAVE_CHECK_LIB(qrupdate, qrupdate,
   [qrupdate not found.  The QR & Cholesky updating functions will be slow.],
   [],
   [sqr1up],
   [Fortran 77], [don't use qrupdate, disable QR & Cholesky updating functions])
 
-if test "$octave_cv_lib_qrupdate" = yes; then
+if test $octave_cv_lib_qrupdate = yes; then
   AC_CACHE_CHECK([for slup1up in $QRUPDATE_LIBS],
     [octave_cv_func_slup1up],
     [LIBS="$LIBS $QRUPDATE_LIBS"
     AC_LANG_PUSH([Fortran 77])
     AC_LINK_IFELSE([AC_LANG_CALL([], [slup1up])],
       octave_cv_func_slup1up=yes, octave_cv_func_slup1up=no)
     AC_LANG_POP([Fortran 77])
   ])
@@ -1254,18 +1250,19 @@ OCTAVE_CHECK_LIB(colamd, COLAMD,
 ### Check for CCOLAMD library
 
 OCTAVE_CHECK_LIB(ccolamd, CCOLAMD,
   [CCOLAMD library not found.  This will result in some lack of functionality for sparse matrices.],
   [suitesparse/ccolamd.h ufsparse/ccolamd.h amd/ccolamd.h ccolamd.h],
   [ccolamd],
   [], [don't use CCOLAMD library, disable some sparse matrix functionality])
 
-### Check for CHOLMOD library.  If your cholmod library requires cblas,
-### then you will need to configure with --with-cholmod="-lcholmod -lcblas".
+### Check for CHOLMOD library.
+### If your cholmod library requires cblas, then you will need to
+### configure with --with-cholmod="-lcholmod -lcblas".
 
 save_LIBS="$LIBS"
 LIBS="$COLAMD_LDFLAGS $COLAMD_LIBS $AMD_LDFLAGS $AMD_LIBS $LAPACK_LIBS $BLAS_LIBS $FLIBS $LIBS"
 OCTAVE_CHECK_LIB(cholmod, CHOLMOD,
   [CHOLMOD library not found.  This will result in some lack of functionality for sparse matrices.],
   [suitesparse/cholmod.h ufsparse/cholmod.h cholmod/cholmod.h cholmod.h],
   [cholmod_start],
   [], [don't use CHOLMOD library, disable some sparse matrix functionality])
@@ -1313,24 +1310,24 @@ fi
 ## Test features of the installed UMFPACK library
 
 if test -n "$UMFPACK_LIBS"; then
   ## SuiteSparse >= 4.0 needs additional link library for SuiteSparse_time()
   save_LIBS="$LIBS";
   LIBS="$UMFPACK_LIBS $AMD_LDFLAGS $AMD_LIBS $BLAS_LIBS $FLIBS $LIBS"
   xtra_libs=
   OCTAVE_UMFPACK_NEED_SUITESPARSE_TIME
-  if test "$octave_cv_umfpack_need_suitesparse_time" = yes; then
+  if test $octave_cv_umfpack_need_suitesparse_time = yes; then
     AC_CHECK_LIB([rt], [clock_gettime], [xtra_libs="-lrt"], [xtra_libs=])
     ## FIXME: This library list is only accurate for Linux, Mac OS X.
     ##        Possibly need other library names for MinGW, Cygwin.
     AC_SEARCH_LIBS([SuiteSparse_time],
                    [suitesparseconfig SuiteSparse],
                    [], [], [$xtra_libs])
-    case "$ac_cv_search_SuiteSparse_time" in
+    case $ac_cv_search_SuiteSparse_time in
       -l*)  
         UMFPACK_LIBS="$UMFPACK_LIBS $ac_cv_search_SuiteSparse_time"
       ;;
       no)
         UMFPACK_LIBS=
         AC_MSG_WARN([UMFPACK library found but is missing SuiteSparse_time functionality.])
         AC_MSG_WARN([UMFPACK library will be disabled.])
       ;;
@@ -1369,20 +1366,20 @@ OCTAVE_ENABLE_READLINE
 ### Enable dynamic linking.  --enable-shared implies this, so
 ### --enable-dl is only need if you are only building static libraries
 ### and want to try dynamic linking too (works on some systems, for
 ### example, OS X and Windows).
 
 AC_ARG_ENABLE([dl],
   [AS_HELP_STRING([--disable-dl],
     [disable loading of dynamically linked modules])],
-  [case "${enableval}" in
+  [case $enableval in
      yes) ENABLE_DYNAMIC_LINKING=true ;;
      no) ENABLE_DYNAMIC_LINKING=false ;;
-     *) AC_MSG_ERROR([bad value ${enableval} for --enable-dl]) ;;
+     *) AC_MSG_ERROR([bad value $enableval for --enable-dl]) ;;
    esac],
   [ENABLE_DYNAMIC_LINKING=true])
 
 if $STATIC_LIBS || $SHARED_LIBS; then
   true
 else
   AC_MSG_ERROR([You can't disable building static AND shared libraries!])
 fi
@@ -1413,17 +1410,17 @@ TEMPLATE_ARFLAGS="$ARFLAGS"
 CRUFT_DLL_DEFS=
 OCTAVE_DLL_DEFS=
 OCTINTERP_DLL_DEFS=
 OCTGUI_DLL_DEFS=
 OCTGRAPHICS_DLL_DEFS=
 library_path_var=LD_LIBRARY_PATH
 ldpreloadsep=" "
 BUILD_COMPILED_AUX_PROGRAMS=false
-case "$canonical_host_type" in
+case $canonical_host_type in
   *-*-386bsd* | *-*-netbsd*)
     SH_LD=ld
     SH_LDFLAGS=-Bshareable
   ;;
   *-*-openbsd*)
     SH_LDFLAGS='-shared -fPIC'
   ;;
   *-*-freebsd*)
@@ -1434,17 +1431,17 @@ case "$canonical_host_type" in
     CXXPICFLAG=
     FPICFLAG=
     SH_LDFLAGS="-shared -Wl,-expect_unresolved -Wl,'*'"
   ;;
   *-*-darwin*)
     DL_LDFLAGS='-bundle -bundle_loader $(top_builddir)/libinterp/octave $(LDFLAGS)'
     MKOCTFILE_DL_LDFLAGS='-bundle -bundle_loader $$BINDIR/octave-$$OCTAVE_VERSION$$EXEEXT'
     SH_LDFLAGS='-dynamiclib -single_module $(LDFLAGS)'
-    case "$canonical_host_type" in
+    case $canonical_host_type in
       powerpc-*)
         CXXPICFLAG=
         CPICFLAG=
         FPICFLAG=
       ;;
     esac
     SHLEXT=dylib 
     SHLLIB='$(SHLEXT)'
@@ -1466,30 +1463,30 @@ case "$canonical_host_type" in
     SHLBIN=dll    
     DL_LDFLAGS="-shared -Wl,--export-all-symbols -Wl,--enable-auto-import -Wl,--enable-runtime-pseudo-reloc"
     SH_LDFLAGS="-shared -Wl,--export-all-symbols -Wl,--enable-auto-import -Wl,--enable-auto-image-base"
     SONAME_FLAGS='-Wl,--out-implib=$(patsubst $(SHLPRE)%,$(LIBPRE)%,$@).a'
     ldpreloadsep=":"
   ;;
   *-*-mingw*)
     BUILD_COMPILED_AUX_PROGRAMS=true
-    if test "$have_msvc" = "yes"; then
+    if test $have_msvc = yes; then
       DL_LDFLAGS="-shared"
       CPICFLAG=
       CXXPICFLAG=
       FPICFLAG=
       SHLEXT=dll
       SHLLIB=lib
       SHLBIN=dll
       LIBPRE=
       SHLPRE=
       SHLLIBPRE=
       SHLBINPRE=
       SH_LDFLAGS="-shared"
-      if test -n "`echo $CFLAGS | grep -e '-g'`" -o -n "`echo $CXXFLAGS | grep -e '-g'`"; then
+      if test -n "`echo $CFLAGS | grep -e '-g'`" || test -n "`echo $CXXFLAGS | grep -e '-g'`"; then
         DL_LDFLAGS="$DL_LDFLAGS -g"
         SH_LDFLAGS="$SH_LDFLAGS -g"
       fi
       NO_OCT_FILE_STRIP=true
       library_path_var=PATH
       NO_OCT_FILE_STRIP=true
       ## Extra compilation flags.
       CRUFT_DLL_DEFS="-DCRUFT_DLL"
@@ -1520,17 +1517,17 @@ case "$canonical_host_type" in
     SHLEXT=dll
     SHLLIB=lib
     SHLBIN=dll
     LIBPRE=
     SHLPRE=
     SHLLIBPRE=
     SHLBINPRE=
     SH_LDFLAGS="-shared"
-    if test -n "`echo $CFLAGS | grep -e '-g'`" -o -n "`echo $CXXFLAGS | grep -e '-g'`"; then
+    if test -n "`echo $CFLAGS | grep -e '-g'`" || test -n "`echo $CXXFLAGS | grep -e '-g'`"; then
       DL_LDFLAGS="$DL_LDFLAGS -g"
       SH_LDFLAGS="$SH_LDFLAGS -g"
     fi
     NO_OCT_FILE_STRIP=true
     library_path_var=PATH
     NO_OCT_FILE_STRIP=true
     ## Extra compilation flags.
     CRUFT_DLL_DEFS="-DCRUFT_DLL"
@@ -1548,49 +1545,49 @@ case "$canonical_host_type" in
   ;;
   rs6000-ibm-aix* | powerpc-ibm-aix*)
     CPICFLAG=
     CXXPICFLAG=
     FPICFLAG=
     library_path_var=LIBPATH
   ;;
   hppa*-hp-hpux*)
-    if test "$ac_cv_f77_compiler_gnu" = yes; then
+    if test $ac_cv_f77_compiler_gnu = yes; then
       FPICFLAG=-fPIC
     else
       FPICFLAG=+Z
     fi
     SHLEXT=sl
     SH_LDFLAGS="-shared -fPIC"
     library_path_var=SHLIB_PATH
   ;;
   ia64*-hp-hpux*)
-    if test "$ac_cv_f77_compiler_gnu" = yes; then
+    if test $ac_cv_f77_compiler_gnu = yes; then
       FPICFLAG=-fPIC
     else
       FPICFLAG=+Z
     fi
     SH_LDFLAGS="-shared -fPIC"
   ;;
   *-sgi-*)
     CPICFLAG=
     CXXPICFLAG=
     FPICFLAG=
   ;;
   sparc-sun-sunos4*)
-    if test "$ac_cv_f77_compiler_gnu" = yes; then
+    if test $ac_cv_f77_compiler_gnu = yes; then
       FPICFLAG=-fPIC
     else
       FPICFLAG=-PIC
     fi
     SH_LD=ld
     SH_LDFLAGS="-assert nodefinitions"
   ;;
   sparc-sun-solaris2* | i386-pc-solaris2*)
-    if test "$ac_cv_f77_compiler_gnu" = yes; then
+    if test $ac_cv_f77_compiler_gnu = yes; then
       FPICFLAG=-fPIC
     else
       FPICFLAG=-KPIC
     fi
     if test "$GCC" = yes; then
       CPICFLAG=-fPIC
     else
       CPICFLAG=-KPIC
@@ -1598,19 +1595,17 @@ case "$canonical_host_type" in
     if test "$GXX" = yes; then
       CXXPICFLAG=-fPIC
       SH_LDFLAGS=-shared
     else
       CXXPICFLAG=-KPIC
       SH_LDFLAGS=-G
     fi
     ## Template closures in archive libraries need a different mechanism.
-    if test "$GXX" = yes; then
-      true
-    else
+    if test "$GXX" != yes; then
       TEMPLATE_AR='$(CXX)'
       TEMPLATE_ARFLAGS="-xar -o"
     fi
   ;;
 esac
 
 AM_CONDITIONAL([AMCOND_BUILD_COMPILED_AUX_PROGRAMS],
   [test x$BUILD_COMPILED_AUX_PROGRAMS = xtrue])
@@ -1675,34 +1670,35 @@ AC_SUBST(OCTGRAPHICS_DLL_DEFS)
 AC_SUBST(library_path_var)
 AC_SUBST(ldpreloadsep)
 
 ### More configure argument checking related to linking
 
 AC_ARG_ENABLE([no-undefined],
   [AS_HELP_STRING([--disable-no-undefined],
     [don't pass -no-undefined to libtool when linking Octave and its shared libraries])],
-  [case "${enableval}" in
+  [case $enableval in
      yes) NO_UNDEFINED_LDFLAG="-no-undefined" ;;
      no)  NO_UNDEFINED_LDFLAG="" ;;
-     *) AC_MSG_ERROR([bad value ${enableval} for --disable-no-undefined]) ;;
+     *) AC_MSG_ERROR([bad value $enableval for --disable-no-undefined]) ;;
    esac],
   [NO_UNDEFINED_LDFLAG="-no-undefined"])
 AC_SUBST(NO_UNDEFINED_LDFLAG)
 
 AC_ARG_ENABLE([link-all-dependencies],
   [AS_HELP_STRING([--enable-link-all-dependencies],
     [link Octave and its shared libraries with all dependencies, not just those immediately referenced (should not be needed on most systems)])],
-  [case "${enableval}" in
+  [case $enableval in
      yes) link_all_deps=true ;;
      no)  link_all_deps=false ;;
-     *) AC_MSG_ERROR([bad value ${enableval} for --enable-link-all-depenencies]) ;;
+     *) AC_MSG_ERROR([bad value $enableval for --enable-link-all-depenencies])
+     ;;
    esac],
   [link_all_deps=false])
-AM_CONDITIONAL([AMCOND_LINK_ALL_DEPS], [test x$link_all_deps = xtrue])
+AM_CONDITIONAL([AMCOND_LINK_ALL_DEPS], [test $link_all_deps = true])
 
 ## Dynamic linking is now enabled only if we are building shared
 ## libs and some API for dynamic linking has been detected.
 
 ## FIXME: A lot of the following duplicates the functionality of
 ## code generated by the dlopen option for LT_INIT.
 
 LD_CXX='$(CXX)'
@@ -1710,17 +1706,17 @@ RDYNAMIC_FLAG=
 DL_API_MSG=""
 dlopen_api=false
 shl_load_api=false
 loadlibrary_api=false
 dyld_api=false
 
 if $SHARED_LIBS || $ENABLE_DYNAMIC_LINKING; then
 
-  case "$lt_cv_dlopen" in
+  case $lt_cv_dlopen in
     dlopen)
       dlopen_api=true
       DL_API_MSG="(dlopen)"
       AC_DEFINE(HAVE_DLOPEN_API, 1,
         [Define to 1 if your system has dlopen, dlsym, dlerror, and dlclose for dynamic linking.])
       OCTAVE_CXX_FLAG([-rdynamic], [RDYNAMIC_FLAG=-rdynamic])
     ;;
     shl_load)
@@ -1754,38 +1750,38 @@ if $SHARED_LIBS || $ENABLE_DYNAMIC_LINKI
   fi
 fi
 
 if $ENABLE_DYNAMIC_LINKING; then
   AC_DEFINE(ENABLE_DYNAMIC_LINKING, 1, [Define to 1 if using dynamic linking.])
 fi
 
 AM_CONDITIONAL([AMCOND_ENABLE_DYNAMIC_LINKING],
-  [test x$ENABLE_DYNAMIC_LINKING = xtrue])
+  [test x"$ENABLE_DYNAMIC_LINKING" = x"true"])
 
 if $SHARED_LIBS; then
-  LIBOCTINTERP=-loctinterp$SHLLINKEXT
-  LIBOCTAVE=-loctave$SHLLINKEXT
+  LIBOCTINTERP="-loctinterp$SHLLINKEXT"
+  LIBOCTAVE="-loctave$SHLLINKEXT"
 else
   LIBOCTINTERP='$(top_builddir)/libinterp/liboctinterp.$(LIBEXT)'
   LIBOCTAVE='$(top_builddir)/liboctave/liboctave.$(LIBEXT)'
 fi
 
 AC_SUBST(LD_CXX)
 AC_SUBST(RDYNAMIC_FLAG)
 AC_SUBST(ENABLE_DYNAMIC_LINKING)
 AC_SUBST(LIBOCTINTERP)
 AC_SUBST(LIBOCTAVE)
 
 ### Check for existence of various libraries
 
 ## OS-specific test for dirent, opendir.
-case "$canonical_host_type" in
+case $canonical_host_type in
   *-*-mingw*)
-    if test "$have_msvc" = "yes"; then
+    if test $have_msvc = yes; then
       AC_CHECK_LIB([dirent], [opendir])
       LIBS="$LIBS -ladvapi32 -lgdi32 -lws2_32 -luser32 -lkernel32"
     else
       LIBS="$LIBS -lgdi32 -lws2_32 -luser32 -lkernel32"
     fi
     LIBS="$LIBS -lgdi32 -lws2_32 -luser32 -lkernel32"
   ;;
   *-*-msdosmsvc*)
@@ -1800,17 +1796,17 @@ OCTAVE_CHECK_LIB_TERMLIB
 ### Checks for header files.
 
 AC_HEADER_DIRENT
 AC_HEADER_SYS_WAIT
 
 dnl FIXME: We should probably only generate this file if it is missing.
 ### Produce unistd.h for MSVC target, this simplifies changes in
 ### Octave source tree and avoid problems with lex-generated code.
-case "$canonical_host_type" in
+case $canonical_host_type in
   *-*-msdosmsvc)
     AC_MSG_NOTICE([Generating replacement for <unistd.h> for MSVC])
     cat << \EOF > unistd.h
 /* File generated by configure script. */
 #include <direct.h>
 #include <io.h>
 #include <process.h>
 EOF
@@ -1833,33 +1829,30 @@ AC_LANG_PUSH(C++)
 
 AC_CHECK_HEADERS([sstream])
 OCTAVE_UNORDERED_MAP_HEADERS
 
 AC_LANG_POP(C++)
 
 ## Find a termio header to include.
 
-have_termios_h=no
-AC_CHECK_HEADERS([termios.h], have_termios_h=yes)
+AC_CHECK_HEADERS([termios.h], have_termios_h=yes, have_termios_h=no)
 AC_CHECK_HEADERS([termio.h], have_termio_h=yes, have_termio_h=no)
 AC_CHECK_HEADERS([sgtty.h], have_sgtty_h=yes, have_sgtty_h=no)
 AC_CHECK_HEADERS([fnmatch.h], have_fnmatch_h=yes, have_fnmatch_h=no)
 AC_CHECK_HEADERS([conio.h], have_conio_h=yes, have_conio_h=no)
 
-if test "$have_termios_h" = yes \
-    || test "$have_termio_h" = yes \
-    || test "$have_sgtty_h" = yes; then
-  true
-else
+if test $have_termios_h != yes \
+    && test $have_termio_h != yes \
+    && test $have_sgtty_h != yes; then
   AC_MSG_WARN([I couldn't find termios.h, termio.h, or sgtty.h!])
 fi
 
 ## For MSVC compilers, avoid #define of min/max from windows.h header
-if test "$have_msvc" = "yes"; then
+if test $have_msvc = yes; then
   AC_DEFINE(NOMINMAX, 1, [Define to 1 if you want to avoid min/max macro definition in Windows headers.])
 fi
 
 ### Determine types and size of types.
 
 AC_TYPE_INT64_T
 AC_TYPE_MODE_T
 AC_TYPE_OFF_T
@@ -1986,34 +1979,34 @@ dnl instead, but that used to fail on so
 dnl
 dnl Also just using AC_CHECK_FUNCS doesn't seem to work to find isinf
 dnl and isnan on Linux systems, so we use AC_CHECK_FUNC, and if that
 dnl fails, we try again by including math.h and invoking the function
 dnl with an argument. 
 
 ### I am told that Inf and NaN don't work on m68k HP sytems.
 
-case "$canonical_host_type" in
+case $canonical_host_type in
   m68k-hp-hpux*)
   ;;
   *)
     AC_CHECK_FUNCS([finite isnan isinf signbit])
     AC_CHECK_FUNCS([_finite _isnan])
     AC_CHECK_DECLS([signbit], , , [#include <math.h>])
   ;;
 esac
 
 ## Check for nonstandard, but common math functions, that we need.
 
 dnl Use multiple AC_CHECKs to avoid line continuations '\' in list
 AC_CHECK_FUNCS([acosh acoshf asinh asinhf atanh atanhf cbrt cbrtf])
 AC_CHECK_FUNCS([erf erff erfc erfcf exp2f hypotf _hypotf log2 log2f])
 
 ## MinGW exception for mkstemp
-case "$canonical_host_type" in
+case $canonical_host_type in
   *-*-mingw*)
     ## MinGW does not provide a mkstemp function.  However, it provides
     ## the mkstemps function in libiberty.
     AC_MSG_CHECKING([for mkstemps in libiberty])
     save_LIBS="$LIBS"
     LIBS="-liberty $LIBS"
     AC_LINK_IFELSE([
       AC_LANG_PROGRAM([[
@@ -2030,17 +2023,17 @@ case "$canonical_host_type" in
     [AC_MSG_RESULT([no])
      HAVE_MKSTEMPS=no
      LIBS="$save_LIBS"
     ])
    ;;
 esac
 
 ## Windows-specific tests for extra #defines
-case "$canonical_host_type" in
+case $canonical_host_type in
   *-*-msdosmsvc | *-*-mingw*)
     AC_MSG_CHECKING([for required _WIN32_WINNT])
     AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
         #include <windows.h>
         #if _WIN32_WINNT < 0x0403
         #error "Wrong version"
         #endif
         ]], [])],
@@ -2057,25 +2050,25 @@ case "$canonical_host_type" in
       [AC_DEFINE(_USE_MATH_DEFINES, 1,
         [Define to 1 if your system needs to define math constants like M_LN2.])
         AC_MSG_RESULT([yes])])
   ;;
 esac
 
 ## Cygwin kluge for getrusage.
 AC_CHECK_FUNCS([getrusage])
-case "$canonical_host_type" in
+case $canonical_host_type in
   *-*-cygwin*)
     AC_DEFINE(RUSAGE_TIMES_ONLY, 1,
       [Define to 1 if your struct rusage only has time information.])
   ;;
 esac
 
 ## Check for CGDisplayBitsPerPixel function on Mac OSX systems with Carbon
-if test $have_framework_carbon = "yes"; then
+if test $have_framework_carbon = yes; then
   OCTAVE_CARBON_CGDISPLAYBITSPERPIXEL
 fi
 
 AC_CHECK_FUNCS([getpwnam], [], [AC_CHECK_LIB([sun], [getpwnam])])
 
 AC_FUNC_CLOSEDIR_VOID
 
 ## Check return type of matherr() 
@@ -2086,17 +2079,17 @@ AC_CACHE_CHECK([for struct exception in 
       ]], [[
       struct exception *x;
       x->type;
       x->name;
       ]])],
     octave_cv_func_matherr_type=yes,
     octave_cv_func_matherr_type=no)
   ])
-if test $octave_cv_func_matherr_type = "yes"; then
+if test $octave_cv_func_matherr_type = yes; then
   AC_DEFINE(EXCEPTION_IN_MATH, 1,
     [Define to 1 if math.h declares struct exception for matherr().])
 fi
  
 ## Signal stuff.
 
 AC_CHECK_DECLS([sys_siglist], [], [],
 [[#include <signal.h>
@@ -2280,25 +2273,25 @@ if test $build_gui = true; then
       ]])],
       octave_cv_lib_qscintilla=yes,
       octave_cv_lib_qscintilla=no)
     CPPFLAGS="$save_CPPFLAGS"
     LDFLAGS="$save_LDFLAGS"
     LIBS="$save_LIBS"
     AC_LANG_POP([C++])
   ])
-  if test $octave_cv_lib_qscintilla = "no"; then
+  if test $octave_cv_lib_qscintilla = no; then
     AC_MSG_ERROR([Qscintilla library is required to build the GUI])
   fi
 
   ## Check for Qt functions which have changed their API over time
   OCTAVE_CHECK_FUNC_FINDFIRST_MODERN
   OCTAVE_CHECK_FUNC_SETPLACEHOLDERTEXT
 
-  case "$canonical_host_type" in
+  case $canonical_host_type in
     *-*-mingw* | *-*-msdosmsvc*)
       win32_terminal=yes
       ;;
     *)
       AC_CHECK_HEADERS([pty.h libutil.h util.h])
       AC_SEARCH_LIBS([openpty], [util],
         [AC_DEFINE(HAVE_OPENPTY, [], [Define whether openpty exists])])
       ;;
@@ -2612,19 +2605,17 @@ Octave is now configured for $canonical_
   64-bit array dims and indexing:     $USE_64_BIT_IDX_T
 ])
 
 warn_msg_printed=false
 
 OCTAVE_CONFIGURE_WARNING_SUMMARY
 
 if $ENABLE_DYNAMIC_LINKING; then
-  if $SHARED_LIBS; then
-    true
-  else
+  if test $SHARED_LIBS = false; then
     AC_MSG_WARN([You used --enable-dl but not --enable-shared.])
     AC_MSG_WARN([Are you sure that is what you want to do?])
     warn_msg_printed=true
   fi
 fi
 
 if $USE_64_BIT_IDX_T; then
   AC_MSG_WARN([])
@@ -2651,19 +2642,17 @@ if $USE_OPENMP; then
   AC_MSG_WARN([This option enables experimental SMP multithreding])
   AC_MSG_WARN([code that has had very little testing.  There is no])
   AC_MSG_WARN([certainity that the results returned by Octave with])
   AC_MSG_WARN([this option enabled will be correct.])
   AC_MSG_WARN([])
   warn_msg_printed=true
 fi
 
-if $native_graphics; then
-  true;
-else
+if test $native_graphics = false; then
   AC_MSG_WARN([])
   AC_MSG_WARN([I didn't find the necessary libraries to compile native])
   AC_MSG_WARN([graphics.  It isn't necessary to have native graphics,])
   AC_MSG_WARN([but you will need to have gnuplot installed or you won't])
   AC_MSG_WARN([be able to use any of Octave's plotting commands])
   AC_MSG_WARN([])
   warn_msg_printed=true
 fi
