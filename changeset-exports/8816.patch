# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1235059468 -3600
#      Thu Feb 19 17:04:28 2009 +0100
# Node ID a4a8f871be81e9910f242c1a0f32286b1d565309
# Parent  af907aeedbf4a0ebdeb87c7be6dd254576757499
fix missing init in octave_sort<T>::sortrows

diff --git a/liboctave/oct-sort.cc b/liboctave/oct-sort.cc
--- a/liboctave/oct-sort.cc
+++ b/liboctave/oct-sort.cc
@@ -501,16 +501,17 @@ void
 octave_sort<T>::merge_freemem (void)
 {
   if (ms)
     {
       delete [] ms->a;
       delete [] ms->ia;
       ms->alloced = 0;
       ms->a = 0;
+      ms->ia = 0;
     }
 }
 
 static inline octave_idx_type
 roundupsize (octave_idx_type n)
 {
   unsigned int nbits = 3;
   octave_idx_type n2 = static_cast<octave_idx_type> (n) >> 8;
@@ -1695,16 +1696,27 @@ octave_sort<T>::sort_rows (const T *data
     }
 }
 
 template <class T>
 void 
 octave_sort<T>::sort_rows (const T *data, octave_idx_type *idx,
                            octave_idx_type rows, octave_idx_type cols)
 {
+  /* Re-initialize the Mergestate as this might be the second time called */
+  if (ms)
+    {
+      ms->n = 0;
+      ms->min_gallop = MIN_GALLOP;
+    }
+  else
+    merge_init ();
+
+  merge_getmemi (1024);
+
 #ifdef INLINE_ASCENDING_SORT
   if (compare == ascending_compare)
     sort_rows (data, idx, rows, cols, std::less<T> ());
   else
 #endif
 #ifdef INLINE_DESCENDING_SORT    
     if (compare == descending_compare)
       sort_rows (data, idx, rows, cols, std::greater<T> ());
