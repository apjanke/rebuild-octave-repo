# HG changeset patch
# User jwe
# Date 811494590 0
#      Tue Sep 19 07:09:50 1995 +0000
# Node ID 045e70a15a8f5a57014bd9018759815b63782e2d
# Parent  245206fbed6439e55b9338fa725798667e97f681
[project @ 1995-09-19 07:05:37 by jwe]

diff --git a/src/Map.h b/src/Map.h
--- a/src/Map.h
+++ b/src/Map.h
@@ -32,19 +32,19 @@ of Map and CHMap from libg++, originally
 and distributed under the terms of the GNU Library General Public
 License as published by the Free Software Foundation.
 
 */
 
 #if ! defined (octave_Map_h)
 #define octave_Map_h 1
 
-#include <Pix.h>
+#include <cstring>
 
-#include "utils.h"
+#include <Pix.h>
 
 template <class C>
 class Map
 {
 protected:
   int count;
   C def;
 
@@ -83,19 +83,21 @@ template <class C>
 struct CHNode
 {
   CHNode *tl;
   char *hd;
   C cont;
 
   CHNode (void) : tl (0), hd (0) { }
 
-  CHNode (const char *h, const C& c, CHNode *t = 0)
-    : tl (t), cont (c)
-      { hd = strsave (h); }
+  CHNode (const char *h, const C& c, CHNode *t = 0) : tl (t), cont (c)
+    {
+      hd = h ? strcpy (new char [strlen (h) + 1], h) : 0;
+    }
+
 
   ~CHNode (void)
     { delete [] hd; }
 };
 
 #ifndef DEFAULT_INITIAL_CAPACITY
 #define DEFAULT_INITIAL_CAPACITY 8
 #endif
diff --git a/src/input.cc b/src/input.cc
--- a/src/input.cc
+++ b/src/input.cc
@@ -699,31 +699,30 @@ generate_struct_completions (const char 
 	}
     }
 
   delete [] id;
 
   return names;
 }
 
+// XXX FIXME XXX -- make this generate file names when appropriate.
+
 static char **
 generate_possible_completions (const char *text, char *& prefix,
 			       char *& hint)
 {
   char **names = 0;
 
   prefix = 0;
 
-  if (text && *text && *text != '.')
-    {
-      if (strrchr (text, '.'))
-	names = generate_struct_completions (text, prefix, hint);
-      else
-	names = make_name_list ();
-    }
+  if (text && *text && *text != '.' && strrchr (text, '.'))
+    names = generate_struct_completions (text, prefix, hint);
+  else
+    names = make_name_list ();
 
   return names;
 }
 
 static int
 looks_like_struct (const char *nm)
 {
   int retval = 0;
@@ -842,17 +841,18 @@ command_generator (const char *text, int
 		  strcat (buf, name);
 		}
 	      else
 		strcpy (buf, name);
 
 	      if (matches == 1 && looks_like_struct (buf))
 		rl_completion_append_character = '.';
 	      else
-		rl_completion_append_character = ' ';
+		rl_completion_append_character
+		  = user_pref.completion_append_char;
 
 	      return buf;
 	    }
 	}
     }
 
   return 0;
 }
@@ -906,27 +906,27 @@ set_saved_history (void)
   saved_history_line_to_use = 0;
   rl_startup_hook = old_rl_startup_hook;
 }
 
 static void
 operate_and_get_next (int count, int c)
 {
   int where;
-  extern int history_stifled, history_length, max_input_history;
 
   // Accept the current line.
 
   rl_newline ();
 
   // Find the current line, and find the next line to use.
 
   where = where_history ();
 
-  if (history_stifled && (history_length >= max_input_history))
+  if ((history_is_stifled () && (history_length >= max_input_history))
+      || (where >= history_length - 1))
     saved_history_line_to_use = where;
   else
     saved_history_line_to_use = where + 1;
 
   old_rl_startup_hook = rl_startup_hook;
   rl_startup_hook = (Function *) set_saved_history;
 }
 
diff --git a/src/pt-const.cc b/src/pt-const.cc
--- a/src/pt-const.cc
+++ b/src/pt-const.cc
@@ -36,16 +36,17 @@ Software Foundation, 59 Temple Place - S
 
 #include "error.h"
 #include "gripes.h"
 #include "oct-map.h"
 #include "oct-str.h"
 #include "pager.h"
 #include "tree-const.h"
 #include "user-prefs.h"
+#include "utils.h"
 
 // The following three variables could be made static members of the
 // tree_constant class.
 
 // Pointer to the blocks of memory we manage.
 static tree_constant *tc_newlist = 0;
 
 // Multiplier for allocating new blocks.
diff --git a/src/sysdep.cc b/src/sysdep.cc
--- a/src/sysdep.cc
+++ b/src/sysdep.cc
@@ -40,16 +40,26 @@ Software Foundation, Inc.
 #include <cstdlib>
 #include <cstring>
 
 #ifdef HAVE_UNISTD_H
 #include <sys/types.h>
 #include <unistd.h>
 #endif
 
+#if defined (HAVE_TERMIOS_H)
+#include <termios.h>
+#elif defined (HAVE_TERMIO_H)
+#include <termio.h>
+#elif defined (HAVE_SGTTY_H)
+#include <sgtty.h>
+#else
+LOSE! LOSE!
+#endif
+
 #include "defun.h"
 #include "error.h"
 #include "f77-uscore.h"
 #include "help.h"
 #include "input.h"
 #include "oct-obj.h"
 #include "octave.h"
 #include "sysdep.h"
@@ -58,26 +68,16 @@ Software Foundation, Inc.
 
 extern "C"
 {
 #include <readline/readline.h>
 
 extern char *term_clrpag;
 extern void _rl_output_character_function ();
 
-#if defined (HAVE_TERMIOS_H)
-#include <termios.h>
-#elif defined (HAVE_TERMIO_H)
-#include <termio.h>
-#elif defined (HAVE_SGTTY_H)
-#include <sgtty.h>
-#else
-LOSE! LOSE!
-#endif
-
 extern double F77_FCN (d1mach, D1MACH) (const int&);
 }
 
 #ifndef STDIN_FILENO
 #define STDIN_FILENO 1
 #endif
 
 // Octave's idea of infinity.
