# HG changeset patch
# User jwe
# Date 813051548 0
#      Sat Oct 07 07:39:08 1995 +0000
# Node ID 3c89376f951f0c171b357d6f9260b0c3b60bf6e4
# Parent  75e8226499460a4eff8e2c7e4e2c2c5a0873bd87
[project @ 1995-10-07 07:38:14 by jwe]

diff --git a/liboctave/Makefile.in b/liboctave/Makefile.in
--- a/liboctave/Makefile.in
+++ b/liboctave/Makefile.in
@@ -25,17 +25,16 @@ MATRIX_INC = Array.h MArray.h Matrix.h m
 	dColVector.h dDiagMatrix.h dMatrix.h dRowVector.h dbleAEPBAL.h \
 	dbleCHOL.h dbleDET.h dbleGEPBAL.h dbleHESS.h dbleLU.h dbleQR.h \
 	dbleQRP.h dbleSCHUR.h dbleSVD.h
 
 INCLUDES = Bounds.h CollocWt.h DAE.h DAEFunc.h FEGrid.h	FSQP.h \
 	LinConst.h LP.h LPsolve.h NLConst.h NLEqn.h NLFunc.h NLP.h \
 	NPSOL.h ODE.h ODEFunc.h Objective.h QLD.h QP.h QPSOL.h \
 	Quad.h Range.h base-min.h lo-error.h f77-uscore.h sun-utils.h \
-	tfloor.h \
 	$(MATRIX_INC)
 
 TEMPLATE_SRC = Array.cc MArray.cc
 
 TI_SRC = Array-C.cc Array-i.cc Array-d.cc MArray-C.cc MArray-d.cc
 
 MATRIX_SRC = CColVector.cc CDiagMatrix.cc CMatrix.cc CRowVector.cc \
 	CmplxAEPBAL.cc CmplxCHOL.cc CmplxDET.cc CmplxHESS.cc CmplxLU.cc \
diff --git a/liboctave/Range.cc b/liboctave/Range.cc
--- a/liboctave/Range.cc
+++ b/liboctave/Range.cc
@@ -207,30 +207,16 @@ tceil (double x, double ct)
 }
 
 static inline double
 round (double x, double ct)
 {
   return tfloor (x+0.5, ct);
 }
 
-
-// Find an approximate number of intervals, then do the best we can to
-// find the number of intervals that we would get if we had done
-// something like
-//
-//   nelem = 0;
-//   while (base + nelem * inc <= limit)
-//     nelem++;
-//
-// (for limit > base && inc > 0)
-//
-// The number of elements in the range is one greater than the number
-// of intervals.
-
 int
 Range::nelem_internal (void) const
 {
   double ct = 3.0 * DBL_EPSILON;
 
   double tmp = round ((rng_limit - rng_base + rng_inc) / rng_inc, ct);
 
   int n_intervals = (int) (tmp > 0.0 ? tmp : 0);
