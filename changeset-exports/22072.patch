# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1467923241 14400
#      Thu Jul 07 16:27:21 2016 -0400
# Node ID 7680225527ef2686e856ce74ae230e962d34faa6
# Parent  7ac3dd72fff92977730acc83e978625e5987014c
maint: Strip trailing whitespace from source files.

diff --git a/scripts/plot/draw/isosurface.m b/scripts/plot/draw/isosurface.m
--- a/scripts/plot/draw/isosurface.m
+++ b/scripts/plot/draw/isosurface.m
@@ -53,19 +53,19 @@
 ## three-dimensional array of the same size as @var{val}, take
 ## those values for the interpolation of coloring the isosurface
 ## geometry. In this case, the structure array @var{fv} has the additional field
 ## @var{facevertexcdata}.
 ##
 ## If given the string input argument @qcode{"noshare"}, vertices might be
 ## returned multiple times for different faces. The default behavior is to
 ## search vertices shared by adjacent faces with @command{unique} which might be
-## time consuming.  
+## time consuming.
 ## The string input argument @qcode{"verbose"} is only for compatibility and
-## has no effect.  
+## has no effect.
 ## The string input arguments must be passed after the other arguments.
 ##
 ## If called with two or three output arguments, return the information about
 ## the faces @var{f}, vertices @var{v} and color data @var{c} as separate arrays
 ## instead of a single structure array.
 ##
 ## If called with no output argument, the isosurface geometry is directly
 ## processed with the @command{patch} command.
@@ -225,24 +225,24 @@ function [x, y, z, data, iso, colors, no
         error ("isosurface: parameter '%s' not supported", varargin{i_arg})
     endswitch
   endfor
 
   ## assign arguments
   switch (nin - num_string_inputs)
     case 1 ## isosurface (val, ...)
       data = varargin{1};
-    case 2 ## isosurface (val, iso, ...) or isosurface (val, col, ...) 
+    case 2 ## isosurface (val, iso, ...) or isosurface (val, col, ...)
       data = varargin{1};
       if (isscalar (varargin{2}) || isempty (varargin{2}))
         iso = varargin{2};
       else
         colors = varargin{2};
       endif
-    case 3 ## isosurface (val, iso, col, ...) 
+    case 3 ## isosurface (val, iso, col, ...)
       data = varargin{1};
       iso = varargin{2};
       colors = varargin{3};
     case 4 ## isosurface (x, y, z, val, ...)
       x = varargin{1};
       y = varargin{2};
       z = varargin{3};
       data = varargin{4};
diff --git a/scripts/plot/draw/private/__unite_shared_vertices__.m b/scripts/plot/draw/private/__unite_shared_vertices__.m
--- a/scripts/plot/draw/private/__unite_shared_vertices__.m
+++ b/scripts/plot/draw/private/__unite_shared_vertices__.m
@@ -11,17 +11,17 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
-## -*- texinfo -*- 
+## -*- texinfo -*-
 ## @deftypefn {} {[@var{faces}, @var{vertices}, @var{J}] =} __unite_shared_vertices__ (@var{faces}, @var{vertices})
 ##
 ## Detect and unite shared vertices in patches
 ##
 ## Vertices of neighboring faces are detected and united to shared vertices. For
 ## this, the mutual squared distances between all vertices are calculated. If
 ## all coordinates are closer than @command{2 * eps (max (abs (vertices(:))))},
 ## the vertices are united to one.
diff --git a/scripts/plot/util/newplot.m b/scripts/plot/util/newplot.m
--- a/scripts/plot/util/newplot.m
+++ b/scripts/plot/util/newplot.m
@@ -198,17 +198,17 @@ function hax = newplot (hsave = [])
       ## Actually, __go_axes_init__ does both less and more.
       ## It doesn't really remove all children since it re-instantiates
       ## xlabel, ylabel, zlabel, and title text objects.
       ## Also it preserves font properties like fontsize.
       ## For the time being, in order to have axis labels and title work,
       ## the above code is is required.
   endswitch
 
-  ## Reset line and color styles when hold is not on 
+  ## Reset line and color styles when hold is not on
   if (! strcmp (anp, "add"))
     set (ca, "colororderindex", 1, "linestyleorderindex", 1);
   endif
 
   if (nargout > 0)
     hax = ca;
   endif
 
