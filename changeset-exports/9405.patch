# HG changeset patch
# User Michael Goffioul <michael.goffioul@gmail.com>
# Date 1246175501 -3600
#      Sun Jun 28 08:51:41 2009 +0100
# Node ID 7cc35bc348ccf374a8d4d26632fe47733a01f447
# Parent  3dea4864921e88d943d0f5f2770f26b7f3f9bdea
Install text engine headers and fix rendering of 90x rotated text.

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,16 @@
+2009-06-28  Michael Goffioul  <michael.goffioul@gmail.com>
+
+	* Makefile.in (INCLUDES): Install txt-eng.h and txt-eng-ft.h.
+	* gl-render.cc (opengl_renderer::draw_text): Fix bitmap offset
+	computation for 90x rotated text.
+	* txt-eng-ft.cc (ft_render::render): Compute bitmap pixels correctly
+	for 90x rotated text.
+
 2009-06-28  Jaroslav Hajek  <highegg@gmail.com>
 
 	* symtab.h (erase_scope (void *)): Remove overload.
 
 2009-06-26  Michael Goffioul  <michael.goffioul@gmail.com>
 
 	* txt-eng.h: New file for simple text engine.
 	* txt-eng.h, txt-eng.cc: Freetype based text render engine.
diff --git a/src/Makefile.in b/src/Makefile.in
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -126,18 +126,18 @@ INCLUDES := Cell.h base-list.h builtins.
 	gripes.h help.h input.h lex.h load-path.h load-save.h ls-hdf5.h \
 	ls-mat-ascii.h ls-mat4.h ls-mat5.h ls-oct-ascii.h ls-ascii-helper.h \
 	ls-oct-binary.h ls-utils.h mex.h mexproto.h oct-errno.h \
 	oct-fstrm.h oct-hdf5.h oct-hist.h oct-iostrm.h oct-map.h oct-obj.h \
 	oct-prcstrm.h oct-procbuf.h oct-stdstrm.h oct-stream.h \
 	zfstream.h oct-strstrm.h oct-lvalue.h oct.h octave.h ops.h \
 	pager.h parse.h pr-output.h procstream.h sighandlers.h \
 	siglist.h sparse-xdiv.h sparse-xpow.h symtab.h sysdep.h \
-	token.h toplev.h unwind-prot.h utils.h variables.h \
-	version.h xdiv.h xnorm.h xpow.h \
+	token.h toplev.h txt-eng.h txt-eng-ft.h unwind-prot.h \
+	utils.h variables.h version.h xdiv.h xnorm.h xpow.h \
 	$(OV_INCLUDES) \
 	$(PT_INCLUDES) \
 	$(OV_SPARSE_INCLUDES)
 
 TI_XSRC := Array-os.cc Array-tc.cc
 
 TI_SRC := $(addprefix TEMPLATE-INST/, $(TI_XSRC))
 
diff --git a/src/gl-render.cc b/src/gl-render.cc
--- a/src/gl-render.cc
+++ b/src/gl-render.cc
@@ -3032,26 +3032,26 @@ opengl_renderer::draw_text (const std::s
     case 3: y0 = bbox(1); break;
     }
 
   switch (rot_mode)
     {
     case ft_render::ROTATION_90:
       std::swap (x0, y0);
       std::swap (w, h);
-      x0 -= bbox(3);
+      x0 = -x0-bbox(3);
       break;
     case ft_render::ROTATION_180:
-      x0 -= bbox(2);
-      y0 -= bbox(3);
+      x0 = -x0-bbox(2);
+      y0 = -y0-bbox(3);
       break;
     case ft_render::ROTATION_270:
       std::swap (x0, y0);
       std::swap (w, h);
-      y0 -= bbox(2);
+      y0 = -y0-bbox(2);
       break;
     }
 
   bool blend = glIsEnabled (GL_BLEND);
 
   glEnable (GL_BLEND);
   glEnable (GL_ALPHA_TEST);
   glRasterPos3d (x, y, z);
diff --git a/src/txt-eng-ft.cc b/src/txt-eng-ft.cc
--- a/src/txt-eng-ft.cc
+++ b/src/txt-eng-ft.cc
@@ -416,24 +416,34 @@ ft_render::render (text_element* elt, Ma
 	  idx(2) = idx_vector (':');
 	  pixels = uint8NDArray (pixels.index (idx));
 	}
       break;
     case ROTATION_180:
 	{
 	  Array<idx_vector> idx (3);
 	  idx(0) = idx_vector (':');
-	  idx(1) = idx_vector (pixels.dim2()-1, 0, -1);
-	  idx(2)=  idx_vector (':');
+	  idx(1) = idx_vector (pixels.dim2()-1, -1, -1);
+	  idx(2)=  idx_vector (pixels.dim3()-1, -1, -1);
 	  pixels = uint8NDArray (pixels.index (idx));
 	}
       break;
     case ROTATION_270:
 	{
-	  // FIXME: implement this...
+	  Array<octave_idx_type> perm (3);
+	  perm(0) = 0;
+	  perm(1) = 2;
+	  perm(2) = 1;
+	  pixels = pixels.permute (perm);
+
+	  Array<idx_vector> idx (3);
+	  idx(0) = idx_vector (':');
+	  idx(1) = idx_vector (':');
+	  idx(2) = idx_vector (pixels.dim3()-1, -1, -1);
+	  pixels = uint8NDArray (pixels.index (idx));
 	}
       break;
     }
 
   return pixels;
 }
 
 #endif // HAVE_FREETYPE
