# HG changeset patch
# User Lachlan Andrew <lachlanbis@gmail.com>
# Date 1463806814 -36000
#      Sat May 21 15:00:14 2016 +1000
# Node ID 23a610a3f0012c2153afb6250125f873aed21681
# Parent  3f0a6bf2540678c30c701f2a7faf6140776d106e
Implement localfunctions Matlab command (bug #47705).

* help.cc (Flocalfunctions): new function.

* NEWS: Added localfunctions to the list of new functions,
        and put psi into its alphabetical position.

* func.txi: Added DOCSTRING.

diff --git a/NEWS b/NEWS
--- a/NEWS
+++ b/NEWS
@@ -77,21 +77,22 @@ Summary of important user-visible change
 
  ** Other new functions added in 4.2:
 
       audioformats
       deg2rad
       evalc
       hash
       im2double
-      psi
+      localfunctions
       odeset
       odeget
       ode45
       padecoef
+      psi
       rad2deg
 
  ** Deprecated functions.
 
     The following functions have been deprecated in Octave 4.2 and will
     be removed from Octave 4.6 (or whatever version is the second major
     release after 4.2):
 
diff --git a/doc/interpreter/func.txi b/doc/interpreter/func.txi
--- a/doc/interpreter/func.txi
+++ b/doc/interpreter/func.txi
@@ -839,16 +839,18 @@ endfunction
 @end example
 
 @noindent
 defines a main function @code{f} and two subfunctions.  The
 subfunctions @code{g} and @code{h} may only be called from the main
 function @code{f} or from the other subfunctions, but not from outside
 the file @file{f.m}.
 
+@DOCSTRING(localfunctions)
+
 @node Private Functions
 @subsection Private Functions
 
 In many cases one function needs to access one or more helper
 functions.  If the helper function is limited to the scope of a single
 function, then subfunctions as discussed above might be used.  However,
 if a single helper function is used by more than one function, then
 this is no longer possible.  In this case the helper functions might
diff --git a/libinterp/corefcn/help.cc b/libinterp/corefcn/help.cc
--- a/libinterp/corefcn/help.cc
+++ b/libinterp/corefcn/help.cc
@@ -39,25 +39,27 @@ along with Octave; see the file COPYING.
 #include "cmd-edit.h"
 #include "file-ops.h"
 #include "file-stat.h"
 #include "oct-env.h"
 #include "oct-locbuf.h"
 #include "str-vec.h"
 
 #include <defaults.h>
+#include "Cell.h"
 #include "defun.h"
 #include "dirfns.h"
 #include "error.h"
 #include "errwarn.h"
 #include "help.h"
 #include "input.h"
 #include "load-path.h"
 #include "ovl.h"
 #include "ov-usr-fcn.h"
+#include "ov-fcn-handle.h"
 #include "pager.h"
 #include "parse.h"
 #include "pathsearch.h"
 #include "procstream.h"
 #include "pt-pr-code.h"
 #include "sighandlers.h"
 #include "symtab.h"
 #include "syswait.h"
@@ -1191,16 +1193,87 @@ DEFUN (__builtins__, , ,
 Undocumented internal function.\n\
 @end deftypefn")
 {
   const string_vector bif = symbol_table::built_in_function_names ();
 
   return ovl (Cell (bif));
 }
 
+DEFUN (localfunctions, args, ,
+       "-*- texinfo -*-\n\
+@deftypefn {} {} localfunctions ()\n\
+Return a list of all local functions, i.e., subfunctions, within the current\n\
+file.\n\
+\n\
+The return value is a column cell array of function handles to all local\n\
+functions accessible from the function from which @code{localfunctions} is\n\
+called.  Nested functions are @emph{not} included in the list.\n\
+\n\
+If the call is from the command line, an anonymous function, or a script,\n\
+the return value is an empty cell array.\n\
+\n\
+Compatibility Note: Subfunctions which contain nested functions are not\n\
+included in the list.  This is a known issue.\n\
+@end deftypefn")
+{
+  if (args.length () != 0)
+    print_usage ();
+
+  Cell retval;
+
+  // Find the main function we are in.
+  octave_user_code *parent_fcn = octave_call_stack::debug_user_code ();
+
+  if (! parent_fcn)
+    return ovl (retval);
+
+  // Find the subfunctions of this function.
+  // FIXME: This includes all nested functions.
+  //        Once handles of nested functions are implemented,
+  //        we will need to exclude ones not in scope.
+  const std::list<std::string> names = parent_fcn->subfunction_names ();
+  const std::map<std::string, octave_value> h = parent_fcn->subfunctions ();
+
+  size_t sz = names.size ();
+  retval.resize (dim_vector (sz, 1));
+
+  // loop over them.
+  size_t i = 0;
+  for (std::list<std::string>::const_iterator p = names.begin ();
+       p != names.end (); p++)
+    {
+      std::map<std::string, octave_value>::const_iterator q = h.find (*p);
+      if (q != h.end () &&
+          ! q->second.user_function_value ()->is_nested_function ())
+        retval(i++) = octave_value (new octave_fcn_handle (q->second, *p));
+    }
+
+  // remove pre-allocation for nested functions
+  retval.resize (dim_vector (i, 1));
+
+  return ovl (retval);
+}
+
+/*
+%!test
+%! f = tempname (".", "oct_");
+%! fcn_name = f(3:end);
+%! fid = fopen ([f ".m"], "w+");
+%! fprintf (fid, "function z = %s\n z = localfunctions; end\n", fcn_name);
+%! fprintf (fid, "function z = b(x)\n z = x+1; end\n");
+%! fprintf (fid, "function z = c(x)\n z = 2*x; end\n");
+%! fclose (fid);
+%! d = eval (fcn_name);
+%! unlink (f);
+%! assert (size (d), [2, 1]);
+%! assert (d{1}(3), 4);
+%! assert (d{2}(3), 6);
+*/
+
 static std::string
 do_which (const std::string& name, std::string& type)
 {
   std::string file;
 
   type = "";
 
   octave_value val = symbol_table::find_function (name);
