# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1362009166 18000
#      Wed Feb 27 18:52:46 2013 -0500
# Node ID 891a2a4df71fb98a6c8b056d1a51f214a7e4fa94
# Parent  49dfba4fd3c53b0612f57271c3a154a71b6be24a
* lex.ll: Use C-style comments in preamble.

diff --git a/libinterp/parse-tree/lex.ll b/libinterp/parse-tree/lex.ll
--- a/libinterp/parse-tree/lex.ll
+++ b/libinterp/parse-tree/lex.ll
@@ -15,24 +15,26 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-// We are using the pure parser interface and the reentrant lexer
-// interface but the Octave parser and lexer are NOT properly
-// reentrant because both still use many global variables.  It should be
-// safe to create a parser object and call it while anotehr parser
-// object is active (to parse a callback function while the main
-// interactive parser is waiting for input, for example) if you take
-// care to properly save and restore (typically with an unwind_protect
-// object) relevant global values before and after the nested call.
+/*
+We are using the pure parser interface and the reentrant lexer
+interface but the Octave parser and lexer are NOT properly
+reentrant because both still use many global variables.  It should be
+safe to create a parser object and call it while anotehr parser
+object is active (to parse a callback function while the main
+interactive parser is waiting for input, for example) if you take
+care to properly save and restore (typically with an unwind_protect
+object) relevant global values before and after the nested call.
+*/
 
 %option prefix = "octave_"
 %option noyywrap
 %option reentrant
 %option bison-bridge
 
 %top {
 #ifdef HAVE_CONFIG_H
