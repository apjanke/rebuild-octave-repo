# HG changeset patch
# User jwe
# Date 1190145066 0
#      Tue Sep 18 19:51:06 2007 +0000
# Node ID 40be41c7d0984eac41079066f9f7f2afb1a9f1ff
# Parent  f779c83d6ccf638cea421a86102ff89639063b03
[project @ 2007-09-18 19:51:06 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2007-09-18  John W. Eaton  <jwe@octave.org>
+
+	* plot/__go_draw_axes__.m: Use %.15g throughout.
+	(do_tics_1): Set numeric axes formats to "%.15g".
+
 2007-09-18  David Bateman  <dbateman@free.fr>
 
 	* plot/__go_draw_axes__.m (__gnuplot_write_data__): Use %e instead
 	of %g when writing data.
 
 2007-09-17  John W. Eaton  <jwe@octave.org>
 
 	* plot/__go_draw_axes__.m: Omit linestyle clause for errorbar plots.
diff --git a/scripts/plot/__go_draw_axes__.m b/scripts/plot/__go_draw_axes__.m
--- a/scripts/plot/__go_draw_axes__.m
+++ b/scripts/plot/__go_draw_axes__.m
@@ -31,29 +31,29 @@ function __go_draw_axes__ (h, plot_strea
 
     persistent have_newer_gnuplot ...
       = compare_versions (__gnuplot_version__ (), "4.0", ">");
 
     ## Set axis properties here?
 
     if (! isempty (axis_obj.outerposition))
       pos = axis_obj.outerposition;
-      fprintf (plot_stream, "set origin %g, %g;\n", pos(1), pos(2));
-      fprintf (plot_stream, "set size %g, %g;\n", pos(3), pos(4));
+      fprintf (plot_stream, "set origin %.15g, %.15g;\n", pos(1), pos(2));
+      fprintf (plot_stream, "set size %.15g, %.15g;\n", pos(3), pos(4));
     endif
 
     if (! isempty (axis_obj.position))
       pos = axis_obj.position;
-      fprintf (plot_stream, "set origin %g, %g;\n", pos(1), pos(2));
-      fprintf (plot_stream, "set size %g, %g;\n", pos(3), pos(4));
+      fprintf (plot_stream, "set origin %.15g, %.15g;\n", pos(1), pos(2));
+      fprintf (plot_stream, "set size %.15g, %.15g;\n", pos(3), pos(4));
     endif
 
     if (strcmpi (axis_obj.dataaspectratiomode, "manual"))
       r = axis_obj.dataaspectratio;
-      fprintf (plot_stream, "set size ratio %g;\n", -r(2)/r(1));
+      fprintf (plot_stream, "set size ratio %.15g;\n", -r(2)/r(1));
     else
       fputs (plot_stream, "set size noratio;\n");
     endif
 
     fputs (plot_stream, "unset label;\n");
 
     if (! isempty (axis_obj.title))
       t = get (axis_obj.title);
@@ -283,17 +283,17 @@ function __go_draw_axes__ (h, plot_strea
 		       palette_size);
 	      fprintf (plot_stream,
 		       "set palette file \"-\" binary record=%d using 1:2:3:4;\n",
 		       palette_size);
 	      fwrite (plot_stream, [1:palette_size; img_colormap'], "float32");
 	    endif
 
 	    titlespec{data_idx} = "title \"\"";
-	    usingclause{data_idx} = sprintf ("binary array=%dx%d scan=yx origin=(%g,%g) dx=%g dy=%g using %s",
+	    usingclause{data_idx} = sprintf ("binary array=%dx%d scan=yx origin=(%.15g,%.15g) dx=%.15g dy=%.15g using %s",
 		x_dim, y_dim, x_origin, y_origin, dx, dy, format);
 	    withclause{data_idx} = sprintf ("with %s", imagetype);
 
 	  else
 	    ximg_data{++ximg_data_idx} = img_data;
 	  endif
 
 	case "line"
@@ -667,22 +667,22 @@ function __go_draw_axes__ (h, plot_strea
 		typ = -1;
 	      endif
 	      colorspec = sprintf ("textcolor lt %d", typ);
 	    endif
 	  endif
 
 	  if (nd == 3)
 	    fprintf (plot_stream,
-		     "set label \"%s\" at %s %g,%g,%g %s rotate by %f %s;\n",
+		     "set label \"%s\" at %s %.15g,%.15g,%.15g %s rotate by %f %s;\n",
 		     undo_string_escapes (label), units,
 		     lpos(1), lpos(2), lpos(3), halign, angle, colorspec);
 	  else
 	    fprintf (plot_stream,
-		     "set label \"%s\" at %s %g,%g %s rotate by %f %s;\n",
+		     "set label \"%s\" at %s %.15g,%.15g %s rotate by %f %s;\n",
 		     undo_string_escapes (label), units,
 		     lpos(1), lpos(2), halign, angle, colorspec);
 	  endif
 
 	otherwise
 	  error ("__go_draw_axes__: unknown object class, %s",
 		 obj.type);
       endswitch
@@ -697,44 +697,44 @@ function __go_draw_axes__ (h, plot_strea
     else
       xlim = axis_obj.xlim;
     endif
     if (strcmpi (axis_obj.xdir, "reverse"))
       xdir = "reverse";
     else
       xdir = "noreverse";
     endif
-    fprintf (plot_stream, "set %srange [%g:%g] %s;\n", xaxisloc, xlim, xdir);
+    fprintf (plot_stream, "set %srange [%.15g:%.15g] %s;\n", xaxisloc, xlim, xdir);
 
     if (yautoscale && have_data)
       ylim = get_axis_limits (ymin, ymax, yminp, ylogscale);
       set (h, "ylim", ylim, "ylimmode", "auto");
     else
       ylim = axis_obj.ylim;
     endif
     if (strcmpi (axis_obj.ydir, "reverse"))
       ydir = "reverse";
     else
       ydir = "noreverse";
     endif
-    fprintf (plot_stream, "set %srange [%g:%g] %s;\n", yaxisloc, ylim, ydir);
+    fprintf (plot_stream, "set %srange [%.15g:%.15g] %s;\n", yaxisloc, ylim, ydir);
 
     if (nd == 3)
       if (zautoscale && have_data)
 	zlim = get_axis_limits (zmin, zmax, zminp, zlogscale);
 	set (h, "zlim", zlim, "zlimmode", "auto");
       else
 	zlim = axis_obj.zlim;
       endif
       if (strcmpi (axis_obj.zdir, "reverse"))
 	zdir = "reverse";
       else
 	zdir = "noreverse";
       endif
-      fprintf (plot_stream, "set zrange [%g:%g] %s;\n", zlim, zdir);
+      fprintf (plot_stream, "set zrange [%.15g:%.15g] %s;\n", zlim, zdir);
     endif
 
     if (strcmpi (axis_obj.box, "on"))
       if (nd == 3)
 	fputs (plot_stream, "set border 4095;\n");
       else
 	fputs (plot_stream, "set border 431;\n");
       endif
@@ -792,17 +792,17 @@ function __go_draw_axes__ (h, plot_strea
       else
 	plot_cmd = "splot";
 	rot_x = 90 - axis_obj.view(2);
 	rot_z = axis_obj.view(1);
 	while (rot_z < 0)
 	  rot_z += 360;
 	endwhile
  	fputs (plot_stream, "set ticslevel 0;\n");
-	fprintf (plot_stream, "set view %g, %g;\n", rot_x, rot_z);
+	fprintf (plot_stream, "set view %.15g, %.15g;\n", rot_x, rot_z);
       endif
       fprintf (plot_stream, "%s \"-\" %s %s %s \\\n", plot_cmd,
 	       usingclause{1}, titlespec{1}, withclause{1});
       for i = 2:data_idx
 	fprintf (plot_stream, ", \"-\" %s %s %s \\\n",
 		 usingclause{i}, titlespec{i}, withclause{i});
       endfor
       fputs (plot_stream, ";\n");
@@ -1051,17 +1051,17 @@ function __gnuplot_write_data__ (plot_st
   ## "NA" and that confuses gnuplot.
   idx = find (isna (data));
   if (any (idx))
     data(idx) = NaN;
   endif
 
   if (nd == 2)
     nan_elts = find (sum (isnan (data)));
-    fmt = strcat (repmat ("%e ", 1, rows (data)), "\n");
+    fmt = strcat (repmat ("%.15g ", 1, rows (data)), "\n");
     if (isempty (nan_elts))
       fprintf (plot_stream, fmt, data);
     else
       n = columns (data);
       have_nans = true;
       num_nan_elts = numel (nan_elts);
       k = 1;
       for i = 1:n
@@ -1071,21 +1071,21 @@ function __gnuplot_write_data__ (plot_st
 	else
 	  fprintf (plot_stream, fmt, data(:,i));
 	endif
       endfor
     endif
   else
     ## FIXME -- handle NaNs here too?
     if (parametric)
-      fprintf (plot_stream, "%e %e %e\n", data);
+      fprintf (plot_stream, "%.15g %.15g %.15g\n", data);
     else
       nc = columns (data);
       for j = 1:3:nc
-	fprintf (plot_stream, "%e %e %e\n", data(:,j:j+2)');
+	fprintf (plot_stream, "%.15g %.15g %.15g\n", data(:,j:j+2)');
 	fputs (plot_stream, "\n");
       endfor
     endif
   endif
   fputs (plot_stream, "e\n");
 
 endfunction
 
@@ -1126,29 +1126,31 @@ function do_tics_1 (ticmode, tics, label
       endif
       if (iscellstr (labels))
 	k = 1;
 	ntics = numel (tics);
 	nlabels = numel (labels);
 	fprintf (plot_stream, "set format %s \"%%s\";\n", ax);
 	fprintf (plot_stream, "set %stics (", ax);
 	for i = 1:ntics
-	  fprintf (plot_stream, " \"%s\" %g", labels(k++), tics(i))
+	  fprintf (plot_stream, " \"%s\" %.15g", labels(k++), tics(i))
 	  if (i < ntics)
 	    fputs (plot_stream, ", ");
 	  endif
 	  if (k > nlabels)
 	    k = 1;
 	  endif
 	endfor
 	fputs (plot_stream, ");\n");
       else
 	error ("unsupported type of ticklabel");
       endif
     else
+      fprintf (plot_stream, "set format %s \"%%.15g\";\n", ax);
       fprintf (plot_stream, "set %stics (", ax);
-      fprintf (plot_stream, " %g,", tics(1:end-1));
-      fprintf (plot_stream, " %g);\n", tics(end));
+      fprintf (plot_stream, " %.15g,", tics(1:end-1));
+      fprintf (plot_stream, " %.15g);\n", tics(end));
     endif
   else
+    fprintf (plot_stream, "set format %s \"%%.15g\";\n", ax);
     fprintf (plot_stream, "set %stics;\n", ax);
   endif
 endfunction
