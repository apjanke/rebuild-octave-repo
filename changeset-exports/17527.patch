# HG changeset patch
# User Rik <rik@octave.org>
# Date 1380661751 25200
#      Tue Oct 01 14:09:11 2013 -0700
# Node ID 76614e624818cc513eb6b65f530723f2a0535bc3
# Parent  4f1dd8a980df91f6fa2c259c1458ef5c5cb79625
Add "HitTestArea" property to certain hggroups for Matlab compatibility

* scripts/plot/area.m, scripts/plot/private/__bar__.m,
scripts/plot/private/__contour__.m, scripts/plot/private/__errplot__.m,
scripts/plot/private/__quiver__.m, scripts/plot/private/__scatter__.m,
scripts/plot/private/__stem__.m, scripts/plot/stairs.m:
Add "HitTestArea" property for Matlab compatibility.  Octave doesn't
do anything with the property though.

diff --git a/scripts/plot/area.m b/scripts/plot/area.m
--- a/scripts/plot/area.m
+++ b/scripts/plot/area.m
@@ -171,16 +171,19 @@ function retval = __area__ (ax, x, y, bv
     addlistener (hg, "edgecolor", @update_props);
     addlistener (hg, "facecolor", @update_props);
     addlistener (hg, "linestyle", @update_props);
     addlistener (hg, "linewidth", @update_props);
 
     addproperty ("areagroup", hg, "data");
     set (retval, "areagroup", retval);
 
+    ## Matlab property, although Octave does not implement it.
+    addproperty ("hittestarea", hg, "radio", "on|{off}", "off");
+
     if (! isempty (args))
       set (hg, args{:});
     endif
   endfor
 
 endfunction
 
 function update_props (h, d)
diff --git a/scripts/plot/private/__bar__.m b/scripts/plot/private/__bar__.m
--- a/scripts/plot/private/__bar__.m
+++ b/scripts/plot/private/__bar__.m
@@ -314,16 +314,20 @@ function hglist = bars (hax, vertical, x
     endif
     addproperty ("ydata", hg, "data", y(:, i));
 
     addlistener (hg, "xdata", @update_data);
     addlistener (hg, "ydata", @update_data);
 
     addproperty ("bargroup", hg, "data");
     set (hglist, "bargroup", hglist);
+
+    ## Matlab property, although Octave does not implement it.
+    addproperty ("hittestarea", hg, "radio", "on|{off}", "off");
+
     if (! isempty (args))
       set (hg, args{:});
     endif
   endfor
 
   update_xlim (hax, []);
   ## Add listeners outside of for loop to prevent constant updating during
   ## creation of plot when patch objects are added.
diff --git a/scripts/plot/private/__contour__.m b/scripts/plot/private/__contour__.m
--- a/scripts/plot/private/__contour__.m
+++ b/scripts/plot/private/__contour__.m
@@ -160,16 +160,19 @@ function [c, hg] = __contour__ (varargin
   addproperty ("textstep", hg, "double", lvlstep);
   addproperty ("textstepmode", hg, "radio", "{auto}|manual", "auto");
   addproperty ("showtext", hg, "radio", "on|{off}", "off");
 
   addproperty ("linecolor", hg, "color", linespec.color, "{auto}|none");
   addproperty ("linestyle", hg, "linelinestyle", linespec.linestyle);
   addproperty ("linewidth", hg, "linelinewidth", 0.5);
 
+  ## Matlab property, although Octave does not implement it.
+  addproperty ("hittestarea", hg, "radio", "on|{off}", "off");
+
   addlistener (hg, "fill", {@update_data, "fill"});
 
   addlistener (hg, "zlevelmode", @update_zlevel);
   addlistener (hg, "zlevel", @update_zlevel);
 
   addlistener (hg, "levellist", {@update_data, "levellist"});
   addlistener (hg, "levelstep", {@update_data, "levelstep"});
   addlistener (hg, "levellistmode", @update_data);
diff --git a/scripts/plot/private/__errplot__.m b/scripts/plot/private/__errplot__.m
--- a/scripts/plot/private/__errplot__.m
+++ b/scripts/plot/private/__errplot__.m
@@ -164,16 +164,19 @@ function h = __errplot__ (fstr, hax, var
     addproperty ("marker", hg, "linemarker", get (hl(1), "marker"));
     addproperty ("markeredgecolor", hg, "linemarkerfacecolor",
                  get (hl(1), "markeredgecolor"));
     addproperty ("markerfacecolor", hg, "linemarkerfacecolor",
                  get (hl(1), "markerfacecolor"));
     addproperty ("markersize", hg, "linemarkersize",
                  get (hl(1), "markersize"));
 
+    ## Matlab property, although Octave does not implement it.
+    addproperty ("hittestarea", hg, "radio", "on|{off}", "off");
+
     fcn = {@update_props, hl};
     addlistener (hg, "color", fcn);
     addlistener (hg, "linestyle", fcn);
     addlistener (hg, "linewidth", fcn);
     addlistener (hg, "marker", fcn);
     addlistener (hg, "markeredgecolor", fcn);
     addlistener (hg, "markerfacecolor", fcn);
     addlistener (hg, "markersize", fcn);
diff --git a/scripts/plot/private/__quiver__.m b/scripts/plot/private/__quiver__.m
--- a/scripts/plot/private/__quiver__.m
+++ b/scripts/plot/private/__quiver__.m
@@ -315,16 +315,19 @@ function hg = __quiver__ (varargin)
 
     addlistener (hg, "color", @update_props);
     addlistener (hg, "linewidth", @update_props);
     addlistener (hg, "linestyle", @update_props);
     addlistener (hg, "marker", @update_props);
     addlistener (hg, "markerfacecolor", @update_props);
     addlistener (hg, "markersize", @update_props);
 
+    ## Matlab property, although Octave does not implement it.
+    addproperty ("hittestarea", hg, "radio", "on|{off}", "off");
+
     if (! isempty (args))
       set (hg, args{:});
     endif
   unwind_protect_cleanup
     set (h, "nextplot", hstate);
   end_unwind_protect
 
 endfunction
diff --git a/scripts/plot/private/__scatter__.m b/scripts/plot/private/__scatter__.m
--- a/scripts/plot/private/__scatter__.m
+++ b/scripts/plot/private/__scatter__.m
@@ -254,16 +254,19 @@ function hg = __scatter__ (varargin)
       addproperty ("markeredgecolor", hg, "patchmarkeredgecolor", "flat");
     endif
   endif
   addlistener (hg, "linewidth", @update_props);
   addlistener (hg, "marker", @update_props);
   addlistener (hg, "markerfacecolor", @update_props);
   addlistener (hg, "markeredgecolor", @update_props);
 
+  ## Matlab property, although Octave does not implement it.
+  addproperty ("hittestarea", hg, "radio", "on|{off}", "off");
+
   if (! isempty (newargs))
     set (hg, newargs{:});
   endif
 
 endfunction
 
 function render_size_color (hg, vert, s, c, marker, filled, isflat)
   if (isscalar (s))
diff --git a/scripts/plot/private/__stem__.m b/scripts/plot/private/__stem__.m
--- a/scripts/plot/private/__stem__.m
+++ b/scripts/plot/private/__stem__.m
@@ -138,16 +138,19 @@ function h = __stem__ (have_z, varargin)
       else
         addproperty ("zdata", hg, "data", []);
       endif
 
       addlistener (hg, "xdata", @update_data);
       addlistener (hg, "ydata", @update_data);
       addlistener (hg, "zdata", @update_data);
 
+      ## Matlab property, although Octave does not implement it.
+      addproperty ("hittestarea", hg, "radio", "on|{off}", "off");
+
       if (! isempty (args))
         set (hg, args{:});
       endif
       if (i == 1 && ! isempty (h_baseline))
         set (h_baseline, "parent", get (hg, "parent"));
       endif
     endfor
 
diff --git a/scripts/plot/stairs.m b/scripts/plot/stairs.m
--- a/scripts/plot/stairs.m
+++ b/scripts/plot/stairs.m
@@ -213,16 +213,19 @@ function [h, xs, ys] = __stairs__ (doplo
         addlistener (hg, "color", @update_props);
         addlistener (hg, "linestyle", @update_props);
         addlistener (hg, "linewidth", @update_props);
         addlistener (hg, "marker", @update_props);
         addlistener (hg, "markeredgecolor", @update_props);
         addlistener (hg, "markerfacecolor", @update_props);
         addlistener (hg, "markersize", @update_props);
 
+        ## Matlab property, although Octave does not implement it.
+        addproperty ("hittestarea", hg, "radio", "on|{off}", "off");
+
         if (! isempty (args))
           set (hg, args{:});
         endif
       endfor
     unwind_protect_cleanup
       set (gca (), "nextplot", hold_state);
     end_unwind_protect
   else
