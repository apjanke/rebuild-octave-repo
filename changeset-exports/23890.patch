# HG changeset patch
# User Allan Jacobs <allanjacobs@savannah.gnu.org>
# Date 1434998279 25200
#      Mon Jun 22 11:37:59 2015 -0700
# Node ID 89a1ed157a2a41128384d7beb79852ac77970549
# Parent  97a237af2812b493e5ec461a656dc40728906652
* z_test_2.m: New tests resembling those in z_test.m (bug #45378).

diff --git a/scripts/statistics/tests/z_test_2.m b/scripts/statistics/tests/z_test_2.m
--- a/scripts/statistics/tests/z_test_2.m
+++ b/scripts/statistics/tests/z_test_2.m
@@ -83,8 +83,62 @@ function [pval, z] = z_test_2 (x, y, v_x
     s = ["Two-sample Z-test of mean(x) == mean(y) against ", ...
          "mean(x) %s mean(y),\n",                            ...
          "with known var(x) == %g and var(y) == %g:\n",      ...
          "  pval = %g\n"];
     printf (s, alt, v_x, v_y, pval);
   endif
 
 endfunction
+
+#!test
+%! ## Two-sided (also the default option)
+%! x = randn (100, 1); v_x = 2; x = v_x * x;
+%! [pval, z] = z_test_2 (x, x, v_x, v_x);
+%! zval_exp = 0; pval_exp = 1.0;
+%! assert (zval, zval_exp, eps);
+%! assert (pval, pval_exp, eps);
+
+#!test
+%! ## Two-sided (also the default option)
+%! x = randn (10000, 1); v_x = 2; x = v_x * x; n_x = length (x);
+%! y = randn (20000, 1); v_y = 3; y = v_y * y; n_y = length (y);
+%! [pval, z] = z_test_2 (x, y, v_x, v_y);
+%! if (mean (x) >= mean (y))
+%!   zval = abs (norminv (0.5*pval));
+%! else
+%!   zval = -abs (norminv (0.5*pval));
+%! endif
+%! unew = zval * sqrt (v_x/n_x + v_y/n_y);
+%! delmu = mean (x) - mean (y);
+%! assert (delmu, unew, 100*eps);
+
+#!test
+%! x = randn (100, 1); v_x = 2; x = v_x * x;
+%! [pval, z] = z_test_2 (x, x, v_x, v_x, ">");
+%! zval_exp = 0; pval_exp = 0.5;
+%! assert (zval, zval_exp, eps);
+%! assert (pval, pval_exp, eps);
+
+%!test
+%! x = randn (10000, 1); v_x = 2; x = v_x * x; n_x = length (x);
+%! y = randn (20000, 1); v_y = 3; y = v_y * y; n_y = length (y);
+%! [pval, z] = z_test_2 (x, y, v_x, v_y, ">");
+%! zval = norminv (1-pval);
+%! unew = zval * sqrt (v_x/n_x + v_y/n_y);
+%! delmu = mean (x) - mean (y);
+%! assert (delmu, unew, 100*eps);
+
+%!test
+%! x = randn (100, 1); v_x = 2; x = v_x * x;
+%! [pval, zval] = z_test_2 (x, x, v_x, v_x, "<");
+%! zval_exp = 0; pval_exp = 0.5;
+%! assert (zval, zval_exp, eps);
+%! assert (pval, pval_exp, eps);
+
+%!test
+%! x = randn (10000, 1); v_x = 2; x = v_x * x; n_x = length (x);
+%! y = randn (20000, 1); v_y = 3; y = v_y * y; n_y = length (y);
+%! [pval, z] = z_test_2 (x, y, v_x, v_y, "<");
+%! zval = norminv (pval);
+%! unew = zval * sqrt (v_x/n_x + v_y/n_y);
+%! delmu = mean (x) - mean (y);
+%! assert (delmu, unew, 100*eps);
