# HG changeset patch
# User Torsten <mttl@mailbox.org>
# Date 1526198874 -7200
#      Sun May 13 10:07:54 2018 +0200
# Node ID 41bbdf17f51a2c7252114aba6cb16cea040009a5
# Parent  9cc1ca6538e3de1ab1f02167e8b7835e65fa0975
make shortcuts for searching within the documentation configurable

* documentation.cc: include shortcut-manager.h,
  (documentation): use class variables for the shortcuts;
  (notice_settings): get the configured shortcuts via shortcut manager;

* documentation.h: include QShortcut, new class variables for the used
  shortcuts

* shortcut-manager.cc (do_shortcut): new method for reading a shortcut
  from the settings file;
  (do_fill_treewidget): create a new section for shortcuts for searching
  in dock widgets, put editor find shortcuts into this new section;

*  shortcut-manager.h (shortcut): new static method, calling new method
   do_shortcut

diff --git a/libgui/src/documentation.cc b/libgui/src/documentation.cc
--- a/libgui/src/documentation.cc
+++ b/libgui/src/documentation.cc
@@ -36,30 +36,33 @@ along with Octave; see the file COPYING.
 #include <QHelpContentWidget>
 #include <QHelpIndexWidget>
 #include <QHelpSearchEngine>
 #include <QHelpSearchQueryWidget>
 #include <QHelpSearchResultWidget>
 #include <QLabel>
 #include <QLineEdit>
 #include <QMessageBox>
-#include <QShortcut>
 #include <QTabWidget>
 #include <QToolButton>
 #include <QVBoxLayout>
 
 #include "documentation.h"
 #include "resource-manager.h"
+#include "shortcut-manager.h"
 
 namespace octave
 {
   // The documentation splitter, which is the main widget
   // of the doc dock widget
   documentation::documentation (QWidget *p)
-    : QSplitter (Qt::Horizontal, p)
+    : QSplitter (Qt::Horizontal, p),
+      m_show_shortcut (new QShortcut (p)),
+      m_findnext_shortcut (new QShortcut (p)),
+      m_findprev_shortcut (new QShortcut (p))
   {
     // Get original collection
     QString collection = getenv ("OCTAVE_QTHELP_COLLECTION");
     if (collection.isEmpty ())
       collection = QString::fromStdString (config::oct_doc_dir ()
                                            + sys::file_ops::dir_sep_str ()
                                            + "octave_interpreter.qhc");
 
@@ -128,38 +131,40 @@ namespace octave
     h_box_find_footer->setMargin (2);
     find_footer->setLayout (h_box_find_footer);
 
     QVBoxLayout *v_box_browser_find = new QVBoxLayout (browser_find);
     v_box_browser_find->addWidget (m_doc_browser);
     v_box_browser_find->addWidget (find_footer);
     browser_find->setLayout (v_box_browser_find);
 
-    QShortcut *show_shortcut = new QShortcut (QKeySequence (QKeySequence::Find), p);
-    show_shortcut->setContext (Qt::WidgetWithChildrenShortcut);
-    connect (show_shortcut, SIGNAL (activated (void)),
+    notice_settings (resource_manager::get_settings ());
+
+    m_show_shortcut->setContext (Qt::WidgetWithChildrenShortcut);
+    connect (m_show_shortcut, SIGNAL (activated (void)),
              m_find_line_edit->parentWidget (), SLOT (show (void)));
-    connect (show_shortcut, SIGNAL (activated (void)),
+    connect (m_show_shortcut, SIGNAL (activated (void)),
              m_find_line_edit, SLOT (selectAll (void)));
-    connect (show_shortcut, SIGNAL (activated (void)),
+    connect (m_show_shortcut, SIGNAL (activated (void)),
              m_find_line_edit, SLOT (setFocus (void)));
     QShortcut *hide_shortcut = new QShortcut (Qt::Key_Escape, p);
+
     hide_shortcut->setContext (Qt::WidgetWithChildrenShortcut);
     connect (hide_shortcut, SIGNAL (activated (void)),
              m_find_line_edit->parentWidget (), SLOT(hide (void)));
     connect (hide_shortcut, SIGNAL (activated (void)),
              m_doc_browser, SLOT (setFocus (void)));
-    QShortcut *findnext_shortcut = new QShortcut (QKeySequence (QKeySequence::FindNext), p);
-    findnext_shortcut->setContext (Qt::WidgetWithChildrenShortcut);
-    connect (findnext_shortcut, SIGNAL (activated (void)),
+
+    m_findnext_shortcut->setContext (Qt::WidgetWithChildrenShortcut);
+    connect (m_findnext_shortcut, SIGNAL (activated (void)),
              this, SLOT(find_forward (void)));
-    QShortcut *findprev_shortcut = new QShortcut (QKeySequence (QKeySequence::FindPrevious), p);
-    findprev_shortcut->setContext (Qt::WidgetWithChildrenShortcut);
-    connect (findprev_shortcut, SIGNAL (activated (void)),
+    m_findprev_shortcut->setContext (Qt::WidgetWithChildrenShortcut);
+    connect (m_findprev_shortcut, SIGNAL (activated (void)),
              this, SLOT(find_backward (void)));
+
     find_footer->hide ();
     m_search_anchor_position = 0;
 
     // Layout contents, index and search
     QTabWidget *navi = new QTabWidget (this);
     navi->setTabsClosable (false);
     navi->setMovable (true);
 
@@ -290,17 +295,22 @@ namespace octave
     qApp->setOverrideCursor(QCursor(Qt::WaitCursor));
   }
 
   void documentation::global_search_finished (int)
   {
     qApp->restoreOverrideCursor();
   }
 
-  void documentation::notice_settings (const QSettings *) { }
+  void documentation::notice_settings (const QSettings *)
+  {
+    shortcut_manager::shortcut (m_show_shortcut, "editor_edit:find_replace");
+    shortcut_manager::shortcut (m_findnext_shortcut, "editor_edit:find_next");
+    shortcut_manager::shortcut (m_findprev_shortcut, "editor_edit:find_previous");
+  }
 
   void documentation::copyClipboard (void) { }
 
   void documentation::pasteClipboard (void) { }
 
   void documentation::selectAll (void) { }
 
   void documentation::load_ref (const QString& ref_name)
diff --git a/libgui/src/documentation.h b/libgui/src/documentation.h
--- a/libgui/src/documentation.h
+++ b/libgui/src/documentation.h
@@ -21,16 +21,17 @@ along with Octave; see the file COPYING.
 */
 
 #if ! defined (octave_documentation_h)
 #define octave_documentation_h 1
 
 #include <QComboBox>
 #include <QWidget>
 #include <QSettings>
+#include <QShortcut>
 #include <QSplitter>
 #include <QTextBrowser>
 #include <QtHelp/QHelpEngine>
 
 namespace octave
 {
   // The documentation browser
   class documentation_browser : public QTextBrowser
@@ -96,13 +97,16 @@ namespace octave
 
     QHelpEngine *m_help_engine;
     documentation_browser *m_doc_browser;
     QLineEdit *m_find_line_edit;
     int m_search_anchor_position;
     QComboBox *m_filter;
     QString m_collection;
 
+    QShortcut *m_show_shortcut;
+    QShortcut *m_findnext_shortcut;
+    QShortcut *m_findprev_shortcut;
   };
 
 }
 
 #endif
diff --git a/libgui/src/shortcut-manager.cc b/libgui/src/shortcut-manager.cc
--- a/libgui/src/shortcut-manager.cc
+++ b/libgui/src/shortcut-manager.cc
@@ -504,16 +504,29 @@ namespace octave
 
     if (index > -1 && index < m_sc.count ())
       action->setShortcut (QKeySequence (
                                          m_settings->value ("shortcuts/" + key, m_sc.at (index).m_default_sc).toString ()));
     else
       qDebug () << "Key: " << key << " not found in m_action_hash";
   }
 
+  void shortcut_manager::do_shortcut (QShortcut *sc, const QString& key)
+  {
+    int index;
+
+    index = m_action_hash[key] - 1;
+
+    if (index > -1 && index < m_sc.count ())
+      sc->setKey (QKeySequence (m_settings->value ("shortcuts/" + key,
+                                m_sc.at (index).m_default_sc).toString ()));
+    else
+      qDebug () << "Key: " << key << " not found in m_action_hash";
+  }
+
   void shortcut_manager::do_fill_treewidget (QTreeWidget *tree_view)
   {
     m_dialog = nullptr;
     m_level_hash.clear ();
 
 #if defined (HAVE_QHEADERVIEW_SETSECTIONRESIZEMODE)
     tree_view->header ()->setSectionResizeMode (QHeaderView::ResizeToContents);
 #else
@@ -532,25 +545,28 @@ namespace octave
     QTreeWidgetItem *main_window = new QTreeWidgetItem (main);
     main_window->setText (0, tr ("Window Menu"));
     QTreeWidgetItem *main_help = new QTreeWidgetItem (main);
     main_help->setText (0, tr ("Help Menu"));
     QTreeWidgetItem *main_news = new QTreeWidgetItem (main);
     main_news->setText (0, tr ("News Menu"));
     QTreeWidgetItem *main_tabs = new QTreeWidgetItem (main);
     main_tabs->setText (0, tr ("Tab Handling in Dock Widgets"));
+    QTreeWidgetItem *main_find = new QTreeWidgetItem (main);
+    main_find->setText (0, tr ("Find & Replace in Dock Widgets"));
 
     m_level_hash["main_file"]   = main_file;
     m_level_hash["main_edit"]   = main_edit;
     m_level_hash["main_debug"]   = main_debug;
     m_level_hash["main_window"]   = main_window;
     m_level_hash["main_help"]   = main_help;
     m_level_hash["main_news"]   = main_news;
     m_level_hash["main_tabs"]   = main_tabs;
     m_level_hash["editor_tabs"]   = main_tabs;
+    m_level_hash["editor_find"]   = main_find;
 
     QTreeWidgetItem *editor = new QTreeWidgetItem (tree_view);
     editor->setText (0, tr ("Editor"));
     editor->setExpanded (true);
     QTreeWidgetItem *editor_file = new QTreeWidgetItem (editor);
     editor_file->setText (0, tr ("File Menu"));
     QTreeWidgetItem *editor_edit = new QTreeWidgetItem (editor);
     editor_edit->setText (0, tr ("Edit Menu"));
@@ -582,16 +598,22 @@ namespace octave
         // handle sections which have changed and do not correspond to the
         // previously defined keyname
         if (section == editor_file)
           {
             // Closing tabs now in global tab handling section
             if (sc.m_settings_key.contains ("editor_file:close"))
               section = main_tabs;
           }
+        if (section == editor_edit)
+          {
+            // Find & replace now in global file & replace handling section
+            if (sc.m_settings_key.contains ("editor_edit:find"))
+              section = main_find;
+          }
 
         QTreeWidgetItem *tree_item = new QTreeWidgetItem (section);
 
         // set a slightly transparent foreground for default columns
         QColor fg = QColor (tree_item->foreground (1).color ());
         fg.setAlpha (128);
         tree_item->setForeground (1, QBrush (fg));
 
diff --git a/libgui/src/shortcut-manager.h b/libgui/src/shortcut-manager.h
--- a/libgui/src/shortcut-manager.h
+++ b/libgui/src/shortcut-manager.h
@@ -24,16 +24,17 @@ along with Octave; see the file COPYING.
 #define octave_shortcut_manager_h 1
 
 #include <QWidget>
 #include <QTreeWidget>
 #include <QLineEdit>
 #include <QKeyEvent>
 #include <QLabel>
 #include <QSettings>
+#include <QShortcut>
 
 namespace octave
 {
   class enter_shortcut : public QLineEdit
   {
     Q_OBJECT
 
   public:
@@ -90,16 +91,22 @@ namespace octave
     }
 
     static void set_shortcut (QAction *action, const QString& key)
     {
       if (instance_ok ())
         instance->do_set_shortcut (action, key);
     }
 
+    static void shortcut (QShortcut *sc, const QString& key)
+    {
+      if (instance_ok () && sc)
+        instance->do_shortcut (sc, key);
+    }
+
     static void fill_treewidget (QTreeWidget *tree_view)
     {
       if (instance_ok ())
         instance->do_fill_treewidget (tree_view);
     }
 
     static void import_export (int action)
     {
@@ -122,16 +129,17 @@ namespace octave
   private:
 
     static bool instance_ok (void);
 
     void init (const QString&, const QString&, const QKeySequence&);
     void do_init_data ();
     void do_write_shortcuts (QSettings *settings, bool closing);
     void do_set_shortcut (QAction *action, const QString& key);
+    void do_shortcut (QShortcut *sc, const QString& key);
     void do_fill_treewidget (QTreeWidget *tree_view);
     bool do_import_export (int action);
     void shortcut_dialog (int);
     void import_shortcuts (QSettings *settings);
     bool overwrite_all_shortcuts (void);
 
     class shortcut_t
     {
