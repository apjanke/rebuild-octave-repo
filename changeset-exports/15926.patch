# HG changeset patch
# User Ben Abbott  <bpabbott@mac.com>
# Date 1357939642 18000
#      Fri Jan 11 16:27:22 2013 -0500
# Branch classdef
# Node ID f97a746e45445ce1dee82ed006b74b16f2eeb7b2
# Parent  8521321604df33d1cb03eadbb5cc113e9415d2b0
ov-classdef.h: Include class-key when declaring a friend

diff --git a/libinterp/octave-value/ov-classdef.h b/libinterp/octave-value/ov-classdef.h
--- a/libinterp/octave-value/ov-classdef.h
+++ b/libinterp/octave-value/ov-classdef.h
@@ -800,17 +800,17 @@ operator != (const cdef_class& clsa, con
 // This is only to be able to use cdef_class as map keys.
 inline bool
 operator < (const cdef_class& clsa, const cdef_class& clsb)
 { return clsa.get_rep () < clsb.get_rep (); }
 
 class
 cdef_property : public cdef_object
 {
-  friend cdef_class;
+  friend class cdef_class;
 
 private:
 
   class
   cdef_property_rep : public handle_cdef_object
   {
   public:
     cdef_property_rep (void)
@@ -887,17 +887,17 @@ private:
   
   const cdef_property_rep* get_rep (void) const
     { return dynamic_cast<const cdef_property_rep *> (cdef_object::get_rep ()); }
 };
 
 class
 cdef_method : public cdef_object
 {
-  friend cdef_class;
+  friend class cdef_class;
 
 private:
 
   class
   cdef_method_rep : public handle_cdef_object
   {
   public:
     cdef_method_rep (void) : handle_cdef_object () { }
@@ -1063,17 +1063,17 @@ cdef_class::find_method (const std::stri
 
 inline cdef_property
 cdef_class::find_property (const std::string& nm)
 { return get_rep ()->find_property (nm); }
 
 class
 cdef_package : public cdef_object
 {
-  friend cdef_class;
+  friend class cdef_class;
 
 private:
 
   class
   cdef_package_rep : public handle_cdef_object
   {
   public:
     cdef_package_rep (void) : handle_cdef_object (), member_count (0) { }
