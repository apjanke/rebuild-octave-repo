# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1310845032 25200
#      Sat Jul 16 12:37:12 2011 -0700
# Node ID ce07cb58ff61529f30640d1cc19c323b181ff2b5
# Parent  e3e6079039c64850ef880e06078f6588b275b59a
codesprint: Add tests for double()

* ov-re-mat.cc: Add tests for double()

diff --git a/src/ov-re-mat.cc b/src/ov-re-mat.cc
--- a/src/ov-re-mat.cc
+++ b/src/ov-re-mat.cc
@@ -974,8 +974,41 @@ Convert @var{x} to double precision type
           OCTAVE_TYPE_CONV_BODY3 (double, octave_matrix, octave_scalar);
         }
     }
   else
     print_usage ();
 
   return octave_value ();
 }
+
+/*
+
+%!assert (class (double (single (1))), "double")
+%!assert (class (double (single (1 + i))), "double")
+%!assert (class (double (int8 (1))), "double")
+%!assert (class (double (uint8 (1))), "double")
+%!assert (class (double (int16 (1))), "double")
+%!assert (class (double (uint16 (1))), "double")
+%!assert (class (double (int32 (1))), "double")
+%!assert (class (double (uint32 (1))), "double")
+%!assert (class (double (int64 (1))), "double")
+%!assert (class (double (uint64 (1))), "double")
+%!assert (class (double (true)), "double")
+%!assert (class (double ("A")), "double")
+%!test
+%! x = sparse (logical ([1 0; 0 1]));
+%! y = double (x);
+%! assert (class (x), "logical");
+%! assert (class (y), "double");
+%! assert (issparse (y));
+%!test
+%! x = diag (single ([1 3 2]));
+%! y = double (x);
+%! assert (class (x), "single");
+%! assert (class (y), "double");
+%!test
+%! x = diag (single ([i 3 2]));
+%! y = double (x);
+%! assert (class (x), "single");
+%! assert (class (y), "double");
+
+*/
