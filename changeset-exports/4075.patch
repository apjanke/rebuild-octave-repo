# HG changeset patch
# User jwe
# Date 1033162676 0
#      Fri Sep 27 21:37:56 2002 +0000
# Node ID 9a2102864eb0fe26fd3603c3a38bb1a03ee05384
# Parent  a67f76924703382fb77990c4e242c82df123aad8
[project @ 2002-09-27 21:37:56 by jwe]

diff --git a/liboctave/lo-cieee.c b/liboctave/lo-cieee.c
--- a/liboctave/lo-cieee.c
+++ b/liboctave/lo-cieee.c
@@ -67,17 +67,17 @@ isinf (double x)
 }
 
 #endif
 
 int
 lo_ieee_isnan (double x)
 {
 #if defined (HAVE_ISNAN)
-  return lo_ieee_isnan (x) ? ! lo_ieee_is_NA (x) : 0;
+  return isnan (x) ? ! lo_ieee_is_NA (x) : 0;
 #else
   return 0;
 #endif
 }
 
 int
 lo_ieee_finite (double x)
 {
@@ -97,13 +97,27 @@ lo_ieee_isinf (double x)
   return isinf (x);
 #elif defined (HAVE_FINITE)
   return (! (finite (x) || lo_ieee_is_NaN_or_NA (x)));
 #else
   return 0;
 #endif
 }
 
+int
+lo_ieee_is_NA (double x)
+{
+  lo_ieee_double t;
+  t.value = x;
+  return (isnan (x) && t.word[lo_ieee_lw] == LO_IEEE_NA_LW) ? 1 : 0;
+}
+
+int
+lo_ieee_is_NaN_or_NA (double x)
+{
+  return lo_ieee_isnan (x);
+}
+
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
diff --git a/liboctave/lo-ieee.cc b/liboctave/lo-ieee.cc
--- a/liboctave/lo-ieee.cc
+++ b/liboctave/lo-ieee.cc
@@ -52,27 +52,18 @@ Software Foundation, 59 Temple Place - S
 double octave_Inf;
 
 // Octave's idea of not a number.
 double octave_NaN;
 
 // Octave's idea of a missing value.
 double octave_NA;
 
-static int lo_ieee_hw;
-static int lo_ieee_lw;
-
-typedef union
-{
-  double value;
-  unsigned int word[2];
-} lo_ieee_double;
-
-#define LO_IEEE_NA_HW 0x7ff00000
-#define LO_IEEE_NA_LW 1954
+int lo_ieee_hw;
+int lo_ieee_lw;
 
 void
 octave_ieee_init (void)
 {
 #if defined (HAVE_ISINF) || defined (HAVE_FINITE)
 
 // Some version of gcc on some old version of Linux used to crash when
 // trying to make Inf and NaN.
@@ -125,27 +116,13 @@ octave_ieee_init (void)
   t.word[lo_ieee_hw] = LO_IEEE_NA_HW;
   t.word[lo_ieee_lw] = LO_IEEE_NA_LW;
 
   octave_NA = t.value;
 
 #endif
 }
 
-int
-lo_ieee_is_NA (double x)
-{
-  lo_ieee_double t;
-  t.value = x;
-  return (lo_ieee_isnan (x) && t.word[lo_ieee_lw] == LO_IEEE_NA_LW) ? 1 : 0;
-}
-
-int
-lo_ieee_is_NaN_or_NA (double x)
-{
-  return lo_ieee_isnan (x);
-}
-
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
diff --git a/liboctave/lo-ieee.h b/liboctave/lo-ieee.h
--- a/liboctave/lo-ieee.h
+++ b/liboctave/lo-ieee.h
@@ -22,39 +22,51 @@ Software Foundation, 59 Temple Place - S
 
 #if !defined (octave_liboctave_ieee_h)
 #define octave_liboctave_ieee_h 1
 
 #ifdef	__cplusplus
 extern "C" {
 #endif
 
+extern int lo_ieee_hw;
+extern int lo_ieee_lw;
+
+typedef union
+{
+  double value;
+  unsigned int word[2];
+} lo_ieee_double;
+
+#define LO_IEEE_NA_HW 0x7ff00000
+#define LO_IEEE_NA_LW 1954
+
 // Octave's idea of infinity.
 extern double octave_Inf;
 
 // Octave's idea of not a number.
 extern double octave_NaN;
 
 // Octave's idea of a missing value.
 extern double octave_NA;
 
 extern void octave_ieee_init (void);
 
-extern int lo_ieee_is_NA (double);
-extern int lo_ieee_is_NaN_or_NA (double);
-
 #if defined (SCO)
 extern int isnan (double);
 extern int isinf (double);
 #endif
 
 extern int lo_ieee_isnan (double x);
 extern int lo_ieee_finite (double x);
 extern int lo_ieee_isinf (double x);
 
+extern int lo_ieee_is_NA (double);
+extern int lo_ieee_is_NaN_or_NA (double);
+
 #ifdef	__cplusplus
 }
 #endif
 
 #endif
 
 /*
 ;;; Local Variables: ***
