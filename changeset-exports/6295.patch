# HG changeset patch
# User jwe
# Date 1171073421 0
#      Sat Feb 10 02:10:21 2007 +0000
# Node ID 0fcce0872e02ee2dd8a5173aa01c09b03cd8baf7
# Parent  fa02b0b467b5d1578f2d256d651a27dbcb7fc925
[project @ 2007-02-10 02:10:21 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,12 @@
+2007-02-09  John W. Eaton  <jwe@octave.org>
+
+	* mkoctfile.in: Handle .a files.
+
 2007-02-08  John W. Eaton  <jwe@octave.org>
 
 	* octMakefile.in (all): Depend on dist-info-files.
 	(dist): Delete dist-info-files dependency.
 
 	* configure.in: Rewrite if !( X ) ... fi as if X; true; else ... fi.
 	Also check for _glp_lpx_simplex.
 
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,10 +1,12 @@
 2007-02-09  John W. Eaton  <jwe@octave.org>
 
+	* plot/subplot.m: Delete spurious call to axes.
+
 	* plot/figure.m: Call drawnow for current figure before creating
 	or switching to a new figure.
 	* plot/__uiobject_init_figure__.in: Handle empty arg the same as
 	nargin == 0 case.
 
 	* testfun/assert.m: Try to avoid problems when comparisons involve
 	strange values like Inf+NaNi.
 
diff --git a/scripts/plot/subplot.m b/scripts/plot/subplot.m
--- a/scripts/plot/subplot.m
+++ b/scripts/plot/subplot.m
@@ -130,17 +130,16 @@ function h = subplot (rows, columns, ind
 
   found = false;
   for child = obj.children
     obj = get (child);
     if (strcmp (obj.type, "axes"))
       if (obj.outerposition == pos)
 	found = true;
 	tmp = child;
-	axes (h);
 	break;
       endif
     endif
   endfor
 
   if (! found)
     tmp = axes ("outerposition", pos);
   endif
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,13 @@
 2007-02-09  John W. Eaton  <jwe@octave.org>
 
+	* ls-mat5.cc (PAD): Adjust to change in write_mat5_tag.
+	(TAGLENGTH): Delete unused macro.
+
 	* ov-struct.cc (octave_struct::load_ascii,
 	octave_struct::load_binary, octave_struct::load_hdf5):
 	Delete obsolete attempt at backward compatibility.
 
 	* ls-mat5.cc (read_mat5_binary_element): Don't attempt to read
 	fieldnames if there are no fields.
 	(write_mat5_tag): Don't use small data element format if bytes == 0.
 
diff --git a/src/ls-mat5.cc b/src/ls-mat5.cc
--- a/src/ls-mat5.cc
+++ b/src/ls-mat5.cc
@@ -69,18 +69,17 @@ 02110-1301, USA.
 
 #include "ls-utils.h"
 #include "ls-mat5.h"
 
 #ifdef HAVE_ZLIB
 #include <zlib.h>
 #endif
 
-#define PAD(l) (((l)<=4)?4:(((l)+7)/8)*8)
-#define TAGLENGTH(l) ((l)<=4?4:8)
+#define PAD(l) (((l) > 0 && (l) <= 4) ? 4 : (((l)+7)/8)*8)
 
 // FIXME -- the following enum values should be the same as the
 // mxClassID values in mexproto.h, but it seems they have also changed
 // over time.  What is the correct way to handle this and maintain
 // backward compatibility with old MAT files?  For now, use
 // "MAT_FILE_" instead of "mx" as the prefix for these names to avoid
 // conflict with the mxClassID enum in mexproto.h.
 
