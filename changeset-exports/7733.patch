# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1209068324 14400
#      Thu Apr 24 16:18:44 2008 -0400
# Node ID bb614b3883a9d4e1ff9439ee468f2569576c72f7
# Parent  bc5c6999c6009cdc5151faef2eb2f48b1ae7dec7
octave_call_stack::unwind_pop_script: delete unused function

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,13 @@
 2008-04-24  John W. Eaton  <jwe@octave.org>
 
+	* toplev.h, toplev.cc (octave_call_stack::unwind_pop_script):
+	Delete unused function.
+
 	* ov-usr-fcn.cc: Move constructor definitions here, from ov-usr-fcn.h.
 	* ov-usr-fcn.h (octave_user_script::octave_user_script): 
 	Also Initialize t_parsed and t_checked.
 
 2008-04-24  Jaroslav Hajek <highegg@gmail.com>
 
 	* ov-usr-fcn.h (octave_user_script::octave_user_script): 
 	Initialize call_depth.
diff --git a/src/toplev.cc b/src/toplev.cc
--- a/src/toplev.cc
+++ b/src/toplev.cc
@@ -148,25 +148,16 @@ octave_call_stack::do_caller_user_code (
 	  break;
 	}
     }
 
   return retval;
 }
 
 void
-octave_call_stack::unwind_pop_script (void *)
-{
-  octave_function *f = top ();
-  pop ();
-  assert (f && f->is_user_script ());
-  delete f;
-}
-
-void
 recover_from_exception (void)
 {
   can_interrupt = true;
   octave_interrupt_immediately = 0;
   octave_interrupt_state = 0;
   octave_signal_caught = 0;
   octave_exception_state = octave_no_exception;
   octave_restore_signal_mask ();
diff --git a/src/toplev.h b/src/toplev.h
--- a/src/toplev.h
+++ b/src/toplev.h
@@ -143,20 +143,16 @@ public:
     if (instance_ok ())
       instance->do_pop ();
   }
   
   // A function for popping the top of the call stack that is suitable
   // for use as an unwind_protect handler.
   static void unwind_pop (void *) { pop (); }
 
-  // A function for popping an octave_user_script from the top of the
-  // call stack that is suitable for use as an unwind_protect handler.
-  static void unwind_pop_script (void *);
-
   static void clear (void)
   {
     if (instance_ok ())
       instance->do_clear ();
   }
 
 private:
 
