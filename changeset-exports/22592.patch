# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1475723371 14400
#      Wed Oct 05 23:09:31 2016 -0400
# Branch stable
# Node ID ee0df00e12d6250777f5b399236a570c28cb5e2f
# Parent  1213b3f0602cb4149c03f6e744f67f076898962e
fix complex svd (bug #49232)

* liboctave/numeric/svd.cc (svd<T>::svd): Use hermitian, not transpose.
* libinterp/corefcn/svd.cc: New test for complex svd.

diff --git a/libinterp/corefcn/svd.cc b/libinterp/corefcn/svd.cc
--- a/libinterp/corefcn/svd.cc
+++ b/libinterp/corefcn/svd.cc
@@ -246,16 +246,22 @@ decomposition, eliminating the unnecessa
 
   return retval;
 }
 
 /*
 %!assert (svd ([1, 2; 2, 1]), [3; 1], sqrt (eps))
 
 %!test
+a = [1, 2; 3, 4] + [5, 6; 7, 8]*i;
+[u,s,v] = svd (a);
+assert (a, u * s * v', 128 * eps);
+
+
+%!test
 %! [u, s, v] = svd ([1, 2; 2, 1]);
 %! x = 1 / sqrt (2);
 %! assert (u, [-x, -x; -x, x], sqrt (eps));
 %! assert (s, [3, 0; 0, 1], sqrt (eps));
 %! assert (v, [-x, x; -x, -x], sqrt (eps));
 
 %!test
 %! a = [1, 2, 3; 4, 5, 6];
diff --git a/liboctave/numeric/svd.cc b/liboctave/numeric/svd.cc
--- a/liboctave/numeric/svd.cc
+++ b/liboctave/numeric/svd.cc
@@ -394,17 +394,17 @@ namespace octave
 
           gesdd (jobz, m, n, tmp_data, m1, s_vec, u, vt, nrow_vt1,
                  work, lwork, iwork.data (), info);
         }
       else
         abort ();
 
       if (! (jobv == 'N' || jobv == 'O'))
-        right_sm = right_sm.transpose ();
+        right_sm = right_sm.hermitian ();
     }
 
     // Instantiations we need.
 
     template class svd<Matrix>;
 
     template class svd<FloatMatrix>;
 
