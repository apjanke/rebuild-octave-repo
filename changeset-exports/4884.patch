# HG changeset patch
# User jwe
# Date 1083298357 0
#      Fri Apr 30 04:12:37 2004 +0000
# Node ID a9f67193e3a0d2b6123da674b58999a34c4ec39b
# Parent  d7bad86d3416ead380897f107a2692aaf3a0bb2e
[project @ 2004-04-30 04:12:37 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,12 @@
+2004-04-29  David Bateman  <dbateman@free.fr>
+
+	* load-save.cc (Fload, Fsave): Accept -mat as well as -mat-binary.
+
 2004-04-27  David Bateman  <dbateman@free.fr>
 
 	* DLD-FUNCTIONS/sort.cc: Add missing "class" keywords to template
 	instantiations.
 
 2004-04-22  John W. Eaton  <jwe@octave.org>
 
 	* pt-plot.cc (Fclearplot): Temporarily turn off automatic_replot.
diff --git a/src/load-save.cc b/src/load-save.cc
--- a/src/load-save.cc
+++ b/src/load-save.cc
@@ -552,19 +552,16 @@ Load the named variables from the file @
 you may specify a list of variables and @code{load} will only extract\n\
 those variables with names that match.  For example, to restore the\n\
 variables saved in the file @file{data}, use the command\n\
 \n\
 @example\n\
 load data\n\
 @end example\n\
 \n\
-Octave will refuse to overwrite existing variables unless you use the\n\
-option @samp{-force}.\n\
-\n\
 If a variable that is not marked as global is loaded from a file when a\n\
 global symbol with the same name already exists, it is loaded in the\n\
 global symbol table.  Also, if a variable is marked as global in a file\n\
 and a local symbol exists, the local symbol is moved to the global\n\
 symbol table and given the value from the file.  Since it seems that\n\
 both of these cases are likely to be the result of some sort of error,\n\
 they will generate warnings.\n\
 \n\
@@ -579,26 +576,28 @@ binary formats, and @sc{Matlab}'s binary
 detect the type of file and do conversion from different floating point\n\
 formats (currently only IEEE big and little endian, though other formats\n\
 may added in the future).\n\
 \n\
 Valid options for @code{load} are listed in the following table.\n\
 \n\
 @table @code\n\
 @item -force\n\
-Force variables currently in memory to be overwritten by variables with\n\
-the same name found in the file.\n\
+The @samp{-force} option is accepted but ignored for backward\n\
+compatiability. Octave now overwrites variables currently in memeory with\n\
+the same name as those found in the file.\n\
 \n\
 @item -ascii\n\
 Force Octave to assume the file is in Octave's text format.\n\
 \n\
 @item -binary\n\
 Force Octave to assume the file is in Octave's binary format.\n\
 \n\
-@item -mat-binary\n\
+@item -mat\n\
+@itemx -mat-binary\n\
 Force Octave to assume the file is in @sc{Matlab}'s binary format.\n\
 \n\
 @item -mat4-binary\n\
 Force Octave to assume the file is in the binary format written by\n\
 @sc{Matlab} version 4.\n\
 \n\
 @item -hdf5\n\
 Force Octave to assume the file is in HDF5 format.\n\
@@ -606,19 +605,19 @@ Force Octave to assume the file is in HD
 Center for Supercomputing Applications at the University of Illinois.)\n\
 Note that Octave can read HDF5 files not created by itself, but may\n\
 skip some datasets in formats that it cannot support.\n"
 
 HAVE_HDF5_HELP_STRING
 
 "\n\
 @item -import\n\
-The @samp{-import} is acceptted but ignored for backward compatiability.\n\
-Octave can now support multi-dimensional HDF data and automatically modifies\n\
-variable names if they are invalid Octave identifiers.\n\
+The @samp{-import} is accepted but ignored for backward compatiability.\n\
+Octave can now support multi-dimensional HDF data and automatically\n\
+modifies variable names if they are invalid Octave identifiers.\n\
 \n\
 @end table\n\
 @end deffn")
 {
   octave_value_list retval;
 
   int argc = args.length () + 1;
 
@@ -637,17 +636,18 @@ variable names if they are invalid Octav
   bool list_only = false;
   bool verbose = false;
 
   int i;
   for (i = 1; i < argc; i++)
     {
       if (argv[i] == "-force" || argv[i] == "-f")
 	{
-	  force = true;
+	  // Silently ignore this
+	  // warning ("load: -force ignored");
 	}
       else if (argv[i] == "-list" || argv[i] == "-l")
 	{
 	  list_only = true;
 	}
       else if (argv[i] == "-verbose" || argv[i] == "-v")
 	{
 	  verbose = true;
@@ -655,17 +655,17 @@ variable names if they are invalid Octav
       else if (argv[i] == "-ascii" || argv[i] == "-a")
 	{
 	  format = LS_ASCII;
 	}
       else if (argv[i] == "-binary" || argv[i] == "-b")
 	{
 	  format = LS_BINARY;
 	}
-      else if (argv[i] == "-mat-binary" || argv[i] == "-m")
+      else if (argv[i] == "-mat-binary" || argv[i] == "-mat" || argv[i] == "-m")
 	{
 	  format = LS_MAT5_BINARY;
 	}
       else if (argv[i] == "-mat4-binary" || argv[i] == "-4" || argv[i] == "-v4")
 	{
 	  format = LS_MAT_BINARY;
 	}
       else if (argv[i] == "-hdf5" || argv[i] == "-h")
@@ -1208,17 +1208,18 @@ Save the data in Octave's text data form
 @item -binary\n\
 Save the data in Octave's binary data format.\n\
 \n\
 @item -float-binary\n\
 Save the data in Octave's binary data format but only using single\n\
 precision.  You should use this format only if you know that all the\n\
 values to be saved can be represented in single precision.\n\
 \n\
-@item -mat-binary\n\
+@item -mat\n\
+@itemx -mat-binary\n\
 Save the data in @sc{Matlab}'s binary data format.\n\
 \n\
 @item -mat4-binary\n\
 Save the data in the binary format written by @sc{Matlab} version 4.\n\
 \n\
 @item -hdf5\n\
 Save the data in HDF5 format.\n\
 (HDF5 is a free, portable binary format developed by the National\n\
@@ -1308,17 +1309,17 @@ the file @file{data} in Octave's binary 
 	{
 #ifdef HAVE_HDF5
 	  format = LS_HDF5;
 #else /* ! HAVE_HDF5 */
 	  error ("save: octave executable was not linked with HDF5 library");
 	  return retval;
 #endif /* ! HAVE_HDF5 */
 	}
-      else if (argv[i] == "-mat-binary" || argv[i] == "-m")
+      else if (argv[i] == "-mat-binary" || argv[i] == "-mat" || argv[i] == "-m")
 	{
 	  format = LS_MAT5_BINARY;
 	}
       else if (argv[i] == "-mat4-binary" || argv[i] == "-4" || argv[i] == "-v4")
 	{
 	  format = LS_MAT_BINARY;
 	}
       else if (argv[i] == "-float-binary" || argv[i] == "-f")
