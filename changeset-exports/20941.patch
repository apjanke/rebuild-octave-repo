# HG changeset patch
# User Rik <rik@octave.org>
# Date 1450484321 28800
#      Fri Dec 18 16:18:41 2015 -0800
# Node ID a4f5da7c54636b007796664b82c5fafd22fa897e
# Parent  48b2ad5ee801cbb1a69aa4a9467dd2cfb5d558f9
maint: Replace "octave_value_list ()" with "ovl ()".

* debug.cc, det.cc, ellipj.cc, error.cc, file-io.cc, graphics.cc, hess.cc,
input.cc, inv.cc, load-path.cc, lu.cc, octave-link.cc, pager.cc, pinv.cc,
pr-output.cc, profiler.cc, schur.cc, symtab.cc, sysdep.cc, urlwrite.cc,
variables.cc, __magick_read__.cc, audioread.cc, chol.cc, ov-classdef.h,
ov-cs-list.cc, ov-flt-re-mat.cc, ov-re-mat.cc, ov-usr-fcn.cc:
maint: Replace "octave_value_list ()" with "ovl ()".

diff --git a/libinterp/corefcn/debug.cc b/libinterp/corefcn/debug.cc
--- a/libinterp/corefcn/debug.cc
+++ b/libinterp/corefcn/debug.cc
@@ -1399,17 +1399,17 @@ function returns.\n\
     }
   else
     {
       Vdebugging = false;
 
       tree_evaluator::dbstep_flag = 1;
     }
 
-  return octave_value_list ();
+  return ovl ();
 }
 
 DEFALIAS (dbnext, dbstep);
 
 DEFUN (dbcont, args, ,
        "-*- texinfo -*-\n\
 @deftypefn {} {} dbcont\n\
 Leave command-line debugging mode and continue code execution normally.\n\
@@ -1421,17 +1421,17 @@ Leave command-line debugging mode and co
 
   if (args.length () != 0)
     print_usage ();
 
   Vdebugging = false;
 
   tree_evaluator::reset_debug_state ();
 
-  return octave_value_list ();
+  return ovl ();
 }
 
 DEFUN (dbquit, args, ,
        "-*- texinfo -*-\n\
 @deftypefn {} {} dbquit\n\
 Quit debugging mode immediately without further code execution and return to\n\
 the Octave prompt.\n\
 @seealso{dbcont, dbstep}\n\
@@ -1444,17 +1444,17 @@ the Octave prompt.\n\
     print_usage ();
 
   Vdebugging = false;
 
   tree_evaluator::reset_debug_state ();
 
   octave_throw_interrupt_exception ();
 
-  return octave_value_list ();
+  return ovl ();
 }
 
 DEFUN (isdebugmode, args, ,
        "-*- texinfo -*-\n\
 @deftypefn {} {} isdebugmode ()\n\
 Return true if in debugging mode, otherwise false.\n\
 @seealso{dbwhere, dbstack, dbstatus}\n\
 @end deftypefn")
@@ -1481,11 +1481,11 @@ With a logical argument @var{flag}, set 
 
   bool state = true;
 
   if (nargin == 1)
     state = args(0).bool_value ();
 
   tree_evaluator::quiet_breakpoint_flag = state;
 
-  return octave_value_list ();
+  return ovl ();
 }
 
diff --git a/libinterp/corefcn/det.cc b/libinterp/corefcn/det.cc
--- a/libinterp/corefcn/det.cc
+++ b/libinterp/corefcn/det.cc
@@ -72,24 +72,24 @@ For that, use any of the condition numbe
   octave_idx_type nr = arg.rows ();
   octave_idx_type nc = arg.columns ();
 
   if (nr == 0 && nc == 0)
     return octave_value (1.0);
 
   int arg_is_empty = empty_arg ("det", nr, nc);
   if (arg_is_empty < 0)
-    return octave_value_list ();
+    return ovl ();
   if (arg_is_empty > 0)
     return octave_value (1.0);
 
   if (nr != nc)
     {
       gripe_square_matrix_required ("det");
-      return octave_value_list ();
+      return ovl ();
     }
 
   octave_value_list retval (2);
 
   bool isfloat = arg.is_single_type ();
 
   if (arg.is_diag_matrix ())
     {
diff --git a/libinterp/corefcn/ellipj.cc b/libinterp/corefcn/ellipj.cc
--- a/libinterp/corefcn/ellipj.cc
+++ b/libinterp/corefcn/ellipj.cc
@@ -279,17 +279,17 @@ and 16.15), Dover, 1965.\n\
                   return ovl (sn, cn, dn, err);
                 }
               else
                 error ("ellipj: Invalid size combination for U and M");
             }
         }
     }  // m matrix
 
-  return octave_value_list ();
+  return ovl ();
 }
 
 /*
 ## demos taken from inst/ellipj.m
 
 %!demo
 %! N = 150;
 %! # m = [1-logspace(0,log(eps),N-1), 1]; # m near 1
diff --git a/libinterp/corefcn/error.cc b/libinterp/corefcn/error.cc
--- a/libinterp/corefcn/error.cc
+++ b/libinterp/corefcn/error.cc
@@ -1983,17 +1983,17 @@ With two arguments, also set the last me
     {
       Vlast_error_id = "";
       Vlast_error_message = argv(1);
     }
 
   if (nargin == 0 || nargout > 0)
     return ovl (prev_error_message, prev_error_id);
   else
-    return octave_value_list ();
+    return ovl ();
 }
 
 DEFUN (lastwarn, args, nargout,
        "-*- texinfo -*-\n\
 @deftypefn  {} {[@var{msg}, @var{msgid}] =} lastwarn ()\n\
 @deftypefnx {} {} lastwarn (@var{msg})\n\
 @deftypefnx {} {} lastwarn (@var{msg}, @var{msgid})\n\
 Query or set the last warning message.\n\
@@ -2026,17 +2026,17 @@ With two arguments, also set the last me
     {
       Vlast_warning_id = "";
       Vlast_warning_message = argv(1);
     }
 
   if (nargin == 0 || nargout > 0)
     return ovl (prev_warning_message, prev_warning_id);
   else
-    return octave_value_list ();
+    return ovl ();
 }
 
 /* FIXME: Deprecated in 4.0 and scheduled for removal in 4.4 */
 DEFUN (__usage__, args, ,
        "-*- texinfo -*-\n\
 @deftypefn {} {} usage (@var{msg})\n\
 Print the message @var{msg}, prefixed by the string @samp{usage: }, and\n\
 set Octave's internal error state such that control will return to the\n\
diff --git a/libinterp/corefcn/file-io.cc b/libinterp/corefcn/file-io.cc
--- a/libinterp/corefcn/file-io.cc
+++ b/libinterp/corefcn/file-io.cc
@@ -262,17 +262,17 @@ Clear the stream state for the file spec
     print_usage ();
 
   int fid = octave_stream_list::get_file_number (args(0));
 
   octave_stream os = octave_stream_list::lookup (fid, "fclear");
 
   os.clearerr ();
 
-  return octave_value_list ();
+  return ovl ();
 }
 
 DEFUN (fflush, args, ,
        "-*- texinfo -*-\n\
 @deftypefn {} {} fflush (@var{fid})\n\
 Flush output to file descriptor @var{fid}.\n\
 \n\
 @code{fflush} returns 0 on success and an OS dependent error value\n\
@@ -419,17 +419,17 @@ Returns the number of lines skipped (end
 
   bool err = false;
 
   off_t tmp = os.skipl (count_arg, err, who);
 
   if (! err)
     return ovl (tmp);
   else
-    return octave_value_list ();
+    return ovl ();
 }
 
 
 static octave_stream
 do_stream_open (const std::string& name, const std::string& mode_arg,
                 const std::string& arch, int& fid)
 {
   octave_stream retval;
@@ -706,17 +706,17 @@ is equivalent to @code{fseek (@var{fid},
 
   octave_stream os = octave_stream_list::lookup (args(0), "frewind");
 
   result = os.rewind ();
 
   if (nargout > 0)
     return ovl (result);
   else
-    return octave_value_list ();
+    return ovl ();
 }
 
 DEFUN (fseek, args, ,
        "-*- texinfo -*-\n\
 @deftypefn  {} {} fseek (@var{fid}, @var{offset})\n\
 @deftypefnx {} {} fseek (@var{fid}, @var{offset}, @var{origin})\n\
 @deftypefnx {} {@var{status} =} fseek (@dots{})\n\
 Set the file pointer to the location @var{offset} within the file @var{fid}.\n\
@@ -813,17 +813,17 @@ expanded even when the template string i
         tmp_args(i-fmt_n-1) = args(i);
     }
 
   result = os.printf (args(fmt_n), tmp_args, who);
 
   if (nargout > 0)
     return octave_value (result);
   else
-    return octave_value_list ();
+    return ovl ();
 }
 
 DEFUN (printf, args, nargout,
        "-*- texinfo -*-\n\
 @deftypefn {} {} printf (@var{template}, @dots{})\n\
 Print optional arguments under the control of the template string\n\
 @var{template} to the stream @code{stdout} and return the number of\n\
 characters printed.\n\
@@ -861,17 +861,17 @@ expanded even when the template string i
         tmp_args(i-1) = args(i);
     }
 
   result = stdout_stream.printf (args(0), tmp_args, who);
 
   if (nargout > 0)
     return ovl (result);
   else
-    return octave_value_list ();
+    return ovl ();
 }
 
 DEFUN (fputs, args, ,
        "-*- texinfo -*-\n\
 @deftypefn  {} {} fputs (@var{fid}, @var{string})\n\
 @deftypefnx {} {@var{status} =} fputs (@var{fid}, @var{string})\n\
 Write the string @var{string} to the file with file descriptor @var{fid}.\n\
 \n\
@@ -1921,17 +1921,17 @@ for the new object are @code{@var{mode} 
 
   int oct_mask = convert (mask, 8, 10);
 
   int status = convert (octave_umask (oct_mask), 10, 8);
 
   if (status >= 0)
     return ovl (status);
   else
-    return octave_value_list ();
+    return ovl ();
 }
 
 static octave_value
 const_value (const char *, const octave_value_list& args, int val)
 {
   if (args.length () != 0)
     print_usage ();
 
diff --git a/libinterp/corefcn/graphics.cc b/libinterp/corefcn/graphics.cc
--- a/libinterp/corefcn/graphics.cc
+++ b/libinterp/corefcn/graphics.cc
@@ -10114,17 +10114,17 @@ Undocumented internal function.\n\
 
   octave_idx_type vals_len = vals.numel ();
 
   if (vals_len > 1)
     return octave_value (vals);
   else if (vals_len == 1)
     return octave_value (vals(0));
   else
-    return octave_value_list ();
+    return ovl ();
 }
 
 static octave_value
 make_graphics_object (const std::string& go_name,
                       bool integer_figure_handle,
                       const octave_value_list& args)
 {
   octave_value retval;
@@ -10483,17 +10483,17 @@ Undocumented internal function.\n\
       h = gh_manager::lookup (vals(i));
 
       if (! h.ok ())
         error ("delete: invalid graphics object (= %g)", vals(i));
     }
 
   delete_graphics_objects (vals);
 
-  return octave_value_list ();
+  return ovl ();
 }
 
 DEFUN (__go_axes_init__, args, ,
        "-*- texinfo -*-\n\
 @deftypefn {} {} __go_axes_init__ (@var{h}, @var{mode})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
@@ -10520,17 +10520,17 @@ Undocumented internal function.\n\
   graphics_object go = gh_manager::get_object (h);
 
   go.set_defaults (mode);
 
   h = gh_manager::lookup (val);
   if (! h.ok ())
     error ("__go_axes_init__: axis deleted during initialization (= %g)", val);
 
-  return octave_value_list ();
+  return ovl ();
 }
 
 DEFUN (__go_handles__, args, ,
        "-*- texinfo -*-\n\
 @deftypefn {} {} __go_handles__ (@var{show_hidden})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
@@ -10581,17 +10581,17 @@ Undocumented internal function.\n\
 
   std::string name = args(1).xstring_value ("__go_execute_callback__: invalid callback name");
 
   if (nargin == 2)
     gh_manager::execute_callback (h, name);
   else
     gh_manager::execute_callback (h, name, args(2));
 
-  return octave_value_list ();
+  return ovl ();
 }
 
 DEFUN (__image_pixel_size__, args, ,
        "-*- texinfo -*-\n\
 @deftypefn {} {@var{px}, @var{py}} __image_pixel_size__ (@var{h})\n\
 Internal function: returns the pixel size of the image in normalized units.\n\
 @end deftypefn")
 {
@@ -10726,17 +10726,17 @@ List @var{toolkit} as an available graph
 
   if (args.length () != 1)
     print_usage ();
 
   std::string name = args(0).xstring_value ("register_graphics_toolkit: TOOLKIT must be a string");
 
   gtk_manager::register_toolkit (name);
 
-  return octave_value_list ();
+  return ovl ();
 }
 
 DEFUN (loaded_graphics_toolkits, , ,
        "-*- texinfo -*-\n\
 @deftypefn {} {} loaded_graphics_toolkits ()\n\
 Return a cell array of the currently loaded graphics toolkits.\n\
 @seealso{available_graphics_toolkits}\n\
 @end deftypefn")
@@ -10816,17 +10816,17 @@ undocumented.\n\
               if (val.compare ("expose"))
                 do_events = false;
               else
                 {
                   error ("drawnow: invalid argument, 'expose' is only valid option");
 
                   gh_manager::unlock ();
 
-                  return octave_value_list ();
+                  return ovl ();
                 }
             }
 
           if (do_events)
             {
               gh_manager::unlock ();
 
               gh_manager::process_events ();
@@ -10848,25 +10848,25 @@ undocumented.\n\
 
           if (pos_p == std::string::npos &&
               pos_c == std::string::npos)
             {
               error ("drawnow: empty output ''");
 
               gh_manager::unlock ();
 
-              return octave_value_list ();
+              return ovl ();
             }
           else if (pos_c == std::string::npos)
             {
               error ("drawnow: empty pipe '|'");
 
               gh_manager::unlock ();
 
-              return octave_value_list ();
+              return ovl ();
             }
           else if (pos_p != std::string::npos && pos_p < pos_c)
             {
               // Strip leading pipe character
               file = file.substr (pos_c);
             }
           else
             {
@@ -10880,17 +10880,17 @@ undocumented.\n\
 
                   if (! (fs && fs.is_dir ()))
                     {
                       error ("drawnow: nonexistent directory '%s'",
                              dirname.c_str ());
 
                       gh_manager::unlock ();
 
-                      return octave_value_list ();
+                      return ovl ();
                     }
                 }
             }
 
           mono = (args.length () >= 3 ? args(2).xbool_value ("drawnow: MONO colormode must be a boolean value") : false);
 
           debug_file = (args.length () > 3 ? args(3).xstring_value ("drawnow: DEBUG_FILE must be a string") : "");
 
@@ -10917,17 +10917,17 @@ undocumented.\n\
             }
           else
             error ("drawnow: nothing to draw");
         }
     }
 
   gh_manager::unlock ();
 
-  return octave_value_list ();
+  return ovl ();
 }
 
 DEFUN (addlistener, args, ,
        "-*- texinfo -*-\n\
 @deftypefn {} {} addlistener (@var{h}, @var{prop}, @var{fcn})\n\
 Register @var{fcn} as listener for the property @var{prop} of the graphics\n\
 object @var{h}.\n\
 \n\
@@ -10982,17 +10982,17 @@ addlistener (gcf, \"position\", @{@@my_l
 
   if (args.length () == 4)
     {
       caseless_str persistent = args(3).string_value ();
       if (persistent.compare ("persistent"))
         go.add_property_listener (pname, args(2), PERSISTENT);
     }
 
-  return octave_value_list ();
+  return ovl ();
 }
 
 DEFUN (dellistener, args, ,
        "-*- texinfo -*-\n\
 @deftypefn {} {} dellistener (@var{h}, @var{prop}, @var{fcn})\n\
 Remove the registration of @var{fcn} as a listener for the property\n\
 @var{prop} of the graphics object @var{h}.\n\
 \n\
@@ -11045,17 +11045,17 @@ dellistener (gcf, \"position\", c);\n\
                                        PERSISTENT);
           go.delete_property_listener (pname, octave_value (),
                                        POSTSET);
         }
       else
         go.delete_property_listener (pname, args(2), POSTSET);
     }
 
-  return octave_value_list ();
+  return ovl ();
 }
 
 DEFUN (addproperty, args, ,
        "-*- texinfo -*-\n\
 @deftypefn  {} {} addproperty (@var{name}, @var{h}, @var{type})\n\
 @deftypefnx {} {} addproperty (@var{name}, @var{h}, @var{type}, @var{arg}, @dots{})\n\
 Create a new property named @var{name} in graphics object @var{h}.\n\
 \n\
@@ -11148,17 +11148,17 @@ addproperty (\"my_style\", gcf, \"lineli
   if (go.get_properties ().has_property (name))
     error ("addproperty: a '%s' property already exists in the graphics object",
            name.c_str ());
 
   property p = property::create (name, gh, type, args.splice (0, 3));
 
   go.get_properties ().insert_property (name, p);
 
-  return octave_value_list ();
+  return ovl ();
 }
 
 octave_value
 get_property_from_handle (double handle, const std::string& property,
                           const std::string& func)
 {
   gh_manager::auto_lock guard;
 
@@ -11280,30 +11280,30 @@ waitfor_listener (const octave_value_lis
               if (compare_property_values (pvalue, args(5)))
                 waitfor_results[id] = true;
             }
         }
       else
         waitfor_results[id] = true;
     }
 
-  return octave_value_list ();
+  return ovl ();
 }
 
 static octave_value_list
 waitfor_del_listener (const octave_value_list& args, int)
 {
   if (args.length () > 2)
     {
       uint32_t id = args(2).uint32_scalar_value ().value ();
 
       waitfor_results[id] = true;
     }
 
-  return octave_value_list ();
+  return ovl ();
 }
 
 DEFUN (waitfor, args, ,
        "-*- texinfo -*-\n\
 @deftypefn  {} {} waitfor (@var{h})\n\
 @deftypefnx {} {} waitfor (@var{h}, @var{prop})\n\
 @deftypefnx {} {} waitfor (@var{h}, @var{prop}, @var{value})\n\
 @deftypefnx {} {} waitfor (@dots{}, \"timeout\", @var{timeout})\n\
@@ -11530,17 +11530,17 @@ In all cases, typing CTRL-C stops progra
 
       if (timeout > 0)
         {
           if (start + timeout < time (0))
             break;
         }
     }
 
-  return octave_value_list ();
+  return ovl ();
 }
 
 DEFUN (__zoom__, args, ,
        "-*- texinfo -*-\n\
 @deftypefn  {} {} __zoom__ (@var{axes}, @var{mode}, @var{factor})\n\
 @deftypefnx {} {} __zoom__ (@var{axes}, \"out\")\n\
 @deftypefnx {} {} __zoom__ (@var{axes}, \"reset\")\n\
 Undocumented internal function.\n\
@@ -11584,11 +11584,11 @@ Undocumented internal function.\n\
     {
       std::string mode = args(1).string_value ();
       double factor = args(2).scalar_value ();
 
       ax_props.zoom (mode, factor);
       Vdrawnow_requested = true;
     }
 
-  return octave_value_list ();
-}
-
+  return ovl ();
+}
+
diff --git a/libinterp/corefcn/hess.cc b/libinterp/corefcn/hess.cc
--- a/libinterp/corefcn/hess.cc
+++ b/libinterp/corefcn/hess.cc
@@ -70,24 +70,24 @@ IEEE Transactions on Automatic Control, 
   octave_value arg = args(0);
 
   octave_idx_type nr = arg.rows ();
   octave_idx_type nc = arg.columns ();
 
   int arg_is_empty = empty_arg ("hess", nr, nc);
 
   if (arg_is_empty < 0)
-    return octave_value_list ();
+    return ovl ();
   else if (arg_is_empty > 0)
     return octave_value_list (2, Matrix ());
 
   if (nr != nc)
     {
       gripe_square_matrix_required ("hess");
-      return octave_value_list ();
+      return ovl ();
     }
 
   octave_value_list retval;
 
   if (arg.is_single_type ())
     {
       if (arg.is_real_type ())
         {
diff --git a/libinterp/corefcn/input.cc b/libinterp/corefcn/input.cc
--- a/libinterp/corefcn/input.cc
+++ b/libinterp/corefcn/input.cc
@@ -926,17 +926,17 @@ If @code{keyboard} is invoked without ar
 
   tree_evaluator::debug_mode = true;
   tree_evaluator::quiet_breakpoint_flag = false;
 
   tree_evaluator::current_frame = octave_call_stack::current_frame ();
 
   do_keyboard (args);
 
-  return octave_value_list ();
+  return ovl ();
 }
 
 DEFUN (echo, args, ,
        "-*- texinfo -*-\n\
 @deftypefn  {} {} echo\n\
 @deftypefnx {} {} echo on\n\
 @deftypefnx {} {} echo off\n\
 @deftypefnx {} {} echo on all\n\
@@ -1010,17 +1010,17 @@ With no arguments, @code{echo} toggles t
       }
       break;
 
     default:
       print_usage ();
       break;
     }
 
-  return octave_value_list ();
+  return ovl ();
 }
 
 /*
 %!test
 %! state = echo_executing_commands ();
 %! unwind_protect
 %!   echo ();
 %!   s1 = echo_executing_commands ();
@@ -1180,17 +1180,17 @@ for details.\n\
     command_editor::read_init_file ();
   else
     {
       std::string file = args(0).string_value ();
 
       command_editor::read_init_file (file);
     }
 
-  return octave_value_list ();
+  return ovl ();
 }
 
 DEFUN (readline_re_read_init_file, args, ,
        "-*- texinfo -*-\n\
 @deftypefn {} {} readline_re_read_init_file ()\n\
 Re-read the last readline library initialization file that was read.\n\
 \n\
 @xref{Readline Init File, , , readline, GNU Readline Library},\n\
@@ -1198,17 +1198,17 @@ for details.\n\
 @seealso{readline_read_init_file}\n\
 @end deftypefn")
 {
   if (args.length () != 0)
     print_usage ();
 
   command_editor::re_read_init_file ();
 
-  return octave_value_list ();
+  return ovl ();
 }
 
 static int
 internal_input_event_hook_fcn (void)
 {
   input_event_hook_functions.run ();
 
   if (input_event_hook_functions.empty ())
@@ -1283,17 +1283,17 @@ for input.\n\
     input_event_hook_functions.erase (p);
   else if (warn)
     warning ("remove_input_event_hook: %s not found in list",
              hook_fcn_id.c_str ());
 
   if (input_event_hook_functions.empty ())
     command_editor::remove_event_hook (internal_input_event_hook_fcn);
 
-  return octave_value_list ();
+  return ovl ();
 }
 
 DEFUN (PS1, args, nargout,
        "-*- texinfo -*-\n\
 @deftypefn  {} {@var{val} =} PS1 ()\n\
 @deftypefnx {} {@var{old_val} =} PS1 (@var{new_val})\n\
 @deftypefnx {} {} PS1 (@var{new_val}, \"local\")\n\
 Query or set the primary prompt string.\n\
@@ -1439,17 +1439,17 @@ Undocumented internal function.\n\
   if (nargin > 1)
     print_usage ();
 
   if (nargin == 0)
     Vdrawnow_requested = true;
   else
     Vdrawnow_requested = args(0).bool_value ();
 
-  return octave_value_list ();
+  return ovl ();
 }
 
 DEFUN (__gud_mode__, args, ,
        "-*- texinfo -*-\n\
 @deftypefn {} {} __gud_mode__ ()\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
diff --git a/libinterp/corefcn/inv.cc b/libinterp/corefcn/inv.cc
--- a/libinterp/corefcn/inv.cc
+++ b/libinterp/corefcn/inv.cc
@@ -64,24 +64,24 @@ sparse matrix if possible.\n\
   octave_value arg = args(0);
 
   octave_idx_type nr = arg.rows ();
   octave_idx_type nc = arg.columns ();
 
   int arg_is_empty = empty_arg ("inverse", nr, nc);
 
   if (arg_is_empty < 0)
-    return octave_value_list ();
+    return ovl ();
   else if (arg_is_empty > 0)
     return octave_value (Matrix ());
 
   if (nr != nc)
     {
       gripe_square_matrix_required ("inverse");
-      return octave_value_list ();
+      return ovl ();
     }
 
   octave_value result;
   octave_idx_type info;
   double rcond = 0.0;
   float frcond = 0.0;
   bool isfloat = arg.is_single_type ();
 
diff --git a/libinterp/corefcn/load-path.cc b/libinterp/corefcn/load-path.cc
--- a/libinterp/corefcn/load-path.cc
+++ b/libinterp/corefcn/load-path.cc
@@ -2540,10 +2540,10 @@ rmpath (\"dir1:/dir2:~/dir3\")\n\
 
   return retval;
 }
 
 DEFUN (__dump_load_path__, , , "")
 {
   load_path::display (octave_stdout);
 
-  return octave_value_list ();
+  return ovl ();
 }
diff --git a/libinterp/corefcn/lu.cc b/libinterp/corefcn/lu.cc
--- a/libinterp/corefcn/lu.cc
+++ b/libinterp/corefcn/lu.cc
@@ -190,17 +190,17 @@ information.\n\
   octave_idx_type nr = arg.rows ();
   octave_idx_type nc = arg.columns ();
 
   int arg_is_empty = empty_arg ("lu", nr, nc);
 
   if (issparse)
     {
       if (arg_is_empty < 0)
-        return octave_value_list ();
+        return ovl ();
       else if (arg_is_empty > 0)
         return octave_value_list (5, SparseMatrix ());
 
       if (arg.is_real_type ())
         {
           SparseMatrix m = arg.sparse_matrix_value ();
 
           if (nargout < 4)
@@ -330,17 +330,17 @@ information.\n\
 
         }
       else
         gripe_wrong_type_arg ("lu", arg);
     }
   else
     {
       if (arg_is_empty < 0)
-        return octave_value_list ();
+        return ovl ();
       else if (arg_is_empty > 0)
         return octave_value_list (3, Matrix ());
 
       if (arg.is_real_type ())
         {
           if (arg.is_single_type ())
             {
               FloatMatrix m = arg.float_matrix_value ();
diff --git a/libinterp/corefcn/octave-link.cc b/libinterp/corefcn/octave-link.cc
--- a/libinterp/corefcn/octave-link.cc
+++ b/libinterp/corefcn/octave-link.cc
@@ -190,17 +190,17 @@ Undocumented internal function.\n\
 
 DEFUN (__octave_link_file_dialog__, args, ,
        "-*- texinfo -*-\n\
 @deftypefn {} {} __octave_link_file_dialog__ (@var{filterlist}, @var{title}, @var{filename}, @var{size} @var{multiselect}, @var{pathname})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   if (args.length () != 6)
-    return octave_value_list ();
+    return ovl ();
 
   octave_value_list retval (3);
 
   const Array<std::string> flist = args(0).cellstr_value ();
   std::string title = args(1).string_value ();
   std::string filename = args(2).string_value ();
   Matrix pos = args(3).matrix_value ();
   std::string multi_on = args(4).string_value (); // on, off, create
@@ -260,17 +260,17 @@ Undocumented internal function.\n\
 
 DEFUN (__octave_link_list_dialog__, args, ,
        "-*- texinfo -*-\n\
 @deftypefn {} {} __octave_link_list_dialog__ (@var{list}, @var{mode}, @var{size}, @var{intial}, @var{name}, @var{prompt}, @var{ok_string}, @var{cancel_string})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   if (args.length () != 8)
-    return octave_value_list ();
+    return ovl ();
 
   Cell list = args(0).cell_value ();
   const Array<std::string> tlist = list.cellstr_value ();
   octave_idx_type nel = tlist.numel ();
   std::list<std::string> list_lst;
   for (octave_idx_type i = 0; i < nel; i++)
     list_lst.push_back (tlist(i));
 
@@ -318,17 +318,17 @@ Undocumented internal function.\n\
 
 DEFUN (__octave_link_input_dialog__, args, ,
        "-*- texinfo -*-\n\
 @deftypefn {} {} __octave_link_input_dialog__ (@var{prompt}, @var{title}, @var{rowscols}, @var{defaults})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   if (args.length () != 4)
-    return octave_value_list ();
+    return ovl ();
 
   Cell prompt = args(0).cell_value ();
   Array<std::string> tmp = prompt.cellstr_value ();
   octave_idx_type nel = tmp.numel ();
   std::list<std::string> prompt_lst;
   for (octave_idx_type i = 0; i < nel; i++)
     prompt_lst.push_back (tmp(i));
 
diff --git a/libinterp/corefcn/pager.cc b/libinterp/corefcn/pager.cc
--- a/libinterp/corefcn/pager.cc
+++ b/libinterp/corefcn/pager.cc
@@ -569,17 +569,17 @@ With no arguments, @code{diary} toggles 
       else
         {
           diary_file = arg;
           write_to_diary_file = true;
           open_diary_file ();
         }
     }
 
-  return octave_value_list ();
+  return ovl ();
 }
 
 DEFUN (__diaryfile__, , ,
        "-*- texinfo -*-\n\
 @deftypefn {} {@var{fname} =} __diaryfile__ ()\n\
 Undocumented internal function\n\
 @end deftypefn")
 {
@@ -622,17 +622,17 @@ The current state can be determined via 
       else if (arg == "off")
         Vpage_screen_output = false;
       else
         error ("more: argument must be \"on\" or \"off\"");
     }
   else
     Vpage_screen_output = ! Vpage_screen_output;
 
-  return octave_value_list ();
+  return ovl ();
 }
 
 DEFUN (terminal_size, , ,
        "-*- texinfo -*-\n\
 @deftypefn {} {} terminal_size ()\n\
 Return a two-element row vector containing the current size of the terminal\n\
 window in characters (rows and columns).\n\
 @seealso{list_in_columns}\n\
diff --git a/libinterp/corefcn/pinv.cc b/libinterp/corefcn/pinv.cc
--- a/libinterp/corefcn/pinv.cc
+++ b/libinterp/corefcn/pinv.cc
@@ -59,17 +59,17 @@ where @code{sigma_max (@var{x})} is the 
   if (nargin < 1 || nargin > 2)
     print_usage ();
 
   octave_value arg = args(0);
 
   int arg_is_empty = empty_arg ("pinv", arg.rows (), arg.columns ());
 
   if (arg_is_empty < 0)
-    return octave_value_list ();
+    return ovl ();
   else if (arg_is_empty > 0)
     return octave_value (Matrix ());
 
   octave_value retval;
 
   bool isfloat = arg.is_single_type ();
 
   if (arg.is_diag_matrix ())
diff --git a/libinterp/corefcn/pr-output.cc b/libinterp/corefcn/pr-output.cc
--- a/libinterp/corefcn/pr-output.cc
+++ b/libinterp/corefcn/pr-output.cc
@@ -3551,17 +3551,17 @@ Note that the output from @code{fdisp} a
 
   octave_value arg = args(1);
 
   if (osp)
     arg.print (*osp);
   else
     error ("fdisp: stream FID not open for writing");
 
-  return octave_value_list ();
+  return ovl ();
 }
 
 /*
 %!test
 %! format short
 %! fd = tmpfile ();
 %! for r = [0, Inf -Inf, NaN]
 %!   for i = [0, Inf -Inf, NaN]
@@ -4026,17 +4026,17 @@ to produce a more readable output with l
 @end deftypefn")
 {
   int argc = args.length () + 1;
 
   string_vector argv = args.make_argv ("format");
 
   set_format_style (argc, argv);
 
-  return octave_value_list ();
+  return ovl ();
 }
 
 DEFUN (__compactformat__, args, nargout,
        "-*- texinfo -*-\n\
 @deftypefn  {} {@var{val} =} __compactformat__ ()\n\
 @deftypefnx {} {} __compactformat__ (@var{TRUE|FALSE})\n\
 Undocumented internal function\n\
 @end deftypefn")
diff --git a/libinterp/corefcn/profiler.cc b/libinterp/corefcn/profiler.cc
--- a/libinterp/corefcn/profiler.cc
+++ b/libinterp/corefcn/profiler.cc
@@ -416,17 +416,17 @@ DEFUN (__profiler_reset__, args, ,
 Undocumented internal function.\n\
 @end deftypefn")
 {
   if (args.length () > 0)
     warning ("profiler_reset: ignoring extra arguments");
 
   profiler.reset ();
 
-  return octave_value_list ();
+  return ovl ();
 }
 
 // Query the timings collected by the profiler.
 DEFUN (__profiler_data__, args, nargout,
        "-*- texinfo -*-\n\
 @deftypefn {} {} __profiler_data__ ()\n\
 Undocumented internal function.\n\
 @end deftypefn")
diff --git a/libinterp/corefcn/schur.cc b/libinterp/corefcn/schur.cc
--- a/libinterp/corefcn/schur.cc
+++ b/libinterp/corefcn/schur.cc
@@ -154,27 +154,27 @@ in control (see @code{are} and @code{dar
     {
       char ord_char = ord.empty () ? 'U' : ord[0];
 
       if (ord_char != 'U' && ord_char != 'A' && ord_char != 'D'
           && ord_char != 'u' && ord_char != 'a' && ord_char != 'd')
         {
           warning ("schur: incorrect ordered schur argument '%s'",
                    ord.c_str ());
-          return octave_value_list ();
+          return ovl ();
         }
     }
 
   octave_idx_type nr = arg.rows ();
   octave_idx_type nc = arg.columns ();
 
   if (nr != nc)
     {
       gripe_square_matrix_required ("schur");
-      return octave_value_list ();
+      return ovl ();
     }
 
   octave_value_list retval;
 
   if (! arg.is_numeric_type ())
     gripe_wrong_type_arg ("schur", arg);
   else if (arg.is_single_type ())
     {
diff --git a/libinterp/corefcn/symtab.cc b/libinterp/corefcn/symtab.cc
--- a/libinterp/corefcn/symtab.cc
+++ b/libinterp/corefcn/symtab.cc
@@ -1842,17 +1842,17 @@ DEFUN (set_variable, args, , "set_variab
 {
   if (args.length () != 2)
     print_usage ();
 
   std::string name = args(0).xstring_value ("set_variable: variable NAME must be a string");
 
   symbol_table::assign (name, args(1));
 
-  return octave_value_list ();
+  return ovl ();
 }
 
 DEFUN (variable_value, args, , "VALUE = variable_value (NAME)")
 {
   if (args.length () != 1)
     print_usage ();
 
   octave_value retval;
diff --git a/libinterp/corefcn/sysdep.cc b/libinterp/corefcn/sysdep.cc
--- a/libinterp/corefcn/sysdep.cc
+++ b/libinterp/corefcn/sysdep.cc
@@ -585,17 +585,17 @@ DEFUN (clc, , ,
 @deftypefnx {} {} home ()\n\
 Clear the terminal screen and move the cursor to the upper left corner.\n\
 @end deftypefn")
 {
   bool skip_redisplay = true;
 
   command_editor::clear_screen (skip_redisplay);
 
-  return octave_value_list ();
+  return ovl ();
 }
 
 DEFALIAS (home, clc);
 
 DEFUN (getenv, args, ,
        "-*- texinfo -*-\n\
 @deftypefn {} {} getenv (@var{var})\n\
 Return the value of the environment variable @var{var}.\n\
@@ -728,17 +728,17 @@ returning the empty string if no key is 
       if (c == -1)
         c = 0;
 
       char s[2] = { static_cast<char> (c), '\0' };
 
       retval = s;
     }
 
-  return octave_value_list ();
+  return ovl ();
 }
 
 DEFUN (pause, args, ,
        "-*- texinfo -*-\n\
 @deftypefn  {} {} pause ()\n\
 @deftypefnx {} {} pause (@var{n})\n\
 Suspend the execution of the program for @var{n} seconds.\n\
 \n\
@@ -795,17 +795,17 @@ clc;\n\
     }
   else
     {
       Fdrawnow ();
       flush_octave_stdout ();
       octave_kbhit ();
     }
 
-  return octave_value_list ();
+  return ovl ();
 }
 
 /*
 %!test
 %! pause (1);
 
 %!error (pause (1, 2))
 */
diff --git a/libinterp/corefcn/urlwrite.cc b/libinterp/corefcn/urlwrite.cc
--- a/libinterp/corefcn/urlwrite.cc
+++ b/libinterp/corefcn/urlwrite.cc
@@ -554,17 +554,17 @@ Undocumented internal function\n\
 
   url_transfer curl = ch_manager::get_object (args(0));
 
   if (! curl.is_valid ())
     error ("__ftp_cwd__: invalid ftp handle");
 
   curl.cwd (path);
 
-  return octave_value_list ();
+  return ovl ();
 }
 
 DEFUN (__ftp_dir__, args, nargout,
        "-*- texinfo -*-\n\
 @deftypefn {} {} __ftp_dir__ (@var{handle})\n\
 Undocumented internal function\n\
 @end deftypefn")
 {
@@ -645,17 +645,17 @@ Undocumented internal function\n\
 
   url_transfer curl = ch_manager::get_object (args(0));
 
   if (! curl.is_valid ())
     error ("__ftp_ascii__: invalid ftp handle");
 
   curl.ascii ();
 
-  return octave_value_list ();
+  return ovl ();
 }
 
 DEFUN (__ftp_binary__, args, ,
        "-*- texinfo -*-\n\
 @deftypefn {} {} __ftp_binary__ (@var{handle})\n\
 Undocumented internal function\n\
 @end deftypefn")
 {
@@ -664,17 +664,17 @@ Undocumented internal function\n\
 
   url_transfer curl = ch_manager::get_object (args(0));
 
   if (! curl.is_valid ())
     error ("__ftp_binary__: invalid ftp handle");
 
   curl.binary ();
 
-  return octave_value_list ();
+  return ovl ();
 }
 
 DEFUN (__ftp_close__, args, ,
        "-*- texinfo -*-\n\
 @deftypefn {} {} __ftp_close__ (@var{handle})\n\
 Undocumented internal function\n\
 @end deftypefn")
 {
@@ -683,17 +683,17 @@ Undocumented internal function\n\
 
   curl_handle h = ch_manager::lookup (args(0));
 
   if (! h.ok ())
     error ("__ftp_close__: invalid ftp handle");
 
   ch_manager::free (h);
 
-  return octave_value_list ();
+  return ovl ();
 }
 
 DEFUN (__ftp_mode__, args, ,
        "-*- texinfo -*-\n\
 @deftypefn {} {} __ftp_mode__ (@var{handle})\n\
 Undocumented internal function\n\
 @end deftypefn")
 {
@@ -723,17 +723,17 @@ Undocumented internal function\n\
 
   url_transfer curl = ch_manager::get_object (args(0));
 
   if (! curl.is_valid ())
     error ("__ftp_delete__: invalid ftp handle");
 
   curl.del (file);
 
-  return octave_value_list ();
+  return ovl ();
 }
 
 DEFUN (__ftp_rmdir__, args, ,
        "-*- texinfo -*-\n\
 @deftypefn {} {} __ftp_rmdir__ (@var{handle}, @var{path})\n\
 Undocumented internal function\n\
 @end deftypefn")
 {
@@ -746,17 +746,17 @@ Undocumented internal function\n\
 
   url_transfer curl = ch_manager::get_object (args(0));
 
   if (! curl.is_valid ())
     error ("__ftp_rmdir__: invalid ftp handle");
 
   curl.rmdir (dir);
 
-  return octave_value_list ();
+  return ovl ();
 }
 
 DEFUN (__ftp_mkdir__, args, ,
        "-*- texinfo -*-\n\
 @deftypefn {} {} __ftp_mkdir__ (@var{handle}, @var{path})\n\
 Undocumented internal function\n\
 @end deftypefn")
 {
@@ -767,17 +767,17 @@ Undocumented internal function\n\
 
   url_transfer curl = ch_manager::get_object (args(0));
 
   if (! curl.is_valid ())
     error ("__ftp_mkdir__: invalid ftp handle");
 
   curl.mkdir (dir);
 
-  return octave_value_list ();
+  return ovl ();
 }
 
 DEFUN (__ftp_rename__, args, ,
        "-*- texinfo -*-\n\
 @deftypefn {} {} __ftp_rename__ (@var{handle}, @var{path})\n\
 Undocumented internal function\n\
 @end deftypefn")
 {
@@ -789,17 +789,17 @@ Undocumented internal function\n\
 
   url_transfer curl = ch_manager::get_object (args(0));
 
   if (curl.is_valid ())
     error ("__ftp_rename__: invalid ftp handle");
 
   curl.rename (oldname, newname);
 
-  return octave_value_list ();
+  return ovl ();
 }
 
 DEFUN (__ftp_mput__, args, nargout,
        "-*- texinfo -*-\n\
 @deftypefn {} {} __ftp_mput__ (@var{handle}, @var{files})\n\
 Undocumented internal function\n\
 @end deftypefn")
 {
@@ -851,17 +851,17 @@ Undocumented internal function\n\
 
           file_list.append (file);
         }
     }
 
   if (nargout > 0)
     return ovl (file_list);
   else
-    return octave_value_list ();
+    return ovl ();
 }
 
 DEFUN (__ftp_mget__, args, ,
        "-*- texinfo -*-\n\
 @deftypefn  {} {} __ftp_mget__ (@var{handle}, @var{pattern})\n\
 @deftypefnx {} {} __ftp_mget__ (@var{handle}, @var{pattern}, @var{target})\n\
 Undocumented internal function\n\
 @end deftypefn")
@@ -925,10 +925,10 @@ Undocumented internal function\n\
           if (! curl.good ())
             error ("__ftp_mget__: %s", curl.lasterror().c_str());
         }
     }
 
   if (n == 0)
     error ("__ftp_mget__: file not found");
 
-  return octave_value_list ();
+  return ovl ();
 }
diff --git a/libinterp/corefcn/variables.cc b/libinterp/corefcn/variables.cc
--- a/libinterp/corefcn/variables.cc
+++ b/libinterp/corefcn/variables.cc
@@ -1987,17 +1987,17 @@ Lock the current function into memory so
 
   octave_function *fcn = octave_call_stack::caller ();
 
   if (! fcn)
     error ("mlock: invalid use outside a function");
 
     fcn->lock ();
 
-  return octave_value_list ();
+  return ovl ();
 }
 
 DEFUN (munlock, args, ,
        "-*- texinfo -*-\n\
 @deftypefn  {} {} munlock ()\n\
 @deftypefnx {} {} munlock (@var{fcn})\n\
 Unlock the named function @var{fcn}.\n\
 \n\
@@ -2021,17 +2021,17 @@ If no function is named then unlock the 
       octave_function *fcn = octave_call_stack::caller ();
 
       if (! fcn)
         error ("munlock: invalid use outside a function");
 
       fcn->unlock ();
     }
 
-  return octave_value_list ();
+  return ovl ();
 }
 
 
 DEFUN (mislocked, args, ,
        "-*- texinfo -*-\n\
 @deftypefn  {} {} mislocked ()\n\
 @deftypefnx {} {} mislocked (@var{fcn})\n\
 Return true if the named function @var{fcn} is locked.\n\
@@ -2479,17 +2479,17 @@ without the dash as well.\n\
                   do_clear_symbols (argv, argc, idx, exclusive);
                 }
             }
 
           octave_link::set_workspace ();
         }
     }
 
-  return octave_value_list ();
+  return ovl ();
 }
 
 DEFUN (whos_line_format, args, nargout,
        "-*- texinfo -*-\n\
 @deftypefn  {} {@var{val} =} whos_line_format ()\n\
 @deftypefnx {} {@var{old_val} =} whos_line_format (@var{new_val})\n\
 @deftypefnx {} {} whos_line_format (@var{new_val}, \"local\")\n\
 Query or set the format string used by the command @code{whos}.\n\
diff --git a/libinterp/dldfcn/__magick_read__.cc b/libinterp/dldfcn/__magick_read__.cc
--- a/libinterp/dldfcn/__magick_read__.cc
+++ b/libinterp/dldfcn/__magick_read__.cc
@@ -1532,17 +1532,17 @@ Use @code{imwrite} instead.\n\
   else COMPRESS_MAGICK_IMAGE_VECTOR("lzw", Magick::LZWCompression)
   else COMPRESS_MAGICK_IMAGE_VECTOR("rle", Magick::RLECompression)
   else COMPRESS_MAGICK_IMAGE_VECTOR("deflate", Magick::ZipCompression)
 
 #undef COMPRESS_MAGICK_IMAGE_VECTOR
 
   write_file (filename, ext, imvec);
 
-  return octave_value_list ();
+  return ovl ();
 
 #else
   gripe_disabled_feature ("imwrite", "Image IO");
 #endif
 }
 
 /*
 ## No test needed for internal helper function.
diff --git a/libinterp/dldfcn/audioread.cc b/libinterp/dldfcn/audioread.cc
--- a/libinterp/dldfcn/audioread.cc
+++ b/libinterp/dldfcn/audioread.cc
@@ -272,17 +272,17 @@ Comment.\n\
     bias = scale = std::pow (2.0, 7);
   else if (args(1).is_int16_type ())
     scale = std::pow (2.0, 15);
   else if (args(1).is_int32_type ())
     scale = std::pow (2.0, 31);
   else if (args(1).is_integer_type ())
     {
       gripe_wrong_type_arg ("audiowrite", args(1));
-      return octave_value_list ();
+      return ovl ();
     }
 
   Matrix audio = args(1).matrix_value ();
 
   int samplerate = args(2).int_value ();
 
   std::string ext;
   size_t dotpos = filename.find_last_of (".");
@@ -411,17 +411,17 @@ Comment.\n\
                items_written, chunk_size);
 
       total_items_written += items_written;
       offset += chunk_size;
     }
 
   // FIXME: shouldn't we return something to indicate whether the file
   // was written successfully?
-  return octave_value_list ();
+  return ovl ();
 
 #else
 
   error ("sndfile not found on your system and thus audiowrite is not functional");
 
 #endif
 }
 
diff --git a/libinterp/dldfcn/chol.cc b/libinterp/dldfcn/chol.cc
--- a/libinterp/dldfcn/chol.cc
+++ b/libinterp/dldfcn/chol.cc
@@ -175,17 +175,17 @@ sparse matrices.\n\
   octave_value arg = args(0);
 
   octave_idx_type nr = arg.rows ();
   octave_idx_type nc = arg.columns ();
 
   int arg_is_empty = empty_arg ("chol", nr, nc);
 
   if (arg_is_empty < 0)
-    return octave_value_list ();
+    return ovl ();
   if (arg_is_empty > 0)
     return octave_value (Matrix ());
 
   if (arg.is_sparse_type ())
     {
       octave_idx_type info;
       bool natural = (nargout != 3);
       bool force = nargout > 1;
diff --git a/libinterp/octave-value/ov-classdef.h b/libinterp/octave-value/ov-classdef.h
--- a/libinterp/octave-value/ov-classdef.h
+++ b/libinterp/octave-value/ov-classdef.h
@@ -106,17 +106,17 @@ public:
     return octave_value ();
   }
 
   virtual octave_value_list
   subsref (const std::string&, const std::list<octave_value_list>&,
            int, size_t&, const cdef_class&, bool)
   {
     gripe_invalid_object ("subsref");
-    return octave_value_list ();
+    return ovl ();
   }
 
   virtual octave_value
   subsasgn (const std::string&, const std::list<octave_value_list>&,
             const octave_value&)
   {
     gripe_invalid_object ("subsasgn");
     return octave_value ();
diff --git a/libinterp/octave-value/ov-cs-list.cc b/libinterp/octave-value/ov-cs-list.cc
--- a/libinterp/octave-value/ov-cs-list.cc
+++ b/libinterp/octave-value/ov-cs-list.cc
@@ -51,11 +51,11 @@ octave_cs_list::subsref (const std::stri
   return octave_value ();
 }
 
 octave_value_list
 octave_cs_list::subsref (const std::string&,
                          const std::list<octave_value_list>&, int)
 {
   gripe_indexed_cs_list ();
-  return octave_value_list ();
+  return ovl ();
 }
 
diff --git a/libinterp/octave-value/ov-flt-re-mat.cc b/libinterp/octave-value/ov-flt-re-mat.cc
--- a/libinterp/octave-value/ov-flt-re-mat.cc
+++ b/libinterp/octave-value/ov-flt-re-mat.cc
@@ -890,17 +890,17 @@ Convert @var{x} to single precision type
                               octave_float_complex);
     }
   else
     {
       OCTAVE_TYPE_CONV_BODY3 (single, octave_float_matrix,
                               octave_float_scalar);
     }
 
-  return octave_value_list ();
+  return ovl ();
 }
 
 /*
 %!assert (class (single (1)), "single")
 %!assert (class (single (1 + i)), "single")
 %!assert (class (single (int8 (1))), "single")
 %!assert (class (single (uint8 (1))), "single")
 %!assert (class (single (int16 (1))), "single")
diff --git a/libinterp/octave-value/ov-re-mat.cc b/libinterp/octave-value/ov-re-mat.cc
--- a/libinterp/octave-value/ov-re-mat.cc
+++ b/libinterp/octave-value/ov-re-mat.cc
@@ -1025,17 +1025,17 @@ Convert @var{x} to double precision type
       OCTAVE_TYPE_CONV_BODY3 (double, octave_complex_matrix,
                               octave_complex);
     }
   else
     {
       OCTAVE_TYPE_CONV_BODY3 (double, octave_matrix, octave_scalar);
     }
 
-  return octave_value_list ();
+  return ovl ();
 }
 
 /*
 %!assert (class (double (single (1))), "double")
 %!assert (class (double (single (1 + i))), "double")
 %!assert (class (double (int8 (1))), "double")
 %!assert (class (double (uint8 (1))), "double")
 %!assert (class (double (int16 (1))), "double")
diff --git a/libinterp/octave-value/ov-usr-fcn.cc b/libinterp/octave-value/ov-usr-fcn.cc
--- a/libinterp/octave-value/ov-usr-fcn.cc
+++ b/libinterp/octave-value/ov-usr-fcn.cc
@@ -1075,17 +1075,17 @@ element-by-element and a logical array i
       for (octave_idx_type i = 0; i < ka.numel (); i++)
         r(i) = isargout1 (nargout1, ignored, ka(i));
 
       return ovl (r);
     }
   else
     gripe_wrong_type_arg ("isargout", args(0));
 
-  return octave_value_list ();
+  return ovl ();
 }
 
 /*
 %!function [x, y] = try_isargout ()
 %!  if (isargout (1))
 %!    if (isargout (2))
 %!      x = 1; y = 2;
 %!    else
