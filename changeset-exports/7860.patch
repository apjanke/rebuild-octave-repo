# HG changeset patch
# User Shai Ayal <shaiay@users.sourceforge.net>
# Date 1205521336 -7200
#      Fri Mar 14 21:02:16 2008 +0200
# Node ID 67edbcb19665446df26053e3670a6f31078c0897
# Parent  fdd465b00ec0860ffaaea82f1fa166a7c81943c6
rudimentry (i.e. no font metrics) sync of axes.position and axes.outerposition
* * *
preserve axes position if mode is replace
* * *
use default_axes_postion when syncing outerposition and position
* * *
Update transformation matrices when axes position changes.

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,20 @@
 2008-06-04  Shai Ayal  <shaiay@users.sourceforge.net>
 
+	* graphics.cc (axes::properties::set_defaults): Preserve position
+	if mode is replace.
+	(axes::properties::sync_positions): Use default_axes_postion for
+	consistency.
+
+	* graphics.h.in (axes::properties::sync_positions,
+	axes::properties::update_position,
+	axes::properties::update_outerposition): New functions to sync
+	outerposition and position.
+
 	* graphics.h.in (axes::properties::update_xlim,
 	axes::properties::update_ylim, axes::properties::update_zlim):
 	pass is_logscale flag to axes::properties::calc_ticks_and_lims
 	* graphics.cc (axes::properties::calc_ticks_and_lims): Added
 	support for log scale
 
 	* graphics.h.in (axes::properities::fix_limits) : New method.
 	(axes::properties::update_xlim, axes::properties::update_ylim,
@@ -32,16 +42,19 @@ 2008-06-04  Shai Ayal  <shaiay@users.sou
 
 	* graphics.h.in (axes::properties::update_xlim): call the new
 	axes::properties::calc_ticks_and_lims method
 	(axes::properties::update_ylim): ditto
 	(axes::properties::update_zlim): ditto
 
 2008-06-04  Michael Goffioul <michael.goffioul@gmail.com>
 
+	* graphics.cc (axes::properties::sync_positions): Update
+	transformation data.
+
 	* graphics.cc (Faddlistener): Rename from Fadd_listener.
 
 	* graphics.h.in (axes::properties::pixel2coord): Center Z coordinate
 	on x_zlim instead of 0.
 	(axes::properties::zoom, axes::properties::unzoom,
 	axes::properties::clear_zoom_stack): New methods to handle zoom stack.
 	(axes::properties::zoom_stack): New field to hold zoom stack.
 	(axes::properties::update_xlim, axes::properites::update_ylim):
diff --git a/src/graphics.cc b/src/graphics.cc
--- a/src/graphics.cc
+++ b/src/graphics.cc
@@ -167,16 +167,18 @@ default_figure_position (void)
   Matrix m (1, 4, 0.0);
   m(0) = 300;
   m(1) = 200;
   m(2) = 560;
   m(3) = 420;
   return m;
 }
 
+
+
 static void
 xset_gcbo (const graphics_handle& h)
 {
   graphics_object go = gh_manager::get_object (0);
   root_figure::properties& props =
       dynamic_cast<root_figure::properties&> (go.get_properties ());
 
   props.set_callbackobject (h.as_octave_value ());
@@ -1816,16 +1818,45 @@ figure::get_default (const caseless_str&
       retval = parent_obj.get_default (name);
     }
 
   return retval;
 }
 
 // ---------------------------------------------------------------------
 
+void 
+axes::properties::sync_positions (void)
+{
+  // FIXME -- this should take font metrics into consideration,
+  // for now we'll just make it position 90% of outerposition
+  if (activepositionproperty.is ("outerposition"))
+    {
+      Matrix outpos = outerposition.get ().matrix_value ();
+      Matrix defpos = default_axes_position ();
+      Matrix pos(outpos);
+      pos(0) = outpos(0) + defpos(0) * outpos(2);
+      pos(1) = outpos(1) + defpos(1) * outpos(3);
+      pos(2) = outpos(2) * defpos(2);
+      pos(3) = outpos(3) * defpos(3);
+      position = pos;
+    }
+  else
+    {
+      Matrix pos = position.get ().matrix_value ();
+      pos(0) -= pos(2)*0.05;
+      pos(1) -= pos(3)*0.05;
+      pos(2) *= 1.1;
+      pos(3) *= 1.1;
+      outerposition = pos;
+    }
+
+  update_transform ();
+}
+
 void
 axes::properties::set_title (const octave_value& v)
 {
   graphics_handle val = ::reparent (v, "set", "title", __myhandle__, false);
 
   if (! error_state)
     {
       gh_manager::free (title.handle_value ());
@@ -1868,17 +1899,16 @@ axes::properties::set_zlabel (const octa
       zlabel = val;
     }
 }
 
 void
 axes::properties::set_defaults (base_graphics_object& obj,
 				const std::string& mode)
 {
-  position = default_axes_position ();
   title = graphics_handle ();
   box = "on";
   key = "off";
   keybox = "off";
   keypos = 1.0;
   colororder = default_colororder ();
   dataaspectratio = Matrix (1, 3, 1.0);
   dataaspectratiomode = "auto";
@@ -1971,16 +2001,18 @@ axes::properties::set_defaults (base_gra
   // "position" and "units".
 
   if (mode != "replace")
     {
       Matrix touterposition (1, 4, 0.0);
       touterposition(2) = 1;
       touterposition(3) = 1;
       outerposition = touterposition;
+
+      position = default_axes_position ();
     }
 
   activepositionproperty = "outerposition";
   __colorbar__  = "none";
 
   delete_children ();
 
   children = Matrix ();
diff --git a/src/graphics.h.in b/src/graphics.h.in
--- a/src/graphics.h.in
+++ b/src/graphics.h.in
@@ -2561,17 +2561,17 @@ public:
     Matrix x_gl_mat1, x_gl_mat2;
     Matrix x_zlim;
     std::list<octave_value> zoom_stack;
 
     // See the genprops.awk script for an explanation of the
     // properties declarations.
 
     BEGIN_PROPERTIES(axes)
-      array_property position , default_axes_position ()
+      array_property position u , default_axes_position ()
       mutable handle_property title GSO , graphics_handle ()
       bool_property box , "on"
       bool_property key , "off"
       bool_property keybox , "off"
       double_property keypos , 1
       array_property colororder , default_colororder ()
       array_property dataaspectratio m , Matrix (1, 3, 1.0)
       radio_property dataaspectratiomode , "{auto}|manual"
@@ -2620,17 +2620,17 @@ public:
       radio_property zscale alu , "{linear}|log"
       radio_property xdir u , "{normal}|reverse"
       radio_property ydir u , "{normal}|reverse"
       radio_property zdir u , "{normal}|reverse"
       radio_property yaxislocation , "{left}|right|zero"
       radio_property xaxislocation , "{bottom}|top|zero"
       array_property view u , Matrix ()
       radio_property nextplot , "add|replace_children|{replace}"
-      array_property outerposition , default_axes_outerposition ()
+      array_property outerposition u , default_axes_outerposition ()
       radio_property activepositionproperty , "{outerposition}|position"
       radio_property __colorbar__ h , "{none}|north|south|east|west|northoutside|southoutside|eastoutside|westoutside"
       color_property ambientlightcolor , color_values (1, 1, 1)
       array_property cameraposition m , Matrix (1, 3, 0.0)
       array_property cameratarget m , Matrix (1, 3, 0.0)
       array_property cameraupvector m , Matrix ()
       double_property cameraviewangle m , 10.0
       radio_property camerapositionmode , "{auto}|manual"
@@ -2708,16 +2708,20 @@ public:
     void update_zscale (void) { sz = get_zscale (); }
 
     void update_view (void) { update_camera (); }
 
     void update_xdir (void) { update_camera (); }
     void update_ydir (void) { update_camera (); }
     void update_zdir (void) { update_camera (); }
 
+    void sync_positions (void);
+    void update_outerposition (void) { sync_positions ();}
+    void update_position (void) { sync_positions (); }
+
     double calc_tick_sep (double minval, double maxval);
     void calc_ticks_and_lims (array_property& lims, array_property& ticks, bool limmode_is_auto, bool is_logscale);
     void fix_limits (array_property& lims)
     {
       if (lims.get ().is_empty ()) 
 	return;
 
       Matrix l = lims.get ().matrix_value ();
