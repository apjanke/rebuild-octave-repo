# HG changeset patch
# User Rik <rik@octave.org>
# Date 1448487100 28800
#      Wed Nov 25 13:31:40 2015 -0800
# Branch stable
# Node ID f819397c0bc119cbe8aef441536cc8000dbf3f9f
# Parent  a0655d18c9cc120f7755db054330f42c690116a8
Stop segfault when find() called with 6 outputs (bug #42424).

* find.cc (find_nonzero_elem_idx): Restrict nargout to std::min (nargout, 5).
Remove default label in case statement which is no longer reachable.

diff --git a/libinterp/corefcn/find.cc b/libinterp/corefcn/find.cc
--- a/libinterp/corefcn/find.cc
+++ b/libinterp/corefcn/find.cc
@@ -82,16 +82,17 @@ find_nonzero_elem_idx (const Array<T>& n
   return retval;
 }
 
 template <typename T>
 octave_value_list
 find_nonzero_elem_idx (const Sparse<T>& v, int nargout,
                        octave_idx_type n_to_find, int direction)
 {
+  nargout = std::min (nargout, 5);
   octave_value_list retval ((nargout == 0 ? 1 : nargout), Matrix ());
 
   octave_idx_type nr = v.rows ();
   octave_idx_type nc = v.cols ();
   octave_idx_type nz = v.nnz ();
 
   // Search in the default range.
   octave_idx_type start_nc = -1;
@@ -212,31 +213,27 @@ find_nonzero_elem_idx (const Sparse<T>& 
 
     case 3:
       retval(2) = val;
       // Fall through!
 
     case 2:
       retval(1) = j_idx;
       retval(0) = i_idx;
-      break;
-
-    default:
-      panic_impossible ();
-      break;
     }
 
   return retval;
 }
 
 octave_value_list
 find_nonzero_elem_idx (const PermMatrix& v, int nargout,
                        octave_idx_type n_to_find, int direction)
 {
   // There are far fewer special cases to handle for a PermMatrix.
+  nargout = std::min (nargout, 5);
   octave_value_list retval ((nargout == 0 ? 1 : nargout), Matrix ());
 
   octave_idx_type nr = v.rows ();
   octave_idx_type nc = v.cols ();
   octave_idx_type start_nc, count;
 
   // Determine the range to search.
   if (n_to_find < 0 || n_to_find >= nc)
@@ -310,21 +307,16 @@ find_nonzero_elem_idx (const PermMatrix&
 
     case 3:
       retval(2) = val;
       // Fall through!
 
     case 2:
       retval(1) = j_idx;
       retval(0) = i_idx;
-      break;
-
-    default:
-      panic_impossible ();
-      break;
     }
 
   return retval;
 }
 
 DEFUN (find, args, nargout,
        "-*- texinfo -*-\n\
 @deftypefn  {Built-in Function} {@var{idx} =} find (@var{x})\n\
