# HG changeset patch
# User jwe
# Date 1168463602 0
#      Wed Jan 10 21:13:22 2007 +0000
# Node ID 3ecd8d2c5654931683b973728e5e89b4e4eb2323
# Parent  4a8c7f586ec44cedfb2ba8928eb276699fbefc04
[project @ 2007-01-10 21:13:21 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2007-01-10  Luis F. Ortiz  <lortiz@interactivesupercomputing.com>
+
+	* parse.y (load_fcn_from_file): Delete unused variable NAMES.
+	If NM is absolute, strip directory and extension parts.
+
 2007-01-10  Michael Goffioul  <michael.goffioul@swing.be>
 
 	* DLD-FUNCTIONS/getrusage.cc: Use #ifdef __WIN32__, not __MINGW32__.
 
 2007-01-10  John W. Eaton  <jwe@octave.org>
 
 	* parse.y (load_fcn_from_file): Only compare last two characters
 	when looking for ".m".
diff --git a/src/parse.y b/src/parse.y
--- a/src/parse.y
+++ b/src/parse.y
@@ -3394,34 +3394,37 @@ reverse_lookup_autoload (const std::stri
   for (am_iter p = autoload_map.begin (); p != autoload_map.end (); p++)
     if (nm == p->second)
       names.append (p->first);
 
   return names;
 }
 
 bool
-load_fcn_from_file (const std::string& nm, bool exec_script)
+load_fcn_from_file (const std::string& nm_arg, bool exec_script)
 {
   unwind_protect::begin_frame ("load_fcn_from_file");
 
   bool script_file_executed = false;
 
-  string_vector names (2);
-
-  int nm_len = nm.length ();
+  std::string nm = nm_arg;
+
+  size_t nm_len = nm.length ();
 
   std::string file;
 
   if (octave_env::absolute_pathname (nm)
       && ((nm_len > 4 && nm.substr (nm_len-4) == ".oct")
 	  || (nm_len > 4 && nm.substr (nm_len-4) == ".mex")
 	  || (nm_len > 2 && nm.substr (nm_len-2) == ".m")))
     {
       file = nm;
+
+      nm = octave_env::base_pathname (file);
+      nm = nm.substr (0, nm.find_last_of ('.'));
     }
   else
     {
       file = lookup_autoload (nm);
 
       if (! file.empty ())
 	{
 	  unwind_protect_bool (autoloading);
