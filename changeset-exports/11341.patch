# HG changeset patch
# User Kai Habel <kai.habel@gmx.de>
# Date 1292007186 -3600
#      Fri Dec 10 19:53:06 2010 +0100
# Node ID 3c7ba1e3dc21469b9f6cb16cec051b7487473ad0
# Parent  ef65ebb325e994562e2ea505653535c2dd071db6
Add missing option slice for pie and pie3

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,14 @@
+2010-12-10  Kai Habel  <kai.habel@gmx.de>
+
+	* plot/private/__pie__.m: Add missing slice option to pie and
+	pie3 function.
+	* plot/pie.m, plot/pie3.m: Add new demo.
+
 2010-12-10  Thorsten Meyer  <thorsten.meyier@gmx.de>
 
 	* statistics/tests/kolmogorov_smirnov_test.m: Add tests.
 
 2010-12-09  John W. Eaton  <jwe@octave.org>
 
 	* plot/private/__pie__.m: Provide diagnositc for invalid
 	optional arguments.  Use caller name instead of __pie__ in error
diff --git a/scripts/plot/pie.m b/scripts/plot/pie.m
--- a/scripts/plot/pie.m
+++ b/scripts/plot/pie.m
@@ -12,18 +12,18 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn  {Function File} {} pie (@var{y})
-## @deftypefnx {Function File} {} pie (@var{y}, @var{explode})
+## @deftypefn  {Function File} {} pie (@var{x})
+## @deftypefnx {Function File} {} pie (@var{x}, @var{explode})
 ## @deftypefnx {Function File} {} pie (@dots{}, @var{labels})
 ## @deftypefnx {Function File} {} pie (@var{h}, @dots{});
 ## @deftypefnx {Function File} {@var{h} =} pie (@dots{});
 ## Produce a pie chart. 
 ##
 ## Called with a single vector argument, produces a pie chart of the
 ## elements in @var{x}, with the size of the slice determined by percentage
 ## size of the values of @var{x}.
@@ -68,8 +68,14 @@ endfunction
 %!demo
 %! pie ([3, 2, 1], [0, 0, 1]);
 %! colormap([1,0,0;0,1,0;0,0,1;1,1,0;1,0,1;0,1,1]);
 
 %!demo
 %! pie ([3, 2, 1], [0, 0, 1], {"Cheddar", "Swiss", "Camembert"});
 %! colormap([1,0,0;0,1,0;0,0,1;1,1,0;1,0,1;0,1,1]);
 %! axis ([-2,2,-2,2]);
+
+%!demo
+%! pie ([0.17, 0.34, 0.41], {"Cheddar", "Swiss", "Camembert"});
+%! colormap([1,0,0;0,1,0;0,0,1;1,1,0;1,0,1;0,1,1]);
+%! axis ([-2,2,-2,2]);
+%! title ("missing slice");
\ No newline at end of file
diff --git a/scripts/plot/pie3.m b/scripts/plot/pie3.m
--- a/scripts/plot/pie3.m
+++ b/scripts/plot/pie3.m
@@ -13,18 +13,18 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn  {Function File} {} pie3 (@var{y})
-## @deftypefnx {Function File} {} pie3 (@var{y}, @var{explode})
+## @deftypefn  {Function File} {} pie3 (@var{x})
+## @deftypefnx {Function File} {} pie3 (@var{x}, @var{explode})
 ## @deftypefnx {Function File} {} pie3 (@dots{}, @var{labels})
 ## @deftypefnx {Function File} {} pie3 (@var{h}, @dots{});
 ## @deftypefnx {Function File} {@var{h} =} pie3 (@dots{});
 ## Drawa a 3D pie chart. 
 ##
 ## Called with a single vector argument, produces a 3D pie chart of the
 ## elements in @var{x}, with the size of the slice determined by percentage
 ## size of the values of @var{x}.
@@ -70,8 +70,14 @@ endfunction
 %!demo
 %! pie3 ([5:-1:1], [0, 0, 1, 0, 0]);
 %! colormap([1,0,0;0,1,0;0,0,1;1,1,0;1,0,1;0,1,1]);
 
 %!demo
 %! pie3 ([3, 2, 1], [0, 0, 1], {"Cheddar", "Swiss", "Camembert"});
 %! colormap([1,0,0;0,1,0;0,0,1;1,1,0;1,0,1;0,1,1]);
 %! axis ([-2,2,-2,2]);
+
+%!demo
+%! pie3 ([0.17, 0.34, 0.41], {"Cheddar", "Swiss", "Camembert"});
+%! colormap([1,0,0;0,1,0;0,0,1;1,1,0;1,0,1;0,1,1]);
+%! axis ([-2,2,-2,2]);
+%! title ("missing slice");
\ No newline at end of file
diff --git a/scripts/plot/private/__pie__.m b/scripts/plot/private/__pie__.m
--- a/scripts/plot/private/__pie__.m
+++ b/scripts/plot/private/__pie__.m
@@ -56,27 +56,41 @@ function hlist = __pie__ (caller, vararg
       error ("%s: %s is invalid as an optional argument", caller, class (arg));
     endif
   endwhile
 
   if (! have_explode)
     explode = zeros (size (x));
   endif
 
+  normalize = true;
+  if (sum (x(:)) < 1)
+    normalize = false;
+  endif 
+
   if (! have_labels)
-    xp = round (100 * x ./ sum (x)); 
+    if (normalize)
+      xp = round (100 * x ./ sum (x));
+    else
+      xp = round (100 * x);
+    endif
     for i = 1:len
       labels{i} = sprintf ("%d%%", xp(i));
     endfor
   endif
 
   hlist = [];
   refinement = 90;
   phi = 0:refinement:360;
-  xphi = cumsum (x / sum (x) * 360);
+  if (normalize)
+    xphi = cumsum (x / sum (x) * 360);
+  else
+    xphi = cumsum (x * 360);
+  endif
+
   for i = 1:len 
     if (i == 1)
       xn = 0 : 360 / refinement : xphi(i);
     else
       xn = xphi(i-1) : 360 / refinement : xphi(i);
     endif
 
     if (xn(end) != xphi(i))
