# HG changeset patch
# User jwe
# Date 810346368 0
#      Wed Sep 06 00:12:48 1995 +0000
# Node ID 33bb7975f86694241601160e1be866e9700f6f7a
# Parent  9f9131a8d706ea419d77ae65af41c6b6e1594f18
[project @ 1995-09-06 00:12:48 by jwe]

diff --git a/liboctave/CColVector.cc b/liboctave/CColVector.cc
--- a/liboctave/CColVector.cc
+++ b/liboctave/CColVector.cc
@@ -28,20 +28,20 @@ Software Foundation, 59 Temple Place - S
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <iostream.h>
 
 #include <Complex.h>
 
+#include "f77-uscore.h"
+#include "lo-error.h"
 #include "mx-base.h"
 #include "mx-inlines.cc"
-#include "f77-uscore.h"
-#include "lo-error.h"
 
 // Fortran functions we call.
 
 extern "C"
 {
   int F77_FCN (zgemv, ZGEMV) (const char*, const int&, const int&,
 			      const Complex&, const Complex*,
 			      const int&, const Complex*, const int&,
diff --git a/liboctave/CDiagMatrix.cc b/liboctave/CDiagMatrix.cc
--- a/liboctave/CDiagMatrix.cc
+++ b/liboctave/CDiagMatrix.cc
@@ -28,19 +28,19 @@ Software Foundation, 59 Temple Place - S
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <iostream.h>
 
 #include <Complex.h>
 
+#include "lo-error.h"
 #include "mx-base.h"
 #include "mx-inlines.cc"
-#include "lo-error.h"
 
 // Complex Diagonal Matrix class
 
 ComplexDiagMatrix::ComplexDiagMatrix (const RowVector& a)
   : MDiagArray<Complex> (a.length ())
 {
   for (int i = 0; i < length (); i++)
     elem (i, i) = a.elem (i);
diff --git a/liboctave/CRowVector.cc b/liboctave/CRowVector.cc
--- a/liboctave/CRowVector.cc
+++ b/liboctave/CRowVector.cc
@@ -28,20 +28,20 @@ Software Foundation, 59 Temple Place - S
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <iostream.h>
 
 #include <Complex.h>
 
+#include "f77-uscore.h"
+#include "lo-error.h"
 #include "mx-base.h"
 #include "mx-inlines.cc"
-#include "lo-error.h"
-#include "f77-uscore.h"
 
 // Fortran functions we call.
 
 extern "C"
 {
   int F77_FCN (zgemv, ZGEMV) (const char*, const int&, const int&,
 			      const Complex&, const Complex*,
 			      const int&, const Complex*, const int&,
diff --git a/liboctave/CmplxCHOL.cc b/liboctave/CmplxCHOL.cc
--- a/liboctave/CmplxCHOL.cc
+++ b/liboctave/CmplxCHOL.cc
@@ -25,19 +25,19 @@ Software Foundation, 59 Temple Place - S
 #pragma implementation
 #endif
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "CmplxCHOL.h"
-#include "mx-inlines.cc"
+#include "f77-uscore.h"
 #include "lo-error.h"
-#include "f77-uscore.h"
+#include "mx-inlines.cc"
 
 extern "C"
 {
   int F77_FCN (zpotrf, ZPOTRF) (const char*, const int&, Complex*,
 				const int&, int&, long);
 }
 
 int
diff --git a/liboctave/CmplxHESS.cc b/liboctave/CmplxHESS.cc
--- a/liboctave/CmplxHESS.cc
+++ b/liboctave/CmplxHESS.cc
@@ -25,19 +25,19 @@ Software Foundation, 59 Temple Place - S
 #pragma implementation
 #endif
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "CmplxHESS.h"
-#include "mx-inlines.cc"
+#include "f77-uscore.h"
 #include "lo-error.h"
-#include "f77-uscore.h"
+#include "mx-inlines.cc"
 
 extern "C"
 {
   int F77_FCN (zgebal, ZGEBAL) (const char*, const int&, Complex*,
 				const int&, int&, int&, double*, int&,
 				long, long);
  
   int F77_FCN (zgehrd, ZGEHRD) (const int&, const int&, const int&,
diff --git a/liboctave/CmplxLU.cc b/liboctave/CmplxLU.cc
--- a/liboctave/CmplxLU.cc
+++ b/liboctave/CmplxLU.cc
@@ -25,19 +25,19 @@ Software Foundation, 59 Temple Place - S
 #pragma implementation
 #endif
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "CmplxLU.h"
-#include "mx-inlines.cc"
+#include "f77-uscore.h"
 #include "lo-error.h"
-#include "f77-uscore.h"
+#include "mx-inlines.cc"
 
 extern "C"
 {
   int F77_FCN (zgesv, ZGESV) (const int&, const int&, Complex*,
 			      const int&, int*, Complex*, const int&,
 			      int&);
 }
 
diff --git a/liboctave/CmplxQR.cc b/liboctave/CmplxQR.cc
--- a/liboctave/CmplxQR.cc
+++ b/liboctave/CmplxQR.cc
@@ -25,19 +25,19 @@ Software Foundation, 59 Temple Place - S
 #pragma implementation
 #endif
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "CmplxQR.h"
-#include "mx-inlines.cc"
+#include "f77-uscore.h"
 #include "lo-error.h"
-#include "f77-uscore.h"
+#include "mx-inlines.cc"
 
 extern "C"
 {
   int F77_FCN (zgeqrf, ZGEQRF) (const int&, const int&, Complex*,
 				const int&, Complex*, Complex*,
 				const int&, int&); 
 
   int F77_FCN (zungqr, ZUNGQR) (const int&, const int&, const int&,
diff --git a/liboctave/CmplxSCHUR.cc b/liboctave/CmplxSCHUR.cc
--- a/liboctave/CmplxSCHUR.cc
+++ b/liboctave/CmplxSCHUR.cc
@@ -25,19 +25,19 @@ Software Foundation, 59 Temple Place - S
 #pragma implementation
 #endif
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "CmplxSCHUR.h"
-#include "mx-inlines.cc"
+#include "f77-uscore.h"
 #include "lo-error.h"
-#include "f77-uscore.h"
+#include "mx-inlines.cc"
 
 extern "C"
 {
   int F77_FCN (zgeesx, ZGEESX) (const char*, const char*,
 				int (*)(const Complex&), 
 				const char*, const int&, Complex*,
 				const int&, int&, Complex*, Complex*,
 				const int&, double&, double&,
diff --git a/liboctave/CmplxSVD.cc b/liboctave/CmplxSVD.cc
--- a/liboctave/CmplxSVD.cc
+++ b/liboctave/CmplxSVD.cc
@@ -25,18 +25,18 @@ Software Foundation, 59 Temple Place - S
 #pragma implementation
 #endif
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "CmplxSVD.h"
+#include "f77-uscore.h"
 #include "mx-inlines.cc"
-#include "f77-uscore.h"
 
 extern "C"
 {
   int F77_FCN (zgesvd, ZGESVD) (const char*, const char*, const int&,
 				const int&, Complex*, const int&,
 				double*, Complex*, const int&,
 				Complex*, const int&, Complex*,
 				const int&, double*, int&, long,
diff --git a/liboctave/EIG.cc b/liboctave/EIG.cc
--- a/liboctave/EIG.cc
+++ b/liboctave/EIG.cc
@@ -25,19 +25,19 @@ Software Foundation, 59 Temple Place - S
 #pragma implementation
 #endif
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "EIG.h"
-#include "mx-inlines.cc"
+#include "f77-uscore.h"
 #include "lo-error.h"
-#include "f77-uscore.h"
+#include "mx-inlines.cc"
 
 extern "C"
 {
   int F77_FCN (dgeev, DGEEV) (const char*, const char*, const int&,
 			      double*, const int&, double*, double*,
 			      double*, const int&, double*,
 			      const int&, double*, const int&, int&,
 			      long, long);
diff --git a/liboctave/LPsolve.cc b/liboctave/LPsolve.cc
--- a/liboctave/LPsolve.cc
+++ b/liboctave/LPsolve.cc
@@ -24,18 +24,18 @@ Software Foundation, 59 Temple Place - S
 #if defined (__GNUG__)
 #pragma implementation
 #endif
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
+#include "LPsolve.h"
 #include "dColVector.h"
-#include "LPsolve.h"
 
 Vector
 LPsolve::minimize (double& objf, int& inform, Vector& lambda)
 {
   return Vector ();
 }
 
 void
diff --git a/liboctave/NPSOL.cc b/liboctave/NPSOL.cc
--- a/liboctave/NPSOL.cc
+++ b/liboctave/NPSOL.cc
@@ -32,19 +32,18 @@ Software Foundation, 59 Temple Place - S
 #include <cfloat>
 #include <cmath>
 #include <cstring>
 
 #include <strstream.h>
 
 #ifndef NPSOL_MISSING
 
+#include "NPSOL.h"
 #include "dMatrix.h"
-
-#include "NPSOL.h"
 #include "f77-uscore.h"
 #include "sun-utils.h"
 
 extern "C"
 {
   int F77_FCN (npoptn, NPOPTN) (const char*, long);
 
   int F77_FCN (npsol, NPSOL) (int&, int&, int&, int&, int&, int&,
diff --git a/liboctave/dColVector.cc b/liboctave/dColVector.cc
--- a/liboctave/dColVector.cc
+++ b/liboctave/dColVector.cc
@@ -28,20 +28,20 @@ Software Foundation, 59 Temple Place - S
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <iostream.h>
 
 #include <Complex.h>
 
+#include "f77-uscore.h"
+#include "lo-error.h"
 #include "mx-base.h"
 #include "mx-inlines.cc"
-#include "f77-uscore.h"
-#include "lo-error.h"
 
 // Fortran functions we call.
 
 extern "C"
 {
   int F77_FCN (dgemv, DGEMV) (const char*, const int&, const int&,
 			      const double&, const double*,
 			      const int&, const double*, const int&,
diff --git a/liboctave/dDiagMatrix.cc b/liboctave/dDiagMatrix.cc
--- a/liboctave/dDiagMatrix.cc
+++ b/liboctave/dDiagMatrix.cc
@@ -28,19 +28,19 @@ Software Foundation, 59 Temple Place - S
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <iostream.h>
 
 #include <Complex.h>
 
+#include "lo-error.h"
 #include "mx-base.h"
 #include "mx-inlines.cc"
-#include "lo-error.h"
 
 // Diagonal Matrix class.
 
 int
 DiagMatrix::operator == (const DiagMatrix& a) const
 {
   if (rows () != a.rows () || cols () != a.cols ())
     return 0;
diff --git a/liboctave/dRowVector.cc b/liboctave/dRowVector.cc
--- a/liboctave/dRowVector.cc
+++ b/liboctave/dRowVector.cc
@@ -28,20 +28,20 @@ Software Foundation, 59 Temple Place - S
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <iostream.h>
 
 #include <Complex.h>
 
+#include "f77-uscore.h"
+#include "lo-error.h"
 #include "mx-base.h"
 #include "mx-inlines.cc"
-#include "lo-error.h"
-#include "f77-uscore.h"
 
 // Fortran functions we call.
 
 extern "C"
 {
   int F77_FCN (dgemv, DGEMV) (const char*, const int&, const int&,
 			      const double&, const double*,
 			      const int&, const double*, const int&,
diff --git a/liboctave/dbleCHOL.cc b/liboctave/dbleCHOL.cc
--- a/liboctave/dbleCHOL.cc
+++ b/liboctave/dbleCHOL.cc
@@ -25,19 +25,19 @@ Software Foundation, 59 Temple Place - S
 #pragma implementation
 #endif
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "dbleCHOL.h"
-#include "mx-inlines.cc"
+#include "f77-uscore.h"
 #include "lo-error.h"
-#include "f77-uscore.h"
+#include "mx-inlines.cc"
 
 extern "C"
 {
   int F77_FCN (dpotrf, DPOTRF) (const char*, const int&, double*,
 				const int&, int&, long);
 }
 
 int
diff --git a/liboctave/dbleHESS.cc b/liboctave/dbleHESS.cc
--- a/liboctave/dbleHESS.cc
+++ b/liboctave/dbleHESS.cc
@@ -25,19 +25,19 @@ Software Foundation, 59 Temple Place - S
 #pragma implementation
 #endif
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "dbleHESS.h"
-#include "mx-inlines.cc"
+#include "f77-uscore.h"
 #include "lo-error.h"
-#include "f77-uscore.h"
+#include "mx-inlines.cc"
 
 extern "C"
 {
   int F77_FCN (dgebal, DGEBAL) (const char*, const int&, double*,
 				const int&, int&, int&, double*,
 				int&, long, long);
 
   int F77_FCN (dgehrd, DGEHRD) (const int&, const int&, const int&,
diff --git a/liboctave/dbleLU.cc b/liboctave/dbleLU.cc
--- a/liboctave/dbleLU.cc
+++ b/liboctave/dbleLU.cc
@@ -25,19 +25,19 @@ Software Foundation, 59 Temple Place - S
 #pragma implementation
 #endif
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "dbleLU.h"
-#include "mx-inlines.cc"
+#include "f77-uscore.h"
 #include "lo-error.h"
-#include "f77-uscore.h"
+#include "mx-inlines.cc"
 
 extern "C"
 {
   int F77_FCN (dgesv, DGESV) (const int&, const int&, double*,
 			      const int&, int*, double&, const int&,
 			      int&);
 }
 
diff --git a/liboctave/dbleQR.cc b/liboctave/dbleQR.cc
--- a/liboctave/dbleQR.cc
+++ b/liboctave/dbleQR.cc
@@ -25,19 +25,19 @@ Software Foundation, 59 Temple Place - S
 #pragma implementation
 #endif
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "dbleQR.h"
-#include "mx-inlines.cc"
+#include "f77-uscore.h"
 #include "lo-error.h"
-#include "f77-uscore.h"
+#include "mx-inlines.cc"
 
 extern "C"
 {
   int F77_FCN (dgeqrf, DGEQRF) (const int&, const int&, double*,
 				const int&, double*, double*,
 				const int&, int&); 
 
   int F77_FCN (dorgqr, DORGQR) (const int&, const int&, const int&,
diff --git a/liboctave/dbleSCHUR.cc b/liboctave/dbleSCHUR.cc
--- a/liboctave/dbleSCHUR.cc
+++ b/liboctave/dbleSCHUR.cc
@@ -25,19 +25,19 @@ Software Foundation, 59 Temple Place - S
 #pragma implementation
 #endif
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "dbleSCHUR.h"
-#include "mx-inlines.cc"
+#include "f77-uscore.h"
 #include "lo-error.h"
-#include "f77-uscore.h"
+#include "mx-inlines.cc"
 
 extern "C"
 {
   int F77_FCN (dgeesx, DGEESX) (const char*, const char*,
 				int (*)(const double&, const double&),
 				const char*, const int&, double*,
 				const int&, int&, double*, double*,
 				double*, const int&, double&, double&,
diff --git a/liboctave/dbleSVD.cc b/liboctave/dbleSVD.cc
--- a/liboctave/dbleSVD.cc
+++ b/liboctave/dbleSVD.cc
@@ -25,18 +25,18 @@ Software Foundation, 59 Temple Place - S
 #pragma implementation
 #endif
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "dbleSVD.h"
+#include "f77-uscore.h"
 #include "mx-inlines.cc"
-#include "f77-uscore.h"
 
 extern "C"
 {
   int F77_FCN (dgesvd, DGESVD) (const char*, const char*, const int&,
 				const int&, double*, const int&,
 				double*, double*, const int&, double*,
 				const int&, double*, const int&, int&,
 				long, long);
