# HG changeset patch
# User jwe
# Date 1176237537 0
#      Tue Apr 10 20:38:57 2007 +0000
# Node ID 747ba2dc157e01779c907cda774bdcbffb28627a
# Parent  73ce4e14d35d14e47470cbc68f4f98485d4b161f
[project @ 2007-04-10 20:38:57 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2007-04-10  John W. Eaton  <jwe@octave.org>
+
+	* plot/__go_draw_axes__.m: Try harder to handle min and max vals
+	that are close but not exactly equal.
+
 2007-04-09  Daniel J. Sebald  <daniel.sebald@ieee.org>
 
 	* plot/stem.m: Add back the baseline line and let it be not adjustable
 	in response to a change in x limits for now.
 
 2007-04-09  John W. Eaton  <jwe@octave.org>
 
 	* plot/__go_draw_axes__.m (__gnuplot_write_data__): New function.
diff --git a/scripts/plot/__go_draw_axes__.m b/scripts/plot/__go_draw_axes__.m
--- a/scripts/plot/__go_draw_axes__.m
+++ b/scripts/plot/__go_draw_axes__.m
@@ -702,29 +702,31 @@ function lim = get_axis_limits (min_val,
     endif
     if (min_val < 0)
       min_val = min_pos;
       if (max_val < 0)
 	max_val = min_pos;
       endif
       warning ("axis: omitting negative data in log plot");
     endif
-    if (min_val == max_val)
-      min_val = 0.9 * min_val;
-      max_val = 1.1 * max_val;
+    ## FIXME -- maybe this test should also be relative?
+    if (abs (min_val - max_val) < sqrt (eps))
+      min_val *= 0.9;
+      max_val *= 1.1;
     endif
     min_val = 10 ^ floor (log10 (min_val));
     max_val = 10 ^ ceil (log10 (max_val));
   else
     if (min_val == 0 && max_val == 0)
       min_val = -1;
       max_val = 1;
-    elseif (min_val == max_val)
-      min_val = 0.9 * min_val;
-      max_val = 1.1 * max_val;
+    ## FIXME -- maybe this test should also be relative?
+    elseif (abs (min_val - max_val) < sqrt (eps))
+      min_val -= 0.1 * abs (min_val);
+      max_val += 0.1 * abs (max_val);
     endif
     ## FIXME -- to do a better job, we should consider the tic spacing.
     scale = 10 ^ floor (log10 (max_val - min_val) - 1);
     min_val = scale * floor (min_val / scale);
     max_val = scale * ceil (max_val / scale);
   endif
 
   lim = [min_val, max_val];
