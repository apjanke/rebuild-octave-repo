# HG changeset patch
# User Rik <rik@octave.org>
# Date 1380672388 25200
#      Tue Oct 01 17:06:28 2013 -0700
# Node ID ec105d91547e322e558c58e2ffb174f22ff16998
# Parent  bb7756dff05502697b46b4c081fe7303cae1b399
legend.m: Inherit font properties from current axes.  Default interpreter to 'tex'.

* scripts/plot/legend.m: Legend object now inherits font properties from axis.
Text labels, in turn, inherit from legend object.  The default interpreter is
now 'tex' which matches the default for text objects.

diff --git a/scripts/plot/legend.m b/scripts/plot/legend.m
--- a/scripts/plot/legend.m
+++ b/scripts/plot/legend.m
@@ -539,63 +539,67 @@ function [hleg, hleg_obj, hplot, labels]
           orientation = "vertical";
         endif
         box = "on";
       endif
 
       ## Get axis size and fontsize in points.
       ## Rely on listener to handle coversion.
       units = get (ca(1), "units");
-      fontunits = get (ca(1), "fontunits");
+      #fontunits = get (ca(1), "fontunits");
       unwind_protect
         set (ca(1), "units", "points");
         set (ca(1), "fontunits", "points");
         if (isempty (hlegend) || ! isprop (hlegend, "unmodified_axes_position"))
           unmodified_axes_position = get (ca(1), "position");
           unmodified_axes_outerposition = get (ca(1), "outerposition");
         else
           unmodified_axes_position = get (hlegend, "unmodified_axes_position");
           unmodified_axes_outerposition = get (hlegend, ...
                                                "unmodified_axes_outerposition");
         endif
         ca_pos = unmodified_axes_position;
         ca_outpos = unmodified_axes_outerposition;
-        ca_fontsize = get (ca(1), "fontsize");
+      #  ca_fontsize = get (ca(1), "fontsize");
         tightinset = get (ca(1), "tightinset");
         for i = 2 : numel (ca)
           tightinset = max (tightinset, get (ca(i), "tightinset"));
         endfor
       unwind_protect_cleanup
         set (ca(1), "units", units);
-        set (ca(1), "fontunits", fontunits);
+      #  set (ca(1), "fontunits", fontunits);
       end_unwind_protect
 
       ## Padding between legend entries horizontally and vertically
       xpad = 2;
       ypad = 2;
 
       linelength = 15;
 
       ## Create the axis first
-      ## FIXME: hlegend should inherit properties from "ca"
       curaxes = get (fig, "currentaxes");
       unwind_protect
         ud = ancestor (hplots, "axes");
         if (! isscalar (ud))
           ud = unique ([ud{:}]);
         endif
         if (isempty (hlegend))
           addprops = true;
           hlegend = axes ("tag", "legend", "userdata", struct ("handle", ud),
                           "box", box,
                           "xtick", [], "ytick", [],
                           "xlim", [0, 1], "ylim", [0, 1],
                           "visible", ifelse (strcmp (box, "on"), "on", "off"),
                           "activepositionproperty", "position",
-                          "fontsize", ca_fontsize);
+                          "interpreter", "tex");
+          ## Inherit properties from current axis
+          ## "fontunits" shoud be first because it affects interpretation of "fontsize"
+          proplist = {"fontunits", "fontangle", "fontname", "fontsize", "fontweight"};
+          ca_props = get (ca(1), proplist); 
+          set (hlegend, proplist, ca_props);
         else
           addprops = false;
           axes (hlegend);
           delete (get (hlegend, "children"));
         endif
         if (addprops)
           addproperty ("edgecolor", hlegend, "color", [0, 0, 0]);
           addproperty ("textcolor", hlegend, "color", [0, 0, 0]);
@@ -606,32 +610,41 @@ function [hleg, hleg_obj, hplot, labels]
                        "northeastoutside", "southeastoutside", ...
                        "northwestoutside", "southwestoutside"};
           addproperty ("location", hlegend, "radio", strjoin (locations, "|"));
           addproperty ("orientation", hlegend, "radio",
                        "{vertical}|horizontal");
           addproperty ("string", hlegend, "any", text_strings);
           addproperty ("textposition", hlegend, "radio", "{left}|right");
         endif
+        ## Inherit visual properties from legend object
+        fontunits = get (hlegend, "fontunits");
+        fontangle = get (hlegend, "fontangle");
+        fontname = get (hlegend, "fontname");
         fontsize = get (hlegend, "fontsize");
+        fontweight = get (hlegend, "fontweight");
         interpreter = get (hlegend, "interpreter");
         textcolor = get (hlegend, "textcolor");
         ## Add text label to the axis first, checking their extents
         nentries = numel (hplots);
         texthandle = [];
         maxwidth = 0;
         maxheight = 0;
         for k = 1 : nentries
           halign = ifelse (strcmp (textpos, "right"), "left", "right");
           texthandle = [texthandle, text(0, 0, text_strings{k},
-                                         "userdata", hplots(k),
-                                         "color", textcolor,
-                                         "horizontalalignment", halign,
-                                         "interpreter", interpreter,
-                                         "fontsize", fontsize)];
+                                               "userdata", hplots(k),
+                                               "color", textcolor,
+                                               "horizontalalignment", halign,
+                                               "interpreter", interpreter,
+                                               "fontunits", fontunits,
+                                               "fontangle", fontangle,
+                                               "fontname", fontname,
+                                               "fontsize", fontsize,
+                                               "fontweight", fontweight)];,
           units = get (texthandle(end), "units");
           unwind_protect
             set (texthandle(end), "units", "points");
             extents = get (texthandle(end), "extent");
             maxwidth = max (maxwidth, extents(3));
             maxheight = max (maxheight, extents(4));
           unwind_protect_cleanup
             set (texthandle(end), "units", units);
@@ -1018,17 +1031,16 @@ function updatelegend (h, ~)
     unwind_protect_cleanup
       recursive = false;
     end_unwind_protect
   endif
 
 endfunction
 
 function updatelegendtext (h, ~)
-#  keyboard;
   htext = findobj (get (h, "children"), "type", "text");
 
   tprops = {"interpreter", "fontunits", "fontangle", "fontname", "fontsize",...
             "fontweight", "color"};
   lprops = {"interpreter", "fontunits", "fontangle", "fontname", "fontsize",...
             "fontweight", "textcolor"};
   set (htext, tprops, get (h, lprops));
 endfunction
