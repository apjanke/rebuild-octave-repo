# HG changeset patch
# User Torsten <ttl@justmail.de>
# Date 1424766934 -3600
#      Tue Feb 24 09:35:34 2015 +0100
# Node ID 597fc0fd8e54fe7cc506d6555aea4f6def5facb1
# Parent  72fe9df87fe8f620566a3cb4fcc6e14b6fefbf31
make size of toolbar icons depending on scaling of display
* files-dock-widget.cc (notice_settings): set icon size to small, normal or
  large by using qt pixel metrics

* file-editor.cc notice_settings): set icon size to small, normal or
  large by using qt pixel metrics

* main-window.cc (notice_settings): set icon size to small, normal or
  large by using qt pixel metrics

* settings-dialog.ui: use radio buttons for small, normal and large icon
  size instead of spin box with pixel sizes

* settings-dialog.cc (settings_dialog): initialize the radio buttons depending
  on the settings file;
  (write_changed_settings): save the icon size depending on radio buttons

diff --git a/libgui/src/files-dock-widget.cc b/libgui/src/files-dock-widget.cc
--- a/libgui/src/files-dock-widget.cc
+++ b/libgui/src/files-dock-widget.cc
@@ -769,19 +769,25 @@ files_dock_widget::contextmenu_findfiles
     }
 }
 
 void
 files_dock_widget::notice_settings (const QSettings *settings)
 {
   // Qsettings pointer is checked before emitting.
 
-  int icon_size = settings->value ("toolbar_icon_size",16).toInt ();
-  if (icon_size > 16)
-    icon_size = icon_size - 4;
+  int icon_size_settings = settings->value ("toolbar_icon_size",0).toInt ();
+  QStyle *st = style ();
+  int icon_size = st->pixelMetric (QStyle::PM_ToolBarIconSize);
+
+  if (icon_size_settings == 1)
+    icon_size = st->pixelMetric (QStyle::PM_LargeIconSize);
+  else if (icon_size_settings == -1)
+    icon_size = st->pixelMetric (QStyle::PM_SmallIconSize);
+
   _navigation_tool_bar->setIconSize (QSize (icon_size,icon_size));
 
   // file names are always shown, other columns can be hidden by settings
   _file_tree_view->setColumnHidden (0, false);
   _file_tree_view->setColumnHidden (1,
     ! settings->value ("filesdockwidget/showFileSize",false).toBool ());
   _file_tree_view->setColumnHidden (2,
     ! settings->value ("filesdockwidget/showFileType",false).toBool ());
diff --git a/libgui/src/m-editor/file-editor.cc b/libgui/src/m-editor/file-editor.cc
--- a/libgui/src/m-editor/file-editor.cc
+++ b/libgui/src/m-editor/file-editor.cc
@@ -1123,18 +1123,26 @@ file_editor::handle_editor_state_changed
 
       setFocusProxy (_tab_widget->currentWidget ());
     }
 }
 
 void
 file_editor::notice_settings (const QSettings *settings)
 {
-  int icon_size = settings->value ("toolbar_icon_size", 16).toInt ();
-  _tool_bar->setIconSize (QSize (icon_size, icon_size));
+  int icon_size_settings = settings->value ("toolbar_icon_size",0).toInt ();
+  QStyle *st = style ();
+  int icon_size = st->pixelMetric (QStyle::PM_ToolBarIconSize);
+
+  if (icon_size_settings == 1)
+    icon_size = st->pixelMetric (QStyle::PM_LargeIconSize);
+  else if (icon_size_settings == -1)
+    icon_size = st->pixelMetric (QStyle::PM_SmallIconSize);
+
+  _tool_bar->setIconSize (QSize (icon_size,icon_size));
 
   int tab_width_min = settings->value ("editor/notebook_tab_width_min", 160)
                                       .toInt ();
   int tab_width_max = settings->value ("editor/notebook_tab_width_max", 300)
                                       .toInt ();
 
   if (settings->value ("editor/longWindowTitle", false).toBool ())
     {
diff --git a/libgui/src/main-window.cc b/libgui/src/main-window.cc
--- a/libgui/src/main-window.cc
+++ b/libgui/src/main-window.cc
@@ -726,17 +726,25 @@ main_window::notice_settings (const QSet
         }
     }
   if (widget_icon_data[icon_set_found].name != "NONE")
     _release_notes_icon = widget_icon_data[icon_set_found].path
                           + "ReleaseWidget.png";
   else
     _release_notes_icon = ":/actions/icons/logo.png";
 
-  int icon_size = settings->value ("toolbar_icon_size",16).toInt ();
+  int icon_size_settings = settings->value ("toolbar_icon_size",0).toInt ();
+  QStyle *st = style ();
+  int icon_size = st->pixelMetric (QStyle::PM_ToolBarIconSize);
+
+  if (icon_size_settings == 1)
+    icon_size = st->pixelMetric (QStyle::PM_LargeIconSize);
+  else if (icon_size_settings == -1)
+    icon_size = st->pixelMetric (QStyle::PM_SmallIconSize);
+
   _main_tool_bar->setIconSize (QSize (icon_size,icon_size));
 
   if (settings->value ("show_status_bar",true).toBool ())
     status_bar->show ();
   else
     status_bar->hide ();
 
   _prevent_readline_conflicts =
diff --git a/libgui/src/settings-dialog.cc b/libgui/src/settings-dialog.cc
--- a/libgui/src/settings-dialog.cc
+++ b/libgui/src/settings-dialog.cc
@@ -80,20 +80,31 @@ settings_dialog::settings_dialog (QWidge
   if (language == "SYSTEM")
     language = tr ("System setting");
   int selected = ui->comboBox_language->findText (language);
   if (selected >= 0)
     ui->comboBox_language->setCurrentIndex (selected);
   else
     ui->comboBox_language->setCurrentIndex (0);  // System is default
 
-  ui->toolbar_icon_size->setValue (settings->value ("toolbar_icon_size",
-                                                    16).toInt ());
+  // icon size
+  QButtonGroup *icon_size_group = new QButtonGroup (this);
+  icon_size_group->addButton (ui->icon_size_small);
+  icon_size_group->addButton (ui->icon_size_normal);
+  icon_size_group->addButton (ui->icon_size_large);
+  int icon_size = settings->value ("toolbar_icon_size", 0).toInt ();
+  ui->icon_size_normal->setChecked (true);  // the default
+  ui->icon_size_small->setChecked (icon_size == -1);
+  ui->icon_size_large->setChecked (icon_size == 1);
 
   // which icon has to be selected
+  QButtonGroup *icon_group = new QButtonGroup (this);
+  icon_group->addButton (ui->general_icon_octave);
+  icon_group->addButton (ui->general_icon_graphic);
+  icon_group->addButton (ui->general_icon_letter);
   QString widget_icon_set =
     settings->value ("DockWidgets/widget_icon_set","NONE").toString ();
   ui->general_icon_octave-> setChecked (true);  // the default (if invalid set)
   ui->general_icon_octave-> setChecked (widget_icon_set == "NONE");
   ui->general_icon_graphic-> setChecked (widget_icon_set == "GRAPHIC");
   ui->general_icon_letter-> setChecked (widget_icon_set == "LETTER");
 
   // custom title bar of dock widget
@@ -638,17 +649,22 @@ settings_dialog::write_changed_settings 
   settings->setValue ("Dockwidgets/title_bg_color_active",
                       _widget_title_bg_color_active->color ());
   settings->setValue ("Dockwidgets/title_fg_color",
                       _widget_title_fg_color->color ());
   settings->setValue ("Dockwidgets/title_fg_color_active",
                       _widget_title_fg_color_active->color ());
 
   // icon size
-  settings->setValue ("toolbar_icon_size", ui->toolbar_icon_size->value ());
+  int icon_size = 0;
+  if (ui->icon_size_small->isChecked ())
+    icon_size = -1;
+  else if (ui->icon_size_large->isChecked ())
+    icon_size = 1;
+  settings->setValue ("toolbar_icon_size", icon_size);
 
   // promp to exit
   settings->setValue ("prompt_to_exit", ui->cb_prompt_to_exit->isChecked ());
 
   // status bar
   settings->setValue ( "show_status_bar", ui->cb_status_bar->isChecked ());
 
   // Octave startup
diff --git a/libgui/src/settings-dialog.ui b/libgui/src/settings-dialog.ui
--- a/libgui/src/settings-dialog.ui
+++ b/libgui/src/settings-dialog.ui
@@ -114,28 +114,36 @@
                   <property name="text">
                    <string>Confirm before exiting</string>
                   </property>
                  </widget>
                 </item>
                 <item row="2" column="1">
                  <layout class="QHBoxLayout" name="horizontalLayout_6">
                   <item>
-                   <widget class="QSpinBox" name="toolbar_icon_size">
-                    <property name="minimum">
-                     <number>16</number>
+                   <widget class="QRadioButton" name="icon_size_small">
+                    <property name="text">
+                     <string>Small</string>
                     </property>
-                    <property name="maximum">
-                     <number>32</number>
+                   </widget>
+                  </item>
+                  <item>
+                   <widget class="QRadioButton" name="icon_size_normal">
+                    <property name="text">
+                     <string> Normal</string>
                     </property>
-                    <property name="singleStep">
-                     <number>4</number>
+                    <property name="checked">
+                     <bool>true</bool>
                     </property>
-                    <property name="value">
-                     <number>24</number>
+                   </widget>
+                  </item>
+                  <item>
+                   <widget class="QRadioButton" name="icon_size_large">
+                    <property name="text">
+                     <string>Large</string>
                     </property>
                    </widget>
                   </item>
                   <item>
                    <spacer name="horizontalSpacer_4">
                     <property name="orientation">
                      <enum>Qt::Horizontal</enum>
                     </property>
