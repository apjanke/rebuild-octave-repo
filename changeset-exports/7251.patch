# HG changeset patch
# User jwe
# Date 1196792327 0
#      Tue Dec 04 18:18:47 2007 +0000
# Node ID ace1030cbe367d5c0de4c1182c5b80d3232c546d
# Parent  0ff0883fb121befaa5ca19fe2b659f13c13ca418
[project @ 2007-12-04 18:17:29 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,13 +1,19 @@
 2007-12-04  John W. Eaton  <jwe@octave.org>
 
 	* load-save.cc (Fsave, Fload): Doc fixes.
 	From Marco Caliari <caliari@sci.univr.it>.
 
+2007-12-04  Shai Ayal  <shaiay@users.sourceforge.net>
+
+	* graphics.h.in (base_properties::get_type
+        base_properties::get___modified__,
+	base_properties::get___myhandle__): New functions.
+
 2007-12-04  Christoph Mayer  <Christoph.Mayer@dlr.de>.
 
 	* toplev.h (clean_up_and_exit, recover_from_exception,
 	do_octave_atexit, global_command, curr_parent_function):
 	Tag with OCTINTERP_API. 
 
 2007-12-03  David Bateman  <dbateman@free.fr>
 
diff --git a/src/graphics.h.in b/src/graphics.h.in
--- a/src/graphics.h.in
+++ b/src/graphics.h.in
@@ -645,16 +645,22 @@ public:
   void set_from_list (base_graphics_object& obj, property_list& defaults);
 
   virtual void set (const caseless_str&, const octave_value&) { }
 
   std::string get_tag (void) const { return tag; }
 
   graphics_handle get_parent (void) const { return parent; }
 
+  std::string get_type (void) const { return type; }
+
+  bool is_modified (void) const { return __modified__; }
+ 
+  graphics_handle get___myhandle__ (void) const { return __myhandle__; }
+ 
   void remove_child (const graphics_handle& h);
 
   void adopt (const graphics_handle& h)
   {
     octave_idx_type n = children.numel ();
     children.resize (1, n+1);
     children(n) = h.value ();
   }
diff --git a/src/load-save.cc b/src/load-save.cc
--- a/src/load-save.cc
+++ b/src/load-save.cc
@@ -655,17 +655,17 @@ HDF5 load and save are not available, as
 not linked with the HDF5 library."
 #endif /* ! HAVE HDF5 */
 
 DEFCMD (load, args, nargout,
   "-*- texinfo -*-\n\
 @deffn {Command} load options file v1 v2 @dots{}\n\
 Load the named variables @var{v1}, @var{v2}, @dots{}, from the file\n\
 @var{file}.  As with @code{save}, you may specify a list of variables\n\
-and @code{load} will only extract\n\ those variables with names that\n\
+and @code{load} will only extract those variables with names that\n\
 match.  For example, to restore the variables saved in the file\n\
 @file{data}, use the command\n\
 \n\
 @example\n\
 load data\n\
 @end example\n\
 \n\
 If load is invoked using the functional form\n\
