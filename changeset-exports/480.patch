# HG changeset patch
# User jwe
# Date 772904227 0
#      Wed Jun 29 15:37:07 1994 +0000
# Node ID 738791c163b25d9fad99145373ca5feefa707535
# Parent  8e9dcc4063321a3a0e08c132286982d4337ddf24
[project @ 1994-06-29 15:37:07 by jwe]

diff --git a/src/det.cc b/src/det.cc
--- a/src/det.cc
+++ b/src/det.cc
@@ -70,45 +70,45 @@ determinant (const tree_constant& a)
     case tree_constant_rep::matrix_constant:
       {
 	Matrix m = tmp.matrix_value ();
 	if (m.rows () == m.columns ())
 	  {
 	    int info;
 	    double rcond = 0.0;
 	    DET det = m.determinant (info, rcond);
+	    double d = 0.0;
 	    if (info == -1)
 	      warning ("det: matrix singular to machine precision, rcond = %g",
 		       rcond);
 	    else
-	      {
-		double d = det.value ();
-		retval = tree_constant (d);
-	      }
+	      d = det.value ();
+
+	    retval = tree_constant (d);
 	  }
 	else
 	  gripe_square_matrix_required ("det");
       }
       break;
     case tree_constant_rep::complex_matrix_constant:
       {
 	ComplexMatrix m = tmp.complex_matrix_value ();
 	if (m.rows () == m.columns ())
 	  {
 	    int info;
 	    double rcond = 0.0;
 	    ComplexDET det = m.determinant (info, rcond);
+	    Complex c = 0.0;
 	    if (info == -1)
 	      warning ("det: matrix singular to machine precision, rcond = %g",
 		       rcond);
 	    else
-	      {
-		Complex c = det.value ();
-		retval = tree_constant (c);
-	      }
+	      Complex c = det.value ();
+
+	    retval = tree_constant (c);
 	  }
 	else
 	  gripe_square_matrix_required ("det");
       }
       break;
     case tree_constant_rep::scalar_constant:
       {
 	double d = tmp.double_value ();
