# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1466015357 14400
#      Wed Jun 15 14:29:17 2016 -0400
# Node ID c0604bba8da14e3400fea1e33063370595d5af31
# Parent  d92dcbcd7691191d3974565279489aa046207041
provide wrappers for fseeko and ftello

* liboctave/wrappers/filepos-wrappers.c,
liboctave/wrappers/filepos-wrappers.h: New files.

* liboctave/wrappers/module.mk: Update.

* c-file-ptr-stream.cc: Use new wrapper functions.

diff --git a/libinterp/corefcn/c-file-ptr-stream.cc b/libinterp/corefcn/c-file-ptr-stream.cc
--- a/libinterp/corefcn/c-file-ptr-stream.cc
+++ b/libinterp/corefcn/c-file-ptr-stream.cc
@@ -21,16 +21,18 @@ along with Octave; see the file COPYING.
 */
 
 #if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 
+#include "filepos-wrappers.h"
+
 #include "c-file-ptr-stream.h"
 
 #if ! defined (SEEK_SET)
 #  define SEEK_SET 0
 #endif
 
 #if ! defined (SEEK_CUR)
 #  define SEEK_CUR 1
@@ -108,32 +110,32 @@ seekdir_to_whence (std::ios::seekdir dir
 
 std::streampos
 c_file_ptr_buf::seekoff (std::streamoff offset,
                          std::ios::seekdir dir,
                          std::ios::openmode)
 {
   if (f)
     {
-      gnulib::fseeko (f, offset, seekdir_to_whence (dir));
+      octave_fseeko_wrapper (f, offset, seekdir_to_whence (dir));
 
-      return gnulib::ftello (f);
+      return octave_ftello_wrapper (f);
     }
   else
     return 0;
 }
 
 std::streampos
 c_file_ptr_buf::seekpos (std::streampos offset, std::ios::openmode)
 {
   if (f)
     {
-      gnulib::fseeko (f, offset, SEEK_SET);
+      octave_fseeko_wrapper (f, offset, SEEK_SET);
 
-      return gnulib::ftello (f);
+      return octave_ftello_wrapper (f);
     }
   else
     return 0;
 }
 
 int
 c_file_ptr_buf::sync (void)
 {
@@ -162,23 +164,23 @@ c_file_ptr_buf::buf_close (void)
     }
 
   return retval;
 }
 
 int
 c_file_ptr_buf::seek (off_t offset, int origin)
 {
-  return f ? gnulib::fseeko (f, offset, origin) : -1;
+  return f ? octave_fseeko_wrapper (f, offset, origin) : -1;
 }
 
 off_t
 c_file_ptr_buf::tell (void)
 {
-  return f ? gnulib::ftello (f) : -1;
+  return f ? octave_ftello_wrapper (f) : -1;
 }
 
 int
 c_file_ptr_buf::file_close (FILE *f)
 {
   return gnulib::fclose (f);
 }
 
diff --git a/liboctave/wrappers/filepos-wrappers.c b/liboctave/wrappers/filepos-wrappers.c
new file mode 100644
--- /dev/null
+++ b/liboctave/wrappers/filepos-wrappers.c
@@ -0,0 +1,46 @@
+/*
+
+Copyright (C) 2016 John W. Eaton
+
+This file is part of Octave.
+
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
+
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
+
+You should have received a copy of the GNU General Public License
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
+
+*/
+
+// ftello and fseeko may be provided by gnulib.  We don't include gnulib
+// headers directly in Octave's C++ source files to avoid problems that
+// may be caused by the way that gnulib overrides standard library
+// functions.
+
+#if defined (HAVE_CONFIG_H)
+#  include "config.h"
+#endif
+
+#include <stdio.h>
+
+#include "filepos-wrappers.h"
+
+int
+octave_fseeko_wrapper (FILE *fp, off_t offset, int whence)
+{
+  return fseeko (fp, offset, whence);
+}
+
+off_t
+octave_ftello_wrapper (FILE *fp)
+{
+  return ftello (fp);
+}
diff --git a/liboctave/wrappers/filepos-wrappers.h b/liboctave/wrappers/filepos-wrappers.h
new file mode 100644
--- /dev/null
+++ b/liboctave/wrappers/filepos-wrappers.h
@@ -0,0 +1,46 @@
+/*
+
+Copyright (C) 2016 John W. Eaton
+
+This file is part of Octave.
+
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
+
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
+
+You should have received a copy of the GNU General Public License
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
+
+*/
+
+#if ! defined (octave_filepos_wrappers_h)
+#define octave_filepos_wrappers_h 1
+
+#include <sys/types.h>
+
+#if defined __cplusplus
+#  include <cstdio>
+#else
+#  include <stdio.h>
+#endif
+
+#if defined __cplusplus
+extern "C" {
+#endif
+
+extern int octave_fseeko_wrapper (FILE *fp, off_t offset, int whence);
+
+extern off_t octave_ftello_wrapper (FILE *fp);
+
+#if defined __cplusplus
+}
+#endif
+
+#endif
diff --git a/liboctave/wrappers/module.mk b/liboctave/wrappers/module.mk
--- a/liboctave/wrappers/module.mk
+++ b/liboctave/wrappers/module.mk
@@ -1,13 +1,14 @@
 NOINSTALL_WRAPPERS_INC = \
   liboctave/wrappers/areadlink-wrapper.h \
   liboctave/wrappers/base64-wrappers.h \
   liboctave/wrappers/canonicalize-file-name-wrapper.h \
   liboctave/wrappers/fcntl-wrappers.h \
+  liboctave/wrappers/filepos-wrappers.h \
   liboctave/wrappers/fpucw-wrapper.h \
   liboctave/wrappers/gen-tempname-wrapper.h \
   liboctave/wrappers/hash-wrappers.h \
   liboctave/wrappers/mkostemp-wrapper.h \
   liboctave/wrappers/nanosleep-wrapper.h \
   liboctave/wrappers/nproc-wrapper.h \
   liboctave/wrappers/octave-popen2.h \
   liboctave/wrappers/putenv-wrapper.h \
@@ -22,16 +23,17 @@ NOINSTALL_WRAPPERS_INC = \
   liboctave/wrappers/vasprintf-wrapper.h \
   liboctave/wrappers/wait-for-input.h
 
 WRAPPERS_SRC = \
   liboctave/wrappers/areadlink-wrapper.c \
   liboctave/wrappers/base64-wrappers.c \
   liboctave/wrappers/canonicalize-file-name-wrapper.c \
   liboctave/wrappers/fcntl-wrappers.c \
+  liboctave/wrappers/filepos-wrappers.c \
   liboctave/wrappers/fpucw-wrapper.c \
   liboctave/wrappers/gen-tempname-wrapper.c \
   liboctave/wrappers/hash-wrappers.c \
   liboctave/wrappers/mkostemp-wrapper.c \
   liboctave/wrappers/nanosleep-wrapper.c \
   liboctave/wrappers/nproc-wrapper.c \
   liboctave/wrappers/octave-popen2.c \
   liboctave/wrappers/putenv-wrapper.c \
