# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1448939452 18000
#      Mon Nov 30 22:10:52 2015 -0500
# Node ID 05b86b04499578eaa136a34d1c6dab94685b5ec8
# Parent  d02ffc87d9ee0a6d0c75224291862fcb2cb3edf7
don't use INTERRUPT_WITH_EXCEPTIONS when executing graphics callbacks

* graphics.cc (gh_manager::do_execute_callback): Don't use
BEGIN_INTERRUPT_WITH_EXCEPTIONS and END_INTERRUPT_WITH_EXCEPTIONS.

diff --git a/libinterp/corefcn/graphics.cc b/libinterp/corefcn/graphics.cc
--- a/libinterp/corefcn/graphics.cc
+++ b/libinterp/corefcn/graphics.cc
@@ -9355,18 +9355,16 @@ gh_manager::do_execute_callback (const g
       if (true)
         {
           gh_manager::auto_lock guard;
 
           callback_objects.push_front (get_object (h));
           xset_gcbo (h);
         }
 
-      BEGIN_INTERRUPT_WITH_EXCEPTIONS;
-
       // Copy CB because "function_value" method is non-const.
 
       octave_value cb = cb_arg;
 
       if (cb.is_function () || cb.is_function_handle ())
         fcn = cb.function_value ();
       else if (cb.is_string ())
         {
@@ -9391,18 +9389,16 @@ gh_manager::do_execute_callback (const g
         {
           std::string nm = cb.class_name ();
           error ("trying to execute non-executable object (class = %s)",
                  nm.c_str ());
         }
 
       if (fcn)
         feval (fcn, args);
-
-      END_INTERRUPT_WITH_EXCEPTIONS;
     }
 }
 
 void
 gh_manager::do_post_event (const graphics_event& e)
 {
   event_queue.push_back (e);
 
