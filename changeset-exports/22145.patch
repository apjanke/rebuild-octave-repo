# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1468942169 14400
#      Tue Jul 19 11:29:29 2016 -0400
# Node ID cf5145769e3782c64fffac5f2183f266c256adad
# Parent  469a4142c4cfac469c26e3afec03111dd69b386d
* fCMatrix.cc (xgemm): Fix thinko in cset 407c66ae1e20.

diff --git a/liboctave/array/fCMatrix.cc b/liboctave/array/fCMatrix.cc
--- a/liboctave/array/fCMatrix.cc
+++ b/liboctave/array/fCMatrix.cc
@@ -3679,25 +3679,25 @@ xgemm (const FloatComplexMatrix& a, cons
       retval = FloatComplexMatrix (a_nr, b_nc, 0.0);
       FloatComplex *c = retval.fortran_vec ();
 
       if (b_nc == 1 && a_nr == 1)
         {
           if (cja == cjb)
             {
               F77_FUNC (xcdotu, XCDOTU) (a_nc, F77_CONST_CMPLX_ARG (a.data ()), 1, F77_CONST_CMPLX_ARG (b.data ()), 1,
-                                         F77_CMPLX_ARG (&c));
+                                         F77_CMPLX_ARG (c));
               if (cja) *c = std::conj (*c);
             }
           else if (cja)
             F77_FUNC (xcdotc, XCDOTC) (a_nc, F77_CONST_CMPLX_ARG (a.data ()), 1, F77_CONST_CMPLX_ARG (b.data ()), 1,
-                                       F77_CMPLX_ARG (&c));
+                                       F77_CMPLX_ARG (c));
           else
             F77_FUNC (xcdotc, XCDOTC) (a_nc, F77_CONST_CMPLX_ARG (b.data ()), 1, F77_CONST_CMPLX_ARG (a.data ()), 1,
-                                       F77_CMPLX_ARG (&c));
+                                       F77_CMPLX_ARG (c));
         }
       else if (b_nc == 1 && ! cjb)
         {
           const char ctra = get_blas_trans_arg (tra, cja);
           F77_XFCN (cgemv, CGEMV, (F77_CONST_CHAR_ARG2 (&ctra, 1),
                                    lda, tda, 1.0,  F77_CONST_CMPLX_ARG (a.data ()), lda,
                                    F77_CONST_CMPLX_ARG (b.data ()), 1, 0.0, F77_CMPLX_ARG (c), 1
                                    F77_CHAR_ARG_LEN (1)));
