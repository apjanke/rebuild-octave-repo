# HG changeset patch
# User Rik <rik@octave.org>
# Date 1424840814 28800
#      Tue Feb 24 21:06:54 2015 -0800
# Node ID a59c5a16c9abec07ad121ec3450a85acbff461a9
# Parent  0a3ca546d7fc621b3904601baff9ccbddfae859c
Rename db_next_breakpoint_quiet to internal function.

* debug.cc (Fdb_next_breakpoint_quiet): Rename function to use internal prefix
and suffix "__".

* main-window.cc: Rename instances to __db_next_breakpoint_quiet__.

diff --git a/libgui/src/main-window.cc b/libgui/src/main-window.cc
--- a/libgui/src/main-window.cc
+++ b/libgui/src/main-window.cc
@@ -2117,29 +2117,29 @@ main_window::execute_debug_callback ()
       if (_dbg_queue->isEmpty ())
         _dbg_processing.release ();  // cmd queue empty, processing will stop
       else
         repost = true;          // not empty, repost at end
       _dbg_queue_mutex.unlock ();
 
       if (debug == "step")
         {
-          Fdb_next_breakpoint_quiet (ovl (_suppress_dbg_location));
+          F__db_next_breakpoint_quiet__ (ovl (_suppress_dbg_location));
           Fdbstep ();
         }
       else if (debug == "cont")
         {
-          Fdb_next_breakpoint_quiet (ovl (_suppress_dbg_location));
+          F__db_next_breakpoint_quiet__ (ovl (_suppress_dbg_location));
           Fdbcont ();
         }
       else if (debug == "quit")
         Fdbquit ();
       else
         {
-          Fdb_next_breakpoint_quiet (ovl (_suppress_dbg_location));
+          F__db_next_breakpoint_quiet__ (ovl (_suppress_dbg_location));
           Fdbstep (ovl (debug.toStdString ()));
         }
 
       command_editor::interrupt (true);
     }
 
   if (repost)  // queue not empty, so repost event for further processing
     octave_link::post_event (this, &main_window::execute_debug_callback);
diff --git a/libinterp/corefcn/debug.cc b/libinterp/corefcn/debug.cc
--- a/libinterp/corefcn/debug.cc
+++ b/libinterp/corefcn/debug.cc
@@ -1539,22 +1539,23 @@ Return true if in debugging mode, otherw
   if (args.length () == 0)
     retval = Vdebugging;
   else
     print_usage ();
 
   return retval;
 }
 
-DEFUN (db_next_breakpoint_quiet, args, ,
+DEFUN (__db_next_breakpoint_quiet__, args, ,
        "-*- texinfo -*-\n\
-@deftypefn  {Built-in Function} {} db_next_breakpoint_quiet ()\n\
-@deftypefnx {Built-in Function} {} db_next_breakpoint_quiet (@var{flag})\n\
-Disable line info printing at the next breakpoint.  With a logical\n\
-argument, set the state on or off.\n\
+@deftypefn  {Built-in Function} {} __db_next_breakpoint_quiet__ ()\n\
+@deftypefnx {Built-in Function} {} __db_next_breakpoint_quiet__ (@var{flag})\n\
+Disable line info printing at the next breakpoint.\n\
+\n\
+With a logical argument @var{flag}, set the state on or off.\n\
 @end deftypefn")
 {
   octave_value retval;
 
   int nargin = args.length ();
 
   if (nargin == 0 || nargin == 1)
     {
