# HG changeset patch
# User Torsten <ttl@justmail.de>
# Date 1382559606 -7200
#      Wed Oct 23 22:20:06 2013 +0200
# Node ID e6ed77b75aecbdb68f063e8ac3547f4b0df0c7e0
# Parent  0640892429a8fccd88d65730e1eebd8062c3caa5
new preference in settings: editor creates nonexisting files wihtout prompt

* settings-dialog.ui: adding checkbox for new preference
* settings-dialog.cc(constructor): reading new option from the settings and
  initializing new checkbox;
  (write_changed_settings): write checkbox state into the settings file
* file_editor.cc(request_opren_file): when file to open does not exist
  read new option from the settings and skip the dialog accordingly

diff --git a/libgui/src/m-editor/file-editor.cc b/libgui/src/m-editor/file-editor.cc
--- a/libgui/src/m-editor/file-editor.cc
+++ b/libgui/src/m-editor/file-editor.cc
@@ -307,27 +307,34 @@ file_editor::request_open_file (const QS
                                    QMessageBox::Ok, this);
 
                       msgBox->setWindowModality (Qt::NonModal);
                       msgBox->setAttribute (Qt::WA_DeleteOnClose);
                       msgBox->show ();
                     }
                   else
                     {
-                      // File does not exist
-                      QMessageBox *msgBox
-                        = new QMessageBox (QMessageBox::Question,
-                           tr ("Octave Editor"),
-                           tr ("File\n%1\ndoes not exist. "
-                               "Do you want to create it?").arg (openFileName),
-                           QMessageBox::Yes | QMessageBox::No, this);
+                      // File does not exist, should it be crated?
+                      QMessageBox *msgBox;
+                      int answer;
+                      if (settings->value ("editor/create_new_file",false).toBool ())
+                        {
+                          answer = QMessageBox::Yes;
+                        }
+                      else
+                        {
+                           msgBox = new QMessageBox (QMessageBox::Question,
+                               tr ("Octave Editor"),
+                               tr ("File\n%1\ndoes not exist. "
+                                   "Do you want to create it?").arg (openFileName),
+                               QMessageBox::Yes | QMessageBox::No, this);
 
-                      // msgBox->setWindowModality (Qt::Modal);
-                      msgBox->setAttribute (Qt::WA_DeleteOnClose);
-                      int answer = msgBox->exec ();
+                          msgBox->setAttribute (Qt::WA_DeleteOnClose);
+                          answer = msgBox->exec ();
+                        }
 
                       if (answer == QMessageBox::Yes)
                         {
                           // create the file and call the editor again
                           QFile file (openFileName);
                           if (!file.open (QIODevice::WriteOnly))
                             {
                               // error opening the file
diff --git a/libgui/src/settings-dialog.cc b/libgui/src/settings-dialog.cc
--- a/libgui/src/settings-dialog.cc
+++ b/libgui/src/settings-dialog.cc
@@ -114,16 +114,17 @@ settings_dialog::settings_dialog (QWidge
   ui->editor_auto_ind_checkbox->setChecked (settings->value ("editor/auto_indent",true).toBool ());
   ui->editor_tab_ind_checkbox->setChecked (settings->value ("editor/tab_indents_line",false).toBool ());
   ui->editor_bs_unind_checkbox->setChecked (settings->value ("editor/backspace_unindents_line",false).toBool ());
   ui->editor_ind_guides_checkbox->setChecked (settings->value ("editor/show_indent_guides",false).toBool ());
   ui->editor_ind_width_spinbox->setValue (settings->value ("editor/indent_width",2).toInt ());
   ui->editor_tab_width_spinbox->setValue (settings->value ("editor/tab_width",2).toInt ());
   ui->editor_longWindowTitle->setChecked (settings->value ("editor/longWindowTitle",false).toBool ());
   ui->editor_restoreSession->setChecked (settings->value ("editor/restoreSession",true).toBool ());
+  ui->editor_create_new_file->setChecked (settings->value ("editor/create_new_file",false).toBool ());
   ui->terminal_fontName->setCurrentFont (QFont (settings->value ("terminal/fontName","Courier New").toString()) );
   ui->terminal_fontSize->setValue (settings->value ("terminal/fontSize",10).toInt ());
   ui->showFileSize->setChecked (settings->value ("filesdockwidget/showFileSize",false).toBool());
   ui->showFileType->setChecked (settings->value ("filesdockwidget/showFileType",false).toBool());
   ui->showLastModified->setChecked (settings->value ("filesdockwidget/showLastModified",false).toBool());
   ui->showHiddenFiles->setChecked (settings->value ("filesdockwidget/showHiddenFiles",false).toBool());
   ui->useAlternatingRowColors->setChecked (settings->value ("filesdockwidget/useAlternatingRowColors",true).toBool());
   ui->sync_octave_directory->setChecked (settings->value ("filesdockwidget/sync_octave_directory",true).toBool());
@@ -438,16 +439,17 @@ settings_dialog::write_changed_settings 
   settings->setValue ("editor/auto_indent", ui->editor_auto_ind_checkbox->isChecked ());
   settings->setValue ("editor/tab_indents_line", ui->editor_tab_ind_checkbox->isChecked ());
   settings->setValue ("editor/backspace_unindents_line", ui->editor_bs_unind_checkbox->isChecked ());
   settings->setValue ("editor/show_indent_guides", ui->editor_ind_guides_checkbox->isChecked ());
   settings->setValue ("editor/indent_width", ui->editor_ind_width_spinbox->value ());
   settings->setValue ("editor/tab_width", ui->editor_tab_width_spinbox->value ());
   settings->setValue ("editor/longWindowTitle", ui->editor_longWindowTitle->isChecked());
   settings->setValue ("editor/restoreSession", ui->editor_restoreSession->isChecked ());
+  settings->setValue ("editor/create_new_file", ui->editor_create_new_file->isChecked ());
   settings->setValue ("terminal/fontSize", ui->terminal_fontSize->value());
   settings->setValue ("terminal/fontName", ui->terminal_fontName->currentFont().family());
   settings->setValue ("filesdockwidget/showFileSize", ui->showFileSize->isChecked ());
   settings->setValue ("filesdockwidget/showFileType", ui->showFileType->isChecked ());
   settings->setValue ("filesdockwidget/showLastModified", ui->showLastModified->isChecked ());
   settings->setValue ("filesdockwidget/showHiddenFiles", ui->showHiddenFiles->isChecked ());
   settings->setValue ("filesdockwidget/useAlternatingRowColors", ui->useAlternatingRowColors->isChecked ());
   settings->setValue ("filesdockwidget/sync_octave_directory", ui->sync_octave_directory->isChecked ());
diff --git a/libgui/src/settings-dialog.ui b/libgui/src/settings-dialog.ui
--- a/libgui/src/settings-dialog.ui
+++ b/libgui/src/settings-dialog.ui
@@ -705,16 +705,29 @@
                <verstretch>0</verstretch>
               </sizepolicy>
              </property>
              <property name="text">
               <string>Restore editor tabs from previous session on startup</string>
              </property>
             </widget>
            </item>
+           <item>
+            <widget class="QCheckBox" name="editor_create_new file">
+             <property name="sizePolicy">
+              <sizepolicy hsizetype="Minimum" vsizetype="Fixed">
+               <horstretch>0</horstretch>
+               <verstretch>0</verstretch>
+              </sizepolicy>
+             </property>
+             <property name="text">
+              <string>Create non existing files without prompting</string>
+             </property>
+            </widget>
+           </item>
           </layout>
          </item>
         </layout>
        </item>
        <item>
         <widget class="Line" name="line_4">
          <property name="orientation">
           <enum>Qt::Horizontal</enum>
