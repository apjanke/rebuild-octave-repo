# HG changeset patch
# User jwe
# Date 823351892 0
#      Sat Feb 03 12:51:32 1996 +0000
# Node ID 2ffe49eb95a5185fa61abb09c2c84398780eda8c
# Parent  43f01899692780167d00ceb94922a99d238cb57d
[project @ 1996-02-03 12:47:55 by jwe]

diff --git a/liboctave/CColVector.cc b/liboctave/CColVector.cc
--- a/liboctave/CColVector.cc
+++ b/liboctave/CColVector.cc
@@ -26,17 +26,17 @@ Software Foundation, 59 Temple Place - S
 #endif
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <iostream.h>
 
-#include "f77-uscore.h"
+#include "f77-fcn.h"
 #include "lo-error.h"
 #include "mx-base.h"
 #include "mx-inlines.cc"
 #include "oct-cmplx.h"
 
 // Fortran functions we call.
 
 extern "C"
diff --git a/liboctave/CMatrix.cc b/liboctave/CMatrix.cc
--- a/liboctave/CMatrix.cc
+++ b/liboctave/CMatrix.cc
@@ -34,17 +34,17 @@ Software Foundation, 59 Temple Place - S
 #include <iostream.h>
 
 #include <sys/types.h> // XXX FIXME XXX
 
 #include "CmplxAEPBAL.h"
 #include "CmplxDET.h"
 #include "CmplxSCHUR.h"
 #include "CmplxSVD.h"
-#include "f77-uscore.h"
+#include "f77-fcn.h"
 #include "lo-error.h"
 #include "mx-base.h"
 #include "mx-inlines.cc"
 #include "oct-cmplx.h"
 
 // Fortran functions we call.
 
 extern "C"
diff --git a/liboctave/CRowVector.cc b/liboctave/CRowVector.cc
--- a/liboctave/CRowVector.cc
+++ b/liboctave/CRowVector.cc
@@ -26,17 +26,17 @@ Software Foundation, 59 Temple Place - S
 #endif
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <iostream.h>
 
-#include "f77-uscore.h"
+#include "f77-fcn.h"
 #include "lo-error.h"
 #include "mx-base.h"
 #include "mx-inlines.cc"
 #include "oct-cmplx.h"
 
 // Fortran functions we call.
 
 extern "C"
diff --git a/liboctave/CmplxAEPBAL.cc b/liboctave/CmplxAEPBAL.cc
--- a/liboctave/CmplxAEPBAL.cc
+++ b/liboctave/CmplxAEPBAL.cc
@@ -28,17 +28,17 @@ Software Foundation, 59 Temple Place - S
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <string>
 
 #include "CmplxAEPBAL.h"
 #include "dMatrix.h"
-#include "f77-uscore.h"
+#include "f77-fcn.h"
 
 extern "C"
 {
   int F77_FCN (zgebal, ZGEBAL) (const char*, const int&, Complex*,
 				const int&, int&, int&, double*, int&,
 				long, long);
  
   int F77_FCN (zgebak, ZGEBAK) (const char*, const char*, const int&,
diff --git a/liboctave/CmplxCHOL.cc b/liboctave/CmplxCHOL.cc
--- a/liboctave/CmplxCHOL.cc
+++ b/liboctave/CmplxCHOL.cc
@@ -25,17 +25,17 @@ Software Foundation, 59 Temple Place - S
 #pragma implementation
 #endif
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "CmplxCHOL.h"
-#include "f77-uscore.h"
+#include "f77-fcn.h"
 #include "lo-error.h"
 #include "mx-inlines.cc"
 
 extern "C"
 {
   int F77_FCN (zpotrf, ZPOTRF) (const char*, const int&, Complex*,
 				const int&, int&, long);
 }
diff --git a/liboctave/CmplxHESS.cc b/liboctave/CmplxHESS.cc
--- a/liboctave/CmplxHESS.cc
+++ b/liboctave/CmplxHESS.cc
@@ -25,17 +25,17 @@ Software Foundation, 59 Temple Place - S
 #pragma implementation
 #endif
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "CmplxHESS.h"
-#include "f77-uscore.h"
+#include "f77-fcn.h"
 #include "lo-error.h"
 #include "mx-inlines.cc"
 
 extern "C"
 {
   int F77_FCN (zgebal, ZGEBAL) (const char*, const int&, Complex*,
 				const int&, int&, int&, double*, int&,
 				long, long);
diff --git a/liboctave/CmplxLU.cc b/liboctave/CmplxLU.cc
--- a/liboctave/CmplxLU.cc
+++ b/liboctave/CmplxLU.cc
@@ -25,17 +25,17 @@ Software Foundation, 59 Temple Place - S
 #pragma implementation
 #endif
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "CmplxLU.h"
-#include "f77-uscore.h"
+#include "f77-fcn.h"
 #include "lo-error.h"
 #include "mx-inlines.cc"
 
 extern "C"
 {
   int F77_FCN (zgesv, ZGESV) (const int&, const int&, Complex*,
 			      const int&, int*, Complex*, const int&,
 			      int&);
diff --git a/liboctave/CmplxQR.cc b/liboctave/CmplxQR.cc
--- a/liboctave/CmplxQR.cc
+++ b/liboctave/CmplxQR.cc
@@ -25,17 +25,17 @@ Software Foundation, 59 Temple Place - S
 #pragma implementation
 #endif
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "CmplxQR.h"
-#include "f77-uscore.h"
+#include "f77-fcn.h"
 #include "lo-error.h"
 #include "mx-inlines.cc"
 
 extern "C"
 {
   int F77_FCN (zgeqrf, ZGEQRF) (const int&, const int&, Complex*,
 				const int&, Complex*, Complex*,
 				const int&, int&); 
diff --git a/liboctave/CmplxQRP.cc b/liboctave/CmplxQRP.cc
--- a/liboctave/CmplxQRP.cc
+++ b/liboctave/CmplxQRP.cc
@@ -27,17 +27,17 @@ Software Foundation, 59 Temple Place - S
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <cassert>
 
 #include "CmplxQRP.h"
-#include "f77-uscore.h"
+#include "f77-fcn.h"
 #include "lo-error.h"
 #include "mx-inlines.cc"
 
 extern "C"
 {
   int F77_FCN (zgeqpf, ZGEQPF) (const int&, const int&, Complex*,
 				const int&, int*, Complex*, Complex*,
 				double*, int&);
diff --git a/liboctave/CmplxSCHUR.cc b/liboctave/CmplxSCHUR.cc
--- a/liboctave/CmplxSCHUR.cc
+++ b/liboctave/CmplxSCHUR.cc
@@ -25,17 +25,17 @@ Software Foundation, 59 Temple Place - S
 #pragma implementation
 #endif
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "CmplxSCHUR.h"
-#include "f77-uscore.h"
+#include "f77-fcn.h"
 #include "lo-error.h"
 #include "mx-inlines.cc"
 
 extern "C"
 {
   int F77_FCN (zgeesx, ZGEESX) (const char*, const char*,
 				int (*)(const Complex&), 
 				const char*, const int&, Complex*,
diff --git a/liboctave/CmplxSVD.cc b/liboctave/CmplxSVD.cc
--- a/liboctave/CmplxSVD.cc
+++ b/liboctave/CmplxSVD.cc
@@ -25,17 +25,17 @@ Software Foundation, 59 Temple Place - S
 #pragma implementation
 #endif
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "CmplxSVD.h"
-#include "f77-uscore.h"
+#include "f77-fcn.h"
 #include "lo-error.h"
 #include "mx-inlines.cc"
 
 extern "C"
 {
   int F77_FCN (zgesvd, ZGESVD) (const char*, const char*, const int&,
 				const int&, Complex*, const int&,
 				double*, Complex*, const int&,
diff --git a/liboctave/CollocWt.cc b/liboctave/CollocWt.cc
--- a/liboctave/CollocWt.cc
+++ b/liboctave/CollocWt.cc
@@ -27,17 +27,17 @@ Software Foundation, 59 Temple Place - S
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <iostream.h>
 
 #include "CollocWt.h"
-#include "f77-uscore.h"
+#include "f77-fcn.h"
 #include "lo-error.h"
 
 extern "C"
 {
   int F77_FCN (jcobi, JCOBI) (int&, int&, int&, int&, double&,
 			      double&, double*, double*, double*,
 			      double*);
 
diff --git a/liboctave/DASSL.cc b/liboctave/DASSL.cc
--- a/liboctave/DASSL.cc
+++ b/liboctave/DASSL.cc
@@ -28,17 +28,17 @@ Software Foundation, 59 Temple Place - S
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <cfloat>
 #include <cmath>
 
 #include "DASSL.h"
-#include "f77-uscore.h"
+#include "f77-fcn.h"
 #include "lo-error.h"
 
 extern "C"
 {
   int F77_FCN (ddassl, DDASSL) (int (*)(const double&, double*,
 					double*, double*, int&,
 					double*, int*),
 				const int&, double&, double*, double*,
diff --git a/liboctave/EIG.cc b/liboctave/EIG.cc
--- a/liboctave/EIG.cc
+++ b/liboctave/EIG.cc
@@ -25,17 +25,17 @@ Software Foundation, 59 Temple Place - S
 #pragma implementation
 #endif
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "EIG.h"
-#include "f77-uscore.h"
+#include "f77-fcn.h"
 #include "lo-error.h"
 #include "mx-inlines.cc"
 
 extern "C"
 {
   int F77_FCN (dgeev, DGEEV) (const char*, const char*, const int&,
 			      double*, const int&, double*, double*,
 			      double*, const int&, double*,
diff --git a/liboctave/FSQP.cc b/liboctave/FSQP.cc
--- a/liboctave/FSQP.cc
+++ b/liboctave/FSQP.cc
@@ -27,17 +27,17 @@ Software Foundation, 59 Temple Place - S
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #ifndef FSQP_MISSING
 
 #include "FSQP.h"
-#include "f77-uscore.h"
+#include "f77-fcn.h"
 
 #endif
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; page-delimiter: "^/\\*" ***
 ;;; End: ***
diff --git a/liboctave/LSODE.cc b/liboctave/LSODE.cc
--- a/liboctave/LSODE.cc
+++ b/liboctave/LSODE.cc
@@ -30,17 +30,17 @@ Software Foundation, 59 Temple Place - S
 #endif
 
 #include <cfloat>
 #include <cmath>
 
 #include <iostream.h>
 
 #include "LSODE.h"
-#include "f77-uscore.h"
+#include "f77-fcn.h"
 #include "lo-error.h"
 
 extern "C"
 {
   int F77_FCN (lsode, LSODE) (int (*)(const int&, const double&,
 				      double*, double*, int&),
 			      int&, double*, double&, double&, int&,
 			      double&, double&, int&, int&, int&,
diff --git a/liboctave/NLEqn.cc b/liboctave/NLEqn.cc
--- a/liboctave/NLEqn.cc
+++ b/liboctave/NLEqn.cc
@@ -26,17 +26,17 @@ Software Foundation, 59 Temple Place - S
 #endif
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "NLEqn.h"
 #include "dMatrix.h"
-#include "f77-uscore.h"
+#include "f77-fcn.h"
 #include "lo-error.h"
 
 extern "C"
 {
   int F77_FCN (hybrd1, HYBRD1) (int (*)(int*, double*, double*, int*),
 				const int&, double*, double*,
 				const double&, int&, double*,
 				const int&);
diff --git a/liboctave/NPSOL.cc b/liboctave/NPSOL.cc
--- a/liboctave/NPSOL.cc
+++ b/liboctave/NPSOL.cc
@@ -34,17 +34,17 @@ Software Foundation, 59 Temple Place - S
 #include <cstring>
 
 #include <strstream.h>
 
 #ifndef NPSOL_MISSING
 
 #include "NPSOL.h"
 #include "dMatrix.h"
-#include "f77-uscore.h"
+#include "f77-fcn.h"
 #include "sun-utils.h"
 
 extern "C"
 {
   int F77_FCN (npoptn, NPOPTN) (const char*, long);
 
   int F77_FCN (npsol, NPSOL) (int&, int&, int&, int&, int&, int&,
 			      double*, double*, double*,
diff --git a/liboctave/QLD.cc b/liboctave/QLD.cc
--- a/liboctave/QLD.cc
+++ b/liboctave/QLD.cc
@@ -32,17 +32,17 @@ Software Foundation, 59 Temple Place - S
 #include <cmath>
 
 #include <iostream.h>
 
 #include "QLD.h"
 #include "dColVector.h"
 #include "dMatrix.h"
 #include "dRowVector.h"
-#include "f77-uscore.h"
+#include "f77-fcn.h"
 
 extern "C"
 {
   int F77_FCN (qld, QLD) (int&, int&, int&, int&, int&, double*,
 			  double*, double*, double*, double*, double*,
 			  double*, double*, int&, int&, int&, double*,
 			  int&, int*, int&);
 }
diff --git a/liboctave/QPSOL.cc b/liboctave/QPSOL.cc
--- a/liboctave/QPSOL.cc
+++ b/liboctave/QPSOL.cc
@@ -30,17 +30,17 @@ Software Foundation, 59 Temple Place - S
 #endif
 
 #include <cfloat>
 #include <cmath>
 
 #ifndef QPSOL_MISSING
 
 #include "QPSOL.h"
-#include "f77-uscore.h"
+#include "f77-fcn.h"
 
 extern "C"
 {
   int F77_FCN (qpsol, QPSOL) (int&, int&, int&, int&, int&, int&,
 			      int&, int&, double&, double*, double*,
 			      double*, double*, double*, double*,
 			      int (*)(const int&, const int&,
 				      const int&, const int&, double*,
diff --git a/liboctave/Quad.cc b/liboctave/Quad.cc
--- a/liboctave/Quad.cc
+++ b/liboctave/Quad.cc
@@ -25,17 +25,17 @@ Software Foundation, 59 Temple Place - S
 #pragma implementation
 #endif
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "Quad.h"
-#include "f77-uscore.h"
+#include "f77-fcn.h"
 #include "sun-utils.h"
 
 static integrand_fcn user_fcn;
 
 // XXX FIXME XXX -- would be nice to not have to have this global
 // variable.
 // Nonzero means an error occurred in the calculation of the integrand
 // function, and the user wants us to quit.
diff --git a/liboctave/acosh.c b/liboctave/acosh.c
--- a/liboctave/acosh.c
+++ b/liboctave/acosh.c
@@ -21,17 +21,17 @@ Software Foundation, 59 Temple Place - S
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #ifndef HAVE_ACOSH
 
-#include "f77-uscore.h"
+#include "f77-fcn.h"
 
 extern double F77_FCN (dacosh, DACOSH) (const double*);
 
 double
 acosh (double x)
 {
   return F77_FCN (dacosh, DACOSH) (&x);
 }
diff --git a/liboctave/asinh.c b/liboctave/asinh.c
--- a/liboctave/asinh.c
+++ b/liboctave/asinh.c
@@ -21,17 +21,17 @@ Software Foundation, 59 Temple Place - S
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #ifndef HAVE_ASINH
 
-#include "f77-uscore.h"
+#include "f77-fcn.h"
 
 extern double F77_FCN (dasinh, DASINH) (const double*);
 
 double
 asinh (double x)
 {
   return F77_FCN (dasinh, DASINH) (&x);
 }
diff --git a/liboctave/atanh.c b/liboctave/atanh.c
--- a/liboctave/atanh.c
+++ b/liboctave/atanh.c
@@ -21,17 +21,17 @@ Software Foundation, 59 Temple Place - S
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #ifndef HAVE_ATANH
 
-#include "f77-uscore.h"
+#include "f77-fcn.h"
 
 extern double F77_FCN (datanh, DATANH) (const double*);
 
 double
 atanh (double x)
 {
   return F77_FCN (datanh, DATANH) (&x);
 }
diff --git a/liboctave/dColVector.cc b/liboctave/dColVector.cc
--- a/liboctave/dColVector.cc
+++ b/liboctave/dColVector.cc
@@ -26,17 +26,17 @@ Software Foundation, 59 Temple Place - S
 #endif
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <iostream.h>
 
-#include "f77-uscore.h"
+#include "f77-fcn.h"
 #include "lo-error.h"
 #include "mx-base.h"
 #include "mx-inlines.cc"
 #include "oct-cmplx.h"
 
 // Fortran functions we call.
 
 extern "C"
diff --git a/liboctave/dMatrix.cc b/liboctave/dMatrix.cc
--- a/liboctave/dMatrix.cc
+++ b/liboctave/dMatrix.cc
@@ -36,17 +36,17 @@ Software Foundation, 59 Temple Place - S
 #include <iostream.h>
 
 #include <sys/types.h>  // XXX FIXME XXX
 
 #include "dbleAEPBAL.h"
 #include "dbleDET.h"
 #include "dbleSCHUR.h"
 #include "dbleSVD.h"
-#include "f77-uscore.h"
+#include "f77-fcn.h"
 #include "lo-error.h"
 #include "mx-base.h"
 #include "mx-inlines.cc"
 #include "oct-cmplx.h"
 
 // Fortran functions we call.
 
 extern "C"
diff --git a/liboctave/dRowVector.cc b/liboctave/dRowVector.cc
--- a/liboctave/dRowVector.cc
+++ b/liboctave/dRowVector.cc
@@ -26,17 +26,17 @@ Software Foundation, 59 Temple Place - S
 #endif
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <iostream.h>
 
-#include "f77-uscore.h"
+#include "f77-fcn.h"
 #include "lo-error.h"
 #include "mx-base.h"
 #include "mx-inlines.cc"
 #include "oct-cmplx.h"
 
 // Fortran functions we call.
 
 extern "C"
diff --git a/liboctave/dbleAEPBAL.cc b/liboctave/dbleAEPBAL.cc
--- a/liboctave/dbleAEPBAL.cc
+++ b/liboctave/dbleAEPBAL.cc
@@ -27,17 +27,17 @@ Software Foundation, 59 Temple Place - S
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <string>
 
 #include "dbleAEPBAL.h"
-#include "f77-uscore.h"
+#include "f77-fcn.h"
 
 extern "C"
 {
   int F77_FCN (dgebal, DGEBAL) (const char*, const int&, double*,
 				const int&, int&, int&, double*,
 				int&, long, long);
 
   int F77_FCN (dgebak, DGEBAK) (const char*, const char*, const int&,
diff --git a/liboctave/dbleCHOL.cc b/liboctave/dbleCHOL.cc
--- a/liboctave/dbleCHOL.cc
+++ b/liboctave/dbleCHOL.cc
@@ -25,17 +25,17 @@ Software Foundation, 59 Temple Place - S
 #pragma implementation
 #endif
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "dbleCHOL.h"
-#include "f77-uscore.h"
+#include "f77-fcn.h"
 #include "lo-error.h"
 #include "mx-inlines.cc"
 
 extern "C"
 {
   int F77_FCN (dpotrf, DPOTRF) (const char*, const int&, double*,
 				const int&, int&, long);
 }
diff --git a/liboctave/dbleGEPBAL.cc b/liboctave/dbleGEPBAL.cc
--- a/liboctave/dbleGEPBAL.cc
+++ b/liboctave/dbleGEPBAL.cc
@@ -29,17 +29,17 @@ Software Foundation, 59 Temple Place - S
 #include <config.h>
 #endif
 
 #include <cmath>
 
 #include <string>
 
 #include "dbleGEPBAL.h"
-#include "f77-uscore.h"
+#include "f77-fcn.h"
 
 extern "C"
 {
   int F77_FCN (dgebak, DGEBAK) (const char*, const char*, const int&,
 				const int&, const int&, double*,
 				const int&, double*, const int&, int&,
 				long, long);
 
diff --git a/liboctave/dbleHESS.cc b/liboctave/dbleHESS.cc
--- a/liboctave/dbleHESS.cc
+++ b/liboctave/dbleHESS.cc
@@ -25,17 +25,17 @@ Software Foundation, 59 Temple Place - S
 #pragma implementation
 #endif
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "dbleHESS.h"
-#include "f77-uscore.h"
+#include "f77-fcn.h"
 #include "lo-error.h"
 #include "mx-inlines.cc"
 
 extern "C"
 {
   int F77_FCN (dgebal, DGEBAL) (const char*, const int&, double*,
 				const int&, int&, int&, double*,
 				int&, long, long);
diff --git a/liboctave/dbleLU.cc b/liboctave/dbleLU.cc
--- a/liboctave/dbleLU.cc
+++ b/liboctave/dbleLU.cc
@@ -25,17 +25,17 @@ Software Foundation, 59 Temple Place - S
 #pragma implementation
 #endif
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "dbleLU.h"
-#include "f77-uscore.h"
+#include "f77-fcn.h"
 #include "lo-error.h"
 #include "mx-inlines.cc"
 
 extern "C"
 {
   int F77_FCN (dgesv, DGESV) (const int&, const int&, double*,
 			      const int&, int*, double&, const int&,
 			      int&);
diff --git a/liboctave/dbleQR.cc b/liboctave/dbleQR.cc
--- a/liboctave/dbleQR.cc
+++ b/liboctave/dbleQR.cc
@@ -25,17 +25,17 @@ Software Foundation, 59 Temple Place - S
 #pragma implementation
 #endif
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "dbleQR.h"
-#include "f77-uscore.h"
+#include "f77-fcn.h"
 #include "lo-error.h"
 #include "mx-inlines.cc"
 
 extern "C"
 {
   int F77_FCN (dgeqrf, DGEQRF) (const int&, const int&, double*,
 				const int&, double*, double*,
 				const int&, int&); 
diff --git a/liboctave/dbleQRP.cc b/liboctave/dbleQRP.cc
--- a/liboctave/dbleQRP.cc
+++ b/liboctave/dbleQRP.cc
@@ -27,17 +27,17 @@ Software Foundation, 59 Temple Place - S
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <cassert>
 
 #include "dbleQRP.h"
-#include "f77-uscore.h"
+#include "f77-fcn.h"
 #include "lo-error.h"
 #include "mx-inlines.cc"
 
 extern "C"
 {
   int F77_FCN (dgeqpf, DGEQPF) (const int&, const int&, double*,
 				const int&, int*, double*, double*,
 				int&);
diff --git a/liboctave/dbleSCHUR.cc b/liboctave/dbleSCHUR.cc
--- a/liboctave/dbleSCHUR.cc
+++ b/liboctave/dbleSCHUR.cc
@@ -27,17 +27,17 @@ Software Foundation, 59 Temple Place - S
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <iostream.h>
 
 #include "dbleSCHUR.h"
-#include "f77-uscore.h"
+#include "f77-fcn.h"
 #include "lo-error.h"
 #include "mx-inlines.cc"
 
 extern "C"
 {
   int F77_FCN (dgeesx, DGEESX) (const char*, const char*,
 				int (*)(const double&, const double&),
 				const char*, const int&, double*,
diff --git a/liboctave/dbleSVD.cc b/liboctave/dbleSVD.cc
--- a/liboctave/dbleSVD.cc
+++ b/liboctave/dbleSVD.cc
@@ -27,17 +27,17 @@ Software Foundation, 59 Temple Place - S
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <iostream.h>
 
 #include "dbleSVD.h"
-#include "f77-uscore.h"
+#include "f77-fcn.h"
 #include "mx-inlines.cc"
 
 extern "C"
 {
   int F77_FCN (dgesvd, DGESVD) (const char*, const char*, const int&,
 				const int&, double*, const int&,
 				double*, double*, const int&, double*,
 				const int&, double*, const int&, int&,
diff --git a/liboctave/erf.c b/liboctave/erf.c
--- a/liboctave/erf.c
+++ b/liboctave/erf.c
@@ -21,17 +21,17 @@ Software Foundation, 59 Temple Place - S
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #ifndef HAVE_ERF
 
-#include "f77-uscore.h"
+#include "f77-fcn.h"
 
 extern double F77_FCN (derf, DERF) (const double*);
 
 double
 erf (double x)
 {
   return F77_FCN (derf, DERF) (&x);
 }
diff --git a/liboctave/erfc.c b/liboctave/erfc.c
--- a/liboctave/erfc.c
+++ b/liboctave/erfc.c
@@ -21,17 +21,17 @@ Software Foundation, 59 Temple Place - S
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #ifndef HAVE_ERFC
 
-#include "f77-uscore.h"
+#include "f77-fcn.h"
 
 extern double F77_FCN (derfc, DERFC) (const double*);
 
 double
 erfc (double x)
 {
   return F77_FCN (derfc, DERFC) (&x);
 }
diff --git a/liboctave/f77-fcn.h b/liboctave/f77-fcn.h
--- a/liboctave/f77-fcn.h
+++ b/liboctave/f77-fcn.h
@@ -1,11 +1,11 @@
 /*
 
-Copyright (C) 1992, 1993, 1994, 1995 John W. Eaton
+Copyright (C) 1996 John W. Eaton
 
 This file is part of Octave.
 
 Octave is free software; you can redistribute it and/or modify it
 under the terms of the GNU General Public License as published by the
 Free Software Foundation; either version 2, or (at your option) any
 later version.
 
@@ -15,33 +15,78 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, write to the Free
 Software Foundation, 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 */
 
-#if !defined (octave_f77_uscore_h)
-#define octave_f77_uscore_h 1
+#if !defined (octave_f77_fcn_h)
+#define octave_f77_fcn_h 1
+
+#include <setjmp.h>
+
+/* Some Fortran compilers append underscores or generate uppercase
+   external names. */
 
 #if defined (F77_APPEND_UNDERSCORE)
 #if defined (F77_UPPERCASE_NAMES)
-#define F77_FCN(f, F) F##_
+#define F77_FCN(f, F) F ## _
 #else
-#define F77_FCN(f, F) f##_
+#define F77_FCN(f, F) f ## _
 #endif
 #else
 #if defined (F77_UPPERCASE_NAMES)
 #define F77_FCN(f, F) F
 #else
 #define F77_FCN(f, F) f
 #endif
 #endif
 
+/* How to print an error for the F77_XFCN macro. */
+
+#if defined (F77_UPPERCASE_NAMES)
+#define F77_XFCN_ERROR(f, F) \
+  (*current_liboctave_error_handler)
+    ("exception encountered in Fortran subroutine %s", F);
+#else
+#define F77_XFCN_ERROR(f, F) \
+  (*current_liboctave_error_handler)
+    ("exception encountered in Fortran subroutine %s", f);
+#endif
+
+/* This can be used to call a Fortran subroutine that might call
+   XSTOPX.  XSTOPX will call lonjmp with f77_context and we'll return,
+   call the error function, restore the previous context.  After using
+   this macro, error_state should be checked. */
+
+#define F77_XFCN(f, F, args) \
+  do \
+    { \
+      jmp_buf saved_f77_context; \
+      copy_f77_context ((char *) f77_context, (char *) saved_f77_context, \
+			sizeof (jmp_buf)); \
+      if (setjmp (f77_context)) \
+	F77_XFCN_ERROR (f, F); \
+      else \
+	F77_FCN (f, F) args; \
+      copy_f77_context ((char *) saved_f77_context, (char *) f77_context, \
+			sizeof (jmp_buf)); \
+    } \
+  while (0)
+
+/* For setjmp/longjmp. */
+jmp_buf f77_context;
+
+/* Defining this as a separate function allows us to avoid having to
+   include string.h in this file. */
+
+extern void copy_f77_context (void *, void *, unsigned int);
+
 #endif
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; page-delimiter: "^/\\*" ***
 ;;; End: ***
 */
diff --git a/liboctave/gamma.c b/liboctave/gamma.c
--- a/liboctave/gamma.c
+++ b/liboctave/gamma.c
@@ -21,17 +21,17 @@ Software Foundation, 59 Temple Place - S
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #ifndef HAVE_GAMMA
 
-#include "f77-uscore.h"
+#include "f77-fcn.h"
 
 extern double F77_FCN (dgamma, DGAMMA) (const double*);
 
 double
 gamma (double x)
 {
   return F77_FCN (dgamma, DGAMMA) (&x);
 }
diff --git a/liboctave/lgamma.c b/liboctave/lgamma.c
--- a/liboctave/lgamma.c
+++ b/liboctave/lgamma.c
@@ -21,17 +21,17 @@ Software Foundation, 59 Temple Place - S
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #ifndef HAVE_LGAMMA
 
-#include "f77-uscore.h"
+#include "f77-fcn.h"
 
 /* If the system doesn't have lgamma, assume that it doesn't have
    signgam either */
 
 int signgam;
 
 extern int F77_FCN (dlgams, DLGAMS) (const double*, double*, double*);
 
diff --git a/liboctave/utils.cc b/liboctave/utils.cc
--- a/liboctave/utils.cc
+++ b/liboctave/utils.cc
@@ -28,17 +28,17 @@ Software Foundation, 59 Temple Place - S
 #include <csignal>
 #include <cstdlib>
 
 #ifdef HAVE_UNISTD_H
 #include <sys/types.h>
 #include <unistd.h>
 #endif
 
-#include "f77-uscore.h"
+#include "f77-fcn.h"
 
 // All the STOP statements in the Fortran routines have been replaced
 // with a call to XSTOPX, defined in the file libcruft/misc/xstopx.f.
 //
 // The XSTOPX function calls this function, which will send a SIGINT
 // signal to the program that invoked it.
 //
 // Octave's SIGINT signal handler calls jump_to_top_level(), and the
diff --git a/src/mappers.cc b/src/mappers.cc
--- a/src/mappers.cc
+++ b/src/mappers.cc
@@ -27,17 +27,17 @@ Software Foundation, 59 Temple Place - S
 
 #include <cfloat>
 
 #include "oct-cmplx.h"
 #include "oct-math.h"
 
 #include "defun.h"
 #include "error.h"
-#include "f77-uscore.h"
+#include "f77-fcn.h"
 #include "mappers.h"
 #include "sysdep.h"
 #include "utils.h"
 #include "variables.h"
 
 #if defined (_AIX) && defined (__GNUG__)
 #undef finite
 #define finite(x) ((x) < DBL_MAX && (x) > -DBL_MAX)
diff --git a/src/qzval.cc b/src/qzval.cc
--- a/src/qzval.cc
+++ b/src/qzval.cc
@@ -24,17 +24,17 @@ Software Foundation, 59 Temple Place - S
 // Written by A. S. Hodel <scotte@eng.auburn.edu>
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <cfloat>
 
-#include "f77-uscore.h"
+#include "f77-fcn.h"
 
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "help.h"
 #include "oct-obj.h"
 #include "user-prefs.h"
 #include "utils.h"
diff --git a/src/rand.cc b/src/rand.cc
--- a/src/rand.cc
+++ b/src/rand.cc
@@ -24,17 +24,17 @@ Software Foundation, 59 Temple Place - S
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <ctime>
 
 #include <string>
 
-#include "f77-uscore.h"
+#include "f77-fcn.h"
 
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "help.h"
 #include "mappers.h"
 #include "oct-obj.h"
 #include "unwind-prot.h"
diff --git a/src/sysdep.cc b/src/sysdep.cc
--- a/src/sysdep.cc
+++ b/src/sysdep.cc
@@ -71,17 +71,17 @@ LOSE! LOSE!
 
 extern char *term_clrpag;
 extern "C" void _rl_output_character_function ();
 
 #include "oct-math.h"
 
 #include "defun.h"
 #include "error.h"
-#include "f77-uscore.h"
+#include "f77-fcn.h"
 #include "help.h"
 #include "input.h"
 #include "mappers.h"
 #include "oct-obj.h"
 #include "pathlen.h"
 #include "pt-const.h"
 #include "sysdep.h"
 #include "toplev.h"
