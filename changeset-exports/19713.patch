# HG changeset patch
# User Rik <rik@octave.org>
# Date 1423935177 28800
#      Sat Feb 14 09:32:57 2015 -0800
# Node ID 1a6fa5a523e4d2a3bf65f04834e9efc63f86249e
# Parent  52cd69e797846d02c6d35c8e9b6f2ff916baaf54
Correctly use GL2PS_POLYGON_OFFSET_FILL (bug #44111, bug #44125).

* gl-render.h (set_polygon_offset): Correct prototype to use initial value
of 0.0f.

* gl2ps-renderer.h (set_polygon_offset): First call
opengl_renderer::set_polygon_offset to set offset.  Next, call
gl2psEnable (GL2PS_POLYGON_OFFSET) to have gl2ps capture the offset
value.

diff --git a/libinterp/corefcn/gl-render.h b/libinterp/corefcn/gl-render.h
--- a/libinterp/corefcn/gl-render.h
+++ b/libinterp/corefcn/gl-render.h
@@ -94,17 +94,17 @@ protected:
   virtual void draw_image (const image::properties& props);
   virtual void draw_uipanel (const uipanel::properties& props,
                              const graphics_object& go);
 
   virtual void init_gl_context (bool enhanced, const Matrix& backgroundColor);
   virtual void setup_opengl_transformation (const axes::properties& props);
 
   virtual void set_color (const Matrix& c);
-  virtual void set_polygon_offset (bool on, float offset = 0.0);
+  virtual void set_polygon_offset (bool on, float offset = 0.0f);
   virtual void set_linewidth (float w);
   virtual void set_linestyle (const std::string& s, bool stipple = false);
   virtual void set_clipbox (double x1, double x2, double y1, double y2,
                             double z1, double z2);
   virtual void set_clipping (bool on);
   virtual void set_font (const base_properties& props);
 
   virtual void init_marker (const std::string& m, double size, float width);
diff --git a/libinterp/corefcn/gl2ps-renderer.h b/libinterp/corefcn/gl2ps-renderer.h
--- a/libinterp/corefcn/gl2ps-renderer.h
+++ b/libinterp/corefcn/gl2ps-renderer.h
@@ -59,24 +59,29 @@ protected:
     opengl_renderer::set_linestyle (s, use_stipple);
 
     if (s == "-" && ! use_stipple)
       gl2psDisable (GL2PS_LINE_STIPPLE);
     else
       gl2psEnable (GL2PS_LINE_STIPPLE);
   }
 
-  void set_polygon_offset (bool on, double offset = 0.0)
+  void set_polygon_offset (bool on, float offset = 0.0f)
   {
-    opengl_renderer::set_polygon_offset (on, offset);
     if (on)
-      gl2psEnable (GL2PS_POLYGON_OFFSET_FILL);
+      {
+        opengl_renderer::set_polygon_offset (on, offset);
+        gl2psEnable (GL2PS_POLYGON_OFFSET_FILL);
+      }
     else
-      gl2psDisable (GL2PS_POLYGON_OFFSET_FILL);
-  }
+      {
+        gl2psDisable (GL2PS_POLYGON_OFFSET_FILL);
+        opengl_renderer::set_polygon_offset (on, offset);
+      }
+  } 
 
   void set_linewidth (float w)
   {
     gl2psLineWidth (w);
   }
 
 private:
   int alignment_to_mode (int ha, int va) const;
