# HG changeset patch
# User Soren Hauberg <hauberg@gmail.com>
# Date 1256228336 14400
#      Thu Oct 22 12:18:56 2009 -0400
# Node ID 2b0cc0b6db61f094d9811ed9dc50cd1607ee0d52
# Parent  7bf4f3d6495547ee27d37eb1b9fb24128028725b
Add demos for colormap functions

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,20 @@
+2009-10-22  Soren Hauberg  <hauberg@gmail.com>
+
+	* image/autumn.m, image/bone.m, image/cool.m, image/copper.m,
+	image/flag.m, image/gmap40.m, image/gray.m, image/hot.m,
+	image/hsv.m, image/jet.m, image/ocean.m, image/pink.m,
+	image/prism.m, image/rainbow.m, image/spring.m, image/summer.m,
+	image/white.m, image/winter.m: Add demos.
+
+2009-10-20  Soren Hauberg  <hauberg@gmail.com>
+ 
+ 	* general/interp2.m: improved error checking and support for bicubic
+
 2009-10-19  Soren Hauberg  <hauberg@gmail.com>
 
 	* io/strread.m, io/textread.m: New functions.
 
 2009-10-20  Jaroslav Hajek  <highegg@gmail.com>
 
 	* statistics/base/center.m: Rewrite using bsxfun.
 
diff --git a/scripts/image/autumn.m b/scripts/image/autumn.m
--- a/scripts/image/autumn.m
+++ b/scripts/image/autumn.m
@@ -45,8 +45,15 @@ function map = autumn (number)
     g = (0:number - 1)' ./ (number - 1);
     b = zeros (number, 1);
     map = [r, g, b];
   else
     map = [];
   endif
 
 endfunction
+
+%!demo
+%! ## Show the 'autumn' colormap as an image
+%! image (1:64, linspace (0, 1, 64), repmat (1:64, 64, 1)')
+%! axis ([1, 64, 0, 1], "ticy", "xy")
+%! colormap autumn
+
diff --git a/scripts/image/bone.m b/scripts/image/bone.m
--- a/scripts/image/bone.m
+++ b/scripts/image/bone.m
@@ -48,8 +48,15 @@ function map = bone (number)
       + (x >= 3/8 & x < 3/4) .* (29/24 * x - 1/8)\
       + (x >= 3/4) .* (7/8 * x + 1/8);
     b = (x < 3/8) .* (29/24 * x) + (x >= 3/8) .* (7/8 * x + 1/8);
     map = [r, g, b];
   else
     map = [];
   endif
 endfunction
+
+%!demo
+%! ## Show the 'bone' colormap as an image
+%! image (1:64, linspace (0, 1, 64), repmat (1:64, 64, 1)')
+%! axis ([1, 64, 0, 1], "ticy", "xy")
+%! colormap bone
+
diff --git a/scripts/image/cool.m b/scripts/image/cool.m
--- a/scripts/image/cool.m
+++ b/scripts/image/cool.m
@@ -45,8 +45,15 @@ function map = cool (number)
     g = 1 - r;
     b = ones (number, 1);
     map = [r, g, b];
   else
     map = [];
   endif
 
 endfunction
+
+%!demo
+%! ## Show the 'cool' colormap as an image
+%! image (1:64, linspace (0, 1, 64), repmat (1:64, 64, 1)')
+%! axis ([1, 64, 0, 1], "ticy", "xy")
+%! colormap cool
+
diff --git a/scripts/image/copper.m b/scripts/image/copper.m
--- a/scripts/image/copper.m
+++ b/scripts/image/copper.m
@@ -46,8 +46,15 @@ function map = copper (number)
     g = 4/5 * x;
     b = 1/2 * x;
     map = [r, g, b];
   else
     map = [];
   endif
 
 endfunction
+
+%!demo
+%! ## Show the 'copper' colormap as an image
+%! image (1:64, linspace (0, 1, 64), repmat (1:64, 64, 1)')
+%! axis ([1, 64, 0, 1], "ticy", "xy")
+%! colormap copper
+
diff --git a/scripts/image/flag.m b/scripts/image/flag.m
--- a/scripts/image/flag.m
+++ b/scripts/image/flag.m
@@ -46,8 +46,15 @@ function map = flag (number)
     map = kron (ones (number / 4, 1), p);
   else
     m1 = kron (ones (fix (number / 4), 1), p);
     m2 = p(1:rem (number, 4), :);
     map = [m1; m2];
   endif
 
 endfunction
+
+%!demo
+%! ## Show the 'flag' colormap as an image
+%! image (1:64, linspace (0, 1, 64), repmat (1:64, 64, 1)')
+%! axis ([1, 64, 0, 1], "ticy", "xy")
+%! colormap flag
+
diff --git a/scripts/image/gmap40.m b/scripts/image/gmap40.m
--- a/scripts/image/gmap40.m
+++ b/scripts/image/gmap40.m
@@ -42,8 +42,15 @@ function map = gmap40 (number)
   if (number >= 1)
     map = repmat ([1, 0, 0; 0, 1, 0; 0, 0, 1; 1, 1, 0; 1, 0, 1; 0, 1, 1],
 		  ceil (number / 6), 1) (1:number, :);
   else
     map = [];
   endif
 
 endfunction
+
+%!demo
+%! ## Show the 'gmap40' colormap as an image
+%! image (1:64, linspace (0, 1, 64), repmat (1:64, 64, 1)')
+%! axis ([1, 64, 0, 1], "ticy", "xy")
+%! colormap gmap40
+
diff --git a/scripts/image/gray.m b/scripts/image/gray.m
--- a/scripts/image/gray.m
+++ b/scripts/image/gray.m
@@ -40,8 +40,15 @@ function map = gray (number)
     print_usage ();
   endif
 
   gr = [0:(number-1)]';
 
   map = [ gr, gr, gr ] / (number - 1);
 
 endfunction
+
+%!demo
+%! ## Show the 'gray' colormap as an image
+%! image (1:64, linspace (0, 1, 64), repmat (1:64, 64, 1)')
+%! axis ([1, 64, 0, 1], "ticy", "xy")
+%! colormap gray
+
diff --git a/scripts/image/hot.m b/scripts/image/hot.m
--- a/scripts/image/hot.m
+++ b/scripts/image/hot.m
@@ -46,8 +46,15 @@ function map = hot (number)
     g = (x >= 2/5 & x < 4/5) .* (5/2 * x - 1) + (x >= 4/5);
     b = (x >= 4/5) .* (5*x - 4);
     map = [r, g, b];
   else
     map = [];
   endif
 
 endfunction
+
+%!demo
+%! ## Show the 'hot' colormap as an image
+%! image (1:64, linspace (0, 1, 64), repmat (1:64, 64, 1)')
+%! axis ([1, 64, 0, 1], "ticy", "xy")
+%! colormap hot
+
diff --git a/scripts/image/hsv.m b/scripts/image/hsv.m
--- a/scripts/image/hsv.m
+++ b/scripts/image/hsv.m
@@ -48,8 +48,15 @@ function map = hsv (number)
   elseif (number > 1)
     h = linspace (0, 1, number)';
     map = hsv2rgb ([h, ones(number, 1), ones(number, 1)]);
   else
     map = [];
   endif
 
 endfunction
+
+%!demo
+%! ## Show the 'hsv' colormap as an image
+%! image (1:64, linspace (0, 1, 64), repmat (1:64, 64, 1)')
+%! axis ([1, 64, 0, 1], "ticy", "xy")
+%! colormap hsv
+
diff --git a/scripts/image/jet.m b/scripts/image/jet.m
--- a/scripts/image/jet.m
+++ b/scripts/image/jet.m
@@ -49,8 +49,15 @@ function map = jet (number)
     b = (x < 1/8) .* (4 * x + 1/2) + (x >= 1/8 & x < 3/8)\
       + (x >= 3/8 & x < 5/8) .* (-4 * x + 5/2);
     map = [r, g, b];
   else
     map = [];
   endif
 
 endfunction
+
+%!demo
+%! ## Show the 'jet' colormap as an image
+%! image (1:64, linspace (0, 1, 64), repmat (1:64, 64, 1)')
+%! axis ([1, 64, 0, 1], "ticy", "xy")
+%! colormap jet
+
diff --git a/scripts/image/ocean.m b/scripts/image/ocean.m
--- a/scripts/image/ocean.m
+++ b/scripts/image/ocean.m
@@ -49,8 +49,15 @@ function map = ocean (number)
 
   g = prepad([0:dg:(number-1)], number)';
 
   b = [0:(number-1)]';
 
   map = [ r, g, b ] / (number - 1);
 
 endfunction
+
+%!demo
+%! ## Show the 'ocean' colormap as an image
+%! image (1:64, linspace (0, 1, 64), repmat (1:64, 64, 1)')
+%! axis ([1, 64, 0, 1], "ticy", "xy")
+%! colormap ocean
+
diff --git a/scripts/image/pink.m b/scripts/image/pink.m
--- a/scripts/image/pink.m
+++ b/scripts/image/pink.m
@@ -49,8 +49,15 @@ function map = pink (number)
     b = (x < 3/4) .* (2/3 * x) + (x >= 3/4) .* (2 * x - 1);
 
     map = sqrt ([r, g, b]);
   else
     map = [];
   endif
 
 endfunction
+
+%!demo
+%! ## Show the 'pink' colormap as an image
+%! image (1:64, linspace (0, 1, 64), repmat (1:64, 64, 1)')
+%! axis ([1, 64, 0, 1], "ticy", "xy")
+%! colormap pink
+
diff --git a/scripts/image/prism.m b/scripts/image/prism.m
--- a/scripts/image/prism.m
+++ b/scripts/image/prism.m
@@ -42,8 +42,15 @@ function map = prism (number)
 
   if (rem (number, 6) == 0)
     map = kron(ones (fix (number / 6), 1), p);
   else
     map = [kron(ones (fix (number / 6), 1), p); p(1:rem (number, 6), :)];
   endif
 
 endfunction
+
+%!demo
+%! ## Show the 'prism' colormap as an image
+%! image (1:64, linspace (0, 1, 64), repmat (1:64, 64, 1)')
+%! axis ([1, 64, 0, 1], "ticy", "xy")
+%! colormap prism
+
diff --git a/scripts/image/rainbow.m b/scripts/image/rainbow.m
--- a/scripts/image/rainbow.m
+++ b/scripts/image/rainbow.m
@@ -50,8 +50,15 @@ function map = rainbow (number)
       + (x >= 3/5 & x < 4/5) .* (-5 * x + 4);
     b = (x >= 3/5 & x < 4/5) .* (5 * x - 3) + (x >= 4/5);
     map = [r, g, b];
   else
     map = [];
   endif
 
 endfunction
+
+%!demo
+%! ## Show the 'rainbow' colormap as an image
+%! image (1:64, linspace (0, 1, 64), repmat (1:64, 64, 1)')
+%! axis ([1, 64, 0, 1], "ticy", "xy")
+%! colormap rainbow
+
diff --git a/scripts/image/spring.m b/scripts/image/spring.m
--- a/scripts/image/spring.m
+++ b/scripts/image/spring.m
@@ -45,8 +45,15 @@ function map = spring (number)
     g = (0:number - 1)' ./ (number - 1);
     b = 1 - g;
     map = [r, g, b];
   else
     map = [];
   endif
 
 endfunction
+
+%!demo
+%! ## Show the 'spring' colormap as an image
+%! image (1:64, linspace (0, 1, 64), repmat (1:64, 64, 1)')
+%! axis ([1, 64, 0, 1], "ticy", "xy")
+%! colormap spring
+
diff --git a/scripts/image/summer.m b/scripts/image/summer.m
--- a/scripts/image/summer.m
+++ b/scripts/image/summer.m
@@ -46,8 +46,15 @@ function map = summer (number)
     b = 0.4 * ones (number, 1);
 
     map = [r, g, b];
   else
     map = [];
   endif
 
 endfunction
+
+%!demo
+%! ## Show the 'summer' colormap as an image
+%! image (1:64, linspace (0, 1, 64), repmat (1:64, 64, 1)')
+%! axis ([1, 64, 0, 1], "ticy", "xy")
+%! colormap summer
+
diff --git a/scripts/image/white.m b/scripts/image/white.m
--- a/scripts/image/white.m
+++ b/scripts/image/white.m
@@ -40,8 +40,15 @@ function map = white (number)
 
   if (number > 0)
     map = ones (number, 3);
   else
     map = [];
   endif
 
 endfunction
+
+%!demo
+%! ## Show the 'white' colormap as an image
+%! image (1:64, linspace (0, 1, 64), repmat (1:64, 64, 1)')
+%! axis ([1, 64, 0, 1], "ticy", "xy")
+%! colormap white
+
diff --git a/scripts/image/winter.m b/scripts/image/winter.m
--- a/scripts/image/winter.m
+++ b/scripts/image/winter.m
@@ -46,8 +46,15 @@ function map = winter (number)
     b = 1 - g ./ 2;
 
     map = [r, g, b];
   else
     map = [];
   endif
 
 endfunction
+
+%!demo
+%! ## Show the 'winter' colormap as an image
+%! image (1:64, linspace (0, 1, 64), repmat (1:64, 64, 1)')
+%! axis ([1, 64, 0, 1], "ticy", "xy")
+%! colormap winter
+
