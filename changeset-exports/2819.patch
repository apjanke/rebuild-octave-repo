# HG changeset patch
# User jwe
# Date 858641265 0
#      Mon Mar 17 23:27:45 1997 +0000
# Node ID ae3cce876a8e8e30ea3754d1478dbd510d79e58d
# Parent  cac5a66e48c6481c0c6236f6bdff44473d061754
[project @ 1997-03-17 23:27:45 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,17 @@
+Mon Mar 17 10:53:29 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* lex.l (handle_identifier): When handling indirect_ref, set
+	lexer_flags.quote_is_transpose to 1 so that a.b' to work as
+	expected.
+
+	* parse.y (param_list_beg, param_list_end): New nonterminals.
+	(param_list, param_list1): Use them.
+
 Wed Mar 12 16:57:28 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* Makefile.in (install-strip): New target.
 
 Mon Mar 10 22:38:16 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* Makefile.in (clean): Delete .oct files too.
 
diff --git a/src/lex.l b/src/lex.l
--- a/src/lex.l
+++ b/src/lex.l
@@ -1699,17 +1699,29 @@ handle_identifier (const string& tok, in
 
   // If we are expecting a structure element, we just want to return
   // TEXT_ID, which is a string that is also a valid identifier.  But
   // first, we have to decide whether to insert a comma.
 
   if (lexer_flags.looking_at_indirect_ref)
     {
       maybe_unput_comma (spc_gobbled);
-      TOK_PUSH_AND_RETURN (tok, TEXT_ID);
+
+      yylval.tok_val = new token (tok, input_line_number,
+				  current_input_column);
+
+      token_stack.push (yylval.tok_val);
+
+      lexer_flags.cant_be_identifier = 0;
+      lexer_flags.quote_is_transpose = 1;
+      lexer_flags.convert_spaces_to_comma = 1;
+
+      current_input_column += yyleng;
+
+      return TEXT_ID;
     }
 
   // If we have a regular keyword, or a plot STYLE, return it.
   // Keywords can be followed by identifiers (TOK_RETURN handles
   // that).
 
   int kw_token = is_keyword (tok);
   if (kw_token)
