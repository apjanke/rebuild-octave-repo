# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1260910968 18000
#      Tue Dec 15 16:02:48 2009 -0500
# Node ID 2b008f1d3794ad126c3112d545faeb9f57530de2
# Parent  d36f8c473dff043c9f3bcb8f2b8075ab6d63246c
octave_call_stack::do_goto_frame_relative: stop searching at top frame

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2009-12-15  John W. Eaton  <jwe@octave.org>
+
+	* toplev.cc (do_goto_frame_relative): Stop searching at top
+	stack frame even though it is not a function.
+
 2009-12-15  Jaroslav Hajek  <highegg@gmail.com>
 
 	* DLD-FUNCTIONS/cellfun.cc (Fcellfun): Preserve original nargout. Call
 	functions with this value. Use nargout1 to possibly accumulate extra
 	outputs, as long as they are defined.
 
 2009-12-14  Jaroslav Hajek  <highegg@gmail.com>
 
diff --git a/src/toplev.cc b/src/toplev.cc
--- a/src/toplev.cc
+++ b/src/toplev.cc
@@ -382,44 +382,46 @@ octave_call_stack::do_goto_frame_relativ
 	break;
 
       frame += incr;
 
       const call_stack_elt& elt = cs[frame];
 
       octave_function *f = elt.fcn;
 
-      if (f && f->is_user_code ())
+      if (frame == 0 || (f && f->is_user_code ()))
 	{
 	  if (nskip > 0)
 	    nskip--;
 	  else if (nskip < 0)
 	    nskip++;
 
 	  if (nskip == 0)
 	    {
 	      curr_frame = frame;
 	      cs[cs.size () - 1].prev = curr_frame;
 
 	      symbol_table::set_scope_and_context (elt.scope, elt.context);
 
 	      if (verbose)
 		{
-		  tree_statement *s = elt.stmt;
-		  int l = -1;
-		  int c = -1;
-		  if (s)
-		    {
-		      l = s->line ();
-		      c = s->column ();
-		    }
+                  std::ostringstream buf;
+
+                  if (f)
+                    {
+                      tree_statement *s = elt.stmt;
 
-		  std::ostringstream buf;
-		  buf << f->name () << ": " << " line " << l
-		      << ", column " << c << std::endl;
+                      int l = s ? s->line () : -1;
+                      int c = s ? s->column () : -1;
+
+                      buf << f->name () << ": " << " line " << l
+                          << ", column " << c << std::endl;
+                    }
+                  else
+                    buf << "at top level" << std::endl;
 
 		  octave_stdout << buf.str ();
 		}
 
 	      retval = true;
 	      break;
 	    }
 	}
