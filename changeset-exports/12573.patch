# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1301887994 25200
#      Sun Apr 03 20:33:14 2011 -0700
# Node ID 232a90612254905198e351912c31139297022246
# Parent  dffd30f1275208def2d019d6b1d5ddf2119e611f
Add new section on parsing to documentation.
Add functions add_input_event_hook, remove_input_event_hook, missing_function_hook to documentation.

diff --git a/doc/ChangeLog b/doc/ChangeLog
--- a/doc/ChangeLog
+++ b/doc/ChangeLog
@@ -1,8 +1,14 @@
+2011-04-03  Rik  <octave@nomad.inbox5.com>
+
+	* interpreter/grammar.txi, interpreter/octave.texi: Add new section
+	on parsing to documentation.  Add functions add_input_event_hook,
+	remove_input_event_hook, missing_function_hook to documentation.
+
 2011-04-03  Rik  <octave@nomad.inbox5.com>
 
 	* interpreter/linalg.txi: Add blkmm function to documentation.
 
 2011-04-02  Rik  <octave@nomad.inbox5.com>
 
 	* interpreter/stats.txi: Add quantile, prctile functions to
 	documentation.
diff --git a/doc/interpreter/grammar.txi b/doc/interpreter/grammar.txi
--- a/doc/interpreter/grammar.txi
+++ b/doc/interpreter/grammar.txi
@@ -11,26 +11,27 @@
 @c ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 @c FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 @c for more details.
 @c 
 @c You should have received a copy of the GNU General Public License
 @c along with Octave; see the file COPYING.  If not, see
 @c <http://www.gnu.org/licenses/>.
 
-@node Grammar
-@appendix Grammar
+@node Grammar and Parser
+@appendix Grammar and Parser
 @cindex grammar rules
 @cindex language definition
 
-This appendix should eventually contain a semi-formal description of
+This appendix will eventually contain a semi-formal description of
 Octave's language.
 
 @menu
 * Keywords::                    
+* Parser::                    
 @end menu
 
 @node Keywords
 @section Keywords
 @cindex keywords
 
 The following identifiers are keywords, and may not be used as variable
 or function names:
@@ -47,9 +48,38 @@ or function names:
 @item @code{function} @tab @code{get} @tab @code{global}
 @item @code{if} @tab @code{methods} @tab @code{otherwise}
 @item @code{persistent} @tab @code{properties} @tab @code{return}
 @item @code{set} @tab @code{static} @tab @code{switch}
 @item @code{try} @tab @code{until} @tab @code{unwind_protect}
 @item @code{unwind_protect_cleanup}@tab @code{while}
 @end multitable
 
+The function @code{iskeyword} can be used to quickly check whether an
+identifier is reserved by Octave.
+
 @DOCSTRING(iskeyword)
+
+@node Parser
+@section Parser
+@cindex parser
+
+The parser has a number of variables that affect its internal operation.
+These variables are generally documented in the manual alongside the code that
+they affect.  For example, @code{allow_noninteger_range_as_index} is discussed
+in the section on index expressions.
+
+In addition, there are three non-specific parser customization functions.
+@code{add_input_event_hook} can be used to schedule a user function for
+periodic evaluation.  @code{remove_input_event_hook} will stop a user function
+from being evaluated periodically.
+
+@DOCSTRING(add_input_event_hook)
+
+@DOCSTRING(remove_input_event_hook)
+
+Finally, when the parser cannot identify an input token it calls a particular
+function to handle this.  By default, this is the function "unimplemented"
+which makes suggestions about possible Octave substitutes for @sc{matlab}
+functions.
+
+@DOCSTRING(missing_function_hook)
+
diff --git a/doc/interpreter/octave.texi b/doc/interpreter/octave.texi
--- a/doc/interpreter/octave.texi
+++ b/doc/interpreter/octave.texi
@@ -204,17 +204,17 @@ It corresponds to GNU Octave version @va
 * Dynamically Linked Functions::
 * Test and Demo Functions::
 * Tips and Standards::                        
 * Contributing Guidelines::
 * Obsolete Functions::
 * Trouble::                     If you have trouble installing Octave.
 * Installation::                How to configure, compile and install Octave.
 * Emacs Octave Support::                       
-@c * Grammar::                     
+* Grammar and Parser::                     
 * Copying::                     The GNU General Public License.
 * Concept Index::               An item for each concept.
 * Function Index::              An item for each documented function.
 * Operator Index::              An item for each documented operator.
 
 @detailmenu
  --- The Detailed Node Listing ---
 
@@ -849,16 +849,22 @@ Installation
 * Installation Problems::       
 
 Emacs Octave Support
 
 * Installing EOS::              
 * Using Octave Mode::           
 * Running Octave from Within Emacs::  
 * Using the Emacs Info Reader for Octave::  
+
+Grammar and Parser
+
+* Keywords::                    
+* Parser::                    
+
 @end detailmenu
 @end menu
 
 @c ------------------------------------------------------------------------
 
 @include preface.texi
 @include intro.texi
 @include basics.texi
@@ -907,17 +913,17 @@ Emacs Octave Support
 @include dynamic.texi
 @include testfun.texi
 @include tips.texi
 @include contrib.texi
 @include obsolete.texi
 @include bugs.texi
 @include install.texi
 @include emacs.texi
-@c @include grammar.texi
+@include grammar.texi
 @include gpl.texi
 
 @c ------------------------------------------------------------------------
 @c Indices start here. 
 
 @include cp-idx.texi
 @c @include vr-idx.texi
 @include fn-idx.texi
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,15 @@
+2011-04-03  Rik  <octave@nomad.inbox5.com>
+
+	* input.cc (add_input_event_hook, remove_input_event_hook): Improve
+	docstring.
+	* utils.cc (isvarname): Add seealso link to iskeyword().
+	* variables.cc (missing_function_hook): Improve docstring.
+
 2011-04-03  Rik  <octave@nomad.inbox5.com>
 
 	* DLD-FUNCTIONS/dot.cc (blkmm): Improve docstring.
 
 2011-04-03  Rik  <octave@nomad.inbox5.com>
 
 	* data.cc (diag): Add documentation for 3-input form of diag.  Add new
 	tests.
diff --git a/src/input.cc b/src/input.cc
--- a/src/input.cc
+++ b/src/input.cc
@@ -1272,17 +1272,18 @@ input_event_hook (void)
         command_editor::remove_event_hook (input_event_hook);
     }
 
   return 0;
 }
 
 DEFUN (add_input_event_hook, args, ,
   "-*- texinfo -*-\n\
-@deftypefn {Built-in Function} {} add_input_event_hook (@var{fcn}, @var{data})\n\
+@deftypefn  {Built-in Function} {} add_input_event_hook (@var{fcn})\n\
+@deftypefnx {Built-in Function} {} add_input_event_hook (@var{fcn}, @var{data})\n\
 Add the named function @var{fcn} to the list of functions to call\n\
 periodically when Octave is waiting for input.  The function should\n\
 have the form\n\
 \n\
 @example\n\
 @var{fcn} (@var{data})\n\
 @end example\n\
 \n\
@@ -1318,17 +1319,17 @@ arguments.\n\
     print_usage ();
 
   return retval;
 }
 
 DEFUN (remove_input_event_hook, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} remove_input_event_hook (@var{fcn})\n\
-Remove the named function @var{fcn} to the list of functions to call\n\
+Remove the named function @var{fcn} from the list of functions to call\n\
 periodically when Octave is waiting for input.\n\
 @seealso{add_input_event_hook}\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
   int nargin = args.length ();
 
diff --git a/src/utils.cc b/src/utils.cc
--- a/src/utils.cc
+++ b/src/utils.cc
@@ -89,17 +89,17 @@ valid_identifier (const std::string& s)
 {
   return valid_identifier (s.c_str ());
 }
 
 DEFUN (isvarname, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} isvarname (@var{name})\n\
 Return true if @var{name} is a valid variable name.\n\
-@seealso{exist, who}\n\
+@seealso{iskeyword, exist, who}\n\
 @end deftypefn")
 {
   octave_value retval;
 
   int argc = args.length () + 1;
 
   string_vector argv = args.make_argv ("isvarname");
 
diff --git a/src/variables.cc b/src/variables.cc
--- a/src/variables.cc
+++ b/src/variables.cc
@@ -2516,18 +2516,18 @@ The default format is\n\
 }
 
 static std::string Vmissing_function_hook = "unimplemented";
 
 DEFUN (missing_function_hook, args, nargout,
     "-*- texinfo -*-\n\
 @deftypefn  {Built-in Function} {@var{val} =} missing_function_hook ()\n\
 @deftypefnx {Built-in Function} {@var{old_val} =} missing_function_hook (@var{new_val})\n\
-Query or set the internal variable that allows setting a custom hook function\n\
-called when an uknown identifier is requested.\n\
+Query or set the internal variable that specifies the function to call when\n\
+an unknown identifier is requested.\n\
 @end deftypefn")
 {
   return SET_INTERNAL_VARIABLE (missing_function_hook);
 }
 
 void maybe_missing_function_hook (const std::string& name)
 {
   // Don't do this if we're handling errors.
