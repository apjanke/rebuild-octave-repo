# HG changeset patch
# User Olaf Till <i7tiol@t-online.de>
# Date 1484597721 18000
#      Mon Jan 16 15:15:21 2017 -0500
# Branch stable
# Node ID 7351f2c933895b6363d9cd57b1200db0c4d176ec
# Parent  97a9fd0af57b7846479f85adc79f0b7a31b8fc07
rethrow octave::exit_exception (bug #49304)

* ov-oncleanup.cc (octave_oncleanup::~octave_oncleanup):
Rethrow octave::exit_exception.
* oct-parse.in.yy (parser::run, push_parser::run): Likewise.

diff --git a/libinterp/octave-value/ov-oncleanup.cc b/libinterp/octave-value/ov-oncleanup.cc
--- a/libinterp/octave-value/ov-oncleanup.cc
+++ b/libinterp/octave-value/ov-oncleanup.cc
@@ -91,16 +91,20 @@ octave_oncleanup::~octave_oncleanup (voi
     }
   catch (const octave::execution_exception&)
     {
       std::string msg = last_error_message ();
       warning ("onCleanup: error caught while executing cleanup function:\n%s\n",
                msg.c_str ());
 
     }
+  catch (const octave::exit_exception&)
+    {
+      throw;
+    }
   catch (...) // Yes, the black hole.  We're in a d-tor.
     {
       // This shouldn't happen, in theory.
       warning ("onCleanup: internal error: unhandled exception in cleanup action");
     }
 }
 
 octave_scalar_map
diff --git a/libinterp/parse-tree/oct-parse.in.yy b/libinterp/parse-tree/oct-parse.in.yy
--- a/libinterp/parse-tree/oct-parse.in.yy
+++ b/libinterp/parse-tree/oct-parse.in.yy
@@ -4036,16 +4036,20 @@ namespace octave
       {
         std::string file = lexer.fcn_file_full_name;
 
         if (file.empty ())
           error (e, "parse error");
         else
           error (e, "parse error in %s", file.c_str ());
       }
+    catch (const octave::exit_exception&)
+      {
+        throw;
+      }
     catch (octave::interrupt_exception &)
       {
         throw;
       }
     catch (...)
       {
         std::string file = lexer.fcn_file_full_name;
 
@@ -4096,16 +4100,20 @@ namespace octave
           {
             std::string file = lexer.fcn_file_full_name;
 
             if (file.empty ())
               error (e, "parse error");
             else
               error (e, "parse error in %s", file.c_str ());
           }
+        catch (const octave::exit_exception&)
+          {
+            throw;
+          }
         catch (octave::interrupt_exception &)
           {
             throw;
           }
         catch (...)
           {
             std::string file = lexer.fcn_file_full_name;
 
