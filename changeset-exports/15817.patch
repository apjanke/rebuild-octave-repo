# HG changeset patch
# User Jordi Guti√©rrez Hermoso <jordigh@octave.org>
# Date 1355932031 18000
#      Wed Dec 19 10:47:11 2012 -0500
# Node ID dbb7896f15c7f1327d30f083a32aadb56cdeeb0f
# Parent  59b6c6aee0426b6486e00d909e1a00af51179acc
Fix argument passing to history() command

* oct_hist.cc (do_history): Save the one non-option argument in an
  std::string, use the last such argument as the number of history
  lines.

diff --git a/libinterp/interpfcn/oct-hist.cc b/libinterp/interpfcn/oct-hist.cc
--- a/libinterp/interpfcn/oct-hist.cc
+++ b/libinterp/interpfcn/oct-hist.cc
@@ -133,18 +133,19 @@ do_history (int argc, const string_vecto
 {
   int numbered_output = 1;
 
   unwind_protect frame;
   string_vector hlist;
 
   frame.add_fcn (command_history::set_file, command_history::file ());
 
-  int i;
-  for (i = 1; i < argc; i++)
+  // Number of history lines to show
+  std::string N;
+  for (int i = 1; i < argc; i++)
     {
       std::string option = argv[i];
 
       if (option == "-r" || option == "-w" || option == "-a"
           || option == "-n")
         {
           if (i < argc - 1)
             command_history::set_file (argv[i+1]);
@@ -173,43 +174,43 @@ do_history (int argc, const string_vecto
       else if (argv[i] == "-q")
         numbered_output = 0;
       else if (argv[i] == "--")
         {
           i++;
           break;
         }
       else
-        break;
+        // The last argument found in the command list that looks like
+        // an integer will be used
+        N = argv[i];
     }
 
   int limit = -1;
 
-  if (i < argc)
+  if (N != "" && sscanf (N.c_str (), "%d", &limit) != 1)
     {
-      if (sscanf (argv[i].c_str (), "%d", &limit) != 1)
-        {
-          if (argv[i][0] == '-')
-            error ("history: unrecognized option '%s'", argv[i].c_str ());
-          else
-            error ("history: bad non-numeric arg '%s'", argv[i].c_str ());
+      if (N[0] == '-')
+        error ("history: unrecognized option '%s'", N.c_str ());
+      else
+        error ("history: bad non-numeric arg '%s'", N.c_str ());
 
-          return hlist;
-        }
+      return hlist;
+    }
 
-      if (limit < 0)
-        limit = -limit;
-    }
+  if (limit < 0)
+    limit = -limit;
+
 
   hlist = command_history::list (limit, numbered_output);
 
   int len = hlist.length ();
 
   if (output)
-    for (i = 0; i < len; i++)
+    for (int i = 0; i < len; i++)
       octave_stdout << hlist[i] << "\n";
 
   return hlist;
 }
 
 // Read the edited history lines from STREAM and return them
 // one at a time.  This can read unlimited length lines.  The
 // caller should free the storage.
