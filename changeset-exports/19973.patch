# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1426789960 14400
#      Thu Mar 19 14:32:40 2015 -0400
# Node ID 7aaf756b1532b7d0abe6af54dcee5d77db90e448
# Parent  117ccb5080c13712012d7400da8452e884023e7e
use "!", not "not"

* octave-gui.cc, audiodevinfo.cc: Avoid using "not" operator.

diff --git a/libgui/src/octave-gui.cc b/libgui/src/octave-gui.cc
--- a/libgui/src/octave-gui.cc
+++ b/libgui/src/octave-gui.cc
@@ -113,17 +113,17 @@ octave_start_gui (int argc, char *argv[]
   install___init_qt___functions ();
 
   Fregister_graphics_toolkit (ovl ("qt"));
 
   QApplication application (argc, argv);
   QTranslator gui_tr, qt_tr, qsci_tr;
 
   // Set the codec for all strings (before wizard)
-#if not defined (Q_OS_WIN32)
+#if ! defined (Q_OS_WIN32)
   QTextCodec::setCodecForCStrings (QTextCodec::codecForName ("UTF-8"));
 #endif
 
   if (start_gui)
     {
       // show wizard if this is the first run
       if (resource_manager::is_first_run ())
         {
diff --git a/libinterp/dldfcn/audiodevinfo.cc b/libinterp/dldfcn/audiodevinfo.cc
--- a/libinterp/dldfcn/audiodevinfo.cc
+++ b/libinterp/dldfcn/audiodevinfo.cc
@@ -277,17 +277,17 @@ or recording using those parameters.\n\
                 }
             }
           else
             {
               error ("audiodevinfo: please specify 0 for output and 1 for input devices");
               return retval;
             }
         }
-      if (not found)
+      if (! found)
         error ("audiodevinfo: no device meeting the specified criteria found");
     }
   else if (nargin == 3)
     {
       // FIXME: what was supposed to happen here?
     }
   // Return the id of the first device meeting specified criteria.
   else if (nargin == 4)
@@ -1245,17 +1245,17 @@ void
 audioplayer::stop (void)
 {
   if (get_stream () == 0)
     return;
 
   PaError err;
   set_sample_number (0);
   reset_end_sample ();
-  if (not Pa_IsStreamStopped (get_stream ()))
+  if (! Pa_IsStreamStopped (get_stream ()))
     {
       err = Pa_AbortStream (get_stream ());
       if (err != paNoError)
         {
           error ("audioplayer: failed to stop audio playback stream");
           return;
         }
     }
@@ -1872,17 +1872,17 @@ audiorecorder::resume (void)
 
 void
 audiorecorder::stop (void)
 {
   if (get_stream () == 0)
     return;
 
   PaError err;
-  if (not Pa_IsStreamStopped (get_stream ()))
+  if (! Pa_IsStreamStopped (get_stream ()))
     {
       err = Pa_AbortStream (get_stream ());
       if (err != paNoError)
         {
           error ("audioplayer: unable to stop audio playback stream");
           return;
         }
     }
