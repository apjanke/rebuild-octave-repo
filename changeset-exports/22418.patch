# HG changeset patch
# User Rik <rik@octave.org>
# Date 1472761323 25200
#      Thu Sep 01 13:22:03 2016 -0700
# Node ID 08aa03dfb00ea0d9e7287db3e7b30005a6fcc72d
# Parent  48c00363dc747eaa58e8eb32ea3680836d0ec941
Allow switching gnuplot_binary value during a session.

* gnuplot_binary.in.m: Call __gnuplot_has_feature__ ("__reset__") after
updating name of new gnuplot binary.
* __gnuplot_has_feature__.m: If feature is "__reset__" then re-calculate
gnuplot_version and list of available features.

* __gnuplot_version__.m: Accept new input do_reset.  If input is logically
true then re-calculate cached gnuplot version __version__.

diff --git a/scripts/plot/util/gnuplot_binary.in.m b/scripts/plot/util/gnuplot_binary.in.m
--- a/scripts/plot/util/gnuplot_binary.in.m
+++ b/scripts/plot/util/gnuplot_binary.in.m
@@ -41,16 +41,17 @@ function [prog, args] = gnuplot_binary (
     args = gp_args;
   endif
 
   if (nargin == 1)
     if (! ischar (new_prog) || isempty (new_prog))
       error ("gnuplot_binary: NEW_PROG must be a non-empty string");
     endif
     gp_binary = new_prog;
+    __gnuplot_has_feature__ ("__reset__");
   endif
 
   if (nargin > 1)
     if (! iscellstr (varargin))
       error ("gnuplot_binary: arguments must be character strings");
     endif
     gp_args = varargin;
   endif
diff --git a/scripts/plot/util/private/__gnuplot_has_feature__.m b/scripts/plot/util/private/__gnuplot_has_feature__.m
--- a/scripts/plot/util/private/__gnuplot_has_feature__.m
+++ b/scripts/plot/util/private/__gnuplot_has_feature__.m
@@ -37,19 +37,19 @@ function res = __gnuplot_has_feature__ (
                          "key_has_font_properties",
                          "windows_figure_position",
                          "has_termoption_dashed",
                          "needs_color_with_postscript",
                          "linetype",
                          "dashtype"};
   persistent has_features;
 
-  if (isempty (has_features))
+  if (isempty (has_features) || strcmp (feature, "__reset__"))
     try
-      gnuplot_version = __gnuplot_version__ ();
+      gnuplot_version = __gnuplot_version__ ("__reset__");
     catch
       ## Don't throw an error if gnuplot isn't installed
       gnuplot_version = "0.0.0";
     end_try_catch
     versions = {"4.2.5", "4.2.5", "4.4", "4.4", "4.4", "4.2", "4.2", "4.4", "4.4", "4.4", "4.4", "4.3", "4.6", "4.6", "5.0"};
     operators = {">=", ">=", ">=", ">=", ">=", ">=", ">=", ">=", ">=", ">=", ">=", ">=", ">=", ">=", ">="};
     have_features = false (size (features));
     for n = 1 : numel (have_features)
diff --git a/scripts/plot/util/private/__gnuplot_version__.m b/scripts/plot/util/private/__gnuplot_version__.m
--- a/scripts/plot/util/private/__gnuplot_version__.m
+++ b/scripts/plot/util/private/__gnuplot_version__.m
@@ -16,25 +16,21 @@
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {} {@var{version} =} __gnuplot_version__ ()
 ## Undocumented internal function.
 ## @end deftypefn
 
-## Return the version of gnuplot we are using.  Note that we do not
-## attempt to handle the case of the user switching to different
-## versions of gnuplot during the same session.
-
-function version = __gnuplot_version__ ()
+function version = __gnuplot_version__ (do_reset = false)
 
   persistent __version__ = "";
 
-  if (isempty (__version__))
+  if (isempty (__version__) || do_reset)
     [status, output] = system (sprintf ('"%s" --version', gnuplot_binary ()));
     if (status != 0)
       ## This message ends in a newline so that the traceback messages
       ## are skipped and people might actually see the message, read it,
       ## comprehend it, take the advice it gives, and stop asking us
       ## why plotting fails when gnuplot is not found.
       error ("you must have gnuplot installed to display graphics; if you have gnuplot installed in a non-standard location, see the 'gnuplot_binary' function\n");
     endif
