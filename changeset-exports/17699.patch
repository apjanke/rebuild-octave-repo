# HG changeset patch
# User Torsten <ttl@justmail.de>
# Date 1382205083 -7200
#      Sat Oct 19 19:51:23 2013 +0200
# Node ID 1be2993d3656e1cd30799765f2ad06cff72acc9c
# Parent  9bb5d3f63cdd9cc079813a06edd3416f601c9178
improve appearance of gui's dcoumentation browser

* arrow_down.png, arrow_left.png, arrow_right.png: new image files
* arrow_up.png, redled.png, bookmark.png: updated image files
* file_editor_tab.cc(constructor): use bookmark.png as marker for actual line
* module.mk: new image files
* resource.qrc: new image files
* parser.cc(replace_links): prevent linebreaks within node-links, smaller
  bookmark icons;
  (replace_colons): enclosed words are formatted bold and blue;
  (info_to_html): 'Menu' bold, underlined; 'See also' italic, darkred;
  (node_text_to_html): news icon for anchor of searched function and general
  navigation, select a monospace font for preformatted text sections;
  (global_search): smaller bookmark icons;

diff --git a/libgui/src/icons/arrow_down.png b/libgui/src/icons/arrow_down.png
new file mode 100644
index e69de29bb2d1d6434b8b29ae775ad8c2e48c5391..908f07e6251f0cbc93b27306598dc55368754f7d
GIT binary patch
literal 471
zc$@*(0Vw{7P)<h;3K|Lk000e1NJLTq000aC000aK1^@s6R&`wG00001b5ch_0Itp)
z=>Px#24YJ`L;(K){{a7>y{D4^000SaNLh0L01FcU01FcV0GgZ_0004MNkl<ZD9?S*
zy)Q#y6bA6;y!UPE<C6ALv?vK_YB7sZgoH>;!XkDti-c7qL?TvZk@^RGCCnlQY7x{|
zs0!M&uG{v$$3oK^;u+rIocDK<hftdF7<zm3s*||slJ#B)Lc!QOPRF(ei(jMzc%)DQ
z({_P}BtdD+N1C^63V`)Ds8LcewX@<*FoT#)AzkiLARK@I0Wd2rnK<(c@XyNt5g^2W
zV7?<KBw1j515#c2l;yY?o=dsk(wWImB*V68Ymt!Af0@mOJV66ZIz2taUk|K2Yi(No
zEW+l3)CY2T`>;Gw*3i8C`C;KEV}UYYKp|1#ZIIpmQJ+sC@RHeIxjnawrRrAi`zkfs
zeotFWsVropL1a{OZMd9*7s-*`u|Txg!M}2g=c%S0%gpswxye=l0R&wqYPotH+8ql-
z``7QB?fpw}06^>F)kxiJtPomDaQ9|%0sw|L9`SFCnbU#r^7ZgvyD#EMjx45THmd*t
N002ovPDHLkV1gZm&1C=p

diff --git a/libgui/src/icons/arrow_left.png b/libgui/src/icons/arrow_left.png
new file mode 100644
index e69de29bb2d1d6434b8b29ae775ad8c2e48c5391..547352555623c9c740f95c4e1224e7a8f01af2a9
GIT binary patch
literal 462
zc$@*w0WtoGP)<h;3K|Lk000e1NJLTq000aC000aK1^@s6R&`wG00001b5ch_0Itp)
z=>Px#24YJ`L;(K){{a7>y{D4^000SaNLh0L01FcU01FcV0GgZ_0004DNkl<ZD9??O
zJ4ixt6vn^vzc<C8Cs+{l28qVnTBU+$5Tb?}a)?$58bWF>dO$Q3Mbr|OOG9fzLs&F9
z2o;2uJ*<3SXri}!|EJ+*LtyorKF)*lox=fskk~j?#%2Q+lt2_k|Mooqz}?h2aYeQn
z{D#XH0|4~;V#6I58drNm{!+D66a)U(!MnEFqjVC`1K0aQPvP<NvMQ^TW?t$anvu>I
z2mpEx;_erlZ6}*$Ru!W9T;@4hK$w{YGXQ{@C}a>#lVc^~%2$>j=JN&s2ACNTM1suu
zMGr(lFq~>4p4HS;&d?002!JIMm;jc=Vgd;Q2@;A*W~gN`JR%j^%V?|!LDZ}vTGOhY
zNS&=;y(EZlgv7%4(hbWIr`2XT&VukBjBVvMyC>njw17>gND3VV-8_MP=@tM`xAxH2
zxSQk(PjDT7VPA~`0NUqMqjt~Z6#h%sS)3emZzW&j6ADC*4o@LL$N&HU07*qoM6N<$
Eg8TWn$N&HU

diff --git a/libgui/src/icons/arrow_right.png b/libgui/src/icons/arrow_right.png
index 5587ddee1c2a3b144104b36b6165d7f571ae4136..4b533ed0b9f4717a6cf3096ddfa6191f03ed4702
GIT binary patch
literal 475
zc$@*-0VMv3P)<h;3K|Lk000e1NJLTq000aC000aK1^@s6R&`wG00001b5ch_0Itp)
z=>Px#24YJ`L;(K){{a7>y{D4^000SaNLh0L01FcU01FcV0GgZ_0004QNkl<ZD9?qF
zPbg(^9K}E1-@Wd8cqF=v1^E*(EU>big_$X(C^L!@HDfDDO_SM9v#^l`DP^Z#DK*&H
zO{SExAa?$Y@ps0*(Y)Ss@9%5DO5xPmoX$CmbKntl4KI6tCVn^%b@NzYOVU5}6u<lc
z@OJ7K&m!mZdc0~SrLSiW-vPAF90K6hv@hV~L?gyc^8k#2#+%FJY?_4s&J70@e!Mw;
z(lYlxe;z;zCyufm)e%vx1w;fy#O6gPJI=^@5rnF-m`Fh)(YxH?PfNl0Q7*y~s&xS9
z9n~se^}d2=)FFEHzs(JfF9-uQYW3cvpdbcB!HB8_!7<@=Xj5)|N&1a7e77o_22??e
zE6MZi;MJ~2v9+q%o&+Y;uAQN>MWK5GBCa9Nx(Fb^*XmS8-|A#$UE#+VN-~jZIv6Zn
zdUDpR{<ZO<>A#vkw*LmeAK7{O2fzRKK>4?`P5^&&@A=~@zg&6^KTqYMehdDah|k~-
RI8y)s002ovPDHLkV1gL+(pdli

diff --git a/libgui/src/icons/arrow_up.png b/libgui/src/icons/arrow_up.png
new file mode 100644
index e69de29bb2d1d6434b8b29ae775ad8c2e48c5391..3dde167dbaa609970883c562cb2d25342b1e8b33
GIT binary patch
literal 477
zc$@*<0V4j1P)<h;3K|Lk000e1NJLTq000aC000aK1^@s6R&`wG00001b5ch_0Itp)
z=>Px#24YJ`L;(K){{a7>y{D4^000SaNLh0L01FcU01FcV0GgZ_0004SNkl<ZD9?3~
zy)Q#y6vm(PzPGIsRgEf@V35Xav^LSCF?4Fu%_0$tMI!tM;v*4}bRZZS!9YkPVqp+w
zgu!=_mWxm=_qO-Guc4Z>(LU4pcz(lq4p2s}(bJ%B`ZiQ<#|nje@(uvdK5-LPINQ=3
z)f?TbY99cERuZLvdnOKbxE<c9Tfg8G%bJ2~nu%w-eKEN9(z_XHMquFq06+z@arUvN
zhSTmxN|*GRfzsk4ayev!&raS;HM|#TUIzf`I#TKLfJd@TGNyg&5NRFedq!GYoUk-H
z3C=3i)(dpJrU#bd=krQ>$7)HX(jG0LM$I3Scec6$*MwGp!Snr<d^*41Pv#`A;W^Kc
zWc*(W{@BB^W8_SF<`S|knm8Qn-?o-b2>>v5VHJk7f%4Z$DcP~5&Q=+ac^^Q303bw#
zKNJ7~5HTv6lu9Y--k8BiUJ;`c5D5vK2_u)S4Csbn0^?kvX-L2%GRzN6FSh&wyVjBP
Td@2`_00000NkvXXu0mjfkmtxn

diff --git a/libgui/src/icons/bookmark.png b/libgui/src/icons/bookmark.png
index 5e761587198608815a4625f26923e4c2c59d5ed1..33573170bbd8e08397055c87d0e437def53346e9
GIT binary patch
literal 390
zc$@)-0eSw3P)<h;3K|Lk000e1NJLTq000XB000XJ1^@s6sjPP<00001b5ch_0Itp)
z=>Px#24YJ`L;#8aasU8TV6Soj000SaNLh0L01FcU01FcV0GgZ_0003QNkl<Z7}I@_
z%}PRH7=)kq^N^;ZB7qei3nDDq1QAH!s$JkF=svuVx|AX!Xc;6%8y9W*0W--X3X-Il
zofGQYLRv)XtcKxX7zQRtE9r<<)|d5V%>wv*&H`X2!I*Fv3D+@^Gk{RKK<_C#1;+I8
zx}a`Ot2?Iv;f(^K)!k!s5CZ}Lh-smtJYJX4(8UB}Ac0F+E#*XCxAgz$Z}8l)RYB&X
zAaf<rM_ZXGL!%=sB|=!Wru;2cB^p<vegUy)w1x}@%2%gzU^U;(iO;Cd82kXezOTK#
z;O3D)XbghAD2KA?TruV6^ZJdgZ`UauJtX&MuDrik`EZI!)v|r`n>ob{)+9I)*HqAt
k<!Pb~HJsZF$-O&%0Qq2U<(-`g2><{907*qoM6N<$f-q#A82|tP

diff --git a/libgui/src/icons/redled.png b/libgui/src/icons/redled.png
index afa477274e2bb7c27cb67bad87551e5910880b71..35f0d82a780da790e185a88d8a17fc5121cf1f8d
GIT binary patch
literal 428
zc$@*O0aN~oP)<h;3K|Lk000e1NJLTq000XB000XJ1^@s6sjPP<00001b5ch_0Itp)
z=>Px#24YJ`L;#8aasU8TV6Soj000SaNLh0L01FZT01FZU(%pXi0003$Nkl<Z7}H(R
zv1(Is9L4d^Klf&6Qf(7x2vX2NsZ-qQBeWnsK<93KkWg@Q5L{i{1qTa0L3M}~MQ{n+
zA&@rBZ78&tBtM51(SFx+IETaG9~$(VOq)cLX@kDIJY=uS;BBjQRcvi7&NnueLl&>N
zT4m5>@2|Pb;A6WT=Q}$w+ux62uebb4d?DTu4;Vn!pnuqEz1-d2&S#@h6elOC9F0;{
zRT{)9sbKvVjauU1MW<8GH#eQ0ou$j7h?vdf#5HMwr_>V%HLNu!lQcO#j;bu>q=X;^
zGGc{<wH)Qeczo}4Jg&`=6LBL(BF#ycEOC+5x!>XWBk~5ZyiLwXOJYbmqWaD21gi|*
z(0h!<ZT0+Sm``}mw~A*Ov?)LHq+q?IR*-%YM^qp9vBKds-~T%&qn|U)iJWP6=fOWw
W^LuA2Z%cy!0000<MNUMnLSTZI0ku>B

diff --git a/libgui/src/m-editor/file-editor-tab.cc b/libgui/src/m-editor/file-editor-tab.cc
--- a/libgui/src/m-editor/file-editor-tab.cc
+++ b/libgui/src/m-editor/file-editor-tab.cc
@@ -84,17 +84,17 @@ file_editor_tab::file_editor_tab (const 
   _find_dialog_is_visible = false;
 
   // symbols
   _edit_area->setMarginType (1, QsciScintilla::SymbolMargin);
   _edit_area->setMarginSensitivity (1, true);
   _edit_area->markerDefine (QsciScintilla::RightTriangle, bookmark);
   _edit_area->markerDefine (QPixmap (":/actions/icons/redled.png"),
                             breakpoint);
-  _edit_area->markerDefine (QPixmap (":/actions/icons/arrow_right.png"),
+  _edit_area->markerDefine (QPixmap (":/actions/icons/bookmark.png"),
                             debugger_position);
 
   connect (_edit_area, SIGNAL (marginClicked (int, int,
                                               Qt::KeyboardModifiers)),
            this, SLOT (handle_margin_clicked (int, int,
                                               Qt::KeyboardModifiers)));
 
   // line numbers
diff --git a/libgui/src/module.mk b/libgui/src/module.mk
--- a/libgui/src/module.mk
+++ b/libgui/src/module.mk
@@ -1,16 +1,19 @@
 EXTRA_DIST += \
   src/module.mk \
   src/resource.qrc \
   $(octave_gui_UI) \
   $(octave_gui_ICONS)
 
 octave_gui_ICONS = \
   src/icons/arrow_right.png \
+  src/icons/arrow_left.png \
+  src/icons/arrow_up.png \
+  src/icons/arrow_down.png \
   src/icons/artsbuilderexecute.png \
   src/icons/bookmark.png \
   src/icons/bp_next.png \
   src/icons/bp_prev.png \
   src/icons/bp_rm_all.png \
   src/icons/bp_toggle.png \
   src/icons/chat.png \
   src/icons/configure.png \
diff --git a/libgui/src/qtinfo/parser.cc b/libgui/src/qtinfo/parser.cc
--- a/libgui/src/qtinfo/parser.cc
+++ b/libgui/src/qtinfo/parser.cc
@@ -275,71 +275,78 @@ replace_links (QString& text)
   QRegExp re ("(\\*[N|n]ote|\n\\*)([ |\n]+)([^:]+):([^:\\.,]*)([:,\\.])");
   int i = 0, f;
 
   while ( (i = re.indexIn (text,i)) != -1)
     {
       QString type     = re.cap (1);
       QString note     = re.cap (3);
       QString url_link = re.cap (4);
-      QString link     = re.cap (4);
+      QString link     = re.cap (4) + re.cap(5);
+      QString spaces = QString("");
+      QRegExp re_linebreak ("\n([ ]*)([^ ]*)([ ]*)");
+      if (re_linebreak.indexIn (link,0) != -1)
+        {
+          link.replace (re_linebreak,"&nbsp;"+re_linebreak.cap (2)+"\n");   // prevent line breaks in links
+          spaces = re_linebreak.cap (1);
+        }
 
       if (url_link.isEmpty ())
         {
           url_link = note;
         }
 
       url_link = url_link.trimmed ();
       url_link.replace ("\n"," ");
       url_link.replace (QRegExp ("  +")," ");
       url_link.replace ("<b>","");
       url_link.replace ("</b>","");
       url_link = QUrl::toPercentEncoding (url_link, "", "'");
 
       QString href;
       if (type=="\n*")
         {
-          href="\n<img src=':/actions/icons/bookmark.png'/>";
+          href="\n<img src=':/actions/icons/bookmark.png' width=10/>";
         }
       else
         {
-          href="<img src=':/actions/icons/bookmark.png'/>";
+          href="<img src=':/actions/icons/bookmark.png' width=10/>";
         }
-      href += re.cap (2) + "<a href='" + url_link + "'>" + note + ":" + link + re.cap (5) + "</a>";
+      href += re.cap(2) + "<a href='" + url_link + "'>" + note + ":" + link + "</a>" + spaces;
       f = re.matchedLength ();
       text.replace (i,f,href);
       i += href.size ();
     }
 }
 
 static void
 replace_colons (QString& text)
 {
   QRegExp re ("`([^']+)'");
   int i = 0, f;
   while ( (i = re.indexIn (text, i)) != -1)
     {
       QString t = re.cap (1);
-      QString bold = "<b>`" + t + "</b>'";
+      QString bold = "<font style=\"color:Blue;font-weight:bold\">" + t + "</font>";
 
       f = re.matchedLength ();
       text.replace (i,f,bold);
       i += bold.size ();
     }
 }
 
 static void
 info_to_html (QString& text)
 {
   text.replace ("&", "&amp;");
   text.replace ("<", "&lt;");
   text.replace (">", "&gt;");
 
-  text.replace ("\n* Menu:", "\n<b>Menu:</b>");
-  text.replace ("*See also:*", "<b>See also:</b>");
+  text.replace ("\n* Menu:", "\n<font style=\"text-decoration:underline;font-weight:bold\">Menu:</font>");
+  text.replace ("See also:", "<font style=\"color:DarkRed;font-style:italic;font-weight:bold\">See also:</font>");
   replace_colons (text);
   replace_links (text);
 }
 
 QString
 parser::node_text_to_html (const QString& text_arg, int anchorPos,
                            const QString& anchor)
 {
@@ -357,42 +364,42 @@ parser::node_text_to_html (const QString
 
       int n = text1.indexOf ("\n");
       text1.remove (0, n);
 
       info_to_html (text1);
       info_to_html (text2);
 
       text = text1 + "<a name='" + anchor
-                   + "'/><img src=':/actions/icons/redled.png'><br>&nbsp;"
+                   + "'/><img src=':/actions/icons/arrow_down.png'><br>&nbsp;"
                    + text2;
     }
   else
     {
       int n = text.indexOf ("\n");
       text.remove (0, n);
       info_to_html (text);
     }
 
   QString navigationLinks = QString (
-        "<img src=':/actions/icons/arrow_right.png'/> <b>Section:</b> %1<br>"
-        "<b>Previous Section:</b> <a href='%2'>%3</a><br>"
-        "<b>Next Section:</b> <a href='%4'>%5</a><br>"
-        "<b>Up:</b> <a href='%6'>%7</a><br>\n"
+        "<b>Section:</b> %1<br>"
+        "<img src=':/actions/icons/arrow_left.png'/> <b>Previous Section:</b> <a href='%2'>%3</a><br>"
+        "<img src=':/actions/icons/arrow_right.png'/> <b>Next Section:</b> <a href='%4'>%5</a><br>"
+        "<img src=':/actions/icons/arrow_up.png'/> <b>Up:</b> <a href='%6'>%7</a><br>\n"
         )
       .arg (nodeName)
       .arg (QString (QUrl::toPercentEncoding (nodePrev, "", "'")))
       .arg (nodePrev)
       .arg (QString (QUrl::toPercentEncoding (nodeNext, "", "'")))
       .arg (nodeNext)
       .arg (QString (QUrl::toPercentEncoding (nodeUp, "", "'")))
       .arg (nodeUp);
 
 
-  text.prepend ("<hr>\n<pre>");
+  text.prepend ("<hr>\n<pre style=\"font-family:monospace\">");
   text.append ("</pre>\n<hr><hr>\n");
   text.prepend (navigationLinks);
   text.append (navigationLinks);
   text.prepend ("<html><body>\n");
   text.append ("</body></html>\n");
 
   return text;
 
@@ -588,17 +595,17 @@ parser::global_search (const QString& te
               int line_start, line_end;
               line_start = node_text.lastIndexOf ("\n", pos);
               line_end = node_text.indexOf ("\n", pos);
               QString line = node_text.mid (line_start, line_end - line_start).trimmed ();
 
               if (founds == 0)
                 {
                   results.append(
-                        "<br>\n<img src=':/actions/icons/bookmark.png'> <a href='"
+                        "<br>\n<img src=':/actions/icons/bookmark.png' width=10> <a href='"
                         + QString(QUrl::toPercentEncoding(node,"","'")) +
                         "'>");
                   results.append (node);
                   results.append ("</a><br>\n");
                 }
 
               replace (line, re, "<i>%1</i>");
               results.append (line);
diff --git a/libgui/src/resource.qrc b/libgui/src/resource.qrc
--- a/libgui/src/resource.qrc
+++ b/libgui/src/resource.qrc
@@ -17,16 +17,19 @@
         <file>icons/reload.png</file>
         <file>icons/search.png</file>
         <file>icons/undo.png</file>
         <file>icons/up.png</file>
         <file>icons/configure.png</file>
         <file>icons/filesaveas.png</file>
         <file>icons/redled.png</file>
         <file>icons/arrow_right.png</file>
+        <file>icons/arrow_left.png</file>
+        <file>icons/arrow_up.png</file>
+        <file>icons/arrow_down.png</file>
         <file>icons/bookmark.png</file>
         <file>icons/question.png</file>
         <file>icons/star.png</file>
         <file>icons/stop.png</file>
         <file>icons/zoom-in.png</file>
         <file>icons/zoom-out.png</file>
         <file>icons/find.png</file>
         <file>icons/gear.png</file>
