# HG changeset patch
# User Rik <rik@octave.org>
# Date 1444236344 25200
#      Wed Oct 07 09:45:44 2015 -0700
# Branch stable
# Node ID c6059134f5d34da8791f3570d37bd3fbf0ae83db
# Parent  af5591ef9790fd0466c11c8fd4fcf7ec5c86a4e7
data.cc: Add @w{} around @code segments in docstrings to prevent line breaks.

* data.cc: Add @w{} around @code segments in docstrings to prevent line breaks.

diff --git a/libinterp/corefcn/data.cc b/libinterp/corefcn/data.cc
--- a/libinterp/corefcn/data.cc
+++ b/libinterp/corefcn/data.cc
@@ -482,24 +482,24 @@ DEFUN (log2, args, nargout,
 Compute the base-2 logarithm of each element of @var{x}.\n\
 \n\
 If called with two output arguments, split @var{x} into\n\
 binary mantissa and exponent so that\n\
 @tex\n\
 ${1 \\over 2} \\le \\left| f \\right| < 1$\n\
 @end tex\n\
 @ifnottex\n\
-@code{1/2 <= abs(f) < 1}\n\
+@w{@code{1/2 <= abs(f) < 1}}\n\
 @end ifnottex\n\
 and @var{e} is an integer.  If\n\
 @tex\n\
 $x = 0$, $f = e = 0$.\n\
 @end tex\n\
 @ifnottex\n\
-@code{x = 0}, @code{f = e = 0}.\n\
+@w{@code{x = 0}}, @w{@code{f = e = 0}}.\n\
 @end ifnottex\n\
 @seealso{pow2, log, log10, exp}\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
   if (args.length () == 1)
     {
@@ -2601,19 +2601,18 @@ do_permute (const octave_value_list& arg
 }
 
 DEFUN (permute, args, ,
        "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} permute (@var{A}, @var{perm})\n\
 Return the generalized transpose for an N-D array object @var{A}.\n\
 \n\
 The permutation vector @var{perm} must contain the elements\n\
-@code{1:ndims (A)} (in any order, but each element must appear only once).\n\
-\n\
-The @var{N}th dimension of @var{A} gets remapped to dimension\n\
+@w{@code{1:ndims (A)}} (in any order, but each element must appear only\n\
+once).  The @var{N}th dimension of @var{A} gets remapped to dimension\n\
 @code{@var{PERM}(@var{N})}.  For example:\n\
 \n\
 @example\n\
 @group\n\
 @var{x} = zeros ([2, 3, 5, 7]);\n\
 size (@var{x})\n\
    @result{}  2   3   5   7\n\
 \n\
@@ -3312,21 +3311,23 @@ Objects of class double or single are fl
 // octave_value member function?
 
 DEFUN (complex, args, ,
        "-*- texinfo -*-\n\
 @deftypefn  {Built-in Function} {} complex (@var{x})\n\
 @deftypefnx {Built-in Function} {} complex (@var{re}, @var{im})\n\
 Return a complex value from real arguments.\n\
 \n\
-With 1 real argument @var{x}, return the complex result @code{@var{x} + 0i}.\n\
-\n\
-With 2 real arguments, return the complex result @code{@var{re} + @var{im}}.\n\
+With 1 real argument @var{x}, return the complex result\n\
+@w{@code{@var{x} + 0i}}.\n\
+\n\
+With 2 real arguments, return the complex result\n\
+@w{@code{@var{re} + @var{im}}}.\n\
 @code{complex} can often be more convenient than expressions such as\n\
-@code{a + i*b}.\n\
+@w{@code{a + i*b}}.\n\
 For example:\n\
 \n\
 @example\n\
 @group\n\
 complex ([1, 2], [3, 4])\n\
   @result{} [ 1 + 3i   2 + 4i ]\n\
 @end group\n\
 @end example\n\
@@ -4907,17 +4908,17 @@ DEFUN (I, args, ,
 @deftypefnx {Built-in Function} {} I (@var{n}, @var{m}, @var{k}, @dots{})\n\
 @deftypefnx {Built-in Function} {} I (@dots{}, @var{class})\n\
 Return a scalar, matrix, or N-dimensional array whose elements are all equal\n\
 to the pure imaginary unit, defined as\n\
 @tex\n\
 $\\sqrt{-1}$.\n\
 @end tex\n\
 @ifnottex\n\
-@code{sqrt (-1)}.\n\
+@w{@code{sqrt (-1)}}.\n\
 @end ifnottex\n\
 \n\
 I, and its equivalents i, j, and J, are functions so any of the names may\n\
 be reused for other purposes (such as i for a counter variable).\n\
 \n\
 When called with no arguments, return a scalar with the value @math{i}.\n\
 \n\
 When called with a single argument, return a square matrix with the dimension\n\
@@ -5733,17 +5734,17 @@ or a range.\n\
 
 DEFUN (norm, args, ,
        "-*- texinfo -*-\n\
 @deftypefn  {Built-in Function} {} norm (@var{A})\n\
 @deftypefnx {Built-in Function} {} norm (@var{A}, @var{p})\n\
 @deftypefnx {Built-in Function} {} norm (@var{A}, @var{p}, @var{opt})\n\
 Compute the p-norm of the matrix @var{A}.\n\
 \n\
-If the second argument is missing, @code{p = 2} is assumed.\n\
+If the second argument is missing, @w{@code{p = 2}} is assumed.\n\
 \n\
 If @var{A} is a matrix (or sparse matrix):\n\
 \n\
 @table @asis\n\
 @item @var{p} = @code{1}\n\
 1-norm, the largest column sum of the absolute values of @var{A}.\n\
 \n\
 @item @var{p} = @code{2}\n\
@@ -6643,18 +6644,19 @@ matrix.  For example:\n\
          2  1\n\
          3  2\n\
 @end group\n\
 @end example\n\
 \n\
 For equal elements, the indices are such that equal elements are listed\n\
 in the order in which they appeared in the original list.\n\
 \n\
-Sorting of complex entries is done first by magnitude (@code{abs (@var{z})})\n\
-and for any ties by phase angle (@code{angle (z)}).  For example:\n\
+Sorting of complex entries is done first by magnitude\n\
+(@w{@code{abs (@var{z})}}) and for any ties by phase angle\n\
+(@w{@code{angle (z)}}).  For example:\n\
 \n\
 @example\n\
 @group\n\
 sort ([1+i; 1; 1-i])\n\
     @result{} 1 + 0i\n\
        1 - 1i\n\
        1 + 1i\n\
 @end group\n\
@@ -7785,39 +7787,39 @@ do_diff (const octave_value& array, octa
   return retval;
 }
 
 DEFUN (diff, args, ,
        "-*- texinfo -*-\n\
 @deftypefn  {Built-in Function} {} diff (@var{x})\n\
 @deftypefnx {Built-in Function} {} diff (@var{x}, @var{k})\n\
 @deftypefnx {Built-in Function} {} diff (@var{x}, @var{k}, @var{dim})\n\
-If @var{x} is a vector of length @math{n}, @code{diff (@var{x})} is the\n\
+If @var{x} is a vector of length @math{n}, @w{@code{diff (@var{x})}} is the\n\
 vector of first differences\n\
 @tex\n\
  $x_2 - x_1, \\ldots{}, x_n - x_{n-1}$.\n\
 @end tex\n\
 @ifnottex\n\
  @var{x}(2) - @var{x}(1), @dots{}, @var{x}(n) - @var{x}(n-1).\n\
 @end ifnottex\n\
 \n\
-If @var{x} is a matrix, @code{diff (@var{x})} is the matrix of column\n\
+If @var{x} is a matrix, @w{@code{diff (@var{x})}} is the matrix of column\n\
 differences along the first non-singleton dimension.\n\
 \n\
-The second argument is optional.  If supplied, @code{diff (@var{x},\n\
-@var{k})}, where @var{k} is a non-negative integer, returns the\n\
-@var{k}-th differences.  It is possible that @var{k} is larger than\n\
-the first non-singleton dimension of the matrix.  In this case,\n\
+The second argument is optional.  If supplied,\n\
+@w{@code{diff (@var{x}, @var{k})}}, where @var{k} is a non-negative integer,\n\
+returns the @var{k}-th differences.  It is possible that @var{k} is larger\n\
+than the first non-singleton dimension of the matrix.  In this case,\n\
 @code{diff} continues to take the differences along the next\n\
 non-singleton dimension.\n\
 \n\
 The dimension along which to take the difference can be explicitly\n\
 stated with the optional variable @var{dim}.  In this case the\n\
 @var{k}-th order differences are calculated along this dimension.\n\
-In the case where @var{k} exceeds @code{size (@var{x}, @var{dim})}\n\
+In the case where @var{k} exceeds @w{@code{size (@var{x}, @var{dim})}}\n\
 an empty matrix is returned.\n\
 @seealso{sort, merge}\n\
 @end deftypefn")
 {
   int nargin = args.length ();
   octave_value retval;
 
   if (nargin < 1 || nargin > 3)
