# HG changeset patch
# User Torsten <ttl@justmail.de>
# Date 1422184968 -3600
#      Sun Jan 25 12:22:48 2015 +0100
# Branch gui-release
# Node ID 4e85ca0b48878e185fc49664d878c44147b68d33
# Parent  8ef79bc61d8a2377e0760f64ba7866ce249c9b1f
add apply button to the settings dialog (bug #44081)

* main-window.cc (process_settings_dialog_request) connect signal for
  applying the changes, settings dialog is non modal now;
  (request_reload_settings): new slot for siganl from settings dialog when
  when apply button was clicked

* main-window .h: new slot request_reload_settings

* settings-dialog.cc (constructor): connect signal when button box is clicked
  to the new slot button_clicked;
  (button_clicked): new slot

* settings-dialog.h: new signal and related slot

* settings-dialog.ui: new applay button

diff --git a/libgui/src/main-window.cc b/libgui/src/main-window.cc
--- a/libgui/src/main-window.cc
+++ b/libgui/src/main-window.cc
@@ -664,27 +664,33 @@ main_window::open_developer_page (void)
 {
   QDesktopServices::openUrl (QUrl ("http://octave.org/get-involved.html"));
 }
 
 void
 main_window::process_settings_dialog_request (const QString& desired_tab)
 {
   settings_dialog *settingsDialog = new settings_dialog (this, desired_tab);
-  int change_settings = settingsDialog->exec ();
-  if (change_settings == QDialog::Accepted)
-    {
-      settingsDialog->write_changed_settings ();
-      QSettings *settings = resource_manager::get_settings ();
-      if (settings)
-        emit settings_changed (settings);
-    }
-  delete settingsDialog;
+
+  connect (settingsDialog, SIGNAL (apply_new_settings ()),
+           this, SLOT (request_reload_settings ()));
+
+  settingsDialog->setModal (false);
+  settingsDialog->setAttribute (Qt::WA_DeleteOnClose);
+  settingsDialog->show ();
 }
 
+void
+main_window::request_reload_settings ()
+{
+  QSettings *settings = resource_manager::get_settings ();
+
+  if (settings)
+    emit settings_changed (settings);
+}
 
 void
 main_window::notice_settings (const QSettings *settings)
 {
   // QSettings pointer is checked before emitting.
 
   // the widget's icons (when floating)
   QString icon_set
diff --git a/libgui/src/main-window.h b/libgui/src/main-window.h
--- a/libgui/src/main-window.h
+++ b/libgui/src/main-window.h
@@ -98,16 +98,17 @@ signals:
 
   void copyClipboard_signal (void);
   void pasteClipboard_signal (void);
   void selectAll_signal (void);
 
 public slots:
 
   void focus_changed (QWidget *w_old, QWidget *w_new);
+  void request_reload_settings ();
 
 
   void report_status_message (const QString& statusMessage);
   void handle_save_workspace_request (void);
   void handle_load_workspace_request (const QString& file = QString ());
   void handle_clear_command_window_request (void);
   void handle_clear_workspace_request (void);
   void handle_clear_history_request (void);
diff --git a/libgui/src/settings-dialog.cc b/libgui/src/settings-dialog.cc
--- a/libgui/src/settings-dialog.cc
+++ b/libgui/src/settings-dialog.cc
@@ -395,17 +395,18 @@ settings_dialog::settings_dialog (QWidge
     {
       QHash <QString, QWidget*> tab_hash;
       tab_hash["editor"] = ui->tab_editor;
       tab_hash["editor_styles"] = ui->tab_editor_styles;
       ui->tabWidget->setCurrentIndex (
         ui->tabWidget->indexOf (tab_hash.value (desired_tab)));
     }
 
-
+  connect (ui->button_box, SIGNAL (clicked (QAbstractButton *)),
+           this,           SLOT (button_clicked (QAbstractButton *)));
 }
 
 settings_dialog::~settings_dialog ()
 {
   delete ui;
 }
 
 
@@ -941,16 +942,29 @@ settings_dialog::write_terminal_colors (
     }
   settings->sync ();
 }
 
 
 // internal slots
 
 void
+settings_dialog::button_clicked (QAbstractButton *button)
+{
+  QDialogButtonBox::ButtonRole button_role = ui->button_box->buttonRole (button);
+
+  if (button_role == QDialogButtonBox::ApplyRole ||
+      button_role == QDialogButtonBox::AcceptRole)
+    {
+      write_changed_settings ();
+      emit apply_new_settings ();
+    }
+}
+
+void
 settings_dialog::get_dir (QLineEdit *line_edit, const QString& title)
 {
   QString dir = QFileDialog::getExistingDirectory(this,
                 title, line_edit->text (),
                 QFileDialog::ShowDirsOnly | QFileDialog::DontResolveSymlinks);
   line_edit->setText (dir);
 }
 
diff --git a/libgui/src/settings-dialog.h b/libgui/src/settings-dialog.h
--- a/libgui/src/settings-dialog.h
+++ b/libgui/src/settings-dialog.h
@@ -41,22 +41,28 @@ namespace Ui
 class settings_dialog:public QDialog
 {
   Q_OBJECT public:
   explicit settings_dialog (QWidget * parent,
                             const QString& desired_tab = QString ());
   ~settings_dialog ();
   void write_changed_settings ();
 
+signals:
+  void apply_new_settings ();
+
 private slots:
   void get_octave_dir ();
   void get_file_browser_dir ();
   void get_dir (QLineEdit*, const QString&);
   void set_disabled_pref_file_browser_dir (bool disable);
 
+  // slots for dialog's buttons
+  void button_clicked (QAbstractButton *button);
+
   // slots for import/export-buttons of shortcut sets
   void import_shortcut_set1 ();
   void export_shortcut_set1 ();
   void import_shortcut_set2 ();
   void export_shortcut_set2 ();
 
 private:
   Ui::settings_dialog * ui;
diff --git a/libgui/src/settings-dialog.ui b/libgui/src/settings-dialog.ui
--- a/libgui/src/settings-dialog.ui
+++ b/libgui/src/settings-dialog.ui
@@ -2268,19 +2268,19 @@
          </widget>
         </widget>
        </item>
       </layout>
      </widget>
     </widget>
    </item>
    <item>
-    <widget class="QDialogButtonBox" name="buttonBox">
+    <widget class="QDialogButtonBox" name="button_box">
      <property name="standardButtons">
-      <set>QDialogButtonBox::Cancel|QDialogButtonBox::Ok</set>
+      <set>QDialogButtonBox::Apply|QDialogButtonBox::Cancel|QDialogButtonBox::Ok</set>
      </property>
     </widget>
    </item>
   </layout>
  </widget>
  <resources/>
  <connections>
   <connection>
@@ -2455,33 +2455,33 @@
     </hint>
     <hint type="destinationlabel">
      <x>68</x>
      <y>182</y>
     </hint>
    </hints>
   </connection>
   <connection>
-   <sender>buttonBox</sender>
+   <sender>button_box</sender>
    <signal>accepted()</signal>
    <receiver>settings_dialog</receiver>
    <slot>accept()</slot>
    <hints>
     <hint type="sourcelabel">
      <x>299</x>
      <y>366</y>
     </hint>
     <hint type="destinationlabel">
      <x>299</x>
      <y>199</y>
     </hint>
    </hints>
   </connection>
   <connection>
-   <sender>buttonBox</sender>
+   <sender>button_box</sender>
    <signal>rejected()</signal>
    <receiver>settings_dialog</receiver>
    <slot>reject()</slot>
    <hints>
     <hint type="sourcelabel">
      <x>299</x>
      <y>366</y>
     </hint>
