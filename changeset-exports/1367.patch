# HG changeset patch
# User jwe
# Date 810346023 0
#      Wed Sep 06 00:07:03 1995 +0000
# Node ID 9f9131a8d706ea419d77ae65af41c6b6e1594f18
# Parent  f75432dff0066bdf99dacce81772865b5a4202a5
[project @ 1995-09-06 00:07:03 by jwe]

diff --git a/libcruft/misc/lo-error.cc b/libcruft/misc/lo-error.cc
--- a/libcruft/misc/lo-error.cc
+++ b/libcruft/misc/lo-error.cc
@@ -20,19 +20,19 @@ along with Octave; see the file COPYING.
 Software Foundation, 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
-#include <stdio.h>
-#include <stdlib.h>
-#include <stdarg.h>
+#include <cstdarg>
+#include <cstdio>
+#include <cstdlib>
 
 #include "lo-error.h"
 
 liboctave_error_handler current_liboctave_error_handler = liboctave_fatal;
 
 static void
 verror (const char *name, const char *fmt, va_list args)
 {
diff --git a/liboctave/Array.cc b/liboctave/Array.cc
--- a/liboctave/Array.cc
+++ b/liboctave/Array.cc
@@ -24,17 +24,17 @@ Software Foundation, 59 Temple Place - S
 #if defined (__GNUG__)
 #pragma implementation
 #endif
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
-#include <assert.h>
+#include <cassert>
 
 #include "Array.h"
 
 // The real representation of all arrays.
 
 template <class T>
 ArrayRep<T>::ArrayRep (T *d, int l)
 {
diff --git a/liboctave/CMatrix.cc b/liboctave/CMatrix.cc
--- a/liboctave/CMatrix.cc
+++ b/liboctave/CMatrix.cc
@@ -24,28 +24,30 @@ Software Foundation, 59 Temple Place - S
 #if defined (__GNUG__)
 #pragma implementation
 #endif
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
-#include <sys/types.h>
+#include <cfloat>
+
 #include <iostream.h>
-#include <float.h>
+
+#include <sys/types.h> // XXX FIXME XXX
 
 #include <Complex.h>
 
-#include "mx-base.h"
 #include "CmplxDET.h"
 #include "CmplxSVD.h"
-#include "mx-inlines.cc"
+#include "f77-uscore.h"
 #include "lo-error.h"
-#include "f77-uscore.h"
+#include "mx-base.h"
+#include "mx-inlines.cc"
 
 // Fortran functions we call.
 
 extern "C"
 {
   int F77_FCN (zgemm, ZGEMM) (const char*, const char*, const int&,
 			      const int&, const int&, const Complex&,
 			      const Complex*, const int&,
diff --git a/liboctave/CmplxDET.cc b/liboctave/CmplxDET.cc
--- a/liboctave/CmplxDET.cc
+++ b/liboctave/CmplxDET.cc
@@ -24,18 +24,18 @@ Software Foundation, 59 Temple Place - S
 #if defined (__GNUG__)
 #pragma implementation
 #endif
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
-#include <math.h>
-#include <float.h>
+#include <cfloat>
+#include <cmath>
 
 #include <Complex.h>
 
 #include "CmplxDET.h"
 
 int
 ComplexDET::value_will_overflow (void) const
 {
diff --git a/liboctave/CmplxQRP.cc b/liboctave/CmplxQRP.cc
--- a/liboctave/CmplxQRP.cc
+++ b/liboctave/CmplxQRP.cc
@@ -24,22 +24,22 @@ Software Foundation, 59 Temple Place - S
 #if defined (__GNUG__)
 #pragma implementation
 #endif
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
-#include <assert.h>
+#include <cassert>
 
 #include "CmplxQRP.h"
-#include "mx-inlines.cc"
+#include "f77-uscore.h"
 #include "lo-error.h"
-#include "f77-uscore.h"
+#include "mx-inlines.cc"
 
 extern "C"
 {
   int F77_FCN (zgeqpf, ZGEQPF) (const int&, const int&, Complex*,
 				const int&, int*, Complex*, Complex*,
 				double*, int&);
 
   int F77_FCN (zungqr, ZUNGQR) (const int&, const int&, const int&,
diff --git a/liboctave/LSODE.cc b/liboctave/LSODE.cc
--- a/liboctave/LSODE.cc
+++ b/liboctave/LSODE.cc
@@ -24,18 +24,19 @@ Software Foundation, 59 Temple Place - S
 #if defined (__GNUG__)
 #pragma implementation
 #endif
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
-#include <math.h>
-#include <float.h>
+#include <cfloat>
+#include <cmath>
+
 #include <iostream.h>
 
 #include "ODE.h"
 #include "f77-uscore.h"
 #include "lo-error.h"
 
 extern "C"
 {
diff --git a/liboctave/NLEqn.cc b/liboctave/NLEqn.cc
--- a/liboctave/NLEqn.cc
+++ b/liboctave/NLEqn.cc
@@ -24,18 +24,18 @@ Software Foundation, 59 Temple Place - S
 #if defined (__GNUG__)
 #pragma implementation
 #endif
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
-#include <float.h>
-#include <math.h>
+#include <cfloat>
+#include <cmath>
 
 #include "NLEqn.h"
 #include "dMatrix.h"
 #include "f77-uscore.h"
 #include "lo-error.h"
 
 extern "C"
 {
diff --git a/liboctave/NPSOL.cc b/liboctave/NPSOL.cc
--- a/liboctave/NPSOL.cc
+++ b/liboctave/NPSOL.cc
@@ -24,19 +24,20 @@ Software Foundation, 59 Temple Place - S
 #if defined (__GNUG__)
 #pragma implementation
 #endif
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
-#include <math.h>
-#include <float.h>
-#include <string.h>
+#include <cfloat>
+#include <cmath>
+#include <cstring>
+
 #include <strstream.h>
 
 #ifndef NPSOL_MISSING
 
 #include "dMatrix.h"
 
 #include "NPSOL.h"
 #include "f77-uscore.h"
diff --git a/liboctave/QLD.cc b/liboctave/QLD.cc
--- a/liboctave/QLD.cc
+++ b/liboctave/QLD.cc
@@ -24,23 +24,24 @@ Software Foundation, 59 Temple Place - S
 #if defined (__GNUG__)
 #pragma implementation
 #endif
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
-#include <math.h>
+#include <cmath>
+
 #include <iostream.h>
 
-#include "dMatrix.h"
+#include "QLD.h"
 #include "dColVector.h"
+#include "dMatrix.h"
 #include "dRowVector.h"
-#include "QLD.h"
 #include "f77-uscore.h"
 
 extern "C"
 {
   int F77_FCN (qld, QLD) (int&, int&, int&, int&, int&, double*,
 			  double*, double*, double*, double*, double*,
 			  double*, double*, int&, int&, int&, double*,
 			  int&, int*, int&);
diff --git a/liboctave/QPSOL.cc b/liboctave/QPSOL.cc
--- a/liboctave/QPSOL.cc
+++ b/liboctave/QPSOL.cc
@@ -24,18 +24,18 @@ Software Foundation, 59 Temple Place - S
 #if defined (__GNUG__)
 #pragma implementation
 #endif
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
-#include <math.h>
-#include <float.h>
+#include <cfloat>
+#include <cmath>
 
 #ifndef QPSOL_MISSING
 
 #include "QPSOL.h"
 #include "f77-uscore.h"
 
 extern "C"
 {
diff --git a/liboctave/Quad.cc b/liboctave/Quad.cc
--- a/liboctave/Quad.cc
+++ b/liboctave/Quad.cc
@@ -24,18 +24,18 @@ Software Foundation, 59 Temple Place - S
 #if defined (__GNUG__)
 #pragma implementation
 #endif
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
-#include <math.h>
-#include <float.h>
+#include <cfloat>
+#include <cmath>
 
 #include "Quad.h"
 #include "f77-uscore.h"
 #include "sun-utils.h"
 
 static integrand_fcn user_fcn;
 
 // XXX FIXME XXX -- would be nice to not have to have this global
diff --git a/liboctave/Range.cc b/liboctave/Range.cc
--- a/liboctave/Range.cc
+++ b/liboctave/Range.cc
@@ -24,18 +24,19 @@ Software Foundation, 59 Temple Place - S
 #if defined (__GNUG__)
 #pragma implementation
 #endif
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
+#include <climits>
+
 #include <iostream.h>
-#include <limits.h>
 
 #include "Range.h"
 #include "dMatrix.h"
 
 Matrix
 Range::matrix_value (void) const
 {
   Matrix retval;
diff --git a/liboctave/dMatrix.cc b/liboctave/dMatrix.cc
--- a/liboctave/dMatrix.cc
+++ b/liboctave/dMatrix.cc
@@ -24,29 +24,31 @@ Software Foundation, 59 Temple Place - S
 #if defined (__GNUG__)
 #pragma implementation
 #endif
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
-#include <sys/types.h>
+#include <cfloat>
+#include <cstdio>
+
 #include <iostream.h>
-#include <stdio.h>
-#include <float.h>
+
+#include <sys/types.h> // XXX FIXME XXX
 
 #include <Complex.h>
 
-#include "mx-base.h"
 #include "dbleDET.h"
 #include "dbleSVD.h"
-#include "mx-inlines.cc"
+#include "f77-uscore.h"
 #include "lo-error.h"
-#include "f77-uscore.h"
+#include "mx-base.h"
+#include "mx-inlines.cc"
 
 // Fortran functions we call.
 
 extern "C"
 {
   int F77_FCN (dgemm, DGEMM) (const char*, const char*, const int&,
 			      const int&, const int&, const double&,
 			      const double*, const int&,
diff --git a/liboctave/dbleDET.cc b/liboctave/dbleDET.cc
--- a/liboctave/dbleDET.cc
+++ b/liboctave/dbleDET.cc
@@ -24,18 +24,18 @@ Software Foundation, 59 Temple Place - S
 #if defined (__GNUG__)
 #pragma implementation
 #endif
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
-#include <math.h>
-#include <float.h>
+#include <cfloat>
+#include <cmath>
 
 #include "dbleDET.h"
 
 int
 DET::value_will_overflow (void) const
 {
   return det[2] + 1 > log10 (DBL_MAX) ? 1 : 0;
 }
diff --git a/liboctave/dbleGEPBAL.cc b/liboctave/dbleGEPBAL.cc
--- a/liboctave/dbleGEPBAL.cc
+++ b/liboctave/dbleGEPBAL.cc
@@ -24,17 +24,17 @@ Software Foundation, 59 Temple Place - S
 #if defined (__GNUG__)
 #pragma implementation
 #endif
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
-#include <math.h>
+#include <cmath>
 
 #include "dbleGEPBAL.h"
 #include "f77-uscore.h"
 
 extern "C"
 {
   int F77_FCN (dgebak, DGEBAK) (const char*, const char*, const int&,
 				const int&, const int&, double*,
diff --git a/liboctave/dbleQRP.cc b/liboctave/dbleQRP.cc
--- a/liboctave/dbleQRP.cc
+++ b/liboctave/dbleQRP.cc
@@ -24,22 +24,22 @@ Software Foundation, 59 Temple Place - S
 #if defined (__GNUG__)
 #pragma implementation
 #endif
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
-#include <assert.h>
+#include <cassert>
 
 #include "dbleQRP.h"
-#include "mx-inlines.cc"
+#include "f77-uscore.h"
 #include "lo-error.h"
-#include "f77-uscore.h"
+#include "mx-inlines.cc"
 
 extern "C"
 {
   int F77_FCN (dgeqpf, DGEQPF) (const int&, const int&, double*,
 				const int&, int*, double*, double*,
 				int&);
 
   int F77_FCN (dorgqr, DORGQR) (const int&, const int&, const int&,
diff --git a/liboctave/sun-utils.cc b/liboctave/sun-utils.cc
--- a/liboctave/sun-utils.cc
+++ b/liboctave/sun-utils.cc
@@ -18,17 +18,17 @@ for more details.
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, write to the Free
 Software Foundation, 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 */
 
 #ifdef sun
 
-#include <assert.h>
+#include <cassert>
 
 // I think that this is really only needed if linking to Fortran
 // compiled libraries on a Sun.  It should never be called.
 // There should probably be a sysdep.cc file, eh?
 
 extern "C"
 {
   int MAIN_ (void)
diff --git a/liboctave/utils.cc b/liboctave/utils.cc
--- a/liboctave/utils.cc
+++ b/liboctave/utils.cc
@@ -20,20 +20,23 @@ along with Octave; see the file COPYING.
 Software Foundation, 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
+#include <csignal>
+#include <cstdlib>
+
+#ifdef HAVE_UNISTD_H
 #include <sys/types.h>
 #include <unistd.h>
-#include <signal.h>
-#include <stdlib.h>
+#endif
 
 #include "f77-uscore.h"
 
 // All the STOP statements in the Fortran routines have been replaced
 // with a call to XSTOPX, defined in the file libcruft/misc/xstopx.f.
 //
 // The XSTOPX function calls this function, which will send a SIGINT
 // signal to the program that invoked it.
