# HG changeset patch
# User jwe
# Date 818930012 0
#      Thu Dec 14 08:33:32 1995 +0000
# Node ID 44ed237bdc1e1dc15499e21c057d239474b35548
# Parent  395bb6d6c096510520a6858bbeba078b6049c2d5
[project @ 1995-12-14 08:32:49 by jwe]

diff --git a/libcruft/fftpack/cfftb1.f b/libcruft/fftpack/cfftb1.f
--- a/libcruft/fftpack/cfftb1.f
+++ b/libcruft/fftpack/cfftb1.f
@@ -1,11 +1,11 @@
       subroutine cfftb1 (n,c,ch,wa,ifac)
       implicit double precision (a-h,o-z)
-      dimension       ch(1)      ,c(1)       ,wa(1)      ,ifac(1)
+      dimension       ch(*)      ,c(*)       ,wa(*)      ,ifac(*)
       nf = ifac(2)
       na = 0
       l1 = 1
       iw = 1
       do 116 k1=1,nf
          ip = ifac(k1+2)
          l2 = ip*l1
          ido = n/l2
diff --git a/libcruft/fftpack/cfftf1.f b/libcruft/fftpack/cfftf1.f
--- a/libcruft/fftpack/cfftf1.f
+++ b/libcruft/fftpack/cfftf1.f
@@ -1,11 +1,11 @@
       subroutine cfftf1 (n,c,ch,wa,ifac)
       implicit double precision (a-h,o-z)
-      dimension       ch(1)      ,c(1)       ,wa(1)      ,ifac(1)
+      dimension       ch(*)      ,c(*)       ,wa(*)      ,ifac(*)
       nf = ifac(2)
       na = 0
       l1 = 1
       iw = 1
       do 116 k1=1,nf
          ip = ifac(k1+2)
          l2 = ip*l1
          ido = n/l2
diff --git a/libcruft/fftpack/cffti1.f b/libcruft/fftpack/cffti1.f
--- a/libcruft/fftpack/cffti1.f
+++ b/libcruft/fftpack/cffti1.f
@@ -1,11 +1,11 @@
       subroutine cffti1 (n,wa,ifac)
       implicit double precision (a-h,o-z)
-      dimension       wa(1)      ,ifac(1)    ,ntryh(4)
+      dimension       wa(*)      ,ifac(*)    ,ntryh(4)
       data ntryh(1),ntryh(2),ntryh(3),ntryh(4)/3,4,2,5/
       nl = n
       nf = 0
       j = 0
   101 j = j+1
       if (j-4) 102,102,103
   102 ntry = ntryh(j)
       go to 104
diff --git a/libcruft/odepack/prepj.f b/libcruft/odepack/prepj.f
--- a/libcruft/odepack/prepj.f
+++ b/libcruft/odepack/prepj.f
@@ -8,18 +8,18 @@ CLLL. OPTIMIZE
      2   MAXORD, MAXCOR, MSBP, MXNCF, N, NQ, NST, NFE, NJE, NQU
       INTEGER I, I1, I2, IER, II, J, J1, JJ, LENP,
      1   MBA, MBAND, MEB1, MEBAND, ML, ML3, MU, NP1
       DOUBLE PRECISION Y, YH, EWT, FTEM, SAVF, WM 
       DOUBLE PRECISION ROWNS, 
      1   CCMAX, EL0, H, HMIN, HMXI, HU, RC, TN, UROUND
       DOUBLE PRECISION CON, DI, FAC, HL0, R, R0, SRUR, YI, YJ, YJJ,
      1   VNORM
-      DIMENSION NEQ(1), Y(1), YH(NYH,1), EWT(1), FTEM(1), SAVF(1),
-     1   WM(1), IWM(1)
+      DIMENSION NEQ(*), Y(*), YH(NYH,*), EWT(*), FTEM(*), SAVF(*),
+     1   WM(*), IWM(*)
       COMMON /LS0001/ ROWNS(209),
      2   CCMAX, EL0, H, HMIN, HMXI, HU, RC, TN, UROUND,
      3   IOWND(14), IOWNS(6), 
      4   ICF, IERPJ, IERSL, JCUR, JSTART, KFLAG, L, METH, MITER,
      5   MAXORD, MAXCOR, MSBP, MXNCF, N, NQ, NST, NFE, NJE, NQU
 C-----------------------------------------------------------------------
 C PREPJ IS CALLED BY STODE TO COMPUTE AND PROCESS THE MATRIX
 C P = I - H*EL(1)*J , WHERE J IS AN APPROXIMATION TO THE JACOBIAN.
diff --git a/libcruft/odepack/solsy.f b/libcruft/odepack/solsy.f
--- a/libcruft/odepack/solsy.f
+++ b/libcruft/odepack/solsy.f
@@ -4,17 +4,17 @@ CLLL. OPTIMIZE
       INTEGER IOWND, IOWNS,
      1   ICF, IERPJ, IERSL, JCUR, JSTART, KFLAG, L, METH, MITER,
      2   MAXORD, MAXCOR, MSBP, MXNCF, N, NQ, NST, NFE, NJE, NQU
       INTEGER I, MEBAND, ML, MU
       DOUBLE PRECISION WM, X, TEM
       DOUBLE PRECISION ROWNS, 
      1   CCMAX, EL0, H, HMIN, HMXI, HU, RC, TN, UROUND
       DOUBLE PRECISION DI, HL0, PHL0, R 
-      DIMENSION WM(1), IWM(1), X(1), TEM(1)
+      DIMENSION WM(*), IWM(*), X(*), TEM(*)
       COMMON /LS0001/ ROWNS(209),
      2   CCMAX, EL0, H, HMIN, HMXI, HU, RC, TN, UROUND,
      3   IOWND(14), IOWNS(6), 
      4   ICF, IERPJ, IERSL, JCUR, JSTART, KFLAG, L, METH, MITER,
      5   MAXORD, MAXCOR, MSBP, MXNCF, N, NQ, NST, NFE, NJE, NQU
 C-----------------------------------------------------------------------
 C THIS ROUTINE MANAGES THE SOLUTION OF THE LINEAR SYSTEM ARISING FROM 
 C A CHORD ITERATION.  IT IS CALLED IF MITER .NE. 0.
diff --git a/libcruft/odepack/stode.f b/libcruft/odepack/stode.f
--- a/libcruft/odepack/stode.f
+++ b/libcruft/odepack/stode.f
@@ -7,18 +7,18 @@ CLLL. OPTIMIZE
      1   ICF, IERPJ, IERSL, JCUR, JSTART, KFLAG, L, METH, MITER,
      2   MAXORD, MAXCOR, MSBP, MXNCF, N, NQ, NST, NFE, NJE, NQU
       INTEGER I, I1, IREDO, IRET, J, JB, M, NCF, NEWQ
       DOUBLE PRECISION Y, YH, YH1, EWT, SAVF, ACOR, WM
       DOUBLE PRECISION CONIT, CRATE, EL, ELCO, HOLD, RMAX, TESCO,
      2   CCMAX, EL0, H, HMIN, HMXI, HU, RC, TN, UROUND
       DOUBLE PRECISION DCON, DDN, DEL, DELP, DSM, DUP, EXDN, EXSM, EXUP,
      1   R, RH, RHDN, RHSM, RHUP, TOLD, VNORM
-      DIMENSION NEQ(1), Y(1), YH(NYH,1), YH1(1), EWT(1), SAVF(1),
-     1   ACOR(1), WM(1), IWM(1)
+      DIMENSION NEQ(*), Y(*), YH(NYH,*), YH1(*), EWT(*), SAVF(*),
+     1   ACOR(*), WM(*), IWM(*)
       COMMON /LS0001/ CONIT, CRATE, EL(13), ELCO(13,12),
      1   HOLD, RMAX, TESCO(3,12),
      2   CCMAX, EL0, H, HMIN, HMXI, HU, RC, TN, UROUND, IOWND(14),
      3   IALTH, IPUP, LMAX, MEO, NQNYH, NSLP,
      4   ICF, IERPJ, IERSL, JCUR, JSTART, KFLAG, L, METH, MITER,
      5   MAXORD, MAXCOR, MSBP, MXNCF, N, NQ, NST, NFE, NJE, NQU
 C-----------------------------------------------------------------------
 C STODE PERFORMS ONE STEP OF THE INTEGRATION OF AN INITIAL VALUE
