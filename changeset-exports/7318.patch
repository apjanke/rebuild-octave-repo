# HG changeset patch
# User jwe
# Date 1197918304 0
#      Mon Dec 17 19:05:04 2007 +0000
# Node ID 5c8f09c7a02082004c104f2e7db08c20ff0c9b0c
# Parent  11c5f1ee553e891940417310ae9c49b5c2f17c83
[project @ 2007-12-17 19:02:13 by jwe]

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+2007-12-17  David Bateman  <dbateman@free.fr>
+
+	* Sparse-op-defs.h (SPARSE_ANY_ALL_OP_ROW_CODE): Use ridx for row
+	index.
+
 2007-12-11  John W. Eaton  <jwe@octave.org>
 
 	* Sparse.cc (Sparse<T>::index (idx_vector&, int) const):
 	If indexing scalar with empty matrix, return empty array with same
 	size as index.
 
 2007-12-10  John W. Eaton  <jwe@octave.org>
 
diff --git a/liboctave/Sparse-op-defs.h b/liboctave/Sparse-op-defs.h
--- a/liboctave/Sparse-op-defs.h
+++ b/liboctave/Sparse-op-defs.h
@@ -1692,17 +1692,17 @@ along with Octave; see the file COPYING.
   SPARSE_BASE_REDUCTION_OP (RET_TYPE, EL_TYPE, \
 			SPARSE_REDUCTION_OP_ROW_EXPR (OP), \
 			SPARSE_REDUCTION_OP_COL_EXPR (OP), \
 			INIT_VAL, MT_RESULT)
 
 #define SPARSE_ANY_ALL_OP_ROW_CODE(TEST_OP, TEST_TRUE_VAL) \
   if (data (i) TEST_OP 0.0) \
     { \
-      tmp[i] = TEST_TRUE_VAL; \
+      tmp[ridx(i)] = TEST_TRUE_VAL; \
       break; \
     }
 
 #define SPARSE_ANY_ALL_OP_COL_CODE(TEST_OP, TEST_TRUE_VAL) \
   if (data (i) TEST_OP 0.0) \
     { \
       tmp[j] = TEST_TRUE_VAL; \
       break; \
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,14 @@
+2007-12-17  David Bateman  <dbateman@free.fr>
+
+	* plot/__go_draw_axes__.m: Use "set pm3d explicit" so that
+	contours can overlay pcolor plots. Priveldge no hidden line
+	removal when there are multiple objects in the plot.
+
 2007-12-14  David Bateman  <dbateman@free.fr>
 
 	* plot/contour3.m, plot/__contour__.m: Handle linespec.
 	* plot/contour.m: Doc fix.
 	* plot/__go_draw_axes__.m (case "patch"): Include "lt" in lt string.
 	Include linetype in withclause.
 
 	* plot/__go_draw_axes__.m (__calc_dimensions__): New function.
diff --git a/scripts/plot/__go_draw_axes__.m b/scripts/plot/__go_draw_axes__.m
--- a/scripts/plot/__go_draw_axes__.m
+++ b/scripts/plot/__go_draw_axes__.m
@@ -59,17 +59,17 @@ function __go_draw_axes__ (h, plot_strea
 
     if (strcmpi (axis_obj.dataaspectratiomode, "manual"))
       r = axis_obj.dataaspectratio;
       fprintf (plot_stream, "set size ratio %.15g;\n", -r(2)/r(1));
     else
       fputs (plot_stream, "set size noratio;\n");
     endif
 
-    fputs (plot_stream, "set pm3d;\n");
+    fputs (plot_stream, "set pm3d explicit;\n");
     fputs (plot_stream, "unset label;\n");
 
     if (! isempty (axis_obj.title))
       t = get (axis_obj.title);
       if (isempty (t.string))
 	fputs (plot_stream, "unset title;\n");
       else
 	[tt, f, s] = __maybe_munge_text__ (enhanced, t, "string", 
@@ -502,21 +502,21 @@ function __go_draw_axes__ (h, plot_strea
 	     else
 	       zcol = zeros (size (xcol));
 	     endif
 	   endif
 
 	   if (! isnan (xcol) && ! isnan (ycol))
 	     ## Is the patch closed or not
 	     if (strncmp (obj.facecolor, "none", 4)) 
+	       hidden_removal = false;
+	     else
 	       if (isnan (hidden_removal))
-		 hidden_removal = false;
+		 hidden_removal = true;
 	       endif
-	     else
-	       hidden_removal = true;
 	       if (nd == 3)
 		 error ("gnuplot (as of v4.2) only supports 2D filled patches");
 	       endif
 
 	       data_idx++;
 	       is_image_data(data_idx) = false;
 	       parametric(data_idx) = false;
 	       have_cdata(data_idx) = false;
@@ -814,21 +814,21 @@ function __go_draw_axes__ (h, plot_strea
 	    if (isempty (obj.keylabel))
 	      titlespec{data_idx} = "title \"\"";
 	    else
 	      tmp = undo_string_escapes (__maybe_munge_text__ (enhanced, obj, "keylabel", have_newer_gnuplot));
 	      titlespec{data_idx} = strcat ("title \"", tmp, "\"");
 	    endif
 	    usingclause{data_idx} = "";
 	    if (have_newer_gnuplot || isnan (typ))
-	      withclause{data_idx} = sprintf ("with %s linestyle %d",
-		           		      style, data_idx);
+	      withclause{data_idx} = sprintf ("with pm3d linestyle %d",
+		           		      data_idx);
 	    else
-	      withclause{data_idx} = sprintf ("with %s linetype %d %s",
-		 			      style, typ, with);
+	      withclause{data_idx} = sprintf ("with pm3d linetype %d %s",
+		 			      typ, with);
 	    endif
 
 	    xdat = obj.xdata;
 	    ydat = obj.ydata;
 	    zdat = obj.zdata;
 	    cdat = obj.cdata;
 
   	    err = false;
@@ -878,50 +878,46 @@ function __go_draw_axes__ (h, plot_strea
 				|| strncmp (obj.facecolor, "interp", 6));
             flat_interp_edge = (strncmp (obj.edgecolor, "flat", 4)
 				|| strncmp (obj.edgecolor, "interp", 6));
 
 	    facecolor_none_or_white = (strncmp (obj.facecolor, "none", 4)
 				       || (isnumeric (obj.facecolor)
 					   && all (obj.facecolor == 1)));
 	    if (strncmp (obj.facecolor, "none", 4))
-	      if (isnan (hidden_removal))
-		hidden_removal = false;
-	      endif
+	      hidden_removal = false;
 	    else
-	      hidden_removal = true;
+	      if (isnan (hidden_removal))
+		hidden_removal = true;
+	      endif
 	    endif
-
-            if (flat_interp_face
-		|| (flat_interp_edge && facecolor_none_or_white))
+	    
+            if (flat_interp_edge && facecolor_none_or_white)
 	      withclause{data_idx} = "with line palette";
             endif
 
 	    if (have_newer_gnuplot)
 	      dord = "depthorder";
 	    else
 	      dord = "";
 	    endif
 
-	    if (facecolor_none_or_white)
-	      ## Ensure faces aren't drawn
-	      fprintf (plot_stream, "unset pm3d;\n");
-            elseif (flat_interp_face && strncmp (obj.edgecolor, "flat", 4))
-              fprintf (plot_stream, "set pm3d at s %s %s corners2color c3;\n", 
+	    if (flat_interp_face && strncmp (obj.edgecolor, "flat", 4))
+              fprintf (plot_stream, "set pm3d explicit at s %s %s corners2color c3;\n", 
 		       interp_str, dord);
-            else
+            elseif (!facecolor_none_or_white)
               if (strncmp (obj.edgecolor, "none", 4))
-                fprintf (plot_stream, "set pm3d at s %s corners2color c3;\n", 
+                fprintf (plot_stream, "set pm3d explicit at s %s corners2color c3;\n", 
 			 interp_str, dord);
               else
                 edgecol = obj.edgecolor;
                 if (ischar (obj.edgecolor))
                   edgecol = [0,0,0];
                 endif
-                fprintf (plot_stream, "set pm3d at s hidden3d %d %s %s corners2color c3;\n", 
+                fprintf (plot_stream, "set pm3d explicit at s hidden3d %d %s %s corners2color c3;\n", 
 			 data_idx, interp_str, dord);
 
 		if (have_newer_gnuplot)
 		  if (mono)
 		    colorspec = "";
 		  else
 		    colorspec = sprintf ("linecolor rgb \"#%02x%02x%02x\"",
 					 round (255*edgecol));
