# HG changeset patch
# User jwe
# Date 846391328 0
#      Sun Oct 27 04:42:08 1996 +0000
# Node ID ced642d8ba6a6d12e1f9654b8c8487794e88ef6f
# Parent  3952436ca2c26f924c4f499550d079669b9fd52c
[project @ 1996-10-27 04:42:08 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,13 @@
 Sat Oct 26 10:40:05 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* oct-hist.cc (do_history): Move declaration of file inside
+	conditional.
+
 	* defun.h (DEFVAR_INT): Set eternal flag with (svc_fcn != 0)
 	instead of (sv_fcn ? 1 : 0)
 
 Fri Oct 25 01:10:51 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* ov-ch-mat.h (octave_char_matrix::any): Return 0.0 instead of false.
 	(octave_char_matrix::all): Likewise.
 
diff --git a/src/oct-hist.cc b/src/oct-hist.cc
--- a/src/oct-hist.cc
+++ b/src/oct-hist.cc
@@ -130,21 +130,19 @@ do_history (int argc, const string_vecto
 
   int i;
   for (i = 1; i < argc; i++)
     {
       if (argv[i][0] == '-' && argv[i].length () == 2
 	  && (argv[i][1] == 'r' || argv[i][1] == 'w'
 	      || argv[i][1] == 'a' || argv[i][1] == 'n'))
 	{
-	  string file;
-
 	  if (i < argc - 1)
 	    {
-	      file = oct_tilde_expand (argv[i+1]);
+	      string file = oct_tilde_expand (argv[i+1]);
 	      octave_command_history.set_file (file);
 	    }
 
 	  switch (argv[i][1])
 	    {
 	    case 'a':		// Append `new' lines to file.
 	      octave_command_history.append ();
 	      break;
@@ -197,17 +195,17 @@ do_history (int argc, const string_vecto
   int len = hlist.length ();
 
   for (i = 0; i < len; i++)
     octave_stdout << hlist[i] << "\n";
 }
 
 // Read the edited history lines from STREAM and return them
 // one at a time.  This can read unlimited length lines.  The
-//  caller should free the storage.
+// caller should free the storage.
 
 static char *
 edit_history_readline (fstream& stream)
 {
   char c;
   int line_len = 128;
   int lindex = 0;
   char *line = new char [line_len];
