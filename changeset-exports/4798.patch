# HG changeset patch
# User jwe
# Date 1077643805 0
#      Tue Feb 24 17:30:05 2004 +0000
# Node ID da0d1c453971a75900d007d29a26bf299f16ed18
# Parent  19b8225bdaa2f2c4e4b3f32fb8a39cc96753561e
[project @ 2004-02-24 17:30:05 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2004-02-24  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* file-io.cc (do_stream_open): Don't call ::error if stream can't
+	be created.  Don't call ::fopen if arch is invalid.	
+
 2004-02-23  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* file-io.cc (Fftell): Return long integer instead of streamoff_array.
 	(do_stream_open): Create octave_stdiostream instead of octave_fstream.
 
 	* oct-fstrm.cc (octave_fstream::seek, octave_fstream::tell):
 	Always fail.  Signatures now match C library functionsb.
 	* oct-iostrm.cc (octave_base_iostream::seek,
diff --git a/src/file-io.cc b/src/file-io.cc
--- a/src/file-io.cc
+++ b/src/file-io.cc
@@ -333,25 +333,31 @@ do_stream_open (const std::string& name,
 
   std::ios::openmode md = fopen_mode_to_ios_mode (mode);
 
   if (! error_state)
     {
       oct_mach_info::float_format flt_fmt =
 	oct_mach_info::string_to_float_format (arch);
 
-      FILE *fptr = ::fopen (name.c_str (), mode.c_str ());
+      if (! error_state)
+	{
+	  FILE *fptr = ::fopen (name.c_str (), mode.c_str ());
+
+	  if (fptr)
+	    {
+	      retval = octave_stdiostream::create (name, fptr, md, flt_fmt);
 
-      if (fptr)
-	{	
-	  if (! error_state)
-	    retval = octave_stdiostream::create (name, fptr, md, flt_fmt);
+	      // XXX FIXME XXX -- it would now be possible for the
+	      // file id returned by fopen to correspond directly to
+	      // the underlying system file id (::fileno (fptr)).
+	      // Doing that would require some changes to the
+	      // octave_stream_list class.
+	    }
 	}
-      else
-	error ("fopen: failed to open file %s", name.c_str ());
     }
 
   return retval;
 }
 
 static octave_stream
 do_stream_open (const octave_value& tc_name, const octave_value& tc_mode,
 		const octave_value& tc_arch, const char *fcn, int& fid)
