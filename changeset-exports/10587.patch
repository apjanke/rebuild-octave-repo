# HG changeset patch
# User David Bateman <dbateman@free.fr>
# Date 1272481803 -7200
#      Wed Apr 28 21:10:03 2010 +0200
# Node ID eb69d94e8648be1f86e93bbf3e8aa065e4f46dca
# Parent  ec3cec8277dfd5dc71167eb0affd87a114d247d1
Update the errorbar markers in a seperate listtener function

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2010-04-27  David Bateman  <dbateman@free.fr>
+
+	* plot/private/__errplot__.m: Update the marker in a seperate
+	listener function.
+
 2010-04-27  Rik <octave@nomad.inbox5.com>
 
 	* plot/private/__go_draw_axes__.m: Use "." for marker when plotting
 	with errorbars.  (bug #29057)
 
 2010-04-27  Ben Abbott <bpabbott@mac.com>
 
 	* plot/private/__errplot__.m: Add missing semicolon line terminations.
diff --git a/scripts/plot/private/__errplot__.m b/scripts/plot/private/__errplot__.m
--- a/scripts/plot/private/__errplot__.m
+++ b/scripts/plot/private/__errplot__.m
@@ -130,64 +130,71 @@ function h = __errplot__ (fstr, p, a1, a
         if (index (ifmt, "boxxy") || index (ifmt, "xyerr"))
           set (hl, "xdata", a1(:,i), "ydata", a2(:,i), "xldata", a3(:,i),
                "xudata", a4(:,i), "ldata", a5(:,i), "udata", a6(:,i));
         else
           error ("error plot with 6 columns only valid for boxxy and xyerr");
         endif
     endswitch
 
+    hl2 = __line__ (hg, "xdata", get (hl, "xdata"), 
+                    "ydata", get (hl, "ydata"), 
+                    "color", get (hl, "color"),
+                    "linewidth", get (hl, "linewidth"),
+                    "linestyle", get (hl, "linestyle"), 
+                    "marker", marker, "parent", hg);
+
     addproperty ("color", hg, "linecolor", get (hl, "color"));
     addproperty ("linewidth", hg, "linelinewidth", get (hl, "linewidth"));
     addproperty ("linestyle", hg, "linelinestyle", get (hl, "linestyle"));
-    addproperty ("marker", hg, "linemarker", get (hl, "marker"));
+    addproperty ("marker", hg, "linemarker", get (hl2, "marker"));
     addproperty ("markerfacecolor", hg, "linemarkerfacecolor", 
-                 get (hl, "markerfacecolor"));
+                 get (hl2, "markerfacecolor"));
     addproperty ("markeredgecolor", hg, "linemarkerfacecolor", 
-                 get (hl, "markeredgecolor"));
+                 get (hl2, "markeredgecolor"));
     addproperty ("markersize", hg, "linemarkersize", 
-                 get (hl, "markersize"));
+                 get (hl2, "markersize"));
 
     addlistener (hg, "color", @update_props);
     addlistener (hg, "linewidth", @update_props); 
     addlistener (hg, "linestyle", @update_props); 
-    addlistener (hg, "marker", @update_props); 
-    addlistener (hg, "markerfacecolor", @update_props); 
-    addlistener (hg, "markersize", @update_props);
+    addlistener (hg, "marker", @update_marker); 
+    addlistener (hg, "markerfacecolor", @update_marker); 
+    addlistener (hg, "markersize", @update_marker);
 
     addproperty ("xdata", hg, "data", get (hl, "xdata"));
     addproperty ("ydata", hg, "data", get (hl, "ydata"));
     addproperty ("ldata", hg, "data", get (hl, "ldata"));
     addproperty ("udata", hg, "data", get (hl, "udata"));
     addproperty ("xldata", hg, "data", get (hl, "xldata"));
     addproperty ("xudata", hg, "data", get (hl, "xudata"));
 
     addlistener (hg, "xdata", @update_data);
     addlistener (hg, "ydata", @update_data);
     addlistener (hg, "ldata", @update_data);
     addlistener (hg, "udata", @update_data);
     addlistener (hg, "xldata", @update_data);
     addlistener (hg, "xudata", @update_data);
 
-    __line__ (hg, "xdata", get (hl, "xdata"), 
-              "ydata", get (hl, "ydata"), 
-              "color", get (hl, "color"),
-              "linewidth", get (hl, "linewidth"),
-              "linestyle", get (hl, "linestyle"), 
-              "marker", marker, "parent", hg);
   endfor
 
 endfunction
 
 function update_props (h, d)
   set (get (h, "children"), "color", get (h, "color"), 
-       "linewidth", get (h, "linewidth"), "linestyle", get (h, "linestyle"), 
-       "marker", get (h, "marker"), "markersize", get (h, "markersize"),
-       "markerfacecolor", get (h, "markerfacecolor"),
-       "markeredgecolor", get (h, "markeredgecolor"));
+       "linewidth", get (h, "linewidth"), "linestyle", get (h, "linestyle"));
+endfunction
+
+function update_marker (h, d)
+  kids = get (h, "children");
+  kids (! cellfun (@isempty, get (kids, "ldata"))
+        & ! cellfun (@isempty, get (kids, "xldata"))) = [];
+  set (kids, "marker", get (h, "marker"), "markersize", get (h, "markersize"),
+       "markerfacecolor", get (h, "markerfacecolor"), "markeredgecolor", 
+       get (h, "markeredgecolor"));
 endfunction
 
 function update_data (h, d)
   x = get (h, "xdata");
   y = get (h, "ydata");
   l = get (h, "ldata");
   u = get (h, "udata");
   xl = get (h, "xldata");
