# HG changeset patch
# User Jordi Guti√©rrez Hermoso <jordigh@octave.org>
# Date 1319138893 18000
#      Thu Oct 20 14:28:13 2011 -0500
# Node ID 0206484682c61534292d78be1d77d0f31b5f5029
# Parent  7ee61e56eaedcdc3156bcdb3c838021be400183f
rand.cc: Don't bring the whole std namespace into scope, only unordered_map

diff --git a/src/DLD-FUNCTIONS/rand.cc b/src/DLD-FUNCTIONS/rand.cc
--- a/src/DLD-FUNCTIONS/rand.cc
+++ b/src/DLD-FUNCTIONS/rand.cc
@@ -41,22 +41,16 @@ along with Octave; see the file COPYING.
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "oct-obj.h"
 #include "unwind-prot.h"
 #include "utils.h"
 #include "ov-re-mat.h"
 
-#ifdef USE_UNORDERED_MAP_WITH_TR1
-using namespace std::tr1;
-#else
-using namespace std;
-#endif
-
 /*
 %!shared __random_statistical_tests__
 %! % Flag whether the statistical tests should be run in "make check" or not
 %! __random_statistical_tests__ = 0;
 */
 
 static octave_value
 do_rand (const octave_value_list& args, int nargin, const char *fcn,
@@ -1032,16 +1026,23 @@ Return a row vector containing a random 
 If @var{m} is supplied, return @var{m} unique entries, sampled without\n\
 replacement from @code{1:@var{n}}. The complexity is O(@var{n}) in\n\
 memory and O(@var{m}) in time, unless @var{m} < @var{n}/5, in which case\n\
 O(@var{m}) memory is used as well. The randomization is performed using\n\
 rand(). All permutations are equally likely.\n\
 @seealso{perms}\n\
 @end deftypefn")
 {
+
+#ifdef USE_UNORDERED_MAP_WITH_TR1
+using std::tr1::unordered_map;
+#else
+using std::unordered_map;
+#endif
+
   int nargin = args.length ();
   octave_value retval;
 
   if (nargin == 1 || nargin == 2)
     {
       octave_idx_type n, m;
 
       n = args(0).idx_type_value (true);
