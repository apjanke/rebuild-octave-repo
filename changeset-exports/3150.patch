# HG changeset patch
# User jwe
# Date 886805132 0
#      Fri Feb 06 22:45:32 1998 +0000
# Node ID f60acc8381e79ec57b68c6ddc13b3598ec99f018
# Parent  e67379d502baaa8dbb9ef43178fcf43ed11c58fe
[project @ 1998-02-06 22:45:32 by jwe]

diff --git a/WWW/NEWS-2.html b/WWW/NEWS-2.html
--- a/WWW/NEWS-2.html
+++ b/WWW/NEWS-2.html
@@ -3,16 +3,113 @@
 <head>
 <title> Changes in Octave version 2 </title>
 </head>
 
 <body>
 <h1> News for Octave Version 2 </h1>
 <hr>
 
+<h2>Summary of changes for version 2.0.10</h2>
+
+<ul>
+<li>The built-in variable `PWD' has been removed.  If you need to get
+    the value of the current working directory, use the pwd() function
+    instead.
+</li>
+<p>
+<li>For compatibility with Matlab, Octave's lyap function now solves
+<pre>
+      A*X + X*A' + C = 0
+</pre>
+    instead of
+<pre>
+      A'*X + X*A + C = 0
+</pre>
+    To try to avoid confusion for people who are used to the way
+    Octave behaved in previous versions, a warning is printed the
+    first time lyap is called in a given session.  To completely
+    disable the warning, simply add
+<pre>
+      global __disable_lyap_interface_change_warning__;
+</pre>
+    to your ~/.octaverc file.  The warning will eventually disappear
+    for good in some future version of Octave.
+</li>
+<p>
+<li>New built-in functions for computing Bessel functions:
+    besseli, besselj, besselk, and bessely.
+</li>
+<p>
+<li>The gammai and betai functions are now implemented as built-in
+    functions rather than function files.
+</li>
+<p>
+<li>The new built-in variable `implicit_num_to_str_ok' controls
+    whether Octave converts expressions like `[97, 98, 99, "123"]' to
+    strings.  The default value is 0 unless you use --traditional.
+</li>
+<p>
+<li>The new built-in variable `fixed_point_format' controls whether
+    Octave uses a scaled fixed-point format for displaying matrices.
+    The default value is 0 unless you use --traditional.
+</li>
+<p>
+<li>The function sumsq now computes sum (x .* conj (x)) for complex values.
+</li>
+<p>
+<li>Dynamically linked functions can be cleared.
+</li>
+<p>
+<li>If a .oct file has a time stamp more recent than the time that it
+    was loaded, it is automatically reloaded.  Reloading a .oct file
+    may cause several functions to be cleared automatically.  By
+    default, a warning is printed that lists the names of the
+    functions that will be cleared.  You can suppress the message by
+    setting the new built-in variable `warn_reload_forces_clear' to 0.
+</li>
+<p>
+<li>Global variables are now initialized to the empty matrix, for
+    compatibility with Matlab.
+</li>
+<p>
+<li>Explicit initialization of global variables only happens once.
+    For example, after the following statements are evaluated, g still
+    has the value 1.
+<pre>
+      global g = 1
+      global g = 2
+</pre>
+    This is useful for initializing global variables that are used to
+    maintain state information that is shared among several functions.
+</li>
+<p>
+<li>The new built-in variable max_recursion_depth allows you to
+    prevent Octave from attempting infinite recursion.  The default
+    value is 256.
+</li>
+<p>
+<li>Octave now uses readline version 2.1 and kpathsea 3.0.
+</li>
+<p>
+<li>The libreadline and libkpathsea libraries are no longer installed.
+</li>
+<p>
+<li>The libcruft, liboctave, and liboctinterp libraries are now
+    installed in $libdir/octave instead of just $libdir.
+</li>
+<p>
+<li>It's no longer necessary to have libg++, but you do need to have
+    the GNU implementation of libstdc++.  If you are using gcc 2.7.2,
+    libstdc++ is distributed as part of libg++ 2.7.2.  For later
+    versions, libstdc++ is distributed separately.  For egcs,
+    libstdc++ is included with the compiler distribution.
+</li>
+</ul>
+
 <h2>Summary of changes for version 2.0.9</h2>
 
 This is a bug-fixing release, but there is one new user-visible
 feature:
 
 <ul>
 <li>It is now possible to specify a label for lines in the plot key
     when using the plot function.  For example,
@@ -29,16 +126,17 @@ feature:
 This is a bug-fixing release.  There are only a few new user-visible
 features.
 
 <ul>
 <li>If the argument to eig() is symmetric, Octave uses the specialized
     Lapack subroutine for symmetric matrices for a significant
     increase in performance.
 </li>
+<p>
 <li>It is now possible to use the mkoctfile script to create .oct
     files from multiple source and object files.
 </li>
 </ul>
 
 <h2>Summary of changes for version 2.0.7</h2>
 
 This is a bug-fixing release.  There are no new user-visible features.
@@ -48,47 +146,51 @@ This is a bug-fixing release.  There are
 This is primarily a bug-fixing release.  There are only a few new
 user-visilbe features.
 
 <ul>
 <li>The new built-in variable default_eval_print_flag controls whether
     Octave prints the results of commands executed by eval() that do
     not end with semicolons.  The default is 1.
 </li>
+<p>
 <li>The new built-in constant OCTAVE_HOME specifies the top-level
     directory where Octave is installed.
 </li>
+<p>
 <li>Octave no longer includes functions to work with NPSOL or QPSOL,
     because they are not free software.
 </li>
 </ul>
 
 <h2>Summary of changes for version 2.0.5</h2>
 
 <ul>
 <li>A `switch' statement is now available.  See the Statements chapter
     in the manual for details.
 </li>
+<p>
 <li>Commands like ls, save, and cd may now also be used as formal
     parameters for functions.
-
+</li>
+<p>
 <li>More tests.
 </li>
 </ul>
 
 <h2>Summary of changes for version 2.0.4</h2>
 
 <ul>
 <li>It is now possible to use commands like ls, save, and cd as simple
     variable names.  They still cannot be used as formal parameters
     for functions, or as the names of structure variables.  Failed
     assignments leave them undefined (you can recover the orginal
     function definition using clear).
+</li>
 <p>
-</li>
 <li>Is is now possible to invoke commands like ls, save, and cd as
     normal functions (for example, load ("foo", "x", "y", "z")).
 </li>
 </ul>
 
 <h2>Summary of changes for version 2.0.3</h2>
 
 <ul>
@@ -123,27 +225,27 @@ user-visilbe features.
 </ul>
 
 <h2>Summary of changes for version 2.0.2</h2>
 
 <ul>
 </li>
 <li>Octave now stops executing commands from a script file if an error
     is encountered.
+</li>
 <p>
-</li>
 <li>The return, and break commands now cause Octave to quit executing
     commands from script files.  When used in invalid contexts, the
     break, continue, and return commands are now simply ignored
     instead of producing parse errors.
+</li>
 <p>
-</li>
 <li>size ("") is now [0, 0].
+</li>
 <p>
-</li>
 <li>New functions:
 <dl>
 <dt><b>sleep</b></dt>
 <dd>pause execution for a specified number of seconds</dd>
 <dt><b>usleep</b></dt>
 <dd>pause execution for a specified number of microseconds</dd>
 </dl>
 </li>
diff --git a/WWW/index.html b/WWW/index.html
--- a/WWW/index.html
+++ b/WWW/index.html
@@ -11,17 +11,17 @@
 Octave is a high-level language, primarily intended for numerical
 computations.  It provides a convenient command line interface for
 solving linear and nonlinear problems numerically.
 </p>
 <hr>
 
 <h2>News</h2>
 <p>
-Version 2.0.9 was released Thursday July 10, 1997.  Most bugs reported
+Version 2.0.10 was released Friday February 6, 1998.  Most bugs reported
 since the release of version 2.0 have been fixed.
 </p>
 
 <p>
 Version 2.0 was released Tuesday December 10, 1996.  There are many
 new features including:
 <ul>
 <li>dynamic linking support on more systems</li>
diff --git a/WWW/readme.html b/WWW/readme.html
--- a/WWW/readme.html
+++ b/WWW/readme.html
@@ -315,18 +315,17 @@ compile from source (significantly less 
 debugging symbols or create shared libraries).  Once installed, Octave
 requires approximately 65MB of disk space (again, considerably less if
 you don't build shared libraries or the binaries and libraries do not
 include debugging symbols).
 </p>
 
 <p>
 In order to build Octave, you will need a current version of g++,
-libg++, and GNU make.  Recommended versions are g++ 2.7.2 or 2.7.2.1,
-libg++ 2.7.1 or 2.7.2, and make 3.75.
+libstdc++, and GNU make.
 </p>
 
 <p>
 <b>You must have GNU Make to compile Octave</b>.  Octave's Makefiles
 use features of GNU Make that are not present in other versions of
 make. GNU Make is very portable and easy to install.
 </p>
 
@@ -352,23 +351,23 @@ notice ommissions or inconsistencies, pl
 bug-octave@bevo.che.wisc.edu.  Specific suggestions for ways to
 improve Octave and its documentation are always welcome.
 </p>
 
 <h2><a name="Implementation">Implementation</a></h2>
 <p>
 Octave is being developed with the Free Software Foundation's make,
 bison (a replacement for YACC), flex (a replacement for lex), gcc/g++,
-and libg++ on a SPARCstation II and a DECstation 5000/240.  It should
-be possible to install it on any machine that runs GCC/G++.  It may
-also be possible to install it using other implementations of these
-tools, but it will most certainly require much more work.  Do yourself
-a favor and get the GNU development tools, either via anonymous ftp
-from prep.ai.mit.edu or by writing the Free Software Foundation, 675
-Mass Ave, Cambridge, MA 02139, USA.
+and libstdc++ on an Intel Pentium II system running Linux/GNU.  It
+should be possible to install it on any machine that runs GCC/G++.  It
+may also be possible to install it using other implementations of
+these tools, but it will most certainly require much more work.  Do
+yourself a favor and get the GNU development tools, either via
+anonymous ftp from prep.ai.mit.edu or by writing the Free Software
+Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 </p>
 
 <p>
 The underlying numerical solvers are currently standard Fortran ones
 like Lapack, Linpack, Odepack, the Blas, etc., packaged in a library
 of C++ classes (see the files in the libcruft and liboctave
 subdirectories).  If possible, the Fortran subroutines are compiled
 with the system's Fortran compiler, and called directly from the C++
