# HG changeset patch
# User jwe
# Date 1162044678 0
#      Sat Oct 28 14:11:18 2006 +0000
# Node ID 8d285942fc3c852e42319c57ad14950ab99f45b9
# Parent  f3322fd3c9bbdd853335c71d12cfafe3fe0e1445
[project @ 2006-10-28 14:09:20 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,9 +1,9 @@
-2006-10-27  Michael Goffioul  <michael.goffioul@swing.be>
+2006-10-28  Michael Goffioul  <michael.goffioul@swing.be>
 
 	* configure.in (AH_BOTTOM): If using MSVC, define __WIN32__ before
 	other #ifdefs that use it.
 
 2006-10-27  John W. Eaton  <jwe@octave.org>
 
 	* configure.in (AH_BOTTOM): Move DLL defs to
 	libcruft/misc/oct-dlldefs.h and include it here.
diff --git a/libcruft/ChangeLog b/libcruft/ChangeLog
--- a/libcruft/ChangeLog
+++ b/libcruft/ChangeLog
@@ -1,8 +1,12 @@
+2006-10-28  Michael Goffioul  <michael.goffioul@swing.be>
+
+	* misc/quit.h: Undefine min and max after including windows.h.
+
 2006-10-27  John W. Eaton  <jwe@octave.org>
 
 	* misc/oct-dlldefs.h: New file.
 
 	* mkf77def.in: Downcase all input to simplify matching.
 	Match only lines beginning with whitespace.
 	Match function return types.
 	Use literal TAB characters instead of \t in sed patterns.
diff --git a/libcruft/misc/quit.h b/libcruft/misc/quit.h
--- a/libcruft/misc/quit.h
+++ b/libcruft/misc/quit.h
@@ -32,16 +32,18 @@ extern "C" {
 #include <stdio.h>
 
 #include <signal.h>
 #include <setjmp.h>
 
 #if defined (__WIN32__) && ! defined (_POSIX_VERSION)
 
 #include <windows.h>
+#undef min
+#undef max
 
 CRUFT_API extern void w32_sigint_init (void);   /* setup */
 CRUFT_API extern void w32_raise_final (void);   /* tear down */
 CRUFT_API extern void w32_raise (int sig);      /* raise signal in main thread */
 CRUFT_API extern int w32_in_main_thread (void); /* return true if in main thread */
 
 #endif
 
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,15 @@
+2006-10-28  Michael Goffioul  <michael.goffioul@swing.be>
+
+	* oct-shlib.cc: Undefine min and max after including windows.h.
+	* oct-syscalls.cc (syscalls::pipe (int *)): Avoid infinite recursion.
+	* lo-sysdep.h: Move opendir, readdir, etc. decls here from
+	lo-sysdep.cc.
+
 2006-10-27  John W. Eaton  <jwe@octave.org>
 
 	* oct-time.cc [! HAVE_STRFTIME]: Declare strftime.
 
 2006-10-26  Michael Goffioul  <michael.goffioul@swing.be>
 
 	* mx-op-defs.h (NDS_CMP_OP1, NDS_CMP_OPS1, NDS_CMP_OP2,
 	NDS_CMP_OPS2): New macros.
diff --git a/liboctave/lo-sysdep.cc b/liboctave/lo-sysdep.cc
--- a/liboctave/lo-sysdep.cc
+++ b/liboctave/lo-sysdep.cc
@@ -33,16 +33,17 @@ 02110-1301, USA.
 #include <sys/types.h>
 #endif
 #include <unistd.h>
 #endif
 
 #include "file-ops.h"
 #include "lo-error.h"
 #include "pathlen.h"
+#include "lo-sysdep.h"
 
 std::string
 octave_getcwd (void)
 {
   std::string retval;
 
   char buf[MAXPATHLEN];
 
@@ -87,38 +88,33 @@ octave_chdir (const std::string& path_ar
   delete [] tmp_path;
 
   return retval;
 #else
   return chdir (path.c_str ());
 #endif
 }
 
-#ifdef _MSC_VER
+#if defined (_MSC_VER)
 
 // FIXME -- it would probably be better to adapt the versions of
 // opendir, readdir, and closedir from Emacs as they appear to be more
 // complete implementations (do the functions below work for network
 // paths, for example)?  We can probably get along without rewinddir.
 
 #include <windows.h>
 
-struct direct
-{
-  char *d_name;
-};
-
-typedef struct
+struct __DIR
 {
   HANDLE hnd;
   WIN32_FIND_DATA fd;
   int dirty;
   struct direct d;
-  const char* current;
-} DIR;
+  const char *current;
+};
 
 DIR *
 opendir (const char *name)
 {
   DIR *d = static_cast<DIR *> (malloc (sizeof (DIR)));
   static char buffer[MAX_PATH];
 
   strncpy (buffer, name, MAX_PATH);
@@ -127,17 +123,17 @@ opendir (const char *name)
   d->hnd = FindFirstFile (buffer, &(d->fd));
   if (d->hnd == INVALID_HANDLE_VALUE)
     return 0;
   d->dirty = 1;
   return d;
 }
 
 void
-rewinddir (DIR* d)
+rewinddir (DIR *d)
 {
   if (d->hnd != INVALID_HANDLE_VALUE)
     FindClose (d->hnd);
   d->hnd = FindFirstFile (d->current, &(d->fd));
   d->dirty = 1;
 }
 
 void
diff --git a/liboctave/lo-sysdep.h b/liboctave/lo-sysdep.h
--- a/liboctave/lo-sysdep.h
+++ b/liboctave/lo-sysdep.h
@@ -31,15 +31,36 @@ 02110-1301, USA.
 extern std::string octave_getcwd (void);
 
 extern int octave_chdir (const std::string&);
 
 #if ! defined (HAVE_GETHOSTNAME) && defined (HAVE_SYS_UTSNAME_H)
 extern int gethostname (char *, int);
 #endif
 
+#if defined (_MSC_VER)
+
+// FIXME -- it would probably be better to adapt the versions of
+// opendir, readdir, and closedir from Emacs as they appear to be more
+// complete implementations.  We can probably get along without
+// rewinddir.
+
+struct direct
+{
+  char *d_name;
+};
+
+typedef struct __DIR DIR;
+
+extern DIR* opendir (const char *name);
+extern void rewinddir (DIR *d);
+extern void closedir (DIR *d);
+extern struct direct *readdir (DIR *d);
+
+#endif
+
 #endif
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
diff --git a/liboctave/oct-shlib.cc b/liboctave/oct-shlib.cc
--- a/liboctave/oct-shlib.cc
+++ b/liboctave/oct-shlib.cc
@@ -44,16 +44,18 @@ extern void *dlopen (const char *, int);
 extern const char *dlerror (void);
 extern void *dlsym (void *, const char *);
 extern int dlclose (void *);
 #endif
 #elif defined (HAVE_SHL_LOAD_API)
 #include <dl.h>
 #elif defined (HAVE_LOADLIBRARY_API)
 #include <windows.h>
+#undef min
+#undef max
 #endif
 }
 
 #include "file-stat.h"
 #include "lo-error.h"
 #include "oct-shlib.h"
 #include "str-vec.h"
 
diff --git a/liboctave/oct-syscalls.cc b/liboctave/oct-syscalls.cc
--- a/liboctave/oct-syscalls.cc
+++ b/liboctave/oct-syscalls.cc
@@ -268,17 +268,17 @@ octave_syscalls::geteuid (void)
   return 0;
 #endif
 }
 
 int
 octave_syscalls::pipe (int *fildes)
 {
   std::string msg;
-  return pipe (fildes);
+  return pipe (fildes, msg);
 }
 
 int
 octave_syscalls::pipe (int *fildes, std::string& msg)
 {
   msg = std::string ();
 
   int status = -1;
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2006-10-28  Michael Goffioul  <michael.goffioul@swing.be>
+
+	* mappers.cc (install_mapper_functions): Undefine toascii before
+	the DEFUN_MAPPER for it.
+
 2006-10-27  John W. Eaton  <jwe@octave.org>
 
 	* mexproto.h: Include oct-dlldefs.h.
 
 	* pr-output.cc (SPECIALIZE_UABS): New macro.
 	Use it to generate specializations of abs for unsigned int types.
 	Instantiate abs for signed int types.
 
diff --git a/src/mappers.cc b/src/mappers.cc
--- a/src/mappers.cc
+++ b/src/mappers.cc
@@ -605,16 +605,20 @@ Compute tangent of each element of @var{
 @end deftypefn");
 
   DEFUN_MAPPER (tanh, 0, 0, 0, tanh, 0, std::tanh, 0.0, 0.0, 0, 0,
     "-*- texinfo -*-\n\
 @deftypefn {Mapping Function} {} tanh (@var{x})\n\
 Compute hyperbolic tangent of each element of @var{x}.\n\
 @end deftypefn");
 
+#ifdef toascii
+#undef toascii
+#endif
+
   DEFUN_MAPPER (toascii, xtoascii, 0, 0, 0, 0, 0, 0.0, 0.0, 1, 0,
     "-*- texinfo -*-\n\
 @deftypefn {Mapping Function} {} toascii (@var{s})\n\
 Return ASCII representation of @var{s} in a matrix.  For example,\n\
 \n\
 @example\n\
 @group\n\
 toascii (\"ASCII\")\n\
