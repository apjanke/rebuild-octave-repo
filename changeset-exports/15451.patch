# HG changeset patch
# User Rik <rik@octave.org>
# Date 1348867374 25200
#      Fri Sep 28 14:22:54 2012 -0700
# Node ID 219479b461b8705b0724664c12fa426f775ee100
# Parent  1b4d7c703eedec981856633b5f674fa211eea2a2
build: Add missing tests and gnulib modules suggested by autoscan.

* build-aux/bootstrap_gnulib.conf: Add float and stddef header modules.

* libgnu/Makefile.am: Automatically re-generated when module list changed.

* configure.ac: Add function check for isascii, modf, pow, sqrt.
Add function check for chown, ftruncate, mmap, munmap when building GUI.

* libinterp/interpfcn/toplev.cc: Add gnulib:: qualifier to malloc call.

* liboctave/util/oct-shlib.cc: Add gnulib:: qualifier to strerror call.

diff --git a/build-aux/bootstrap_gnulib.conf b/build-aux/bootstrap_gnulib.conf
--- a/build-aux/bootstrap_gnulib.conf
+++ b/build-aux/bootstrap_gnulib.conf
@@ -26,16 +26,17 @@ gnulib_modules="
   copysign
   copysignf
   crypto/md5
   dup2
   fclose
   fcntl
   fflush
   filemode
+  float
   floor
   floorf
   fnmatch
   fopen
   fseek
   ftell
   getcwd
   gethostname
@@ -64,16 +65,17 @@ gnulib_modules="
   round
   roundf
   select
   sigaction
   signal
   sigprocmask
   sleep
   stat
+  stddef
   stdint
   stdio
   strerror
   strftime
   strptime
   symlink
   sys_stat
   sys_time
diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -1913,21 +1913,21 @@ gl_INIT
 
 ### Checks for functions and variables.
 
 dnl Use multiple AC_CHECKs to avoid line continuations '\' in list
 AC_CHECK_FUNCS([basename canonicalize_file_name chmod dup2])
 AC_CHECK_FUNCS([endgrent endpwent execvp expm1 expm1f fork])
 AC_CHECK_FUNCS([getegid geteuid getgid getgrent getgrgid getgrnam])
 AC_CHECK_FUNCS([getpgrp getpid getppid getpwent getpwuid getuid getwd])
-AC_CHECK_FUNCS([kill lgamma lgammaf lgamma_r lgammaf_r])
-AC_CHECK_FUNCS([localtime_r log1p log1pf mkstemp pipe putenv])
+AC_CHECK_FUNCS([isascii kill lgamma lgammaf lgamma_r lgammaf_r])
+AC_CHECK_FUNCS([localtime_r log1p log1pf mkstemp modf pipe pow putenv])
 AC_CHECK_FUNCS([realpath resolvepath rindex roundl select setgrent])
 AC_CHECK_FUNCS([setlocale setpwent setvbuf siglongjmp])
-AC_CHECK_FUNCS([strsignal tempnam tgammaf umask])
+AC_CHECK_FUNCS([sqrt strsignal tempnam tgammaf umask])
 AC_CHECK_FUNCS([uname utime x_utime waitpid])
 AC_CHECK_FUNCS([_chmod _kbhit _utime32])
 
 ## exp2, round, tgamma function checks
 AC_LANG_PUSH(C++)
 AC_CHECK_DECLS([exp2, round, tgamma], [], [], [[#include <cmath>]])
 AC_CHECK_FUNCS([exp2 round tgamma])
 AH_VERBATIM([Z_FUNCS_AND_DECLS], [
@@ -2273,16 +2273,18 @@ if test $build_gui = true; then
   case $canonical_host_type in
     *-*-mingw* | *-*-msdosmsvc*)
       win32_terminal=yes
       ;;
     *)
       AC_CHECK_HEADERS([pty.h libutil.h util.h])
       AC_SEARCH_LIBS([openpty], [util],
         [AC_DEFINE(HAVE_OPENPTY, [], [Define whether openpty exists])])
+      AC_CHECK_FUNCS([chown ftruncate mmap munmap], [],
+                     [AC_MSG_ERROR([Missing function required by GUI])])
       ;;
   esac
 else
   ## GUI disabled.  Eliminate building GUIDIR directory
   GUIDIR=
 fi
 AM_CONDITIONAL([AMCOND_BUILD_GUI], [test $build_gui = true])
 AM_CONDITIONAL([WIN32_TERMINAL], [test $win32_terminal = yes])
diff --git a/libgnu/Makefile.am b/libgnu/Makefile.am
--- a/libgnu/Makefile.am
+++ b/libgnu/Makefile.am
@@ -16,17 +16,17 @@
 # along with this file.  If not, see <http://www.gnu.org/licenses/>.
 #
 # As a special exception to the GNU General Public License,
 # this file may be distributed as part of a program that
 # contains a configuration script generated by Autoconf, under
 # the same distribution terms as the rest of that program.
 #
 # Generated by gnulib-tool.
-# Reproduce by: gnulib-tool --import --dir=. --local-dir=gl --lib=libgnu --source-base=libgnu --m4-base=m4 --doc-base=doc --tests-base=tests --aux-dir=build-aux --no-conditional-dependencies --libtool --macro-prefix=gl base64 canonicalize chdir close closedir copysign copysignf crypto/md5 dup2 fclose fcntl fflush filemode floor floorf fnmatch fopen fseek ftell getcwd gethostname getopt-gnu gettimeofday glob isatty link lstat malloc-gnu mkdir mkfifo mkostemp mktime nanosleep nproc open opendir pathmax progname readdir readlink realloc-gnu rename rmdir round roundf select sigaction signal sigprocmask sleep stat stdint stdio strerror strftime strptime symlink sys_stat sys_time sys_times time times tmpfile trunc truncf unistd unlink vasprintf
+# Reproduce by: gnulib-tool --import --dir=. --local-dir=gl --lib=libgnu --source-base=libgnu --m4-base=m4 --doc-base=doc --tests-base=tests --aux-dir=build-aux --no-conditional-dependencies --libtool --macro-prefix=gl base64 canonicalize chdir close closedir copysign copysignf crypto/md5 dup2 fclose fcntl fflush filemode float floor floorf fnmatch fopen fseek ftell getcwd gethostname getopt-gnu gettimeofday glob isatty link lstat malloc-gnu mkdir mkfifo mkostemp mktime nanosleep nproc open opendir pathmax progname readdir readlink realloc-gnu rename rmdir round roundf select sigaction signal sigprocmask sleep stat stddef stdint stdio strerror strftime strptime symlink sys_stat sys_time sys_times time times tmpfile trunc truncf unistd unlink vasprintf
 
 AUTOMAKE_OPTIONS = 1.5 gnits
 
 SUBDIRS =
 noinst_HEADERS =
 noinst_LIBRARIES =
 noinst_LTLIBRARIES =
 EXTRA_DIST =
diff --git a/libinterp/interpfcn/toplev.cc b/libinterp/interpfcn/toplev.cc
--- a/libinterp/interpfcn/toplev.cc
+++ b/libinterp/interpfcn/toplev.cc
@@ -1519,21 +1519,21 @@ extern vfp __new_handler;
 void *
 __builtin_new (size_t sz)
 {
   void *p;
 
   /* malloc (0) is unpredictable; avoid it.  */
   if (sz == 0)
     sz = 1;
-  p = malloc (sz);
+  p = gnulib::malloc (sz);
   while (p == 0)
     {
       (*__new_handler) ();
-      p = malloc (sz);
+      p = gnulib::malloc (sz);
     }
 
   if (debug_new_delete)
     std::cerr << "__builtin_new: " << p << std::endl;
 
   return p;
 }
 
diff --git a/liboctave/util/oct-shlib.cc b/liboctave/util/oct-shlib.cc
--- a/liboctave/util/oct-shlib.cc
+++ b/liboctave/util/oct-shlib.cc
@@ -267,17 +267,17 @@ octave_shl_load_shlib::octave_shl_load_s
 {
   file = f;
 
   library = shl_load (file.c_str (), BIND_IMMEDIATE, 0L);
 
   if (! library)
     {
       using namespace std;
-      (*current_liboctave_error_handler) ("%s", strerror (errno));
+      (*current_liboctave_error_handler) ("%s", gnulib::strerror (errno));
     }
 }
 
 octave_shl_load_shlib::~octave_shl_load_shlib (void)
 {
   if (library)
     shl_unload (library);
 }
