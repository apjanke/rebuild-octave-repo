# HG changeset patch
# User Rik <rik@octave.org>
# Date 1371667002 25200
#      Wed Jun 19 11:36:42 2013 -0700
# Node ID 8d188159ce5f1728a0f84e5fe7c5f28ffbe56478
# Parent  3542e106c496f04c339946ff6b9d67c3c5305e7f
Add -W command line option to disable window system (bug #38937)

* libinterp/octave.cc: Add -W as a short form of --no-window-system
option.

* doc/interpreter/basics.txi: Add -W command line form to documentation.

diff --git a/doc/interpreter/basics.txi b/doc/interpreter/basics.txi
--- a/doc/interpreter/basics.txi
+++ b/doc/interpreter/basics.txi
@@ -180,17 +180,18 @@ Disable the JIT compiler used for accele
 @item --no-line-editing
 @cindex @code{--no-line-editing}
 Disable command-line editing.
 
 @item --no-site-file
 @cindex @code{--no-site-file}
 Don't read the site-wide @file{octaverc} initialization files.
 
-@item --no-window-system
+@item  --no-window-system
+@itemx -W
 @cindex @code{--no-window-system}
 Disable use of a windowing system including graphics.  This forces a
 strictly terminal-only environment.
 
 @item  --norc
 @itemx -f
 @cindex @code{--norc}
 @cindex @code{-f}
diff --git a/libinterp/octave.cc b/libinterp/octave.cc
--- a/libinterp/octave.cc
+++ b/libinterp/octave.cc
@@ -145,34 +145,34 @@ static std::list<std::string> command_li
 // (--exec-path)
 static std::string exec_path;
 
 // The value for "IMAGE_PATH" specified on the command line.
 // (--image-path)
 static std::string image_path;
 
 // If TRUE, ignore the window system even if it is available.
-// (--no-window-system)
+// (--no-window-system, -W)
 static bool no_window_system = false;
 
 // Usage message
 static const char *usage_string =
-  "octave [-HVdfhiqvx] [--debug] [--echo-commands] [--eval CODE]\n\
+  "octave [-HVWdfhiqvx] [--debug] [--echo-commands] [--eval CODE]\n\
        [--exec-path path] [--force-gui] [--help] [--image-path path]\n\
        [--info-file file] [--info-program prog] [--interactive]\n\
        [--jit-debugging] [--line-editing] [--no-gui] [--no-history]\n\
        [--no-init-file] [--no-init-path] [--no-jit-compiler]\n\
        [--no-line-editing] [--no-site-file] [--no-window-system]\n\
        [-p path] [--path path] [--silent] [--traditional]\n\
        [--verbose] [--version] [file]";
 
 // This is here so that it's more likely that the usage message and
 // the real set of options will agree.  Note: the '+' must come first
 // to prevent getopt from permuting arguments!
-static const char *short_opts = "+HVdfhip:qvx";
+static const char *short_opts = "+HWVdfhip:qvx";
 
 // The code to evaluate at startup (--eval CODE)
 static std::string code_to_eval;
 
 // If TRUE, don't exit after evaluating code given by --eval option.
 static bool persist = false;
 
 // If TRUE, the GUI should be started.
@@ -194,20 +194,19 @@ static bool traditional = false;
 #define JIT_DEBUGGING_OPTION 9
 #define LINE_EDITING_OPTION 10
 #define NO_GUI_OPTION 11
 #define NO_INIT_FILE_OPTION 12
 #define NO_INIT_PATH_OPTION 13
 #define NO_JIT_COMPILER_OPTION 14
 #define NO_LINE_EDITING_OPTION 15
 #define NO_SITE_FILE_OPTION 16
-#define NO_WINDOW_SYSTEM_OPTION 17
-#define PERSIST_OPTION 18
-#define TEXI_MACROS_FILE_OPTION 19
-#define TRADITIONAL_OPTION 20
+#define PERSIST_OPTION 17
+#define TEXI_MACROS_FILE_OPTION 18
+#define TRADITIONAL_OPTION 19
 struct option long_opts[] = {
   { "braindead",                no_argument,       0, TRADITIONAL_OPTION },
   { "built-in-docstrings-file", required_argument, 0, BUILT_IN_DOCSTRINGS_FILE_OPTION },
   { "debug",                    no_argument,       0, 'd' },
   { "doc-cache-file",           required_argument, 0, DOC_CACHE_FILE_OPTION },
   { "echo-commands",            no_argument,       0, 'x' },
   { "eval",                     required_argument, 0, EVAL_OPTION },
   { "exec-path",                required_argument, 0, EXEC_PATH_OPTION },
@@ -221,17 +220,17 @@ struct option long_opts[] = {
   { "line-editing",             no_argument,       0, LINE_EDITING_OPTION },
   { "no-gui",                   no_argument,       0, NO_GUI_OPTION },
   { "no-history",               no_argument,       0, 'H' },
   { "no-init-file",             no_argument,       0, NO_INIT_FILE_OPTION },
   { "no-init-path",             no_argument,       0, NO_INIT_PATH_OPTION },
   { "no-jit-compiler",          no_argument,       0, NO_JIT_COMPILER_OPTION },
   { "no-line-editing",          no_argument,       0, NO_LINE_EDITING_OPTION },
   { "no-site-file",             no_argument,       0, NO_SITE_FILE_OPTION },
-  { "no-window-system",         no_argument,       0, NO_WINDOW_SYSTEM_OPTION },
+  { "no-window-system",         no_argument,       0, 'W' },
   { "norc",                     no_argument,       0, 'f' },
   { "path",                     required_argument, 0, 'p' },
   { "persist",                  no_argument,       0, PERSIST_OPTION },
   { "quiet",                    no_argument,       0, 'q' },
   { "silent",                   no_argument,       0, 'q' },
   { "texi-macros-file",         required_argument, 0, TEXI_MACROS_FILE_OPTION },
   { "traditional",              no_argument,       0, TRADITIONAL_OPTION },
   { "verbose",                  no_argument,       0, 'V' },
@@ -537,17 +536,17 @@ Options:\n\
   --line-editing          Force readline use for command-line editing.\n\
   --no-gui                Disable the graphical user interface.\n\
   --no-history, -H        Don't save commands to the history list\n\
   --no-init-file          Don't read the ~/.octaverc or .octaverc files.\n\
   --no-init-path          Don't initialize function search path.\n\
   --no-jit-compiler       Disable the JIT compiler.\n\
   --no-line-editing       Don't use readline for command-line editing.\n\
   --no-site-file          Don't read the site-wide octaverc file.\n\
-  --no-window-system      Disable window system, including graphics.\n\
+  --no-window-system, -W  Disable window system, including graphics.\n\
   --norc, -f              Don't read any initialization files.\n\
   --path PATH, -p PATH    Add PATH to head of function search path.\n\
   --persist               Go interactive after --eval or reading from FILE.\n\
   --silent, -q            Don't print message at startup.\n\
   --texi-macros-file FILE Use Texinfo macros in FILE for makeinfo command.\n\
   --traditional           Set variables for closer MATLAB compatibility.\n\
   --verbose, -V           Enable verbose output in some cases.\n\
   --version, -v           Print version number and exit.\n\
@@ -680,16 +679,20 @@ octave_process_command_line (int argc, c
           usage ();
           break;
 
         case 'H':
           Fsaving_history (octave_value (false));
           read_history_file = false;
           break;
 
+        case 'W':
+          no_window_system = true;
+          break;
+
         case 'V':
           verbose_flag = true;
           break;
 
         case 'd':
           // This is the same as yydebug in parse.y.
           octave_debug++;
           break;
@@ -798,20 +801,16 @@ octave_process_command_line (int argc, c
         case NO_LINE_EDITING_OPTION:
           line_editing = false;
           break;
 
         case NO_SITE_FILE_OPTION:
           read_site_files = 0;
           break;
 
-        case NO_WINDOW_SYSTEM_OPTION:
-          no_window_system = true;
-          break;
-
         case PERSIST_OPTION:
           persist = true;
           break;
 
         case TEXI_MACROS_FILE_OPTION:
           if (optarg)
             Ftexi_macros_file (octave_value (optarg));
           break;
