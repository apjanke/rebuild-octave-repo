# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1265783393 -3600
#      Wed Feb 10 07:29:53 2010 +0100
# Node ID fc879f361bdab5b13bb278360c78db705c529969
# Parent  1756b3035282f7fbbbd4a524972a5d1eb42afed0
make isreal matlab compatible

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,14 @@
+2010-02-10  Jaroslav Hajek  <highegg@gmail.com>
+
+	* ov-str-mat.h (octave_char_matrix_str::is_real_type): Delete
+	overload.
+	* data.cc (Fisreal): Improve docs.
+
 2010-02-10  Jaroslav Hajek  <highegg@gmail.com>
 
 	* data.cc (Fisnumeric): Improve documentation.
 	(Fismatrix): Ditto.
 
 2010-02-09  John W. Eaton  <jwe@octave.org>
 
 	* graphics.cc, graphics.h.in
diff --git a/src/DLD-FUNCTIONS/cellfun.cc b/src/DLD-FUNCTIONS/cellfun.cc
--- a/src/DLD-FUNCTIONS/cellfun.cc
+++ b/src/DLD-FUNCTIONS/cellfun.cc
@@ -772,18 +772,18 @@ cellfun (@@factorial, @{-1,2@},'ErrorHan
 %!  assert (A, [true, false, true, false]);
 %!test
 %!  A = cellfun (@(x) islogical(x), {true, 0.1, false, i*2});
 %!  assert (A, [true, false, true, false]);
 
 %% First input argument can be the special string "isreal",
 %% "isempty", "islogical", "length", "ndims" or "prodofsize"
 %!test
-%!  A = cellfun ("isreal", {true, 0.1, false, i*2, [], "abc"});
-%!  assert (A, [true, true, true, false, true, false]);
+%!  A = cellfun ("isreal", {true, 0.1, {}, i*2, [], "abc"});
+%!  assert (A, [true, true, false, false, true, true]);
 %!test
 %!  A = cellfun ("isempty", {true, 0.1, false, i*2, [], "abc"});
 %!  assert (A, [false, false, false, false, true, false]);
 %!test
 %!  A = cellfun ("islogical", {true, 0.1, false, i*2, [], "abc"});
 %!  assert (A, [true, false, true, false, false, false]);
 %!test
 %!  A = cellfun ("length", {true, 0.1, false, i*2, [], "abc"});
diff --git a/src/data.cc b/src/data.cc
--- a/src/data.cc
+++ b/src/data.cc
@@ -3272,17 +3272,19 @@ complex ([1, 2], [3, 4])\n\
     print_usage ();
 
   return retval;
 }
 
 DEFUN (isreal, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} isreal (@var{x})\n\
-Return true if @var{x} is a real-valued numeric object.\n\
+Return true if @var{x} is a non-complex matrix or scalar.\n\
+For compatibility with Matlab, this includes logical and character\n\
+matrices.\n\
 @end deftypefn")
 {
   octave_value retval;
 
   if (args.length () == 1)
     retval = args(0).is_real_type ();
   else
     print_usage ();
diff --git a/src/ov-str-mat.h b/src/ov-str-mat.h
--- a/src/ov-str-mat.h
+++ b/src/ov-str-mat.h
@@ -102,18 +102,16 @@ public:
 
   octave_value resize (const dim_vector& dv, bool fill = false) const;
 
   octave_value diag (octave_idx_type k = 0) const
     { return octave_value (matrix.diag (k)); }
 
   bool is_string (void) const { return true; }
 
-  bool is_real_type (void) const { return false; }
-
   bool is_numeric_type (void) const { return false; }
 
   double double_value (bool = false) const;
 
   Matrix matrix_value (bool = false) const;
 
   NDArray array_value (bool = false) const;
 
