# HG changeset patch
# User dbateman
# Date 1170188239 0
#      Tue Jan 30 20:17:19 2007 +0000
# Node ID ea3a7e8469e98f343fe87084248fbca449beb1f1
# Parent  44c91c5dfe1d28804331b30ab53ba394131ee49f
[project @ 2007-01-30 20:17:19 by dbateman]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,91 +1,15 @@
-<<<<<<< ChangeLog
-2007-01-24  David Bateman  <dbateman@free.fr>
-
-	* pkg/pkg.m: Install ChangeLog file if it exists.
-	Delete bare newline in string passed to write_INDEX.
-
-	* sparse/sprandsym.m: Make work for even values of N.
-
-2007-01-24  John W. Eaton  <jwe@octave.org>
-
-	* miscellaneous/news.m: New file.
-
-2007-01-23  Luis F. Ortiz  <lortiz@interactivesupercomputing.com>
-
-	* strings/strncmpi.m: Use strncmp instead of calling strtrunc on args.
-
-	* strings/strncmp.m: Delete (we now have a built-in version).
-
-2007-01-22  Bob Weigel <rweigel@gmu.edu>
-
-	* testfun/test.m: Check for all files in path, use first found.
-
-2007-01-22  David Bateman  <dbateman@free.fr>
-
-	* polynomial/spline.m: Make DG a column instead of a row vector.
-
-2007-01-18  Søren Hauberg  <hauberg@gmail.com>
-
-	* pkg/pkg.m (copy_files): Call write_INDEX with correct target
-	file name.
-
-	* image/ind2rgb.m: Better input checking.  Return 3-d array if
-	nargout is 1.  Handle colormaps that have too few colors.
-
-	* pkg/pkg.m (create_pkgadddel): Call fullfile with nm, not "nm".
-	(configure_make): Use fullfile instead of concatenating with "/".
-
-2007-01-10  Baylis Shanks  <bshanks3@hotmail.com>
-
-	* set/ismember.m: Handle N-d arrays.
-
-2007-01-10  David Bateman  <dbateman@free.fr>
-
-	* elfun/acosd.m, elfun/acotd.m, elfun/acscd.m, elfun/asecd.m,
-	elfun/asind.m, elfun/atand.m, elfun/cosd.m, elfun/cotd.m,
-	elfun/cscd.m, elfun/secd.m, elfun/sind.m, elfun/tand.m:
-	New files.
-
-2007-01-09  Søren Hauberg  <hauberg@gmail.com>
-
-         * pkg/pkg.m: Allow filenames to contain glob patterns.
-
-2007-01-08  Søren Hauberg  <hauberg@gmail.com>
-
-	* pkg/pkg.m: Use copyfile instead of calling system.  Use fullfile
-	instead of concatenating with "/".  Use mlock to ensure that
-	persistent variables are not clobbered if user types clear all.
-
-2007-01-08  John W. Eaton  <jwe@octave.org>
-
-	* miscellaneous/copyfile.m, miscellaneous/movefile.m:
-	Improve handling of file names containing globbing characters.
-	From Søren Hauberg <hauberg@gmail.com>.
-
-2007-01-05  John W. Eaton  <jwe@octave.org>
-
-	* optimization/optimset.m, optimization/__fsolve_defopts__.m:
-	New files.
-
-2006-12-30  John W. Eaton  <jwe@octave.org>
-
-	* sparse/spfun.m: Check for "function_handle" not "function handle".
-	* plot/fplot.m: Likewise.  Use isa instead of strcmp + class.
-
-2006-12-27  Søren Hauberg  <hauberg@gmail.com>
-
-	* image/imshow.m: Strip NaNs from image.
-
-2006-12-08  David Bateman  <dbateman@free.fr>
-
-	* sparse/normest.m: New file.
-
-=======
+2007-01-30  David Bateman  <dbateman@free.fr>
+
+	* pkg/pkg.m (pkg, isautoload, install, load_packages): Add ability
+	to flag a package as to be autoloaded. Add install flags -noauto, 
+	-auto to force autoload behavior.
+	(installed_packages): Make list of installed packages unique.
+
 2007-01-29  John W. Eaton  <jwe@octave.org>
 
 	* plot/subplot.m: Set nextplot property of current figure to "add".
 
 	* plot/__uiobject_draw_axes__.m: Only handle outerposition
 	property if it exists.
 
 2007-01-26  John W. Eaton  <jwe@octave.org>
@@ -191,30 +115,66 @@ 2007-01-25  John W. Eaton  <jwe@octave.o
 
 2007-01-24  John W. Eaton  <jwe@octave.org>
 
 	* plot/Makefile.in ($(GEN_M)): Depend on __uiobject_globals__.m.
 
 	* plot/__uiobject_globals__.m: Call __lock_global__ when
 	initializing each global variable.
 
+2007-01-24  David Bateman  <dbateman@free.fr>
+
+	* pkg/pkg.m: Install ChangeLog file if it exists.
+	Delete bare newline in string passed to write_INDEX.
+
+	* sparse/sprandsym.m: Make work for even values of N.
+
+2007-01-24  John W. Eaton  <jwe@octave.org>
+
+	* miscellaneous/news.m: New file.
+
+2007-01-23  Luis F. Ortiz  <lortiz@interactivesupercomputing.com>
+
+	* strings/strncmpi.m: Use strncmp instead of calling strtrunc on args.
+
+	* strings/strncmp.m: Delete (we now have a built-in version).
+
+2007-01-22  Bob Weigel <rweigel@gmu.edu>
+
+	* testfun/test.m: Check for all files in path, use first found.
+
+2007-01-22  David Bateman  <dbateman@free.fr>
+
+	* polynomial/spline.m: Make DG a column instead of a row vector.
+
 2007-01-18  John W. Eaton  <jwe@octave.org>
 
 	* plot/__uiobject_globals__.m (__uiobject_handles_free_list__,
 	__uiobject_figure_handles_free_list__): New global variables.
 	* plot/__uiobject_get_handle__.m, plot/__uiobject_free__.m:
 	Place unused handles on the free list.
 
 	* plot/__uiobject_get_figure_handle__.in: Delete.
 	* plot/Makefile.in: Delete it from the SOURCES_IN list.
 
 	* plot/__uiobject_init_figure__.in: Perform allocation of figure
 	handles here.  Return figure handle.
 	* plot/figure.m: Call __uiobject_init_figure__ to allocate handle.
 
+2007-01-18  Søren Hauberg  <hauberg@gmail.com>
+
+	* pkg/pkg.m (copy_files): Call write_INDEX with correct target
+	file name.
+
+	* image/ind2rgb.m: Better input checking.  Return 3-d array if
+	nargout is 1.  Handle colormaps that have too few colors.
+
+	* pkg/pkg.m (create_pkgadddel): Call fullfile with nm, not "nm".
+	(configure_make): Use fullfile instead of concatenating with "/".
+
 2007-01-11  John W. Eaton  <jwe@octave.org>
 
 	* plot/__uiobject_draw_axes__.m: Use "%g", not "%.4g" when writing
 	data for gnuplot.
 
 	* plot/Makefile.in (SOURCES_M, SOURCES_IN, GEN_M): New lists of
 	files.
 	(SOURCES): Include $(SOURCES_M) and $(SOURCES_M) in the list.
@@ -245,16 +205,61 @@ 2007-01-11  John W. Eaton  <jwe@octave.o
 	for obj.title, obj.xlabel, obj.ylabel, obj.zlabel.
 	* plot/__uiobject_axes_dtor__.m, plot/__uiobject_axis_init__.m:
 	Inline code to delete children.
 	* plot/__uiobject_free__.m: Arg is now handle, not index into
 	__uiobject_list__.
 	* plot/clf.m, plot/closereq.m, plot/newplot.m: No need to remove
 	and free child.
 
+2007-01-10  Baylis Shanks  <bshanks3@hotmail.com>
+
+	* set/ismember.m: Handle N-d arrays.
+
+2007-01-10  David Bateman  <dbateman@free.fr>
+
+	* elfun/acosd.m, elfun/acotd.m, elfun/acscd.m, elfun/asecd.m,
+	elfun/asind.m, elfun/atand.m, elfun/cosd.m, elfun/cotd.m,
+	elfun/cscd.m, elfun/secd.m, elfun/sind.m, elfun/tand.m:
+	New files.
+
+2007-01-09  Søren Hauberg  <hauberg@gmail.com>
+
+         * pkg/pkg.m: Allow filenames to contain glob patterns.
+
+2007-01-08  Søren Hauberg  <hauberg@gmail.com>
+
+	* pkg/pkg.m: Use copyfile instead of calling system.  Use fullfile
+	instead of concatenating with "/".  Use mlock to ensure that
+	persistent variables are not clobbered if user types clear all.
+
+2007-01-08  John W. Eaton  <jwe@octave.org>
+
+	* miscellaneous/copyfile.m, miscellaneous/movefile.m:
+	Improve handling of file names containing globbing characters.
+	From Søren Hauberg <hauberg@gmail.com>.
+
+2007-01-05  John W. Eaton  <jwe@octave.org>
+
+	* optimization/optimset.m, optimization/__fsolve_defopts__.m:
+	New files.
+
+2006-12-30  John W. Eaton  <jwe@octave.org>
+
+	* sparse/spfun.m: Check for "function_handle" not "function handle".
+	* plot/fplot.m: Likewise.  Use isa instead of strcmp + class.
+
+2006-12-27  Søren Hauberg  <hauberg@gmail.com>
+
+	* image/imshow.m: Strip NaNs from image.
+
+2006-12-08  David Bateman  <dbateman@free.fr>
+
+	* sparse/normest.m: New file.
+
 2006-12-08  John W. Eaton  <jwe@octave.org>
 
 	* plot/gcf.m: Check if the root figure object's currentfigure
 	handle is empty, not 0.
 	* plot/__uiobject_root_figure_ctor__.m:
 	Set currentfigure to [], not 0.
 
 	* plot/stairs.m: Handle matrix arguments.  Improve compatibility.
@@ -299,17 +304,16 @@ 2006-12-07  John W. Eaton  <jwe@octave.o
 
 	* plot/__do_legend__.m, plot/__gnuplot_version__.m,
 	plot/__init_plot_vars__.m, plot/__make_using_clause__.m,
 	plot/__plot_globals__.m, plot/__plr__.m, plot/__render_plot1__.m,
 	plot/__render_plot__.m, plot/__setup_plot__.m, plot/axis.m,
 	plot/contour.m, plot/mplot.m, plot/multiplot.m, plot/oneplot.m,
 	plot/plot_border.m, plot/subwindow.m: Delete.
 
->>>>>>> 1.656.2.18
 2006-12-06  Michael Goffioul  <michael.goffioul@swing.be>.
 
 	* miscellaneous/copyfile.m, miscellaneous/movefile.m:
 	Work on Windows systems without cp or mv.
 
 	* startup/inputrc: Include sequences for Windows.
 
 2006-12-06  Søren Hauberg  <hauberg@gmail.com>
diff --git a/scripts/pkg/pkg.m b/scripts/pkg/pkg.m
--- a/scripts/pkg/pkg.m
+++ b/scripts/pkg/pkg.m
@@ -28,16 +28,24 @@
 ## @end example
 ## @noindent
 ## installs the package found in the file @code{image-1.0.0.tar.gz}.
 ##
 ## If @var{option} is @code{-nodeps} the package manager will disable the
 ## dependency checking. That way it is possible to install a package even
 ## if it depends on another package that's not installed on the system.
 ## @strong{Use this option with care.}
+##
+## If @var{option} is @code{-noauto} the package manager will not
+## automatically load the installed package when starting Octave,
+## even if the package requests that it is.
+##
+## If @var{option} is @code{-auto} the package manager will
+## automatically load the installed package when starting Octave,
+## even if the package requests that it isn't.
 ## @item uninstall
 ## Uninstall named packages.  For example,
 ## @example
 ## pkg uninstall image
 ## @end example
 ## @noindent
 ## removes the @code{image} package from the system. If another installed
 ## package depends on the @code{image} package an error will be issued.
@@ -109,16 +117,17 @@
 ## It is possible to get the current value of global_list with the following
 ## @example
 ## pkg global_list
 ## @end example
 ## @end table
 ## @end deftypefn
 
 ## PKG_ADD: mark_as_command pkg
+## PKG_ADD: pkg ("load", "auto");
 
 function [local_packages, global_packages] = pkg(varargin)
     ## Installation prefix (XXX: what should these be on windows?)
     persistent prefix = -1;
     persistent local_list = tilde_expand("~/.octave_packages");
     persistent global_list = fullfile (OCTAVE_HOME (), "/share/octave/octave_packages");
     mlock;
 
@@ -132,21 +141,26 @@ function [local_packages, global_package
     prefix = tilde_expand(prefix);
 
     ## Handle input
     if (length(varargin) == 0 || !iscellstr(varargin))
         print_usage();
     endif
     files = {};
     deps = true;
+    auto = 0;
     action = "none";
     for i = 1:length(varargin)
         switch (varargin{i})
             case "-nodeps"
                 deps = false;
+            case "-noauto"
+	        auto = -1;
+            case "-auto"
+	        auto = 1;
             case {"list", "install", "uninstall", "load", "unload", ...
                   "prefix", "local_list", "global_list"}
                 action = varargin{i};
             otherwise
                 files{end+1} = varargin{i};
         endswitch
     endfor
     
@@ -161,25 +175,25 @@ function [local_packages, global_package
                 [local_packages, global_packages] = installed_packages(local_list, global_list);
             else
                 error("Too many output arguments requested.");
             endif
         case "install"
             if (length(files) == 0)
                 error("You must specify at least one filename when calling 'pkg install'");
             endif
-            install(files, deps, prefix, local_list, global_list);
+            install(files, deps, auto, prefix, local_list, global_list);
         case "uninstall"
             if (length(files) == 0)
                 error("You must specify at least one package when calling 'pkg uninstall'");
             endif
             uninstall(files, deps, local_list, global_list);
         case "load"
             if (length(files) == 0)
-                error("You must specify at least one package or 'all' when calling 'pkg load'");
+              error("You must specify at least one package, 'all' or 'auto' when calling 'pkg load'");
             endif
             load_packages(files, deps, local_list, global_list);
         case "unload"
             if (length(files) == 0)
                 error("You must specify at least one package or 'all' when calling 'pkg unload'");
             endif
             unload_packages(files, deps, local_list, global_list);
         case "prefix"
@@ -213,17 +227,31 @@ function [local_packages, global_package
             else
                 error("You must specify a global_list file, or request an output argument");
             endif
         otherwise
             error("You must specify a valid action for 'pkg'. See 'help pkg' for details");
     endswitch
 endfunction
 
-function install(files, handle_deps, prefix, local_list, global_list)
+function auto = isautoload(desc)
+  auto = false;
+  if (isfield(desc{1},"autoload"))
+    a = desc{1}.autoload;
+    if ((isnumeric(a) && a > 0) || 
+	(ischar(a) && (strcmp(tolower(a),"true") || 
+		       strcmp(tolower(a),"on") || 
+		       strcmp(tolower(a),"yes") ||
+		       strcmp(tolower(a),"1"))))
+      auto = true;
+    endif
+  endif
+endfunction
+
+function install(files, handle_deps, autoload, prefix, local_list, global_list)
     global_install = issuperuser();
  
     # Check that the directory in prefix exist. If it doesn't: create it!
     if (!exist(prefix, "dir"))
         warning("Creating installation directory %s", prefix);
         [status, msg] = mkdir(prefix);
         if (status != 1)
             error("Could not create installation directory: %s", msg);
@@ -395,16 +423,25 @@ function install(files, handle_deps, pre
     ## from the list
     for i = length(descriptions):-1:1
       if (dirempty(descriptions{i}.dir,{"packinfo","doc"}))
         rm_rf(descriptions{i}.dir);
         descriptions(i) = [];
       endif
     endfor
 
+    ## If the package requested that it is autoloaded, or the installer
+    ## requested that it is, then mark the package as autoloaded.
+    for i = length(descriptions):-1:1
+      if (autoload > 0 || (autoload == 0 && isautoload(descriptions(i))))
+	fclose(fopen(fullfile(descriptions{i}.dir, "packinfo", 
+			      ".autoload"),"wt"));
+      endif
+    endfor
+
     ## Add the packages to the package list
     try
 	    if (global_install)
             idx = complement(packages_to_uninstall, 1:length(global_packages));
 	        global_packages = {global_packages{idx} descriptions{:}};
             save(global_list, "global_packages");
         else
             idx = complement(packages_to_uninstall, 1:length(local_packages));
@@ -1089,17 +1126,37 @@ function [out1, out2] = installed_packag
 	    global_packages = {};
 	else
             global_packages = load(global_list).global_packages;
         endif
     catch
         global_packages = {};
     end_try_catch
     installed_packages = {local_packages{:} global_packages{:}};        
-    
+
+    ## Eliminate duplicates in the installed package list.
+    ## Locally installed packages take precedence
+    dup = [];
+    for i=1:length(installed_packages)
+      if (find(dup,i))
+	continue;
+      endif
+      for j=(i+1):length(installed_packages)
+        if (find(dup,j))
+	  continue;
+        endif
+        if (strcmp(installed_packages{i}.name,installed_packages{j}.name))
+	  dup = [dup, j];
+	endif
+      endfor
+    endfor
+    if (! isempty(dup))
+      installed_packages(dup) = [];
+    endif  
+  
     ## Should we return something?
     if (nargout == 2)
         out1 = local_packages;
         out2 = global_packages;
         return;
     elseif (nargout == 1)
         out1 = installed_packages;
         return;
@@ -1157,16 +1214,24 @@ function load_packages(files, handle_dep
         pnames{i} = installed_packages{i}.name;
         pdirs{i} = installed_packages{i}.dir;
         pdeps{i} = installed_packages{i}.depends;
     endfor
     
     ## load all
     if (length(files) == 1 && strcmp(files{1}, "all"))
         dirs = pdirs;
+    ## load auto
+    elseif (length(files) == 1 && strcmp(files{1}, "auto"))
+      dirs = {};
+      for i = 1:length(installed_packages)
+        if (exist(fullfile(pdirs{i}, "packinfo", ".autoload"), "file"))
+	  dirs{end+1} = pdirs{i};
+        endif
+      endfor
     ## load package_name1 ...
     else
         dirs = {};
         for i = 1:length(files)
             idx = strcmp(pnames, files{i});
             if (!any(idx))
                 error("Package %s is not installed", files{i});
             endif
