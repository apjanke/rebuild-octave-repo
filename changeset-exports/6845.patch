# HG changeset patch
# User jwe
# Date 1188435944 0
#      Thu Aug 30 01:05:44 2007 +0000
# Node ID 11dd2cb3825c851c48f97a99e6d01b600a30eb1b
# Parent  9ac351b05b51f9a42173479cb42be71f97ce75d4
[project @ 2007-08-30 01:05:44 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -10,22 +10,21 @@ 2007-08-29  John W. Eaton  <jwe@octave.o
 	(class patch::properties): Rename from patch::patch_properties.
 	(class surface::properties): Rename from surface::surface_properties.
 
 	* base-list.h (octave_base_list::remove): Implement our own
 	remove_if function here.
 
 2007-08-28  John W. Eaton  <jwe@octave.org>
 
-	* graphics.h (OCTAVE_GRAPHICS_PROPERTY_INTERNAL): Also define
-	set_X functions for properties.
-	(base_properties): Move class definition before definition of
-	base_graphics_object class.  Provide forward declaration of
-	base_graphics_object prior to definition of base_properties.
-	(base_graphics_object::get_properties): New virtual function.
+	* graphics.h (base_properties): Move class definition before
+	definition of base_graphics_object class.  Provide forward
+	declaration of base_graphics_object prior to definition of
+	base_properties.
+ 	(base_graphics_object::get_properties): New virtual function.
 	(graphics_object::get_properties, root_figure::get_properties,
 	figure::get_properties, axes::get_properties,
 	line::get_properties, text::get_properties, image::get_properties,
 	patch::get_properties, surface::get_properties): New functions.
 	(root_figure::properties, figure::properties, axes::properties,
 	line::properties, text::properties, image::properties,
 	patch::properties, surface::properties): Data member now private.
 
diff --git a/src/graphics.cc b/src/graphics.cc
--- a/src/graphics.cc
+++ b/src/graphics.cc
@@ -2873,67 +2873,13 @@ set_property_in_handle (double handle, c
 	ret = true;
     }
   else
     error ("%s: invalid handle (= %g)", func.c_str(), handle);
 
   return ret;
 }
 
-DEFUN (doit, args, , "")
-{
-  octave_value retval;
-
-  if (args.length () == 1)
-    {
-      graphics_handle h = octave_NaN;
-
-      double val = args(0).double_value ();
-
-      if (! error_state)
-	{
-	  h = gh_manager::lookup (val);
-
-	  if (! xisnan (h))
-	    {
-	      graphics_object obj = gh_manager::get_object (h);
-
-	      if (obj.isa ("line"))
-		{
-		  line::properties& lp
-		    = dynamic_cast<line::properties&> (obj.get_properties ());
-		  retval = lp.get_xdata ();
-		  Matrix m (1, 5);
-		  m(0) = 0;
-		  m(1) = 1;
-		  m(2) = 2;
-		  m(3) = 3;
-		  m(4) = 4;
-		  lp.set_xdata (m);
-		  m(0) = 0;
-		  m(1) = 1;
-		  m(2) = 0.2;
-		  m(3) = 0.8;
-		  m(4) = 0.4;
-		  lp.set_ydata (m);
-
-		  feval ("__request_drawnow__");
-		}
-	      else
-		error ("doit: looking for line");
-	    }
-	  else
-	    error ("doit: invalid graphics object (= %g)", val);
-	}
-      else
-	error ("doit: invalid graphics object");
-    }
-  else
-    print_usage ();
-
-  return retval;
-}
-
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
diff --git a/src/graphics.h b/src/graphics.h
--- a/src/graphics.h
+++ b/src/graphics.h
@@ -39,17 +39,16 @@ 02110-1301, USA.
 #include "oct-map.h"
 #include "ov.h"
 
 #define OCTAVE_GRAPHICS_PROPERTY_INTERNAL(TAG, TYPE, NAME) \
   private: \
     TAG TYPE NAME; \
   public: \
     const TYPE& get_ ## NAME () const { return NAME; } \
-    void set_ ## NAME (const TYPE& val) { NAME = val; mark_modified (); } \
   private:
 
 #define OCTAVE_GRAPHICS_PROPERTY(TYPE, NAME) \
   OCTAVE_GRAPHICS_PROPERTY_INTERNAL ( , TYPE, NAME)
 
 #define OCTAVE_GRAPHICS_MUTABLE_PROPERTY(TYPE, NAME) \
   OCTAVE_GRAPHICS_PROPERTY_INTERNAL (mutable, TYPE, NAME)
 
