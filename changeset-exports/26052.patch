# HG changeset patch
# User Rik <rik@octave.org>
# Date 1541863771 28800
#      Sat Nov 10 07:29:31 2018 -0800
# Node ID 966d7fd88bb96a6e73ea8455f247e63a82742df3
# Parent  ce46820c5e9f089e7ff5be5d14f796954eb6a44a
# Parent  aa1064eca1739b4d3c69220f33c38f8d35f55bec
maint: merge stable to default.

diff --git a/libinterp/corefcn/bitfcns.cc b/libinterp/corefcn/bitfcns.cc
--- a/libinterp/corefcn/bitfcns.cc
+++ b/libinterp/corefcn/bitfcns.cc
@@ -695,48 +695,49 @@ option.  On IEEE 754 compatible systems,
 %!error flintmax (0)
 %!error flintmax ("double", 0)
 %!error flintmax ("int32")
 %!error flintmax ("char")
 */
 
 DEFUN (intmax, args, ,
        doc: /* -*- texinfo -*-
-@deftypefn {} {} intmax (@var{type})
+@deftypefn  {} {} intmax ()
+@deftypefnx {} {} intmax ("@var{type}")
 Return the largest integer that can be represented in an integer type.
 
-The variable @var{type} can be
+The variable @var{type} is a string which can be
 
-@table @code
-@item int8
+@table @asis
+@item @qcode{"int8"}
 signed 8-bit integer.
 
-@item int16
+@item @qcode{"int16"}
 signed 16-bit integer.
 
-@item int32
+@item @qcode{"int32"}
 signed 32-bit integer.
 
-@item int64
+@item @qcode{"int64"}
 signed 64-bit integer.
 
-@item uint8
+@item @qcode{"uint8"}
 unsigned 8-bit integer.
 
-@item uint16
+@item @qcode{"uint16"}
 unsigned 16-bit integer.
 
-@item uint32
+@item @qcode{"uint32"}
 unsigned 32-bit integer.
 
-@item uint64
+@item @qcode{"uint64"}
 unsigned 64-bit integer.
 @end table
 
-The default for @var{type} is @code{int32}.
+The default for @var{type} is @qcode{"int32"}.
 @seealso{intmin, flintmax}
 @end deftypefn */)
 {
   int nargin = args.length ();
 
   if (nargin > 1)
     print_usage ();
 
@@ -782,48 +783,49 @@ The default for @var{type} is @code{int3
 %!error intmax (0)
 %!error intmax ("int32", 0)
 %!error intmax ("double")
 %!error intmax ("char")
 */
 
 DEFUN (intmin, args, ,
        doc: /* -*- texinfo -*-
-@deftypefn {} {} intmin (@var{type})
+@deftypefn  {} {} intmin ()
+@deftypefnx {} {} intmin ("@var{type}")
 Return the smallest integer that can be represented in an integer type.
 
-The variable @var{type} can be
+The variable @var{type} is a string which can be
 
-@table @code
-@item int8
+@table @asis
+@item @qcode{"int8"}
 signed 8-bit integer.
 
-@item int16
+@item @qcode{"int16"}
 signed 16-bit integer.
 
-@item int32
+@item @qcode{"int32"}
 signed 32-bit integer.
 
-@item int64
+@item @qcode{"int64"}
 signed 64-bit integer.
 
-@item uint8
+@item @qcode{"uint8"}
 unsigned 8-bit integer.
 
-@item uint16
+@item @qcode{"uint16"}
 unsigned 16-bit integer.
 
-@item uint32
+@item @qcode{"uint32"}
 unsigned 32-bit integer.
 
-@item uint64
+@item @qcode{"uint64"}
 unsigned 64-bit integer.
 @end table
 
-The default for @var{type} is @code{int32}.
+The default for @var{type} is @qcode{"int32"}.
 @seealso{intmax, flintmax}
 @end deftypefn */)
 {
   int nargin = args.length ();
 
   if (nargin > 1)
     print_usage ();
 
