# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1234974031 18000
#      Wed Feb 18 11:20:31 2009 -0500
# Node ID f3ff420fccf7d86a8c1eec9fb38615d72e21f61d
# Parent  19a3769fe716a86c4dfcfdfa064b2ab2f71ade11
eliminate some unused static variables and functions

diff --git a/liboctave/CMatrix.cc b/liboctave/CMatrix.cc
--- a/liboctave/CMatrix.cc
+++ b/liboctave/CMatrix.cc
@@ -2870,38 +2870,16 @@ ComplexMatrix::lssolve (const ComplexCol
 
 	  retval.resize (n, nrhs);
 	}
     }
 
   return retval;
 }
 
-// Constants for matrix exponential calculation.
-
-static double padec [] =
-{
-  5.0000000000000000e-1,
-  1.1666666666666667e-1,
-  1.6666666666666667e-2,
-  1.6025641025641026e-3,
-  1.0683760683760684e-4,
-  4.8562548562548563e-6,
-  1.3875013875013875e-7,
-  1.9270852604185938e-9,
-};
-
-static void
-solve_singularity_warning (double rcon)
-{
-  (*current_liboctave_warning_handler) 
-    ("singular matrix encountered in expm calculation, rcond = %g",
-     rcon);
-}
-
 // column vector by row vector -> matrix operations
 
 ComplexMatrix
 operator * (const ColumnVector& v, const ComplexRowVector& a)
 {
   ComplexColumnVector tmp (v);
   return tmp * a;
 }
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,16 @@
+2009-02-18  John W. Eaton  <jwe@octave.org>
+
+	* dMatrix.cc (padec, solve_singularity_warning): Delete unused
+	static variable and function.
+	* CMatrix.cc (padec, solve_singularity_warning): Ditto.
+	* fMatrix.cc (padec, solve_singularity_warning): Ditto.
+	* fCMatrix.cc (padec, solve_singularity_warning): Ditto.
+
 2009-02-18  Jaroslav Hajek  <highegg@gmail.com>
 
 	* Array.cc (Array<T>::resize (const dim_vector&)): Check for negative
 	dimensions.
 
 2009-02-18  Jaroslav Hajek  <highegg@gmail.com>
 
 	* oct-inttypes.cc (pow (const octave_int<T>&, const octave_int<T>&)):
diff --git a/liboctave/dMatrix.cc b/liboctave/dMatrix.cc
--- a/liboctave/dMatrix.cc
+++ b/liboctave/dMatrix.cc
@@ -2515,38 +2515,16 @@ Matrix::lssolve (const ComplexColumnVect
 ComplexColumnVector
 Matrix::lssolve (const ComplexColumnVector& b, octave_idx_type& info, 
 		 octave_idx_type& rank, double &rcon) const
 {
   ComplexMatrix tmp (*this);
   return tmp.lssolve (b, info, rank, rcon);
 }
 
-// Constants for matrix exponential calculation.
-
-static double padec [] =
-{
-  5.0000000000000000e-1,
-  1.1666666666666667e-1,
-  1.6666666666666667e-2,
-  1.6025641025641026e-3,
-  1.0683760683760684e-4,
-  4.8562548562548563e-6,
-  1.3875013875013875e-7,
-  1.9270852604185938e-9,
-};
-
-static void
-solve_singularity_warning (double rcon)
-{
-  (*current_liboctave_warning_handler) 
-    ("singular matrix encountered in expm calculation, rcond = %g",
-     rcon);
-}
-
 Matrix&
 Matrix::operator += (const DiagMatrix& a)
 {
   octave_idx_type nr = rows ();
   octave_idx_type nc = cols ();
 
   octave_idx_type a_nr = a.rows ();
   octave_idx_type a_nc = a.cols ();
diff --git a/liboctave/fCMatrix.cc b/liboctave/fCMatrix.cc
--- a/liboctave/fCMatrix.cc
+++ b/liboctave/fCMatrix.cc
@@ -2864,38 +2864,16 @@ FloatComplexMatrix::lssolve (const Float
 
 	  retval.resize (n, nrhs);
 	}
     }
 
   return retval;
 }
 
-// Constants for matrix exponential calculation.
-
-static float padec [] =
-{
-  5.0000000000000000e-1,
-  1.1666666666666667e-1,
-  1.6666666666666667e-2,
-  1.6025641025641026e-3,
-  1.0683760683760684e-4,
-  4.8562548562548563e-6,
-  1.3875013875013875e-7,
-  1.9270852604185938e-9,
-};
-
-static void
-solve_singularity_warning (float rcon)
-{
-  (*current_liboctave_warning_handler) 
-    ("singular matrix encountered in expm calculation, rcond = %g",
-     rcon);
-}
-
 // column vector by row vector -> matrix operations
 
 FloatComplexMatrix
 operator * (const FloatColumnVector& v, const FloatComplexRowVector& a)
 {
   FloatComplexColumnVector tmp (v);
   return tmp * a;
 }
diff --git a/liboctave/fMatrix.cc b/liboctave/fMatrix.cc
--- a/liboctave/fMatrix.cc
+++ b/liboctave/fMatrix.cc
@@ -2514,38 +2514,16 @@ FloatMatrix::lssolve (const FloatComplex
 FloatComplexColumnVector
 FloatMatrix::lssolve (const FloatComplexColumnVector& b, octave_idx_type& info, 
 		 octave_idx_type& rank, float &rcon) const
 {
   FloatComplexMatrix tmp (*this);
   return tmp.lssolve (b, info, rank, rcon);
 }
 
-// Constants for matrix exponential calculation.
-
-static float padec [] =
-{
-  5.0000000000000000e-1,
-  1.1666666666666667e-1,
-  1.6666666666666667e-2,
-  1.6025641025641026e-3,
-  1.0683760683760684e-4,
-  4.8562548562548563e-6,
-  1.3875013875013875e-7,
-  1.9270852604185938e-9,
-};
-
-static void
-solve_singularity_warning (float rcon)
-{
-  (*current_liboctave_warning_handler) 
-    ("singular matrix encountered in expm calculation, rcond = %g",
-     rcon);
-}
-
 FloatMatrix&
 FloatMatrix::operator += (const FloatDiagMatrix& a)
 {
   octave_idx_type nr = rows ();
   octave_idx_type nc = cols ();
 
   octave_idx_type a_nr = a.rows ();
   octave_idx_type a_nc = a.cols ();
