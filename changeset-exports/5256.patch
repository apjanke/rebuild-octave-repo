# HG changeset patch
# User jwe
# Date 1112122133 0
#      Tue Mar 29 18:48:53 2005 +0000
# Node ID 418771cb5ab2983577715799d24ac7df5b696c49
# Parent  3c4237738c3e6ebb4f6086a8003cff3b1ad0c923
[project @ 2005-03-29 18:48:53 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,12 @@
 2005-03-29  John W. Eaton  <jwe@octave.org>
 
+	* load-save.cc (Fload, Fsave): Also accept -V4 option.
+
 	* ls-hdf5.h (hdf5_fstreambase::hdf5_fstreambase,
 	hdf5_fstreambase::open): Use & instead of == to test whether mode
 	is std::ios::in or std::ios::out.
 	(hd5_ifstream::istream, hd5_ifstream::open, hd5_ofstream::istream,
 	hd5_ofstream::open): Default mode now includes binary flag.
 
 2005-03-28  John W. Eaton  <jwe@octave.org>
 
diff --git a/src/load-save.cc b/src/load-save.cc
--- a/src/load-save.cc
+++ b/src/load-save.cc
@@ -583,19 +583,23 @@ version of Octave to be compatible with 
 meaning of your code the same across this change, use the @code{-text}\n\
 option instead.}\n\
 \n\
 @item -binary\n\
 Force Octave to assume the file is in Octave's binary format.\n\
 \n\
 @item -mat\n\
 @itemx -mat-binary\n\
-Force Octave to assume the file is in @sc{Matlab}'s binary format.\n\
+Force Octave to assume the file is in @sc{Matlab}'s version 6 binary\n\
+format.\n\
 \n\
-@item -mat4-binary\n\
+@item -V4\n\
+@itemx -v4\n\
+@itemx -4\n\
+@itemx -mat4-binary\n\
 Force Octave to assume the file is in the binary format written by\n\
 @sc{Matlab} version 4.\n\
 \n\
 @item -hdf5\n\
 Force Octave to assume the file is in HDF5 format.\n\
 (HDF5 is a free, portable binary format developed by the National\n\
 Center for Supercomputing Applications at the University of Illinois.)\n\
 Note that Octave can read HDF5 files not created by itself, but may\n\
@@ -661,17 +665,18 @@ Force Octave to assume the file is in Oc
       else if (argv[i] == "-binary" || argv[i] == "-b")
 	{
 	  format = LS_BINARY;
 	}
       else if (argv[i] == "-mat-binary" || argv[i] == "-mat" || argv[i] == "-m")
 	{
 	  format = LS_MAT5_BINARY;
 	}
-      else if (argv[i] == "-mat4-binary" || argv[i] == "-4" || argv[i] == "-v4")
+      else if (argv[i] == "-mat4-binary" || argv[i] == "-V4"
+	       || argv[i] == "-v4" || argv[i] == "-4")
 	{
 	  format = LS_MAT_BINARY;
 	}
       else if (argv[i] == "-hdf5" || argv[i] == "-h")
 	{
 #ifdef HAVE_HDF5
 	  format = LS_HDF5;
 #else /* ! HAVE_HDF5 */
@@ -1230,17 +1235,20 @@ Save the data in Octave's binary data fo
 Save the data in Octave's binary data format but only using single\n\
 precision.  You should use this format only if you know that all the\n\
 values to be saved can be represented in single precision.\n\
 \n\
 @item -mat\n\
 @itemx -mat-binary\n\
 Save the data in @sc{Matlab}'s binary data format.\n\
 \n\
-@item -mat4-binary\n\
+@item -V4\n\
+@itemx -v4\n\
+@itemx -4\n\
+@itemx -mat4-binary\n\
 Save the data in the binary format written by @sc{Matlab} version 4.\n\
 \n\
 @item -hdf5\n\
 Save the data in HDF5 format.\n\
 (HDF5 is a free, portable binary format developed by the National\n\
 Center for Supercomputing Applications at the University of Illinois.)\n"
 
 HAVE_HDF5_HELP_STRING
@@ -1343,17 +1351,18 @@ the file @file{data} in Octave's binary 
 	  error ("save: octave executable was not linked with HDF5 library");
 	  return retval;
 #endif /* ! HAVE_HDF5 */
 	}
       else if (argv[i] == "-mat-binary" || argv[i] == "-mat" || argv[i] == "-m")
 	{
 	  format = LS_MAT5_BINARY;
 	}
-      else if (argv[i] == "-mat4-binary" || argv[i] == "-4" || argv[i] == "-v4")
+      else if (argv[i] == "-mat4-binary" || argv[i] == "-V4"
+	       || argv[i] == "-v4" || argv[i] == "-4")
 	{
 	  format = LS_MAT_BINARY;
 	}
       else if (argv[i] == "-float-binary" || argv[i] == "-f")
 	{
 	  format = LS_BINARY;
 	  save_as_floats = true;
 	}
