# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1232556512 18000
#      Wed Jan 21 11:48:32 2009 -0500
# Node ID d81caf2e3a2887f5c209ad32c95a28267b20eed8
# Parent  821c0a7efbee519dce770104a3133a06321814c6
ylabel.m: handle rotation property here, not in __axis_label__.m

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,10 +1,14 @@
 2009-01-21  John W. Eaton  <jwe@octave.org>
 
+	* plot/ylabel.m: Insert rotation property in varargin before
+	passing it on to __axis_label__.
+	* plot/__axis_label__.m: Don't set rotation for ylabel here.
+
 	* plot/title.m: Insert horizontalalignment property in varargin
 	before passing it on to __axis_label__.
 
 2009-01-21  Jaroslav Hajek  <highegg@gmail.com>
 
 	* strings/strchr.m: New function.
 	* strings/Makefile.in: Add it.
 
diff --git a/scripts/plot/__axis_label__.m b/scripts/plot/__axis_label__.m
--- a/scripts/plot/__axis_label__.m
+++ b/scripts/plot/__axis_label__.m
@@ -21,27 +21,22 @@
 ## Author: jwe
 
 function retval = __axis_label__ (caller, txt, varargin)
 
   if (ischar (txt))
     ## FIXME -- should be able to use text instead of __go_text__.
     ca = gca ();
 
-    if (strcmp (caller, "ylabel"))
-      rot = 90;
-    else
-      rot = 0;
-    endif
     h = __go_text__ (ca, "fontangle", get (ca, "fontangle"),
                          "fontname", get (ca, "fontname"),
                          "fontsize", get (ca, "fontsize"),
                          "fontunits", get (ca, "fontunits"),
                          "fontweight", get (ca, "fontweight"),
-                         "string", txt, "rotation", rot, varargin{:});
+                         "string", txt, varargin{:});
     set (ca, caller, h);
     if (nargout > 0)
       retval = h;
     endif
   else
     error ("%s: expecting first argument to be character string", caller);
   endif
 
diff --git a/scripts/plot/ylabel.m b/scripts/plot/ylabel.m
--- a/scripts/plot/ylabel.m
+++ b/scripts/plot/ylabel.m
@@ -33,16 +33,17 @@ function retval = ylabel (varargin)
 
   if (rem (nargin, 2) != 1)
     print_usage ();
   endif
 
   oldh = gca ();
   unwind_protect
     axes (h);
+    varargin = {varargin{1}, "rotation", 90, varargin{2:end}};
     tmp = __axis_label__ ("ylabel", varargin{:});
   unwind_protect_cleanup
     axes (oldh);
   end_unwind_protect
 
   if (nargout > 0)
     retval = tmp;
   endif
