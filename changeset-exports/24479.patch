# HG changeset patch
# User Rik <rik@octave.org>
# Date 1514418708 28800
#      Wed Dec 27 15:51:48 2017 -0800
# Node ID 6d2dc40a7c0005cfaffd089de482a1a230e51731
# Parent  59041be1994bd4bb5cc1fc1de8ea4fad113fe9db
isaxes.m, isgraphics.m, isfigure.m: Clean up related isXXX graphics functions.

* isaxes.m: Add @seealso link to isgraphics.  Remove incorrect Author: comment.
Remove unnecessary intermediate variable hlist.  Add BIST input validation
tests.

* isfigure.m: Add @seealso link to isgraphics.  Remove unnecessary intermediate
variable hlist.  Fix operation when multiple input handles are present.
Add new BIST test for multiple handles.  Add BIST input validation tests.

* isgraphics.m: Correct Copyright author.  Add isaxes, isfigure to
@seealso links.  Remove unnecessary intermediate variable typematch.

diff --git a/scripts/plot/util/isaxes.m b/scripts/plot/util/isaxes.m
--- a/scripts/plot/util/isaxes.m
+++ b/scripts/plot/util/isaxes.m
@@ -17,32 +17,29 @@
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {} {} isaxes (@var{h})
 ## Return true if @var{h} is an axes graphics handle and false otherwise.
 ##
 ## If @var{h} is a matrix then return a logical array which is true where the
 ## elements of @var{h} are axes graphics handles and false where they are not.
-## @seealso{isaxes, ishghandle}
+## @seealso{isfigure, ishghandle, isgraphics}
 ## @end deftypefn
 
-## Author: jwe
-
 function retval = isaxes (h)
 
   if (nargin != 1)
     print_usage ();
   endif
 
-  hlist = ishghandle (h);
-  retval = hlist;
+  retval = ishghandle (h);
 
-  if (any (hlist))
-    retval(hlist) = strcmp (get (h(hlist), "type"), "axes");
+  if (any (retval))
+    retval(retval) = strcmp (get (h(retval), "type"), "axes");
   endif
 
 endfunction
 
 
 %!test
 %! hf = figure ("visible", "off");
 %! unwind_protect
@@ -56,8 +53,11 @@ endfunction
 %!test
 %! hf = figure ("visible", "off");
 %! unwind_protect
 %!   hax = axes ();
 %!   assert (isaxes ([hax NaN]), [true false]);
 %! unwind_protect_cleanup
 %!   close (hf);
 %! end_unwind_protect
+
+%!error isaxes ()
+%!error isaxes (1, 2)
diff --git a/scripts/plot/util/isfigure.m b/scripts/plot/util/isfigure.m
--- a/scripts/plot/util/isfigure.m
+++ b/scripts/plot/util/isfigure.m
@@ -18,37 +18,47 @@
 
 ## -*- texinfo -*-
 ## @deftypefn {} {} isfigure (@var{h})
 ## Return true if @var{h} is a figure graphics handle and false otherwise.
 ##
 ## If @var{h} is a matrix then return a logical array which is true where the
 ## elements of @var{h} are figure graphics handles and false where they are
 ## not.
-## @seealso{isaxes, ishghandle}
+## @seealso{isaxes, ishghandle, isgraphics}
 ## @end deftypefn
 
 ## Author: jwe
 
 function retval = isfigure (h)
 
   if (nargin != 1)
     print_usage ();
   endif
 
-  hlist = ishghandle (h);
-  if (any (hlist))
-    retval(hlist) = strcmp (get (h(hlist), "type"), "figure");
-  else
-    retval = hlist;
+  retval = ishghandle (h);
+
+  if (any (retval))
+    retval(retval) = strcmp (get (h(retval), "type"), "figure");
   endif
 
 endfunction
 
 
 %!test
 %! hf = figure ("visible", "off");
 %! unwind_protect
 %!   assert (isfigure (hf));
 %!   assert (! isfigure (-hf));
 %! unwind_protect_cleanup
 %!   close (hf);
 %! end_unwind_protect
+
+%!test
+%! hf = figure ("visible", "off");
+%! unwind_protect
+%!   assert (isfigure ([hf NaN]), [true false]);
+%! unwind_protect_cleanup
+%!   close (hf);
+%! end_unwind_protect
+
+%!error isfigure ()
+%!error isfigure (1, 2)
diff --git a/scripts/plot/util/isgraphics.m b/scripts/plot/util/isgraphics.m
--- a/scripts/plot/util/isgraphics.m
+++ b/scripts/plot/util/isgraphics.m
@@ -1,9 +1,9 @@
-## Copyright (C) 2008-2017 David Bateman
+## Copyright (C) 2017 Rik Wehbring
 ##
 ## This file is part of Octave.
 ##
 ## Octave is free software; you can redistribute it and/or modify it
 ## under the terms of the GNU General Public License as published by
 ## the Free Software Foundation; either version 3 of the License, or
 ## (at your option) any later version.
 ##
@@ -19,35 +19,34 @@
 ## -*- texinfo -*-
 ## @deftypefn  {} {} isgraphics (@var{h})
 ## @deftypefnx {} {} isgraphics (@var{h}, @var{type})
 ## Return true if @var{h} is a graphics handle (of type @var{type}) and false
 ## otherwise.
 ##
 ## When no @var{type} is specified the function is equivalent to
 ## @code{ishghandle}.
-## @seealso{ishghandle, ishandle}
+## @seealso{ishghandle, ishandle, isaxes, isfigure}
 ## @end deftypefn
 
 function retval = isgraphics (h, type = "")
 
   if (nargin < 1 || nargin > 2)
     print_usage ();
   endif
 
-  if (nargin == 2 && (! ischar (type) || ! isrow (type)))
+  if (nargin == 2 && ! (ischar (type) && isrow (type)))
     error ("isgraphics: TYPE must be a string");
   endif
 
   ## Octave has no Simulink equivalent so it is sufficient to call ishghandle.
   retval = ishghandle (h);
 
   if (nargin == 2 && any (retval))
-    typematch = strcmpi (get (h(retval), "type"), type);
-    retval(retval) = typematch;
+    retval(retval) = strcmpi (get (h(retval), "type"), type);
   endif
 
 endfunction
 
 
 %!test
 %! hf = figure ("visible", "off");
 %! unwind_protect
