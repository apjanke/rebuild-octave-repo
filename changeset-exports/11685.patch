# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1205288570 14400
#      Tue Mar 11 22:22:50 2008 -0400
# Branch release-3-0-x
# Node ID 61244c9d99b3dfbab21a9ac8b6d18fd2fde626d1
# Parent  e77150aa1ac26a60cc59cf2024f2938a71edb72a
handle axes linewidth property

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,10 +1,12 @@
 2008-03-11  John W. Eaton  <jwe@octave.org>
 
+	* plot/ChangeLog: Handle axes linewidth property.
+
 	* plot/__go_draw_axes__.m (get_old_gnuplot_color): New subfunction.
 	Use it to replace repeated if/elseif blocks.
 
 2008-03-11  Kai Habel  <kai.habel@gmx.de>
 
 	* plot/__go_draw_axes__.m: If facecolor property of a surface is
 	"none", don't use pm3d mode and set linestyle correctly. 
 
diff --git a/scripts/plot/__go_draw_axes__.m b/scripts/plot/__go_draw_axes__.m
--- a/scripts/plot/__go_draw_axes__.m
+++ b/scripts/plot/__go_draw_axes__.m
@@ -574,17 +574,17 @@ function __go_draw_axes__ (h, plot_strea
 		       color = ccol;
 		     else
 		       r = 1 + round ((size (cmap, 1) - 1)
 				      * (ccol - clim(1))/(clim(2) - clim(1)));
 		       r = max (1, min (r, size (cmap, 1)));
 		       color = cmap(r, :);
 		     endif
 		   elseif (strncmp (obj.facecolor, "interp", 6))
-		     warning ("\"interp\" not supported, using 1st entry of cdata")
+		     warning ("\"interp\" not supported, using 1st entry of cdata");
 		     r = 1 + round ((size (cmap, 1) - 1) * ccol(1));
 		     r = max (1, min (r, size (cmap, 1)));
 		     color = cmap(r,:);
 		   endif
 		 elseif (isnumeric (obj.facecolor))
 		   color = obj.facecolor;
 		 else
 		   color = [0, 1, 0];
@@ -649,17 +649,17 @@ function __go_draw_axes__ (h, plot_strea
 		     color = ccol;
 		   else
 		     r = 1 + round ((size (cmap, 1) - 1)
 				    * (ccol - clim(1))/(clim(2) - clim(1)));
 		     r = max (1, min (r, size (cmap, 1)));
 		     color = cmap(r, :);
 		   endif
 		 elseif (strncmp (obj.edgecolor, "interp", 6))
-		   warning ("\"interp\" not supported, using 1st entry of cdata")
+		   warning ("\"interp\" not supported, using 1st entry of cdata");
 		   r = 1 + round ((size (cmap, 1) - 1) * ccol(1));
 		   r = max (1, min (r, size (cmap, 1)));
 		   color = cmap(r,:);
 		 endif
 	       elseif (isnumeric (obj.edgecolor))
 		 color = obj.edgecolor;
 	       else
 		 color = [0, 0, 0];
@@ -682,16 +682,26 @@ function __go_draw_axes__ (h, plot_strea
 		   lt = "";
 		 otherwise
 		   lt = "";
 	       endswitch
 	     else
 	       lt = "";
 	     endif
 
+	     if (isfield (obj, "linewidth"))
+	       if (have_newer_gnuplot)
+		 lw = sprintf("linewidth %f", obj.linewidth);
+	       else
+		 lw = sprintf("lw %f", obj.linewidth);
+	       endif
+	     else
+	       lw  = "";
+	     endif
+
 	     if (isfield (obj, "marker"))
 	       if (isfield (obj, "marker"))
 		 switch (obj.marker)
 		   case "+"
 		     pt = "pt 1";
 		   case "o"
 		     pt = "pt 6";
 		   case "*"
@@ -756,22 +766,23 @@ function __go_draw_axes__ (h, plot_strea
 
 	     if (have_newer_gnuplot)
 	       if (mono)
 		 colorspec = "";
 	       else
 		 colorspec = sprintf ("lc rgb \"#%02x%02x%02x\"",
 				      round (255*color));
 	       endif
-	       withclause{data_idx} = sprintf ("with %s %s %s %s %s",
-					       style, pt, lt, ps, colorspec);
+	       withclause{data_idx} = sprintf ("with %s %s %s %s %s %s",
+					       style, lw, pt, lt, ps, 
+					       colorspec);
 	     else
 	       typ = get_old_gnuplot_color (color);
-	       withclause{data_idx} = sprintf ("with %s %s %s lt %d", 
-					       style, pt, ps, typ);
+	       withclause{data_idx} = sprintf ("with %s %s %s %s lt %d", 
+					       style, lw, pt, ps, typ);
 	     endif
 
 	     if (nd == 3)
 	       if (! isnan (xcol) && ! isnan (ycol) && ! isnan (zcol))
 		 data{data_idx} = [[xcol; xcol(1)], [ycol; ycol(1)], ...
 				   [zcol; zcol(1)]]';
 	       else
 		 data{data_idx} = [xcol, ycol, zcol]';
@@ -1047,16 +1058,18 @@ function __go_draw_axes__ (h, plot_strea
 	    fputs (plot_stream, "set border 3;\n");
 	  endif
 	endif
       endif
     endif
 
     if (strcmpi (axis_obj.visible, "off"))
       fputs (plot_stream, "unset border; unset tics\n");
+    else
+      fprintf (plot_stream, "set border lw %f;\n", axis_obj.linewidth);
     endif
 
     if (strcmpi (axis_obj.key, "on"))
       if (strcmpi (axis_obj.keybox, "on"))
 	box = "box";
       else
 	box = "nobox";
       endif
@@ -1332,17 +1345,17 @@ function [style, typ, with] = do_linesty
 	style = "points";
       endif
     elseif (! isempty (pt))
       style = "linespoints";
     endif
 
     if (isfield (obj, "markersize"))
       if (have_newer_gnuplot)
-	fprintf (plot_stream, " pointsize %f", obj.markersize /6);
+	fprintf (plot_stream, " pointsize %f", obj.markersize / 6);
       else
 	if (! strcmpi (style, "lines"))
 	  with = sprintf ("%s ps %f", with, obj.markersize / 6);
 	endif
       endif
       found_style = true;
     endif
   else
@@ -1485,17 +1498,17 @@ function do_tics_1 (ticmode, tics, label
 	fprintf (plot_stream, "set format %s \"%%s\";\n", ax);
 	if (mirror)
 	  fprintf (plot_stream, "set %stics %s (", ax, axispos);
 	else
 	  fprintf (plot_stream, "set %stics %s nomirror (", ax, axispos);
 	endif
 	labels = regexprep(labels, "%", "%%");
 	for i = 1:ntics
-	  fprintf (plot_stream, " \"%s\" %g", labels{k++}, tics(i))
+	  fprintf (plot_stream, " \"%s\" %g", labels{k++}, tics(i));
 	  if (i < ntics)
 	    fputs (plot_stream, ", ");
 	  endif
 	  if (k > nlabels)
 	    k = 1;
 	  endif
 	endfor
 	fprintf (plot_stream, ") %s;\n", colorspec);
