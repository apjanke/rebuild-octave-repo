# HG changeset patch
# User Rik <rik@octave.org>
# Date 1520016306 28800
#      Fri Mar 02 10:45:06 2018 -0800
# Node ID 4ffdaea6e85eaa62163a2cf92a774a3fafa7d36d
# Parent  e08c1fea96c569339d9d68c353d08d8b3c631dd5
configure.ac: Redo configuration tests for OSMesa library.

* configure.ac: Redo configuration tests for OSMesa library.

diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -2160,44 +2160,58 @@ if test $use_osmesa = auto; then
   else
     use_osmesa=yes
   fi
 fi
 
 if test $use_osmesa = yes; then
   dnl Pre-declare warning message, and unset if library is found
   if test $octave_cv_qt_opengl_os_ok = no; then
-    warn_osmesa = "OSMesa library not found and Qt < 5.1.  Offscreen rendering with OpenGL will be disabled."
+    warn_osmesa="OSMesa library not found and Qt < 5.1.  Offscreen rendering with OpenGL will be disabled."
   else
-    warn_osmesa = "OSMesa library not found.  Offscreen rendering with FLTK will be disabled."
+    warn_osmesa="OSMesa library not found.  Offscreen rendering with FLTK will be disabled."
   fi
-  
-  dnl FIXME: Should we AC_LANG_PUSH(C++)/AC_LANG_POP around these tests?
+
+  OSMESA_LIBS="-lOSMesa"
+  save_CPPFLAGS="$CPPFLAGS"
+  save_LDFLAGS="$LDFLAGS"
+  save_LIBS="$LIBS"
+  CPPFLAGS="$OSMESA_CPPFLAGS $CPPFLAGS"
+  LDFLAGS="$OSMESA_LDFLAGS $LDFLAGS"
+  LIBS="$OSMESA_LIBS $LIBS"
+  AC_LANG_PUSH(C++)
+  ac_octave_osmesa_check_for_lib=no
   AC_CHECK_HEADERS([osmesa.h GL/osmesa.h],
-                   [ac_octave_osmesa_check_for_lib=yes; break]
-                   [ac_octave_osmesa_check_for_lib=no])
+                   [ac_octave_osmesa_check_for_lib=yes; break])
   if test $ac_octave_osmesa_check_for_lib = yes; then
     AC_CACHE_CHECK([for OSMesaCreateContext in OSMesa],
       octave_cv_lib_osmesa,
       [AC_LINK_IFELSE([AC_LANG_CALL([], [OSMesaCreateContext])],
         [octave_cv_lib_osmesa=yes], [octave_cv_lib_osmesa=no])
     ])
     if test $octave_cv_lib_osmesa = yes; then
       warn_osmesa=
       AC_DEFINE(HAVE_OSMESA, 1, [Define to 1 if OSMesa is available.])
     fi
-  else
-    octave_cv_lib_osmesa=no
   fi
+  AC_LANG_POP(C++)
+  CPPFLAGS="$save_CPPFLAGS"
+  LDFLAGS="$save_LDFLAGS"
+  LIBS="$save_LIBS"
 
   if test -n "$warn_osmesa"; then
     OCTAVE_CONFIGURE_WARNING([warn_osmesa])
+    OSMESA_LIBS=
   fi
 fi
 
+AC_SUBST(OSMESA_CPPFLAGS)
+AC_SUBST(OSMESA_LDFLAGS)
+AC_SUBST(OSMESA_LIBS)
+
 ### Check for FLTK library
 
 check_fltk=yes
 build_fltk_graphics=no
 
 AC_ARG_WITH([fltk],
   [AS_HELP_STRING([--without-fltk],
     [don't use FLTK libraries, disable OpenGL graphics with FLTK widgets])],
