# HG changeset patch
# User Juan Pablo Carbajal <ajuanpi+dev@gmail.com>
# Date 1418747147 -3600
#      Tue Dec 16 17:25:47 2014 +0100
# Node ID cdb6bc186c42d393c35f61c703098026252062fb
# Parent  06b23f224f52388f4f54bd3f9ef6ff0a7adae4a3
Fix ploting 1D images with gnuplot (bug #43836).

* __go_draw_axes__.m: Correct dx and dy, which are 0 for 1D images, to be 0.5.

diff --git a/scripts/plot/util/private/__go_draw_axes__.m b/scripts/plot/util/private/__go_draw_axes__.m
--- a/scripts/plot/util/private/__go_draw_axes__.m
+++ b/scripts/plot/util/private/__go_draw_axes__.m
@@ -152,17 +152,17 @@ function __go_draw_axes__ (h, plot_strea
     t = get (axis_obj.title);
     if (isempty (t.string))
       fputs (plot_stream, "unset title;\n");
     else
       colorspec = get_text_colorspec (t.color, mono);
       [tt, f, s] = __maybe_munge_text__ (enhanced, t, "string");
       fontspec = create_fontspec (f, s, gnuplot_term);
       fprintf (plot_stream, "set title \"%s\" %s %s %s;\n",
-               undo_string_escapes (tt), fontspec, colorspec, 
+               undo_string_escapes (tt), fontspec, colorspec,
                __do_enhanced_option__ (enhanced, t));
     endif
   endif
 
   if (! isempty (axis_obj.xlabel))
     t = get (axis_obj.xlabel);
     angle = t.rotation;
     colorspec = get_text_colorspec (t.color, mono);
@@ -508,35 +508,45 @@ function __go_draw_axes__ (h, plot_strea
         endif
         if (img_ydata(2) < img_ydata(1))
           img_ydata = img_ydata(2:-1:1);
           img_data = img_data(end:-1:1,:,:);
         elseif (img_ydata(1) == img_ydata(2))
           img_ydata = img_ydata(1) + [0, rows(img_data)-1];
         endif
 
+        x_origin = min (img_xdata);
+        y_origin = min (img_ydata);
+
         [y_dim, x_dim] = size (img_data(:,:,1));
         if (x_dim > 1)
           dx = abs (img_xdata(2)-img_xdata(1))/(x_dim-1);
         else
           x_dim = 2;
           img_data = [img_data, img_data];
           dx = abs (img_xdata(2)-img_xdata(1));
+          if (dx < 1)
+            ## Correct gnuplot string for 1-D images
+            dx       = 0.5;
+            x_origin = 0.75;
+          endif
         endif
         if (y_dim > 1)
           dy = abs (img_ydata(2)-img_ydata(1))/(y_dim-1);
         else
           y_dim = 2;
           img_data = [img_data; img_data];
           dy = abs (img_ydata(2)-img_ydata(1));
+          if (dy < 1)
+            ## Correct gnuplot string for 1-D images
+            dy       = 0.5;
+            y_origin = 0.75;
+          endif
         endif
 
-        x_origin = min (img_xdata);
-        y_origin = min (img_ydata);
-
         if (ndims (img_data) == 3)
           data{data_idx} = permute (img_data, [3, 1, 2])(:);
           format = "1:2:3";
           imagetype = "rgbimage";
         else
           data{data_idx} = img_data(:);
           format = "1";
           imagetype = "image";
@@ -2126,17 +2136,17 @@ function do_tics (obj, plot_stream, ymir
              "border", obj.tickdir, ticklength, fontname, fontspec,
              obj.interpreter, obj.zscale, obj.zsgn, gnuplot_term);
 endfunction
 
 function do_tics_1 (ticmode, tics, mtics, labelmode, labels, color, ax,
                     plot_stream, mirror, mono, axispos, tickdir, ticklength,
                     fontname, fontspec, interpreter, scale, sgn, gnuplot_term)
   persistent warned_latex = false;
-  
+
   ## Avoid emitting anything if the tics are empty, because this undoes the
   ## effect of the previous unset xtics and thereby adds back in the tics.
   if (isempty (tics))
     return;
   endif
 
   if (mirror)
     mirror = "mirror";
@@ -2621,9 +2631,8 @@ function maybe_do_xtick_mirror (plot_str
 endfunction
 
 function maybe_do_x2tick_mirror (plot_stream, axis_obj)
   if (! isempty(axis_obj.xtick))
     fprintf (plot_stream, "unset xtics; set x2tics %s nomirror\n",
                           axis_obj.tickdir);
   endif
 endfunction
-
