# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1269864510 -7200
#      Mon Mar 29 14:08:30 2010 +0200
# Node ID 739109ef88eefa6cde121df329e3c0871a3cb0bb
# Parent  b2143d97c00299e90c65136c74bca02c62d1645c
helper idx_vector methods

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+2010-03-29  Jaroslav Hajek  <highegg@gmail.com>
+
+	* idx-vector.cc (idx_vector::raw): New method.
+	* idx-vector.h: Declare it.
+
 2010-03-27  David Bateman  <dbateman@free.fr>
 
 	* oct-openmp.h: New file.
 	* Makefile.am (INCS): Add it here.
 
 2010-03-26  Jaroslav Hajek  <highegg@gmail.com>
 
 	* Sparse.cc (Sparse<T>::index (const idx_vector&, const idx_vector&, bool)):
diff --git a/liboctave/idx-vector.cc b/liboctave/idx-vector.cc
--- a/liboctave/idx-vector.cc
+++ b/liboctave/idx-vector.cc
@@ -985,16 +985,27 @@ idx_vector::increment (void) const
           retval = elem (1) - elem (0);
       }
     default:
       break;
     }
   return retval;
 }
 
+const octave_idx_type *
+idx_vector::raw (void)
+{
+  if (rep->idx_class () != class_vector)
+    *this = as_array ();
+
+  idx_vector_rep * r = dynamic_cast<idx_vector_rep *> (rep);
+  assert (r != 0);
+  return r->get_data ();
+}
+
 void
 idx_vector::copy_data (octave_idx_type *data) const
 {
   octave_idx_type len = rep->length (0);
 
   switch (rep->idx_class ())
     {
     case class_colon:
diff --git a/liboctave/idx-vector.h b/liboctave/idx-vector.h
--- a/liboctave/idx-vector.h
+++ b/liboctave/idx-vector.h
@@ -977,16 +977,20 @@ public:
   idx_vector unmask (void) const;
 
   // Unconverts the index to a scalar, Range, double array or a mask.
   void unconvert (idx_class_type& iclass,
                   double& scalar, Range& range, 
                   Array<double>& array, Array<bool>& mask) const;
 
   Array<octave_idx_type> as_array (void) const;
+
+  // Raw pointer to index array.  This is non-const because it may be necessary
+  // to mutate the index.
+  const octave_idx_type *raw (void);
     
   // FIXME -- these are here for compatibility.  They should be removed
   // when no longer in use.
 
   octave_idx_type elem (octave_idx_type n) const 
     { return (*this) (n); }
 
   bool is_colon_equiv (octave_idx_type n, int) const
