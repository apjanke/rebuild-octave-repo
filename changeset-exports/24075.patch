# HG changeset patch
# User Piotr Held <pjheld@gmail.com>
# Date 1504658331 25200
#      Tue Sep 05 17:38:51 2017 -0700
# Node ID 3645139bd28fe15aff4e36969701faf8d5215753
# Parent  ff973f3e17e3948edd157066848a9cb258f58f8a
allow meta.class.fromName to work again (bug #51935)

* pt-eval.cc (tree_evaluator::visit_index_expression): Also check
whether the result of a partial evaluation is a classdef_meta and not
a package.

* classdef.tst: New test.

diff --git a/libinterp/parse-tree/pt-eval.cc b/libinterp/parse-tree/pt-eval.cc
--- a/libinterp/parse-tree/pt-eval.cc
+++ b/libinterp/parse-tree/pt-eval.cc
@@ -1334,17 +1334,19 @@ namespace octave
                           err_indexed_cs_list ();
 
                         retval = partial_expr_val;
 
                         beg = i;
                         idx.clear ();
 
                         if (partial_expr_val.isobject ()
-                            || partial_expr_val.isjava ())
+                            || partial_expr_val.isjava ()
+                            || (partial_expr_val.is_classdef_meta ()
+                                && ! partial_expr_val.is_package ()))
                           {
                             // Found an object, so now we'll build up
                             // complete index list for one big subsref
                             // call from this point on.
 
                             // FIXME: is is also possible to have a
                             // static method call buried somewhere in
                             // the depths of a complex indexing
diff --git a/test/classdef/classdef.tst b/test/classdef/classdef.tst
--- a/test/classdef/classdef.tst
+++ b/test/classdef/classdef.tst
@@ -71,14 +71,18 @@
 %! obj = foo_method_changes_property_size (3);
 %! obj = obj.move_element_to_end (2);
 %! assert (obj.element, [1 3 2]);
 
 %!error <parse error> plist_t1
 %!assert (class (plist_t2), "plist_t2")
 %!assert (class (plist_t3), "plist_t3")
 
+%% Test for meta.class.fromName
+%!test <*51935>
+%! meta.class.fromName ("inputParser");
+
 ## Do not change this to "containers.Map()".  This test is intended to
 ## ensure that calling a function in a +package directory will work
 ## properly.
 %!test <*51715>
 %! x = containers.Map;
 %! assert (isobject (x));
