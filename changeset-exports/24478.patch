# HG changeset patch
# User Rik <rik@octave.org>
# Date 1514416948 28800
#      Wed Dec 27 15:22:28 2017 -0800
# Node ID 59041be1994bd4bb5cc1fc1de8ea4fad113fe9db
# Parent  e8cb11de93832cbdac1d6510629aecc36fce6d57
Use new function isgraphics to simplify m-files.

* uibuttongroup.m, uicontrol.m, __clabel__.m, clabel.m, shrinkfaces.m:
Use 'isgraphics (h, "type")' to replace separate calls to 'ishghandle (h)'
and 'strcmp (get (h, "type"), "type")'.

* hidden.m, legend.m, __errplot__.m, __plt__.m,__gnuplot_draw_figure__.m:
For performance, call get() just once to get both "type" and "tag" properties.

diff --git a/scripts/gui/uibuttongroup.m b/scripts/gui/uibuttongroup.m
--- a/scripts/gui/uibuttongroup.m
+++ b/scripts/gui/uibuttongroup.m
@@ -59,18 +59,17 @@
 ## @end example
 ## @seealso{figure, uipanel}
 ## @end deftypefn
 
 ## Author: zeripath
 
 function hui = uibuttongroup (varargin)
 
-  if (nargin == 1 && ishghandle (varargin{1})
-      && strcmpi (get (varargin{1}, "type"), "uibuttongroup"))
+  if (nargin == 1 && isgraphics (varargin{1}, "uibuttongroup"))
     error ("uibuttongroup: focusing not implemented yet");
   endif
 
   [h, args] = __uiobject_split_args__ ("uibuttongroup", varargin,
                                        {"figure", "uipanel", "uibuttongroup"});
   hui = __go_uibuttongroup__ (h, args{:});
 
 endfunction
diff --git a/scripts/gui/uicontrol.m b/scripts/gui/uicontrol.m
--- a/scripts/gui/uicontrol.m
+++ b/scripts/gui/uicontrol.m
@@ -95,18 +95,17 @@
 ## @end example
 ## @seealso{figure, uipanel}
 ## @end deftypefn
 
 ## Author: goffioul
 
 function hui = uicontrol (varargin)
 
-  if (nargin == 1 && ishghandle (varargin{1})
-      && strcmpi (get (varargin{1}, "type"), "uicontrol"))
+  if (nargin == 1 && isgraphics (varargin{1}, "uicontrol"))
     error ("uicontrol: focusing not implemented yet");
   endif
 
   [h, args] = __uiobject_split_args__ ("uicontrol", varargin,
                                        {"figure", "uipanel", "uibuttongroup"});
   htmp = __go_uicontrol__ (h, args{:});
 
   if (nargout > 0)
diff --git a/scripts/plot/appearance/__clabel__.m b/scripts/plot/appearance/__clabel__.m
--- a/scripts/plot/appearance/__clabel__.m
+++ b/scripts/plot/appearance/__clabel__.m
@@ -27,18 +27,17 @@ function h = __clabel__ (c, v, hparent, 
   units = get (hax, "units");
   set (hax, "units", "points");
   axpos = get (hax, "position");
   set (hax, "units", units);
   lims = axis ();
   xspacing = axpos(3) / (lims(2) - lims (1));
   yspacing = axpos(4) / (lims(4) - lims (3));
 
-  if (isscalar (hparent) && ishghandle (hparent)
-      && strcmp (get (hparent, "type"), "hggroup"))
+  if (isscalar (hparent) && isgraphics (hparent, "hggroup"))
     x = get (hparent, "xdata");
     xmin = min (x(:));
     xmax = max (x(:));
     y = get (hparent, "ydata");
     ymin = min (y(:));
     ymax = max (y(:));
   else
     xmin = xmax = ymin = ymax = NaN;
diff --git a/scripts/plot/appearance/clabel.m b/scripts/plot/appearance/clabel.m
--- a/scripts/plot/appearance/clabel.m
+++ b/scripts/plot/appearance/clabel.m
@@ -68,18 +68,17 @@ function h = clabel (c, varargin)
   label_spacing = 144;  # 2 inches in points
 
   if (nargin < 1)
     print_usage ();
   elseif (nargin == 1)
     hparent = gca ();
   else
     arg = varargin{1};
-    if (isscalar (arg) && ishghandle (arg)
-        && strcmp (get (arg, "type"), "hggroup"))
+    if (isscalar (arg) && isgraphics (arg, "hggroup"))
       try
         get (arg, "contourmatrix");
       catch
         error ("clabel: H must be a handle to a contour group");
       end_try_catch
       have_hg = true;
       hg = arg;
       varargin(1) = [];
diff --git a/scripts/plot/appearance/hidden.m b/scripts/plot/appearance/hidden.m
--- a/scripts/plot/appearance/hidden.m
+++ b/scripts/plot/appearance/hidden.m
@@ -47,18 +47,17 @@ function state = hidden (mode = "toggle"
     if (! ischar (mode))
       error ("hidden: MODE must be a string");
     elseif (! any (strcmpi (mode, {"on", "off"})))
       error ('hidden: MODE must be "on" or "off"');
     endif
   endif
 
   for h = (get (gca (), "children")).';
-    htype = get (h, "type");
-    htag = get (h, "tag");
+    [htype, htag] = get (h, {"type", "tag"}){:};
     if (strcmp (htype, "surface") || strcmp (htag, "trimesh"))
       fc = get (h, "facecolor");
       if ((! ischar (fc) && is_white (fc))
           || (ischar (fc) && strcmp (fc, "none")))
         switch (mode)
           case "on"
             set (h, "facecolor", "w");
           case "off"
diff --git a/scripts/plot/appearance/legend.m b/scripts/plot/appearance/legend.m
--- a/scripts/plot/appearance/legend.m
+++ b/scripts/plot/appearance/legend.m
@@ -183,18 +183,17 @@ function [hleg, hleg_obj, hplot, labels]
   endif
   nargs = numel (varargin);
   nkids = numel (kids);
 
   ## Find any existing legend object on figure
   hlegend = [];
   fkids = get (fig, "children");
   for i = 1 : numel (fkids)
-    if (   strcmp (get (fkids(i), "type"), "axes")
-        && strcmp (get (fkids(i), "tag"), "legend"))
+    if (strcmp (get (fkids(i), {"type", "tag"}), {"axes", "legend"}))
       handle = getappdata (fkids(i), "handle");
       if (any (ismember (handle, ca)))
         hlegend = fkids(i);
         break;
       endif
     endif
   endfor
 
diff --git a/scripts/plot/draw/private/__errplot__.m b/scripts/plot/draw/private/__errplot__.m
--- a/scripts/plot/draw/private/__errplot__.m
+++ b/scripts/plot/draw/private/__errplot__.m
@@ -250,18 +250,17 @@ function h = __do_errplot__ (fstr, hax, 
 
   endfor
 
   ## Process legend key
   if (! isempty (fmt.key) && nplots > 0)
     hlegend = [];
     fkids = get (gcf (), "children");
     for i = 1 : numel (fkids)
-      if (   strcmp (get (fkids(i), "type"), "axes")
-          && strcmp (get (fkids(i), "tag"), "legend"))
+      if (strcmp (get (fkids(i), {"type", "tag"}), {"axes", "legend"}))
         leghandle = getappdata (fkids(i), "handle");
         if (! isempty (intersect (leghandle, gca ())))
           hlegend = fkids(i);
           break;
         endif
       endif
     endfor
 
diff --git a/scripts/plot/draw/private/__plt__.m b/scripts/plot/draw/private/__plt__.m
--- a/scripts/plot/draw/private/__plt__.m
+++ b/scripts/plot/draw/private/__plt__.m
@@ -35,18 +35,17 @@ function retval = __plt__ (caller, h, va
     x_set = false;
     y_set = false;
     property_set = false;
     properties = {};
 
     hlegend = [];
     fkids = get (gcf (), "children");
     for i = 1 : numel (fkids)
-      if (   strcmp (get (fkids(i), "type"), "axes")
-          && strcmp (get (fkids(i), "tag"), "legend"))
+      if (strcmp (get (fkids(i), {"type", "tag"}), {"axes", "legend"}))
         leghandle = getappdata (fkids(i), "handle");
         if (! isempty (intersect (leghandle, gca ())))
           hlegend = fkids(i);
           break;
         endif
       endif
     endfor
 
diff --git a/scripts/plot/draw/shrinkfaces.m b/scripts/plot/draw/shrinkfaces.m
--- a/scripts/plot/draw/shrinkfaces.m
+++ b/scripts/plot/draw/shrinkfaces.m
@@ -71,18 +71,17 @@ function [nf, nv] = shrinkfaces (varargi
   if (nargin < 1 || nargin > 3 || nargout > 2)
     print_usage ();
   endif
 
   sf = 0.3;
   colors = [];
   p = varargin{1};
 
-  if (isscalar (p) && ishghandle (p) && nargin < 3
-      && strcmp (get (p, "type"), "patch"))
+  if (isscalar (p) && isgraphics (p, "patch") && nargin < 3)
     faces = get (p, "Faces");
     vertices = get (p, "Vertices");
     colors = get (p, "FaceVertexCData");
     if (nargin == 2)
       sf = varargin{2};
     endif
   elseif (isstruct (p) && nargin < 3)
     faces = p.faces;
diff --git a/scripts/plot/util/private/__gnuplot_draw_figure__.m b/scripts/plot/util/private/__gnuplot_draw_figure__.m
--- a/scripts/plot/util/private/__gnuplot_draw_figure__.m
+++ b/scripts/plot/util/private/__gnuplot_draw_figure__.m
@@ -154,18 +154,18 @@ function __gnuplot_draw_figure__ (h, plo
                   fprintf (plot_stream, ['set border linecolor rgb "#%02x%02x%02x"' "\n"], round (255 * (1 - bg)));
                 endif
                 ## Find if this axes has an associated legend axes and pass it
                 ## to __gnuplot_draw_axes__
                 hlegend = [];
                 fkids = get (h, "children");
                 for j = 1 : numel (fkids)
                   if (ishghandle (fkids (j))
-                      && strcmp (get (fkids (j), "type"), "axes")
-                      && (strcmp (get (fkids (j), "tag"), "legend")))
+                      && strcmp (get (fkids(j), {"type", "tag"}),
+                                 {"axes", "legend"}))
                     leghandle = getappdata (fkids(j), "handle");
                     if (! isempty (intersect (leghandle, kids(i))))
                       hlegend = get (fkids(j));
                       break;
                     endif
                   endif
                 endfor
                 __gnuplot_draw_axes__ (kids(i), plot_stream, enhanced,
