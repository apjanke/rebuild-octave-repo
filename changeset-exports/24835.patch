# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1520274183 18000
#      Mon Mar 05 13:23:03 2018 -0500
# Node ID c644c53c8d3737fb7052b04634bb37a5af6e2017
# Parent  6daf8a9bd1edfcd29fb58ba4157d079517bcddba
use unique directory names in getpref and setpref tests

* getpref.m, setpref.m: Use tempname to get unique directory names.
Create directory for test and remove in unwind protect block.

diff --git a/scripts/prefs/getpref.m b/scripts/prefs/getpref.m
--- a/scripts/prefs/getpref.m
+++ b/scripts/prefs/getpref.m
@@ -103,18 +103,21 @@ function retval = getpref (group, pref, 
     endif
   endif
 
 endfunction
 
 
 %!test
 %! HOME = getenv ("HOME");
+%! tmp_home = tempname ();
 %! unwind_protect
-%!   setenv ("HOME", P_tmpdir ());
+%!   mkdir (tmp_home);
+%!   setenv ("HOME", tmp_home);
+%!
 %!   addpref ("group1", "pref1", [1 2 3]);
 %!   addpref ("group2", {"prefA", "prefB"}, {"StringA", {"StringB"}});
 %!
 %!   exp.group1.pref1 = [1 2 3];
 %!   exp.group2.prefA = "StringA";
 %!   exp.group2.prefB = {"StringB"};
 %!   obs = getpref ();
 %!   assert (obs, exp);
@@ -136,17 +139,20 @@ endfunction
 %!           {"StringA", "StringC"});
 %!   assert (getpref ("group2", "prefC"), "StringC");
 %!   fail ('getpref ("group1", {"p1", "p2"}, 1)', ...
 %!         "size mismatch for PREF and DEFAULT");
 %!   fail ('getpref ("group2", {"prefA", "prefD"})',
 %!         "preference prefD does not exist in GROUP group2");
 %!
 %! unwind_protect_cleanup
-%!   unlink (fullfile (P_tmpdir (), ".octave_prefs"));
+%!   unlink (fullfile (tmp_home, ".octave_prefs"));
+%!   if (exist (tmp_home, "dir"))
+%!     rmdir (tmp_home);
+%!   endif
 %!   if (isempty (HOME))
 %!     unsetenv ("HOME");
 %!   else
 %!     setenv ("HOME", HOME);
 %!   endif
 %! end_unwind_protect
 
 %!error getpref (1,2,3,4)
diff --git a/scripts/prefs/setpref.m b/scripts/prefs/setpref.m
--- a/scripts/prefs/setpref.m
+++ b/scripts/prefs/setpref.m
@@ -66,34 +66,39 @@ function setpref (group, pref, val)
 
   saveprefs (prefs);
 
 endfunction
 
 
 %!test
 %! HOME = getenv ("HOME");
+%! tmp_home = tempname ();
 %! unwind_protect
-%!   setenv ("HOME", P_tmpdir ());
+%!   mkdir (tmp_home);
+%!   setenv ("HOME", tmp_home);
 %!
 %!   setpref ("group1", "pref1", [1 2 3]);
 %!   assert (getpref ("group1", "pref1"), [1 2 3]);
 %!
 %!   setpref ("group2", {"prefA", "prefB"}, {"StringA", {"StringB"}});
 %!   assert (getpref ("group2", "prefA"), "StringA");
 %!   assert (getpref ("group2", "prefB"), {"StringB"});
 %!
 %!   setpref ("group1", {"pref1", "pref2"}, {1, 2});
 %!   assert (getpref ("group1", "pref1"), 1);
 %!   assert (getpref ("group1", "pref2"), 2);
 %!
 %!   fail ('setpref ("group1", {"p1", "p2"}, 1)', ...
 %!         "size mismatch for PREF and VAL");
 %! unwind_protect_cleanup
-%!   unlink (fullfile (P_tmpdir (), ".octave_prefs"));
+%!   unlink (fullfile (tmp_home, ".octave_prefs"));
+%!   if (exist (tmp_home, "dir"))
+%!     rmdir (tmp_home);
+%!   endif
 %!   if (isempty (HOME))
 %!     unsetenv ("HOME");
 %!   else
 %!     setenv ("HOME", HOME);
 %!   endif
 %! end_unwind_protect
 
 %!error setpref ()
