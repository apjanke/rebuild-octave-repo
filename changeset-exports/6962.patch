# HG changeset patch
# User jwe
# Date 1191617539 0
#      Fri Oct 05 20:52:19 2007 +0000
# Node ID 9ac23c7f1c37e9eac627ddfd0207c93f333aa78f
# Parent  b559b4bcf51f6d2fb142348e3aaa1cb7f3811818
[project @ 2007-10-05 20:52:19 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2007-10-05  John W. Eaton  <jwe@octave.org>
+
+	* plot/__next_line_color__.m: Get color_rotation from axes
+	colororder property.
+
 2007-10-03  John W. Eaton  <jwe@octave.org>
 
 	* miscellaneous/dir.m: Handle symbolic links in compatible way.
 	Use S_ISDIR (st.mode) instead of checking st.modestr(1) == "d".
 
 	* linear-algebra/Makefile.in (SOURCES): Rename norm.m to __norm__.m.
 	* linear-algebra/__norm__.m: Rename from norm.m.  Eliminate
 	special for __vnorm__.
diff --git a/scripts/plot/__next_line_color__.m b/scripts/plot/__next_line_color__.m
--- a/scripts/plot/__next_line_color__.m
+++ b/scripts/plot/__next_line_color__.m
@@ -20,33 +20,30 @@
 ## Undocumented internal function.
 
 ## Return the next line color in the rotation.
 
 ## Author: jwe
 
 function rgb = __next_line_color__ (reset)
 
-  persistent color_rotation = [ 0,    0,    1;
-				0,    0.5,  0;
-				1,    0,    0;
-				0,    0.75, 0.75;
-				0.75, 0,    0.75;
-				0.75, 0.75, 0;
-				0.25, 0.25, 0.25];
-
-  persistent num_colors = rows (color_rotation);
-  persistent color_index = 1;
+  persistent color_rotation;
+  persistent num_colors;
+  persistent color_index;
 
   if (nargin < 2)
     if (nargin == 1 && reset)
+      color_rotation = get (gca (), "colororder");
+      num_colors = rows (color_rotation);
       color_index = 1;
-    else
+    elseif (! isempty (color_rotation))
       rgb = color_rotation(color_index,:);
       if (++color_index > num_colors)
 	color_index = 1;
       endif
+    else
+      error ("__next_line_color__: color_rotation not initialized");
     endif
   else
     print_usage ();
   endif
 
 endfunction
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,16 @@
 2007-10-05  John W. Eaton  <jwe@octave.org>
 
+	* graphics.h.in (axes::properties): New property, colororder.
+	* graphics.cc (default_colororder): New function.
+	(axes::properties::properties, axes::properties::get,
+	axes::properties::set_defaults,
+	axes::properties::factory_defaults, ): Handle colororder.
+
 	* mappers.cc (xzlgamma): New static function.
 	(install_mapper_functions): Pass xzlgamma for c_c_map for lgamma
 	mapper.  Pass 1 for can_ret_cmplx_for_real and set hi to
 	octave_Inf.
 
 2007-10-04  John W. Eaton  <jwe@octave.org>
 
 	* DLD-FUNCTIONS/symrcm.cc: Move static functions to top of file to
diff --git a/src/graphics.cc b/src/graphics.cc
--- a/src/graphics.cc
+++ b/src/graphics.cc
@@ -996,25 +996,53 @@ figure::get_default (const property_name
 
   return retval;
 }
 
 std::string figure::properties::go_name ("figure");
 
 // ---------------------------------------------------------------------
 
+static Matrix
+default_colororder (void)
+{
+  Matrix retval (7, 3, 0.0);
+
+  retval(0,2) = 1.0;
+
+  retval(1,1) = 0.5;
+
+  retval(2,0) = 1.0;
+
+  retval(3,1) = 0.75;
+  retval(3,2) = 0.75;
+
+  retval(4,0) = 0.75;
+  retval(4,2) = 0.75;
+
+  retval(5,0) = 0.75;
+  retval(5,1) = 0.75;
+
+  retval(6,0) = 0.25;
+  retval(6,1) = 0.25;
+  retval(6,2) = 0.25;
+
+  return retval;
+}
+
 axes::properties::properties (const graphics_handle& mh,
 					const graphics_handle& p)
   : base_properties (go_name, mh, p),
     position (Matrix ()),
     title (octave_NaN),
     box ("on"),
     key ("off"),
     keybox ("off"),
     keypos (1),
+    colororder (default_colororder ()),
     dataaspectratio (Matrix (1, 3, 1.0)),
     dataaspectratiomode ("auto"),
     xlim (),
     ylim (),
     zlim (),
     clim (),
     xlimmode ("auto"),
     ylimmode ("auto"),
@@ -1158,16 +1186,18 @@ axes::properties::set (const property_na
   else if (name.compare ("box"))
     set_box (val);
   else if (name.compare ("key"))
     set_key (val);
   else if (name.compare ("keybox"))
     set_keybox (val);
   else if (name.compare ("keypos"))
     set_keypos (val);
+  else if (name.compare ("colororder"))
+    set_colororder (val);
   else if (name.compare ("dataaspectratio"))
     set_dataaspectratio (val);
   else if (name.compare ("dataaspectratiomode"))
     set_dataaspectratiomode (val);
   else if (name.compare ("xlim"))
     set_xlim (val);
   else if (name.compare ("ylim"))
     set_ylim (val);
@@ -1264,16 +1294,17 @@ axes::properties::set_defaults (base_gra
 				const std::string& mode)
 {
   position = Matrix ();
   title = octave_NaN;
   box = "on";
   key = "off";
   keybox = "off";
   keypos = 1;
+  colororder = default_colororder ();
   dataaspectratio = Matrix (1, 3, 1.0);
   dataaspectratiomode = "auto";
 
   Matrix tlim (1, 2, 0.0);
   tlim(1) = 1;
   xlim = tlim;
   ylim = tlim;
   zlim = tlim;
@@ -1387,16 +1418,17 @@ axes::properties::get (void) const
   m.assign ("children", children);
   m.assign ("__modified__", __modified__);
   m.assign ("position", position);
   m.assign ("title", get_title().as_octave_value ());
   m.assign ("box", box);
   m.assign ("key", key);
   m.assign ("keybox", keybox);
   m.assign ("keypos", keypos);
+  m.assign ("colororder", colororder);
   m.assign ("dataaspectratio", dataaspectratio);
   m.assign ("dataaspectratiomode", dataaspectratiomode);
   m.assign ("xlim", xlim);
   m.assign ("ylim", ylim);
   m.assign ("zlim", zlim);
   m.assign ("clim", clim);
   m.assign ("xlimmode", xlimmode);
   m.assign ("ylimmode", ylimmode);
@@ -1459,16 +1491,18 @@ axes::properties::get (const property_na
   else if (name.compare ("box"))
     retval = box;
   else if (name.compare ("key"))
     retval = key;
   else if (name.compare ("keybox"))
     retval = keybox;
   else if (name.compare ("keypos"))
     retval = keypos;
+  else if (name.compare ("colororder"))
+    retval = colororder;
   else if (name.compare ("dataaspectratio"))
     retval = dataaspectratio;
   else if (name.compare ("dataaspectratiomode"))
     retval = dataaspectratiomode;
   else if (name.compare ("xlim"))
     retval = xlim;
   else if (name.compare ("ylim"))
     retval = ylim;
@@ -1588,16 +1622,17 @@ axes::properties::factory_defaults (void
   property_list::pval_map_type m;
 
   m["position"] = Matrix ();
   m["title"] = octave_NaN;
   m["box"] = "on";
   m["key"] = "off";
   m["keybox"] = "off";
   m["keypos"] = 1;
+  m["colororder"] = default_colororder ();
   m["dataaspectratio"] = Matrix (1, 3, 1.0);
   m["dataaspectratiomode"] = "auto";
 
   Matrix tlim (1, 2, 0.0);
   tlim(1) = 1;
 
   m["xlim"] = tlim;
   m["ylim"] = tlim;
diff --git a/src/graphics.h.in b/src/graphics.h.in
--- a/src/graphics.h.in
+++ b/src/graphics.h.in
@@ -1131,16 +1131,17 @@ public:
 
     BEGIN_PROPERTIES
       octave_value position
       mutable graphics_handle title GSO
       octave_value box
       octave_value key
       octave_value keybox
       octave_value keypos
+      octave_value colororder
       octave_value dataaspectratio m
       octave_value dataaspectratiomode
       octave_value xlim m
       octave_value ylim m
       octave_value zlim m
       octave_value clim m
       octave_value xlimmode
       octave_value ylimmode
