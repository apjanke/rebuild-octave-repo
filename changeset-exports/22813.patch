# HG changeset patch
# User Rik <rik@octave.org>
# Date 1479920731 28800
#      Wed Nov 23 09:05:31 2016 -0800
# Branch stable
# Node ID 23cda8d5d2d472e061c0305a8c3446d5c099b252
# Parent  1d3d0321bc5defd27759b285ac9c58384ed8c84d
doc: Update documentation for [xyz]lim.m.

* xlim.m, ylim.m, zlim.m: Update documentation to mention -Inf/Inf for
autoscaling.  Add Programming Note detailing which graphics properties are
modified by this function.

diff --git a/scripts/plot/appearance/xlim.m b/scripts/plot/appearance/xlim.m
--- a/scripts/plot/appearance/xlim.m
+++ b/scripts/plot/appearance/xlim.m
@@ -28,22 +28,29 @@
 ## Called without arguments @code{xlim} returns the x-axis limits of the
 ## current plot.
 ##
 ## With the input query @qcode{"mode"}, return the current x-limit
 ## calculation mode which is either @qcode{"auto"} or @qcode{"manual"}.
 ##
 ## If passed a 2-element vector [@var{x_lo} @var{x_hi}], the limits of the
 ## x-axis are set to these values and the mode is set to @qcode{"manual"}.
+## The special values -Inf and Inf can be used to indicate that either
+## the lower axis limit or upper axis limit should be automatically calculated.
 ##
 ## The current plotting mode can be changed by using either @qcode{"auto"}
 ## or @qcode{"manual"} as the argument.
 ##
 ## If the first argument @var{hax} is an axes handle, then operate on
 ## this axis rather than the current axes returned by @code{gca}.
+##
+## Programming Note: The @code{xlim} function operates by modifying the
+## @qcode{"xlim"} and @qcode{"xlimmode"} properties of an axes object.  These
+## properties can be be directly inspected and altered with
+## @code{get}/@code{set}.
 ## @seealso{ylim, zlim, axis, set, get, gca}
 ## @end deftypefn
 
 function retval = xlim (varargin)
 
   ret = __axis_limits__ ("xlim", varargin{:});
 
   if (! isempty (ret))
@@ -57,17 +64,17 @@ endfunction
 %! clf;
 %! line ();
 %! xlim ([0.2, 0.8]);
 %! title ("xlim is [0.2, 0.8]");
 
 %!demo
 %! clf;
 %! line ();
-%! xlim ("auto");
+%! xlim auto;
 %! title ("xlim is auto");
 
 %!demo
 %! clf;
 %! plot3 ([0,1], [0,1], [0,1]);
 %! xlim ([0.2, 0.8]);
 %! title ("xlim is [0.2, 0.8]");
 
diff --git a/scripts/plot/appearance/ylim.m b/scripts/plot/appearance/ylim.m
--- a/scripts/plot/appearance/ylim.m
+++ b/scripts/plot/appearance/ylim.m
@@ -28,22 +28,29 @@
 ## Called without arguments @code{ylim} returns the y-axis limits of the
 ## current plot.
 ##
 ## With the input query @qcode{"mode"}, return the current
 ## y-limit calculation mode which is either @qcode{"auto"} or @qcode{"manual"}.
 ##
 ## If passed a 2-element vector [@var{y_lo} @var{y_hi}], the limits of the
 ## y-axis are set to these values and the mode is set to @qcode{"manual"}.
+## The special values -Inf and Inf can be used to indicate that either
+## the lower axis limit or upper axis limit should be automatically calculated.
 ##
 ## The current plotting mode can be changed by using either @qcode{"auto"}
 ## or @qcode{"manual"} as the argument.
 ##
 ## If the first argument @var{hax} is an axes handle, then operate on
 ## this axis rather than the current axes returned by @code{gca}.
+##
+## Programming Note: The @code{ylim} function operates by modifying the
+## @qcode{"ylim"} and @qcode{"ylimmode"} properties of an axes object.  These
+## properties can be be directly inspected and altered with
+## @code{get}/@code{set}.
 ## @seealso{xlim, zlim, axis, set, get, gca}
 ## @end deftypefn
 
 function retval = ylim (varargin)
 
   ret = __axis_limits__ ("ylim", varargin{:});
 
   if (! isempty (ret))
@@ -57,17 +64,17 @@ endfunction
 %! clf;
 %! line ();
 %! ylim ([0.2, 0.8]);
 %! title ("ylim is [0.2, 0.8]");
 
 %!demo
 %! clf;
 %! line ();
-%! ylim ("auto");
+%! ylim auto;
 %! title ("ylim is auto");
 
 %!demo
 %! clf;
 %! plot3 ([0,1], [0,1], [0,1]);
 %! ylim ([0.2, 0.8]);
 %! title ("ylim is [0.2, 0.8]");
 
diff --git a/scripts/plot/appearance/zlim.m b/scripts/plot/appearance/zlim.m
--- a/scripts/plot/appearance/zlim.m
+++ b/scripts/plot/appearance/zlim.m
@@ -28,22 +28,29 @@
 ## Called without arguments @code{zlim} returns the z-axis limits of the
 ## current plot.
 ##
 ## With the input query @qcode{"mode"}, return the current
 ## z-limit calculation mode which is either @qcode{"auto"} or @qcode{"manual"}.
 ##
 ## If passed a 2-element vector [@var{z_lo} @var{z_hi}], the limits of the
 ## x-axis are set to these values and the mode is set to @qcode{"manual"}.
+## The special values -Inf and Inf can be used to indicate that either
+## the lower axis limit or upper axis limit should be automatically calculated.
 ##
 ## The current plotting mode can be changed by using either @qcode{"auto"}
 ## or @qcode{"manual"} as the argument.
 ##
 ## If the first argument @var{hax} is an axes handle, then operate on
 ## this axis rather than the current axes returned by @code{gca}.
+##
+## Programming Note: The @code{zlim} function operates by modifying the
+## @qcode{"zlim"} and @qcode{"zlimmode"} properties of an axes object.  These
+## properties can be be directly inspected and altered with
+## @code{get}/@code{set}.
 ## @seealso{xlim, ylim, axis, set, get, gca}
 ## @end deftypefn
 
 function retval = zlim (varargin)
 
   ret = __axis_limits__ ("zlim", varargin{:});
 
   if (! isempty (ret))
@@ -69,17 +76,17 @@ endfunction
 %! clf;
 %! plot3 ([0,1], [0,1], [0,1]);
 %! zlim ([0.2, 0.8]);
 %! title ("zlim is [0.2, 0.8]");
 
 %!demo
 %! clf;
 %! plot3 ([0,1], [0,1], [0,1]);
-%! zlim ("auto");
+%! zlim auto;
 %! title ("zlim is auto");
 
 %!test
 %! hf = figure ("visible", "off");
 %! unwind_protect
 %!   limz = [0, 1.1];
 %!   plot3 ([0,1], [0,1], [0,1]);
 %!   zlim (limz);
