# HG changeset patch
# User Lachlan Andrew <lachlanbis@gmail.com>
# Date 1458982009 -39600
#      Sat Mar 26 19:46:49 2016 +1100
# Node ID 08baf0ebc9a90dc62a6f5a832373714f072a87fb
# Parent  87fc55416513d1972481ddb1984259377ebbba4f
Reappropriate <unnamed> editor tab when opening a new file (bug #47529)

* file-editor.cc (file_editor::request_open_file): Check for an unmodified
unnamed file, and use it if one is present.
(file_editor::find_tab_widget): Return true if file == tab_file == "".
* file-editor-tab.cc (file_editor_tab::file_name_query): Report file name
even if it is empty.

diff --git a/libgui/src/m-editor/file-editor-tab.cc b/libgui/src/m-editor/file-editor-tab.cc
--- a/libgui/src/m-editor/file-editor-tab.cc
+++ b/libgui/src/m-editor/file-editor-tab.cc
@@ -2262,19 +2262,18 @@ file_editor_tab::change_editor_state (co
 void
 file_editor_tab::file_name_query (const QWidget *ID)
 {
   // A zero (null pointer) means that all file editor tabs
   // should respond, otherwise just the desired file editor tab.
   if (ID != this && ID != 0)
     return;
 
-  // Unnamed files shouldn't be transmitted.
-  if (! _file_name.isEmpty ())
-    emit add_filename_to_list (_file_name, _encoding, this);
+  // This list also includes windows with name ""
+  emit add_filename_to_list (_file_name, _encoding, this);
 }
 
 void
 file_editor_tab::handle_file_reload_answer (int decision)
 {
   if (decision == QMessageBox::Yes)
     {
       // reload: file is readded to the file watcher in set_file_name ()
diff --git a/libgui/src/m-editor/file-editor.cc b/libgui/src/m-editor/file-editor.cc
--- a/libgui/src/m-editor/file-editor.cc
+++ b/libgui/src/m-editor/file-editor.cc
@@ -321,17 +321,18 @@ file_editor::find_tab_widget (const QStr
 {
   QWidget *retval = 0;
 
   for (editor_tab_map_const_iterator p = editor_tab_map.begin ();
        p != editor_tab_map.end (); p++)
     {
       QString tab_file = p->first;
 
-      if (same_file (file.toStdString (), tab_file.toStdString ()))
+      if (same_file (file.toStdString (), tab_file.toStdString ())
+          || file == tab_file)     // needed as same_file ("","") is false.
         {
           retval = p->second.fet_ID;
           break;
         }
     }
 
   return retval;
 }
@@ -449,17 +450,30 @@ file_editor::request_open_file (const QS
           if (! ((breakpoint_marker || debug_pointer) && is_editor_console_tabbed ()))
             {
               emit fetab_set_focus (tab);
               focus ();
             }
         }
       else
         {
-          file_editor_tab *fileEditorTab = new file_editor_tab ();
+          file_editor_tab *fileEditorTab = 0;
+          // Reuse <unnamed> tab if it hasn't yet been modified.
+          tab = find_tab_widget ("");
+          if (tab)
+            {
+              fileEditorTab = static_cast<file_editor_tab *>(tab);
+              if (fileEditorTab->qsci_edit_area ()->isModified ())
+                fileEditorTab = 0;
+            }
+
+          // If <unnamed> was absent or modified, create a new tab.
+          if (!fileEditorTab)
+            fileEditorTab = new file_editor_tab ();
+
           if (fileEditorTab)
             {
               fileEditorTab->set_encoding (encoding);
               QString result = fileEditorTab->load_file (openFileName);
               if (result == "")
                 {
                   // Supply empty title then have the file_editor_tab update
                   // with full or short name.
