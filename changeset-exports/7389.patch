# HG changeset patch
# User jwe
# Date 1200472334 0
#      Wed Jan 16 08:32:14 2008 +0000
# Node ID 4d0d6c357bc628b1230b81aa0899626a2700f161
# Parent  0e1ccfe1bf913c9a92c169d75055a85269b3b1fa
[project @ 2008-01-16 08:32:13 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,14 @@
+2008-01-16  John W. Eaton  <jwe@octave.org>
+
+	* pt-assign.cc (tree_simple_assignment::rvalue,
+	tree_multi_assignment::rvalue): Handle assignment of
+	comma-separated lists.
+
 2008-01-15  John W. Eaton  <jwe@octave.org>
 
 	* mappers.cc (install_mapper_functions): Move test for asin here
 	from test/test_arith.m.
 
 	* graphics.h.in (class line::properties, class text::properties):
 	Rename erase_mode property to erasemode.
 
diff --git a/src/pt-assign.cc b/src/pt-assign.cc
--- a/src/pt-assign.cc
+++ b/src/pt-assign.cc
@@ -204,24 +204,34 @@ tree_simple_assignment::rvalue (void)
       if (! (error_state || tmp.empty ()))
 	{
 	  octave_value rhs_val = tmp(0);
 
 	  if (rhs_val.is_undefined ())
 	    {
 	      error ("value on right hand side of assignment is undefined");
 	      eval_error ();
-	    }
-	  else if (rhs_val.is_cs_list ())
-	    {
-	      error ("invalid assignment of comma-separated list");
-	      eval_error ();
+	      return retval;
 	    }
 	  else
 	    {
+	      if (rhs_val.is_cs_list ())
+		{
+		  octave_value_list lst = rhs_val.list_value ();
+
+		  if (! lst.empty ())
+		    rhs_val = lst(0);
+		  else
+		    {
+		      error ("invalid number of elements on RHS of assignment");
+		      eval_error ();
+		      return retval;
+		    }
+		}
+
 	      octave_lvalue ult = lhs->lvalue ();
 
 	      if (error_state)
 		eval_error ();
 	      else
 		{
 		  ult.assign (etype, rhs_val);
 
@@ -380,19 +390,18 @@ tree_multi_assignment::rvalue (int)
 	  octave_idx_type n = rhs_val.length ();
 
 	  if (n == 1)
 	    {
 	      octave_value tmp = rhs_val(0);
 
 	      if (tmp.is_cs_list ())
 		{
-		  error ("invalid assignment of comma-separated list");
-		  eval_error ();
-		  return retval;
+		  rhs_val = tmp.list_value ();
+		  n = rhs_val.length ();
 		}
 	    }
 
 	  retval.resize (n, octave_value ());
 
 	  tree_argument_list::iterator q = lhs->begin ();
 
 	  for (std::list<octave_lvalue>::iterator p = lvalue_list.begin ();
