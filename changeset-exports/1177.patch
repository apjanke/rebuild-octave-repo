# HG changeset patch
# User jwe
# Date 795882918 0
#      Wed Mar 22 14:35:18 1995 +0000
# Node ID da83c9182359ff5b3f8f8ca393ae97e440586fe9
# Parent  fe5f25f61865d27f0b3b47015c37abe53b230774
[project @ 1995-03-22 14:35:18 by jwe]

diff --git a/Makeconf.in b/Makeconf.in
--- a/Makeconf.in
+++ b/Makeconf.in
@@ -33,16 +33,18 @@ OCTAVE_LITE = @lite_kernel@
 F2C = @F2C@
 F2CFLAGS = @F2CFLAGS@
 
 # Fortran compiler flags.
 
 FC = @FC@
 F77 = @F77@
 FFLAGS = @FFLAGS@
+FUGLY = @FUGLY@
+ALL_FFLAGS = $(FUGLY) $(FFLAGS)
 
 # cc and associated flags.
 
 # Clean up INCFLAGS a bit if we are not compiling in a separate
 # directory.
 ifeq ($(srcdir),.)
   TMP_IF_1 = -I. -I../src
 else
@@ -203,16 +205,17 @@ target_host_type = @target_host_type@
 # the pattern `%.c : %.f', but we don't want to replace make's default
 # rule for making object from Fortran source files, so there should be
 # no pattern or command for that.
 
 %.c : %.f
 @DOT_C_FROM_DOT_F_CMD@
 
 @DOT_O_FROM_DOT_F_PAT@
+@DOT_O_FROM_DOT_F_CMD@
 
 # How to make .o files from .c files:
 
 .c.o:
 	$(CC) -c $(CPPFLAGS) $(ALL_CFLAGS) $<
 
 .cc.o:
 	$(CXX) -c $(CPPFLAGS) $(ALL_CXXFLAGS) $<
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -16,17 +16,17 @@ dnl Copyright (C) 1992, 1993, 1994, 1995
 ### ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 ### FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ### for more details.
 ### 
 ### You should have received a copy of the GNU General Public License
 ### along with Octave; see the file COPYING.  If not, write to the Free
 ### Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
 
-AC_REVISION($Revision: 1.104 $)
+AC_REVISION($Revision: 1.105 $)
 AC_PREREQ(2.0)
 AC_INIT(src/octave.cc)
 AC_CONFIG_HEADER(config.h)
 
 AC_DEFINE(OCTAVE_SOURCE, 1)
 
 AC_CANONICAL_HOST
 if test -z "$host"; then
@@ -39,62 +39,69 @@ if test "$host" = unknown; then
 ])
 fi
 AC_SUBST(target_host_type)
 
 ### Allow the user to force us to use f2c.
 
 AC_ARG_WITH(f2c,
   [  --with-f2c              use f2c even if Fortran compiler is available],
-  use_f2c=true, use_f2c=false)
+  [if test $withval = no; then use_f2c=false; else use_f2c=true; fi],
+  use_f2c=false)
+
+### Allow the user to force us to use g77.
+
+AC_ARG_WITH(g77,
+  [  --with-g77              use g77 to compile Fortran subroutines],
+  [if test $withval = no; then use_g77=false; else use_g77=true; fi],
+  use_g77=false)
+
+if $use_f2c && $use_g77; then
+  AC_MSG_WARN([--with-f2c and --with-g77 both specified!  Using g77...])
+  use_f2c=false
+fi
 
 ### Allow the user to experiment with dynamic linking using GNU dld.
 
 AC_ARG_ENABLE(dld,
   [  --enable-dld            use DLD for dynamic linking (not all systems)],
-  use_dld=true, use_dld=false)
+  [if test $enableval = no; then use_dld=false; else use_dld=true; fi],
+  use_dld=false)
 AC_SUBST(use_dld)
 
 ### Allow compilation of smaller kernel.  This only works if some form
 ### of dynamic linking is also supported and used.
 
 AC_ARG_ENABLE(lite-kernel,
   [  --enable-lite-kernel    compile smaller kernel (requires DLD)],
-  lite_kernel=true, lite_kernel=false)
+  [if test $enableval = no; then lite_kernel=false; else lite_kernel=true; fi],
+  lite_kernel=false)
 if $lite_kernel; then
   AC_DEFINE(OCTAVE_LITE, 1)
 fi
 AC_SUBST(lite_kernel)
 
 ### Allow the user disable support for GNU info.
 
 USE_GNU_INFO=true
 LIBINFO=../info/libinfo.a
 AC_ARG_ENABLE(info,
   [  --enable-info           use GNU info (default is yes)],
-  [])
-if test "$enableval" = no; then
-  USE_GNU_INFO=false
-  LIBINFO=
-fi
+  [if test $enableval = no; then USE_GNU_INFO=false; LIBINFO=""; fi], [])
 AC_SUBST(USE_GNU_INFO)
 AC_SUBST(LIBINFO)
 
 ### Allow the user disable support for command line editing using GNU
 ### readline.
 
 USE_READLINE=true
 LIBREADLINE=../readline/libreadline.a
 AC_ARG_ENABLE(readline,
   [  --enable-readline       use readline library (default is yes)],
-  [])
-if test "$enableval" = no; then
-  USE_READLINE=false
-  LIBREADLINE=
-fi
+  [if test "$enableval" = no; then USE_READLINE=false; LIBREADLINE=""; fi], [])
 AC_SUBST(USE_READLINE)
 AC_SUBST(LIBREADLINE)
 
 ### some defaults
 
 AC_PREFIX_DEFAULT(/usr/local)
 
 exec_prefix='$(prefix)'
@@ -389,16 +396,24 @@ AC_C_CONST
 ###
 ###    xlf : IBM / AIX
 ###   cf77 : Cray / Unicos
 ###    g77 : GNU Fortran (someday...)
 ###     fc : Convex
 ###
 ### I don't think the Cray compiler will ever work like f2c...
 
+if $use_g77; then
+  F77=g77
+fi
+
+if test -n "$F77"; then 
+  export F77
+fi
+
 if $use_f2c; then
   true
 else
   AC_CHECK_PROGS(F77, xlf cf77 f77 g77 fc)
 
   # If it looks like we have a Fortran compiler, try to determine
   # whether it might be compatible with f2c.
 
@@ -432,53 +447,61 @@ if test -z "$F2CFLAGS"; then
 fi
 
 if test -z "$FFLAGS"; then
   FFLAGS="-O"
   AC_MSG_RESULT([defining FFLAGS to be $FFLAGS])
 fi
 
 if test -n "$F77"; then
+  if test "$F77" = "g77"; then
+    FUGLY=-fugly
+    AC_MSG_RESULT([defining FUGLY to be $FUGLY])
+  fi
   export F77
   FLIBS=`sh $srcdir/flibs.sh`
   AC_MSG_RESULT([defining FLIBS to be $FLIBS])
   DOT_C_FROM_DOT_F_CMD=
-  DOT_O_FROM_DOT_F_PAT=
+  DOT_O_FROM_DOT_F_PAT='.f.o:'
+  DOT_O_FROM_DOT_F_CMD='	$(FC) -c $(ALL_FFLAGS) $<'
 elif test -n "$F2C" || $use_f2c; then
   AC_CHECK_LIB(f2c, main, FLIBS=-lf2c, [])
   if test -z "$FLIBS" ; then
     AC_CHECK_LIB(F77, main, FLIBS=-lF77, [])
     if test -n "$FLIBS" ; then
       AC_CHECK_LIB(I77, main, FLIBS="$FLIBS -lI77", [])
     fi
   fi
   if test -z "$FLIBS" ; then
     AC_MSG_WARN([I found f2c but not libf2c.a, or libF77.a and libI77.a])
   fi
   DOT_C_FROM_DOT_F_CMD='	cat $< | $(F2C) $(F2CFLAGS) > $(@F)'
   AC_MSG_RESULT([defining DOT_C_FROM_DOT_F_CMD to be $DOT_C_FROM_DOT_F_CMD])
   DOT_O_FROM_DOT_F_PAT='%.o : %.f'
+  DOT_O_FROM_DOT_F_CMD=
   AC_MSG_RESULT([defining DOT_O_FROM_DOT_F_PAT to be $DOT_O_FROM_DOT_F_PAT])
   AC_DEFINE(F77_APPEND_UNDERSCORE, 1)
 else
   AC_MSG_WARN([in order to build octave, you must have a compatible])
   AC_MSG_WARN([Fortran compiler or f2c installed and in your path.])
   AC_MSG_WARN([See the file INSTALL for more information.])
   AC_MSG_WARN([Continuing anyway...])
 fi
 
 FC=$F77
 AC_SUBST(FC)
 AC_SUBST(F77)
 AC_SUBST(FFLAGS)
+AC_SUBST(FUGLY)
 AC_SUBST(FLIBS)
 AC_SUBST(F2C)
 AC_SUBST(F2CFLAGS)
 AC_SUBST(DOT_C_FROM_DOT_F_CMD)
 AC_SUBST(DOT_O_FROM_DOT_F_PAT)
+AC_SUBST(DOT_O_FROM_DOT_F_CMD)
 
 ### Extract libraries and directories from FLIBS and CXXLIBS.
 ###
 ### Leave only libraries, with -lfoo converted to libfoo.a:
 
 changequote(,)dnl
 FLIB_LIST=`echo " $FLIBS " | sed -e 's/ -Xlinker *[^ ]*/ /g' \
 	-e 's/ -[LR] *[^ ]*/ /g' \
