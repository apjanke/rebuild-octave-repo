# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1362869680 18000
#      Sat Mar 09 17:54:40 2013 -0500
# Branch classdef
# Node ID d8c0f46efaf09701dc7e8e4ef7461d99a9d3bb70
# Parent  d2b268936783def487edf02b9231aa4065a8fba8
# Parent  c31fd42f9000493ecc36050485ae7b98615b9992
maint: periodic merge of default to classdef

diff --git a/Doxyfile b/Doxyfile
new file mode 100644
--- /dev/null
+++ b/Doxyfile
@@ -0,0 +1,267 @@
+# -*- mode: conf; -*-
+
+# Doxyfile for Doxygen 1.7.1
+
+# This file describes the settings to be used by the documentation system
+# doxygen (www.doxygen.org) for GNU Octave.
+#
+# All text after a hash (#) is considered a comment and will be ignored
+# The format is:
+#       TAG = value [value, ...]
+# For lists items can also be appended using:
+#       TAG += value [value, ...]
+# Values that contain spaces should be placed between quotes (" ")
+
+#---------------------------------------------------------------------------
+# Project related configuration options
+#---------------------------------------------------------------------------
+
+# This tag specifies the encoding used for all characters in the
+# config file that follow. We don't use anything but ASCII, but
+# there's no problem using UTF-8 from now on
+
+DOXYFILE_ENCODING      = UTF-8
+
+# Who we are. :-)
+
+PROJECT_NAME           = "GNU Octave"
+
+# The public stable API version (unrelated to the internal API
+# version).
+
+PROJECT_NUMBER         = 3.7
+
+# The OUTPUT_DIRECTORY tag is used to specify the (relative or absolute)
+# base path where the generated documentation will be put.
+
+OUTPUT_DIRECTORY       = doc/
+
+# Create 4096 sub-directories (in 2 levels) under the output directory
+# of each output format and will distribute the generated files over
+# these directories. Enabling this option is useful for us, since
+# feeding doxygen a huge amount of source files would put all
+# generated files in the same directory would otherwise cause
+# performance problems for the file system.
+
+CREATE_SUBDIRS         = YES
+
+# The OUTPUT_LANGUAGE tag is used to specify the language in which all
+# documentation generated by doxygen is written.
+
+OUTPUT_LANGUAGE        = English
+
+# Include brief member descriptions after the members that are listed
+# in the file and class documentation (similar to JavaDoc). Set to NO
+# to disable this.
+
+BRIEF_MEMBER_DESC      = YES
+
+# Prepend the brief description of a member or function before the
+# detailed description. Note: if both HIDE_UNDOC_MEMBERS and
+# BRIEF_MEMBER_DESC are set to NO, the brief descriptions will be
+# completely suppressed.
+
+REPEAT_BRIEF           = YES
+
+# If the ALWAYS_DETAILED_SEC and REPEAT_BRIEF tags are both set to YES then
+# Doxygen will generate a detailed section even if there is only a brief
+# description.
+
+ALWAYS_DETAILED_SEC    = NO
+
+# Show inherited members as if they were part of the current class
+
+INLINE_INHERITED_MEMB  = YES
+
+# Prepend the full path before files name in the file list and in the
+# header files.
+
+FULL_PATH_NAMES        = YES
+
+# Interpret the first line (until the first dot) of a JavaDoc-style
+# comment as the brief description (without needing the @brief
+# command).
+
+JAVADOC_AUTOBRIEF      = YES
+
+# Interpret the first line (until the first dot) of a Qt-style comment
+# as the brief descriptio (without needing the \brief command).
+
+QT_AUTOBRIEF           = NO
+
+# Undocumented member inherits the documentation from any documented
+# member that it re-implements.
+
+INHERIT_DOCS           = YES
+
+# If the SEPARATE_MEMBER_PAGES tag is set to YES, then doxygen will produce
+# a new page for each member. If set to NO, the documentation of a member will
+# be part of the file/class/namespace that contains it.
+
+SEPARATE_MEMBER_PAGES  = NO
+
+# The TAB_SIZE tag can be used to set the number of spaces in a tab.
+# Doxygen uses this value to replace tabs by spaces in code fragments.
+# We shouldn't have any tabs in the source code to begin with, however.
+
+TAB_SIZE               = 2
+
+# Figure out C++ stdlib classes without needing to parse those files.
+
+BUILTIN_STL_SUPPORT    = YES
+
+#---------------------------------------------------------------------------
+# Build related configuration options
+#---------------------------------------------------------------------------
+
+# Assume all entities in documentation are documented, even if no
+# documentation was available.
+
+EXTRACT_ALL            = YES
+
+# Include all private members of a class.
+
+EXTRACT_PRIVATE        = YES
+
+# Include  all static members of a file.
+
+EXTRACT_STATIC         = YES
+
+# Include classes (and structs) defined locally in source files in the
+# documentation.
+
+EXTRACT_LOCAL_CLASSES  = YES
+
+# We don't use namespaces, but if we did, this would extract the
+# anonymous one.
+
+EXTRACT_ANON_NSPACES   = YES
+
+# Hide internal docs, those with the \internal command.
+
+INTERNAL_DOCS          = NO
+
+# Case-sensitive filenames
+
+CASE_SENSE_NAMES       = YES
+
+# List include files with double quotes in the documentation rather
+# than with sharp brackets.
+
+FORCE_LOCAL_INCLUDES   = YES
+
+# Show members alphabetically
+
+SORT_MEMBER_DOCS       = YES
+
+# Also sort the brief descriptions
+
+SORT_BRIEF_DOCS        = YES
+
+# Put ctors first.
+
+SORT_MEMBERS_CTORS_1ST = YES
+
+# Show which directories the file is in.
+
+SHOW_DIRECTORIES       = YES
+
+# We don't have namespaces, so don't show them.
+
+SHOW_NAMESPACES        = NO
+
+#---------------------------------------------------------------------------
+# configuration options related to the input files
+#---------------------------------------------------------------------------
+
+# Which directories contain Octave source code
+
+INPUT                  = src/ liboctave/ libinterp/
+
+# Search subdirectories for input.
+
+RECURSIVE              = YES
+
+# Our examples.
+
+EXAMPLE_PATH           = examples/
+
+# If the value of the EXAMPLE_PATH tag contains directories, you can use the
+# EXAMPLE_PATTERNS tag to specify one or more wildcard pattern (like *.cpp
+# and *.h) to filter out the source-files in the directories. If left
+# blank all files are included.
+
+EXAMPLE_PATTERNS       =
+
+# There are no extra C++ files in the examples subdir
+
+EXAMPLE_RECURSIVE      = NO
+
+#---------------------------------------------------------------------------
+# configuration options related to source browsing
+#---------------------------------------------------------------------------
+
+# Generate a list of source files will be generated.
+
+SOURCE_BROWSER         = YES
+
+# Setting the INLINE_SOURCES tag to YES will include the body
+# of functions and classes directly in the documentation.
+
+INLINE_SOURCES         = NO
+
+# Hide any special comment blocks from generated source code
+# fragments. Normal C and C++ comments will always remain visible.
+
+STRIP_CODE_COMMENTS    = YES
+
+# For each documented function, list all documented functions
+# referencing it.
+
+REFERENCED_BY_RELATION = YES
+
+# For each documented function all documented entities called/used by
+# that function will be listed.
+
+REFERENCES_RELATION    = YES
+
+# References link to documenation, not source code.
+
+REFERENCES_LINK_SOURCE = NO
+
+#---------------------------------------------------------------------------
+# configuration options related to the HTML output
+#---------------------------------------------------------------------------
+
+# Generate HTML
+
+GENERATE_HTML          = YES
+
+# i.e. doc/doxyhtml
+
+HTML_OUTPUT            = doxyhtml
+
+#---------------------------------------------------------------------------
+# configuration options related to the LaTeX output
+#---------------------------------------------------------------------------
+
+# No LaTeX
+
+GENERATE_LATEX         = NO
+
+#---------------------------------------------------------------------------
+# Configuration options related to the dot tool
+#---------------------------------------------------------------------------
+
+# Show undocumented relations
+
+HIDE_UNDOC_RELATIONS   = NO
+
+# Use dot from graphviz to generate class diagrams.
+
+HAVE_DOT               = YES
+
+# Remove intermediate dot files.
+
+DOT_CLEANUP            = YES
+
diff --git a/doc/interpreter/io.txi b/doc/interpreter/io.txi
--- a/doc/interpreter/io.txi
+++ b/doc/interpreter/io.txi
@@ -173,28 +173,28 @@ A
      @print{}    1   2   3
      @print{}    4   5   6
      @print{}    7   8   9
 @end group
 @end example
 
 @DOCSTRING(save)
 
-@DOCSTRING(load)
-
-@DOCSTRING(fileread)
-
 There are three functions that modify the behavior of @code{save}.
 
 @DOCSTRING(default_save_options)
 
 @DOCSTRING(save_precision)
 
 @DOCSTRING(save_header_format_string)
 
+@DOCSTRING(load)
+
+@DOCSTRING(fileread)
+
 @DOCSTRING(native_float_format)
 
 It is possible to write data to a file in a similar way to the
 @code{disp} function for writing data to the screen.  The @code{fdisp}
 works just like @code{disp} except its first argument is a file pointer
 as created by @code{fopen}.  As an example, the following code writes
 to data @samp{myfile.txt}.
 
diff --git a/doc/interpreter/testfun.txi b/doc/interpreter/testfun.txi
--- a/doc/interpreter/testfun.txi
+++ b/doc/interpreter/testfun.txi
@@ -262,16 +262,55 @@ in the log file but not executed.  For e
 @group
 %!#demo
 %! @var{t} = [0:0.01:2*pi]; @var{x} = sin (@var{t});
 %! plot (@var{t}, @var{x});
 %! # you should now see a sine wave in your figure window
 @end group
 @end example
 
+@noindent
+The following trivial code snippet provides examples for the use of
+fail, assert, error and xtest:
+
+@example
+@group
+function output = must_be_zero (@var{input})
+  if (@var{input} != 0)
+    error ("Non-zero input!")
+  endif
+  output = input;
+endfunction
+
+%!fail ("must_be_zero (1)");
+%!assert (must_be_zero (0), 0);
+%!error <Non-zero> must_be_zero (1);
+%!xtest error ("This code generates an error");
+@end group
+@end example
+
+@noindent
+When putting this a file @file{must_be_zero.m}, and running the test, we see
+
+@example
+@group
+test must_be_zero verbose
+
+@result{}
+>>>>> /path/to/must_be_zero.m
+  ***** fail ("must_be_zero (1)");
+  ***** assert (must_be_zero (0), 0);
+  ***** error <Non-zero> must_be_zero (1);
+  ***** xtest error ("This code generates an error");
+!!!!! known failure
+This code generates an error
+PASSES 4 out of 4 tests (1 expected failures)
+@end group
+@end example
+
 @subsubheading Block type summary:
 
 @table @code
 @item %!test
 check that entire block is correct
 
 @item %!testif HAVE_XXX
 check block only if Octave was compiled with feature HAVE_XXX.
diff --git a/etc/HACKING b/etc/HACKING
--- a/etc/HACKING
+++ b/etc/HACKING
@@ -16,17 +16,16 @@ This eases our maintenance burden, (fewe
 more requirements on anyone wishing to build from the just-cloned
 sources.  For example, you have to use the latest stable versions of
 the maintainer tools we depend upon, including:
 
   - Autoconf <http://www.gnu.org/software/autoconf/>
   - Automake <http://www.gnu.org/software/automake/>
   - Bison <http://www.gnu.org/software/bison/>
   - Flex <http://www.gnu.org/software/flex/>
-  - Git <http://git-scm.com/>
   - Gnulib <http://www.gnu.org/software/gnulib/>
   - GNU Make <http://www.gnu.org/software/make/>
   - Gzip <http://www.gnu.org/software/gzip/>
   - Libtool <http://www.gnu.org/software/libtool/>
   - Mercurial <http://mercurial.selenic.com/>
   - Perl <http://www.cpan.org/>
   - Rsync <http://samba.anu.edu.au/rsync/>
   - Tar <http://www.gnu.org/software/tar/>
diff --git a/libgui/Makefile.am b/libgui/Makefile.am
--- a/libgui/Makefile.am
+++ b/libgui/Makefile.am
@@ -26,16 +26,17 @@ MOC_CPPFLAGS =
 
 octlib_LTLIBRARIES = liboctgui.la
 
 locales = \
   languages/be_BY.qm \
   languages/de_DE.qm \
   languages/en_US.qm \
   languages/es_ES.qm \
+  languages/nl_NL.qm \
   languages/pt_BR.qm \
   languages/ru_RU.qm \
   languages/uk_UA.qm
 
 EXTRA_DIST = default-qt-settings $(locales)
 CLEANFILES =
 
 BUILT_SOURCES =
diff --git a/libgui/languages/nl_NL.qm b/libgui/languages/nl_NL.qm
new file mode 100644
index e69de29bb2d1d6434b8b29ae775ad8c2e48c5391..227c6c5d0d4da9dba6307beddfec61359f373601
GIT binary patch
literal 20359
zc$~dF32+?Mm0!|G9*st0SqNi{F>Payj4caW3Bf2XK-Oj9OKVB?!n!c6=|3~g^mGs1
zJsQiKf+Da9n`GBij!JfmWDhnW1u1fogN3j_K?tD;q&Rj-2+I;e<$!EL$Y$9DvhTnD
zyMOmg_gJR37MIkTp8oH>|L*txYj%E9TlL-lyyX**uUqpkSN+4cezc2__MZ}R*+Yb^
z?<HjK-w?9ldxXqBLP)liwBCImA&H|T@wr7pR`u}fx_u;Z+tY+}%#y?t2|~_QN#faA
zLbmTE?Yl1^WcPEVeeWBDjDD81fB1`pZ0aEGx8G05z<-hUhv4(p6J#@k)3S_gz6aK~
zxcs{2akBZzjqv#nemy%uHov+Jt{0Lm6MsQS-wv{c!E4)1wlFyDIvIH2cX0nF<ouKd
zbbg;)w&_+v*8Y%RcNfU)755Ud@kiv)hdxV4@-}|Wevus3j}!9lZ<E6}1Ks_9MULF?
zHA1F3iE$yU8~!@^^ndS%{q7}qY`UG0)1M|^T4xfnbBz4kEk7q@+dq+)hFjse6)h`1
z2>eT~=hqdPmUABh_-CJJdDoAQ5%S(z%jl&aBjjD5Z+Y?+;MZ9<w!C&R1%5o!dcpkw
zuj2!)GcUeK$OV_S-Zb=nLdZ<(iJ>V%HkVs(eswkA9c%r^-wzTp*x7pf-QNJd>}>tw
zm5&k9ns5F3(Mdv-zSgHN2KYN(Y->4Vgpl$1woT)I4f5-2+i~e>gsfcC_UXrNgXbRO
z*WrI}d-$0vfiJhTJ@xnrp!brtSFU@3kn{QznQo9*=eES$w>km;Ly5wFz~|F`mH6Dy
znS}JN<=1uBCvJNb=vY6R_`(3}bN!zu?!4|9Le6<KaZlGgeEtK!ZhJcM@K@lvY*pg1
zSAGcle?9TUt02E~UrIbV{VCvMXX5*>1D&0ZCSHE)b<m5s_VWhe^V(YbzRHh*KObp7
zvg1ME*Msf!m%y*>H?@~1?j&T(@7n+NW*6vvfBPL50RPW=Z~FtEf&KUWUHc<fRe?{x
z=~(^h^>F=C$Dg&F4)mVhVXT1tX3y{V*u$XDn}$2?tzAOM@|QdAUk&=+^>oK~Zf0=a
z?09DIQP77i9Y475H^9$pI^Oy@=o4A&c<a^Y2)Srv*<Ai@!29`ScU%d4?YuFWdJ6R7
zqFa((_xvl+_3q>-lk33WCr@1a6VUG`lArtLXMle<ChvRWa^O!o`N&4l=e|Pn@wTsm
zT|A$B?svfV-cs`APpl;*HI)2y7WkWfs&n&2za`}SJ^VU#ap$PJ0pxve=bg)UfIba%
z-qiy5RzKPKCb<~)^-^l}E5Mhtzn|*A1Z=kdE2-SN55c~_lhSs8J*{4u(suU2^<e6{
z-geNZ8&dCoAL!HgJ*f{5-T-!VUFr*2Sig0B>duS*2ljtM>aM+@-$VDO?)?bxdG$wA
z599%E_E73U2l%n|aO%6~fgP_ok^0#Qkke2q^{WSg|82kQ>b{xT)9<^6{`qb~&iFFF
zDsI=#H-QiBw|9+QpMm?uuEWoPeh>YzE7x}h=*gdS-TD~#fi0ixy7l=q=-s(pFYW=o
zKKn@5uU~o?^yOpej^pD1zbCES3H<6GPha*0rr)1RFVsN)5}!=pa4+!v%xBX#-u4TS
z=ljwhZ+RZ%Qb~XO60o1)Qu^aRf$v+_rSEBRz|MY~e&`LbyK~p4U%F`y=s1#o``II4
zC&#-J*MPlm$aSy%8R*T0U+q381^RU1f$o8?fgPNY=^kGWbe(fe_Z3&cbLYR&eZ?KX
zm-jr-o&O%#?Y6hOZ~p-Jz4u(yeb*3tf9BcU4}E7R=<O5TuWbf-?^uyJvKIEU@kHjx
z#q2tgvA+uY=zS}5)0-ftcMW9z^2=Z!EiYtlO@f}T$!2bSGzWNY%KUT$<Tg$+Kl=te
zpB~7(b_C>-Jdk<a0KF!JU)O&l^M|__{l8v*wsj-y=iAGbD%>ACZTX=UV1LOUEdOBt
z6Y%tpbx^8n+hE};GDa+tBUMr+l$gXND*Wh#CK=cc_~{<Aa@8_5UDeesa~a$@Qw!cX
z3ZF_xYr0mTZcE!A;Xi+AM|R_OW#bTA)0Ni^dX#FqYuPOf@t=}OK<L1a0Y5oFO5vYP
zH2AIHrxJYY!rx^e$%aqtTSlS+pAGm<Az4^w!S|AMc+$tdGCOLO8JWrqHE7PInlej|
zxslZLkUapY0vrDY$Kpe22Pl=r$VI(Cz!*F{58Nxjzu>Zt>=>P|7Gl=zf|Zoia7(2+
zbmQ<~<gyGbqsS8#cB=)JOu&;dm<}P11zZxQa0M(gHARJ=gS29(xo8k;fYkj=Az+g=
z;CVC+o!R}gro_^*3FxpuXpDj^TZlrQhdV0#T?6n}ljDq1A7BOm9&?plmQ^aNb}16-
zh6bn%rj3eJ0%2B}Quq*iIK+9Is-=phn{iCek^``oDO8YKsqBFYHRE^KOLij_HYuWd
zhGlw?YF6a3VKM>_8*%JFEng6T`F+i^10Ve90KRN3P-Vn0e1<toKv%~pVO%FecSaDM
z<YqL&J~9VjTmWhbut89X?7^xTV~<P-S=hgURvi??j0(tO1#uPn6+`%zW`4y)t#0mN
zn)#Pi**P<}WDm0jcEn9k<2w>~>&<`8j8T<**z{oeMzS4#mw-ewv>k@T5<1MDtHCGE
z0QMZ)5NCvfY&wqjhe-<H4Us{glntX+)zB2vautiIKBGqgf1bB&1*EPGr#21^#@Nsv
zq^81Ykm4S#W}}(2H)d}-3V{iuaaTI-hKrRkm8luqr`!ShMMkpjD5}9|UgTTRO~oxz
zg%c3Hhg%vblKf><6!2T7oaj}_I=DYBI6PmsvMkndT1^yx8Tq{(e!qh~`a9f@J7gkq
zz$mnJ$_N)zO?Qj9MaR=iQ!Uff#_g%5tZ3v!D4cg6$hpk+#$z6a8v|go2hr}h#WXU*
zig2!J^sV4max~U0Pb0HS_4YEYI&QQh*Z`y)LXFUoug&94@3c*`3%XTxn#UX^1hrYb
z>5~vo5_49ev-4dY;y?!^Iq&;CB|8%BX?HXztW^h;D`z#}kHg-0g+wyKl7bl5{47Q~
zE?UM%Cg37+g!+-45i#%cJKk133ttc}y5^|{8HBqY9{x;?yI=S_2lyCf6X3IJNo-a@
zNpK&RN1HPJ_{E(qw_#gY8e@(n;-2&xv$J3is^eHWU1gSo2F3TUxaz!8R2@ar9ko)S
zs!g>)MVWGy8r(GW5;Yc;oMAbzY<^L3tTI)~R5hJwAF~PMyelH;bAE9Vg>$x^S*uWB
zO3+kCvk137y2nH9^`M?aPp`xzIm*LvZyolKo+QH&hfB}K-7dsLo{dc+PtDd{>W7}?
z0TPdba2S~_1Mk3fUxvgLF`0J*iWJ_c6L8)s_}2T!9eE1jv2c7`tkw`OhwI{90~C{+
zfpq(hZyH6kPA%ZDqOmjMm_%A_T)_;W-h~92ZV3ZxWWHqj{q><lx!kJuF9bq}$_0Uu
zB&D$bAfBXZMLkz!5f;M@d<V9Jf9I;U%~B(O5m?HcLlyKguBAW<X`?jZ{w6MQ)iA7@
z|AlTA26!YZQ^!#YbU@Mb09th!x*EIYEu#c~s-`=5UYtIVkNS?pa~E8~ws0C6mb?n-
zM>+QU?kJc5Yraz{;%5`hs4SeDgAzFmf3YBbbwK7!_o@xP_!6J%d%$-%l$IU7ul|kO
z`_aM7Q_y=2IL{c52^ZraIGZs`S+uISWyVA%D@AufZnaBd8Stf3W`L)hUe#EEzZ{Xn
zSi*CACL+D80?#p+1^BIE+N?HV48v^(3QO(>X^1_Cnz5&BX?kAgu2u!bEmB(nuWaZ!
z>`OH8%BF^;YQU`+PMsvziDd2ZKrjsZoRc%Nku}^4c%guK0o^Oxo9NI83s`7n(fo;4
z8Z^<OY8I#yuQ@AWdtsNvWLl9a!>BOwG2I3yVcFOyS;0U#;l2<{R>>Fun@3I=poE6-
zT;b5&m@fwXm<%h@bFCe-s`KEZK=38cNiqL|>8(51grW&d<+$p4YFQB}3%7Q!Q4#Hj
zc}SI%oHcH`poEOI6&3sz7%oGM&aVj>+x*G_x$D;mHlntKt7bV17rjKdavv+is};pE
zDI_IA2F-A-4fIUBZ0$HQA)HvJcz0;OEN4yasHUriRX{i?$T9Yz(Ck3*y3ev{<l{Zq
zh|0=Vl)osM4R@cy>sF(E@rFef3t7LEmDNM`aM5B#k7a94B$Ul{83F4I=>GOikr35)
zRSw%~1;PwdCkIl!ToD3NB=|mZh2Wr++^`R*3mKVZ@oG47c^39)p}uLjQx~<}Mw)oK
z#w<m0tZSd@LdebLR40yU;jW+b+LEfwL7GLjV}y++Y%`W}1u$Ae<jp*P&yr*4=^0BM
z{6<zPeFtfwYN)m{o;_BvA#Q^wjur|NsMn2>H9%CSGA%R&Y9GUhgtdyy;_52yHcFp+
zW>AEX<Ept*O|`X1IGX~J<dmp>(D$4?I%SzV3%GgPDl1vXRqbedSw*JMh8^Ue*YXbb
z*;fci4$ZQJOZ3_!NE{VCDXz<w$Y*&`L`4YI10q?@+Tg6syIXfW7kyfh|J~pp;v3-!
zuMZx(){SxSo@>w55$-v6nJRf+Pd4jpctXc-j6e<H0v@|A3|tTn139s2hy<<;C0HID
zvyS19xo2?GW!+Sb!KNE32I2!leatVTJkmL#^&5+kh`)h6Mt#@wIe|@_Cn5;zR0FBt
z!@Ypw?MKksobVoqC=1B5YMqZxjxVT2RpmXCChO~z%wNAuC=*-WW6)#NK5Aj6bhJ>_
zg*WupMm0^Bi8Gn_^}S@qchp=T<T1mtF`8GaMw8V;xY`zpQ?U0YHIs?p8u-j>|A6n}
z8npGAs>RZ7$F+sWk4Ci`Oj;A0)KR86Or(Piy3~{gn`LR3-E7CRs0eu(;N*_?&_x#5
z;#a33v8oDwOT-=ftL6Dvq@h$dd7wgVRb;u*IJU)bm2JM%oToFu!=>|dB}8g&+A0c+
zWxLq`JCfNk>Xclog1)h=>L#eIsadsCIasS-wuFPV(2@}M+OxZ<5lv1SxRw(IV_8Zx
zdl(;yT(T1C_yyr{4q%8-*=HFFN9L`ntMK9^62et}OG%z)@ZW*37%JpW&4&fr>$_~L
z1_eFyN<2Y|byN*h4uz-;Qp1bEaK;_>k-Y*hlr%iQcA{~lA(R<dYdHZ9wvQUB<3ujl
zhUJ*EbY{q8ant|?C=r3S0m+6~Bu<2~^o0R8(VR6tTu=LXZ>Y=+GLQ=(yu+4Vaw=ZZ
zT@PxYA;k!ghVj=BZRDVV0jU;9WeKGI-=r`R9B4weOnjF>U=I#OSeS!{Pal(`7Pxb>
z8qK&RBu^0*|4vHm1~99l!2~k?-UdL!G2Srx^sa5R8tp!NaR?$CJq9sGv)&j)<IZ`R
z5_ixHYgzv*X1k|8w$j9jcLa{K>QVJUE@cWtb_1HOaTBoEF-VY|Gm++!7(W&hj+FYL
zl30^l&R{4wXrk=1v}jhP$pq>|l?7J0;|aY`wWC+82f^sXo2O`S#O$ABGgh|~=!FNP
z{cy$y7hbxIEsb9^f#(+WRZ?=IYUY+8(YDFCshG`8fha3z-QH|~*8)}RD9lWiE0zr$
zR$VoYP}ak1@VCKsri8YawI7?i-cyBEi-#7@QkZ%ektkDgyhn0xKaKE=A&AS^nQa_X
z2FNrXukgx^mrM?B#lWi2Yiic%(zIHj$_#a@m3Xx{={a!yl0kn-u)>T8l6BOajv$p;
zONuOxs?}I0S|aE4OVh9}P1_V|P-^C4EF~<jY1=!6YgFKAk%_yapAhIK)FJIfFk(7|
z^~7T~(1UHZsM)22Kf2Ty#iy~`KaVRYW(GFK9BEu(hn_k}(VTY01cWu%Z*oL!5zIM)
zP`VFNhq@wsM<;R{Vyr0CL6?%j6RGBQxp^rN>zKbH4EN+h@0iKidL>%wJINK|Fi{h~
zBf}r|t-Msah@HDifTVL~DDV7-COGk6wFp&AoQDgx>B1A6bpqy!rg&|-M%DGW=ry{-
zjv>^41wVl94eCYS+P2)7+-K)f^GRX%vbh?{UuTL|ZAmHowv*(?@i<Nk;b@Y9ZjMRk
zngL(QfiEdt9Ei)Gnqufh3@1sfP-DhJLmu%EyAWcN>}yku;l+c@AjszCoD@AKnPw+u
zTpC@)XS`>*y2=2^Rw#Nj2YLdFFmICy3@)=`a_OZ_2`2m@!Ny$t5C%9M2XN3*CFVn_
zt*i4<9Syi~1e+iwf1pMa&ZG_+QWPBLsh?Sh46Hs4TMp^8h8}1^5aW0wXevag1u8R|
zXlJwv$@E$o%rzBI$yBLQhja(B;*o-7tC1kGbsz$L7WgzF>ORT0UJg(k2v1mcA)14I
zQL5@g>1?i%L$H%PmO_s2V!Z<@=41=R>#6$*hBW*U)+IJoHZh^tp!_+@uxt#C%OO;<
z+fMjgX9Qrl=)<_#bN}TXQZHcK2)kpbz%}gcRG=mkb{`2`0q0o7Srcyir9d%h*MY3s
z4n&@LLpMvJE7%A!6d}`MiMv>#!%KKRP}fBgySCwAa2|7-8p=RcOKBXA;eDrgXnkZa
zk;iu~S!A1*Mmu5gj4pER>d@K(QepAWQiT`<Wkx?vW5M)btS(?WMnl|QHc3sWQ;jBq
zo5cJr@9P5}Q_A7YSIEOo+G?e!=M+WHiPOCpJ=;gT!D{MfBtd84Yqr$o-Fl&Dz>n(>
z5P^EcZ@3o^PniV0LwVWp=-h2NE<1c*imG((cHPRfZ5>;T#dRr^jyaTz=L8Evdzfu%
zq1=n-XC*Ptq2ZG<2&|d{#wjd~WvLfCeNp)7%M$e?S}y6mu#g>dHI+&R>OBTYIBKaN
z`>D&EZ|uSiejdo9K-g~@n0Cp7q8{NdVYQ`LrV-E9mEbp3R5&+q!XFSL6k-lL1BnqM
z+d0%CmZ&=9!uDyXHsTkp6a~yNFjU1e*WkfDYJ)Nx?`z<uMrKKH*42B5LKWBG{INsi
ziMcmO7F@;WX}zMtMcWBCe6~XE1OAM%K~#sIIah4Thm0M5*sd_eV#m<cN-WX*Fgl_j
z4`eA~SuBiQfyoSSW=0piDwzzsqGx3^P1)9C$|iz~n4N*FfQLuL)m<ar0qliLR>cG1
za)9x?B6Gzay}(uxrvctERy;*(ks?h6YOK6ssE#Yfsd8%5=r`05P(rSJ35hF?FFDP8
zeEoc@<LmAcp|j{23w^Kwx`}R;tLReTGmjguH^ZXqJMZOL5mR3$!?gl&6?IJ$)4}oR
z2E+^tQ$bUnlb)m&<Oo>cQA|8XjX@BKAYC)y$DIqB#E|f@>#UeTXu_)cA>Z&sdp*-+
z$t9iG8EoV>R|T(84o<SiJG5*A(u(gTF)8BblhV&K1Qqm@kQ*&DNsrdnLFQtJ2-^VB
zUTWBGr)4!4FaCFYCe-Imh&0SbtbuJ9*!NP!R7%vmQTL=_&8vnu7-bNb)#$u#<}Cy=
z4Pj#utHYxIN`iMT%lISbBKz_9frtHm5}t>QLY!ssN-0vCAI#zmmePNax>eik$LY^#
zih9Lhpo`v055er1&`sUJHJKVUz)@4+$Z^%y*wVxcOPntb4!MSthe<LAAt{_c@mVvj
zBz(Ivj|@jh#mB?nX7i3#D_G^Q6$65C9wqV}5ILD-V&+@G;>Bx*)DNTb0M}2hCFg^q
zv;uqBiYs*#kvF&}U70r`KIT)%vclthx&;NP2F8HreUC*kcjPc!|Cr1~@8wNR>EVhk
z5CrA$sv)N8Y#|?yqj7zC`Rc;ezM@sJ6=5M(IYQuJ^wPGVq@!hA64VvyoB@C5XGFXZ
zadklc-jDz<YgBB9oQ(dO7_pKsKO84s{%oQ?$Rjnbq28|Rd(WO>mc-GntYtX=m#RDR
z?7^FZw=foYtvydaykw<@y279qg&s)B2ImojI6OU4W9oa}SmF{4z8YKqjwto@CrVr8
z>m;)A&0Y*2hh%I7s*6d8xl`mavIinqyw3A}tchhq@D-f}bVG)SXY9Lt;3SaOJWSpU
z=N^B?P!5o|m~2TN1xJ0Qf00}hGiLE;RGu4by=ux;_-kL{eFQdCU&JCut(v(a)x0Lr
z<lGcib}mll+mJoFdYQ7++%4)3X1Y}fFawb2nK|~>4cs#G>_k>H<XNQ7;X5(&0KuxV
z7xi7G|Jw5h`M}iHLRIe{RAw18?up@I7z*6ha54rE*;ci{M{*zpuqiYQM?6O2BTf-9
zl+_XiG<jB6u-iFRR1iwlVI3v8r$J>ZA9|C(pRB}LoDgv2i&vZ&i+}|PyBZP^{(>B5
z1dr4hsB%_i5nufg@2v_@-ZVcVD6$vo@|K}do9!LpJM2V_CFv*;@%AflLajo|1KiB1
z24Dv+YEWA6_n1t<ET^PbI31jYu)TfL2M*4T?4KPDu@?SfFGl673{+kmKm#`ysXM4#
z#`nagPLar(y68=rQt|&+&|Qu&XH!;DsEoa)#vq6GIT#aQae6*9v@e@V-hh78vUKqM
zSDANC3!%g<yAe!QC-TKhZaNlbAvH8NKJq7f!=^A?HKH#Ne)%~Z(Ams8pPOV8Ge#gx
z$d2&@3PQYJrqKmzSQUKb9#n<byLnGT{kNXE$ys?Q*O<~X&5heEKiD(SyO)Wq!6(6w
z&5`IKyweYJI84lw`{x4Fcu^QO#9#=rX`O5~2Vir!>tX=6-2eZcc7@*^UP|H>PI|oR
z+Yw>dZAg8J$f}A6K=PfO`q#?547fh{`V-Zm;LzWg+Xiy!Q%wS0KWKZilrmh#aaazn
z`%RsIjz4-i^Tw2x@in!od5U2~!~xZDbmmxuvtb9iJQB$0BHXTH<=vVJpL7!z7>0OX
zZWNtZKTr0tR>1c&ahSd#Ix)Y-!(K2z#Ji&AvzW{MW1pjCHmTx|;pw9F;Dn}tI>&$y
zrsH*Dq82B?fU&X+_)4fLW1mlB7m}v}0SXVPMm2uXsT}!aB!C5-)>>|Yd#x=k{|lcY
B-8}#R

diff --git a/libgui/languages/nl_NL.ts b/libgui/languages/nl_NL.ts
new file mode 100644
--- /dev/null
+++ b/libgui/languages/nl_NL.ts
@@ -0,0 +1,1074 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE TS>
+<TS version="2.0" language="nl_NL">
+<context>
+    <name>documentation_dock_widget</name>
+    <message>
+        <location filename="../src/documentation-dockwidget.cc" line="+34"/>
+        <source>Documentation</source>
+        <translation>Documentatie</translation>
+    </message>
+</context>
+<context>
+    <name>file_editor</name>
+    <message>
+        <location filename="../src/m-editor/file-editor.cc" line="+146"/>
+        <location line="+38"/>
+        <location line="+43"/>
+        <location line="+26"/>
+        <source>Octave Editor</source>
+        <translation></translation>
+    </message>
+    <message>
+        <location line="-106"/>
+        <source>File %1 is already open in the editor.</source>
+        <translation>Bestand %1 is al geopend in de editor.</translation>
+    </message>
+    <message>
+        <location line="+38"/>
+        <source>Could not open file %1 for read:
+%2.</source>
+        <translation>Bestand %1 kon niet geopend worden om te lezen:
+%2.</translation>
+    </message>
+    <message>
+        <location line="+43"/>
+        <source>File not saved! A file with the selected name
+%1
+is already open in the editor</source>
+        <translation>Bestand niet opgeslagen! Een bestand met de naam
+%1
+is al geopend in de editor</translation>
+    </message>
+    <message>
+        <location line="+26"/>
+        <source>The associated file editor tab has disappeared.  It was likely closed by some means.</source>
+        <translation>Het bijbehorende tabblad in de editor is verdwenen. Het is waarschijnlijk op een of andere manier gesloten.</translation>
+    </message>
+    <message>
+        <location line="+141"/>
+        <source>&amp;%1 %2</source>
+        <translation></translation>
+    </message>
+    <message>
+        <location line="+130"/>
+        <source>&amp;New File</source>
+        <translation>&amp;Nieuw Bestand</translation>
+    </message>
+    <message>
+        <location line="+3"/>
+        <source>&amp;Open File</source>
+        <translation>&amp;Openen</translation>
+    </message>
+    <message>
+        <location line="+3"/>
+        <source>&amp;Save File</source>
+        <translation>Op&amp;slaan</translation>
+    </message>
+    <message>
+        <location line="+4"/>
+        <source>Save File &amp;As</source>
+        <translation>Opslaan &amp;als</translation>
+    </message>
+    <message>
+        <location line="+3"/>
+        <source>&amp;Undo</source>
+        <translation>Ongedaan maken</translation>
+    </message>
+    <message>
+        <location line="+3"/>
+        <source>&amp;Redo</source>
+        <translation>He&amp;rhalen</translation>
+    </message>
+    <message>
+        <location line="+3"/>
+        <source>&amp;Copy</source>
+        <translation>Kopiëren</translation>
+    </message>
+    <message>
+        <location line="+3"/>
+        <source>Cu&amp;t</source>
+        <translation>Knippen</translation>
+    </message>
+    <message>
+        <location line="+4"/>
+        <source>Paste</source>
+        <translation>Plakken</translation>
+    </message>
+    <message>
+        <location line="+1"/>
+        <source>&amp;Next Bookmark</source>
+        <translation>Volge&amp;nde bladwijzer</translation>
+    </message>
+    <message>
+        <location line="+1"/>
+        <source>Pre&amp;vious Bookmark</source>
+        <translation>&amp;Vorige bladwijzer</translation>
+    </message>
+    <message>
+        <location line="+1"/>
+        <source>Toggle &amp;Bookmark</source>
+        <translation>&amp;Bladwijzer invoegen</translation>
+    </message>
+    <message>
+        <location line="+1"/>
+        <source>&amp;Remove All Bookmarks</source>
+        <translation>Alle bladwijzers ve&amp;rwijderen</translation>
+    </message>
+    <message>
+        <location line="+4"/>
+        <source>&amp;Next breakpoint</source>
+        <translation>Volge&amp;nd breekpunt</translation>
+    </message>
+    <message>
+        <location line="+3"/>
+        <source>Pre&amp;vious breakpoint</source>
+        <translation>&amp;Vorig breekpunt</translation>
+    </message>
+    <message>
+        <location line="+3"/>
+        <source>Toggle &amp;breakpoint</source>
+        <translation>&amp;Breekpunt invoegen</translation>
+    </message>
+    <message>
+        <location line="+3"/>
+        <source>&amp;Remove All breakpoints</source>
+        <translation>Alle breekpunten ve&amp;rwijderen</translation>
+    </message>
+    <message>
+        <location line="+2"/>
+        <source>&amp;Comment Selected Text</source>
+        <translation>Geselecteerde tekst markeren als &amp;commentaar</translation>
+    </message>
+    <message>
+        <location line="+1"/>
+        <source>&amp;Uncomment Selected Text</source>
+        <translation>Gelesecteerde tekst niet markeren als commentaar</translation>
+    </message>
+    <message>
+        <location line="+3"/>
+        <source>&amp;Find and Replace</source>
+        <translation>Vervangen</translation>
+    </message>
+    <message>
+        <location line="+3"/>
+        <source>Save File And Run</source>
+        <translation>Bestand opslaan en uitvoeren</translation>
+    </message>
+    <message>
+        <location line="+51"/>
+        <source>&amp;File</source>
+        <translation>Bestand</translation>
+    </message>
+    <message>
+        <location line="+6"/>
+        <source>Open &amp;Recent</source>
+        <translation>&amp;Recent bestand openen</translation>
+    </message>
+    <message>
+        <location line="+8"/>
+        <source>&amp;Edit</source>
+        <translation>B&amp;ewerken</translation>
+    </message>
+    <message>
+        <location line="+19"/>
+        <source>&amp;Debug</source>
+        <translation>&amp;Debuggen</translation>
+    </message>
+    <message>
+        <location line="+9"/>
+        <source>&amp;Run</source>
+        <translation>Uitvoe&amp;ren</translation>
+    </message>
+</context>
+<context>
+    <name>file_editor_tab</name>
+    <message>
+        <location filename="../src/m-editor/file-editor-tab.cc" line="+687"/>
+        <location line="+102"/>
+        <location line="+98"/>
+        <location line="+63"/>
+        <location line="+14"/>
+        <source>Octave Editor</source>
+        <translation></translation>
+    </message>
+    <message>
+        <location line="-276"/>
+        <source>The file &apos;%1&apos; has been modified. Do you want to save the changes?</source>
+        <translation>Het bestand &apos;%1&apos; is aangepast. Wil je de wijzigingen opslaan?</translation>
+    </message>
+    <message>
+        <location line="+102"/>
+        <source>Could not open file %1 for write:
+%2.</source>
+        <translation>Kon bestand %1 niet openen om te schrijven:
+%2.</translation>
+    </message>
+    <message>
+        <location line="+98"/>
+        <source>File not saved!  You&apos;ve selected a file name
+
+     %1
+
+which is the same as the current file name.  Use Save to overwrite.  (Could allow overwriting, with message, if that is what folks want.)</source>
+        <translation>Bestand niet opgeslagen! Je hebt een bestandsnaam
+
+     %1
+
+gekozen die hetzelfde is als de huidige bestandsnaam. Gebruik Opslaan om te overschrijven.</translation>
+    </message>
+    <message>
+        <location line="+63"/>
+        <source>It seems that &apos;%1&apos; has been modified by another application. Do you want to reload it?</source>
+        <translation>Het lijkt erop dat &apos;%1&apos; is aangepast door een ander programma. Wil je het opnieuw laden?</translation>
+    </message>
+    <message>
+        <location line="+14"/>
+        <source>It seems that &apos;%1&apos; has been deleted or renamed. Do you want to save it now?</source>
+        <translation>Het lijkt erop dat &apos;%1&apos; verwijderd of hernoemd is. Wil je het nu opslaan?</translation>
+    </message>
+</context>
+<context>
+    <name>files_dock_widget</name>
+    <message>
+        <location filename="../src/files-dockwidget.cc" line="+43"/>
+        <source>Current Directory</source>
+        <translation>Huidige map</translation>
+    </message>
+    <message>
+        <location line="+11"/>
+        <source>Move up one directory.</source>
+        <translation>Een map naar boven gaan.</translation>
+    </message>
+    <message>
+        <location line="+4"/>
+        <source>Enter the path or filename.</source>
+        <translation>Voer het pad of de bestandsnaam in.</translation>
+    </message>
+    <message>
+        <location line="+26"/>
+        <source>Doubleclick a file to open it.</source>
+        <translation>Dubbelklik op een bestand om te openen.</translation>
+    </message>
+</context>
+<context>
+    <name>find_dialog</name>
+    <message>
+        <location filename="../src/m-editor/find-dialog.cc" line="+58"/>
+        <source>Find &amp;what:</source>
+        <translation>Zoek naar:</translation>
+    </message>
+    <message>
+        <location line="+3"/>
+        <source>Re&amp;place with:</source>
+        <translation>Vervang door:</translation>
+    </message>
+    <message>
+        <location line="+4"/>
+        <source>Match &amp;case</source>
+        <translation>Hoofdlettergevoelig</translation>
+    </message>
+    <message>
+        <location line="+1"/>
+        <source>Search from &amp;start</source>
+        <translation>Zoek vanaf het begin</translation>
+    </message>
+    <message>
+        <location line="+1"/>
+        <source>&amp;Wrap while searching</source>
+        <translation>Bestandseinde negeren</translation>
+    </message>
+    <message>
+        <location line="+2"/>
+        <source>&amp;Find Next</source>
+        <translation>Volgende zoeken</translation>
+    </message>
+    <message>
+        <location line="+2"/>
+        <source>&amp;Replace</source>
+        <translation>Ve&amp;rvang</translation>
+    </message>
+    <message>
+        <location line="+1"/>
+        <source>Replace &amp;All</source>
+        <translation>&amp;Alles vervangen</translation>
+    </message>
+    <message>
+        <location line="+2"/>
+        <source>&amp;More</source>
+        <translation>&amp;Meer</translation>
+    </message>
+    <message>
+        <location line="+11"/>
+        <source>&amp;Whole words</source>
+        <translation>Hele &amp;woorden</translation>
+    </message>
+    <message>
+        <location line="+1"/>
+        <source>Regular E&amp;xpressions</source>
+        <translation>Reguliere e&amp;xpressies</translation>
+    </message>
+    <message>
+        <location line="+1"/>
+        <source>Search &amp;backward</source>
+        <translation>Terug zoeken</translation>
+    </message>
+    <message>
+        <location line="+1"/>
+        <source>Search se&amp;lection</source>
+        <translation>In se&amp;lectie</translation>
+    </message>
+</context>
+<context>
+    <name>history_dock_widget</name>
+    <message>
+        <location filename="../src/history-dockwidget.cc" line="+55"/>
+        <source>Doubleclick a command to transfer it to the terminal.</source>
+        <translation>Dubbelklik een commando om het naar de terminal te sturen.</translation>
+    </message>
+    <message>
+        <location line="+6"/>
+        <source>Enter text to filter the command history.</source>
+        <translation>Voer text in om de commandogeschiedenis te filteren.</translation>
+    </message>
+    <message>
+        <location line="+4"/>
+        <source>Command History</source>
+        <translation>Commandogeschiedenis</translation>
+    </message>
+    <message>
+        <location line="+42"/>
+        <source>Copy</source>
+        <translation>Kopiëren</translation>
+    </message>
+    <message>
+        <location line="+1"/>
+        <source>Evaluate</source>
+        <translation>Evalueer</translation>
+    </message>
+</context>
+<context>
+    <name>lexer_octave_gui</name>
+    <message>
+        <location filename="../src/m-editor/lexer-octave-gui.cc" line="+145"/>
+        <source>Default</source>
+        <translation>Standaard</translation>
+    </message>
+    <message>
+        <location line="+2"/>
+        <source>Comment</source>
+        <translation>Commentaar</translation>
+    </message>
+    <message>
+        <location line="+2"/>
+        <source>Command</source>
+        <translation>Commando</translation>
+    </message>
+    <message>
+        <location line="+2"/>
+        <source>Number</source>
+        <translation>Nummer</translation>
+    </message>
+    <message>
+        <location line="+2"/>
+        <source>Keyword</source>
+        <translation>Trefwoord</translation>
+    </message>
+    <message>
+        <location line="+2"/>
+        <source>Single-quoted string</source>
+        <translation>String met enkele quotes</translation>
+    </message>
+    <message>
+        <location line="+2"/>
+        <source>Operator</source>
+        <translation></translation>
+    </message>
+    <message>
+        <location line="+2"/>
+        <source>Identifier</source>
+        <translation>Identificator</translation>
+    </message>
+    <message>
+        <location line="+2"/>
+        <source>Double-quoted string</source>
+        <translation>String met dubbele quotes</translation>
+    </message>
+</context>
+<context>
+    <name>main_window</name>
+    <message>
+        <location filename="../src/main-window.cc" line="+135"/>
+        <source>Save Workspace</source>
+        <translation>Werkruimte opslaan</translation>
+    </message>
+    <message>
+        <location line="+11"/>
+        <source>Load Workspace</source>
+        <translation>Werkruimte laden</translation>
+    </message>
+    <message>
+        <location line="+155"/>
+        <source>Set working direcotry</source>
+        <translation>Werkmap instellen</translation>
+    </message>
+    <message>
+        <location line="+186"/>
+        <location line="+381"/>
+        <source>About Octave</source>
+        <translation>Over Octave</translation>
+    </message>
+    <message>
+        <location line="-290"/>
+        <source>View the variables in the active workspace.</source>
+        <translation>Bekijk de variabelen in de huidige werkruimte.</translation>
+    </message>
+    <message>
+        <location line="+2"/>
+        <source>Browse and search the command history.</source>
+        <translation>Bladeren en zoeken door de commandogeschiedenis.</translation>
+    </message>
+    <message>
+        <location line="+2"/>
+        <source>Browse your files.</source>
+        <translation>Blader door uw bestanden.</translation>
+    </message>
+    <message>
+        <location line="+2"/>
+        <source>See the documentation for help.</source>
+        <translation>Zie de documentatie voor hulp.</translation>
+    </message>
+    <message>
+        <location line="+39"/>
+        <source>&amp;File</source>
+        <translation>Bestand</translation>
+    </message>
+    <message>
+        <location line="+2"/>
+        <source>New</source>
+        <translation>Nieuw</translation>
+    </message>
+    <message>
+        <location line="+3"/>
+        <source>Script</source>
+        <translation></translation>
+    </message>
+    <message>
+        <location line="+3"/>
+        <source>Function</source>
+        <translation>Functie</translation>
+    </message>
+    <message>
+        <location line="+2"/>
+        <source>Class</source>
+        <translation>Klasse</translation>
+    </message>
+    <message>
+        <location line="+2"/>
+        <source>Enumeration</source>
+        <translation>Enumeratie</translation>
+    </message>
+    <message>
+        <location line="+2"/>
+        <source>Figure</source>
+        <translation>Figuur</translation>
+    </message>
+    <message>
+        <location line="+2"/>
+        <source>Variable</source>
+        <translation>Variabele</translation>
+    </message>
+    <message>
+        <location line="+2"/>
+        <source>Model</source>
+        <translation></translation>
+    </message>
+    <message>
+        <location line="+2"/>
+        <source>GUI</source>
+        <translation></translation>
+    </message>
+    <message>
+        <location line="+4"/>
+        <source>Open...</source>
+        <translation></translation>
+    </message>
+    <message>
+        <location line="+4"/>
+        <source>Close Command Window</source>
+        <translation>Commandoscherm sluiten</translation>
+    </message>
+    <message>
+        <location line="+6"/>
+        <source>Import Data...</source>
+        <translation>Importeer data...</translation>
+    </message>
+    <message>
+        <location line="+4"/>
+        <source>Save Workspace...</source>
+        <translation>Werkruimte opslaan...</translation>
+    </message>
+    <message>
+        <location line="+6"/>
+        <source>Preferences...</source>
+        <translation>Voorkeuren...</translation>
+    </message>
+    <message>
+        <location line="+3"/>
+        <source>Page Setup...</source>
+        <translation>Pagina instellingen...</translation>
+    </message>
+    <message>
+        <location line="+3"/>
+        <source>Print</source>
+        <translation></translation>
+    </message>
+    <message>
+        <location line="+4"/>
+        <source>Print Selection...</source>
+        <translation>Print selectie...</translation>
+    </message>
+    <message>
+        <location line="+4"/>
+        <source>Exit</source>
+        <translation>Sluiten</translation>
+    </message>
+    <message>
+        <location line="+4"/>
+        <source>&amp;Edit</source>
+        <translation>B&amp;ewerken</translation>
+    </message>
+    <message>
+        <location line="+2"/>
+        <source>Undo</source>
+        <translation>Ongedaan maken</translation>
+    </message>
+    <message>
+        <location line="+4"/>
+        <source>Redo</source>
+        <translation>Herhalen</translation>
+    </message>
+    <message>
+        <location line="+5"/>
+        <source>Cut</source>
+        <translation>Knippen</translation>
+    </message>
+    <message>
+        <location line="+4"/>
+        <source>Copy</source>
+        <translation>Kopiëren</translation>
+    </message>
+    <message>
+        <location line="+4"/>
+        <source>Paste</source>
+        <translation>Plakken</translation>
+    </message>
+    <message>
+        <location line="+4"/>
+        <source>Paste To Workspace...</source>
+        <translation>Plak naar werkruimte...</translation>
+    </message>
+    <message>
+        <location line="+5"/>
+        <source>Select All</source>
+        <translation>Alles selecteren</translation>
+    </message>
+    <message>
+        <location line="+3"/>
+        <source>Delete</source>
+        <translation>Verwijderen</translation>
+    </message>
+    <message>
+        <location line="+6"/>
+        <source>Find...</source>
+        <translation>Vind...</translation>
+    </message>
+    <message>
+        <location line="+3"/>
+        <source>Find Files...</source>
+        <translation>Vind bestanden...</translation>
+    </message>
+    <message>
+        <location line="+7"/>
+        <source>Clear Command Window</source>
+        <translation>Wis commandoscherm</translation>
+    </message>
+    <message>
+        <location line="+3"/>
+        <source>Clear Command History</source>
+        <translation>Wis commandogeschiedenis</translation>
+    </message>
+    <message>
+        <location line="+2"/>
+        <source>Clear Workspace</source>
+        <translation>Wis werkruimte</translation>
+    </message>
+    <message>
+        <location line="+2"/>
+        <source>De&amp;bug</source>
+        <translation>De&amp;buggen</translation>
+    </message>
+    <message>
+        <location line="+2"/>
+        <source>Step</source>
+        <translation>Stap</translation>
+    </message>
+    <message>
+        <location line="+8"/>
+        <source>Step in</source>
+        <translation>Stap in</translation>
+    </message>
+    <message>
+        <location line="+8"/>
+        <source>Step out</source>
+        <translation>Stap uit</translation>
+    </message>
+    <message>
+        <location line="+8"/>
+        <source>Continue</source>
+        <translation>Doorgaan</translation>
+    </message>
+    <message>
+        <location line="+13"/>
+        <source>Exit Debug Mode</source>
+        <translation>Debuggen sluiten</translation>
+    </message>
+    <message>
+        <location line="+10"/>
+        <source>&amp;Desktop</source>
+        <translation>Bureaubla&amp;d</translation>
+    </message>
+    <message>
+        <location line="+1"/>
+        <source>Load workspace</source>
+        <translation>Werkruimte laden</translation>
+    </message>
+    <message>
+        <location line="+4"/>
+        <source>&amp;Window</source>
+        <translation>Scherm</translation>
+    </message>
+    <message>
+        <location line="+2"/>
+        <source>Show Command Window</source>
+        <translation>Commandoscherm weergeven</translation>
+    </message>
+    <message>
+        <location line="+6"/>
+        <source>Show Command History</source>
+        <translation>Commandogeschiedenis weergeven</translation>
+    </message>
+    <message>
+        <location line="+5"/>
+        <source>Show Current Directory</source>
+        <translation>Huidige map weergeven</translation>
+    </message>
+    <message>
+        <location line="+6"/>
+        <source>Show Workspace</source>
+        <translation>Werkruimte weergeven</translation>
+    </message>
+    <message>
+        <location line="+5"/>
+        <source>Show Editor</source>
+        <translation>Editor weergeven</translation>
+    </message>
+    <message>
+        <location line="+5"/>
+        <source>Show Documentation</source>
+        <translation>Documentatie weergeven</translation>
+    </message>
+    <message>
+        <location line="+7"/>
+        <source>Command Window</source>
+        <translation>Commandoscherm</translation>
+    </message>
+    <message>
+        <location line="+4"/>
+        <source>Command History</source>
+        <translation>Commandogeschiedenis</translation>
+    </message>
+    <message>
+        <location line="+4"/>
+        <source>Current Directory</source>
+        <translation>Huidige map</translation>
+    </message>
+    <message>
+        <location line="+4"/>
+        <source>Workspace</source>
+        <translation>Werkruimte</translation>
+    </message>
+    <message>
+        <location line="+4"/>
+        <source>Editor</source>
+        <translation></translation>
+    </message>
+    <message>
+        <location line="+4"/>
+        <source>Documentation</source>
+        <translation>Documentatie</translation>
+    </message>
+    <message>
+        <location line="+5"/>
+        <source>Reset Windows</source>
+        <translation>Reset schermen</translation>
+    </message>
+    <message>
+        <location line="+4"/>
+        <source>&amp;Help</source>
+        <translation></translation>
+    </message>
+    <message>
+        <location line="+2"/>
+        <source>Report Bug</source>
+        <translation>Probleem rapporteren</translation>
+    </message>
+    <message>
+        <location line="+2"/>
+        <source>Visit Agora</source>
+        <translation>Bezoek Agora</translation>
+    </message>
+    <message>
+        <location line="+2"/>
+        <source>Visit Octave Forge</source>
+        <translation>Bezoek Octave Forge</translation>
+    </message>
+    <message>
+        <location line="+20"/>
+        <source>Current Directory:</source>
+        <translation>Huidige map:</translation>
+    </message>
+</context>
+<context>
+    <name>settings_dialog</name>
+    <message>
+        <location filename="../src/settings-dialog.ui" line="+29"/>
+        <location filename="../src/ui-settings-dialog.h" line="+461"/>
+        <source>Settings</source>
+        <translation>Instellingen</translation>
+    </message>
+    <message>
+        <location line="+13"/>
+        <location filename="../src/ui-settings-dialog.h" line="+5"/>
+        <source>General</source>
+        <translation>Algemeen</translation>
+    </message>
+    <message>
+        <location line="+18"/>
+        <location filename="../src/ui-settings-dialog.h" line="-4"/>
+        <source>Icon set for dock widget</source>
+        <translation>Icoon ingesteld voor dock widget</translation>
+    </message>
+    <message>
+        <location line="+21"/>
+        <location filename="../src/ui-settings-dialog.h" line="+1"/>
+        <source>Octave logo only</source>
+        <translation>Alleen Octave logo</translation>
+    </message>
+    <message>
+        <location line="+16"/>
+        <location filename="../src/ui-settings-dialog.h" line="+1"/>
+        <source>Letter icons</source>
+        <translation>Letter iconen</translation>
+    </message>
+    <message>
+        <location line="+13"/>
+        <location filename="../src/ui-settings-dialog.h" line="+1"/>
+        <source>Graphic  icons</source>
+        <translation>Grafische iconen</translation>
+    </message>
+    <message>
+        <location line="+7"/>
+        <location filename="../src/ui-settings-dialog.h" line="+11"/>
+        <source>Editor</source>
+        <translation></translation>
+    </message>
+    <message>
+        <location line="+10"/>
+        <location line="+147"/>
+        <location filename="../src/ui-settings-dialog.h" line="-9"/>
+        <location line="+10"/>
+        <source>Font</source>
+        <translation>Lettertype</translation>
+    </message>
+    <message>
+        <location line="-130"/>
+        <location line="+147"/>
+        <location filename="../src/ui-settings-dialog.h" line="-9"/>
+        <location line="+10"/>
+        <source>Font Size</source>
+        <translation>Lettergrootte</translation>
+    </message>
+    <message>
+        <location line="-109"/>
+        <location filename="../src/ui-settings-dialog.h" line="-9"/>
+        <source>Show line numbers</source>
+        <translation>Regelnummers weergeven</translation>
+    </message>
+    <message>
+        <location line="+10"/>
+        <location filename="../src/ui-settings-dialog.h" line="+1"/>
+        <source>Highlight current line</source>
+        <translation>Markeer huidige regel</translation>
+    </message>
+    <message>
+        <location line="+10"/>
+        <location filename="../src/ui-settings-dialog.h" line="+1"/>
+        <source>Code completion</source>
+        <translation>Automatisch aanvullen</translation>
+    </message>
+    <message>
+        <location line="+10"/>
+        <location filename="../src/ui-settings-dialog.h" line="+1"/>
+        <source>Show complete path in window title</source>
+        <translation>Hele pad in schermtitel weergeven</translation>
+    </message>
+    <message>
+        <location line="+7"/>
+        <location filename="../src/ui-settings-dialog.h" line="+1"/>
+        <source>Restore tabs from previous session on startup</source>
+        <translation>Tabbladen van vorige sessie herladen bij opstarten</translation>
+    </message>
+    <message>
+        <location line="+27"/>
+        <location filename="../src/ui-settings-dialog.h" line="+1"/>
+        <source>Use custom file editor:</source>
+        <translation>Gebruik andere bestandeditor:</translation>
+    </message>
+    <message>
+        <location line="+10"/>
+        <location filename="../src/ui-settings-dialog.h" line="+1"/>
+        <source>emacs</source>
+        <translation></translation>
+    </message>
+    <message>
+        <location line="+10"/>
+        <location filename="../src/ui-settings-dialog.h" line="+6"/>
+        <source>Terminal</source>
+        <translation></translation>
+    </message>
+    <message>
+        <location line="+62"/>
+        <location filename="../src/ui-settings-dialog.h" line="-2"/>
+        <source>Cursor type:</source>
+        <translation></translation>
+    </message>
+    <message>
+        <location line="+27"/>
+        <location filename="../src/ui-settings-dialog.h" line="+1"/>
+        <source>Cursor blinking</source>
+        <translation>Cursor knipperen</translation>
+    </message>
+    <message>
+        <location line="+36"/>
+        <location filename="../src/ui-settings-dialog.h" line="+8"/>
+        <source>File Browser</source>
+        <translation>Bestandsbrowser</translation>
+    </message>
+    <message>
+        <location line="+6"/>
+        <location filename="../src/ui-settings-dialog.h" line="-6"/>
+        <source>Show filenames</source>
+        <translation>Bestandsnamen weergeven</translation>
+    </message>
+    <message>
+        <location line="+7"/>
+        <location filename="../src/ui-settings-dialog.h" line="+1"/>
+        <source>Show file size</source>
+        <translation>Bestandsgrootte weergeven</translation>
+    </message>
+    <message>
+        <location line="+7"/>
+        <location filename="../src/ui-settings-dialog.h" line="+1"/>
+        <source>Show file type</source>
+        <translation>Bestandstype weergeven</translation>
+    </message>
+    <message>
+        <location line="+7"/>
+        <location filename="../src/ui-settings-dialog.h" line="+1"/>
+        <source>Show date of last modification</source>
+        <translation>Datum van laatste aanpassing weergeven</translation>
+    </message>
+    <message>
+        <location line="+7"/>
+        <location filename="../src/ui-settings-dialog.h" line="+1"/>
+        <source>Show hidden files</source>
+        <translation>Verborgen bestanden weergeven</translation>
+    </message>
+    <message>
+        <location line="+7"/>
+        <location filename="../src/ui-settings-dialog.h" line="+1"/>
+        <source>Alternating row colors</source>
+        <translation>Afwisselende regelkleuren</translation>
+    </message>
+    <message>
+        <location line="+21"/>
+        <location filename="../src/ui-settings-dialog.h" line="+13"/>
+        <source>Network</source>
+        <translation>Netwerk</translation>
+    </message>
+    <message>
+        <location line="+6"/>
+        <location filename="../src/ui-settings-dialog.h" line="-11"/>
+        <source>Use proxy server</source>
+        <translation>Gebruik proxyserver</translation>
+    </message>
+    <message>
+        <location line="+12"/>
+        <location filename="../src/ui-settings-dialog.h" line="+1"/>
+        <source>Proxy Type:</source>
+        <translation>Proxy type:</translation>
+    </message>
+    <message>
+        <location line="+11"/>
+        <location filename="../src/ui-settings-dialog.h" line="+3"/>
+        <source>HttpProxy</source>
+        <translation></translation>
+    </message>
+    <message>
+        <location line="+5"/>
+        <location filename="../src/ui-settings-dialog.h" line="+1"/>
+        <source>Socks5Proxy</source>
+        <translation></translation>
+    </message>
+    <message>
+        <location line="+11"/>
+        <location filename="../src/ui-settings-dialog.h" line="+2"/>
+        <source>Hostname:</source>
+        <translation>Hostnaam:</translation>
+    </message>
+    <message>
+        <location line="+17"/>
+        <location filename="../src/ui-settings-dialog.h" line="+1"/>
+        <source>Port:</source>
+        <translation>Poort:</translation>
+    </message>
+    <message>
+        <location line="+17"/>
+        <location filename="../src/ui-settings-dialog.h" line="+1"/>
+        <source>Username:</source>
+        <translation>Gebruikersnaam:</translation>
+    </message>
+    <message>
+        <location line="+17"/>
+        <location filename="../src/ui-settings-dialog.h" line="+1"/>
+        <source>Password:</source>
+        <translation>Wachtwoord:</translation>
+    </message>
+</context>
+<context>
+    <name>terminal_dock_widget</name>
+    <message>
+        <location filename="../src/terminal-dockwidget.cc" line="+34"/>
+        <source>Command Window</source>
+        <translation>Commandoscherm</translation>
+    </message>
+</context>
+<context>
+    <name>webinfo</name>
+    <message>
+        <location filename="../src/qtinfo/webinfo.cc" line="+74"/>
+        <source>Type here and press &apos;Return&apos; to search</source>
+        <translation>Typ hier en druk op &apos;Enter&apos; om te zoeken</translation>
+    </message>
+    <message>
+        <location line="+4"/>
+        <source>Global search</source>
+        <translation>Globaal zoeken</translation>
+    </message>
+</context>
+<context>
+    <name>welcome_wizard</name>
+    <message>
+        <location filename="../src/welcome-wizard.ui" line="+26"/>
+        <location filename="../src/ui-welcome-wizard.h" line="+286"/>
+        <source>Welcome to GNU Octave</source>
+        <translation>Welkom bij GNU Octave</translation>
+    </message>
+    <message>
+        <location line="+13"/>
+        <location filename="../src/ui-welcome-wizard.h" line="+1"/>
+        <source>It appears that you have launched Octave GUI for the first time on this computer, since no configuration file could be found at &apos;~/.octave-gui&apos;. This wizard will guide you through the essential settings you should make before you can start using Octave GUI. If you want to transfer your settings you have previously made just close this dialog and copy over the settings file to your home folder. The presence of that file will automatically be detected and will skip this wizard. IMPORTANT: This wizard is not fully functional yet. Just click your way to the end and it will create a standard settings file.</source>
+        <translation>Het lijkt erop dat je de Octave GUI voor de eerste keer opstart op deze computer, omdat er geen configuratiebestand in &apos;~/.octave-gui&apos; gevonden is. Deze wizard zal je begeleiden tijdens het invullen van de belangrijkste instellingen die je zou moeten doen voordat je Octave GUI kan gebruiken. Als je eerder gemaakte instellingen wilt overzetten, sluit dan dit scherm en kopieer het configuratiebestand naar je home map. De aanwezigheid van het bestand zal automatisch gedetecteerd worden en deze wizard overslaan. BELANGRIJK: Deze wizard is nog niet volledig functioneel. Klik door tot het einde voor standaardinstellingen.</translation>
+    </message>
+    <message>
+        <location line="+41"/>
+        <location line="+50"/>
+        <location line="+52"/>
+        <location line="+52"/>
+        <location filename="../src/ui-welcome-wizard.h" line="+1"/>
+        <location line="+2"/>
+        <location line="+2"/>
+        <location line="+2"/>
+        <source>Next</source>
+        <translation>Volgende</translation>
+    </message>
+    <message>
+        <location line="-124"/>
+        <location line="+52"/>
+        <location line="+52"/>
+        <location line="+87"/>
+        <location filename="../src/ui-welcome-wizard.h" line="-5"/>
+        <location line="+2"/>
+        <location line="+2"/>
+        <location line="+5"/>
+        <source>Previous</source>
+        <translation>Vorige</translation>
+    </message>
+    <message>
+        <location line="-45"/>
+        <location filename="../src/ui-welcome-wizard.h" line="-3"/>
+        <source>Welcome to Octave!</source>
+        <translation>Welkom bij Octave!</translation>
+    </message>
+    <message>
+        <location line="+7"/>
+        <location filename="../src/ui-welcome-wizard.h" line="+1"/>
+        <source>This is the development version of Octave with the first official GUI.</source>
+        <translation>Dit is de ontwikkelvariant van Octave met de eerste officiële GUI.</translation>
+    </message>
+    <message>
+        <location line="+10"/>
+        <location filename="../src/ui-welcome-wizard.h" line="+1"/>
+        <source>You seem to run Octave GUI for the first time on this computer. This assistant will help you to configure this software installation. Click &apos;Finish&apos; to write a configuration file and launch Octave GUI.</source>
+        <translation>Het lijkt erop dat je de Octave GUI voor de eerste keer uitvoert op deze computer. Deze assistent zal je helpen het programma te configureren. Klik &apos;Voltooien&apos; om een configuratiebestand te maken en de Octave GUI te starten.</translation>
+    </message>
+    <message>
+        <location line="+48"/>
+        <location filename="../src/ui-welcome-wizard.h" line="+2"/>
+        <source>Finish</source>
+        <translation>Voltooien</translation>
+    </message>
+</context>
+<context>
+    <name>workspace_model</name>
+    <message>
+        <location filename="../src/workspace-model.cc" line="+42"/>
+        <source>Name</source>
+        <translation>Naam</translation>
+    </message>
+    <message>
+        <location line="+0"/>
+        <source>Class</source>
+        <translation>Klasse</translation>
+    </message>
+    <message>
+        <location line="+0"/>
+        <source>Dimension</source>
+        <translation>Dimensie</translation>
+    </message>
+    <message>
+        <location line="+0"/>
+        <source>Value</source>
+        <translation>Waarde</translation>
+    </message>
+</context>
+<context>
+    <name>workspace_view</name>
+    <message>
+        <location filename="../src/workspace-view.cc" line="+39"/>
+        <source>Workspace</source>
+        <translation>Werkruimte</translation>
+    </message>
+</context>
+</TS>
diff --git a/libgui/languages/translators b/libgui/languages/translators
--- a/libgui/languages/translators
+++ b/libgui/languages/translators
@@ -4,8 +4,9 @@
 # translation files is en_US.ts
 be_BY Mihas Varantsou <meequz@gmail.com>
 de_DE Jacob Dawid <jacob.dawid@googlemail.com>
 en_US Jacob Dawid <jacob.dawid@googlemail.com>
 es_ES Valentin Ortega-Clavero <arcanos3030@gmail.com>
 pt_BE Júlio Hoffimann Mendes <julio.hoffimann@gmail.com>
 ru_RU Andriy Shinkarchuck <adriano32.gnu@gmail.com>
 uk_UA Andriy Shinkarchuck <adriano32.gnu@gmail.com>
+nl_NL Sander van Rijn <svr003@gmail.com>
diff --git a/libgui/src/octave-adapter/octave-main-thread.cc b/libgui/src/octave-adapter/octave-main-thread.cc
--- a/libgui/src/octave-adapter/octave-main-thread.cc
+++ b/libgui/src/octave-adapter/octave-main-thread.cc
@@ -34,17 +34,16 @@ along with Octave; see the file COPYING.
 
 octave_main_thread::octave_main_thread () : QThread ()
 {
 }
 
 void
 octave_main_thread::run ()
 {
-  setlocale (LC_ALL, "en_US.UTF-8");
   // Matlab uses "C" locale for LC_NUMERIC class regardless of local setting
   setlocale (LC_NUMERIC, "C");
 
   emit ready ();
 
   octave_initialize_interpreter (octave_cmdline_argc, octave_cmdline_argv,
                                  octave_embedded);
 
diff --git a/libinterp/interp-core/comment-list.h b/libinterp/interp-core/comment-list.h
--- a/libinterp/interp-core/comment-list.h
+++ b/libinterp/interp-core/comment-list.h
@@ -37,16 +37,17 @@ class
 octave_comment_elt
 {
 public:
 
   enum comment_type
   {
     unknown,
     block,
+    full_line,
     end_of_line,
     doc_string,
     copyright
   };
 
   octave_comment_elt (const std::string& s = std::string (),
                       comment_type t = unknown)
     : txt (s), typ (t) { }
diff --git a/libinterp/interp-core/ls-mat5.cc b/libinterp/interp-core/ls-mat5.cc
--- a/libinterp/interp-core/ls-mat5.cc
+++ b/libinterp/interp-core/ls-mat5.cc
@@ -509,19 +509,19 @@ read_mat5_binary_element (std::istream& 
     flt_fmt = oct_mach_info::flt_fmt_ieee_little_endian;
 
   // element type and length
   int32_t type = 0;
   int32_t element_length;
   if (read_mat5_tag (is, swap, type, element_length))
     return retval;                      // EOF
 
-#ifdef HAVE_ZLIB
   if (type == miCOMPRESSED)
     {
+#ifdef HAVE_ZLIB
       // If C++ allowed us direct access to the file descriptor of an
       // ifstream in a uniform way, the code below could be vastly
       // simplified, and additional copies of the data in memory
       // wouldn't be needed.
 
       OCTAVE_LOCAL_BUFFER (char, inbuf, element_length);
       is.read (inbuf, element_length);
 
@@ -593,18 +593,20 @@ read_mat5_binary_element (std::istream& 
               retval = read_mat5_binary_element (gz_is, filename,
                                                  swap, global, tc);
             }
         }
       else
         error ("load: error probing size of compressed data element");
 
       return retval;
+#else // HAVE_ZLIB
+      error ("load: zlib unavailable, cannot read compressed data element");
+#endif
     }
-#endif
 
   std::streampos pos;
 
   if (type != miMATRIX)
     {
       pos = is.tellg ();
       error ("load: invalid element type = %d", type);
       goto early_read_error;
diff --git a/libinterp/interp-core/mex.cc b/libinterp/interp-core/mex.cc
--- a/libinterp/interp-core/mex.cc
+++ b/libinterp/interp-core/mex.cc
@@ -2945,17 +2945,17 @@ call_mex (bool have_fmex, void *f, const
 
   unwind_protect_safe frame;
 
   // Save old mex pointer.
   frame.protect_var (mex_context);
 
   mex context (curr_mex_fcn);
 
-  frame.add (mex::cleanup, static_cast<void *> (&context));
+  frame.add_fcn (mex::cleanup, static_cast<void *> (&context));
 
   for (int i = 0; i < nargin; i++)
     argin[i] = context.make_value (args(i));
 
   if (setjmp (context.jump) == 0)
     {
       mex_context = &context;
 
diff --git a/libinterp/parse-tree/lex.h b/libinterp/parse-tree/lex.h
--- a/libinterp/parse-tree/lex.h
+++ b/libinterp/parse-tree/lex.h
@@ -18,21 +18,25 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #if !defined (octave_lex_h)
 #define octave_lex_h 1
 
+#include <deque>
+#include <limits>
 #include <list>
 #include <set>
 #include <stack>
 
+#include "comment-list.h"
 #include "input.h"
+#include "token.h"
 
 extern OCTINTERP_API void cleanup_parser (void);
 
 // Is the given string a keyword?
 extern bool is_keyword (const std::string& s);
 
 class
 stream_reader
@@ -47,19 +51,16 @@ protected:
 
 private:
 
   // No copying!
   stream_reader (const stream_reader&);
   stream_reader& operator = (const stream_reader&);
 };
 
-// Forward decl for octave_lexer::token_stack.
-class token;
-
 // For communication between the lexer and parser.
 
 class
 lexical_feedback
 {
 public:
 
   // Did eat_whitespace or eat_continuation eat a space or tab, or a
@@ -154,16 +155,77 @@ public:
       while (! context.empty ())
         context.pop ();
     }
 
   private:
 
     std::stack<int> context;
   };
+
+  class token_cache
+  {
+  public:
+
+    // Store an "unlimited" number of tokens.
+    token_cache (size_t sz_arg = std::numeric_limits<size_t>::max ())
+      : buffer (), sz (sz_arg)
+    { }
+
+    void push (token *tok)
+    {
+      if (buffer.size () == sz)
+        pop ();
+
+      buffer.push_front (tok);
+    }
+
+    void pop (void)
+    {
+      if (! empty ())
+        {
+          delete buffer.back ();
+          buffer.pop_back ();
+        }
+    }
+
+    // Direct access.
+    token *at (size_t n) { return buffer.at (n); }
+    const token *at (size_t n) const { return buffer.at (n); }
+
+    // Most recently pushed.
+    token *front (void) { return buffer.front (); }
+    const token *front (void) const { return buffer.front (); }
+
+    token *back (void) { return buffer.back (); }
+    const token *back (void) const { return buffer.back (); }
+
+    // Number of elements currently in the buffer, max of sz.
+    size_t size (void) const { return buffer.size (); }
+
+    bool empty (void) const { return buffer.empty (); }
+
+    void clear (void)
+    {
+      while (! empty ())
+        pop ();
+    }
+
+  private:
+
+    std::deque<token *> buffer;
+
+    size_t sz;
+
+    // No copying!
+
+    token_cache (const token_cache&);
+
+    token_cache& operator = (const token_cache&);
+  };
   
   lexical_feedback (void)
     : end_of_input (false), convert_spaces_to_comma (true),
       do_comma_insert (false), at_beginning_of_statement (true),
       looking_at_anon_fcn_args (false), looking_at_return_list (false),
       looking_at_parameter_list (false), looking_at_decl_list (false),
       looking_at_initializer_expression (false),
       looking_at_matrix_or_assign_lhs (false),
@@ -174,30 +236,32 @@ public:
       parsing_classdef_set_method (false), 
       quote_is_transpose (false), force_script (false),
       reading_fcn_file (false), reading_script_file (false),
       reading_classdef_file (false),
       input_line_number (1), current_input_column (1),
       bracketflag (0), braceflag (0),
       looping (0), defining_func (0), looking_at_function_handle (0),
       block_comment_nesting_level (0), token_count (0),
-      current_input_line (), help_text (), fcn_file_name (),
-      fcn_file_full_name (), looking_at_object_index (),
+      current_input_line (), comment_text (), help_text (),
+      fcn_file_name (), fcn_file_full_name (), looking_at_object_index (),
       parsed_function_name (), pending_local_variables (),
-      nesting_level (), token_stack ()
+      nesting_level (), tokens ()
   {
     init ();
   }
 
   ~lexical_feedback (void);
 
   void init (void);
 
   void reset (void);
 
+  int finish_comment (octave_comment_elt::comment_type typ);
+
   // true means that we have encountered eof on the input stream.
   bool end_of_input;
 
   // true means that we should convert spaces to a comma inside a
   // matrix definition.
   bool convert_spaces_to_comma;
 
   // gag.  stupid kludge so that [[1,2][3,4]] will work.
@@ -294,16 +358,19 @@ public:
 
   // Count of tokens recognized by this lexer since initialized or
   // since the last reset.
   size_t token_count;
 
   // The current line of input.
   std::string current_input_line;
 
+  // The current comment text.
+  std::string comment_text;
+
   // The current help text.
   std::string help_text;
 
   // Simple name of function file we are reading.
   std::string fcn_file_name;
 
   // Full name of file we are reading.
   std::string fcn_file_full_name;
@@ -319,25 +386,21 @@ public:
 
   // set of identifiers that might be local variable names.
   std::set<std::string> pending_local_variables;
 
   // is the closest nesting level a square bracket, squiggly brace or
   // a paren?
   bbp_nesting_level nesting_level;
 
-  // Stack to hold tokens so that we can delete them when the parser is
-  // reset and avoid growing forever just because we are stashing some
-  // information.
-  std::stack <token*> token_stack;
+  // Tokens generated by the lexer.
+  token_cache tokens;
 
 private:
 
-  void reset_token_stack (void);
-
   // No copying!
 
   lexical_feedback (const lexical_feedback&);
 
   lexical_feedback& operator = (const lexical_feedback&);
 };
 
 // octave_lexer inherits from lexical_feedback because we will
@@ -424,23 +487,16 @@ public:
   void fixup_column_count (char *s);
 
   bool inside_any_object_index (void);
 
   int is_keyword_token (const std::string& s);
 
   bool is_variable (const std::string& name);
 
-  std::string grab_block_comment (stream_reader& reader, bool& eof);
-
-  std::string grab_comment_block (stream_reader& reader, bool at_bol,
-                                  bool& eof);
-
-  int process_comment (bool start_in_block, bool& eof);
-
   bool next_token_is_sep_op (void);
 
   bool next_token_is_postfix_unary_op (bool spc_prev);
 
   bool next_token_is_bin_op (bool spc_prev);
 
   void scan_for_comments (const char *text);
 
@@ -489,17 +545,17 @@ public:
   void push_token (token *);
 
   token *current_token (void);
 
   void display_token (int tok);
 
   void fatal_error (const char *msg);
 
-  void lexer_debug (const char *pattern, const char *text);
+  void lexer_debug (const char *pattern);
 
   // Internal state of the flex-generated lexer.
   void *scanner;
 
   // Object that reads and buffers input.
   input_buffer input_buf;
 
   octave_input_reader input_reader;
@@ -527,21 +583,51 @@ public:
     return input_source () == "file";
   }
 
   bool input_from_eval_string (void) const
   {
     return input_source () == "eval_string";
   }
 
+  void push_start_state (int state);
+
+  void pop_start_state (void);
+
+  void clear_start_state (void);
+
+  int start_state (void) const { return start_state_stack.top (); }
+
+  void display_start_state (void) const;
+
+  int handle_op (const char *pattern, int tok, bool convert = false,
+                 bool bos = false, bool qit = false);
+
+  int handle_incompatible_op (const char *pattern, int tok,
+                              bool convert = false, bool bos = false,
+                              bool qit = false);
+
+  int handle_op_internal (const char *pattern, int tok, bool convert,
+                          bool bos, bool qit, bool compat);
+
+  int handle_token (const std::string& name, int tok);
+
+  int handle_token (int tok, token *tok_val = 0);
+
+  int count_token (int tok);
+
+  int show_token (int tok);
+
   // For unwind protect.
   static void cleanup (octave_lexer *lexer) { delete lexer; }
 
 private:
 
+  std::stack<int> start_state_stack;
+
   // No copying!
 
   octave_lexer (const octave_lexer&);
 
   octave_lexer& operator = (const octave_lexer&);
 };
 
 #endif
diff --git a/libinterp/parse-tree/lex.ll b/libinterp/parse-tree/lex.ll
--- a/libinterp/parse-tree/lex.ll
+++ b/libinterp/parse-tree/lex.ll
@@ -41,17 +41,20 @@ object) relevant global values before an
 #include <config.h>
 #endif
 
 }
 
 %s COMMAND_START
 %s MATRIX_START
 
-%x INPUT_FILE_BEGIN
+%x INPUT_FILE_START
+
+%x BLOCK_COMMENT_START
+%x LINE_COMMENT_START
 
 %{
 
 #include <cctype>
 #include <cstring>
 
 #include <iostream>
 #include <set>
@@ -122,110 +125,16 @@ object) relevant global values before an
 // Try to avoid crashing out completely on fatal scanner errors.
 
 #ifdef YY_FATAL_ERROR
 #undef YY_FATAL_ERROR
 #endif
 #define YY_FATAL_ERROR(msg) \
   (yyget_extra (yyscanner))->fatal_error (msg)
 
-#define DISPLAY_TOK_AND_RETURN(tok) \
-  do \
-    { \
-      int tok_val = tok; \
-      if (Vdisplay_tokens) \
-        curr_lexer->display_token (tok_val); \
-      if (lexer_debug_flag) \
-        { \
-          std::cerr << "R: "; \
-          curr_lexer->display_token (tok_val); \
-          std::cerr << std::endl;  \
-        } \
-      return tok_val; \
-    } \
-  while (0)
-
-#define COUNT_TOK_AND_RETURN(tok) \
-  do \
-    { \
-      if (tok != '\n') \
-        { \
-          Vtoken_count++; \
-          curr_lexer->token_count++; \
-        } \
-      DISPLAY_TOK_AND_RETURN (tok); \
-    } \
-  while (0)
-
-#define TOK_RETURN(tok) \
-  do \
-    { \
-      curr_lexer->current_input_column += yyleng; \
-      curr_lexer->quote_is_transpose = false; \
-      curr_lexer->convert_spaces_to_comma = true; \
-      COUNT_TOK_AND_RETURN (tok); \
-    } \
-  while (0)
-
-#define TOK_PUSH_AND_RETURN(name, tok) \
-  do \
-    { \
-      curr_lexer->push_token \
-        (new token (name, curr_lexer->input_line_number, \
-         curr_lexer->current_input_column)); \
-      TOK_RETURN (tok); \
-    } \
-  while (0)
-
-#define BIN_OP_RETURN_INTERNAL(tok, convert, bos, qit) \
-  do \
-    { \
-      curr_lexer->push_token \
-        (new token (curr_lexer->input_line_number, \
-         curr_lexer->current_input_column)); \
-      curr_lexer->current_input_column += yyleng; \
-      curr_lexer->quote_is_transpose = qit; \
-      curr_lexer->convert_spaces_to_comma = convert; \
-      curr_lexer->looking_for_object_index = false; \
-      curr_lexer->at_beginning_of_statement = bos; \
-      COUNT_TOK_AND_RETURN (tok); \
-    } \
-  while (0)
-
-#define XBIN_OP_RETURN_INTERNAL(tok, convert, bos, qit) \
-  do \
-    { \
-      curr_lexer->gripe_matlab_incompatible_operator (yytext); \
-      BIN_OP_RETURN_INTERNAL (tok, convert, bos, qit); \
-    } \
-  while (0)
-
-#define BIN_OP_RETURN(tok, convert, bos) \
-  do \
-    { \
-      BIN_OP_RETURN_INTERNAL (tok, convert, bos, false); \
-    } \
-  while (0)
-
-#define XBIN_OP_RETURN(tok, convert, bos) \
-  do \
-    { \
-      curr_lexer->gripe_matlab_incompatible_operator (yytext); \
-      BIN_OP_RETURN (tok, convert, bos); \
-    } \
-  while (0)
-
-#define LEXER_DEBUG(pattern) \
-  do \
-    { \
-      if (lexer_debug_flag) \
-        curr_lexer->lexer_debug (pattern, yytext); \
-    } \
-  while (0)
-
 static bool Vdisplay_tokens = false;
 
 static unsigned int Vtoken_count = 0;
 
 // Internal variable for lexer debugging state.
 static bool lexer_debug_flag = false;
 
 // Forward declarations for functions defined at the bottom of this
@@ -241,95 +150,97 @@ NL      ((\n)|(\r)|(\r\n))
 SNL     ({S}|{NL})
 EL      (\.\.\.)
 BS      (\\)
 CONT    ({EL}|{BS})
 Im      [iIjJ]
 CCHAR   [#%]
 COMMENT ({CCHAR}.*{NL})
 SNLCMT  ({SNL}|{COMMENT})
-NOT     ((\~)|(\!))
-POW     ((\*\*)|(\^))
-EPOW    (\.{POW})
 IDENT   ([_$a-zA-Z][_$a-zA-Z0-9]*)
 EXPON   ([DdEe][+-]?{D}+)
 NUMBER  (({D}+\.?{D}*{EXPON}?)|(\.{D}+{EXPON}?)|(0[xX][0-9a-fA-F]+))
+
+ANY_INCLUDING_NL (.|{NL})
+
 %%
 
 %{
 // Make script and function files start with a bogus token. This makes
 // the parser go down a special path.
 %}
 
-<INPUT_FILE_BEGIN>. {
-    LEXER_DEBUG ("<INPUT_FILE_BEGIN>.");
-
-    BEGIN (INITIAL);
+<INPUT_FILE_START>{ANY_INCLUDING_NL} {
+    curr_lexer->lexer_debug ("<INPUT_FILE_START>{ANY_INCLUDING_NL}");
+
     curr_lexer->xunput (yytext[0]);
 
     // May be reset later if we see "function" or "classdef" appears
     // as the first token.
     curr_lexer->reading_script_file = true;
 
-    DISPLAY_TOK_AND_RETURN (INPUT_FILE);
+    curr_lexer->pop_start_state ();
+
+    return curr_lexer->show_token (INPUT_FILE);
   }
 
 %{
 // Help and other command-style functions.
 %}
 
 <COMMAND_START>{NL} {
-    LEXER_DEBUG ("<COMMAND_START>{NL}");
-
-    BEGIN (INITIAL);
+    curr_lexer->lexer_debug ("<COMMAND_START>{NL}");
+
     curr_lexer->input_line_number++;
     curr_lexer->current_input_column = 1;
 
     curr_lexer->quote_is_transpose = false;
     curr_lexer->convert_spaces_to_comma = true;
     curr_lexer->looking_for_object_index = false;
     curr_lexer->at_beginning_of_statement = true;
 
-    COUNT_TOK_AND_RETURN ('\n');
+    curr_lexer->pop_start_state ();
+
+    return curr_lexer->count_token ('\n');
   }
 
 <COMMAND_START>[\;\,] {
-    LEXER_DEBUG ("<COMMAND_START>[\\;\\,]");
+    curr_lexer->lexer_debug ("<COMMAND_START>[\\;\\,]");
 
     curr_lexer->looking_for_object_index = false;
     curr_lexer->at_beginning_of_statement = true;
 
-    BEGIN (INITIAL);
+    curr_lexer->pop_start_state ();
 
     if (strcmp (yytext, ",") == 0)
-      TOK_RETURN (',');
+      return curr_lexer->handle_token (',');
     else
-      TOK_RETURN (';');
+      return curr_lexer->handle_token (';');
   }
 
 <COMMAND_START>[\"\'] {
-    LEXER_DEBUG ("<COMMAND_START>[\\\"\\']");
+    curr_lexer->lexer_debug ("<COMMAND_START>[\\\"\\']");
 
     curr_lexer->at_beginning_of_statement = false;
 
     curr_lexer->current_input_column++;
     int tok = curr_lexer->handle_string (yytext[0]);
 
-    COUNT_TOK_AND_RETURN (tok);
+    return curr_lexer->count_token (tok);
   }
 
 <COMMAND_START>[^#% \t\r\n\;\,\"\'][^ \t\r\n\;\,]*{S}* {
-    LEXER_DEBUG ("<COMMAND_START>[^#% \\t\\r\\n\\;\\,\\\"\\'][^ \\t\\r\\n\\;\\,]*{S}*");
+    curr_lexer->lexer_debug ("<COMMAND_START>[^#% \\t\\r\\n\\;\\,\\\"\\'][^ \\t\\r\\n\\;\\,]*{S}*");
 
     std::string tok = strip_trailing_whitespace (yytext);
 
     curr_lexer->looking_for_object_index = false;
     curr_lexer->at_beginning_of_statement = false;
 
-    TOK_PUSH_AND_RETURN (tok, SQ_STRING);
+    return curr_lexer->handle_token (tok, SQ_STRING);
   }
 
 %{
 // For this and the next two rules, we're looking at ']', and we
 // need to know if the next token is '=' or '=='.
 //
 // It would have been so much easier if the delimiters were simply
 // different for the expression on the left hand side of the equals
@@ -337,17 +248,17 @@ NUMBER  (({D}+\.?{D}*{EXPON}?)|(\.{D}+{E
 //
 // It's also a pain in the ass to decide whether to insert a comma
 // after seeing a ']' character...
 
 // FIXME -- we need to handle block comments here.
 %}
 
 <MATRIX_START>{SNLCMT}*\]{S}* {
-    LEXER_DEBUG ("<MATRIX_START>{SNLCMT}*\\]{S}*");
+    curr_lexer->lexer_debug ("<MATRIX_START>{SNLCMT}*\\]{S}*");
 
     curr_lexer->scan_for_comments (yytext);
     curr_lexer->fixup_column_count (yytext);
 
     curr_lexer->looking_at_object_index.pop_front ();
 
     curr_lexer->looking_for_object_index = true;
     curr_lexer->at_beginning_of_statement = false;
@@ -355,25 +266,25 @@ NUMBER  (({D}+\.?{D}*{EXPON}?)|(\.{D}+{E
     int c = yytext[yyleng-1];
     bool cont_is_spc = (curr_lexer->eat_continuation () != octave_lexer::NO_WHITESPACE);
     bool spc_gobbled = (cont_is_spc || c == ' ' || c == '\t');
     int tok_to_return = curr_lexer->handle_close_bracket (spc_gobbled, ']');
 
     if (spc_gobbled)
       curr_lexer->xunput (' ');
 
-    COUNT_TOK_AND_RETURN (tok_to_return);
+    return curr_lexer->count_token (tok_to_return);
   }
 
 %{
 // FIXME -- we need to handle block comments here.
 %}
 
 <MATRIX_START>{SNLCMT}*\}{S}* {
-    LEXER_DEBUG ("<MATRIX_START>{SNLCMT}*\\}{S}*");
+    curr_lexer->lexer_debug ("<MATRIX_START>{SNLCMT}*\\}{S}*");
 
     curr_lexer->scan_for_comments (yytext);
     curr_lexer->fixup_column_count (yytext);
 
     curr_lexer->looking_at_object_index.pop_front ();
 
     curr_lexer->looking_for_object_index = true;
     curr_lexer->at_beginning_of_statement = false;
@@ -381,27 +292,27 @@ NUMBER  (({D}+\.?{D}*{EXPON}?)|(\.{D}+{E
     int c = yytext[yyleng-1];
     bool cont_is_spc = (curr_lexer->eat_continuation () != octave_lexer::NO_WHITESPACE);
     bool spc_gobbled = (cont_is_spc || c == ' ' || c == '\t');
     int tok_to_return = curr_lexer->handle_close_bracket (spc_gobbled, '}');
 
     if (spc_gobbled)
       curr_lexer->xunput (' ');
 
-    COUNT_TOK_AND_RETURN (tok_to_return);
+    return curr_lexer->count_token (tok_to_return);
   }
 
 %{
 // Commas are element separators in matrix constants.  If we don't
 // check for continuations here we can end up inserting too many
 // commas.
 %}
 
 <MATRIX_START>{S}*\,{S}* {
-    LEXER_DEBUG ("<MATRIX_START>{S}*\\,{S}*");
+    curr_lexer->lexer_debug ("<MATRIX_START>{S}*\\,{S}*");
 
     curr_lexer->current_input_column += yyleng;
 
     int tmp = curr_lexer->eat_continuation ();
 
     curr_lexer->quote_is_transpose = false;
     curr_lexer->convert_spaces_to_comma = true;
     curr_lexer->looking_for_object_index = false;
@@ -412,28 +323,28 @@ NUMBER  (({D}+\.?{D}*{EXPON}?)|(\.{D}+{E
         if ((tmp & octave_lexer::NEWLINE) == octave_lexer::NEWLINE)
           {
             curr_lexer->maybe_warn_separator_insert (';');
 
             curr_lexer->xunput (';');
           }
       }
 
-    COUNT_TOK_AND_RETURN (',');
+    return curr_lexer->count_token (',');
   }
 
 %{
 // In some cases, spaces in matrix constants can turn into commas.
 // If commas are required, spaces are not important in matrix
 // constants so we just eat them.  If we don't check for continuations
 // here we can end up inserting too many commas.
 %}
 
 <MATRIX_START>{S}+ {
-    LEXER_DEBUG ("<MATRIX_START>{S}+");
+    curr_lexer->lexer_debug ("<MATRIX_START>{S}+");
 
     curr_lexer->current_input_column += yyleng;
 
     curr_lexer->at_beginning_of_statement = false;
 
     int tmp = curr_lexer->eat_continuation ();
 
     if (! curr_lexer->looking_at_object_index.front ())
@@ -454,55 +365,55 @@ NUMBER  (({D}+\.?{D}*{EXPON}?)|(\.{D}+{E
               }
 
             curr_lexer->quote_is_transpose = false;
             curr_lexer->convert_spaces_to_comma = true;
             curr_lexer->looking_for_object_index = false;
 
             curr_lexer->maybe_warn_separator_insert (',');
 
-            COUNT_TOK_AND_RETURN (',');
+            return curr_lexer->count_token (',');
           }
       }
   }
 
 %{
 // Semicolons are handled as row seprators in matrix constants.  If we
 // don't eat whitespace here we can end up inserting too many
 // semicolons.
 
 // FIXME -- we need to handle block comments here.
 %}
 
 <MATRIX_START>{SNLCMT}*;{SNLCMT}* {
-    LEXER_DEBUG ("<MATRIX_START>{SNLCMT}*;{SNLCMT}*");
+    curr_lexer->lexer_debug ("<MATRIX_START>{SNLCMT}*;{SNLCMT}*");
 
     curr_lexer->scan_for_comments (yytext);
     curr_lexer->fixup_column_count (yytext);
     curr_lexer->eat_whitespace ();
 
     curr_lexer->quote_is_transpose = false;
     curr_lexer->convert_spaces_to_comma = true;
     curr_lexer->looking_for_object_index = false;
     curr_lexer->at_beginning_of_statement = false;
 
-    COUNT_TOK_AND_RETURN (';');
+    return curr_lexer->count_token (';');
   }
 
 %{
 // In some cases, new lines can also become row separators.  If we
 // don't eat whitespace here we can end up inserting too many
 // semicolons.
 
 // FIXME -- we need to handle block comments here.
 %}
 
 <MATRIX_START>{S}*{COMMENT}{SNLCMT}* |
 <MATRIX_START>{S}*{NL}{SNLCMT}* {
-    LEXER_DEBUG ("<MATRIX_START>{S}*{COMMENT}{SNLCMT}*|<MATRIX_START>{S}*{NL}{SNLCMT}*");
+    curr_lexer->lexer_debug ("<MATRIX_START>{S}*{COMMENT}{SNLCMT}*|<MATRIX_START>{S}*{NL}{SNLCMT}*");
 
     curr_lexer->scan_for_comments (yytext);
     curr_lexer->fixup_column_count (yytext);
     curr_lexer->eat_whitespace ();
 
     curr_lexer->quote_is_transpose = false;
     curr_lexer->convert_spaces_to_comma = true;
     curr_lexer->at_beginning_of_statement = false;
@@ -510,22 +421,22 @@ NUMBER  (({D}+\.?{D}*{EXPON}?)|(\.{D}+{E
     if (curr_lexer->nesting_level.none ())
       return LEXICAL_ERROR;
 
     if (! curr_lexer->looking_at_object_index.front ()
         && curr_lexer->nesting_level.is_bracket_or_brace ())
       {
         curr_lexer->maybe_warn_separator_insert (';');
 
-        COUNT_TOK_AND_RETURN (';');
+        return curr_lexer->count_token (';');
       }
   }
 
 \[{S}* {
-    LEXER_DEBUG ("\\[{S}*");
+    curr_lexer->lexer_debug ("\\[{S}*");
 
     curr_lexer->nesting_level.bracket ();
 
     curr_lexer->looking_at_object_index.push_front (false);
 
     curr_lexer->current_input_column += yyleng;
     curr_lexer->quote_is_transpose = false;
     curr_lexer->convert_spaces_to_comma = true;
@@ -537,54 +448,207 @@ NUMBER  (({D}+\.?{D}*{EXPON}?)|(\.{D}+{E
       curr_lexer->looking_at_return_list = true;
     else
       curr_lexer->looking_at_matrix_or_assign_lhs = true;
 
     curr_lexer->decrement_promptflag ();
     curr_lexer->eat_whitespace ();
 
     curr_lexer->bracketflag++;
-    BEGIN (MATRIX_START);
-    COUNT_TOK_AND_RETURN ('[');
+
+    curr_lexer->push_start_state (MATRIX_START);
+
+    return curr_lexer->count_token ('[');
   }
 
 \] {
-    LEXER_DEBUG ("\\]");
+    curr_lexer->lexer_debug ("\\]");
 
     curr_lexer->nesting_level.remove ();
 
     curr_lexer->looking_at_object_index.pop_front ();
 
     curr_lexer->looking_for_object_index = true;
     curr_lexer->at_beginning_of_statement = false;
 
-    TOK_RETURN (']');
+    return curr_lexer->handle_token (']');
+  }
+
+%{
+// Gobble comments.
+%}
+
+%{
+// Start of a block comment.  If the comment marker appears immediately
+// after a block of full-line comments, finish the full line comment
+// block.
+%}
+
+^{S}*{CCHAR}\{{S}*{NL} {
+    curr_lexer->lexer_debug ("^{S}*{CCHAR}\{{S}*{NL}");
+
+    int tok = 0;
+
+    if (curr_lexer->start_state () == LINE_COMMENT_START)
+      {
+        if (! curr_lexer->comment_text.empty ())
+          tok = curr_lexer->finish_comment (octave_comment_elt::full_line);
+
+        curr_lexer->pop_start_state ();
+      }
+
+    curr_lexer->push_start_state (BLOCK_COMMENT_START);
+
+    yyless (0);
+
+    if (tok > 0)
+      return curr_lexer->count_token (tok);
+  }
+
+<BLOCK_COMMENT_START>^{S}*{CCHAR}\{{S}*{NL} {
+    curr_lexer->lexer_debug ("<BLOCK_COMMENT_START>^{S}*{CCHAR}\{{S}*{NL}");
+
+    curr_lexer->input_line_number++;
+    curr_lexer->current_input_column = 1;
+
+    if (curr_lexer->block_comment_nesting_level)
+      curr_lexer->comment_text = "\n";
+
+    curr_lexer->block_comment_nesting_level++;
+  }
+
+%{
+// End of a block comment.  If this block comment is nested inside
+// another, wait for the outermost block comment block to be closed
+// before storing the comment.
+%}
+
+<BLOCK_COMMENT_START>^{S}*{CCHAR}\}{S}*{NL} {
+    curr_lexer->lexer_debug ("<BLOCK_COMMENT_START>^{S}*{CCHAR}\\}{S}*{NL}");
+
+    curr_lexer->input_line_number++;
+    curr_lexer->current_input_column = 1;
+
+    int tok = 0;
+
+    if (curr_lexer->block_comment_nesting_level > 1)
+      curr_lexer->comment_text = "\n";
+    else
+      tok = curr_lexer->finish_comment (octave_comment_elt::block);
+
+    curr_lexer->block_comment_nesting_level--;
+    curr_lexer->pop_start_state ();
+
+    if (tok > 0)
+      return curr_lexer->count_token (tok);
+  }
+
+%{
+// Body of a block comment.
+%}
+
+<BLOCK_COMMENT_START>.*{NL} {
+    curr_lexer->lexer_debug ("<BLOCK_COMMENT_START>.*{NL}");
+
+    curr_lexer->input_line_number++;
+    curr_lexer->current_input_column = 1;
+    curr_lexer->comment_text += yytext;
+  }
+
+%{
+// Full-line or end-of-line comment.
+%}
+
+{S}*{CCHAR}.*{NL} {
+    curr_lexer->lexer_debug ("{S}*{CCHAR}.*{NL}");
+
+    curr_lexer->push_start_state (LINE_COMMENT_START);
+    yyless (0);
+  }
+
+<LINE_COMMENT_START>{S}*{CCHAR}.*{NL} {
+    curr_lexer->lexer_debug ("<LINE_COMMENT_START>{S}*{CCHAR}.*{NL}");
+
+    bool full_line_comment = curr_lexer->current_input_column == 1;
+    curr_lexer->input_line_number++;
+    curr_lexer->current_input_column = 1;
+
+    size_t len = yyleng;
+    size_t i = 0;
+    while (i < len)
+      {
+        char c = yytext[i];
+        if (c == '#' || c == '%' || c == ' ' || c == '\t')
+          i++;
+        else
+          break;
+      }
+      
+    curr_lexer->comment_text += &yytext[i];
+
+    int tok = 0;
+
+    if (! full_line_comment)
+      {
+        tok = curr_lexer->finish_comment (octave_comment_elt::end_of_line);
+
+        curr_lexer->pop_start_state ();
+
+        if (curr_lexer->start_state () == COMMAND_START)
+          {
+            // Allow the actions for the end of a COMMAND line to be
+            // executed next.
+
+            tok = 0;
+            curr_lexer->xunput ('\n');
+          }
+      }
+
+    if (tok > 0)
+      return curr_lexer->count_token (tok);
+  }
+
+%{
+// End of a block of full-line comments.
+%}
+
+<LINE_COMMENT_START>{ANY_INCLUDING_NL} {
+    curr_lexer->lexer_debug ("<LINE_COMMENT_START>{ANY_INCLUDING_NL}");
+
+    curr_lexer->xunput (yytext[0]);
+
+    int tok = curr_lexer->finish_comment (octave_comment_elt::full_line);  
+
+    curr_lexer->pop_start_state ();
+
+    if (tok > 0)
+      return curr_lexer->count_token (tok);
   }
 
 %{
 // Imaginary numbers.
 %}
 
 {NUMBER}{Im} {
-    LEXER_DEBUG ("{NUMBER}{Im}");
+    curr_lexer->lexer_debug ("{NUMBER}{Im}");
 
     curr_lexer->handle_number ();
-    COUNT_TOK_AND_RETURN (IMAG_NUM);
+    return curr_lexer->count_token (IMAG_NUM);
   }
 
 %{
 // Real numbers.  Don't grab the '.' part of a dot operator as part of
 // the constant.
 %}
 
 {D}+/\.[\*/\\^\'] |
 {NUMBER} {
-    LEXER_DEBUG ("{D}+/\\.[\\*/\\^\\']|{NUMBER}");
+    curr_lexer->lexer_debug ("{D}+/\\.[\\*/\\^\\']|{NUMBER}");
     curr_lexer->handle_number ();
-    COUNT_TOK_AND_RETURN (NUM);
+    return curr_lexer->count_token (NUM);
   }
 
 %{
 // Eat whitespace.  Whitespace inside matrix constants is handled by
 // the <MATRIX_START> start state code above.
 %}
 
 {S}* {
@@ -592,17 +656,17 @@ NUMBER  (({D}+\.?{D}*{EXPON}?)|(\.{D}+{E
   }
 
 %{
 // Continuation lines.  Allow comments after continuations.
 %}
 
 {CONT}{S}*{NL} |
 {CONT}{S}*{COMMENT} {
-    LEXER_DEBUG ("{CONT}{S}*{NL}|{CONT}{S}*{COMMENT}");
+    curr_lexer->lexer_debug ("{CONT}{S}*{NL}|{CONT}{S}*{COMMENT}");
 
     if (yytext[0] == '\\')
       curr_lexer->gripe_matlab_incompatible_continuation ();
     curr_lexer->scan_for_comments (yytext);
     curr_lexer->decrement_promptflag ();
     curr_lexer->input_line_number++;
     curr_lexer->current_input_column = 1;
   }
@@ -616,254 +680,227 @@ NUMBER  (({D}+\.?{D}*{EXPON}?)|(\.{D}+{E
   }
 
 %{
 // Identifiers.  Truncate the token at the first space or tab but
 // don't write directly on yytext.
 %}
 
 {IDENT}{S}* {
-    LEXER_DEBUG ("{IDENT}{S}*");
+    curr_lexer->lexer_debug ("{IDENT}{S}*");
 
     int id_tok = curr_lexer->handle_identifier ();
 
     if (id_tok >= 0)
-      COUNT_TOK_AND_RETURN (id_tok);
+      return curr_lexer->count_token (id_tok);
   }
 
 %{
 // Superclass method identifiers.
 %}
 
 {IDENT}@{IDENT}{S}* |
 {IDENT}@{IDENT}.{IDENT}{S}* {
-    LEXER_DEBUG ("{IDENT}@{IDENT}{S}*|{IDENT}@{IDENT}.{IDENT}{S}*");
+    curr_lexer->lexer_debug ("{IDENT}@{IDENT}{S}*|{IDENT}@{IDENT}.{IDENT}{S}*");
 
     int id_tok = curr_lexer->handle_superclass_identifier ();
 
     if (id_tok >= 0)
       {
         curr_lexer->looking_for_object_index = true;
 
-        COUNT_TOK_AND_RETURN (id_tok);
+        return curr_lexer->count_token (id_tok);
       }
   }
 
 %{
 // Metaclass query
 %}
 
 \?{IDENT}{S}* |
 \?{IDENT}\.{IDENT}{S}* {
-    LEXER_DEBUG ("\\?{IDENT}{S}*|\\?{IDENT}\\.{IDENT}{S}*");
+    curr_lexer->lexer_debug ("\\?{IDENT}{S}*|\\?{IDENT}\\.{IDENT}{S}*");
 
     int id_tok = curr_lexer->handle_meta_identifier ();
 
     if (id_tok >= 0)
       {
         curr_lexer->looking_for_object_index = true;
 
-        COUNT_TOK_AND_RETURN (id_tok);
+        return curr_lexer->count_token (id_tok);
       }
   }
 
 %{
 // Function handles and superclass references
 %}
 
 "@" {
-    LEXER_DEBUG ("@");
+    curr_lexer->lexer_debug ("@");
 
     curr_lexer->current_input_column++;
 
     curr_lexer->quote_is_transpose = false;
     curr_lexer->convert_spaces_to_comma = false;
     curr_lexer->looking_at_function_handle++;
     curr_lexer->looking_for_object_index = false;
     curr_lexer->at_beginning_of_statement = false;
 
-    COUNT_TOK_AND_RETURN ('@');
+    return curr_lexer->count_token ('@');
 
   }
 
 %{
 // A new line character.  New line characters inside matrix constants
 // are handled by the <MATRIX_START> start state code above.  If closest
 // nesting is inside parentheses, don't return a row separator.
 %}
 
 {NL} {
-    LEXER_DEBUG ("{NL}");
+    curr_lexer->lexer_debug ("{NL}");
 
     curr_lexer->input_line_number++;
     curr_lexer->current_input_column = 1;
 
     curr_lexer->quote_is_transpose = false;
     curr_lexer->convert_spaces_to_comma = true;
 
     if (curr_lexer->nesting_level.none ())
       {
         curr_lexer->at_beginning_of_statement = true;
-        COUNT_TOK_AND_RETURN ('\n');
+        return curr_lexer->count_token ('\n');
       }
     else if (curr_lexer->nesting_level.is_paren ())
       {
         curr_lexer->at_beginning_of_statement = false;
         curr_lexer->gripe_matlab_incompatible ("bare newline inside parentheses");
       }
     else if (curr_lexer->nesting_level.is_bracket_or_brace ())
       return LEXICAL_ERROR;
   }
 
 %{
 // Single quote can either be the beginning of a string or a transpose
 // operator.
 %}
 
 "'" {
-    LEXER_DEBUG ("'");
+    curr_lexer->lexer_debug ("'");
 
     curr_lexer->current_input_column++;
     curr_lexer->convert_spaces_to_comma = true;
 
     if (curr_lexer->quote_is_transpose)
       {
         curr_lexer->do_comma_insert_check ();
-        COUNT_TOK_AND_RETURN (QUOTE);
+        return curr_lexer->count_token (QUOTE);
       }
     else
       {
         int tok = curr_lexer->handle_string ('\'');
-        COUNT_TOK_AND_RETURN (tok);
+        return curr_lexer->count_token (tok);
       }
   }
 
 %{
 // Double quotes always begin strings.
 %}
 
 \" {
-    LEXER_DEBUG ("\"");
+    curr_lexer->lexer_debug ("\"");
 
     curr_lexer->current_input_column++;
     int tok = curr_lexer->handle_string ('"');
 
-    COUNT_TOK_AND_RETURN (tok);
+    return curr_lexer->count_token (tok);
 }
 
 %{
-// Gobble comments.
-%}
-
-{CCHAR} {
-    LEXER_DEBUG ("{CCHAR}");
-
-    curr_lexer->looking_for_object_index = false;
-
-    curr_lexer->xunput (yytext[0]);
-
-    bool eof = false;
-    int tok = curr_lexer->process_comment (false, eof);
-
-    if (eof)
-      return curr_lexer->handle_end_of_input ();
-    else if (tok > 0)
-      COUNT_TOK_AND_RETURN (tok);
-  }
-
-%{
-// Block comments.
-%}
-
-^{S}*{CCHAR}\{{S}*{NL} {
-    LEXER_DEBUG ("^{S}*{CCHAR}\\{{S}*{NL}");
-
-    curr_lexer->looking_for_object_index = false;
-
-    curr_lexer->input_line_number++;
-    curr_lexer->current_input_column = 1;
-    curr_lexer->block_comment_nesting_level++;
-    curr_lexer->decrement_promptflag ();
-
-    bool eof = false;
-    curr_lexer->process_comment (true, eof);
-  }
-
-%{
 // Other operators.
 %}
 
-":"     { LEXER_DEBUG (":"); BIN_OP_RETURN (':', false, false); }
-
-".+"    { LEXER_DEBUG (".+"); XBIN_OP_RETURN (EPLUS, false, false); }
-".-"    { LEXER_DEBUG (".-"); XBIN_OP_RETURN (EMINUS, false, false); }
-".*"    { LEXER_DEBUG (".*"); BIN_OP_RETURN (EMUL, false, false); }
-"./"    { LEXER_DEBUG ("./"); BIN_OP_RETURN (EDIV, false, false); }
-".\\"   { LEXER_DEBUG (".\\"); BIN_OP_RETURN (ELEFTDIV, false, false); }
-".^"    { LEXER_DEBUG (".^"); BIN_OP_RETURN (EPOW, false, false); }
-".**"   { LEXER_DEBUG (".**"); XBIN_OP_RETURN (EPOW, false, false); }
-".'"    { LEXER_DEBUG (".'"); curr_lexer->do_comma_insert_check (); BIN_OP_RETURN (TRANSPOSE, true, false); }
-"++"    { LEXER_DEBUG ("++"); curr_lexer->do_comma_insert_check (); XBIN_OP_RETURN_INTERNAL (PLUS_PLUS, true, false, true); }
-"--"    { LEXER_DEBUG ("--"); curr_lexer->do_comma_insert_check (); XBIN_OP_RETURN_INTERNAL (MINUS_MINUS, true, false, true); }
-"<="    { LEXER_DEBUG ("<="); BIN_OP_RETURN (EXPR_LE, false, false); }
-"=="    { LEXER_DEBUG ("=="); BIN_OP_RETURN (EXPR_EQ, false, false); }
-"~="    { LEXER_DEBUG ("~="); BIN_OP_RETURN (EXPR_NE, false, false); }
-"!="    { LEXER_DEBUG ("!="); XBIN_OP_RETURN (EXPR_NE, false, false); }
-">="    { LEXER_DEBUG (">="); BIN_OP_RETURN (EXPR_GE, false, false); }
-"&"     { LEXER_DEBUG ("&"); BIN_OP_RETURN (EXPR_AND, false, false); }
-"|"     { LEXER_DEBUG ("|"); BIN_OP_RETURN (EXPR_OR, false, false); }
-"<"     { LEXER_DEBUG ("<"); BIN_OP_RETURN (EXPR_LT, false, false); }
-">"     { LEXER_DEBUG (">"); BIN_OP_RETURN (EXPR_GT, false, false); }
-"+"     { LEXER_DEBUG ("+"); BIN_OP_RETURN ('+', false, false); }
-"-"     { LEXER_DEBUG ("-"); BIN_OP_RETURN ('-', false, false); }
-"*"     { LEXER_DEBUG ("*"); BIN_OP_RETURN ('*', false, false); }
-"/"     { LEXER_DEBUG ("/"); BIN_OP_RETURN ('/', false, false); }
-"\\"    { LEXER_DEBUG ("\\"); BIN_OP_RETURN (LEFTDIV, false, false); }
-";"     { LEXER_DEBUG (";"); BIN_OP_RETURN (';', true, true); }
-","     { LEXER_DEBUG (","); BIN_OP_RETURN (',', true, ! curr_lexer->looking_at_object_index.front ()); }
-"^"     { LEXER_DEBUG ("^"); BIN_OP_RETURN (POW, false, false); }
-"**"    { LEXER_DEBUG ("**"); XBIN_OP_RETURN (POW, false, false); }
-"="     { LEXER_DEBUG ("="); BIN_OP_RETURN ('=', true, false); }
-"&&"    { LEXER_DEBUG ("&&"); BIN_OP_RETURN (EXPR_AND_AND, false, false); }
-"||"    { LEXER_DEBUG ("||"); BIN_OP_RETURN (EXPR_OR_OR, false, false); }
-"<<"    { LEXER_DEBUG ("<<"); XBIN_OP_RETURN (LSHIFT, false, false); }
-">>"    { LEXER_DEBUG (">>"); XBIN_OP_RETURN (RSHIFT, false, false); }
-
-{NOT} {
-    LEXER_DEBUG ("{NOT}");
-
-    if (yytext[0] == '~')
-      BIN_OP_RETURN (EXPR_NOT, false, false);
-    else
-      XBIN_OP_RETURN (EXPR_NOT, false, false);
+":"     { return curr_lexer->handle_op (":", ':'); }
+".+"    { return curr_lexer->handle_incompatible_op (".+", EPLUS); }
+".-"    { return curr_lexer->handle_incompatible_op (".-", EMINUS); }
+".*"    { return curr_lexer->handle_op (".*", EMUL); }
+"./"    { return curr_lexer->handle_op ("./", EDIV); }
+".\\"   { return curr_lexer->handle_op (".\\", ELEFTDIV); }
+".^"    { return curr_lexer->handle_op (".^", EPOW); }
+".**"   { return curr_lexer->handle_incompatible_op (".**", EPOW); }
+"<="    { return curr_lexer->handle_op ("<=", EXPR_LE); }
+"=="    { return curr_lexer->handle_op ("==", EXPR_EQ); }
+"~="    { return curr_lexer->handle_op ("~=", EXPR_NE); }
+"!="    { return curr_lexer->handle_incompatible_op ("!=", EXPR_NE); }
+">="    { return curr_lexer->handle_op (">=", EXPR_GE); }
+"&"     { return curr_lexer->handle_op ("&", EXPR_AND); }
+"|"     { return curr_lexer->handle_op ("|", EXPR_OR); }
+"<"     { return curr_lexer->handle_op ("<", EXPR_LT); }
+">"     { return curr_lexer->handle_op (">", EXPR_GT); }
+"+"     { return curr_lexer->handle_op ("+", '+'); }
+"-"     { return curr_lexer->handle_op ("-", '-'); }
+"*"     { return curr_lexer->handle_op ("*", '*'); }
+"/"     { return curr_lexer->handle_op ("/", '/'); }
+"\\"    { return curr_lexer->handle_op ("\\", LEFTDIV); }
+"^"     { return curr_lexer->handle_op ("^", POW); }
+"**"    { return curr_lexer->handle_incompatible_op ("**", POW); }
+"="     { return curr_lexer->handle_op ("=", '=', true, false); }
+"&&"    { return curr_lexer->handle_op ("&&", EXPR_AND_AND); }
+"||"    { return curr_lexer->handle_op ("||", EXPR_OR_OR); }
+"<<"    { return curr_lexer->handle_incompatible_op ("<<", LSHIFT); }
+">>"    { return curr_lexer->handle_incompatible_op (">>", RSHIFT); }
+"~"     { return curr_lexer->handle_op ("~", EXPR_NOT); }
+"!"     { return curr_lexer->handle_incompatible_op ("!", EXPR_NOT); }
+";"     { return curr_lexer->handle_op (";", ';', true, true); }
+
+"," {
+    return curr_lexer->handle_op
+      (",", ',', true, ! curr_lexer->looking_at_object_index.front ());
+  }
+
+".'" {
+    curr_lexer->do_comma_insert_check ();
+    return curr_lexer->handle_op (".'", TRANSPOSE, true, false);
+  }
+
+"++" {
+    curr_lexer->do_comma_insert_check ();
+    return curr_lexer->handle_incompatible_op
+      ("++", PLUS_PLUS, true, false, true);
+  }
+
+"--" {
+    ;
+    curr_lexer->do_comma_insert_check ();
+    return curr_lexer->handle_incompatible_op
+      ("--", MINUS_MINUS, true, false, true);
   }
 
 "(" {
-    LEXER_DEBUG ("(");
+    curr_lexer->lexer_debug ("(");
 
     // If we are looking for an object index, then push TRUE for
     // looking_at_object_index.  Otherwise, just push whatever state
     // is current (so that we can pop it off the stack when we find
     // the matching close paren).
 
     curr_lexer->looking_at_object_index.push_front
       (curr_lexer->looking_for_object_index);
 
     curr_lexer->looking_at_indirect_ref = false;
     curr_lexer->looking_for_object_index = false;
     curr_lexer->at_beginning_of_statement = false;
 
     curr_lexer->nesting_level.paren ();
     curr_lexer->decrement_promptflag ();
 
-    TOK_RETURN ('(');
+    return curr_lexer->handle_token ('(');
   }
 
 ")" {
-    LEXER_DEBUG (")");
+    curr_lexer->lexer_debug (")");
 
     curr_lexer->nesting_level.remove ();
     curr_lexer->current_input_column++;
 
     curr_lexer->looking_at_object_index.pop_front ();
 
     curr_lexer->quote_is_transpose = true;
     curr_lexer->convert_spaces_to_comma
@@ -872,86 +909,94 @@ NUMBER  (({D}+\.?{D}*{EXPON}?)|(\.{D}+{E
     curr_lexer->looking_for_object_index = true;
     curr_lexer->at_beginning_of_statement = false;
 
     if (curr_lexer->looking_at_anon_fcn_args)
       curr_lexer->looking_at_anon_fcn_args = false;
 
     curr_lexer->do_comma_insert_check ();
 
-    COUNT_TOK_AND_RETURN (')');
+    return curr_lexer->count_token (')');
   }
 
 "." {
-    LEXER_DEBUG (".");
+    curr_lexer->lexer_debug (".");
 
     curr_lexer->looking_for_object_index = false;
     curr_lexer->at_beginning_of_statement = false;
 
-    TOK_RETURN ('.');
+    return curr_lexer->handle_token ('.');
   }
 
-"+="    { LEXER_DEBUG ("+="); XBIN_OP_RETURN (ADD_EQ, false, false); }
-"-="    { LEXER_DEBUG ("-="); XBIN_OP_RETURN (SUB_EQ, false, false); }
-"*="    { LEXER_DEBUG ("*="); XBIN_OP_RETURN (MUL_EQ, false, false); }
-"/="    { LEXER_DEBUG ("/="); XBIN_OP_RETURN (DIV_EQ, false, false); }
-"\\="   { LEXER_DEBUG ("\\="); XBIN_OP_RETURN (LEFTDIV_EQ, false, false); }
-".+="   { LEXER_DEBUG (".+="); XBIN_OP_RETURN (ADD_EQ, false, false); }
-".-="   { LEXER_DEBUG (".-="); XBIN_OP_RETURN (SUB_EQ, false, false); }
-".*="   { LEXER_DEBUG (".*="); XBIN_OP_RETURN (EMUL_EQ, false, false); }
-"./="   { LEXER_DEBUG ("./="); XBIN_OP_RETURN (EDIV_EQ, false, false); }
-".\\="  { LEXER_DEBUG (".\\="); XBIN_OP_RETURN (ELEFTDIV_EQ, false, false); }
-{POW}=  { LEXER_DEBUG ("{POW}="); XBIN_OP_RETURN (POW_EQ, false, false); }
-{EPOW}= { LEXER_DEBUG ("{EPOW}="); XBIN_OP_RETURN (EPOW_EQ, false, false); }
-"&="    { LEXER_DEBUG ("&="); XBIN_OP_RETURN (AND_EQ, false, false); }
-"|="    { LEXER_DEBUG ("|="); XBIN_OP_RETURN (OR_EQ, false, false); }
-"<<="   { LEXER_DEBUG ("<<="); XBIN_OP_RETURN (LSHIFT_EQ, false, false); }
-">>="   { LEXER_DEBUG (">>="); XBIN_OP_RETURN (RSHIFT_EQ, false, false); }
+%{
+// op= operators.
+%}
+
+"+="    { return curr_lexer->handle_incompatible_op ("+=", ADD_EQ); }
+"-="    { return curr_lexer->handle_incompatible_op ("-=", SUB_EQ); }
+"*="    { return curr_lexer->handle_incompatible_op ("*=", MUL_EQ); }
+"/="    { return curr_lexer->handle_incompatible_op ("/=", DIV_EQ); }
+"\\="   { return curr_lexer->handle_incompatible_op ("\\=", LEFTDIV_EQ); }
+".+="   { return curr_lexer->handle_incompatible_op (".+=", ADD_EQ); }
+".-="   { return curr_lexer->handle_incompatible_op (".-=", SUB_EQ); }
+".*="   { return curr_lexer->handle_incompatible_op (".*=", EMUL_EQ); }
+"./="   { return curr_lexer->handle_incompatible_op ("./=", EDIV_EQ); }
+".\\="  { return curr_lexer->handle_incompatible_op (".\\=", ELEFTDIV_EQ); }
+"^="    { return curr_lexer->handle_incompatible_op ("^=", POW_EQ); }
+"**="   { return curr_lexer->handle_incompatible_op ("^=", POW_EQ); }
+".^="   { return curr_lexer->handle_incompatible_op (".^=", EPOW_EQ); }
+".**="  { return curr_lexer->handle_incompatible_op (".^=", EPOW_EQ); }
+"&="    { return curr_lexer->handle_incompatible_op ("&=", AND_EQ); }
+"|="    { return curr_lexer->handle_incompatible_op ("|=", OR_EQ); }
+"<<="   { return curr_lexer->handle_incompatible_op ("<<=", LSHIFT_EQ); }
+">>="   { return curr_lexer->handle_incompatible_op (">>=", RSHIFT_EQ); }
 
 \{{S}* {
-    LEXER_DEBUG ("\\{{S}*");
+    curr_lexer->lexer_debug ("\\{{S}*");
 
     curr_lexer->nesting_level.brace ();
 
     curr_lexer->looking_at_object_index.push_front
       (curr_lexer->looking_for_object_index);
 
     curr_lexer->current_input_column += yyleng;
     curr_lexer->quote_is_transpose = false;
     curr_lexer->convert_spaces_to_comma = true;
     curr_lexer->looking_for_object_index = false;
     curr_lexer->at_beginning_of_statement = false;
 
     curr_lexer->decrement_promptflag ();
     curr_lexer->eat_whitespace ();
 
     curr_lexer->braceflag++;
-    BEGIN (MATRIX_START);
-    COUNT_TOK_AND_RETURN ('{');
+
+    curr_lexer->push_start_state (MATRIX_START);
+
+    return curr_lexer->count_token ('{');
   }
 
 "}" {
-    LEXER_DEBUG ("}");
+    curr_lexer->lexer_debug ("}");
 
     curr_lexer->looking_at_object_index.pop_front ();
 
     curr_lexer->looking_for_object_index = true;
     curr_lexer->at_beginning_of_statement = false;
 
     curr_lexer->nesting_level.remove ();
 
-    TOK_RETURN ('}');
+    return curr_lexer->handle_token ('}');
   }
 
 %{
 // Unrecognized input is a lexical error.
 %}
 
 . {
-    LEXER_DEBUG (".");
+    curr_lexer->lexer_debug (".");
 
     curr_lexer->xunput (yytext[0]);
 
     int c = curr_lexer->text_yyinput ();
 
     if (c != EOF)
       {
         curr_lexer->current_input_column++;
@@ -1289,17 +1334,17 @@ private:
 
   octave_lexer *lexer;
 
   char *buf;
 };
 
 lexical_feedback::~lexical_feedback (void)
 {
-  reset_token_stack ();
+  tokens.clear ();
 }
 
 void
 lexical_feedback::init (void)
 {
   // The closest paren, brace, or bracket nesting is not an object
   // index.
   looking_at_object_index.push_front (false);
@@ -1335,43 +1380,76 @@ lexical_feedback::reset (void)
   bracketflag = 0;
   braceflag = 0;
   looping = 0;
   defining_func = 0;
   looking_at_function_handle = 0;
   block_comment_nesting_level = 0;
   token_count = 0;
   current_input_line = "";
+  comment_text = "";
   help_text = "";
   fcn_file_name = "";
   fcn_file_full_name = "";
   looking_at_object_index.clear ();
   looking_at_object_index.push_front (false);
 
   while (! parsed_function_name.empty ())
     parsed_function_name.pop ();
 
   pending_local_variables.clear ();
 
   nesting_level.reset ();
 
-  reset_token_stack ();
+  tokens.clear ();
 }
 
-void
-lexical_feedback::reset_token_stack (void)
+static bool
+looks_like_copyright (const std::string& s)
+{
+  bool retval = false;
+
+  if (! s.empty ())
+    {
+      size_t offset = s.find_first_not_of (" \t");
+
+      retval = (s.substr (offset, 9) == "Copyright" || s.substr (offset, 6) == "Author");
+    }
+
+  return retval;
+}
+
+int
+lexical_feedback::finish_comment (octave_comment_elt::comment_type typ)
 {
-  // Clear out the stack of token info used to track line and
-  // column numbers.
-
-  while (! token_stack.empty ())
-    {
-      delete token_stack.top ();
-      token_stack.pop ();
-    }
+  bool copyright = looks_like_copyright (comment_text);
+
+  if (nesting_level.none () && help_text.empty ()
+    && ! comment_text.empty () && ! copyright)
+    help_text = comment_text;
+
+  if (copyright)
+    typ = octave_comment_elt::copyright;
+
+  octave_comment_buffer::append (comment_text, typ);
+
+  comment_text = "";
+
+  quote_is_transpose = false;
+  convert_spaces_to_comma = true;
+  at_beginning_of_statement = true;
+
+  if (nesting_level.none ())
+    return '\n';
+  else if (nesting_level.is_bracket_or_brace ())
+    // FIXME -- this result will be different if the comment follows a
+    // continuation token.
+    return ';';
+  else
+    return 0;
 }
 
 void
 octave_lexer::input_buffer::fill (const std::string& input, bool eof_arg)
 {
   buffer = input;
   chars_left = buffer.length ();
   pos = buffer.c_str ();
@@ -1421,34 +1499,34 @@ octave_lexer::~octave_lexer (void)
 void
 octave_lexer::init (void)
 {
   yylex_init (&scanner);
 
   // Make octave_lexer object available through yyextra in
   // flex-generated lexer.
   yyset_extra (this, scanner);
+
+  clear_start_state ();
 }
 
 // Inside Flex-generated functions, yyg is the scanner cast to its real
-// type.  The BEGIN macro uses yyg and we want to use that in
-// octave_lexer member functions.  If we could set the start state
-// by calling a function instead of using the BEGIN macro, we could
-// eliminate the OCTAVE_YYG macro.
+// type.  Some flex macros that we use in octave_lexer member functions
+// (for example, BEGIN) use yyg.  If we could perform the actions of
+// these macros with functions instead, we could eliminate the
+// OCTAVE_YYG macro.
 
 #define OCTAVE_YYG \
   struct yyguts_t *yyg = static_cast<struct yyguts_t*> (scanner)
 
 void
 octave_lexer::reset (void)
 {
-  OCTAVE_YYG;
-
   // Start off on the right foot.
-  BEGIN (INITIAL);
+  clear_start_state ();
 
   parser_symtab_context.clear ();
 
   // We do want a prompt by default.
   promptflag (1);
 
   // Only ask for input from stdin if we are expecting interactive
   // input.
@@ -1464,19 +1542,19 @@ octave_lexer::reset (void)
   input_reader.reset ();
 
   lexical_feedback::reset ();
 }
 
 void
 octave_lexer::prep_for_file (void)
 {
-  OCTAVE_YYG;
-
-  BEGIN (INPUT_FILE_BEGIN);
+  reading_script_file = true;
+
+  push_start_state (INPUT_FILE_START);
 }
 
 int
 octave_lexer::read (char *buf, unsigned max_size)
 {
   int status = 0;
 
   if (input_buf.empty ())
@@ -1497,33 +1575,29 @@ octave_lexer::read (char *buf, unsigned 
     }
 
   return status;
 }
 
 int
 octave_lexer::handle_end_of_input (void)
 {
-  // FIXME -- we need this because of the way TOK_RETURN is defined.  DO
-  // something better than that...
-  OCTAVE_YYG;
-
-  LEXER_DEBUG ("<<EOF>>");
+  lexer_debug ("<<EOF>>");
 
   if (block_comment_nesting_level != 0)
     {
       warning ("block comment open at end of input");
 
       if ((reading_fcn_file || reading_script_file || reading_classdef_file)
           && ! fcn_file_name.empty ())
         warning ("near line %d of file '%s.m'",
                  input_line_number, fcn_file_name.c_str ());
     }
 
-  TOK_RETURN (END_OF_INPUT);
+  return handle_token (END_OF_INPUT);
 }
 
 char *
 octave_lexer::flex_yytext (void)
 {
   return yyget_text (scanner);
 }
 
@@ -1888,319 +1962,16 @@ octave_lexer::is_keyword_token (const st
 bool
 octave_lexer::is_variable (const std::string& name)
 {
   return (symbol_table::is_variable (name)
           || (pending_local_variables.find (name)
               != pending_local_variables.end ()));
 }
 
-std::string
-octave_lexer::grab_block_comment (stream_reader& reader, bool& eof)
-{
-  std::string buf;
-
-  bool at_bol = true;
-  bool look_for_marker = false;
-
-  bool warned_incompatible = false;
-
-  int c = 0;
-
-  while ((c = reader.getc ()) != EOF)
-    {
-      current_input_column++;
-
-      if (look_for_marker)
-        {
-          at_bol = false;
-          look_for_marker = false;
-
-          if (c == '{' || c == '}')
-            {
-              std::string tmp_buf (1, static_cast<char> (c));
-
-              int type = c;
-
-              bool done = false;
-
-              while ((c = reader.getc ()) != EOF && ! done)
-                {
-                  current_input_column++;
-
-                  switch (c)
-                    {
-                    case ' ':
-                    case '\t':
-                      tmp_buf += static_cast<char> (c);
-                      break;
-
-                    case '\n':
-                      {
-                        current_input_column = 0;
-                        at_bol = true;
-                        done = true;
-
-                        if (type == '{')
-                          {
-                            block_comment_nesting_level++;
-                            decrement_promptflag ();
-                          }
-                        else
-                          {
-                            block_comment_nesting_level--;
-                            increment_promptflag ();
-
-                            if (block_comment_nesting_level == 0)
-                              {
-                                buf += grab_comment_block (reader, true, eof);
-
-                                return buf;
-                              }
-                          }
-                      }
-                      break;
-
-                    default:
-                      at_bol = false;
-                      tmp_buf += static_cast<char> (c);
-                      buf += tmp_buf;
-                      done = true;
-                      break;
-                    }
-                }
-            }
-        }
-
-      if (at_bol && (c == '%' || c == '#'))
-        {
-          if (c == '#' && ! warned_incompatible)
-            {
-              warned_incompatible = true;
-              maybe_gripe_matlab_incompatible_comment (c);
-            }
-
-          at_bol = false;
-          look_for_marker = true;
-        }
-      else
-        {
-          buf += static_cast<char> (c);
-
-          if (c == '\n')
-            {
-              current_input_column = 0;
-              at_bol = true;
-            }
-        }
-    }
-
-  if (c == EOF)
-    eof = true;
-
-  return buf;
-}
-
-std::string
-octave_lexer::grab_comment_block (stream_reader& reader, bool at_bol,
-                                  bool& eof)
-{
-  std::string buf;
-
-  // TRUE means we are at the beginning of a comment block.
-  bool begin_comment = false;
-
-  // TRUE means we are currently reading a comment block.
-  bool in_comment = false;
-
-  bool warned_incompatible = false;
-
-  int c = 0;
-
-  while ((c = reader.getc ()) != EOF)
-    {
-      current_input_column++;
-
-      if (begin_comment)
-        {
-          if (c == '%' || c == '#')
-            {
-              at_bol = false;
-              continue;
-            }
-          else if (at_bol && c == '{')
-            {
-              std::string tmp_buf (1, static_cast<char> (c));
-
-              bool done = false;
-
-              while ((c = reader.getc ()) != EOF && ! done)
-                {
-                  current_input_column++;
-
-                  switch (c)
-                    {
-                    case ' ':
-                    case '\t':
-                      tmp_buf += static_cast<char> (c);
-                      break;
-
-                    case '\n':
-                      {
-                        current_input_column = 0;
-                        at_bol = true;
-                        done = true;
-
-                        block_comment_nesting_level++;
-                        decrement_promptflag ();
-
-                        buf += grab_block_comment (reader, eof);
-
-                        in_comment = false;
-
-                        if (eof)
-                          goto done;
-                      }
-                      break;
-
-                    default:
-                      at_bol = false;
-                      tmp_buf += static_cast<char> (c);
-                      buf += tmp_buf;
-                      done = true;
-                      break;
-                    }
-                }
-            }
-          else
-            {
-              at_bol = false;
-              begin_comment = false;
-            }
-        }
-
-      if (in_comment)
-        {
-          buf += static_cast<char> (c);
-
-          if (c == '\n')
-            {
-              at_bol = true;
-              current_input_column = 0;
-              in_comment = false;
-
-              // FIXME -- bailing out here prevents things like
-              //
-              //    octave> # comment
-              //    octave> x = 1
-              //
-              // from failing at the command line, while still
-              // allowing blocks of comments to be grabbed properly
-              // for function doc strings.  But only the first line of
-              // a mult-line doc string will be picked up for
-              // functions defined on the command line.  We need a
-              // better way of collecting these comments...
-              if (! (reading_fcn_file || reading_script_file))
-                goto done;
-            }
-        }
-      else
-        {
-          switch (c)
-            {
-            case ' ':
-            case '\t':
-              break;
-
-            case '#':
-              if (! warned_incompatible)
-                {
-                  warned_incompatible = true;
-                  maybe_gripe_matlab_incompatible_comment (c);
-                }
-              // fall through...
-
-            case '%':
-              in_comment = true;
-              begin_comment = true;
-              break;
-
-            default:
-              current_input_column--;
-              reader.ungetc (c);
-              goto done;
-            }
-        }
-    }
-
- done:
-
-  if (c == EOF)
-    eof = true;
-
-  return buf;
-}
-
-static bool
-looks_like_copyright (const std::string& s)
-{
-  bool retval = false;
-
-  if (! s.empty ())
-    {
-      size_t offset = s.find_first_not_of (" \t");
-
-      retval = (s.substr (offset, 9) == "Copyright" || s.substr (offset, 6) == "Author");
-    }
-
-  return retval;
-}
-
-int
-octave_lexer::process_comment (bool start_in_block, bool& eof)
-{
-  OCTAVE_YYG;
-
-  eof = false;
-
-  char *yytxt = flex_yytext ();
-  flex_stream_reader flex_reader (this, yytxt);
-
-  // process_comment is only supposed to be called when we are not
-  // initially looking at a block comment.
-
-  std::string txt = start_in_block
-    ? grab_block_comment (flex_reader, eof)
-    : grab_comment_block (flex_reader, false, eof);
-
-  if (lexer_debug_flag)
-    std::cerr << "C: " << txt << std::endl;
-
-  if (nesting_level.none () && help_text.empty () && ! txt.empty ()
-      && ! looks_like_copyright (txt))
-    help_text = txt;
-
-  octave_comment_buffer::append (txt);
-
-  current_input_column = 1;
-  quote_is_transpose = false;
-  convert_spaces_to_comma = true;
-  at_beginning_of_statement = true;
-
-  if (YY_START == COMMAND_START)
-    BEGIN (INITIAL);
-
-  if (nesting_level.none ())
-    return '\n';
-  else if (nesting_level.is_bracket_or_brace ())
-    return ';';
-  else
-    return 0;
-}
-
 // Recognize separators.  If the separator is a CRLF pair, it is
 // replaced by a single LF.
 
 bool
 octave_lexer::next_token_is_sep_op (void)
 {
   bool retval = false;
 
@@ -2907,34 +2678,31 @@ octave_lexer::next_token_is_index_op (vo
   int c = text_yyinput ();
   xunput (c);
   return c == '(' || c == '{';
 }
 
 int
 octave_lexer::handle_close_bracket (bool spc_gobbled, int bracket_type)
 {
-  OCTAVE_YYG;
-
   int retval = bracket_type;
 
   if (! nesting_level.none ())
     {
       nesting_level.remove ();
 
       if (bracket_type == ']')
         bracketflag--;
       else if (bracket_type == '}')
         braceflag--;
       else
         panic_impossible ();
     }
 
-  if (bracketflag == 0 && braceflag == 0)
-    BEGIN (INITIAL);
+  pop_start_state ();
 
   if (bracket_type == ']'
       && next_token_is_assign_op ()
       && ! looking_at_return_list)
     {
       retval = CLOSE_BRACE;
     }
   else if ((bracketflag || braceflag)
@@ -3361,18 +3129,16 @@ octave_lexer::handle_meta_identifier (vo
 
 // Figure out exactly what kind of token to return when we have seen
 // an identifier.  Handles keywords.  Return -1 if the identifier
 // should be ignored.
 
 int
 octave_lexer::handle_identifier (void)
 {
-  OCTAVE_YYG;
-
   bool at_bos = at_beginning_of_statement;
 
   char *yytxt = flex_yytext ();
 
   std::string tok = strip_trailing_whitespace (yytxt);
 
   int c = yytxt[flex_yyleng()-1];
 
@@ -3480,17 +3246,17 @@ octave_lexer::handle_identifier (void)
   // something like [ab,cd] = foo (), force the symbol to be inserted
   // as a variable in the current symbol table.
 
   if (! is_variable (tok))
     {
       if (at_bos && spc_gobbled && can_be_command (tok)
           && looks_like_command_arg ())
         {
-          BEGIN (COMMAND_START);
+          push_start_state (COMMAND_START);
         }
       else if (next_tok_is_eq
                || looking_at_decl_list
                || looking_at_return_list
                || (looking_at_parameter_list
                    && ! looking_at_initializer_expression))
         {
           symbol_table::force_variable (tok);
@@ -3510,17 +3276,17 @@ octave_lexer::handle_identifier (void)
   push_token (new token (&(symbol_table::insert (tok)),
                          input_line_number, current_input_column));
 
   // After seeing an identifer, it is ok to convert spaces to a comma
   // (if needed).
 
   convert_spaces_to_comma = true;
 
-  if (! (next_tok_is_eq || YY_START == COMMAND_START))
+  if (! (next_tok_is_eq || start_state () == COMMAND_START))
     {
       quote_is_transpose = true;
 
       do_comma_insert_check ();
 
       maybe_unput_comma (spc_gobbled);
     }
 
@@ -3600,17 +3366,17 @@ octave_lexer::gripe_matlab_incompatible_
   gripe_matlab_incompatible (t + " used as operator");
 }
 
 void
 octave_lexer::push_token (token *tok)
 {
   YYSTYPE *lval = yyget_lval (scanner);
   lval->tok_val = tok;
-  token_stack.push (tok);
+  tokens.push (tok);
 }
 
 token *
 octave_lexer::current_token (void)
 {
   YYSTYPE *lval = yyget_lval (scanner);
   return lval->tok_val;
 }
@@ -3747,59 +3513,182 @@ octave_lexer::display_token (int tok)
           std::cerr << static_cast<char> (tok) << "\n";
         else
           std::cerr << "UNKNOWN(" << tok << ")\n";
       }
       break;
     }
 }
 
-static void
-display_state (int state)
+void
+octave_lexer::fatal_error (const char *msg)
+{
+  error (msg);
+
+  OCTAVE_QUIT;
+
+  yy_fatal_error (msg, scanner);
+}
+
+void
+octave_lexer::lexer_debug (const char *pattern)
+{
+  if (lexer_debug_flag)
+    {
+      std::cerr << std::endl;
+
+      display_start_state ();
+
+      std::cerr << "P: " << pattern << std::endl;
+      std::cerr << "T: " << flex_yytext () << std::endl;
+    }
+}
+
+void
+octave_lexer::push_start_state (int state)
+{
+  OCTAVE_YYG;
+
+  start_state_stack.push (state);
+
+  BEGIN (start_state ());
+}
+
+void
+octave_lexer::pop_start_state (void)
+{
+  OCTAVE_YYG;
+
+  start_state_stack.pop ();
+
+  BEGIN (start_state ());
+}
+
+void
+octave_lexer::clear_start_state (void)
+{
+  while (! start_state_stack.empty ())
+    start_state_stack.pop ();
+
+  push_start_state (INITIAL);
+}
+
+void
+octave_lexer::display_start_state (void) const
 {
   std::cerr << "S: ";
 
-  switch (state)
+  switch (start_state ())
     {
     case INITIAL:
       std::cerr << "INITIAL" << std::endl;
       break;
 
     case COMMAND_START:
       std::cerr << "COMMAND_START" << std::endl;
       break;
 
     case MATRIX_START:
       std::cerr << "MATRIX_START" << std::endl;
       break;
 
-    case INPUT_FILE_BEGIN:
+    case INPUT_FILE_START:
       std::cerr << "INPUT_FILE_BEGIN" << std::endl;
       break;
 
+    case BLOCK_COMMENT_START:
+      std::cerr << "BLOCK_COMMENT_START" << std::endl;
+      break;
+
+    case LINE_COMMENT_START:
+      std::cerr << "LINE_COMMENT_START" << std::endl;
+      break;
+
     default:
       std::cerr << "UNKNOWN START STATE!" << std::endl;
       break;
     }
 }
 
-void
-octave_lexer::fatal_error (const char *msg)
+int
+octave_lexer::handle_op (const char *pattern, int tok, bool convert,
+                         bool bos, bool qit)
+{
+  return handle_op_internal (pattern, tok, convert, bos, qit, true);
+}
+
+int
+octave_lexer::handle_incompatible_op (const char *pattern, int tok,
+                                      bool convert, bool bos, bool qit)
+{
+  return handle_op_internal (pattern, tok, convert, bos, qit, false);
+}
+
+int
+octave_lexer::handle_op_internal (const char *pattern, int tok, bool convert,
+                                  bool bos, bool qit, bool compat)
 {
-  error (msg);
-
-  OCTAVE_QUIT;
-
-  yy_fatal_error (msg, scanner);
+  lexer_debug (pattern);
+
+  if (! compat)
+    gripe_matlab_incompatible_operator (flex_yytext ());
+
+  push_token (new token (input_line_number, current_input_column));
+
+  current_input_column += flex_yyleng ();
+  quote_is_transpose = qit;
+  convert_spaces_to_comma = convert;
+  looking_for_object_index = false;
+  at_beginning_of_statement = bos;
+
+  return count_token (tok);
+}
+
+int
+octave_lexer::handle_token (const std::string& name, int tok)
+{
+  token *tok_val = new token (name, input_line_number, current_input_column);
+
+  return handle_token (tok, tok_val);
 }
 
-void
-octave_lexer::lexer_debug (const char *pattern, const char *text)
+int
+octave_lexer::handle_token (int tok, token *tok_val)
+{
+  if (! tok_val)
+    tok_val = new token (input_line_number, current_input_column);
+
+  push_token (tok_val);
+
+  current_input_column += flex_yyleng ();
+  quote_is_transpose = false;
+  convert_spaces_to_comma = true;
+
+  return count_token (tok);
+}
+
+int
+octave_lexer::count_token (int tok)
 {
-  OCTAVE_YYG;
-
-  std::cerr << std::endl;
-
-  display_state (YY_START);
-
-  std::cerr << "P: " << pattern << std::endl;
-  std::cerr << "T: " << text << std::endl;
+  if (tok != '\n')
+    {
+      Vtoken_count++;
+      token_count++;
+    }
+
+  return show_token (tok);
 }
+
+int
+octave_lexer::show_token (int tok)
+{
+  if (Vdisplay_tokens)
+    display_token (tok);
+
+  if (lexer_debug_flag)
+    {
+      std::cerr << "R: ";
+      display_token (tok);
+      std::cerr << std::endl; 
+    }
+
+  return tok;
+}
diff --git a/scripts/set/unique.m b/scripts/set/unique.m
--- a/scripts/set/unique.m
+++ b/scripts/set/unique.m
@@ -46,24 +46,27 @@ function [y, i, j] = unique (x, varargin
 
   if (nargin < 1)
     print_usage ();
   endif
 
   if (nargin > 1)
     ## parse options
     if (iscellstr (varargin))
-      varargin = unique (varargin);
-      optfirst = strmatch ("first", varargin, "exact") > 0;
-      optlast = strmatch ("last", varargin, "exact") > 0;
-      optrows = strmatch ("rows", varargin, "exact") > 0;
+      optfirst = strcmp ("first", varargin);
+      optlast  = strcmp ("last", varargin);
+      optrows  = strcmp ("rows", varargin);
+      if (! all (optfirst | optlast | optrows))
+        error ("unique: invalid option");
+      endif
+      optfirst = any (optfirst);
+      optlast  = any (optlast);
+      optrows  = any (optrows);
       if (optfirst && optlast)
         error ('unique: cannot specify both "last" and "first"');
-      elseif (optfirst + optlast + optrows != nargin-1)
-        error ("unique: invalid option");
       endif
     else
       error ("unique: options must be strings");
     endif
 
     if (optrows && iscell (x))
       warning ('unique: "rows" is ignored for cell arrays');
       optrows = false;
@@ -209,8 +212,12 @@ endfunction
 %!
 %!test
 %! A = [1,2,3;1,2,3];
 %! [a,i,j] = unique (A, "rows");
 %! assert (a, [1,2,3]);
 %! assert (A(i,:), a);
 %! assert (a(j,:), A);
 
+%!error unique({"a", "b", "c"}, "UnknownOption")
+%!error unique({"a", "b", "c"}, "UnknownOption1", "UnknownOption2")
+%!error unique({"a", "b", "c"}, "rows", "UnknownOption2")
+%!error unique({"a", "b", "c"}, "UnknownOption1", "last")
diff --git a/scripts/testfun/fail.m b/scripts/testfun/fail.m
--- a/scripts/testfun/fail.m
+++ b/scripts/testfun/fail.m
@@ -24,20 +24,29 @@
 ## @deftypefnx {Function File} {} fail (@var{code}, @var{pattern})
 ## @deftypefnx {Function File} {} fail (@var{code}, "warning", @var{pattern})
 ##
 ## Return true if @var{code} fails with an error message matching
 ## @var{pattern}, otherwise produce an error.  Note that @var{code}
 ## is a string and if @var{code} runs successfully, the error produced is:
 ##
 ## @example
-##           expected error but got none
+##           expected error <.> but got none
 ## @end example
 ##
-## If the code fails with a different error, the message produced is:
+##
+## Code must be in the form of a string that may be passed by
+## @code{fail} to the Octave interpreter via the @code{evalin} function,
+## that is, a (quoted) string constant or a string variable.
+##
+## If called with two arguments, the behavior is similar to
+## @code{fail (@var{code})}, except the return value will only be true if
+## code fails with an error message containing pattern (case sensitive).
+## If the code fails with a different error to that given in pattern,
+## the message produced is:
 ##
 ## @example
 ## @group
 ##           expected <pattern>
 ##           but got <text of actual error>
 ## @end group
 ## @end example
 ##
diff --git a/test/bug-31371.tst b/test/bug-31371.tst
--- a/test/bug-31371.tst
+++ b/test/bug-31371.tst
@@ -1,41 +1,41 @@
 %!test
 %! % Work around MATLAB bug where f(x)(y) is invalid syntax
 %! % (This bug does not apply to Octave)
 %!
 %! C = @(fcn,x) fcn(x);
 %! C2 = @(fcn,x,y) fcn(x,y);
-%! 
+%!
 %! % Church Booleans
 %! T = @(t,f) t;
 %! F = @(t,f) f;
-%! 
+%!
 %! % Church Numerals
 %! Zero  = @(fcn,x) x;
 %! One   = @(fcn,x) fcn(x);
 %! Two   = @(fcn,x) fcn(fcn(x));
 %! Three = @(fcn,x) fcn(fcn(fcn(x)));
 %! Four  = @(fcn,x) fcn(fcn(fcn(fcn(x))));
-%! 
+%!
 %! % Arithmetic Operations
 %! Inc = @(a) @(f,x) f(a(f,x)); % Increment
 %! Add = @(a,b) @(f,x) a(f,b(f,x));
 %! Mult = @(a,b) @(f,x) a(@(x) b(f,x),x);
 %! Dec = @(a) @(f,x) C(a(@(g) @(h) h(g(f)), @(u) x), @(u) u); % Decrement
 %! Sub = @(a,b) b(Dec, a);
-%! 
+%!
 %! % Renderer - Convert church numeral to "real" number
 %! Render = @(n) n(@(n) n+1,0);
-%! 
+%!
 %! % Predicates
 %! Iszero = @(n) n(@(x) F, T);
-%! 
+%!
 %! % Y combinator implements recursion
 %! Ycomb = @(f) C(@(g) f(@(x) C(g(g), x)), ...
 %!                @(g) f(@(x) C(g(g), x)));
 %!
 %! Factorial = Ycomb(@(f) @(n) C(C2(Iszero(n), ...
 %!                   @(d) One, @(d) Mult(n, f(Dec(n)))),0));
-%! 
+%!
 %! assert (Render (Factorial (Two)), 2)
 %! assert (Render (Factorial (Three)), 6)
 %! assert (Render (Factorial (Four)), 24)
diff --git a/test/bug-36025/@testclass/one.m b/test/bug-36025/@testclass/one.m
--- a/test/bug-36025/@testclass/one.m
+++ b/test/bug-36025/@testclass/one.m
@@ -1,4 +1,5 @@
 % function ONE return item "X"
 
-function a=one(m)
-  a=m.x;
+function a = one (m)
+  a = m.x;
+endfunction
diff --git a/test/bug-36025/@testclass/testclass.m b/test/bug-36025/@testclass/testclass.m
--- a/test/bug-36025/@testclass/testclass.m
+++ b/test/bug-36025/@testclass/testclass.m
@@ -1,3 +1,4 @@
-function m=testclass(x,y)
-m=struct('x',x,'y',y); 
-m=class(m,"testclass"); 
+function m = testclass (x,y)
+  m = struct ('x',x,'y',y);
+  m = class (m,"testclass");
+endfunction
diff --git a/test/bug-36025/@testclass/two.m b/test/bug-36025/@testclass/two.m
--- a/test/bug-36025/@testclass/two.m
+++ b/test/bug-36025/@testclass/two.m
@@ -1,4 +1,5 @@
 % function TWO returns item "Y"
 
-function a=one(m)
-  a=m.y;
+function a = one (m)
+  a = m.y;
+endfunction
diff --git a/test/build-bc-overload-tests.sh b/test/build-bc-overload-tests.sh
--- a/test/build-bc-overload-tests.sh
+++ b/test/build-bc-overload-tests.sh
@@ -89,17 +89,17 @@ fi
 
 cat > bc-overloads.tst << EOF
 ## !!! DO NOT EDIT !!!
 ## THIS IS AN AUTOMATICALLY GENERATED FILE
 ## modify build_bc_overload_tests.sh to generate the tests you need.
 
 %!shared ex
 %! ex.double = 1;
-%! ex.single = single(1);
+%! ex.single = single (1);
 %! ex.logical = true;
 %! ex.char = 'char';
 %! ex.int8  = int8 (1);
 %! ex.int16 = int16 (1);
 %! ex.int32 = int32 (1);
 %! ex.int64 = int64 (1);
 %! ex.uint8  = uint8 (1);
 %! ex.uint16 = uint16 (1);
diff --git a/test/build-sparse-tests.sh b/test/build-sparse-tests.sh
--- a/test/build-sparse-tests.sh
+++ b/test/build-sparse-tests.sh
@@ -14,74 +14,74 @@
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License
 # along with Octave; see the file COPYING.  If not, see
 # <http://www.gnu.org/licenses/>.
 
 # Some tests are commented out because they are known to be broken!
-# Search for "# fails"   
+# Search for "# fails"
 
 # ./build_sparse_tests.sh preset
 #    creates sparse.tst with preset tests.
 #    Use "test sparse.tst" from octave to run the tests.
 #
 # ./build_sparse_tests.sh random
 #    Creates sprandom.tst with randomly generated matrices.
 #    Use "test sprandom.tst" from octave to run the tests.
 
 # build_sparse_tests.sh generates tests for real and complex sparse matrices.
 # Also, we want to run both fixed tests with known outputs (quick tests)
 # and longer tests with unknown outputs (thorough tests).  This requires
 # two sets of tests -- one which uses preset matrices and another which
 # uses randomly generated matrices.
 #
 # The tests are mostly identical for each case but the code is different,
-# so it is important that the tests be run on all cases.  Because our test 
+# so it is important that the tests be run on all cases.  Because our test
 # harness doesn't have support for looping or macros (it is only needed
 # for new data types), but sh does, we use sh to generate inline versions of
 # the tests for each case.
 #
 # Our 'macros' use shared variables as parameters.  This allows us to
-# for example define A complex and include all the unary ops tests, 
+# for example define A complex and include all the unary ops tests,
 # then set A=real(A) and include all the unary ops tests.  Thus the
 # same tests work for real and complex.  For binary tests it is even
 # more complicated because we want full X sparse, sparse X full and
 # sparse X sparse tested.
 #
 # We use the following macros:
 #
 #    gen_section
 #        place a separator in the test file
 #    gen_function
 #        define the function definion
 #    helper gen_specific
 #        specific tests such as error handling and null input
 #    helper gen_eat_zeros
 #        make sure sparse-scalar ops which generate 0 work
 #    gen_specific_tests
-#        specific and eat zeros tests 
+#        specific and eat zeros tests
 #    helper gen_ordering_tests
 #        ordered comparison operators for real valued tests
 #    helper gen_sparsesparse_ordering_tests
 #        ordered comparison operators for real valued sparse-sparse tests
 #    helper gen_elementop_tests
 #        element-wise matrix binary operators, including scalar-matrix ops.
 #        horizontal/vertical concatenation are here as well.
 #    helper gen_sparsesparse_elementop_tests
 #        element-wise matrix binary operators, for sparse-sparse ops.
 #        horizontal/vertical concatenation are here as well.
 #    helper gen_divop_tests
-#        left and right matrix division operators of rectangular matrices. 
+#        left and right matrix division operators of rectangular matrices.
 #        Needs QR solvers
 #    helper gen_square_divop_tests
-#        left and right matrix division operators of square matrices. 
+#        left and right matrix division operators of square matrices.
 #    helper gen_matrixop_tests
-#        rectangular matrix binary operators: * 
+#        rectangular matrix binary operators: *
 #    helper gen_matrixdiag_tests
 #        Tests extract of diag and creation of diagonal matrices using
 #        diag and spdiags functions
 #    helper gen_matrixreshape_tests
 #        Test the reshape function on sparse matrices
 #    helper print_mapper_test
 #        sub-helper function of gen_mapper_tests to print individual tests
 #    helper gen_mapper_tests
@@ -141,17 +141,17 @@ cat >>$TESTS <<EOF
 EOF
 }
 
 
 # =======================================================
 # Specific preset tests
 
 # =======================================================
-# If a sparse operation yields zeros, then those elements 
+# If a sparse operation yields zeros, then those elements
 # of the returned sparse matrix should be eaten.
 gen_eat_zeros() {
 cat >>$TESTS <<EOF
 %% Make sure newly introduced zeros get eaten
 %!assert (nnz (sparse ([bf,bf,1]).^realmax), 1)
 %!assert (nnz (sparse ([1,bf,bf]).^realmax), 1)
 %!assert (nnz (sparse ([bf,bf,bf]).^realmax), 0)
 
@@ -170,24 +170,24 @@ cat >>$TESTS <<EOF
 EOF
 }
 
 gen_specific() {
 cat >>$TESTS <<EOF
 
 %!test # segfault test from edd@debian.org
 %! n = 510;
-%! sparse (kron ((1:n)', ones(n,1)), kron (ones(n,1), (1:n)'), ones (n)); 
+%! sparse (kron ((1:n)', ones (n,1)), kron (ones (n,1), (1:n)'), ones (n));
 
 %% segfault tests from Fabian@isas-berlin.de
 %% Note that the last four do not fail, but rather give a warning
 %% of a singular matrix, which is consistent with the full matrix
 %% behaviour.  They are therefore disabled.
 %!testif HAVE_UMFPACK
-%! assert (inv (sparse ([1,1;1,1+i])), sparse([1-1i,1i;1i,-1i]), 10*eps);
+%! assert (inv (sparse ([1,1;1,1+i])), sparse ([1-1i,1i;1i,-1i]), 10*eps);
 %#!error inv ( sparse ([1,1;1,1]  ) );
 %#!error inv ( sparse ([0,0;0,1]  ) );
 %#!error inv ( sparse ([0,0;0,1+i]) );
 %#!error inv ( sparse ([0,0;0,0]  ) );
 
 %% error handling in constructor
 %!error sparse (1,[2,3],[1,2,3])
 %!error sparse ([1,1],[1,1],[1,2],3,3,"bogus")
@@ -254,23 +254,23 @@ EOF
 ##    total_tests += tests;
 ##  end
 ##  The test log is appended to sprandomtest.log
 function [passes,total] = test_sprandom
   warning ("untested --- fix the source in build_sparse_tests.sh");
   disp ("appending test output to sprandomtest.log");
   fid = fopen ("sprandomtest.log", "at");
   test ("sprandom.tst", "normal", fid);
-  ##[passes, total] = test("sprandomtest","normal",fid);
+  ##[passes, total] = test ("sprandomtest", "normal", fid);
   fclose (fid);
 endfunction
 
 EOF
     fi
-    
+
 }
 
 
 # =======================================================
 # matrix ops
 
 # test ordered comparisons: uses as,af,bs,bf
 gen_ordering_tests() {
@@ -400,33 +400,33 @@ gen_matrixdiag_tests() {
 %!assert (diag (as(:)), sparse (diag (af(:))))
 %!assert (diag (as(:),1), sparse (diag (af(:),1)))
 %!assert (diag (as(:),-1), sparse (diag (af(:),-1)))
 %!assert (diag (as(:)'), sparse (diag (af(:)')))
 %!assert (diag (as(:)',1), sparse (diag (af(:)',1)))
 %!assert (diag (as(:)',-1), sparse (diag (af(:)',-1)))
 %!assert (spdiags (as,[0,1]), [diag(af,0), diag(af,1)])
 %!test
-%! [tb,tc]=spdiags(as); 
+%! [tb,tc] = spdiags (as);
 %! assert (spdiags (tb,tc,sparse (zeros (size (as)))), as);
 %! assert (spdiags (tb,tc,size (as,1),size (as,2)), as);
 
 EOF
 }
 
 # test matrix reshape operations
 gen_matrixreshape_tests() {
     cat >>$TESTS <<EOF
 %% Matrix diagonal tests (uses af,as,bf,bs)
-%!assert(reshape(as,1,prod(size(as))),sparse(reshape(af,1,prod(size(af)))))
-%!assert(reshape(as,prod(size(as)),1),sparse(reshape(af,prod(size(af)),1)))
-%!assert(reshape(as,fliplr(size(as))),sparse(reshape(af,fliplr(size(af)))))
-%!assert(reshape(bs,1,prod(size(as))),sparse(reshape(bf,1,prod(size(af)))))
-%!assert(reshape(bs,prod(size(as)),1),sparse(reshape(bf,prod(size(af)),1)))
-%!assert(reshape(bs,fliplr(size(as))),sparse(reshape(bf,fliplr(size(af)))))
+%!assert (reshape (as,1,prod(size(as))), sparse (reshape (af,1,prod(size(af)))))
+%!assert (reshape (as,prod(size(as)),1), sparse (reshape (af,prod(size(af)),1)))
+%!assert (reshape (as,fliplr(size(as))), sparse (reshape (af,fliplr(size(af)))))
+%!assert (reshape (bs,1,prod(size(as))), sparse (reshape (bf,1,prod(size(af)))))
+%!assert (reshape (bs,prod(size(as)),1), sparse (reshape (bf,prod(size(af)),1)))
+%!assert (reshape (bs,fliplr(size(as))), sparse (reshape (bf,fliplr(size(af)))))
 
 EOF
 }
 
 # test mapper matrix operations: uses as,af
 print_mapper_test() {
 echo "%!assert ($1(as), sparse ($1(af)))" >>$TESTS
 }
@@ -547,17 +547,17 @@ gen_unaryop_tests() {
 %!assert (prod (as), sparse (prod (af)))
 %!assert (prod (as,1), sparse (prod (af,1)))
 %!assert (prod (as,2), sparse (prod (af,2)))
 %!assert (cumprod (as), sparse (cumprod (af)))
 %!assert (cumprod (as,1), sparse (cumprod (af,1)))
 %!assert (cumprod (as,2), sparse (cumprod (af,2)))
 
 %!assert (min (as), sparse (min (af)))
-%!assert (full (min (as(:))),min (af(:)))
+%!assert (full (min (as(:))), min (af(:)))
 %!assert (min (as,[],1), sparse (min (af,[],1)))
 %!assert (min (as,[],2), sparse (min (af,[],2)))
 %!assert (min (as,[],1), sparse (min (af,[],1)))
 %!assert (min (as,0), sparse (min (af,0)))
 %!assert (min (as,bs), sparse (min (af,bf)))
 %!assert (max (as), sparse (max (af)))
 %!assert (full (max (as(:))), max (af(:)))
 %!assert (max (as,[],1), sparse (max (af,[],1)))
@@ -577,18 +577,18 @@ gen_unaryop_tests() {
 %!assert (issparse (as.'))
 %!assert (issparse (as'))
 %!assert (issparse (-as))
 %!assert (~as, sparse (~af))
 %!assert (as.', sparse (af.'));
 %!assert (as',  sparse (af'));
 %!assert (-as, sparse (-af));
 %!assert (~as, sparse (~af));
-%!error [i,j]=size (af);as(i-1,j+1);
-%!error [i,j]=size (af);as(i+1,j-1);
+%!error [i,j] = size (af);as(i-1,j+1);
+%!error [i,j] = size (af);as(i+1,j-1);
 %!test
 %! [Is,Js,Vs] = find (as);
 %! [If,Jf,Vf] = find (af);
 %! assert (Is, If);
 %! assert (Js, Jf);
 %! assert (Vs, Vf);
 %!error as(0,1);
 %!error as(1,0);
@@ -630,19 +630,19 @@ EOF
 
 # operations which require square matrices.
 gen_square_tests() {
 # The \ and / operator tests on square matrices
     gen_square_divop_tests
 
     cat >>$TESTS <<EOF
 %!testif HAVE_UMFPACK
-%! assert(det(bs+speye(size(bs))),det(bf+eye(size(bf))),100*eps*abs(det(bf+eye(size(bf)))))
+%! assert(det(bs+speye(size(bs))), det(bf+eye(size(bf))), 100*eps*abs(det(bf+eye(size(bf)))))
 
-%!testif HAVE_UMFPACK 
+%!testif HAVE_UMFPACK
 %! [l,u] = lu (sparse ([1,1;1,1]));
 %! assert (l*u, [1,1;1,1], 10*eps);
 
 %!testif HAVE_UMFPACK
 %! [l,u] = lu (sparse ([1,1;1,1+i]));
 %! assert (l, sparse ([1,2,2],[1,1,2],1), 10*eps);
 %! assert (u, sparse ([1,1,2],[1,2,2],[1,1,1i]), 10*eps);
 
@@ -696,17 +696,17 @@ gen_square_tests() {
 EOF
 }
 
 # Cholesky tests
 gen_cholesky_tests() {
     cat >>$TESTS <<EOF
 %!testif HAVE_CHOLMOD
 %! assert (chol (bs)'*chol (bs), bs, 1e-10);
-%!testif HAVE_CHOLMOD 
+%!testif HAVE_CHOLMOD
 %! assert (chol (bs,'lower')*chol (bs,'lower')', bs, 1e-10);
 %!testif HAVE_CHOLMOD
 %! assert (chol (bs,'lower'), chol (bs)', 1e-10);
 
 %!testif HAVE_CHOLMOD   # Return Partial Cholesky factorization
 %! [RS,PS] = chol (bs);
 %! assert (RS'*RS, bs, 1e-10);
 %! assert (PS, 0);
@@ -722,29 +722,29 @@ gen_cholesky_tests() {
 %! assert (LS*LS', QS*bs*QS', 1e-10);
 %! assert (PS, 0);
 
 EOF
 }
 
 # test scalar operations: uses af and real scalar bf; modifies as,bf,bs
 gen_scalar_tests() {
-    echo '%!test as=sparse(af);' >> $TESTS
-    echo '%!test bs=bf;' >> $TESTS
+    echo '%!test as = sparse (af);' >> $TESTS
+    echo '%!test bs = bf;' >> $TESTS
     gen_elementop_tests
     gen_ordering_tests
-    echo '%!test bf=bf+1i;' >>$TESTS
-    echo '%!test bs=bf;' >> $TESTS
+    echo '%!test bf = bf+1i;' >>$TESTS
+    echo '%!test bs = bf;' >> $TESTS
     gen_elementop_tests
 }
 
 # test matrix operations: uses af and bf; modifies as,bs
 gen_rectangular_tests() {
-    echo '%!test as=sparse(af);' >> $TESTS
-    echo '%!test bs=sparse(bf);' >>$TESTS
+    echo '%!test as = sparse(af);' >> $TESTS
+    echo '%!test bs = sparse(bf);' >>$TESTS
     gen_mapper_tests
     gen_real_mapper_tests
     gen_unaryop_tests
     gen_elementop_tests
     gen_sparsesparse_elementop_tests
     gen_matrixop_tests
     # gen_divop_tests # Disable rectangular \ and / for now
     gen_matrixdiag_tests
@@ -801,17 +801,17 @@ gen_assembly_tests() {
 cat >>$TESTS <<EOF
 %%Assembly tests
 %!test
 %! m = max ([m;r(:)]);
 %! n = max ([n;c(:)]);
 %! funiq = fsum = zeros (m,n);
 %! funiq(r(:) + m*(c(:)-1) ) = ones (size (r(:)));
 %! funiq = sparse (funiq);
-%! for k=1:length(r)
+%! for k=1:length (r)
 %!   fsum(r(k),c(k)) += 1;
 %! endfor
 %! fsum = sparse (fsum);
 %!assert (sparse (r,c,1), sparse (fsum(1:max(r), 1:max(c))))
 %!assert (sparse (r,c,1,"sum"), sparse (fsum(1:max (r),1:max (c))))
 %!assert (sparse (r,c,1,"unique"), sparse (funiq(1:max (r),1:max (c))))
 %!assert (sparse (r,c,1,m,n), sparse (fsum))
 %!assert (sparse (r,c,1,m,n,"sum"), sparse (fsum))
@@ -842,17 +842,17 @@ gen_scalar_select_tests () {
     cat >>$TESTS <<EOF
 %!assert (sparse (42)([1,1]), sparse ([42,42]))
 %!assert (sparse (42*1i)([1,1]), sparse ([42,42].*1i))
 EOF
 }
 
 gen_select_tests() {
     cat >>$TESTS <<EOF
-%!test as=sparse(af);
+%!test as = sparse (af);
 
 %% Point tests
 %!test idx = ridx(:) + rows (as) * (cidx (:)-1);
 %!assert (sparse (as(idx)), sparse (af(idx)))
 %!assert (as(idx), sparse (af(idx)));
 %!assert (as(idx'), sparse (af(idx')));
 %!assert (as(flipud (idx(:))), sparse (af(flipud (idx(:)))))
 %!assert (as([idx,idx]), sparse (af([idx,idx])))
@@ -870,38 +870,38 @@ gen_select_tests() {
 %!assert (full (as([1,1],:)), af([1,1],:))
 %!assert (full (as(:,[1,1])), af(:,[1,1]))
 %!test
 %! [i,j,v] = find (as);
 %! assert (as(i(1),j(1))([1,1]), sparse ([v(1), v(1)]))
 
 %% Assignment test
 %!test
-%! ts=as; ts(:,:) = ts(fliplr (1:size (as,1)),:);
-%! tf=af; tf(:,:) = tf(fliplr (1:size (af,1)),:);
+%! ts = as; ts(:,:) = ts(fliplr (1:size (as,1)),:);
+%! tf = af; tf(:,:) = tf(fliplr (1:size (af,1)),:);
 %! assert (ts, sparse (tf));
 %!test
-%! ts=as; ts(fliplr (1:size (as,1)),:) = ts;
-%! tf=af; tf(fliplr (1:size (af,1)),:) = tf;
+%! ts = as; ts(fliplr (1:size (as,1)),:) = ts;
+%! tf = af; tf(fliplr (1:size (af,1)),:) = tf;
 %! assert (ts, sparse (tf));
 %!test
-%! ts=as; ts(:,fliplr (1:size (as,2))) = ts;
-%! tf=af; tf(:,fliplr (1:size (af,2))) = tf;
+%! ts = as; ts(:,fliplr (1:size (as,2))) = ts;
+%! tf = af; tf(:,fliplr (1:size (af,2))) = tf;
 %! assert (ts, sparse (tf));
 %!test
 %! ts(fliplr (1:size (as,1))) = as(:,1);
 %! tf(fliplr (1:size (af,1))) = af(:,1);
 %! assert (ts, sparse (tf));
 
 %% Deletion tests
 %!test
-%! ts=as; ts(1,:)=[]; tf=af; tf(1,:)=[];
+%! ts = as; ts(1,:) = []; tf = af; tf(1,:) = [];
 %! assert (ts, sparse (tf));
 %!test
-%! ts=as; ts(:,1)=[]; tf=af; tf(:,1)=[];
+%! ts = as; ts(:,1) = []; tf = af; tf(:,1) = [];
 %! assert (ts, sparse (tf));
 
 %% Test "end" keyword
 %!assert (full (as(end)), af(end))
 %!assert (full (as(1,end)), af(1,end))
 %!assert (full (as(end,1)), af(end,1))
 %!assert (full (as(end,end)), af(end,end))
 %!assert (as(2:end,2:end), sparse (af(2:end,2:end)))
@@ -916,44 +916,44 @@ gen_save_tests() {
     cat >>$TESTS <<EOF
 %!test # save ascii
 %! savefile = tmpnam ();
 %! as_save = as;
 %! save ("-text", savefile, "bf", "as_save", "af");
 %! clear as_save;
 %! load (savefile, "as_save");
 %! unlink (savefile);
-%! assert (as_save, sparse(af));
+%! assert (as_save, sparse (af));
 %!test # save binary
 %! savefile = tmpnam ();
 %! as_save = as;
 %! save ("-binary", savefile, "bf", "as_save", "af");
 %! clear as_save;
 %! load (savefile, "as_save");
 %! unlink (savefile);
-%! assert (as_save, sparse(af));
+%! assert (as_save, sparse (af));
 %!testif HAVE_HDF5   # save hdf5
 %! savefile = tmpnam ();
 %! as_save = as;
 %! save ("-hdf5", savefile, "bf", "as_save", "af");
 %! clear as_save;
 %! load (savefile, "as_save");
 %! unlink (savefile);
-%! assert (as_save, sparse(af));
+%! assert (as_save, sparse (af));
 ## FIXME: We should skip (or mark as an expected failure) the test for
 ## saving sparse matrices to MAT files when using 64-bit indexing since
 ## that is not implemented yet.
 %!test # save matlab
 %! savefile = tmpnam ();
 %! as_save = as;
 %! save ("-mat", savefile, "bf", "as_save", "af");
 %! clear as_save;
 %! load (savefile, "as_save");
 %! unlink (savefile);
-%! assert (as_save, sparse(af));
+%! assert (as_save, sparse (af));
 EOF
 }
 
 # =============================================================
 # Specific solver tests for matrices that will test all of the solver
 # code. Uses alpha and beta
 gen_solver_tests() {
 
@@ -970,21 +970,21 @@ else
 %! ls = tril (sprandn (8,8,0.2),-1).*alpha + n*speye (8); lf = full (ls);
 %! us = triu (sprandn (8,8,0.2),1).*alpha + n*speye (8); uf = full (us);
 %! ts = spdiags (randn (8,3),-1:1,8,8).*alpha; tf = full (ts);
 EOF
 fi
 
 cat >>$TESTS <<EOF
 %! df = diag (1:n).* alpha; ds = sparse (df);
-%! pdf = df(randperm (n),randperm (n));
+%! pdf = df(randperm (n), randperm (n));
 %! pds = sparse (pdf);
-%! plf = lf(randperm (n),randperm (n));
+%! plf = lf(randperm (n), randperm (n));
 %! pls = sparse (plf);
-%! puf = uf(randperm (n),randperm (n));
+%! puf = uf(randperm (n), randperm (n));
 %! pus = sparse (puf);
 %! bs = spdiags (repmat ([1:n]',1,4),-2:1,n,n).*alpha;
 %! bf = full (bs);
 %! cf = lf + lf'; cs = sparse (cf);
 %! bcf = bf + bf'; bcs = sparse (bcf);
 %! tcf = tf + tf'; tcs = sparse (tcf);
 %! xf = diag (1:n) + fliplr (diag (1:n)).*beta;
 %! xs = sparse (xf);
@@ -1019,38 +1019,38 @@ cat >>$TESTS <<EOF
 %!assert (tcs\xf, tcf\xf, 1e-10);
 %!assert (sparse (tcs\xs), sparse (tcf\xf), 1e-10);
 
 EOF
 
 cat >>$TESTS <<EOF
 %% QR solver tests
 
-%!function f(a, sz, feps)
+%!function f (a, sz, feps)
 %! b = randn (sz);
-%! x = a \ b; 
+%! x = a \ b;
 %! assert (a * x, b, feps);
 %! b = randn (sz) + 1i*randn (sz);
-%! x = a \ b;  
+%! x = a \ b;
 %! assert (a * x, b, feps);
 %! b = sprandn (sz(1),sz(2),0.2);
 %! x = a \ b;
 %! assert (sparse (a * x), b, feps);
 %! b = sprandn (sz(1),sz(2),0.2) + 1i*sprandn (sz(1),sz(2),0.2);
-%! x = a \ b; 
+%! x = a \ b;
 %! assert (sparse (a * x), b, feps);
 %!endfunction
 %!testif HAVE_UMFPACK
 %! a = alpha*sprandn (10,11,0.2) + speye (10,11);
-%! f(a,[10,2],1e-10);
-%! ## Test this by forcing matrix_type, as can't get a certain 
+%! f (a,[10,2],1e-10);
+%! ## Test this by forcing matrix_type, as can't get a certain
 %! ## result for over-determined systems.
-%! a = alpha*sprandn(10,10,0.2) + speye(10,10);
+%! a = alpha*sprandn (10,10,0.2) + speye (10,10);
 %! matrix_type (a, "Singular");
-%! f(a,[10,2],1e-10);
+%! f (a,[10,2],1e-10);
 
 %% Rectanguar solver tests that don't use QR
 
 %!test
 %! ds = alpha * spdiags ([1:11]',0,10,11);
 %! df = full (ds);
 %! xf = beta * ones (10,2);
 %! xs = speye (10,10);
@@ -1144,17 +1144,17 @@ EOF
 # Putting it all together: defining the combined tests
 
 
 # initial function
 gen_function
 gen_section
 
 # specific tests
-if $preset; then 
+if $preset; then
     gen_specific_tests
     gen_section
 fi
 
 # scalar operations
 echo '%!shared as,af,bs,bf' >> $TESTS
 if $preset; then
     echo '%!test af=[1+1i,2-1i,0,0;0,0,0,3+2i;0,0,0,4];' >> $TESTS
@@ -1189,35 +1189,35 @@ else
 %! bf = full (bs + 1i*sprandn (bs));
 EOF
 fi
 
 gen_rectangular_tests
 gen_section
 gen_save_tests
 gen_section
-echo '%!test bf=real(bf);' >> $TESTS
+echo '%!test bf = real (bf);' >> $TESTS
 gen_rectangular_tests
 gen_section
 gen_sparsesparse_ordering_tests
 gen_section
-echo '%!test af=real(af);' >> $TESTS
+echo '%!test af = real (af);' >> $TESTS
 gen_rectangular_tests
 gen_section
 gen_save_tests
 gen_section
-echo '%!test bf=bf+1i*(bf~=0);' >> $TESTS
+echo '%!test bf = bf+1i*(bf~=0);' >> $TESTS
 gen_rectangular_tests
 gen_section
 
 # square operations
 if $preset; then
-    echo '%!test af=[1+1i,2-1i,0,0;0,0,0,3+2i;0,0,0,4];' >> $TESTS
-    echo '%! as=sparse(af);' >> $TESTS
-    echo '%!test bf=[0,1-1i,0,0;2+1i,0,0,0;3-1i,2+3i,0,0];' >> $TESTS
+    echo '%!test af = [1+1i,2-1i,0,0;0,0,0,3+2i;0,0,0,4];' >> $TESTS
+    echo '%! as = sparse (af);' >> $TESTS
+    echo '%!test bf = [0,1-1i,0,0;2+1i,0,0,0;3-1i,2+3i,0,0];' >> $TESTS
 else
     cat >>$TESTS <<EOF
 %!test
 %! m = floor (lognrnd (8,2)+1);
 %! n = floor (lognrnd (8,2)+1);
 %! as = sprandn (m,n,0.3);
 %! af = full (as + 1i*sprandn (as));
 %! bs = sprandn (m,n,0.3);
@@ -1229,44 +1229,44 @@ cat >>$TESTS <<EOF
 %!test ;# invertible matrix
 %! bf = af'*bf+max (abs ([af(:);bf(:)]))*sparse (eye (columns (as)));
 %! bs = sparse (bf);
 
 EOF
 
 gen_square_tests
 gen_section
-echo '%!test bf=real(bf);' >> $TESTS
-echo '%! bs=sparse(bf);' >> $TESTS
+echo '%!test bf = real (bf);' >> $TESTS
+echo '%! bs = sparse (bf);' >> $TESTS
 gen_square_tests
 gen_section
-echo '%!test af=real(af);' >> $TESTS
-echo '%! as=sparse(af);' >> $TESTS
+echo '%!test af = real (af);' >> $TESTS
+echo '%! as = sparse (af);' >> $TESTS
 gen_square_tests
 gen_section
-echo '%!test bf=bf+1i*(bf~=0);' >> $TESTS
-echo '%! bs=sparse(bf);' >> $TESTS
+echo '%!test bf = bf+1i*(bf~=0);' >> $TESTS
+echo '%! bs = sparse (bf);' >> $TESTS
 gen_square_tests
 gen_section
 
 # cholesky tests
 if $preset; then
-  echo '%!test bf=[5,0,1+1i,0;0,5,0,1-2i;1-1i,0,5,0;0,1+2i,0,5];' >> $TESTS
-  echo '%! bs=sparse(bf);' >> $TESTS
+  echo '%!test bf = [5,0,1+1i,0;0,5,0,1-2i;1-1i,0,5,0;0,1+2i,0,5];' >> $TESTS
+  echo '%! bs = sparse (bf);' >> $TESTS
 else
   echo '# This has a small chance of failing to create a positive definite matrix' >> $TESTS
-  echo '%!test n=floor (lognrnd (8,2)+1)' >> $TESTS
+  echo '%!test n = floor (lognrnd (8,2)+1)' >> $TESTS
   echo '%! bs = n*speye (n,n) + sprandn (n,n,0.3);' >> $TESTS
   echo '%! bf = full (bs);' >> $TESTS
 fi
 
 gen_cholesky_tests
 gen_section
-echo '%!test bf=real(bf);' >> $TESTS
-echo '%! bs=sparse(bf);' >> $TESTS
+echo '%!test bf = real (bf);' >> $TESTS
+echo '%! bs = sparse (bf);' >> $TESTS
 gen_cholesky_tests
 gen_section
 
 # assembly tests
 echo '%!shared r,c,m,n,fsum,funiq' >>$TESTS
 if $use_preset; then
     cat >>$TESTS <<EOF
 %!test
@@ -1306,21 +1306,21 @@ else
 %! as = sprandn (m,n,0.3);
 %! af = full (as + 1i*sprandn (as));
 %! ridx = ceil (m*rand (1,ceil (rand*m));
 %! cidx = ceil (n*rand (1,ceil (rand*n));
 EOF
 fi
 gen_scalar_select_tests
 gen_select_tests
-echo '%!test af=real(af);' >> $TESTS
+echo '%!test af = real (af);' >> $TESTS
 gen_select_tests
 gen_section
 echo '%!shared alpha,beta,df,pdf,lf,plf,uf,puf,bf,cf,bcf,tf,tcf,xf,ds,pds,ls,pls,us,pus,bs,cs,bcs,ts,tcs,xs' >>$TESTS
-echo '%!test alpha=1;beta=1;' >> $TESTS
+echo '%!test alpha=1; beta=1;' >> $TESTS
 gen_solver_tests
-echo '%!test alpha=1;beta=1i;' >> $TESTS
+echo '%!test alpha=1; beta=1i;' >> $TESTS
 gen_solver_tests
-echo '%!test alpha=1i;beta=1;' >> $TESTS
+echo '%!test alpha=1i; beta=1;' >> $TESTS
 gen_solver_tests
-echo '%!test alpha=1i;beta=1i;' >> $TESTS
+echo '%!test alpha=1i; beta=1i;' >> $TESTS
 gen_solver_tests
 gen_section
diff --git a/test/build_bc_overloads_expected.m b/test/build_bc_overloads_expected.m
--- a/test/build_bc_overloads_expected.m
+++ b/test/build_bc_overloads_expected.m
@@ -1,17 +1,17 @@
 % this script is intended to be Matlab compatible
 % first, run the script
 %
 %   ./build_bc_overloads_tests.sh overloads_only
 %
 % to generate the overloaded functions.
 %
 ex.double = 1;
-ex.single = single(1);
+ex.single = single (1);
 ex.logical = true;
 ex.char = 'char';
 ex.int8  = int8 (1);
 ex.int16 = int16 (1);
 ex.int32 = int32 (1);
 ex.int64 = int64 (1);
 ex.uint8  = uint8 (1);
 ex.uint16 = uint16 (1);
diff --git a/test/classes/@Blork/Blork.m b/test/classes/@Blork/Blork.m
--- a/test/classes/@Blork/Blork.m
+++ b/test/classes/@Blork/Blork.m
@@ -1,16 +1,15 @@
-function [ s ] = Blork( bleek )
+function s = Blork (bleek)
 % Test class.
 
-    if (nargin==1) && isa(bleek, 'Blork')
-        s = bleek;
+  if (nargin == 1 && isa (bleek, 'Blork'))
+    s = bleek;
+  else
+    if (nargin == 0)
+      s.bleek = 1;
     else
-      if nargin==0
-        s.bleek = 1;
-      else
-        s.bleek = bleek;
-      end
-      s = class(s, 'Blork');
+      s.bleek = bleek;
+    end
+    s = class (s, 'Blork');
+  end
 
-    end
-        
 end
diff --git a/test/classes/@Blork/bleek.m b/test/classes/@Blork/bleek.m
--- a/test/classes/@Blork/bleek.m
+++ b/test/classes/@Blork/bleek.m
@@ -1,10 +1,10 @@
-function [ out ] = bleek( in, val )
+function out = bleek (in, val)
 
-  if (nargin==1) 
+  if (nargin == 1)
     out = in.bleek;
   else
     in.bleek = val;
     out = in;
   end
-        
+
 end
diff --git a/test/classes/@Blork/display.m b/test/classes/@Blork/display.m
--- a/test/classes/@Blork/display.m
+++ b/test/classes/@Blork/display.m
@@ -1,7 +1,7 @@
-function display( s )
+function display (s)
 
-  disp([inputname(1),'.bleek = '])
-  disp(' ');
-  disp(s.bleek);
+  disp ([inputname(1),'.bleek = ']);
+  disp (' ');
+  disp (s.bleek);
 
-end
\ No newline at end of file
+end
diff --git a/test/classes/@Blork/get.m b/test/classes/@Blork/get.m
--- a/test/classes/@Blork/get.m
+++ b/test/classes/@Blork/get.m
@@ -1,10 +1,10 @@
-function [ v ] = get( s, propName )
+function v = get (s, propName)
 
-    switch propName
-        case 'bleek'
-            v = s.bleek;
-        otherwise
-            error([propName, ' is not a valid Blork property']);
-    end
+  switch propName
+    case 'bleek'
+      v = s.bleek;
+    otherwise
+      error ([propName, ' is not a valid Blork property']);
+  end
 
 end
diff --git a/test/classes/@Blork/set.m b/test/classes/@Blork/set.m
--- a/test/classes/@Blork/set.m
+++ b/test/classes/@Blork/set.m
@@ -1,16 +1,16 @@
-function [ s ] = set( s, varargin )
+function s = set (s, varargin)
 
   propArgs = varargin;
-  while (length(propArgs) >= 2)
+  while (length (propArgs) >= 2)
     propName  = propArgs{1};
     propValue = propArgs{2};
     propArgs  = propArgs(3:end);
     switch propName
       case 'bleek'
         s.bleek = propValue;
       otherwise
-        error([propName, ' is not a valid Blork property']);
+        error ([propName, ' is not a valid Blork property']);
     end
   end
 
 end
diff --git a/test/classes/@CPrecedenceTester1/CPrecedenceTester1.m b/test/classes/@CPrecedenceTester1/CPrecedenceTester1.m
--- a/test/classes/@CPrecedenceTester1/CPrecedenceTester1.m
+++ b/test/classes/@CPrecedenceTester1/CPrecedenceTester1.m
@@ -1,8 +1,8 @@
-function x = CPrecedenceTester1()
+function x = CPrecedenceTester1 ()
 
-  x = struct('useless_data', pi);
-  x = class(x, 'CPrecedenceTester1');
+  x = struct ('useless_data', pi);
+  x = class (x, 'CPrecedenceTester1');
 
   % don't change anything as far as precedence is concerned
 
 end
diff --git a/test/classes/@CPrecedenceTester1/tattack.m b/test/classes/@CPrecedenceTester1/tattack.m
--- a/test/classes/@CPrecedenceTester1/tattack.m
+++ b/test/classes/@CPrecedenceTester1/tattack.m
@@ -1,5 +1,5 @@
-function s = tattack(x, y)
-  
+function s = tattack (x, y)
+
   s = 'CPrecedenceTester1';
-  
+
 end
diff --git a/test/classes/@CPrecedenceTester2/CPrecedenceTester2.m b/test/classes/@CPrecedenceTester2/CPrecedenceTester2.m
--- a/test/classes/@CPrecedenceTester2/CPrecedenceTester2.m
+++ b/test/classes/@CPrecedenceTester2/CPrecedenceTester2.m
@@ -1,15 +1,15 @@
-function x = CPrecedenceTester2(flag)
+function x = CPrecedenceTester2 (flag)
 
-  x = struct('useless_data', pi^2);
-  x = class(x, 'CPrecedenceTester2');
+  x = struct ('useless_data', pi^2);
+  x = class (x, 'CPrecedenceTester2');
 
-  switch flag,
-    case 1, % CPrecedencetester2 > Snork
-      superiorto('Snork');
-    case 2, % CPrecedencetester2 < Snork
-      inferiorto('Snork');
-    otherwise,
-      error('Incorrect value for argument flag: %d', flag);
+  switch flag
+    case 1  % CPrecedencetester2 > Snork
+      superiorto ('Snork');
+    case 2  % CPrecedencetester2 < Snork
+      inferiorto ('Snork');
+    otherwise
+      error ('Incorrect value for argument flag: %d', flag);
   end
 
 end
diff --git a/test/classes/@CPrecedenceTester2/tattack.m b/test/classes/@CPrecedenceTester2/tattack.m
--- a/test/classes/@CPrecedenceTester2/tattack.m
+++ b/test/classes/@CPrecedenceTester2/tattack.m
@@ -1,5 +1,5 @@
-function s = tattack(x, y)
-  
+function s = tattack (x, y)
+
   s = 'CPrecedenceTester2';
-  
+
 end
diff --git a/test/classes/@CPrecedenceTester3/CPrecedenceTester3.m b/test/classes/@CPrecedenceTester3/CPrecedenceTester3.m
--- a/test/classes/@CPrecedenceTester3/CPrecedenceTester3.m
+++ b/test/classes/@CPrecedenceTester3/CPrecedenceTester3.m
@@ -1,15 +1,15 @@
-function x = CPrecedenceTester3(flag)
+function x = CPrecedenceTester3 (flag)
 
-  x = struct('useless_data', pi^3);
-  x = class(x, 'CPrecedenceTester3');
+  x = struct ('useless_data', pi^3);
+  x = class (x, 'CPrecedenceTester3');
 
-  switch flag,
-    case 1, % CPrecedencetester3 > Snork
-      superiorto('Snork');
-    case 2, % CPrecedencetester3 < Snork
-      inferiorto('Snork');
-    otherwise,
-      error('Incorrect value for argument flag: %d', flag);
+  switch flag
+    case 1  % CPrecedencetester3 > Snork
+      superiorto ('Snork');
+    case 2  % CPrecedencetester3 < Snork
+      inferiorto ('Snork');
+    otherwise
+      error ('Incorrect value for argument flag: %d', flag);
   end
 
 end
diff --git a/test/classes/@CPrecedenceTester3/tattack.m b/test/classes/@CPrecedenceTester3/tattack.m
--- a/test/classes/@CPrecedenceTester3/tattack.m
+++ b/test/classes/@CPrecedenceTester3/tattack.m
@@ -1,5 +1,5 @@
-function s = tattack(x, y)
-  
+function s = tattack (x, y)
+
   s = 'CPrecedenceTester3';
-  
+
 end
diff --git a/test/classes/@Cork/Cork.m b/test/classes/@Cork/Cork.m
--- a/test/classes/@Cork/Cork.m
+++ b/test/classes/@Cork/Cork.m
@@ -1,16 +1,16 @@
-function [ s ] = Cork( click )
+function s = Cork (click)
 % Test class.
 
-  if ( (nargin==1) && (isa(click, 'Cork')) )
+  if (nargin == 1 && isa (click, 'Cork'))
     s = click;
     return;
   end
 
-  if( nargin<1 )
+  if (nargin < 1)
     s.click = 1;
   else
     s.click = click;
   end
-  s = class(s, 'Cork');
+  s = class (s, 'Cork');
 
 end
diff --git a/test/classes/@Cork/click.m b/test/classes/@Cork/click.m
--- a/test/classes/@Cork/click.m
+++ b/test/classes/@Cork/click.m
@@ -1,10 +1,10 @@
-function [ out ] = click( in, val )
+function out = click (in, val)
 
-  if (nargin==1) 
+  if (nargin == 1)
     out = in.click;
   else
     in.click = val;
     out = in;
   end
-        
+
 end
diff --git a/test/classes/@Cork/display.m b/test/classes/@Cork/display.m
--- a/test/classes/@Cork/display.m
+++ b/test/classes/@Cork/display.m
@@ -1,7 +1,7 @@
-function display( s )
+function display (s)
 
-  disp([inputname(1),'.click = ']);
-  disp(' ');
-  disp(s.click);
+  disp ([inputname(1),'.click = ']);
+  disp (' ');
+  disp (s.click);
 
-end
\ No newline at end of file
+end
diff --git a/test/classes/@Cork/get.m b/test/classes/@Cork/get.m
--- a/test/classes/@Cork/get.m
+++ b/test/classes/@Cork/get.m
@@ -1,10 +1,10 @@
-function [ v ] = get( s, propName )
+function v = get (s, propName)
 
-    switch propName
-        case 'click'
-            v = s.click;
-        otherwise
-            error([propName, ' is not a valid Cork property']);
-    end
+  switch propName
+    case 'click'
+      v = s.click;
+    otherwise
+      error ([propName, ' is not a valid Cork property']);
+  end
 
 end
diff --git a/test/classes/@Cork/set.m b/test/classes/@Cork/set.m
--- a/test/classes/@Cork/set.m
+++ b/test/classes/@Cork/set.m
@@ -1,16 +1,16 @@
-function [ s ] = set( s, varargin )
+function s = set (s, varargin)
 
   propArgs = varargin;
-  while (length(propArgs) >= 2)
+  while (length (propArgs) >= 2)
     propName  = propArgs{1};
     propValue = propArgs{2};
     propArgs  = propArgs(3:end);
     switch propName
       case 'click'
         s.click = propValue;
       otherwise
-        error([propName, ' is not a valid Cork property']);
+        error ([propName, ' is not a valid Cork property']);
     end
   end
 
 end
diff --git a/test/classes/@Dork/Dork.m b/test/classes/@Dork/Dork.m
--- a/test/classes/@Dork/Dork.m
+++ b/test/classes/@Dork/Dork.m
@@ -1,18 +1,18 @@
-function [ s ] = Dork( gick, gack )
+function s = Dork (gick, gack)
 
-  if (nargin==1) && isa(gick,'Dork')
+  if (nargin == 1 && isa (gick, 'Dork'))
     s = gick;
   else
     s.gack = 0;
-    if nargin == 0
+    if (nargin == 0)
       s0 = Snork ();
-    elseif nargin==1
-      s0 = Snork(gick);
+    elseif (nargin == 1)
+      s0 = Snork (gick);
     else
-      s0 = Snork(gick);
+      s0 = Snork (gick);
       s.gack = gack;
     end
-    s = class(s,'Dork',s0);
-   end 
-   
+    s = class (s, 'Dork', s0);
+   end
+
 end
diff --git a/test/classes/@Dork/bling.m b/test/classes/@Dork/bling.m
--- a/test/classes/@Dork/bling.m
+++ b/test/classes/@Dork/bling.m
@@ -1,5 +1,5 @@
-function [ out ] = bling( m1, m2 )
+function out = bling (m1, m2)
 
   out = 1;
-        
+
 end
diff --git a/test/classes/@Dork/display.m b/test/classes/@Dork/display.m
--- a/test/classes/@Dork/display.m
+++ b/test/classes/@Dork/display.m
@@ -1,13 +1,13 @@
-function display( s )
+function display (s)
 %  Display the critical info for an amplifier
 
-   gick = get(s,'gick');
-   disp([inputname(1),'.gick = '])
-   disp(' ');
-   disp(gick);
-   disp(' ');
-   disp([inputname(1),'.gack = '])
-   disp(' ');
-   disp(s.gack);
+   gick = get (s, 'gick');
+   disp ([inputname(1),'.gick = ']);
+   disp (' ');
+   disp (gick);
+   disp (' ');
+   disp ([inputname(1),'.gack = ']);
+   disp (' ');
+   disp (s.gack);
 
 end
diff --git a/test/classes/@Dork/gack.m b/test/classes/@Dork/gack.m
--- a/test/classes/@Dork/gack.m
+++ b/test/classes/@Dork/gack.m
@@ -1,10 +1,10 @@
-function [ out ] = gack( in, val )
+function out = gack (in, val)
 
-  if (nargin==1) 
+  if (nargin == 1)
     out = in.gack;
   else
     in.gack = val;
     out = in;
   end
-        
+
 end
diff --git a/test/classes/@Dork/get.m b/test/classes/@Dork/get.m
--- a/test/classes/@Dork/get.m
+++ b/test/classes/@Dork/get.m
@@ -1,10 +1,10 @@
-function [ v ] = get( s, propName )
+function v = get (s, propName)
 
   switch propName
     case 'gack'
       v = s.gack;
     otherwise
-      v = get(s.Snork,propName);
+      v = get (s.Snork,propName);
   end
 
 end
diff --git a/test/classes/@Dork/getStash.m b/test/classes/@Dork/getStash.m
--- a/test/classes/@Dork/getStash.m
+++ b/test/classes/@Dork/getStash.m
@@ -1,5 +1,5 @@
-function [ out ] = getStash(cls)
+function out = getStash (cls)
 
   out = myStash ();
-        
+
 end
diff --git a/test/classes/@Dork/private/myStash.m b/test/classes/@Dork/private/myStash.m
--- a/test/classes/@Dork/private/myStash.m
+++ b/test/classes/@Dork/private/myStash.m
@@ -1,5 +1,5 @@
-function [ out ] = myStash ()
+function out = myStash ()
 
   out = 2;
 
 end
diff --git a/test/classes/@Dork/set.m b/test/classes/@Dork/set.m
--- a/test/classes/@Dork/set.m
+++ b/test/classes/@Dork/set.m
@@ -1,16 +1,16 @@
-function [ s ] = set( s, varargin )
+function s = set (s, varargin)
 
   propArgs = varargin;
-  while (length(propArgs) >= 2)
+  while (length (propArgs) >= 2)
     propName  = propArgs{1};
     propValue = propArgs{2};
     propArgs  = propArgs(3:end);
     switch propName
       case 'gack'
         s.gack = propValue;
       otherwise
-        s.Snork = set(s.Snork, propName, propValue);
+        s.Snork = set (s.Snork, propName, propValue);
     end
   end
 
 end
diff --git a/test/classes/@Gork/Gork.m b/test/classes/@Gork/Gork.m
--- a/test/classes/@Gork/Gork.m
+++ b/test/classes/@Gork/Gork.m
@@ -1,15 +1,16 @@
-function [ s ] = Gork( g )
-  if (nargin==1) && isa(g,'Gork')
+function s = Gork (g)
+
+  if (nargin == 1 && isa (g, 'Gork'))
     s = sprk;
     return;
   end
 
   drk  = Dork ();
   prk  = Pork ();
   blrk = Blork ();
-  s.Cork = Cork(17);  % Aggregation.
+  s.Cork = Cork (17);  % Aggregation.
   s.gark = -2;
   s.gyrk = -3;
-  s = class(s,'Gork',drk,prk,blrk);
-   
+  s = class (s,'Gork',drk,prk,blrk);
+
 end
diff --git a/test/classes/@Gork/cork.m b/test/classes/@Gork/cork.m
--- a/test/classes/@Gork/cork.m
+++ b/test/classes/@Gork/cork.m
@@ -1,10 +1,10 @@
-function [ out ] = cork( in, val )
+function out = cork (in, val)
 
-  if (nargin==1) 
+  if (nargin == 1)
     out = in.Cork;
   else
     in.Cork = val;
     out = in;
   end
-        
+
 end
diff --git a/test/classes/@Gork/display.m b/test/classes/@Gork/display.m
--- a/test/classes/@Gork/display.m
+++ b/test/classes/@Gork/display.m
@@ -1,16 +1,15 @@
-function display( s )
+function display (s)
 %  Display the critical info for a Gork.
 
    dork_base = s.Dork
    %pork_base = s.Pork
    %sprk = s.sprk;
-   gark = get(s,'gark');
-   disp([inputname(1),'.gark = '])
-   disp(' ');
-   disp(gark);
-   disp([inputname(1),'.Cork= '])
-   disp(' ');
-   disp(click(s.Cork));
-
+   gark = get (s, 'gark');
+   disp ([inputname(1),'.gark = ']);
+   disp (' ');
+   disp (gark);
+   disp ([inputname(1),'.Cork= ']);
+   disp (' ');
+   disp (click(s.Cork));
 
 end
diff --git a/test/classes/@Gork/gark.m b/test/classes/@Gork/gark.m
--- a/test/classes/@Gork/gark.m
+++ b/test/classes/@Gork/gark.m
@@ -1,10 +1,10 @@
-function [ out ] = gark( in, val )
+function out = gark (in, val)
 
-  if (nargin==1) 
+  if (nargin == 1)
     out = in.gark;
   else
     in.gark = val;
     out = in;
   end
-        
+
 end
diff --git a/test/classes/@Gork/get.m b/test/classes/@Gork/get.m
--- a/test/classes/@Gork/get.m
+++ b/test/classes/@Gork/get.m
@@ -1,14 +1,14 @@
-function [ v ] = get( s, propName )
+function v = get (s, propName)
 
   switch propName
     case 'cork'
       v = s.Cork;
     case 'gark'
       v = s.gark;
     otherwise
       % Note that get/set for multiple parents is hard.  We only do one
       % branch of the parent tree just to test this stuff out.
-      v = get(s.Dork,propName);
+      v = get (s.Dork,propName);
   end
 
 end
diff --git a/test/classes/@Gork/set.m b/test/classes/@Gork/set.m
--- a/test/classes/@Gork/set.m
+++ b/test/classes/@Gork/set.m
@@ -1,24 +1,24 @@
-function [ s ] = set( s, varargin )
+function s = set (s, varargin)
 
   propArgs = varargin;
-  while (length(propArgs) >= 2)
+  while (length (propArgs) >= 2)
     propName  = propArgs{1};
     propValue = propArgs{2};
     propArgs  = propArgs(3:end);
     switch propName
       case 'cork'
-        if(isa(propValue,'Cork'))
+        if (isa (propValue, 'Cork'))
           s.Cork = propValue;
         else
-          s.Cork = set(s.Cork, 'click',propValue);
+          s.Cork = set (s.Cork, 'click', propValue);
         end
       case 'gark'
         s.gark = propValue;
       otherwise
         % Note that get/set for multiple parents is hard.  We only do one
         % branch of the parent tree just to test this stuff out.
-        s.Dork = set(s.Dork, propName, propValue);
+        s.Dork = set (s.Dork, propName, propValue);
     end
   end
 
 end
diff --git a/test/classes/@Gork/subsasgn.m b/test/classes/@Gork/subsasgn.m
--- a/test/classes/@Gork/subsasgn.m
+++ b/test/classes/@Gork/subsasgn.m
@@ -1,9 +1,10 @@
-function g = subsasgn(g, s, x)
+function g = subsasgn (g, s, x)
 
   switch s.type
   case '.'
     switch s.subs
     case 'gyrk'
-      g.gyrk = x; 
+      g.gyrk = x;
   end
+
 end
diff --git a/test/classes/@Gork/subsref.m b/test/classes/@Gork/subsref.m
--- a/test/classes/@Gork/subsref.m
+++ b/test/classes/@Gork/subsref.m
@@ -1,9 +1,10 @@
-function x = subsref(g, s)
+function x = subsref (g, s)
 
   switch s.type
   case '.'
     switch s.subs
     case 'gyrk'
       x = g.gyrk;
   end
+
 end
diff --git a/test/classes/@Pork/Pork.m b/test/classes/@Pork/Pork.m
--- a/test/classes/@Pork/Pork.m
+++ b/test/classes/@Pork/Pork.m
@@ -1,19 +1,19 @@
-function [ s ] = Pork( geek, gurk )
+function s = Pork (geek, gurk)
 
-  if (nargin==1) && isa(geek,'Pork')
+  if (nargin == 1 && isa (geek, 'Pork'))
     s = geek;
   else
     s.gurk = 0;
-    if nargin == 0
+    if (nargin == 0)
       s0 = Spork ();
-    elseif nargin==1
-      s0 = Spork(geek);
+    elseif (nargin == 1)
+      s0 = Spork (geek);
     else
-      s0 = Spork(geek);
+      s0 = Spork (geek);
       s.gurk = gurk;
     end
-    s = class(s,'Pork',s0);
-   end 
-   superiorto('Dork');
+    s = class (s, 'Pork', s0);
+   end
+   superiorto ('Dork');
 
 end
diff --git a/test/classes/@Pork/bling.m b/test/classes/@Pork/bling.m
--- a/test/classes/@Pork/bling.m
+++ b/test/classes/@Pork/bling.m
@@ -1,5 +1,5 @@
-function [ out ] = bling( m1, m2 )
+function out = bling (m1, m2)
 
   out = 2;
-        
+
 end
diff --git a/test/classes/@Pork/display.m b/test/classes/@Pork/display.m
--- a/test/classes/@Pork/display.m
+++ b/test/classes/@Pork/display.m
@@ -1,13 +1,13 @@
-function display( s )
+function display (s)
 %  Display the critical info for an amplifier
 
-   geek = get(s,'geek');
-   disp([inputname(1),'.geek = '])
-   disp(' ');
-   disp(geek);
-   disp(' ');
-   disp([inputname(1),'.gurk = '])
-   disp(' ');
-   disp(s.gurk);
+   geek = get (s, 'geek');
+   disp ([inputname(1),'.geek = ']);
+   disp (' ');
+   disp (geek);
+   disp (' ');
+   disp ([inputname(1),'.gurk = ']);
+   disp (' ');
+   disp (s.gurk);
 
 end
diff --git a/test/classes/@Pork/get.m b/test/classes/@Pork/get.m
--- a/test/classes/@Pork/get.m
+++ b/test/classes/@Pork/get.m
@@ -1,10 +1,10 @@
-function [ v ] = get( s, propName )
+function v = get (s, propName)
 
   switch propName
     case 'gurk'
       v = s.gurk;
     otherwise
-      v = get(s.Spork,propName);
+      v = get (s.Spork, propName);
   end
 
 end
diff --git a/test/classes/@Pork/gurk.m b/test/classes/@Pork/gurk.m
--- a/test/classes/@Pork/gurk.m
+++ b/test/classes/@Pork/gurk.m
@@ -1,10 +1,10 @@
-function [ out ] = gurk( in, val )
+function out = gurk (in, val)
 
-  if (nargin==1) 
+  if (nargin == 1)
     out = in.gurk;
   else
     in.gurk = val;
     out = in;
   end
-        
+
 end
diff --git a/test/classes/@Pork/private/myStash.m b/test/classes/@Pork/private/myStash.m
--- a/test/classes/@Pork/private/myStash.m
+++ b/test/classes/@Pork/private/myStash.m
@@ -1,5 +1,5 @@
-function [ out ] = myStash ()
+function out = myStash ()
 
   out = 4;
 
 end
diff --git a/test/classes/@Pork/set.m b/test/classes/@Pork/set.m
--- a/test/classes/@Pork/set.m
+++ b/test/classes/@Pork/set.m
@@ -1,16 +1,16 @@
-function [ s ] = set( s, varargin )
+function s = set (s, varargin)
 
   propArgs = varargin;
-  while (length(propArgs) >= 2)
+  while (length (propArgs) >= 2)
     propName  = propArgs{1};
     propValue = propArgs{2};
     propArgs  = propArgs(3:end);
     switch propName
       case 'gurk'
         s.gurk = propValue;
       otherwise
-        s.Spork = set(s.Spork, propName, propValue);
+        s.Spork = set (s.Spork, propName, propValue);
     end
   end
 
 end
diff --git a/test/classes/@Sneetch/Sneetch.m b/test/classes/@Sneetch/Sneetch.m
--- a/test/classes/@Sneetch/Sneetch.m
+++ b/test/classes/@Sneetch/Sneetch.m
@@ -1,16 +1,16 @@
-function [ s ] = Sneetch( mcbean )
+function s = Sneetch (mcbean)
 % Test class: should produce error.
 
-  if (nargin==1) && isa(mcbean, 'Sneetch')
+  if (nargin == 1 && isa (mcbean, 'Sneetch'))
     s = mcbean;
   else
-    if nargin==0
+    if (nargin == 0)
       s.mcbean = 1;
     else
       s.mcbean = mcbean;
     end
-    s = class(s, 'Sneetch');
+    s = class (s, 'Sneetch');
     s.sylvester = 1;
   end
-        
+
 end
diff --git a/test/classes/@Sneetch/display.m b/test/classes/@Sneetch/display.m
--- a/test/classes/@Sneetch/display.m
+++ b/test/classes/@Sneetch/display.m
@@ -1,10 +1,10 @@
-function display( s )
+function display ( s )
 
-  disp([inputname(1),'.mcbean = '])
-  disp(' ');
-  disp(s.mcbean);
-  disp([inputname(1),'.sylvester = '])
-  disp(' ');
-  disp(s.sylvester);
+  disp ([inputname(1),'.mcbean = ']);
+  disp (' ');
+  disp (s.mcbean);
+  disp ([inputname(1),'.sylvester = ']);
+  disp (' ');
+  disp (s.sylvester);
 
-end
\ No newline at end of file
+end
diff --git a/test/classes/@Snork/Snork.m b/test/classes/@Snork/Snork.m
--- a/test/classes/@Snork/Snork.m
+++ b/test/classes/@Snork/Snork.m
@@ -1,17 +1,16 @@
-function [ s ] = Snork( gick )
+function s = Snork (gick)
 % Test class.
 
-  if ( (nargin==1) && (isa(gick, 'Snork')) )
+  if (nargin == 1 && isa (gick, 'Snork'))
     s = gick;
   else
     s.cack = [0 1 2 3];
-    if nargin==0
+    if (nargin == 0)
       s.gick = 1;
     else
       s.gick = gick;
     end
-    s = class(s, 'Snork');
-
+    s = class (s, 'Snork');
   end
-        
+
 end
diff --git a/test/classes/@Snork/cack.m b/test/classes/@Snork/cack.m
--- a/test/classes/@Snork/cack.m
+++ b/test/classes/@Snork/cack.m
@@ -1,5 +1,5 @@
-function [ out ] = cack( in )
+function out = cack (in)
 
   out = in.cack;
-        
+
 end
diff --git a/test/classes/@Snork/display.m b/test/classes/@Snork/display.m
--- a/test/classes/@Snork/display.m
+++ b/test/classes/@Snork/display.m
@@ -1,7 +1,7 @@
-function display( s )
+function display (s)
 
-  disp([inputname(1),'.gick = ']);
-  disp(' ');
-  disp(s.gick);
+  disp ([inputname(1),'.gick = ']);
+  disp (' ');
+  disp (s.gick);
 
-end
\ No newline at end of file
+end
diff --git a/test/classes/@Snork/double.m b/test/classes/@Snork/double.m
--- a/test/classes/@Snork/double.m
+++ b/test/classes/@Snork/double.m
@@ -1,6 +1,6 @@
-function x = double(snk)
+function x = double (snk)
 
   x = snk.gick;
 
 end
 
diff --git a/test/classes/@Snork/end.m b/test/classes/@Snork/end.m
--- a/test/classes/@Snork/end.m
+++ b/test/classes/@Snork/end.m
@@ -1,9 +1,9 @@
 function r = end (snk, index_pos, num_indices)
 
   if (num_indices ~= 1)
     error ('Snork object may only have one index')
   end
-  
+
   r = length (snk.cack);
 
 end
diff --git a/test/classes/@Snork/eq.m b/test/classes/@Snork/eq.m
--- a/test/classes/@Snork/eq.m
+++ b/test/classes/@Snork/eq.m
@@ -1,8 +1,8 @@
-function b = eq(s1, s2)
+function b = eq (s1, s2)
 
-  x1 = double(s1);
-  x2 = double(s2);
+  x1 = double (s1);
+  x2 = double (s2);
 
-  b = isequal(x1, x2);
+  b = isequal (x1, x2);
 
-end
\ No newline at end of file
+end
diff --git a/test/classes/@Snork/ge.m b/test/classes/@Snork/ge.m
--- a/test/classes/@Snork/ge.m
+++ b/test/classes/@Snork/ge.m
@@ -1,8 +1,8 @@
-function b = ge(s1, s2)
+function b = ge (s1, s2)
 
-  x1 = double(s1);
-  x2 = double(s2);
+  x1 = double (s1);
+  x2 = double (s2);
 
   b = (x1(1) >= x2(1));
 
 end
diff --git a/test/classes/@Snork/get.m b/test/classes/@Snork/get.m
--- a/test/classes/@Snork/get.m
+++ b/test/classes/@Snork/get.m
@@ -1,10 +1,10 @@
-function [ v ] = get( s, propName )
+function v = get (s, propName)
 
-    switch propName
-        case 'gick'
-            v = s.gick;
-        otherwise
-            error([propName, ' is not a valid Snork property']);
-    end
+  switch propName
+    case 'gick'
+      v = s.gick;
+    otherwise
+      error ([propName, ' is not a valid Snork property']);
+  end
 
 end
diff --git a/test/classes/@Snork/getStash.m b/test/classes/@Snork/getStash.m
--- a/test/classes/@Snork/getStash.m
+++ b/test/classes/@Snork/getStash.m
@@ -1,5 +1,5 @@
-function [ out ] = getStash(cls)
+function out = getStash (l)
 
   out = myStash ();
-        
+
 end
diff --git a/test/classes/@Snork/gick.m b/test/classes/@Snork/gick.m
--- a/test/classes/@Snork/gick.m
+++ b/test/classes/@Snork/gick.m
@@ -1,10 +1,10 @@
-function [ out ] = gick( in, val )
+function out = gick (in, val)
 
-  if (nargin==1) 
+  if (nargin == 1)
     out = in.gick;
   else
     in.gick = val;
     out = in;
   end
-        
+
 end
diff --git a/test/classes/@Snork/gt.m b/test/classes/@Snork/gt.m
--- a/test/classes/@Snork/gt.m
+++ b/test/classes/@Snork/gt.m
@@ -1,8 +1,8 @@
-function b = gt(s1, s2)
+function b = gt (s1, s2)
 
-  x1 = double(s1);
-  x2 = double(s2);
+  x1 = double (s1);
+  x2 = double (s2);
 
   b = (x1(1) > x2(1));
 
 end
diff --git a/test/classes/@Snork/horzcat.m b/test/classes/@Snork/horzcat.m
--- a/test/classes/@Snork/horzcat.m
+++ b/test/classes/@Snork/horzcat.m
@@ -1,8 +1,8 @@
-function s = horzcat(s1, s2)
+function s = horzcat (s1, s2)
 
-  x1 = double(s1);
-  x2 = double(s2);
+  x1 = double (s1);
+  x2 = double (s2);
 
-  s = Snork([x1 x2]);
+  s = Snork ([x1 x2]);
 
 end
diff --git a/test/classes/@Snork/ldivide.m b/test/classes/@Snork/ldivide.m
--- a/test/classes/@Snork/ldivide.m
+++ b/test/classes/@Snork/ldivide.m
@@ -1,8 +1,8 @@
-function s = ldivide(s1, s2)
+function s = ldivide (s1, s2)
 
-  x1 = double(s1);
-  x2 = double(s2);
+  x1 = double (s1);
+  x2 = double (s2);
 
   s = Snork(x1 .\ x2);
 
 end
diff --git a/test/classes/@Snork/le.m b/test/classes/@Snork/le.m
--- a/test/classes/@Snork/le.m
+++ b/test/classes/@Snork/le.m
@@ -1,8 +1,8 @@
-function b = le(s1, s2)
+function b = le (s1, s2)
 
-  x1 = double(s1);
-  x2 = double(s2);
+  x1 = double (s1);
+  x2 = double (s2);
 
   b = (x1(1) <= x2(1));
 
 end
diff --git a/test/classes/@Snork/loadobj.m b/test/classes/@Snork/loadobj.m
--- a/test/classes/@Snork/loadobj.m
+++ b/test/classes/@Snork/loadobj.m
@@ -1,6 +1,6 @@
-function [ out ] = loadobj( in )
+function out = loadobj (in)
 
   out = in;
   out.cack = [-1 -2 -3 -4];
-        
+
 end
diff --git a/test/classes/@Snork/lt.m b/test/classes/@Snork/lt.m
--- a/test/classes/@Snork/lt.m
+++ b/test/classes/@Snork/lt.m
@@ -1,8 +1,8 @@
-function b = lt(s1, s2)
+function b = lt (s1, s2)
 
-  x1 = double(s1);
-  x2 = double(s2);
+  x1 = double (s1);
+  x2 = double (s2);
 
   b = (x1(1) < x2(1));
 
 end
diff --git a/test/classes/@Snork/minus.m b/test/classes/@Snork/minus.m
--- a/test/classes/@Snork/minus.m
+++ b/test/classes/@Snork/minus.m
@@ -1,8 +1,8 @@
-function s = minus(s1, s2)
+function s = minus (s1, s2)
 
-  x1 = double(s1);
-  x2 = double(s2);
+  x1 = double (s1);
+  x2 = double (s2);
 
-  s = Snork(x1 - x2);
+  s = Snork (x1 - x2);
 
 end
diff --git a/test/classes/@Snork/mldivide.m b/test/classes/@Snork/mldivide.m
--- a/test/classes/@Snork/mldivide.m
+++ b/test/classes/@Snork/mldivide.m
@@ -1,8 +1,8 @@
-function s = mldivide(s1, s2)
+function s = mldivide (s1, s2)
 
-  x1 = double(s1);
-  x2 = double(s2);
+  x1 = double (s1);
+  x2 = double (s2);
 
-  s = Snork(x1 \ x2);
+  s = Snork (x1 \ x2);
 
 end
diff --git a/test/classes/@Snork/mpower.m b/test/classes/@Snork/mpower.m
--- a/test/classes/@Snork/mpower.m
+++ b/test/classes/@Snork/mpower.m
@@ -1,10 +1,10 @@
-function s = mpower(s1, x)
+function s = mpower (s1, x)
 
-  if ~isa(s1, 'Snork') || isa(x, 'Snork')
-    error('mpower Snork!!!');
+  if (~isa (s1, 'Snork') || isa (x, 'Snork'))
+    error ('mpower Snork!!!');
   end
 
   s = s1;
   s.gick = s.gick ^ x;
 
 end
diff --git a/test/classes/@Snork/mrdivide.m b/test/classes/@Snork/mrdivide.m
--- a/test/classes/@Snork/mrdivide.m
+++ b/test/classes/@Snork/mrdivide.m
@@ -1,8 +1,8 @@
-function s = mrdivide(s1, s2)
+function s = mrdivide (s1, s2)
 
-  x1 = double(s1);
-  x2 = double(s2);
+  x1 = double (s1);
+  x2 = double (s2);
 
-  s = Snork(x1 / x2);
+  s = Snork (x1 / x2);
 
 end
diff --git a/test/classes/@Snork/mtimes.m b/test/classes/@Snork/mtimes.m
--- a/test/classes/@Snork/mtimes.m
+++ b/test/classes/@Snork/mtimes.m
@@ -1,8 +1,8 @@
-function s = mtimes(s1, s2)
+function s = mtimes (s1, s2)
 
-  x1 = double(s1);
-  x2 = double(s2);
+  x1 = double (s1);
+  x2 = double (s2);
 
-  s = Snork(x1 * x2);
+  s = Snork (x1 * x2);
 
 end
diff --git a/test/classes/@Snork/ne.m b/test/classes/@Snork/ne.m
--- a/test/classes/@Snork/ne.m
+++ b/test/classes/@Snork/ne.m
@@ -1,5 +1,5 @@
-function b = ne(s1, s2)
+function b = ne (s1, s2)
 
   b = ~(s1 == s2);
 
 end
diff --git a/test/classes/@Snork/plus.m b/test/classes/@Snork/plus.m
--- a/test/classes/@Snork/plus.m
+++ b/test/classes/@Snork/plus.m
@@ -1,8 +1,8 @@
-function s = plus(s1, s2)
+function s = plus (s1, s2)
 
-  x1 = double(s1);
-  x2 = double(s2);
+  x1 = double (s1);
+  x2 = double (s2);
 
-  s = Snork(x1 + x2);
+  s = Snork (x1 + x2);
 
-end
\ No newline at end of file
+end
diff --git a/test/classes/@Snork/power.m b/test/classes/@Snork/power.m
--- a/test/classes/@Snork/power.m
+++ b/test/classes/@Snork/power.m
@@ -1,10 +1,10 @@
-function s = power(s1, x)
+function s = power (s1, x)
 
-  if ~isa(s1, 'Snork') || isa(x, 'Snork')
-    error('power Snork!!!');
+  if (~isa (s1, 'Snork') || isa (x, 'Snork'))
+    error ('power Snork!!!');
   end
 
   s = s1;
   s.gick = s.gick .^ x;
 
 end
diff --git a/test/classes/@Snork/private/myStash.m b/test/classes/@Snork/private/myStash.m
--- a/test/classes/@Snork/private/myStash.m
+++ b/test/classes/@Snork/private/myStash.m
@@ -1,5 +1,5 @@
-function [ out ] = myStash ()
+function out = myStash ()
 
   out = 1;
-        
+
 end
diff --git a/test/classes/@Snork/rdivide.m b/test/classes/@Snork/rdivide.m
--- a/test/classes/@Snork/rdivide.m
+++ b/test/classes/@Snork/rdivide.m
@@ -1,8 +1,8 @@
-function s = rdivide(s1, s2)
+function s = rdivide (s1, s2)
 
-  x1 = double(s1);
-  x2 = double(s2);
+  x1 = double (s1);
+  x2 = double (s2);
 
   s = Snork(x1 ./ x2);
 
 end
diff --git a/test/classes/@Snork/saveobj.m b/test/classes/@Snork/saveobj.m
--- a/test/classes/@Snork/saveobj.m
+++ b/test/classes/@Snork/saveobj.m
@@ -1,6 +1,6 @@
-function [ out ] = saveobj( in )
+function out = saveobj (in)
 
   out = in;
   out.cack = [];
-        
+
 end
diff --git a/test/classes/@Snork/set.m b/test/classes/@Snork/set.m
--- a/test/classes/@Snork/set.m
+++ b/test/classes/@Snork/set.m
@@ -1,16 +1,16 @@
-function [ s ] = set( s, varargin )
+function s = set (s, varargin)
 
   propArgs = varargin;
-  while (length(propArgs) >= 2)
+  while (length (propArgs) >= 2)
     propName  = propArgs{1};
     propValue = propArgs{2};
     propArgs  = propArgs(3:end);
     switch propName
       case 'gick'
         s.gick = propValue;
       otherwise
-        error([propName, ' is not a valid Snork property']);
+        error ([propName, ' is not a valid Snork property']);
     end
   end
 
 end
diff --git a/test/classes/@Snork/subsasgn.m b/test/classes/@Snork/subsasgn.m
--- a/test/classes/@Snork/subsasgn.m
+++ b/test/classes/@Snork/subsasgn.m
@@ -1,9 +1,10 @@
 function snk = subsasgn (snk, s, val)
+
   if (length (s) < 1)
     error ('Snork: needs index');
   end
   switch (s(1).type)
     case '()'
       ind = s(1).subs;
       if (numel (ind) ~= 1)
         error ('Snork: need exactly one index');
@@ -30,9 +31,10 @@ function snk = subsasgn (snk, s, val)
       if (strcmp (fld, 'gick'))
         snk.gick = val;
       else
         error ('Snork/subsasgn: invalid property \"%s\"', fld);
       end
     otherwise
       error ('invalid subscript type');
   end
+
 end
diff --git a/test/classes/@Snork/subsindex.m b/test/classes/@Snork/subsindex.m
--- a/test/classes/@Snork/subsindex.m
+++ b/test/classes/@Snork/subsindex.m
@@ -1,5 +1,5 @@
-function [ out ] = subsindex( obj )
+function out = subsindex (obj)
 
   out = 0;
-        
+
 end
diff --git a/test/classes/@Snork/subsref.m b/test/classes/@Snork/subsref.m
--- a/test/classes/@Snork/subsref.m
+++ b/test/classes/@Snork/subsref.m
@@ -1,9 +1,10 @@
 function b = subsref (snk, s)
+
   if (isempty (s))
     error ('Snork: missing index');
   end
   switch (s(1).type)
     case '()'
       ind = s(1).subs;
       if (numel (ind) ~= 1)
         error ('Snork: need exactly one index');
@@ -22,9 +23,10 @@ function b = subsref (snk, s)
       if (strcmp (fld, 'gick'))
         b = snk.gick;
       else
         error ('Snork/subsref: invalid property \"%s\"', fld);
       end
     otherwise
       error ('invalid subscript type');
   end
+
 end
diff --git a/test/classes/@Snork/tattack.m b/test/classes/@Snork/tattack.m
--- a/test/classes/@Snork/tattack.m
+++ b/test/classes/@Snork/tattack.m
@@ -1,5 +1,5 @@
-function s = tattack(x, y)
-  
+function s = tattack (x, y)
+
   s = 'Snork';
-  
+
 end
diff --git a/test/classes/@Snork/times.m b/test/classes/@Snork/times.m
--- a/test/classes/@Snork/times.m
+++ b/test/classes/@Snork/times.m
@@ -1,8 +1,8 @@
-function s = times(s1, s2, s3)
+function s = times (s1, s2, s3)
 
-  x1 = double(s1);
-  x2 = double(s2);
+  x1 = double (s1);
+  x2 = double (s2);
 
-  s = Snork(x1 .* x2);
+  s = Snork (x1 .* x2);
 
 end
diff --git a/test/classes/@Snork/uminus.m b/test/classes/@Snork/uminus.m
--- a/test/classes/@Snork/uminus.m
+++ b/test/classes/@Snork/uminus.m
@@ -1,6 +1,6 @@
-function s = uminus(s1)
+function s = uminus (s1)
 
   s = s1;
   s.gick = - s.gick;
 
-end
\ No newline at end of file
+end
diff --git a/test/classes/@Snork/uplus.m b/test/classes/@Snork/uplus.m
--- a/test/classes/@Snork/uplus.m
+++ b/test/classes/@Snork/uplus.m
@@ -1,5 +1,5 @@
-function s = uplus(s1)
+function s = uplus (s1)
 
   s = s1;
 
 end
diff --git a/test/classes/@Snork/vertcat.m b/test/classes/@Snork/vertcat.m
--- a/test/classes/@Snork/vertcat.m
+++ b/test/classes/@Snork/vertcat.m
@@ -1,8 +1,8 @@
-function s = vertcat(s1, s2)
+function s = vertcat (s1, s2)
 
-  x1 = double(s1);
-  x2 = double(s2);
+  x1 = double (s1);
+  x2 = double (s2);
 
-  s = Snork([x1; x2]);
+  s = Snork ([x1; x2]);
 
 end
diff --git a/test/classes/@Spork/Spork.m b/test/classes/@Spork/Spork.m
--- a/test/classes/@Spork/Spork.m
+++ b/test/classes/@Spork/Spork.m
@@ -1,17 +1,16 @@
-function [ s ] = Spork( geek )
+function s = Spork (geek)
 % Test class.
 
-    if (nargin==1) && isa(geek, 'Spork')
-        s = geek;
+    if (nargin == 1 && isa (geek, 'Spork'))
+      s = geek;
     else
       s.cack = [-1 -2 -3 -4];
-      if nargin==0
+      if (nargin == 0)
         s.geek = 1;
       else
         s.geek = geek;
       end
-      s = class(s, 'Spork');
-
+      s = class (s, 'Spork');
     end
-        
+
 end
diff --git a/test/classes/@Spork/cack.m b/test/classes/@Spork/cack.m
--- a/test/classes/@Spork/cack.m
+++ b/test/classes/@Spork/cack.m
@@ -1,5 +1,5 @@
-function [ out ] = cack( in )
+function out = cack (in)
 
   out = in.cack;
-        
+
 end
diff --git a/test/classes/@Spork/display.m b/test/classes/@Spork/display.m
--- a/test/classes/@Spork/display.m
+++ b/test/classes/@Spork/display.m
@@ -1,7 +1,7 @@
-function display( s )
+function display (s)
 
-  disp([inputname(1),'.geek = '])
-  disp(' ');
-  disp(s.geek);
+  disp ([inputname(1),'.geek = ']);
+  disp (' ');
+  disp (s.geek);
 
-end
\ No newline at end of file
+end
diff --git a/test/classes/@Spork/geek.m b/test/classes/@Spork/geek.m
--- a/test/classes/@Spork/geek.m
+++ b/test/classes/@Spork/geek.m
@@ -1,10 +1,10 @@
-function [ out ] = geek( in, val )
+function out = geek (in, val)
 
-  if (nargin==1) 
+  if (nargin == 1)
     out = in.geek;
   else
     in.geek = val;
     out = in;
   end
-        
+
 end
diff --git a/test/classes/@Spork/get.m b/test/classes/@Spork/get.m
--- a/test/classes/@Spork/get.m
+++ b/test/classes/@Spork/get.m
@@ -1,10 +1,10 @@
-function [ v ] = get( s, propName )
+function v = get (s, propName)
 
-    switch propName
-        case 'geek'
-            v = s.geek;
-        otherwise
-            error([propName, ' is not a valid Spork property']);
-    end
+  switch propName
+    case 'geek'
+      v = s.geek;
+    otherwise
+      error ([propName, ' is not a valid Spork property']);
+  end
 
 end
diff --git a/test/classes/@Spork/getStash.m b/test/classes/@Spork/getStash.m
--- a/test/classes/@Spork/getStash.m
+++ b/test/classes/@Spork/getStash.m
@@ -1,5 +1,5 @@
-function [ out ] = getStash(cls)
+function out = getStash (cls)
 
   out = myStash ();
-        
+
 end
diff --git a/test/classes/@Spork/loadobj.m b/test/classes/@Spork/loadobj.m
--- a/test/classes/@Spork/loadobj.m
+++ b/test/classes/@Spork/loadobj.m
@@ -1,8 +1,8 @@
-function [ out ] = loadobj( in )
+function out = loadobj (in)
 
   out = in;
-  if (~isa(in,'Spork'))
-    out.cack=[];
+  if (~isa (in, 'Spork'))
+    out.cack = [];
   end
-        
+
 end
diff --git a/test/classes/@Spork/private/myStash.m b/test/classes/@Spork/private/myStash.m
--- a/test/classes/@Spork/private/myStash.m
+++ b/test/classes/@Spork/private/myStash.m
@@ -1,5 +1,5 @@
-function [ out ] = myStash ()
+function out = myStash ()
 
   out = 3;
-        
+
 end
diff --git a/test/classes/@Spork/saveobj.m b/test/classes/@Spork/saveobj.m
--- a/test/classes/@Spork/saveobj.m
+++ b/test/classes/@Spork/saveobj.m
@@ -1,6 +1,6 @@
-function [ out ] = saveobj( in )
+function out = saveobj (in)
 
   out = in;
-  %rmfield(out,'cack');
-        
+  %rmfield (out,'cack');
+
 end
diff --git a/test/classes/@Spork/set.m b/test/classes/@Spork/set.m
--- a/test/classes/@Spork/set.m
+++ b/test/classes/@Spork/set.m
@@ -1,16 +1,16 @@
-function [ s ] = set( s, varargin )
+function s = set (s, varargin)
 
   propArgs = varargin;
-  while (length(propArgs) >= 2)
+  while (length (propArgs) >= 2)
     propName  = propArgs{1};
     propValue = propArgs{2};
     propArgs  = propArgs(3:end);
     switch propName
       case 'geek'
         s.geek = propValue;
       otherwise
-        error([propName, ' is not a valid Spork property']);
+        error ([propName, ' is not a valid Spork property']);
     end
   end
 
 end
diff --git a/test/classes/classes.tst b/test/classes/classes.tst
--- a/test/classes/classes.tst
+++ b/test/classes/classes.tst
@@ -36,17 +36,17 @@
 %% The classes provide the ability to test most of the major features
 %% of the legacy OOP facilities.  There are a number of classes, mostly
 %% kind of the same, that create a hierarchy.
 
 %% Test the Snork class.  The Snork class has a number of the standard
 %% methods that the others don't so we can test indexing and other
 %% features.
 %!shared snk, snk1, snk2
-%!test snk = Snork();
+%!test snk = Snork ();
 %! assert (isequal (gick (snk), 1));
 %! assert (isequal (snk.gick, 1));
 %! assert (isequal (snk(2), 1));
 %! assert (isequal (snk{end}, 3));
 %!test snk = gick (snk, 2);
 %! assert (isequal (gick (snk), 2));
 %!test snk = set (snk, 'gick', 7);
 %! assert (isequal (get (snk, 'gick'), 7));
@@ -59,118 +59,118 @@
 %! assert (isobject (snk));
 %! assert (isequal (class (snk), 'Snork'));
 %! assert (isa (snk, 'Snork'));
 %! assert (~isa (snk, 'Sneetch'));
 %! assert (ismethod (snk, 'gick'));
 %! assert (~ismethod (snk, 'bletch'));
 %! assert (exist ('snk') == 1);
 %! assert (exist ('blink') == 0);
-%!test snk1 = Snork(snk);
+%!test snk1 = Snork (snk);
 %! assert (isequal (class (snk1), 'Snork'));
 %! assert (isequal (gick (snk1), 4));
-%!test snk2 = Snork(-3);
+%!test snk2 = Snork (-3);
 %! assert (isequal (class (snk2), 'Snork'));
 %! assert (isequal (gick (snk2), -3));
 %!test x = [1 2 3 4];
 %! assert (isequal (x(snk), 1));
 
 %% x = methods ('Snork');                % Need to test the methods function.
 %% save temp snk;
 %% load temp                             % This load causes a segfault.
 %% assert (isequal (cack(snk), [-1 -2 -3 -4]));      % This is a major bug!
 
 %% The Spork class is a near clone of Snork but without as many standard
 %% methods.  We are testing no new octave features, but this is makes
 %% sure that we haven't bollixed up the Spork class if we should make
 %% changes.  We use Spork in the class hierarchy.
 %!shared sprk
-%!test sprk = Spork();
+%!test sprk = Spork ();
 %! assert (isequal (geek (sprk), 1));
 %!test sprk = geek (sprk, 3);
 %! assert (isequal (geek (sprk), 3));
 %!test sprk = set (sprk,'geek',7);
 %! assert (isequal (get (sprk, 'geek'), 7));
 %! assert (isequal (class (sprk), 'Spork'));
 %! assert (isa (sprk, 'Spork'));
 
 %%  The Blork class is a near clone of Snork but without as many standard
 %%  methods.  We are testing no new octave features, but this is makes
 %%  sure that we haven't bollixed up the Blork class if we should make
 %%  changes.  We use Blork in the class hierarchy.
 %!shared blrk
-%!test blrk = Blork();
+%!test blrk = Blork ();
 %! assert (isequal (bleek(blrk), 1));
 %!test blrk = bleek (blrk, 3);
 %! assert (isequal (bleek (blrk), 3));
 %!test blrk = set (blrk, 'bleek', 13);
 %! assert (isequal (get (blrk, 'bleek'), 13));
 %! assert (isequal (class (blrk), 'Blork'));
 %! assert (isa (blrk, 'Blork'));
 
 %%  The Cork class is a near clone of Snork but without as many standard
 %%  methods.  We are testing no new octave features, but this is makes
 %%  sure that we haven't bollixed up the Cork class if we should make
 %%  changes.  We use Cork in the class hierarchy.
 %!shared crk
-%!test crk = Cork(23);
+%!test crk = Cork (23);
 %! assert (isequal (click(crk), 23));
 %!test crk = click(crk,3);
 %! assert (isequal (click(crk), 3));
 %!test crk = set (crk, 'click', 13);
 %! assert (isequal (get (crk, 'click'), 13));
 %! assert (isequal (class (crk), 'Cork'));
 %! assert (isa (crk, 'Cork'));
 
 %%  The Dork class tests single inheritance.
 %!shared drk
-%!test drk = Dork();
+%!test drk = Dork ();
 %! assert (isequal (gack (drk),0));
 %!test drk = gack (drk,-2);
 %! assert (isequal (gack (drk),-2));
 %!test drk = gick (drk,2);
 %! assert (isequal (gick (drk),2));
 %!test drk = set (drk, 'gick',3, 'gack',-3);
 %! assert (isequal (get (drk, 'gick'), 3));
 %! assert (isequal (get (drk, 'gack'), -3));
 %! assert (isequal (class (drk), 'Dork'));
 %! assert (isa (drk, 'Dork'));
 %! assert (isa (drk, 'Snork'));
 %! assert (isequal (getStash (drk), 2));
-%!test drk1 = Dork(drk);
+%!test drk1 = Dork (drk);
 %! assert (isequal (class (drk1), 'Dork'));
 %! assert (isa (drk1, 'Snork'));
 %! assert (isequal (gick (drk1), 3));
 %! assert (isequal (gack (drk1), -3));
-%!test drk2 = Dork(-4, 4);
+%!test drk2 = Dork (-4, 4);
 %! assert (isequal (class (drk2), 'Dork'));
 %! assert (isa (drk2, 'Snork'));
 %! assert (isequal (gick (drk2), -4));
 %! assert (isequal (gack (drk2), 4));
 
 %%  The Pork class is essentially a clone of Dork.  It is used as part
 %%  of the multiple inheritance test.
 %!shared prk, drk
-%!test prk = Pork();
+%!test prk = Pork ();
 %! assert (isequal (geek (prk), 1));
 %! assert (isequal (gurk (prk), 0));
 %!test prk = gurk (prk,-3);
 %! assert (isequal (gurk (prk), -3));
 %!test prk = geek (prk,9);
 %! assert (isequal (geek (prk), 9));
 %! assert (isequal (class (prk), 'Pork'));
 %! assert (isa (prk, 'Pork'));
 %! assert (isa (prk, 'Spork'));
-%!test drk = Dork();                   % Precedence.
+%!test drk = Dork ();                   % Precedence.
 %! assert (isequal (bling (drk, prk), 2));
 %! assert (isequal (bling (prk, drk), 2));
 
 %%  The Gork class tests aggregation and multiple inheritance.
 %!shared grk
-%!test grk = Gork();
+%!test grk = Gork ();
 %! assert (isequal (gick (grk), 1));
 %! assert (isequal (geek (grk), 1));
 %! assert (isequal (gack (grk), 0));
 %! assert (isequal (gurk (grk), 0));
 %! assert (isequal (bleek (grk), 1));
 %! assert (isequal (gark(grk), -2));
 %! assert (isequal (click (cork (grk)), 17));
 %! assert (isequal (class (cork (grk)), 'Cork'));
@@ -184,17 +184,17 @@
 %! assert (isequal (gick (grk), 3));
 %! assert (isequal (geek (grk), 4));
 %! assert (isequal (gack (grk), -9));
 %! assert (isequal (gurk (grk), -8));
 %! assert (isequal (bleek (grk), -7));
 %! assert (isequal (gark (grk), -6));
 %! assert (isequal (click (cork (grk)), 23));
 %!test
-%! cork1 = Cork(13);
+%! cork1 = Cork (13);
 %! grk = set (grk, 'gick', -5, 'gack', -6, 'gark', -7, 'cork', cork1);
 %! assert (isequal (get (grk, 'gick'), -5));
 %! assert (isequal (get (grk, 'gack'), -6));
 %! assert (isequal (get (grk, 'gark'), -7));
 %! assert (isequal (click(get (grk, 'cork')), 13));
 %!test grk = set (grk, 'cork', 12);
 %! assert (isequal (click(get (grk, 'cork')),12));
 %! assert (isequal (class (cork(grk)), 'Cork'));
@@ -207,31 +207,31 @@
 %! assert (isa (grk, 'Spork'));
 
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %% Testing (some) overloaded operators %%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 
 %% Common variables for testing overloaded operators
 %!shared x1, x2, x3, s1, s2, s3
-%!  x1 = 1 + rand(3);    s1 = Snork(x1);
-%!  x2 = 1 + rand(3);    s2 = Snork(x2);
-%!  x3 = diag([1 2 3]);  s3 = Snork(x3);
+%!  x1 = 1 + rand (3);    s1 = Snork (x1);
+%!  x2 = 1 + rand (3);    s2 = Snork (x2);
+%!  x3 = diag ([1 2 3]);  s3 = Snork (x3);
 
 %% Test overloaded plus (+) and uplus (unitary +) for the Snork class
 %!test  s = s1 + s2;  assert (isa (s, 'Snork') && isequal (s.gick, x1 + x2));
 %!test  s = s1 + x2;  assert (isa (s, 'Snork') && isequal (s.gick, x1 + x2));
 %!test  s = x1 + s2;  assert (isa (s, 'Snork') && isequal (s.gick, x1 + x2));
 %!test  s = +s1;      assert (isequal (s, s1));
 
 %% Test overloaded minus (-) for the Snork class
 %!test  s = s1 - s2;  assert (isa (s, 'Snork') && isequal (s.gick, x1 - x2));
 %!test  s = s1 - x2;  assert (isa (s, 'Snork') && isequal (s.gick, x1 - x2));
 %!test  s = x1 - s2;  assert (isa (s, 'Snork') && isequal (s.gick, x1 - x2));
-%!test  s = -s1;      assert (isequal (s, Snork(-x1)));
+%!test  s = -s1;      assert (isequal (s, Snork (-x1)));
 
 %% Test overloaded mtimes (*) for the Snork class
 %!test  s = s1 * s2;  assert (isa (s, 'Snork') && isequal (s.gick, x1 * x2));
 %!test  s = s1 * x2;  assert (isa (s, 'Snork') && isequal (s.gick, x1 * x2));
 %!test  s = x1 * s2;  assert (isa (s, 'Snork') && isequal (s.gick, x1 * x2));
 
 %% Test overloaded times (.*) for the Snork class
 %!test  s = s1 .* s2;  assert (isa (s, 'Snork') && isequal (s.gick, x1 .* x2));
@@ -317,17 +317,17 @@
 %% Test overloaded horzcat() for the Snork class
 %% See bug #38128 (http://savannah.gnu.org/bugs/?38128)
 %!test   s = [s1 s2];  assert (isa (s, 'Snork') && isequal (s.gick, [x1 x2]));
 %!xtest  s = [s1 x2];  assert (isa (s, 'Snork') && isequal (s.gick, [x1 x2]));
 %!xtest  s = [x1 s2];  assert (isa (s, 'Snork') && isequal (s.gick, [x1 x2]));
 
 %% Test with the Blork class, where neither vertcat() nor horzcat() is overloaded
 %!shared x1, x2, x3
-%!test x1 = Blork();
+%!test x1 = Blork ();
 %!test x2 = [x1 x1];
 %!assert (isa (x2, 'Blork') && isequal (size (x2), [1 2]));
 %!test x2 = [x1 51];
 %!assert (isa (x2, 'Blork') && isequal (size (x2), [1 2]));
 %!test x3 = [x2; x2];
 %!assert (isa (x3, 'Blork') && isequal (size (x3), [2 2]));
 %!test x3 = [x2; [51 x1]];
 %!assert (isa (x3, 'Blork') && isequal (size (x3), [2 2]));
@@ -335,28 +335,29 @@
 %!error <dimension mismatch> x4 = [x1; x3];
 
 %%%%%%%%%%%%%%%%%%%%%%%%
 %% Testing precedence %%
 %%%%%%%%%%%%%%%%%%%%%%%%
 
 %% default: leftmost object wins
 %!shared A, B
-%!test A = Snork(rand(2));
-%!test B = CPrecedenceTester1();  % no call to inferiorto/superiorto
+%!test A = Snork (rand (2));
+%!test B = CPrecedenceTester1 ();  % no call to inferiorto/superiorto
 %!assert (isequal (tattack (A, B), 'Snork'))
 %!assert (isequal (tattack (B, A), 'CPrecedenceTester1'))  % idem
 
 %!shared A, B
-%!test A = Snork(rand(2));
-%!test B = CPrecedenceTester2(1);  % CPrecedenceTester2 > Snork
+%!test A = Snork (rand (2));
+%!test B = CPrecedenceTester2 (1);  % CPrecedenceTester2 > Snork
 %!assert (isequal (tattack (A, B), 'CPrecedenceTester2'))
 %!assert (isequal (tattack (B, A), 'CPrecedenceTester2'))
 %% Trying to change to CPrecendenceTester < Snork
-%!error D = CPrecedenceTester2(2);
+%!error D = CPrecedenceTester2 (2);
 
 %!shared A, B
-%!test A = Snork(rand(2));
-%!test B = CPrecedenceTester3(2);  % CPrecedenceTester3 < Snork
+%!test A = Snork (rand (2));
+%!test B = CPrecedenceTester3 (2);  % CPrecedenceTester3 < Snork
 %!assert (isequal (tattack (A, B), 'Snork'))
 %!assert (isequal (tattack (B, A), 'Snork'))
 %% Trying to change to CPrecendenceTester3 > Snork
-%!error D = CPrecedenceTester3(1);
+%!error D = CPrecedenceTester3 (1);
+
diff --git a/test/ctor-vs-method/__trace__.m b/test/ctor-vs-method/__trace__.m
--- a/test/ctor-vs-method/__trace__.m
+++ b/test/ctor-vs-method/__trace__.m
@@ -1,18 +1,19 @@
 function r = __trace__ (t)
   persistent history
+
   if (isempty (history))
     history = {};
   end
   if (nargin == 0)
     if (nargout == 0)
       history = {};
     else
       r = history;
     end
   elseif (nargin == 1);
     history = [history; t];
   else
     error ('incorrect call to __trace__');
   end
+
 end
-    
\ No newline at end of file
diff --git a/test/error.tst b/test/error.tst
--- a/test/error.tst
+++ b/test/error.tst
@@ -14,30 +14,30 @@
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## Test %!error usage
 
 %% test/octave.test/error/error-1.m
-%!function g () 
+%!function g ()
 %!  error ("foo");
 %!endfunction
-%!function f () 
-%!  g (); 
+%!function f ()
+%!  g ();
 %!endfunction
 %!error <foo> f ()
 
 %% test/octave.test/error/error-2.m
-%!function g () 
+%!function g ()
 %!  error ("foo\n");
 %!endfunction
-%!function f () 
-%!  g 
+%!function f ()
+%!  g
 %!endfunction
 %!error <foo> f ()
 
 %% test/octave.test/error/error-3.m
 %!error error ()
 
 %% test/octave.test/error/error-4.m
 %!error <foo> error ("foo\n")
@@ -54,39 +54,39 @@
 %!warning <foo> f ()
 
 %% test/octave.test/error/warning-2.m
 %!test
 %! st.identifier = "backtrace";
 %! ws = warning ("query", "backtrace");
 %! warning ("on", "backtrace");
 %! st.state = "on";
-%! assert(warning ("query", "backtrace"), st);
+%! assert (warning ("query", "backtrace"), st);
 %! warning ("off", "backtrace");
 %! st.state = "off";
-%! assert(warning ("query", "backtrace"), st);
+%! assert (warning ("query", "backtrace"), st);
 %! warning (ws.state, "backtrace");
 
 ## Test usage() function
 
 %% test/octave.test/error/usage-1.m
-%!function g () 
+%!function g ()
 %!  usage ("foo");
 %!endfunction
-%!function f () 
-%!  g (); 
+%!function f ()
+%!  g ();
 %!endfunction
 %!error <foo> f ()
 
 %% test/octave.test/error/usage-2.m
-%!function g () 
+%!function g ()
 %!  usage ("foo");
 %!endfunction
-%!function f () 
-%!  g 
+%!function f ()
+%!  g
 %!endfunction
 %!error <foo> f ()
 
 %% test/octave.test/error/usage-3.m
 %!error usage ()
 
 %% test/octave.test/error/usage-4.m
 %!error <foo> usage ("foo\n")
diff --git a/test/eval-catch.tst b/test/eval-catch.tst
--- a/test/eval-catch.tst
+++ b/test/eval-catch.tst
@@ -43,17 +43,17 @@
 
 %% test/octave.test/eval-catch/eval-catch-7.m
 %!function ms = mangle (s)
 %!  ## Wrap angle brackets around S.
 %!  ms = cstrcat ("<", s, ">");
 %!endfunction
 %!test
 %! eval ("clear a; a; str='';", "str = mangle (lasterr);");
-%! assert (mangle(lasterr)(1:14), "<'a' undefined");
+%! assert (mangle (lasterr)(1:14), "<'a' undefined");
 %! assert (str(1:14), "<'a' undefined");
 
 %% test/octave.test/eval-catch/eval-catch-8.m
 %!test
 %! eval ("eval (\"clear a; a;str1='';\", \"str1=lasterr;\"); clear b; b; str2='';",
 %! "str2 = lasterr;");
 %! assert (str1(1:13), "'a' undefined");
 %! assert (str2(1:13), "'b' undefined");
diff --git a/test/fcn-handle-derived-resolution/@other/getsize_arrayfun.m b/test/fcn-handle-derived-resolution/@other/getsize_arrayfun.m
--- a/test/fcn-handle-derived-resolution/@other/getsize_arrayfun.m
+++ b/test/fcn-handle-derived-resolution/@other/getsize_arrayfun.m
@@ -1,3 +1,3 @@
 function r = getsize_arrayfun (x)
-  r = arrayfun (@(i) numel (x(i).d), 1:numel(x), 'uniformoutput', true);
+  r = arrayfun (@(i) numel (x(i).d), 1:numel (x), 'uniformoutput', true);
 end
diff --git a/test/for.tst b/test/for.tst
--- a/test/for.tst
+++ b/test/for.tst
@@ -101,11 +101,11 @@
 %! j = 0;
 %! for i = cat (3, a, 4 + a)
 %!   assert (i, [1;2] + 2*j++)
 %! endfor
 
 %!test
 %! a = {1,3;2,4};
 %! j = 0;
-%! for i = cat (3, a, cellfun(@(x) 4 + x, a, "UniformOutput", 0))
+%! for i = cat (3, a, cellfun (@(x) 4 + x, a, "UniformOutput", 0))
 %!   assert (i, {1 + 2*j; 2 + 2*j++})
 %! endfor
diff --git a/test/func.tst b/test/func.tst
--- a/test/func.tst
+++ b/test/func.tst
@@ -11,18 +11,18 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
-## This piece of test code ensures that all operations which work on 
-## dimensions alone (squeeze, triu, etc.) work for all objects and 
+## This piece of test code ensures that all operations which work on
+## dimensions alone (squeeze, triu, etc.) work for all objects and
 ## preserve type. Even if the object is an empty matrix. This code is
 ## not to check that the function itself returns teh correct result,
 ## just that the results are consistent for all types.
 
 %!function __fntestfunc__ (fn, mn, varargin)
 %!  typ = {"double", "complex", "logical", "sparse", "complex sparse", ...
 %!         "logical sparse", "int8", "int16", "int32", "int64", "uint8", ...
 %!         "uint16", "uint32", "uint64", "char", "cell", "struct", ...
@@ -88,31 +88,31 @@
 
 %!shared m0, m1, m2, m3
 %! m0 = [1:5];
 %! m1 = reshape ([1 : 30], [5, 6]);
 %! m2 = reshape ([1 : 30], [5, 1, 6]);
 %! m3 = [];
 
 %!test
-%! __fntestfunc__("triu", m1, {"struct"});
+%! __fntestfunc__ ("triu", m1, {"struct"});
 %!test
 %! __fntestfunc__ ("triu", m1, {"struct"}, -1);
 %!test
 %! __fntestfunc__ ("triu", m1, {"struct"}, 1);
 %!test
-%! __fntestfunc__("triu", m3, {"struct"});
+%! __fntestfunc__ ("triu", m3, {"struct"});
 %!test
 %! __fntestfunc__ ("tril", m1, {"struct"});
 %!test
 %! __fntestfunc__ ("tril", m1, {"struct"}, -1);
 %!test
 %! __fntestfunc__ ("tril", m1, {"struct"}, 1);
 %!test
-%! __fntestfunc__("tril", m3, {"struct"});
+%! __fntestfunc__ ("tril", m3, {"struct"});
 %!test
 %! __fntestfunc__ ("squeeze", m2);
 %!test
 %! __fntestfunc__ ("squeeze", m3);
 %!test
 %! __fntestfunc__ ("permute", m1, [2, 1]);
 %!test
 %! __fntestfunc__ ("permute", m2, {"sparse", "logical sparse", "complex sparse"}, [3, 1, 2]);
diff --git a/test/global.tst b/test/global.tst
--- a/test/global.tst
+++ b/test/global.tst
@@ -31,17 +31,17 @@
 %! f;
 
 %% test/octave.test/global/global-3.m
 %!function f ()
 %!  fail ("G");
 %!endfunction
 %!test
 %! global G = 1;
-%! f();
+%! f ();
 
 %% test/octave.test/global/global-4.m
 %!function f ()
 %!  global H = 1;
 %!endfunction
 %!test
 %!  f;
 %!  fail ("H");
@@ -49,29 +49,29 @@
 %% test/octave.test/global/global-5.m
 %!function f ()
 %!  global H = 1;
 %!endfunction
 %!test
 %!function g ()
 %!  fail ("H");
 %!test
-%! g();
+%! g ();
 
 %% test/octave.test/global/global-6.m
 %!function f ()
 %!  global H = 1;
 %!endfunction
 %!function g ()
 %!  global H;
 %!  assert (H,1);
 %!endfunction
 %!test
-%! f();
-%! g();
+%! f ();
+%! g ();
 
 %% test/octave.test/global/global-7.m
 %!test
 %!function f ()
 %!  global H = 1;
 %!endfunction
 %!test
 %! fail ("H");
diff --git a/test/index.tst b/test/index.tst
--- a/test/index.tst
+++ b/test/index.tst
@@ -21,17 +21,17 @@
 %! assert (isempty (a));
 
 %!shared a
 %! a = 1;
 %!assert (a(1), 1)
 %!assert (a(:), 1)
 %!assert (a(:,:), 1)
 %!assert (a(1,:), 1)
-%!assert (a(:,1),1)
+%!assert (a(:,1), 1)
 %!assert (isempty (a(logical (0))))
 %!error a(-1)
 %!error a(2)
 %!error a(2,:)
 %!error a(:,2)
 %!error a(-1,:)
 %!error a(:,-1)
 %!error a([1,2,3])
@@ -114,29 +114,29 @@
 
 %!test
 %! c (1:10,1) = 1:10;
 %! assert (c, [1:10]');
 
 %!assert (b(:), [1; 3; 2; 4; 5; 7; 6; 8])
 %!assert (b(:,:), [1, 2, 5, 6; 3, 4, 7, 8])
 %!assert (b(:,1), [1;3])
-%!assert (b(:,:,:), reshape ([1,3,2,4,5,7,6,8],[2,2,2]))
+%!assert (b(:,:,:), reshape ([1,3,2,4,5,7,6,8], [2,2,2]))
 %!assert (b(:,1,1), [1;3])
-%!assert (b(:,1,1,[1,1]),reshape ([1,3,1,3],[2,1,1,2]))
+%!assert (b(:,1,1,[1,1]),reshape ([1,3,1,3], [2,1,1,2]))
 %!assert (b(1,3), 5)
 %!assert (b(1,[3,4]), [5,6])
 %!assert (b(1,1:4), [1,2,5,6])
 %!assert (b(1,[],:), zeros (1,0,2))
-%!assert (b(1,[]), zeros(1,0))
+%!assert (b(1,[]), zeros (1,0))
 %!assert (b(:,3), [5;7])
 %!assert (b([1,2],3), [5;7])
-%!assert (b(true(2,1),3), [5;7])
-%!assert (b(false(2,1),3), zeros(0,1))
-%!assert (b([],3), zeros(0,1))
+%!assert (b(true (2,1), 3), [5;7])
+%!assert (b(false (2,1), 3), zeros (0,1))
+%!assert (b([],3), zeros (0,1))
 
 %!shared x
 %! # Dummy shared block to clear any previous definitions
 %! x = 1;
 
 %!test
 %! a(1,:) = [1,3];
 %! assert (a, [1,3]);
@@ -155,17 +155,17 @@
 %! assert (b, reshape (a, [1,2,2]));
 
 %!test
 %! a(1,1:4,2) = reshape (1:4, [1,1,4]);
 %! b(:,:,2) = 1:4;
 %! assert (a, b);
 
 %!test
-%! a(:,:,:) = 1:4; 
+%! a(:,:,:) = 1:4;
 %! assert (a, [1:4]);
 
 %!test
 %! a(:,:,1) = 1:4;;
 %! assert (a, [1:4]);
 
 %!test
 %! a(:,:,1) = [1:4]';
diff --git a/test/io.tst b/test/io.tst
--- a/test/io.tst
+++ b/test/io.tst
@@ -11,17 +11,17 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
-## FIXME -- we should skip (or mark as an expected failure) the test for
+## FIXME: we should skip (or mark as an expected failure) the test for
 ## saving sparse matrices to MAT files when using 64-bit indexing since
 ## that is not implemented yet.
 
 %% test/octave.test/io/load-save.m
 %!function [ret, files] = testls (input)
 %!  ## flag a1 global so as to test the storage of global flags
 %!  global a1;
 %!
@@ -30,21 +30,21 @@
 %!    input = 0;
 %!  endif
 %!
 %!  ## Setup some variable to be saved or compared to loaded variables
 %!
 %!  ## scalar
 %!  a1 = 1;
 %!  ## matrix
-%!  persistent a2 = hilb(3);
+%!  persistent a2 = hilb (3);
 %!  ## complex scalar
 %!  persistent a3 = 1 + 1i;
 %!  ## complex matrix
-%!  persistent a4 = hilb(3) + 1i*hilb(3);
+%!  persistent a4 = hilb (3) + 1i*hilb (3);
 %!  ## bool
 %!  persistent a5 = (1 == 1);
 %!  ## bool matrix
 %!  persistent a6 = ([ones(1,5), zeros(1,5)] == ones (1,10));
 %!  ## range
 %!  persistent a7 = 1:10;
 %!  ## structure
 %!  persistent a8 = struct ("a", a1, "b", a3);
@@ -114,21 +114,21 @@
 %!        endif
 %!      endif
 %!
 %!      assert ([a7], [b7], tol);
 %!
 %!      if (! isequal (a8, b8))
 %!        error ("failed: %s struct", file);
 %!      endif
-%!      
+%!
 %!      if (! isequal (a9, b9))
 %!        error ("failed: %s cell", file);
 %!      endif
-%!      
+%!
 %!      if (! isequal (a10, b10))
 %!        error ("failed: %s string", file);
 %!      endif
 %!
 %!      if (! isequal (a11, b11))
 %!        error ("failed: %s int8", file);
 %!      endif
 %!
@@ -166,57 +166,57 @@
 %!      ## Test for global flags
 %!      if (! isglobal ("a1") || isglobal ("a2") || isglobal ("a3")
 %!          || isglobal ("a4") || isglobal ("a5") || isglobal ("a6")
 %!          || isglobal ("a7") || isglobal ("a8") || isglobal ("a9")
 %!          || isglobal ("a10") || isglobal ("a11") || isglobal ("a12")
 %!          || isglobal ("a13") || isglobal ("a14") || isglobal ("a15")
 %!          || isglobal ("a16") || isglobal ("a17") || isglobal ("a18")
 %!          || isglobal ("a19") || isglobal ("a20"))
-%!        error ("failed: %s global test", file); 
+%!        error ("failed: %s global test", file);
 %!      endif
 %!    endfor
 %!  endif
 %!
 %!  ret = 1;
 %!endfunction
 
 %!test
-%! 
+%!
 %! [save_status, save_files] = testls (0);
 %! [load_status, load_files] = testls (1);
-%! 
+%!
 %! for f = [save_files, load_files]
 %!   unlink (f{1});
 %! endfor
-%! 
+%!
 %! assert (save_status && load_status);
 
 %!test
-%! 
+%!
 %! STR.scalar_fld = 1;
 %! STR.matrix_fld = [1.1,2;3,4];
 %! STR.string_fld = "Octave";
 %! STR.struct_fld.x = 0;
 %! STR.struct_fld.y = 1;
-%! 
+%!
 %! save struct.dat -struct STR;
 %! STR = load ("struct.dat");
 %!
 %! assert (STR.scalar_fld == 1 && ...
 %!         STR.matrix_fld == [1.1,2;3,4] && ...
 %!         STR.string_fld == "Octave" && ...
 %!         STR.struct_fld.x == 0 && ...
 %!         STR.struct_fld.y == 1 );
 %!
 %!
 %! save -binary struct.dat -struct STR matrix_fld str*_fld;
 %! STR = load ("struct.dat");
 %!
-%! assert (!isfield(STR,"scalar_fld") && ...
+%! assert (!isfield (STR,"scalar_fld") && ...
 %!         STR.matrix_fld == [1.1,2;3,4] && ...
 %!         STR.string_fld == "Octave" && ...
 %!         STR.struct_fld.x == 0 && ...
 %!         STR.struct_fld.y == 1);
 %!
 %! delete struct.dat;
 
 %!test
@@ -277,17 +277,17 @@
 %! assert (msg, "");
 %! assert (pos, 6);
 
 %% test/octave.test/io/sscanf-1.m
 %!test
 %! [a, b, c] = sscanf ("1.2 3 foo", "%f%d%s", "C");
 %! [v1, c1, m1] = sscanf ("1 2 3 4 5 6", "%d");
 %! [v2, c2, m2] = sscanf ("1 2 bar 3 4 5 6", "%d");
-%! 
+%!
 %! assert ((a == 1.2 && b == 3 && c == "foo"
 %! && v1 == [1; 2; 3; 4; 5; 6] && c1 == 6 && ischar (m1)
 %! && v2 == [1; 2] && c2 == 2 && ischar (m2)));
 
 %% test/octave.test/io/sscanf-2.m
 %!error <Invalid call to sscanf> sscanf ()
 
 %% test/octave.test/io/sscanf-3.m
@@ -300,50 +300,50 @@
 %!test
 %! [x, n] = sscanf ("   0.024000 0.200 0.200 2.000         1987           5           0  0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0    0 2 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 2 0 0 1 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0    0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 4 5 1 2    2 5 5 8 2 8 12 6 15 18 28 26 47 88 118 162 192 130 88 56 27 23 14 9 6 3 4 1 0    2 3 1 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0    1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0   0.026000 0.250 0.250 2.100         3115           3           0  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0    0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 0 0 0 0    0 0 0 0 1 0 1 0 0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 1 1 0 1    1 1 0 1 0 1 3 2 0 5 15 25 44 66 145 179 193 172 104 57 17 11 12 2 1 0 1 1 0 1    0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0    0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0   0.028000 0.300 0.300 2.200         4929           3           0  1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0    0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0    0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 1 0    1 0 1 0 1 2 2 3 2 3 14 21 49 80 148 184 218 159 124 63 37 13 12 3 1 1 0 0 0 0    0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 0 0    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0    0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0   0.030000 0.350 0.350 2.300         7051           5           0  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 0 1 0 0    0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1    0 0 1 0 0 0 2 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1    0 0 0 2 0 0 0 1 5 6 14 28 51 88 154 177 208 169 124 65 39 15 5 3 3 2 1 0 1 0 1   0 0 0 0 1 1 1 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 1 0 0 0    0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0   0.032000 0.400 0.400 2.400         9113           4           0  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0    1 0 0 0 0 2 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0    0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 2 0    1 0 0 1 1 0 2 3 5 3 17 30 60 117 156 189 209 129 102 64 56 16 11 4 2 2 0 0 0 0   1 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0    1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0   0.034000 0.450 0.450 2.500        11811           6           0  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0    0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0    0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0    0 0 2 1 0 0 1 0 5 5 15 21 57 99 149 190 195 159 130 69 41 16 10 2 5 3 0 1 0 0    0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0    0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0   0.036000 0.500 0.500 2.600        14985           3           0  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0    0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 1 0 0 1 0 0 0 0    0 0 0 0 1 0 0 2 2 6 10 34 60 95 126 177 194 155 99 71 44 17 6 7 2 0 0 0 3 0 0    1 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 1 0 0    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0   0.038000 0.550 0.550 2.700        18391           3           0  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0    0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 2    1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 2 0 0 1 1 0 1    2 1 0 0 0 1 0 1 3 6 19 27 52 95 161 154 169 134 94 64 37 19 9 6 0 2 1 0 0 0 0    1 2 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 2 2 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0    0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0   0.040000 0.600 0.600 2.800        22933           5           0  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0    0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 1 0    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 0 1    0 0 0 0 0 2 0 3 4 7 18 27 47 82 134 163 133 138 101 58 34 26 10 5 2 1 2 1 1 0    2 1 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0    0 0 0 0 0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0   0.042000 0.650 0.650 2.900        27719           5           0  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0    0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0    0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0    0 0 1 0 0 0 1 1 2 8 16 37 51 87 128 153 146 123 105 62 35 24 8 3 5 0 1 2 1 0 0   0 1 1 1 0 0 0 1 0 1 0 0 2 1 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 1 0 0 0 0 0    0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0   0.044000 0.700 0.700 3.000        32922           5           0  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 2 0    0 0 0 0 0 0 0 2 1 0 0 0 0 1 1 1 1 0 0 1 0 0 0 1 0 0 0 0 0 0 1 1 0 0 0 1 0 1 1    1 1 0 0 0 1 4 3 5 5 15 35 54 88 132 168 149 105 92 62 30 16 17 4 5 1 0 0 1 0 1   1 0 1 1 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 0 0 0 0 0 0 0    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0   0.046000 0.750 0.750 3.100        38973           3           0  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 0 0    0 0 0 1 0 0 0 4 3 5 20 37 56 94 110 135 149 124 84 58 36 17 14 7 1 0 2 0 1 0 0   1 1 0 0 0 0 0 1 1 0 0 0 1 0 1 1 0 0 1 1 1 0 0 0 0 1 1 0 0 1 0 0 0 0 1 0 0 0 1    1 0 1 0 1 0 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0    1 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0   0.048000 0.800 0.800 3.200        45376           5           0  1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0    0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0    0 0 0 0 0 0 0 1 0 0 0 1 1 0 0 1 1 0 0 2 1 1 2 0 0 0 1 0 0 0 0 0 1 0 0 0 0 1 0    0 0 0 1 0 0 0 0 1 3 18 34 55 82 104 135 116 99 79 60 51 29 10 4 3 1 1 1 0 0 1    0 0 0 1 0 0 3 1 2 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 1    0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0    1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0   0.050000 0.850 0.850 3.300        52060           3           0  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0    0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 1 0 0    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 1 1 0 0 0 0 1 1 0 0 0 1    0 0 0 0 0 2 2 1 3 12 24 40 39 107 121 127 138 100 86 68 44 23 15 7 3 1 1 0 1 1   0 0 2 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 1 0 0 1 1 0 1 0 0 0 2 0 0 0 1 0 0 0    0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0   0.052000 0.900 0.900 3.400        59454           3           0  0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 1    0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0    0 0 0 0 0 1 0 0 0 0 0 2 0 0 0 0 0 0 1 0 0 0 0 1 0 1 0 1 0 0 2 0 2 1 0 0 0 1 0    0 1 0 0 0 0 0 3 3 6 21 32 68 90 132 111 122 107 73 57 47 24 11 7 4 2 2 1 0 0 0   0 0 0 0 0 1 0 0 1 0 0 2 0 1 1 0 0 1 0 0 0 0 0 3 0 1 0 0 0 0 1 1 0 0 0 1 0 0 0    0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0    0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0   0.054000 0.950 0.950 3.500        67013           3           0  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 1 0 1 0 0 0 0 1 0 0 1 1 0 0 0    1 0 1 0 1 2 4 3 7 9 28 31 71 94 115 96 108 78 82 60 38 17 12 11 4 3 1 1 0 2 1    0 0 0 2 1 3 0 0 0 0 3 0 0 1 0 0 0 0 0 0 0 2 0 0 0 1 0 2 0 1 0 2 0 1 0 0 1 0 0    0 1 0 0 0 1 0 0 1 0 1 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0    0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0   0.056000 1.000 1.000 3.600        75475           3           0  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0    0 2 0 0 0 0 0 0 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 1 3 0 0 1    1 2 0 1 4 0 1 8 6 7 17 41 56 71 109 113 84 103 72 54 35 22 6 9 1 7 5 4 0 0 1 0   0 0 0 0 0 1 0 0 2 1 0 0 0 0 2 0 0 1 0 0 1 0 0 0 0 0 0 1 0 2 0 1 0 0 0 0 1 0 1    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 3 0 0 0 1 0 0 0 0 0 0 1 1 0 0 2 0 0 0 0    0 0 0 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0   0.058000 1.050 1.050 3.700        83558           3           0  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0    0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0    0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 1 2 0 0    2 0 0 1 0 3 2 3 6 15 27 41 77 73 94 94 92 76 61 56 42 23 13 11 6 2 1 2 0 1 2 0   0 1 0 1 0 0 1 0 0 1 1 1 0 0 0 1 0 0 0 1 0 0 0 0 1 1 0 0 0 0 2 0 0 0 0 0 1 2 0    0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0    0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0   0.060000 1.100 1.100 3.800        93087           3           0  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1    0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0    0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 1 2 2 0 0 0 1 0 1 1 0 0 0 1 1 0 4    0 0 1 2 0 3 1 3 5 13 33 31 65 75 77 96 97 80 59 45 36 32 18 2 5 0 1 0 0 1 0 0    3 0 0 0 0 1 0 0 0 0 0 1 0 0 1 2 0 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 2 0 0 2 0 1 0    0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0    0 1 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0   0.062000 1.150 1.150 3.900       102829           3           0  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0    0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 1 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0    0 0 0 0 0 1 1 1 0 0 0 0 1 1 0 0 1 0 1 0 0 0 0 0 1 1 1 0 1 0 1 1 0 1 1 0 2 0 2    1 2 0 0 2 4 3 5 11 9 23 43 53 68 65 87 83 77 59 49 34 18 15 9 4 2 3 2 0 0 0 4    0 1 1 0 0 2 0 0 1 0 0 0 0 1 1 1 0 1 0 0 0 0 2 0 0 0 0 1 0 0 1 1 1 1 0 0 0 1 0    0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 1 0 0 1 0 1 0 0 0 0 0 0 1 0 0 0    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0   0.064000 1.200 1.200 4.000       113442           3           0  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0    0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 1 0 1 0 0 1 0 0 0 1 0 0 0 0 0 1 0 0 0    0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 1 0 0 0 0 1 0 0 0 1 0 1 1 1 0 1 1 1 1 1 0 0 0 1    2 0 0 0 2 0 4 5 11 13 29 39 61 68 61 75 76 74 73 44 37 29 19 6 3 3 2 0 1 2 1 0   0 0 0 1 1 1 0 1 1 0 0 0 1 0 1 1 0 1 2 0 2 1 1 1 0 0 0 0 1 0 0 1 1 1 1 1 0 0 0    0 0 0 0 1 0 0 0 0 2 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0    0 1 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0   0.066000 1.250 1.250 4.100       126668           3           0  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0    0 0 1 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 1    0 0 0 0 0 1 0 0 0 0 0 1 0 0 1 1 0 0 0 1 1 2 3 0 2 1 2 0 1 0 3 0 0 0 1 0 1 1 3    0 0 1 3 0 2 4 3 12 12 30 48 56 66 77 78 71 82 52 31 32 19 20 16 8 2 1 3 0 0 2    1 0 1 0 1 0 0 0 1 3 1 0 1 0 1 1 1 0 0 0 0 0 2 0 2 0 0 0 0 0 1 0 0 0 0 1 1 0 0    0 0 0 1 0 0 0 0 0 2 0 3 1 0 0 1 0 0 0 0 0 0 1 0 1 1 0 0 0 1 0 0 0 0 1 0 0 0 0    0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0   0.068000 1.300 1.300 4.200       138042           3           0  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 0 2 0 0 1 0 1 0 0 0 0 0    0 0 0 1 0 0 2 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0    0 1 0 0 0 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 3 0 0 1 0 0 1 2 0 0 0 3 0 1 0 0 3 0    1 0 1 1 3 1 4 7 11 14 27 36 44 68 72 70 71 45 44 46 29 13 16 11 5 2 0 3 0 0 0    0 1 1 2 0 0 1 1 2 1 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 1 2 0 0 1 1 0 1 1 1 0    0 1 0 0 1 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0    0 0 0 1 0 0 1 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0   0.070000 1.350 1.350 4.300       152335           3           0  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0    0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 2 0 0 0 1 0 0 0 0 0 0 0 0 1 0 1 0    1 0 0 0 2 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 2 0 0 0 0 1 1 1 0 1 1 0 1 1 1 1 0 2 0    0 0 0 0 2 0 1 7 14 19 34 35 54 72 68 72 68 58 48 36 37 27 25 17 1 4 1 0 0 0 1    2 2 0 0 1 1 1 2 1 0 3 1 0 1 0 2 1 0 0 0 1 1 1 2 0 0 0 0 1 1 0 1 1 0 2 1 1 1 1    0 0 0 1 1 0 0 2 0 0 1 0 0 0 1 1 0 2 1 1 0 0 0 0 2 0 0 0 0 0 0 0 1 1 0 0 0 0 1    0 0 1 0 0 0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0   0.072000 1.400 1.400 4.400       166280           4           0  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0    0 1 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 1 0 1 1 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0    2 0 0 0 0 0 0 0 1 0 1 0 1 1 1 0 0 1 0 1 0 0 3 4 2 2 0 0 0 0 0 1 1 3 1 0 3 2 2    1 2 2 0 2 2 1 8 14 26 24 29 47 47 68 65 63 55 42 41 26 29 17 8 4 4 1 0 1 2 0 0   0 1 1 2 0 1 2 1 0 0 1 1 1 0 0 1 0 0 0 1 0 0 1 2 1 2 1 0 0 0 0 0 1 1 2 0 2 2 0    0 0 0 1 1 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 1 0 0    0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0   0.074000 1.450 1.450 4.500       179484           3           0  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 1 0 0 1 0 0 0    1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 2 1 0 0 1 0 1 0 0 1 0 1 2 0 0 0 0 0 0 0 0 0 1 0    0 0 1 0 1 0 1 0 1 1 0 0 0 0 0 0 0 0 1 1 0 0 0 1 0 1 1 0 1 1 1 2 0 0 1 1 2 1 0    1 1 2 2 0 1 5 6 10 20 43 50 57 62 53 62 66 45 42 33 27 26 23 14 3 0 2 0 1 0 0    1 1 0 0 2 1 1 0 0 3 0 1 1 1 0 1 1 0 1 0 1 2 1 0 0 1 2 0 2 0 0 0 0 1 1 3 1 0 0    2 1 1 1 0 0 0 0 0 0 1 2 0 1 0 0 0 0 0 1 1 0 2 0 0 0 0 0 1 0 2 1 0 0 0 0 0 0 1    0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0   0.076000 1.500 1.500 4.600       197657           3           0  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 1 1 0 0 0 0 0 0 1 0 1 0    0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 1 2 0 0 0 1 0 0 0 0    0 0 1 0 1 0 0 0 0 0 0 0 0 1 2 0 0 0 2 1 1 0 1 1 0 1 1 3 2 1 1 2 1 0 1 0 0 0 0    0 1 1 1 0 5 3 7 12 24 38 32 41 48 54 66 71 49 46 31 38 25 15 8 6 6 5 0 1 3 0 1   1 1 1 1 0 1 2 0 1 0 0 0 1 0 2 1 2 0 0 0 0 1 3 1 0 0 0 0 1 1 0 1 0 1 1 1 1 1 0    4 1 1 1 0 3 0 0 0 2 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0    0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0   0.078000 1.550 1.550 4.700       212054           3           0  0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 1 0 0 1 0 0 0 0    0 1 0 1 1 0 0 1 0 0 1 0 0 0 0 0 0 0 1 1 1 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1    0 0 2 0 0 0 1 0 0 1 0 1 1 0 1 3 1 0 0 1 2 0 0 0 1 0 0 0 0 0 2 1 2 1 1 1 0 0 1    5 1 1 2 3 5 7 9 11 22 31 37 48 50 52 54 57 37 38 38 33 24 11 19 11 3 1 2 0 3 3   2 1 0 1 3 0 1 1 1 1 1 2 0 0 0 1 1 2 0 1 1 3 0 1 1 0 0 1 0 2 0 1 0 0 1 3 0 2 0    1 0 1 2 0 1 1 1 1 1 0 3 0 1 0 0 0 1 0 0 0 1 0 1 0 0 0 0 0 0 1 1 0 0 0 0 0 1 0    0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 0 0 0 0   0.080000 1.600 1.600 4.800       231971           3           0  0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 1 1 1 0 1 0 0 0 0 1 0 1 1    0 0 0 0 2 0 0 0 1 0 0 0 0 0 1 0 0 0 0 1 2 1 0 1 1 1 0 1 0 0 1 0 1 3 0 0 0 1 0    0 0 1 1 1 0 0 4 1 1 0 2 0 1 1 1 2 0 0 0 1 0 1 2 1 2 3 2 0 1 0 4 3 1 1 1 1 3 1    0 0 0 2 1 0 2 7 17 13 29 47 58 59 52 38 51 51 38 34 35 21 14 13 4 1 0 1 1 1 0    2 2 4 1 0 1 1 4 0 0 0 2 0 2 2 2 0 0 1 3 2 1 1 2 2 2 2 1 0 3 0 2 1 2 1 2 2 0 0    1 1 0 2 0 2 2 0 1 0 2 2 3 1 2 3 1 1 0 1 0 2 0 1 2 1 2 0 2 1 0 0 3 0 0 1 1 1 1    0 0 1 0 0 1 0 0 0 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0   0.082000 1.650 1.650 4.900       252503           3           0  0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 2 0 0    0 0 0 0 0 1 0 0 0 1 1 0 0 1 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0    0 0 0 0 2 0 0 1 0 1 2 2 2 1 0 2 0 1 0 1 1 2 2 0 3 0 0 4 1 0 0 3 0 0 1 2 0 1 1    1 3 0 1 0 2 9 11 25 27 34 53 41 49 43 47 36 31 38 22 30 22 18 9 5 9 2 2 1 2 2    3 1 4 1 1 0 0 1 2 0 2 1 0 0 1 3 2 2 1 0 0 0 1 2 1 0 0 0 2 1 1 0 2 0 0 1 0 0 2    1 3 1 1 1 0 2 1 1 0 2 1 0 1 3 0 0 0 0 2 0 0 1 0 0 0 0 0 1 2 1 1 1 0 2 1 0 0 0    2 0 1 0 0 0 0 1 0 0 0 0 1 0 0 2 0 1 0 1 0 0 0 0 0 0 0 0 0 0   0.084000 1.700 1.700 5.000       267889           3           0  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 0 1 1 0 0 0 0 0 0 0 1 0 1    0 1 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 1 0 0 0 1 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0    0 1 0 1 1 0 3 0 1 1 1 0 1 2 1 0 2 0 2 4 0 1 0 0 0 1 1 0 1 3 2 0 2 0 4 0 0 2 0    1 4 2 4 3 3 6 10 14 28 37 54 36 40 52 40 50 46 40 32 26 29 12 18 5 2 0 2 4 1 2   1 0 2 1 2 2 1 0 1 0 2 1 2 4 1 1 5 1 0 2 0 1 2 3 2 2 1 2 1 0 2 1 2 1 1 4 1 2 1    4 0 2 2 0 0 3 1 0 2 0 0 1 1 1 0 0 2 1 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 0 0 0 1 0    0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0   0.086000 1.750 1.750 5.100       290294           3           0  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 2 0 0 0 1 0 0 0 0 1 0 1 0 0 1 0 0 0 0 0 0    0 0 0 0 1 0 0 0 0 1 0 0 0 1 1 3 1 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1 0 0 2    1 0 1 0 1 0 0 2 2 0 1 2 2 0 2 0 2 0 1 0 0 1 1 1 3 1 1 1 1 3 4 1 1 2 2 2 1 0 3    0 0 0 2 4 5 6 16 18 20 31 40 54 55 46 41 52 35 27 21 28 27 20 15 8 6 7 1 0 0 3   0 0 2 2 0 3 1 3 1 1 2 0 0 1 2 1 3 2 0 1 2 1 3 1 1 1 1 1 2 0 2 1 0 1 1 1 3 1 1    2 0 1 0 1 0 2 1 1 0 0 1 2 0 3 1 1 0 0 0 1 3 1 1 1 0 0 1 2 1 0 0 1 1 1 0 0 1 0    0 0 0 0 0 2 0 1 0 0 0 2 1 0 2 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0   0.088000 1.800 1.800 5.200       312476           6           0  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 1 0 0 0 1 0 1 0 1 1 0 0 0 0    0 0 2 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 2 0 0 0 1 0 1 0 0 0 0 0 0 2    1 0 0 1 0 0 1 1 1 1 4 2 0 1 0 0 3 0 0 0 0 0 1 1 4 0 0 0 0 1 1 2 1 0 3 0 0 2 2    4 0 3 1 6 9 10 13 21 24 32 43 33 41 43 49 50 32 26 31 27 12 16 17 3 3 3 5 0 3    0 2 1 3 3 2 1 2 3 1 2 1 1 1 2 0 1 1 0 2 0 3 0 0 2 0 0 0 0 1 0 1 1 3 3 0 1 1 1    1 1 1 2 2 2 0 3 1 0 2 2 2 0 0 0 0 3 1 2 5 1 1 2 0 0 3 3 0 2 2 0 0 0 0 1 2 0 0    1 0 0 1 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0   0.090000 1.850 1.850 5.300       337348           3           0  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 2 0 1 0 1 0 0 0 1 0 0 0    0 0 0 1 0 0 0 0 2 0 1 1 0 0 0 1 0 1 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 1 1 0 0 0 0    2 0 0 0 1 3 2 0 0 2 2 3 3 2 2 2 0 0 1 1 3 1 3 0 0 0 0 0 0 1 2 1 2 1 2 2 2 0 1    1 0 4 2 2 7 6 15 22 21 39 37 50 31 51 30 33 34 34 26 21 14 13 10 9 4 3 3 4 2 2   0 1 2 3 3 0 1 3 2 5 3 2 2 4 0 2 3 0 4 2 1 2 2 2 4 2 1 3 1 3 2 1 3 1 2 4 1 1 1    1 2 4 1 3 3 3 1 0 4 1 0 1 1 1 1 2 3 0 3 0 0 4 1 1 1 0 2 2 2 1 2 2 0 1 1 0 0 0    2 0 1 0 1 0 0 1 0 0 0 1 3 0 0 1 0 0 1 1 1 0 0 1 0 0 0 0 0 0   0.092000 1.900 1.900 5.400       357303           3           0  0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 1 0 0 1 1 0 1 0 0 1 0    0 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 1 3 1 0 1 0 0 0 0 1 0 0 1 0 0 1 1 2 2 0 0 2    2 1 1 1 1 1 1 0 1 0 0 1 1 1 3 1 1 1 1 1 0 1 4 0 1 1 1 3 0 1 1 2 2 2 0 2 3 2 2    2 2 1 2 1 3 8 22 14 32 36 46 39 42 39 29 36 38 26 24 26 18 16 19 10 9 3 6 5 0    3 2 1 1 1 2 0 2 1 1 0 1 1 3 1 0 2 4 2 2 1 4 1 2 2 1 1 0 1 2 0 2 2 2 4 2 1 1 0    2 1 3 1 2 3 4 2 3 2 3 0 1 2 1 0 0 0 4 1 1 1 2 1 3 1 0 5 1 0 0 0 0 0 0 1 0 2 0    1 2 1 0 1 0 0 0 0 0 1 1 0 1 0 1 4 0 0 0 1 0 1 0 0 0 0 0 0 0 0   0.094000 1.950 1.950 5.500       383138           3           0  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 1 1 1 1 0 1 0 0 0 1 0 0 0 0 0 1 0    0 0 1 0 0 2 1 0 1 1 1 0 0 0 0 0 0 1 1 0 1 0 0 1 1 0 1 0 0 0 0 0 0 0 2 1 1 1 1    2 1 0 2 0 1 0 3 2 1 3 0 1 3 1 1 0 5 0 1 0 1 2 0 0 1 1 2 0 0 6 1 0 3 2 2 3 4 5    0 4 2 1 5 4 11 15 22 27 28 57 38 38 40 38 39 38 27 26 30 18 14 10 10 4 4 4 3 3   2 2 2 2 1 1 1 1 2 2 3 4 1 2 3 1 2 1 2 2 2 1 3 2 1 5 0 1 1 1 3 2 2 2 1 3 1 1 0    3 2 2 0 0 2 2 2 0 0 0 2 0 1 3 1 2 3 2 1 1 0 1 1 1 0 3 2 2 1 0 0 1 3 1 1 0 1 0    0 0 0 0 1 0 0 0 0 1 0 0 3 1 0 0 0 0 1 0 1 1 0 0 0 1 0 0 0 0 0   0.096000 2.000 2.000 5.600       409868           3           0  0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 1 0 1 0 1 0 2 0 0    1 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 2 0 1 0 0 2 0 2 0 0 0 0 1 0 0 2 1    2 2 2 1 2 1 1 1 1 1 2 0 0 1 1 0 1 0 2 1 2 0 2 0 3 1 2 1 3 1 5 0 2 2 1 2 4 1 2    0 3 1 4 7 5 9 13 22 19 31 27 28 41 34 39 37 22 23 21 22 17 23 15 8 9 3 8 0 3 1   2 2 2 3 1 0 4 2 4 2 2 2 2 4 2 1 1 0 2 0 3 0 3 2 2 1 2 2 1 4 1 2 2 1 1 5 2 1 2    1 2 2 1 0 2 4 3 2 1 2 2 3 2 3 1 2 1 1 1 1 2 1 1 2 2 1 2 3 2 1 1 0 2 2 4 0 1 1    1 1 1 0 0 1 1 3 0 0 0 0 0 1 0 0 2 0 1 2 0 1 1 1 0 1 0 1 0 0   0.098000 2.050 2.050 5.700       439102           3           0  0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 1 1 0 0 1 0 1 0 1 0 0 0 0 1 1 0 1 0 0 1 1 0    0 1 1 0 0 1 1 0 1 0 0 0 0 0 0 0 1 2 0 0 1 1 1 1 2 0 1 1 0 0 0 0 1 1 1 0 4 0 0    0 2 1 1 0 3 4 0 1 2 2 1 0 3 0 3 2 0 0 2 0 1 0 0 1 0 1 3 1 3 5 0 2 2 3 5 2 2 2    0 3 2 3 6 5 16 21 19 23 28 29 35 42 42 44 39 33 23 30 18 25 24 15 13 5 4 2 2 0   3 3 0 0 1 3 0 1 1 3 2 4 3 4 2 1 1 1 3 1 0 0 2 2 4 2 2 1 4 2 4 2 2 2 1 2 2 1 2    0 4 2 2 3 1 2 1 1 2 2 1 2 4 2 1 4 1 2 2 2 2 0 2 0 3 0 1 0 2 1 0 4 2 1 3 2 1 0    2 1 1 1 1 0 1 1 2 1 1 1 2 0 1 0 2 1 1 0 0 1 0 0 1 0 0 0 0 0 0   0.100000 2.100 2.100 5.800       467340           3           0  0 0 0 0 0 0 0 0 0 0 0 0 0 2 1 0 0 1 0 0 1 2 0 0 0 0 0 1 0 2 0 0 2 0 0 1 1 0 0    0 1 0 0 1 1 0 0 0 0 1 1 0 0 1 0 0 1 0 0 0 1 1 0 0 0 0 0 1 0 1 0 0 0 0 1 2 0 2    2 4 1 0 1 1 2 3 4 1 4 1 5 1 2 1 0 2 2 2 1 5 4 1 5 4 0 1 2 4 2 2 0 2 1 2 5 4 1    1 1 2 5 7 9 16 23 31 15 22 36 36 44 42 29 31 28 28 18 35 12 10 13 8 4 3 2 2 5    1 2 3 3 1 3 3 5 2 0 3 4 1 2 2 3 0 0 5 2 3 6 2 1 2 5 3 4 3 1 1 1 1 2 2 4 0 2 3    1 2 1 2 4 5 4 3 5 2 1 2 0 5 0 2 2 4 1 0 4 1 0 2 1 2 0 0 1 3 2 4 3 0 2 3 3 3 4    2 2 0 0 0 0 1 1 0 3 2 0 1 2 0 4 2 1 1 1 2 0 0 0 0 0 0 0 0 0 0   0.102000 2.150 2.150 5.900       497495           5           0  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 0 2 1 0 0 0 0 1 0 1 0 0 0 0 1 2    0 0 0 0 0 2 0 0 1 0 1 0 0 0 0 1 1 0 0 0 1 1 1 1 2 0 0 1 0 0 0 1 0 2 2 1 0 0 0    2 0 2 1 1 1 6 3 2 0 3 2 2 2 1 1 3 4 1 0 1 2 4 2 3 3 1 1 1 1 3 3 1 4 1 3 4 3 2    3 1 2 2 5 11 11 14 26 27 28 28 28 36 39 42 29 33 24 20 29 18 13 17 13 6 10 4 3   3 6 1 0 1 0 2 1 3 2 3 1 2 3 1 2 1 2 0 2 2 3 1 3 1 1 2 4 4 1 4 3 2 2 3 5 5 3 0    2 5 3 5 1 4 1 1 3 4 2 2 2 2 1 3 0 1 1 2 2 4 2 1 3 2 0 1 2 1 0 2 3 1 2 0 0 0 2    0 0 1 3 0 0 1 2 0 3 1 0 3 1 2 2 1 1 2 0 0 0 0 2 0 0 1 0 0 0 0 0   0.104000 2.200 2.200 6.000       529288           3           0  0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 2 0 0    0 0 1 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 2 1 0 0 1 3 0 2 0 2 0 0    3 2 2 0 4 0 3 2 2 1 3 1 7 3 1 1 0 4 3 2 1 0 0 3 2 3 5 2 1 4 1 5 1 0 3 2 3 0 1    2 4 7 3 7 8 12 15 20 24 34 39 34 35 27 36 34 23 22 26 15 24 12 12 14 5 3 0 7 1   1 3 5 1 2 2 2 4 3 1 2 5 2 2 3 1 1 4 2 1 3 0 4 5 4 6 4 5 3 3 3 3 1 1 5 0 6 1 2    4 2 3 2 1 3 2 0 0 0 1 3 3 0 1 4 0 3 2 3 0 3 3 0 2 3 4 3 1 1 1 2 5 3 1 2 1 1 2    4 1 0 2 4 1 3 0 0 3 0 1 3 0 1 0 0 1 1 1 0 1 1 1 0 0 0 0 0 0 0   0.106000 2.250 2.250 6.100       560628           3           0  0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 2 0 1 0 1 0 1 0 1 0 0 1 0 0 0 0 0 0 1 1 0 1    1 0 0 1 1 1 0 1 1 0 0 0 1 1 1 1 0 0 1 1 2 0 0 0 0 2 0 3 1 1 0 0 2 2 2 0 5 2 1    1 1 1 3 1 2 3 0 1 0 0 0 0 1 0 2 2 1 2 1 0 4 3 2 1 2 1 0 4 2 2 0 2 1 1 2 3 1 2    1 2 4 4 11 12 17 19 19 29 30 24 30 35 51 32 36 34 31 19 22 17 11 19 11 7 6 6 3   4 0 3 3 2 0 2 2 2 3 1 5 3 2 3 5 1 0 2 2 5 4 2 3 2 0 1 6 1 2 2 2 2 1 1 2 2 1 4    3 2 2 1 2 5 2 0 2 0 2 5 4 5 2 1 3 6 1 3 4 4 0 0 6 0 2 6 1 2 2 2 0 1 3 1 3 4 2    1 4 2 1 2 3 3 0 3 1 0 2 0 2 1 0 2 1 2 0 0 1 1 0 2 0 0 0 0 0 0 0   0.108000 2.300 2.300 6.200       593293           3           0  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 2 0 2 2 1 0 0 2 0 1 0 1 0 0 1 2 2 1 0    0 1 0 2 0 0 0 0 0 1 1 1 1 1 0 0 1 1 0 0 1 1 1 2 2 1 0 1 1 0 1 5 0 2 4 1 0 1 4    2 1 3 2 2 3 2 3 2 0 0 3 4 3 1 3 2 2 0 3 0 2 4 0 3 2 5 1 2 1 4 6 1 2 4 0 3 6 1    7 6 4 5 4 10 16 24 22 20 40 37 44 34 29 21 28 36 36 27 23 24 14 10 4 5 2 5 3 6   2 3 3 1 4 2 1 5 1 3 5 3 2 1 2 2 6 2 3 1 1 0 5 3 3 3 4 5 2 2 3 3 5 5 1 6 2 3 2    6 0 5 2 4 3 5 1 2 2 5 1 2 3 1 2 2 2 4 2 5 5 2 2 2 5 0 1 2 5 2 3 2 3 1 1 2 4 0    2 1 4 2 1 1 1 0 1 2 0 0 1 3 1 0 2 1 1 3 3 2 0 0 0 1 2 0 0 0 0   0.110000 2.350 2.350 6.300       636559           3           0  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 1 1 0 0 0 1 1 2 0 0 1 0 0 0 0 0 0 0    1 2 0 0 1 1 1 0 0 0 0 1 0 1 1 0 0 1 0 0 2 0 1 0 1 0 1 0 0 1 1 3 0 1 2 2 0 2 1    1 1 1 0 1 0 1 3 0 3 2 3 4 3 3 4 3 3 2 6 3 1 1 1 2 4 2 3 1 5 1 3 1 4 5 3 3 2 1    3 7 4 3 10 19 17 19 23 27 28 33 39 36 23 23 32 32 16 19 35 23 12 11 12 8 4 5 7   1 2 2 1 2 3 5 4 2 3 2 6 4 4 2 4 1 2 2 1 2 3 0 4 2 1 2 6 2 2 1 3 3 1 6 4 8 5 2    3 5 2 3 0 3 2 3 1 2 2 3 4 3 8 6 2 1 4 6 3 1 2 0 2 0 2 5 0 3 3 3 3 1 3 3 2 5 4    2 1 4 2 2 4 4 1 3 2 5 2 3 1 2 0 4 0 1 0 6 3 1 2 0 2 0 1 0 0 0 0   0.112000 2.400 2.400 6.400       670484           3           0  0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 1 1 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 2    0 1 1 1 3 0 0 0 2 1 3 0 1 1 1 0 1 1 1 0 0 1 2 0 1 3 1 5 2 3 0 4 0 2 0 0 1 2 1    0 1 0 0 1 0 2 2 3 2 3 2 2 2 3 4 4 2 3 5 3 3 2 3 3 4 2 4 0 3 2 4 4 1 3 1 3 4 2    2 5 2 8 6 12 17 14 22 27 26 29 39 30 24 36 22 22 20 9 19 15 5 12 16 4 7 5 7 5    5 1 4 5 5 4 4 1 4 4 3 3 3 4 2 2 4 2 4 4 4 4 0 2 3 2 1 4 3 6 1 3 3 3 4 5 4 2 2    2 5 3 0 2 5 4 2 5 3 5 1 1 3 1 1 3 6 6 2 3 2 0 3 2 4 3 4 1 2 2 6 2 0 3 2 2 5 3    3 5 2 1 0 3 1 1 2 2 0 1 1 3 2 3 2 1 1 1 1 3 2 1 0 0 0 0 0 0 0   0.114000 2.450 2.450 6.500       711783           4           0  0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 1 0 0 1 0 2 1 2 0 1 0 0 1 0 0 1 1 1 1 0 0 0 1    1 2 0 1 1 0 0 0 2 1 1 1 1 1 2 1 2 3 3 1 1 1 2 3 1 3 2 2 1 0 1 1 4 4 4 1 0 4 0    0 1 1 2 1 3 2 0 3 4 1 1 1 1 3 2 0 1 3 2 1 2 1 0 3 3 2 5 4 2 5 3 4 2 2 5 3 3 3    3 5 5 8 7 14 12 28 22 24 23 36 33 26 32 27 26 18 30 24 15 13 19 15 17 6 5 7 5    4 3 5 3 1 4 4 9 5 3 1 4 0 0 6 2 5 3 3 3 1 2 3 2 4 1 5 5 3 8 2 1 1 4 1 7 5 6 6    4 4 3 2 6 3 3 3 3 1 3 4 5 4 3 4 3 1 2 3 1 2 1 2 2 6 5 2 2 2 4 2 2 0 2 3 3 2 7    4 4 1 4 2 0 3 1 1 2 1 2 3 1 3 2 2 4 3 1 4 0 0 4 2 2 2 1 0 0 0 0   0.116000 2.500 2.500 6.600       745364           5           0  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 1 2 1 1 2 1 1 1 0 1 0 2 0 1 1    0 1 0 1 0 0 0 0 0 0 1 0 1 0 0 0 0 0 1 1 2 3 0 1 4 4 0 4 0 1 0 1 3 3 0 2 1 2 3    2 1 1 1 2 0 4 0 0 4 5 2 5 4 1 3 5 5 4 0 4 4 2 3 2 3 5 2 2 4 2 3 4 2 3 3 3 3 3    2 4 12 10 13 14 19 22 23 24 36 19 32 25 25 36 24 18 20 21 14 18 13 8 6 9 2 9 5   2 5 3 4 4 3 3 0 4 3 2 5 3 4 2 2 6 3 4 0 2 4 1 3 4 7 4 5 3 2 4 5 5 3 4 4 4 2 3    2 4 4 2 1 5 7 1 5 2 4 1 5 5 3 4 4 3 2 4 2 4 0 6 2 3 4 1 2 2 2 4 1 4 2 2 2 5 6    5 1 4 4 2 3 3 3 1 4 3 4 2 6 2 5 3 2 2 1 3 2 2 5 1 1 0 0 1 0 0 0   0.118000 2.550 2.550 6.700       791846           4           0  0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 2 1 1 0 0 0 0 0 1 0 0 0 1 1 0 1 0 1 0 1 1 0 1 0    1 4 1 2 3 0 3 1 0 1 1 1 0 3 1 2 1 1 1 0 0 1 1 1 3 1 3 2 3 1 2 2 1 3 2 4 1 4 0    2 4 1 4 3 2 1 1 2 1 3 2 3 3 2 1 1 5 3 3 3 3 2 3 4 3 5 3 1 1 2 2 3 5 1 2 1 1 4    4 6 9 6 6 13 17 21 20 24 22 25 20 29 23 28 30 26 27 18 20 17 16 17 12 10 8 5 6   6 6 4 3 1 2 4 6 9 2 2 3 5 7 6 2 3 8 5 4 5 6 4 6 5 3 5 3 2 5 3 2 8 3 5 4 5 3 5    4 3 4 8 4 3 8 3 3 3 1 1 2 2 5 4 7 3 2 3 3 2 2 3 6 3 2 2 1 1 5 2 5 6 3 5 3 4 1    3 1 2 1 0 4 1 4 2 2 2 3 1 1 1 1 3 2 0 1 6 1 1 0 2 1 0 1 0 0 0 0   0.120000 2.600 2.600 6.800       833394           3           0  0 0 0 0 0 0 0 0 0 0 0 1 0 0 2 2 1 1 1 2 1 0 0 0 1 0 1 0 0 0 1 0 0 1 1 2 1 0 0    0 0 0 2 2 0 3 1 0 0 2 1 1 1 1 0 1 2 1 5 0 1 0 2 2 1 2 0 4 2 1 4 3 4 2 2 1 2 1    5 2 3 1 3 0 2 2 2 2 3 4 0 4 2 3 3 4 5 2 2 6 3 4 5 5 5 3 4 6 5 1 3 0 5 4 5 1 3    2 2 6 18 13 17 27 27 21 28 28 24 26 27 29 23 21 16 17 19 22 14 11 9 5 14 7 7 6   4 4 12 3 6 4 5 4 6 4 2 0 1 8 1 6 8 5 2 3 4 5 6 4 2 5 8 3 1 1 6 3 7 8 4 1 6 5 2   8 11 5 6 5 6 2 4 5 1 2 7 2 2 5 5 6 3 3 2 3 8 5 1 9 3 3 2 3 6 3 5 3 2 4 6 3 1 3   5 4 4 4 6 3 3 5 0 2 2 5 1 3 2 2 1 4 2 0 2 2 2 2 4 1 2 1 2 1 1 0   0.122000 2.650 2.650 6.900       876007           3           0  0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 2 1 1 1 1 2 2 1 0 0 1 0 0 0 1 1 0 0 0 2 0 0    4 1 0 2 1 2 0 1 2 0 1 3 2 1 0 1 1 0 1 2 1 0 2 3 3 5 3 3 3 0 1 4 0 1 5 3 4 3 1    2 2 2 4 1 3 3 3 2 3 2 3 2 1 4 4 2 2 5 5 3 4 1 2 1 2 4 2 4 7 2 4 4 2 7 3 5 7 5    3 6 8 10 10 18 21 22 24 14 25 27 29 31 22 25 24 21 27 20 19 22 19 14 13 14 10    5 7 3 4 5 5 3 1 4 3 8 4 5 4 0 3 4 3 4 1 7 6 1 1 3 4 4 3 4 3 6 4 3 4 2 4 4 3 5    6 5 1 1 6 2 6 6 3 5 5 3 2 6 5 4 3 4 6 4 3 5 5 6 5 6 2 4 2 1 2 2 4 2 7 6 2 1 3    1 5 2 1 2 4 3 3 3 2 5 2 4 1 4 3 2 2 5 5 1 1 3 3 2 2 2 2 1 0 0 0 0 0   0.124000 2.700 2.700 7.000       925764           3           0  0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 2 1 3 0 1 1 0 0 0 0 0 1 1 1 1 0 0 0 1 1 0    1 2 0 0 3 2 0 1 2 1 1 2 0 2 1 2 2 0 0 2 3 2 3 2 2 3 2 2 4 0 2 0 5 1 3 2 3 1 2    3 2 0 6 4 3 6 2 5 0 5 2 1 4 4 5 7 4 2 3 5 2 0 2 5 2 4 7 4 4 4 8 5 3 1 7 2 2 1    5 5 5 14 19 16 22 18 30 29 25 36 23 23 22 25 25 27 26 23 14 20 16 16 10 6 6 6    4 2 6 6 6 6 6 4 6 1 0 3 4 4 5 2 4 3 2 4 4 5 5 5 6 10 6 3 6 8 5 5 8 7 4 6 4 3 4   8 5 5 7 4 6 3 5 8 4 3 4 4 3 4 3 1 3 3 7 2 4 8 3 6 4 3 3 2 5 4 4 3 7 4 5 4 4 3    4 7 2 3 3 4 3 0 2 2 4 3 4 2 4 2 2 6 4 4 6 6 1 5 1 1 2 1 0 0 0 0 0   0.126000 2.750 2.750 7.100       969560           3           0  0 0 0 0 0 0 0 0 0 0 0 0 0 2 1 1 1 0 1 2 0 2 0 2 2 0 1 1 1 0 0 1 0 1 1 1 1 2 0    1 2 2 1 2 0 0 1 0 1 0 2 1 0 1 0 1 1 2 0 3 0 3 4 3 1 3 2 0 4 0 1 2 0 3 1 1 2 3    2 2 2 5 1 7 1 5 1 5 4 2 0 0 1 2 1 3 2 3 3 5 4 10 10 2 5 11 4 1 2 1 7 3 5 4 4 1   5 10 8 7 9 9 20 20 21 33 21 28 20 27 32 21 29 22 20 24 15 13 27 14 13 15 10 9    3 11 6 7 5 3 6 8 5 4 4 1 3 3 5 2 7 3 6 6 1 6 4 6 5 3 4 2 4 3 3 9 4 5 4 4 5 2 3   10 4 3 2 6 10 6 3 6 5 5 5 4 8 8 5 4 3 6 4 4 2 4 4 4 5 7 4 4 4 4 5 2 2 3 4 5 2    1 3 2 6 2 7 7 1 6 4 4 6 5 5 4 0 2 2 3 2 7 5 0 4 1 1 4 6 1 0 3 2 0 0 1   0.128000 2.800 2.800 7.200      1022713           5           0  0 0 0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 1 0 1 1 0 0 1 1 1 0 0 0 2 1 0 0 4 0 0 1 2 3    1 1 0 1 0 1 0 3 1 1 1 2 2 1 1 1 3 1 0 2 4 2 1 2 1 2 0 3 1 3 2 1 5 2 1 3 1 2 1    5 3 2 1 2 5 3 8 2 3 2 5 5 4 3 6 4 4 4 3 2 3 8 4 3 4 5 4 5 4 7 6 5 3 3 3 5 2 9    10 7 9 12 11 13 17 15 22 19 33 24 28 30 26 21 24 22 27 20 26 16 10 10 9 20 10    7 4 5 7 7 2 7 5 3 5 1 6 1 5 7 5 6 3 1 5 1 1 3 4 8 6 3 9 5 5 3 6 7 4 6 7 6 4 2    4 6 2 3 6 5 6 7 6 4 4 9 6 8 6 9 7 1 2 6 2 7 5 4 4 4 4 5 5 4 4 3 6 3 5 3 6 4 3    6 6 2 5 2 8 4 5 3 6 5 4 5 8 4 3 5 6 5 5 2 8 1 2 2 5 4 1 3 0 0 0 0 0   0.130000 2.850 2.850 7.300      1081669           3           0  0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 5 0 0 2 2 0 0 1 0 0 0 1 1 0 2 0 2 2 2 1 0    1 0 2 2 3 1 1 0 2 0 1 0 2 1 1 2 2 0 1 4 3 0 2 1 1 0 2 5 2 1 0 1 3 2 5 2 1 2 5    2 3 4 3 6 6 6 4 6 6 3 1 3 2 3 4 7 5 2 9 7 4 1 4 4 3 2 2 2 7 4 8 4 7 4 6 8 5 1    8 6 10 18 21 18 15 21 24 21 26 22 30 28 27 23 22 21 17 25 20 17 13 17 9 12 7 8   5 4 4 5 5 2 4 1 1 2 5 7 6 4 9 7 7 5 5 5 5 5 2 4 5 3 6 8 2 4 9 4 10 5 1 4 5 5 5   10 3 2 8 6 5 7 3 13 3 3 6 5 1 4 5 9 5 2 7 4 5 6 3 5 6 5 4 5 9 6 4 3 4 4 4 5 8    5 5 0 3 6 3 4 3 7 5 6 4 3 3 6 8 4 1 3 1 2 7 3 4 6 6 1 3 4 1 0 1 0 0   0.132000 2.900 2.900 7.400      1131887           3           0  0 0 0 0 0 0 0 0 1 0 0 1 2 1 1 0 0 0 1 2 2 1 1 0 2 1 1 0 1 1 1 0 2 2 3 1 0 1 0    1 0 2 0 2 0 1 4 0 1 2 2 0 0 0 2 3 0 1 2 3 0 1 2 3 5 6 2 2 3 1 4 4 8 4 3 3 3 7    2 2 5 7 4 1 2 4 8 1 5 2 7 3 4 2 9 6 5 5 6 2 2 3 6 2 5 6 7 7 2 8 3 3 3 3 6 6 5    3 10 15 15 17 19 13 29 20 23 22 34 28 28 33 20 20 22 17 22 18 15 19 14 11 9 13   6 6 13 4 2 9 8 8 7 6 5 6 4 4 9 6 2 8 9 7 2 6 3 7 3 6 3 7 4 4 5 4 5 6 4 7 5 4     10 2 6 6 8 3 6 6 9 5 8 8 7 6 4 8 5 7 5 5 7 3 5 5 5 10 7 3 8 7 5 7 2 4 4 6 4 10   7 6 4 4 4 4 3 2 4 2 6 5 9 7 3 2 6 2 5 1 5 6 2 2 1 9 2 5 2 5 1 0 0 0 1 1   0.134000 2.950 2.950 7.500      1185706           3           0  0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 3 2 1 0 1 1 0 0 0 0 0 1 0 1 1 2 0 1 0 1 2 0 0 0    1 1 0 1 1 1 0 2 2 0 1 3 3 2 3 0 0 2 2 3 2 1 1 3 0 0 1 1 3 4 3 1 1 9 1 4 0 1 3    4 1 3 2 6 4 7 7 3 2 8 5 2 5 2 4 6 7 3 7 7 8 4 7 2 4 7 7 9 9 2 5 5 8 3 5 7 3 6    10 6 10 15 10 13 14 29 21 23 37 26 20 28 20 16 24 25 16 19 21 20 20 17 11 10     12 8 7 7 5 5 5 4 5 6 7 3 6 5 7 5 11 9 6 8 11 6 4 6 8 8 7 7 7 4 5 4 8 5 4 3 4 8   10 7 9 4 7 6 8 9 7 3 5 7 7 6 2 6 4 7 3 9 8 12 7 6 6 6 4 5 7 2 4 7 3 2 4 4 7 1    4 5 0 4 6 3 10 8 5 4 3 4 5 7 5 7 5 7 3 5 2 5 6 4 5 2 4 1 6 6 2 4 2 0 0 1 0   0.136000 3.000 3.000 7.600      1238426           3           0  0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 2 4 0 2 0 2 2 0 1 1 1 0 2 1 1 2 1 0 1 1 0 3 1 0    0 1 0 1 0 0 2 1 1 0 4 0 2 6 3 3 4 0 3 1 2 4 0 4 4 0 1 5 2 2 5 1 3 4 3 3 5 2 4    4 6 2 5 3 4 5 4 5 6 7 5 6 2 8 3 4 7 2 4 4 3 7 6 5 1 4 8 3 7 10 3 3 6 1 5 3 8     11 5 7 15 11 15 17 21 23 21 24 28 16 21 29 15 22 27 28 20 13 19 13 7 15 10 11    9 6 8 8 4 7 5 4 6 5 10 6 7 8 9 3 5 5 9 5 9 4 4 4 3 5 7 4 10 6 8 4 9 8 4 6 7 9    11 6 8 3 5 8 12 3 6 9 7 11 9 6 7 4 7 7 7 2 5 4 5 0 2 9 5 5 5 10 7 5 6 3 9 4 4    13 2 7 5 7 4 7 2 0 4 5 4 4 6 8 1 2 5 6 4 7 3 11 4 3 3 5 5 4 4 3 1 4 2 2 1 1 0   0.138000 3.050 3.050 7.700      1299809           6           0  0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 2 1 1 0 0 1 0 0 2 0 1 2 0 0 3 0 0 1 3 1    2 0 2 0 1 1 2 1 2 3 2 1 2 5 2 2 2 4 3 2 5 3 0 3 2 4 5 4 3 0 5 4 1 4 3 8 6 4 4    7 4 5 4 3 6 5 6 10 3 6 6 2 6 3 4 4 3 6 7 6 8 3 4 7 5 4 9 2 4 8 5 9 8 3 7 5 7 7   13 7 11 15 17 16 18 18 18 20 17 26 25 19 20 26 31 22 18 20 18 14 11 16 4 7 11    10 8 9 9 6 3 8 8 7 5 6 10 3 5 6 6 3 12 7 8 8 2 10 4 13 9 9 12 4 5 9 7 9 5 7 4    8 9 6 7 8 10 8 7 5 7 11 6 4 4 4 6 4 9 4 5 9 10 7 4 12 7 4 9 5 10 10 6 8 4 7 2    4 7 2 6 8 4 11 3 3 9 7 6 7 3 8 7 4 8 5 3 7 4 5 5 7 4 6 7 5 5 3 5 2 5 4 1 2 0 0   1   0.140000 3.100 3.100 7.800      1361810           3           0  0 0 0 0 0 0 0 0 0 1 0 0 0 0 3 2 1 0 0 0 1 1 1 2 0 0 0 0 1 0 2 2 2 1 0 0 3 3 0    2 0 6 2 3 1 0 3 3 1 2 2 5 3 5 3 3 2 2 7 3 2 2 3 4 2 3 4 4 1 3 7 4 5 4 2 3 5 4    2 1 3 6 3 4 3 8 7 6 5 3 5 11 5 5 3 3 7 3 6 4 4 2 4 4 4 1 5 5 9 6 6 9 3 10 8 6    8 3 10 8 16 16 13 18 23 29 25 19 19 20 27 19 22 27 24 21 15 18 11 20 21 17 12    5 18 6 12 7 9 11 7 12 11 4 8 8 4 8 7 7 2 6 4 4 9 6 9 3 4 7 7 7 4 10 4 11 5 8 8   8 5 4 4 8 6 4 9 8 12 12 8 5 8 3 10 8 7 5 3 5 6 8 5 6 10 7 2 11 2 5 5 6 8 10 2    7 5 5 14 2 7 3 9 3 5 2 8 2 3 4 4 7 9 5 4 7 6 7 5 6 3 5 4 7 6 7 7 9 3 0 2 1 1 1   0 0   0.142000 3.150 3.150 7.900      1429499           3           0  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 3 1 2 1 1 0 0 0 3 0 2 2 1 0 3 0 2 1 3 0 0 1    1 3 1 2 4 1 5 3 5 1 0 7 1 3 2 3 2 2 2 3 0 0 1 3 6 3 2 2 4 4 4 6 4 3 6 4 10 3 7   2 5 4 7 4 5 8 4 7 4 1 7 11 5 2 10 2 11 3 7 8 10 9 6 3 5 3 6 3 10 11 5 5 9 7 10   8 9 5 15 11 9 18 18 15 24 17 23 17 19 25 17 24 18 37 16 17 21 17 14 20 17 15     15 9 4 11 7 3 8 10 8 8 6 8 3 4 5 8 4 6 3 9 9 6 2 10 4 4 3 8 4 9 1 7 5 9 7 10 9   10 4 6 5 8 6 6 10 10 6 5 7 6 6 10 5 7 8 8 8 7 7 11 12 8 3 10 6 9 13 11 4 6 7 6   3 10 5 8 4 7 7 7 5 8 4 9 5 5 7 6 6 7 11 11 7 8 5 3 5 7 7 10 3 3 6 5 7 9 2 3 7    1 0 0 0 0 1   0.144000 3.200 3.200 8.000      1493946           3           0  0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 2 3 0 0 1 2 1 1 1 4 1 0 1 0 1 2 1 3 1 1 1 1 2    1 1 3 2 6 0 4 0 1 4 2 4 5 2 1 3 0 2 2 4 2 3 2 4 3 5 4 4 4 1 5 1 3 4 5 6 4 7 2    8 8 8 5 3 6 0 7 3 2 2 5 7 5 7 5 8 9 6 4 3 6 8 6 10 2 5 6 3 3 6 6 6 6 17 5 10 6   6 11 11 13 12 21 26 18 24 21 24 23 30 18 22 20 24 19 13 17 25 22 17 15 8 13 7    10 8 9 6 7 9 8 7 8 9 7 7 6 12 5 9 9 12 9 12 6 9 7 10 7 7 4 9 7 4 2 7 4 5 8 8 9   7 6 7 5 9 4 8 13 6 5 4 7 9 6 7 7 9 4 4 5 8 10 9 10 6 6 7 9 12 11 8 8 9 11 5 8    7 5 5 8 5 9 10 5 5 11 11 6 8 8 4 8 5 5 5 4 7 4 5 6 5 6 6 7 7 4 2 6 3 2 1 0 0 0   0 0   0.146000 3.250 3.250 8.100      1562352           5           0  0 0 0 0 0 0 0 0 0 0 0 0 0 2 2 0 2 0 1 2 1 1 0 0 1 0 1 2 0 0 0 3 1 2 0 4 4 2 0    0 2 3 2 0 1 3 3 4 0 1 4 3 3 4 5 5 4 2 1 4 2 5 3 2 7 6 3 5 6 5 5 5 1 5 2 7 4 8    7 4 6 5 7 5 3 5 8 1 6 4 6 8 7 6 7 6 3 4 6 3 5 8 4 10 3 3 11 6 5 3 9 6 4 3 17 9   11 11 24 13 15 14 25 26 26 21 17 32 32 22 18 25 29 29 27 24 21 12 23 14 12 11    9 17 7 9 11 3 7 6 5 5 12 3 6 8 7 4 7 11 10 8 9 5 8 2 10 9 8 10 10 7 7 4 7 5 7    7 9 10 8 7 7 16 6 8 10 5 6 6 12 12 7 11 11 8 9 7 8 12 10 7 8 7 11 8 9 7 7 4 9    4 7 14 9 8 8 13 9 8 7 13 5 9 5 7 4 9 5 7 8 7 8 7 3 10 9 3 4 4 4 5 2 6 6 3 5 10   4 4 2 3 0 1 0 0   0.148000 3.300 3.300 8.200      1630559           3           0  0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 4 2 1 1 1 2 1 2 0 2 1 5 0 1 1 4 0 2 1 4 5 3 0    1 1 1 2 1 3 3 3 1 1 1 1 1 3 4 6 6 8 8 4 3 2 7 2 2 1 7 4 4 5 1 10 6 4 4 4 3 3 3   6 11 6 4 5 4 8 5 5 9 4 5 5 7 6 4 13 12 3 6 7 5 2 7 9 7 8 8 4 7 6 4 10 6 8 9 9    9 13 15 17 23 25 13 16 24 22 26 21 27 24 24 21 21 21 15 17 22 25 21 22 17 14     11 8 12 5 9 7 8 5 11 10 6 6 5 9 13 10 9 8 8 8 6 4 9 10 9 9 7 8 7 5 7 8 14 13 5   14 5 12 11 8 9 6 5 4 9 13 7 10 13 11 11 8 5 9 10 8 7 6 7 13 3 13 8 7 13 17 5 8   5 10 7 12 7 6 6 9 7 8 8 11 8 11 9 11 11 8 5 6 10 4 9 3 10 8 7 10 8 7 8 10 10 7   4 11 5 7 8 2 4 3 0 0 1 0 1   0.150000 3.350 3.350 8.300      1707576           3           0  0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 2 1 2 1 0 2 0 2 3 1 3 2 2 2 2 0 2 1 4 3 2 2 3    1 2 1 0 2 2 4 2 5 3 3 5 2 8 4 5 4 2 3 6 7 6 1 0 7 4 7 7 6 5 4 3 4 6 6 7 6 2 7    4 4 2 5 5 6 9 3 3 3 6 6 5 3 5 7 8 8 6 8 8 6 8 3 9 6 6 8 8 6 4 8 6 6 10 4 11 6    11 15 23 16 8 17 20 21 19 24 15 14 19 21 30 25 21 15 19 16 18 21 21 15 14 12     16 8 10 12 7 10 9 8 10 10 7 9 8 10 12 6 6 9 11 6 5 9 12 6 7 12 7 5 6 8 5 9 4     11 9 8 8 10 7 6 10 7 11 13 7 4 13 11 8 11 9 16 6 12 11 10 10 19 2 9 11 8 7 8 8   6 13 6 10 12 12 9 12 9 9 8 7 7 9 6 12 8 4 9 9 8 5 7 8 9 5 12 5 7 5 9 10 9 10 3   6 6 8 7 11 3 5 5 4 2 0 0 0 0   0.152000 3.400 3.400 8.400      1777231           3           0  0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 0 0 1 1 3 1 0 3 4 2 3 3 3 3 3 2 1 1 1 1 3 3 0    1 8 0 0 5 3 7 4 4 4 4 4 3 5 2 2 5 3 6 1 7 6 1 2 2 5 2 1 6 6 8 7 7 5 10 4 1 6 9   3 4 5 3 5 8 4 9 8 11 8 3 2 7 7 9 10 9 10 8 6 8 6 8 7 10 8 7 3 8 4 10 7 6 8 9 6   5 16 9 19 24 23 17 23 24 22 30 21 15 23 27 20 20 20 18 20 23 18 17 15 19 17 18   13 9 4 4 7 12 7 10 4 8 6 10 5 6 13 2 3 8 7 8 7 3 11 8 7 9 7 19 7 8 9 6 14 8 8    11 10 11 13 14 10 16 8 9 13 8 9 9 12 7 12 11 6 9 15 5 9 9 9 11 11 13 6 10 6 4    12 9 9 12 11 8 6 9 16 10 10 10 8 10 10 6 7 4 1 15 6 8 4 9 13 11 8 10 11 9 8 3    3 6 6 7 9 4 6 8 7 4 2 1 2 2 1 0   0.154000 3.450 3.450 8.500      1849489           6           0  0 0 0 0 0 0 0 0 0 0 1 1 3 0 1 2 2 0 1 4 1 1 0 1 0 2 1 0 0 1 1 1 1 6 3 6 1 3 1    3 3 0 6 0 4 2 7 4 6 4 4 3 7 4 5 7 5 5 2 3 9 9 2 5 5 3 9 4 2 7 6 2 8 2 5 7 12 6   5 4 5 10 4 12 10 6 4 14 7 9 10 11 7 7 7 7 3 9 7 4 3 8 7 5 7 9 6 8 9 6 8 8 12 6   5 11 12 13 11 13 21 26 19 23 25 18 23 22 23 23 18 27 20 15 20 25 24 19 18 12     14 13 15 8 15 10 11 7 9 13 11 12 13 11 11 7 11 13 6 5 10 6 6 10 8 14 5 14 11 8   5 9 7 10 10 8 7 15 13 3 13 12 18 15 7 10 9 10 8 15 9 6 8 9 10 10 9 5 7 7 5 10    11 13 12 12 12 10 6 17 10 11 9 4 8 7 6 6 9 12 8 16 18 7 5 10 8 12 10 15 6 13     11 6 10 16 10 11 16 8 9 5 11 10 14 11 5 2 5 7 3 1 1 0 1 0   0.156000 3.500 3.500 8.600      1920727           4           0  0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 0 2 1 2 0 3 0 1 1 0 1 0 3 0 4 4 1 3 1 2 3 3 4 3    1 2 3 9 5 2 3 7 3 3 6 5 2 6 1 4 3 2 3 6 5 1 8 3 8 5 3 7 6 13 11 9 5 8 7 7 5 8    7 4 8 6 4 10 4 6 5 6 9 9 12 6 7 10 9 9 8 8 3 8 9 8 8 2 12 11 13 8 13 7 8 6 6 9   6 8 16 13 14 16 16 22 20 21 21 17 20 18 19 22 20 11 20 22 21 14 19 15 23 17 15   12 14 19 16 10 11 14 11 9 11 9 12 8 16 14 9 6 18 10 11 7 10 11 17 10 13 8 10     12 9 12 7 7 10 10 11 11 9 8 8 14 10 10 9 14 9 14 13 9 19 16 17 4 11 8 12 11 10   21 6 10 8 9 12 9 7 7 12 7 16 14 10 13 6 13 8 9 10 6 10 8 7 10 4 6 11 19 12 6 7   5 8 11 10 12 13 9 6 10 5 11 11 4 14 10 7 2 6 5 1 2 5 1 1 0 0   0.158000 3.550 3.550 8.700      1999833           3           0  0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 2 2 3 2 2 2 1 2 3 0 1 0 1 3 2 0 0 3 2 3 2 5 7 0    3 4 1 10 7 7 4 5 2 3 4 3 8 3 6 4 4 4 8 2 3 4 5 5 7 1 6 7 8 1 6 8 1 4 4 11 9 4    7 11 9 10 5 6 8 4 3 9 7 9 11 5 5 8 8 4 8 7 8 11 9 12 6 4 13 4 12 10 6 9 11 10    11 10 11 11 11 14 15 14 23 18 17 29 16 26 23 15 19 14 18 19 22 31 13 21 20 12    16 15 14 18 17 15 8 12 14 13 10 10 10 10 10 13 11 6 8 11 8 14 8 10 11 11 8 10    13 5 14 7 12 9 10 10 12 15 18 8 6 9 9 12 8 9 20 14 16 10 11 14 5 5 13 6 11 9     11 15 6 9 13 11 7 8 7 10 8 16 12 11 8 10 14 11 17 11 8 16 13 9 10 5 10 17 13     14 16 8 10 9 11 5 10 9 10 12 8 11 12 11 8 6 7 12 15 13 12 7 13 5 0 3 2 0 0 0 0   0.160000 3.600 3.600 8.800      2073149           3           0  0 0 0 0 0 0 0 0 0 1 0 0 0 0 2 1 2 1 2 2 1 0 2 2 1 0 3 6 4 5 5 2 2 2 5 5 3 6 4    6 4 5 2 4 4 3 2 4 6 3 3 6 5 7 4 5 7 5 3 5 6 13 5 3 10 5 9 7 4 5 6 5 10 6 5 5 6   6 4 14 7 6 11 6 9 10 9 8 5 3 8 10 10 6 6 8 9 5 6 14 7 11 10 9 9 11 13 8 4 5 10   12 6 16 8 8 7 19 20 23 10 16 27 25 23 19 26 21 16 20 21 24 18 25 8 11 13 16 18   13 22 18 9 16 4 16 10 12 13 9 7 9 8 17 11 10 13 10 14 4 9 12 16 8 9 16 17 13     11 14 8 8 13 9 11 15 10 11 14 8 6 4 9 11 18 9 9 8 9 15 11 11 11 9 6 13 13 10 7   8 10 15 14 9 7 4 10 12 17 10 14 13 10 10 12 20 9 7 6 11 15 11 10 8 9 6 10 13     17 6 8 9 6 13 13 16 10 15 5 11 14 11 12 6 5 12 9 4 9 2 4 1 1 0 0 0   0.162000 3.650 3.650 8.900      2156456           5           0  0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 2 0 1 1 3 2 3 4 3 3 2 1 3 6 5 2 3 4 4 3 6 2 3    4 4 5 5 3 4 1 4 5 9 3 3 4 3 3 8 5 6 12 2 10 3 4 6 8 9 8 8 2 2 7 5 8 2 8 9 7 2    6 8 6 5 8 2 7 5 6 13 5 6 8 11 6 10 5 6 3 8 10 11 10 10 14 10 11 8 11 8 12 6 12   5 15 12 13 10 13 13 18 23 12 21 18 21 23 20 30 20 23 26 24 24 21 21 29 19 21     16 23 20 13 19 13 16 11 15 13 13 11 8 11 14 14 13 4 16 15 18 13 9 19 8 11 6 9    14 8 13 12 13 10 13 10 14 11 13 11 8 10 13 11 11 14 11 8 14 11 10 9 14 12 14     18 8 12 7 13 12 10 14 14 8 12 17 11 13 9 12 12 15 7 9 13 17 11 11 11 12 17 12    11 16 15 8 9 12 7 13 15 11 16 7 10 7 14 5 18 10 10 8 8 6 6 13 14 6 9 11 9 9 3    5 1 1 3 0 0   0.164000 3.700 3.700 9.000      2234753           3           0  0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 4 1 4 2 1 3 1 1 3 2 3 3 1 3 6 2 4 4 3 3 3 6 5 2    6 4 1 3 3 7 1 4 4 6 12 4 5 2 6 4 9 3 1 8 11 5 2 7 6 3 8 4 7 3 8 3 9 6 7 8 9 2    7 6 9 6 15 6 9 5 9 4 9 17 15 10 2 10 6 8 12 12 11 12 10 9 7 11 8 7 5 11 10 14    16 7 7 7 13 15 10 16 17 21 19 14 18 24 19 27 27 24 20 22 24 21 20 14 24 17 17    18 32 15 12 13 15 12 8 14 11 11 19 11 14 15 18 10 5 12 11 11 9 15 9 7 9 16 12    9 12 10 15 9 18 7 11 12 14 7 20 8 10 13 14 11 6 6 9 11 8 10 16 8 17 13 17 9 16   11 10 9 13 20 17 14 12 10 13 11 9 9 17 20 10 16 8 14 13 14 18 15 15 8 10 12 11   22 12 13 9 12 9 11 14 19 12 12 8 8 12 11 19 11 11 12 15 11 15 13 9 9 10 9 4 9    4 2 1 0 0   0.166000 3.750 3.750 9.100      2327990           3           0  0 0 0 0 0 0 0 0 0 0 0 0 3 2 2 0 1 2 2 1 1 0 0 3 1 4 2 6 4 2 4 3 2 5 5 2 3 1 3    1 2 10 2 7 4 3 4 3 3 4 3 10 6 9 6 3 8 5 5 3 4 4 6 8 4 4 7 5 5 11 14 5 3 6 8 8    7 10 11 7 17 7 11 10 8 7 8 12 13 11 12 6 13 9 7 7 6 5 8 13 10 10 14 11 11 8 12   15 14 9 13 10 9 18 13 18 12 23 14 17 24 15 23 25 31 19 17 29 19 19 19 26 25 19   17 22 19 19 19 11 11 12 22 21 8 10 18 10 14 19 17 13 14 10 6 9 10 15 11 5 13     13 11 11 17 16 9 7 14 7 19 6 10 13 7 12 18 14 7 12 15 13 13 9 13 13 13 12 12     14 12 19 10 16 18 18 12 8 10 10 9 7 14 9 11 13 12 8 15 12 11 10 12 11 17 15 19   14 14 12 7 7 12 11 15 16 12 11 12 10 19 19 12 14 12 15 11 20 13 7 18 9 15 19     16 11 5 9 8 6 2 4 0 2 0 1   0.168000 3.800 3.800 9.200      2406866           3           0  0 0 0 0 0 0 0 0 0 1 0 2 0 1 0 2 3 2 3 1 2 1 2 2 5 2 1 2 3 2 2 2 5 3 5 3 3 1 3    6 8 6 1 3 9 6 3 6 10 5 5 7 4 5 7 12 9 5 7 5 6 6 8 3 5 4 7 8 5 6 5 8 13 4 10 2    10 9 7 7 16 9 10 9 13 8 12 9 13 15 9 15 9 10 11 6 6 6 7 7 6 8 15 9 8 9 6 12 12   11 14 12 11 13 8 17 18 18 11 14 19 14 25 21 15 10 15 19 27 23 22 24 17 19 18     12 16 22 21 25 9 25 15 19 15 21 15 8 11 13 12 10 12 7 13 11 17 11 13 10 16 19    14 23 11 8 12 13 10 9 17 4 14 10 7 10 17 14 11 11 20 18 13 8 12 6 8 13 12 23     15 14 15 16 9 14 9 13 14 17 11 17 11 10 15 17 11 6 12 12 14 15 17 12 16 16 8     17 15 15 10 15 11 10 15 12 13 9 12 9 12 15 12 6 18 7 15 14 12 21 18 11 10 18     11 19 11 7 11 3 2 5 4 0 1 1   0.170000 3.850 3.850 9.300      2508471           7           0  0 0 0 0 0 0 0 0 0 0 0 0 1 3 1 2 1 4 3 3 1 2 7 0 3 2 2 2 2 5 2 3 2 3 3 4 3 7 3    5 3 4 4 6 2 3 10 4 11 3 13 7 7 5 6 3 8 10 6 6 4 10 11 4 12 7 8 9 7 7 8 4 6 7 9   9 5 9 11 5 14 9 10 7 9 8 8 5 6 11 13 14 10 10 10 10 8 9 9 9 9 14 14 13 11 8 18   9 10 9 16 12 13 15 13 10 17 16 20 14 22 20 26 29 29 27 24 20 37 21 24 13 18 13   28 24 22 25 21 13 14 15 9 11 18 8 16 17 16 13 12 16 11 11 17 15 11 15 10 11 12   13 12 12 20 15 14 15 16 12 17 15 15 12 10 14 14 17 15 19 15 13 13 11 12 16 14    17 16 8 16 12 8 14 13 13 10 10 9 12 11 19 20 13 11 4 15 11 14 11 20 18 18 13     20 12 20 21 15 15 12 13 18 18 11 16 9 14 9 18 11 10 11 20 11 13 17 13 13 12 14   16 10 12 12 23 12 11 12 8 8 1 0 1 2 0   0.172000 3.900 3.900 9.400      2591210           3           0  0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 4 4 3 2 1 3 3 2 3 0 3 6 1 3 1 5 5 4 3 9 9 0 4 7    5 3 5 5 8 7 3 3 5 5 8 5 11 10 8 10 3 6 6 6 7 7 8 8 12 9 6 10 8 7 10 8 8 10 4 6   12 20 4 6 11 7 9 10 7 5 10 6 12 11 7 13 13 16 12 6 8 14 13 9 7 5 14 17 17 10     12 11 6 13 11 17 3 23 13 21 12 21 28 11 23 30 28 23 24 26 26 17 21 15 27 23 33   16 22 25 11 20 22 23 21 20 7 21 13 16 12 16 16 13 18 18 9 13 16 15 9 20 13 19    15 8 9 11 14 13 10 9 10 16 15 14 17 15 19 16 12 14 12 14 14 16 19 19 4 24 8 12   15 16 11 15 14 20 14 13 13 14 16 19 14 13 19 14 18 23 15 15 4 14 17 14 8 10 15   20 11 15 19 12 9 13 12 11 16 12 16 13 14 16 13 16 16 19 19 12 11 10 19 15 15     14 12 5 11 18 17 10 13 12 9 6 2 0 0 1 0   0.174000 3.950 3.950 9.500      2675515           3           0  0 0 0 0 0 0 0 0 0 0 2 0 1 1 0 2 1 2 3 3 1 3 1 3 7 5 3 6 4 3 9 4 5 2 5 3 3 3 6    9 5 5 2 6 8 5 8 4 8 5 6 5 6 4 6 3 7 11 6 9 9 3 6 6 7 6 8 7 9 12 18 6 9 8 11 11   8 14 15 15 11 15 13 9 19 10 15 14 9 4 18 5 8 10 8 10 13 9 12 11 8 8 12 6 15 8    9 9 18 7 17 21 9 13 18 14 21 24 18 22 17 26 15 21 23 25 19 26 23 20 27 17 27     20 26 15 22 15 19 15 16 24 12 15 24 13 13 17 11 7 10 21 15 15 16 13 20 22 12     16 12 16 15 14 18 11 12 14 14 24 10 13 16 19 8 11 18 19 15 15 23 16 16 11 12     18 11 13 14 16 10 14 13 18 12 15 15 14 8 11 17 12 22 13 12 14 15 10 11 15 19     15 12 17 8 21 23 13 19 11 8 12 15 11 14 15 19 15 10 17 9 16 14 18 14 16 14 14    23 14 14 13 16 12 14 15 14 9 14 7 5 2 3 1 1 1   0.176000 4.000 4.000 9.600      2779386           5           0  0 0 0 0 0 0 0 0 0 0 0 2 2 3 0 1 3 0 6 2 6 3 1 5 0 4 1 6 5 1 6 3 6 5 6 2 5 4 5    3 9 8 5 7 5 8 4 12 8 12 6 8 5 7 5 7 10 5 5 6 7 9 7 10 7 10 10 8 12 10 6 13 10    11 12 11 10 10 16 9 6 12 9 11 17 10 11 10 14 11 16 7 11 13 12 10 17 14 11 13     12 10 13 16 16 17 17 15 14 11 8 15 13 27 22 14 19 17 22 22 27 18 28 19 27 32     24 33 21 17 23 12 27 25 20 20 17 22 14 15 22 21 14 9 16 12 19 16 17 16 16 20     14 18 15 14 18 10 12 9 16 12 12 10 13 19 12 12 15 14 15 22 12 11 15 18 19 18     10 6 11 14 10 23 17 14 16 19 10 10 16 19 17 23 16 18 19 18 16 12 14 14 14 13     11 10 24 21 22 26 18 18 18 14 17 5 13 17 11 13 16 14 18 16 9 15 15 18 16 14 21   13 22 17 9 8 16 17 16 16 19 7 20 19 18 16 10 6 10 6 3 5 1 0 0 2   0.178000 4.050 4.050 9.700      2869617           3           0  0 0 0 0 0 0 0 0 0 0 2 2 2 0 1 4 1 3 2 2 1 2 3 2 2 4 4 7 5 6 5 3 6 6 5 7 8 1 5    2 3 5 5 8 10 7 6 10 9 6 8 9 7 8 10 15 4 10 5 8 8 6 11 8 8 11 7 5 8 14 5 11 7     13 10 9 7 8 9 14 12 10 9 11 6 14 15 14 13 11 9 18 18 10 14 14 10 12 16 12 9 8    14 15 6 11 11 12 10 14 12 11 18 13 13 27 16 23 23 20 21 32 20 18 25 22 24 32     25 34 19 23 21 25 22 25 19 23 19 21 16 19 16 18 9 18 6 13 12 13 18 12 8 19 14    14 11 16 13 15 14 21 11 14 14 13 11 20 14 14 26 10 22 16 18 15 20 24 18 19 19    16 14 14 14 21 13 19 18 20 13 17 11 17 14 22 17 15 15 20 8 21 15 16 16 23 17     13 19 21 20 12 15 18 15 19 15 18 17 20 15 13 14 24 18 15 15 14 18 20 19 17 19    20 21 21 15 19 19 17 11 16 16 11 23 10 20 13 10 5 10 2 3 1 1 0   0.180000 4.100 4.100 9.800      2975040           3           0  0 0 0 0 0 0 0 0 1 0 0 1 2 2 4 4 2 4 4 1 2 5 0 3 3 5 2 5 5 4 9 2 7 8 4 8 3 11 6   10 4 7 8 6 6 5 8 8 7 11 4 4 11 12 7 11 7 10 11 7 11 11 10 9 7 13 12 18 8 14 12   14 12 8 8 16 10 10 14 16 10 6 8 15 15 15 22 13 19 18 12 6 11 10 7 12 12 24 15    17 9 17 21 10 17 18 14 14 14 9 22 11 23 17 15 23 32 20 11 12 20 15 23 30 20 25   19 26 29 19 27 23 15 19 11 30 16 21 24 18 18 14 8 6 25 13 21 13 13 19 13 21 25   23 18 14 14 13 20 12 14 8 10 25 14 15 20 15 10 15 16 21 8 15 20 21 20 13 16 15   20 11 18 17 17 9 12 24 19 13 18 17 20 14 15 20 10 23 19 25 8 7 13 14 11 15 18    13 10 12 10 17 11 24 16 17 11 12 13 16 20 14 26 12 17 13 14 16 16 6 20 16 23     22 11 17 16 14 25 19 17 21 22 19 13 19 16 18 10 11 7 4 6 0 0 2   0.182000 4.150 4.150 9.900      3083416           6           0  0 0 0 0 0 0 0 0 0 0 2 1 1 4 1 3 4 3 5 6 2 1 4 2 3 5 6 6 7 2 4 1 11 7 5 2 6 6 8   9 8 12 7 11 9 6 12 7 8 9 6 6 8 11 6 6 8 11 8 11 12 11 13 9 10 7 9 6 11 9 13 12   12 8 14 15 8 9 8 8 11 22 16 6 11 16 15 9 13 12 12 13 11 15 9 9 16 14 14 12 21    12 12 12 16 19 10 15 18 8 16 14 16 16 21 30 22 9 25 19 19 26 23 33 25 22 21 19   21 20 20 21 20 26 20 29 27 25 25 21 20 25 21 21 18 14 19 15 6 20 18 16 20 16     13 13 15 15 15 15 22 16 15 15 11 21 19 11 19 13 14 15 17 21 12 18 12 22 18 21    18 13 23 15 18 9 21 11 14 23 18 21 25 18 22 15 21 23 15 15 16 19 21 18 19 21     17 13 24 23 22 19 14 20 22 15 14 14 20 20 23 13 18 15 18 20 20 24 9 12 17 21     21 12 16 17 16 16 21 26 19 15 21 22 24 15 11 13 13 6 8 1 4 0 1 0   0.184000 4.200 4.200 10.00      3174897           3           0  0 0 0 0 0 0 0 0 0 0 1 1 2 3 0 5 4 3 3 0 7 3 2 4 2 8 6 4 5 9 3 8 6 4 2 7 6 8 7    9 3 5 8 5 9 7 7 6 11 14 7 12 9 9 5 15 12 14 15 12 9 11 5 8 13 11 12 10 9 17 12   11 8 17 11 19 11 15 9 11 7 15 14 16 16 16 7 12 10 14 13 13 16 16 11 15 13 14     12 16 11 12 13 17 10 13 19 11 17 11 13 14 13 10 19 19 23 24 22 24 24 31 19 23    22 28 21 25 29 17 23 17 21 30 22 19 25 27 27 22 23 23 17 25 17 20 17 12 23 21    9 17 20 16 19 16 17 20 9 16 11 22 16 15 12 15 17 23 24 16 16 18 26 11 16 20 18   10 14 17 26 19 17 15 17 19 12 21 20 24 17 27 13 16 18 19 23 14 19 14 10 11 18    19 6 15 21 23 25 17 17 18 21 27 20 17 18 20 25 22 20 18 22 18 17 15 24 16 15     22 18 22 14 20 20 22 18 22 25 19 26 12 19 19 13 12 16 19 14 9 7 5 4 2 0 2   0.186000 4.250 4.250 10.10      3283256           3           0  0 0 0 0 0 0 0 1 0 0 1 1 4 1 5 2 5 5 3 4 6 3 2 4 7 8 2 6 6 4 10 7 8 7 5 4 4 9 8   18 10 7 6 6 13 12 10 13 10 7 15 4 7 10 13 12 8 8 13 5 14 6 9 14 9 10 16 12 13    11 8 12 11 10 13 9 11 15 17 23 18 13 10 12 11 12 14 14 14 10 12 12 16 13 15 13   13 14 18 10 13 17 14 14 14 12 12 8 18 14 23 20 16 19 16 16 16 27 18 21 19 20     19 37 22 21 22 28 24 26 18 21 28 21 22 21 21 22 16 15 13 22 22 27 22 11 13 20    10 17 16 19 20 30 18 25 8 7 22 18 17 14 23 16 17 11 16 24 19 18 22 15 15 23 16   13 15 22 14 8 12 18 13 15 22 17 15 15 17 27 21 19 21 24 17 10 12 14 19 17 22     18 19 17 28 19 15 14 16 28 17 20 15 11 22 18 19 16 21 17 24 19 22 22 20 10 20    18 18 18 21 18 23 18 32 26 21 21 22 20 22 16 17 20 22 21 17 13 13 11 9 5 0 1 1   1   0.188000 4.300 4.300 10.20      3396610           5           0  0 0 0 0 0 0 0 0 0 0 1 2 3 0 2 5 5 4 3 3 5 1 2 3 6 9 3 3 3 8 7 2 9 5 7 5 11 8 9   7 6 9 6 4 5 8 6 10 9 14 10 15 6 7 13 15 10 13 7 15 10 10 11 14 14 6 7 17 13 19   3 13 9 6 13 13 14 10 11 12 16 17 13 10 15 15 19 19 11 11 15 11 13 9 13 20 8 18   14 18 23 23 23 15 19 20 14 11 7 18 16 15 22 28 20 24 22 25 17 20 39 24 26 25     25 33 25 25 25 33 15 29 18 29 18 12 18 23 17 24 28 22 16 20 33 23 18 23 26 23    15 24 16 16 16 16 17 15 15 16 14 11 9 23 17 13 13 18 12 19 20 30 20 20 15 21     19 16 18 20 23 19 15 10 11 15 19 13 22 22 18 19 16 19 23 16 10 25 23 20 21 20    31 19 19 18 15 22 18 14 13 21 18 19 22 19 16 17 21 14 20 26 18 26 22 19 26 19    20 22 15 13 24 23 15 21 21 21 27 18 22 19 24 17 22 16 18 23 10 12 3 5 3 3 0 0   0.190000 4.350 4.350 10.30      3502025           3           0  0 0 0 0 0 0 0 0 0 0 0 3 0 3 2 3 4 4 3 4 5 10 7 6 6 4 5 12 10 6 6 13 10 6 7 14    9 6 13 10 12 16 3 9 9 7 5 6 13 11 10 8 11 19 12 14 13 16 13 14 9 12 14 13 14     16 10 14 7 16 18 16 9 15 11 20 15 10 14 14 11 14 17 10 6 16 10 15 12 17 17 20    15 7 12 23 15 8 13 12 8 16 15 20 16 16 20 14 11 20 24 23 20 16 18 27 25 31 27    27 25 21 31 27 20 23 24 32 17 21 34 27 17 19 19 25 30 27 21 24 28 30 19 26 21    14 16 21 23 27 8 17 21 17 11 23 15 22 15 18 10 17 20 23 18 18 17 19 22 15 22     21 19 23 18 18 26 17 18 26 18 24 15 22 23 23 19 23 25 23 24 26 10 21 16 32 23    18 19 24 21 28 26 22 19 19 14 30 21 24 23 22 21 13 27 20 27 24 15 20 22 22 13    25 14 19 32 21 18 18 23 22 22 14 18 20 24 14 19 20 18 17 24 29 27 20 12 18 17    11 9 2 3 2 1 0   0.192000 4.400 4.400 10.40      3593938           3           0  0 0 0 0 0 0 0 0 0 0 1 0 1 1 2 3 4 7 8 1 5 6 8 3 7 5 4 9 8 8 7 7 9 7 9 9 15 5 7   8 15 14 9 9 13 8 8 15 10 7 10 9 10 14 7 8 18 16 17 11 14 15 13 8 15 8 15 18 16   16 22 12 8 16 13 10 13 13 10 21 11 10 16 16 13 13 17 16 20 23 13 22 16 14 15     22 19 22 15 22 24 16 16 16 19 12 15 16 17 20 18 19 26 17 23 18 32 20 28 36 22    25 30 29 31 36 24 24 21 29 24 32 29 30 23 34 19 33 34 25 20 31 27 24 16 14 21    20 13 24 17 28 13 24 16 26 15 26 21 11 15 20 13 20 18 25 23 18 24 26 22 16 22    14 13 16 20 24 25 19 29 20 15 20 16 25 26 21 22 17 24 22 21 17 23 23 15 19 30    23 17 21 19 18 21 26 14 29 24 20 33 19 15 20 23 28 19 23 25 15 19 17 31 23 18    29 26 25 14 24 25 18 19 19 24 35 31 23 23 14 15 19 11 20 19 24 17 16 9 10 12 3   2 2 0 1   0.194000 4.450 4.450 10.50      3712573           7           0  0 0 0 0 0 0 0 0 0 0 0 1 1 1 5 3 5 4 3 11 3 10 4 6 7 8 5 5 5 8 9 12 7 7 11 8 6    7 9 10 13 10 6 13 9 9 9 11 14 14 12 13 10 6 13 13 15 12 13 19 8 14 13 16 11 13   14 15 9 15 16 13 16 17 17 17 23 18 16 19 10 13 18 16 10 9 21 11 22 14 20 14 18   13 15 12 13 14 16 14 15 20 29 17 14 18 8 15 21 15 19 15 22 20 17 15 23 26 16     26 24 23 23 23 23 30 24 29 28 26 35 33 31 22 23 22 20 37 22 27 33 26 27 26 17    16 18 27 22 21 24 18 18 18 17 15 18 14 19 24 22 15 20 21 15 19 25 15 16 26 19    22 29 20 16 13 15 16 32 24 23 13 33 17 22 18 18 23 24 22 21 20 26 21 16 22 18    18 16 15 26 26 17 22 21 13 25 24 13 23 18 18 25 32 20 24 21 17 19 24 24 23 33    19 19 21 32 18 22 23 19 23 32 18 31 22 25 23 23 31 29 21 16 20 20 15 22 14 12    5 10 9 2 1 0 1   0.196000 4.500 4.500 10.60      3829518           3           0  0 0 0 0 0 0 0 0 0 1 2 2 1 6 2 6 5 9 3 5 6 8 6 3 8 10 7 11 9 4 8 9 5 11 10 13 9   16 13 10 9 5 12 9 15 10 13 9 12 18 14 19 9 13 14 12 13 21 17 17 18 16 13 12 16   14 18 10 15 15 16 11 15 22 17 19 17 11 12 26 12 17 19 18 21 20 27 17 18 19 21    14 19 16 12 16 21 20 18 8 17 17 13 13 18 15 19 15 19 20 28 21 29 27 27 34 24     26 31 25 24 16 17 23 23 30 28 18 28 32 28 37 18 26 18 16 33 21 31 21 20 22 19    20 25 18 18 20 11 17 20 22 23 14 14 17 18 20 25 20 19 20 22 19 16 33 25 21 21    24 18 16 22 29 22 16 27 26 28 21 20 22 17 25 23 20 23 18 16 19 26 22 21 22 23    15 20 19 17 23 19 20 15 22 18 22 26 23 23 31 17 29 18 13 15 19 18 24 22 28 22    17 23 24 26 21 23 25 24 29 26 18 41 24 29 22 27 23 28 16 30 24 18 23 19 17 18    21 17 14 8 2 5 2 0 0   0.198000 4.550 4.550 10.70      3950740           3           0  0 0 0 0 0 0 0 0 1 1 1 2 1 3 7 5 6 7 7 7 4 5 6 4 1 8 9 10 9 8 10 8 12 6 10 8 10   8 11 9 10 15 7 11 8 13 11 13 15 15 17 12 10 8 17 12 9 14 12 14 11 14 21 14 15    20 18 16 8 15 22 24 14 10 18 14 15 16 12 10 16 21 16 25 17 20 17 17 20 15 24     15 17 22 25 17 13 22 18 20 19 11 21 22 21 16 21 24 16 22 17 21 17 24 22 24 35    27 24 28 24 32 37 34 25 24 29 37 37 25 28 21 23 24 22 21 20 25 22 32 19 21 22    24 20 21 20 22 18 27 17 14 20 22 22 22 14 19 20 20 21 23 22 14 20 21 23 20 18    23 20 25 31 24 18 22 14 23 22 21 23 27 27 20 21 18 22 23 24 23 21 18 22 17 22    21 35 15 24 24 12 27 30 27 28 22 31 24 24 19 27 24 28 23 25 26 35 27 22 29 21    24 18 19 26 33 29 31 23 25 19 24 26 21 10 23 24 26 28 20 27 26 17 29 22 18 14    22 8 10 11 4 4 1 2 0   0.200000 4.600 4.600 10.80      4068161           5           0  0 0 0 0 0 0 0 0 0 1 1 0 1 5 5 2 9 3 11 6 9 8 7 7 8 3 3 13 10 8 7 5 8 13 8 7 14   12 10 7 15 13 13 11 12 12 14 12 13 12 10 15 11 14 7 16 15 8 15 13 15 13 18 13    17 21 15 12 13 13 17 18 18 18 16 19 20 17 14 17 24 13 12 18 19 19 13 21 18 26    21 23 16 14 18 19 13 33 13 19 20 14 20 23 14 26 19 22 21 21 16 27 30 25 28 22    32 21 30 27 31 21 30 22 27 27 31 27 21 17 38 41 17 21 20 19 30 24 27 20 20 21    30 20 19 19 31 25 24 13 21 23 19 24 33 24 17 20 17 12 25 23 18 24 11 24 25 22    33 20 11 22 31 21 20 26 27 21 26 24 14 23 23 20 20 26 28 10 20 27 24 22 17 27    28 20 23 23 33 20 24 26 32 33 29 21 25 24 17 18 19 27 26 20 24 26 24 24 26 21    19 24 21 36 32 18 33 33 20 23 25 33 19 27 25 27 24 27 21 21 23 28 18 27 25 19    24 15 17 12 15 7 2 1 0 0 ", "%f ", Inf);
 %! assert (rows (x) == n);
 
 %% Note use fprintf so output not sent to stdout
 %% test/octave.test/io/printf-1.m
 %!test
 %! nm = tmpnam ();
-%! fid1 = fopen(nm,"w");
+%! fid1 = fopen (nm,"w");
 %! x = fprintf (fid1, "%s: %d\n", "test", 1);
-%! fclose(fid1);
-%! fid2 = fopen(nm,"r");
-%! str = fscanf(fid2,"%s");
-%! fclose(fid2);
-%! unlink(nm);
+%! fclose (fid1);
+%! fid2 = fopen (nm,"r");
+%! str = fscanf (fid2,"%s");
+%! fclose (fid2);
+%! unlink (nm);
 %! assert (x, 8);
 %! assert (str, "test:1");
 
 %% test/octave.test/io/printf-2.m
 %!error printf (1)
 
 %% test/octave.test/io/printf-3.m
 %!error <Invalid call to printf> printf ()
 
 %% test/octave.test/io/sprintf-1.m
 %!test
 %! [s, msg, status] = sprintf ("%s: %d\n", "test", 1);
-%! 
+%!
 %! assert (s == "test: 1\n" && ischar (msg) && status == 8);
 
 %% test/octave.test/io/sprintf-2.m
 %!error sprintf (1)
 
 %% test/octave.test/io/sprintf-3.m
 %!error <Invalid call to sprintf> sprintf ()
 
 %% test/octave.test/io/fopen-1.m
 %!test
 %! arch_list = ["native"; "ieee-le"; "ieee-be"; "vaxd"; "vaxg"; "cray"];
-%! 
+%!
 %! status = 1;
-%! 
+%!
 %! for i = 1:6
 %!   arch = deblank (arch_list (i,:));
 %!   for j = 1:6
 %!     if (j == 1)
 %!       mode_list = ["w"; "r"; "a"];
 %!     elseif (j == 2)
 %!       mode_list = ["w+"; "r+"; "a+"];
 %!     endif
@@ -381,17 +381,17 @@
 %!     if (status == 0)
 %!       break;
 %!     endif
 %!   endfor
 %!   if (status == 0)
 %!     break;
 %!   endif
 %! endfor
-%! 
+%!
 %! assert (status == 1);
 
 %% test/octave.test/io/fopen-2.m
 %!test
 %! s.a = 1;
 %! fail ("fopen (s)");
 
 %% test/octave.test/io/fopen-3.m
@@ -428,40 +428,40 @@
 %% test/octave.test/io/binary-io-1.m
 %!test
 %! type_list = ["char"; "char*1"; "integer*1"; "int8";
 %! "schar"; "signed char"; "uchar"; "unsigned char";
 %! "short"; "ushort"; "unsigned short"; "int";
 %! "uint"; "unsigned int"; "long"; "ulong"; "unsigned long";
 %! "float"; "float32"; "real*4"; "double"; "float64";
 %! "real*8"; "int16"; "integer*2"; "int32"; "integer*4"];
-%! 
+%!
 %! n = rows (type_list);
 %! nm = tmpnam ();
 %! id = fopen (nm, "wb");
 %! if (id > 0)
 %!   for i = 1:n
 %!     fwrite (id, i, deblank (type_list(i,:)));
 %!   endfor
 %!
 %!   fclose (id);
-%!   
+%!
 %!   id = fopen (nm, "rb");
 %!   if (id > 0)
 %!     x = zeros (1, n);
 %!     for i = 1:n
 %!       x(i) = fread (id, [1, 1], deblank (type_list(i,:)));
 %!     endfor
-%!     
+%!
 %!     if (x == 1:n)
 %!       __printf_assert__ ("ok\n");
 %!     endif
 %!   endif
 %! endif
-%! 
+%!
 %! unlink (nm);
 %! assert (__prog_output_assert__ ("ok"));
 
 %% test/octave.test/io/file-pos-1.m
 %!test
 %! nm = tmpnam ();
 %! id = fopen (nm, "wb");
 %! if (id > 0)
diff --git a/test/line-continue.tst b/test/line-continue.tst
--- a/test/line-continue.tst
+++ b/test/line-continue.tst
@@ -25,17 +25,17 @@
 %! y = [a... # comments here ok
 %! b];
 %! assert (y, x);
 
 %!test
 %! x = [1;2];
 %! y = [a... # comments here ok
 %! ;\
-%! 
+%!
 %! b];
 %! assert (y, x);
 
 %!assert (1 + ...
 %! 2 - \# comments here ok
 %! 3 / ... # comments here ok
 %! -1,6);
 
@@ -53,19 +53,19 @@
 
 %!test
 %!assert (1 == 1
 %! && 2 == 2
 %! || 3 == 5);
 
 %!test
 %! x = [1, ...
-%! 
+%!
 %! ...
-%! 
+%!
 %! 2];
 %! y = [1;2];
 %! assert (y, x);
 
 %!test
 %! x = [1 ,...
 %! 2];
 %! y = [1,2];
diff --git a/test/prefer.tst b/test/prefer.tst
--- a/test/prefer.tst
+++ b/test/prefer.tst
@@ -90,24 +90,24 @@
 %! warning ("on", "Ocave:imag-to-real");
 %! fail ("eye (1+i)", "warning");
 %! warning (wir.state, "Ocave:imag-to-real");
 
 %% test/octave.test/prefer/prefer-17.m
 %!test
 %! wrre = warning ("query", "Octave:resize-on-range-error");
 %! warning ("off", "Octave:resize-on-range-error");
-%! clear a; 
-%! a(2) = 1; a(3) = 2; 
+%! clear a;
+%! a(2) = 1; a(3) = 2;
 %! assert (all (a == [0,1,2]));
 %! warning (wrre.state, "Octave:resize-on-range-error");
 
 %% test/octave.test/prefer/prefer-18.m
 %!test
-%! clear a; 
+%! clear a;
 %! a(1) = 1; a(2) = 2;
 %! assert (all (a == [1,2]));
 
 %% test/octave.test/prefer/prefer-21.m
 %!test
 %! ped = print_empty_dimensions ();
 %! print_empty_dimensions (0);
 %! a = cell (1, 1);
@@ -132,49 +132,49 @@
 %!assert (all (svd ([]) == zeros (0, 1)));
 
 %% test/octave.test/prefer/prefer-27.m
 %!test
 %! sp = save_precision ();
 %! save_precision (1);
 %! x = pi;
 %! nm = tmpnam ();
-%! save("-text", nm, "x");
+%! save ("-text", nm, "x");
 %! clear x;
 %! load (nm);
 %! unlink (nm);
 %! assert (x,3);
 %! save_precision (sp);
 
 %% test/octave.test/prefer/prefer-28.m
 %!test
 %! sp = save_precision ();
 %! save_precision (5);
 %! x = pi;
 %! nm = tmpnam ();
-%! save("-text", nm, "x");
+%! save ("-text", nm, "x");
 %! clear x;
 %! load (nm);
 %! unlink (nm);
 %! assert (x, 3.1416);
 %! save_precision (sp);
 
-%% FIXME: How to capture standard output for comparison? 
+%% FIXME: How to capture standard output for comparison?
 %% test/octave.test/prefer/prefer-29.m
 %!function f ()
 %! 1
 %!endfunction
 %!#test
 %! sf = silent_functions ();
 %! silent_functions (0);
 %! f
 %! assert (??);
 %! silent_functions (sf);
 
-%% FIXME Same problem as above!!!
+%% FIXME: Same problem as above!!!
 %% test/octave.test/prefer/prefer-30.m
 %!function f ()
 %! 1
 %!endfunction
 %!#test
 %! sf = silent_functions ();
 %! silent_functions (1);
 %! f
diff --git a/test/range.tst b/test/range.tst
--- a/test/range.tst
+++ b/test/range.tst
@@ -35,47 +35,47 @@
 %! r = 1:9;
 
 %!assert ([ r ; z                  ], expect)
 %!assert ([ r ; single(z)          ], single (expect))
 %!assert ([ r ; logical(z)         ], expect)
 %!assert ([ r ; sparse(z)          ], sparse (expect))
 %!assert ([ r ; sparse(logical(z)) ], sparse (expect))
 
-%!assert ([ r ; int8(z)            ], int8(expect))
-%!assert ([ r ; int16(z)           ], int16(expect))
-%!assert ([ r ; int32(z)           ], int32(expect))
-%!assert ([ r ; int64(z)           ], int64(expect))
-%!assert ([ r ; uint8(z)           ], uint8(expect))
-%!assert ([ r ; uint16(z)          ], uint16(expect))
-%!assert ([ r ; uint32(z)          ], uint32(expect))
-%!assert ([ r ; uint64(z)          ], uint64(expect))
+%!assert ([ r ; int8(z)            ], int8 (expect))
+%!assert ([ r ; int16(z)           ], int16 (expect))
+%!assert ([ r ; int32(z)           ], int32 (expect))
+%!assert ([ r ; int64(z)           ], int64 (expect))
+%!assert ([ r ; uint8(z)           ], uint8 (expect))
+%!assert ([ r ; uint16(z)          ], uint16 (expect))
+%!assert ([ r ; uint32(z)          ], uint32 (expect))
+%!assert ([ r ; uint64(z)          ], uint64 (expect))
 
 ## Test mixing non-integer range with other types
 
 %!shared expect, r, z
 %! expect = [ 1.0 1.4 1.8 2.2 2.6 3.0
 %!            0   0   0   0   0   0   ];
 %! z = zeros (1,6);
 %! r = 1:0.4:3;
 
 %!assert ([ r ; z                  ], expect)
 %!assert ([ r ; single(z)          ], single (expect))
 %!assert ([ r ; logical(z)         ], expect)
 %!assert ([ r ; sparse(z)          ], sparse (expect))
 %!assert ([ r ; sparse(logical(z)) ], sparse (expect))
 
-%!assert ([ r ; int8(z)            ], int8(expect))
-%!assert ([ r ; int16(z)           ], int16(expect))
-%!assert ([ r ; int32(z)           ], int32(expect))
-%!assert ([ r ; int64(z)           ], int64(expect))
-%!assert ([ r ; uint8(z)           ], uint8(expect))
-%!assert ([ r ; uint16(z)          ], uint16(expect))
-%!assert ([ r ; uint32(z)          ], uint32(expect))
-%!assert ([ r ; uint64(z)          ], uint64(expect))
+%!assert ([ r ; int8(z)            ], int8 (expect))
+%!assert ([ r ; int16(z)           ], int16 (expect))
+%!assert ([ r ; int32(z)           ], int32 (expect))
+%!assert ([ r ; int64(z)           ], int64 (expect))
+%!assert ([ r ; uint8(z)           ], uint8 (expect))
+%!assert ([ r ; uint16(z)          ], uint16 (expect))
+%!assert ([ r ; uint32(z)          ], uint32 (expect))
+%!assert ([ r ; uint64(z)          ], uint64 (expect))
 
 ## Test corner cases of ranges (base and limit)
 
 %!shared r, rrev, rneg
 %! r = -0:3;
 %! rrev = 3:-1:-0;
 %! rneg = -3:-0;
 
diff --git a/test/recursion.tst b/test/recursion.tst
--- a/test/recursion.tst
+++ b/test/recursion.tst
@@ -21,23 +21,24 @@
 %!  if (x == 1)
 %!    y = x;
 %!    return;
 %!  else
 %!    y = x * f (x-1);
 %!  endif
 %!endfunction
 %!
-%!assert(f (5), 120);
+%!assert (f (5), 120)
 
 %% test/octave.test/recursion/recursion-2.m
 %!function y = f (x)
 %!  if (x == 1)
 %!    y = x;
 %!    return;
 %!  else
 %!    y = f (x-1) * x;
 %!  endif
 %!endfunction
 %!
-%!assert(f (5), 120);
+%!assert (f (5), 120)
 
 %%FIXME: Need test for maximum recursion depth
+
diff --git a/test/return.tst b/test/return.tst
--- a/test/return.tst
+++ b/test/return.tst
@@ -18,14 +18,14 @@
 
 %% test/octave.test/return/return-1.m
 %!function y = f ()
 %!  y = 1;
 %!  return;
 %!  y = 2;
 %!endfunction
 %!
-%!assert(f(), 1)
+%!assert (f (), 1)
 
 %% test/octave.test/return/return-2.m
 %!test
 %! return;
 
diff --git a/test/slice.tst b/test/slice.tst
--- a/test/slice.tst
+++ b/test/slice.tst
@@ -27,17 +27,17 @@
 %!      x(:, slice) = 2;
 %!    case 31
 %!      x(slice, :, :) = 2;
 %!    case 32
 %!      x(:, slice, :) = 2;
 %!    case 33
 %!      x(:, :, slice) = 2;
 %!    otherwise
-%!      error("invalid dim, '%d'", dim);
+%!      error ("invalid dim, '%d'", dim);
 %!  endswitch
 %!endfunction
 
 ## size = [2 0]
 %!assert (set_slice ([2 0], 11, []), zeros ([2 0]))
 %!error id=Octave:invalid-resize set_slice ([2 0], 11, 1)
 %!error id=Octave:invalid-resize set_slice ([2 0], 11, 2)
 %!error id=Octave:invalid-resize set_slice ([2 0], 11, 3)
diff --git a/test/struct.tst b/test/struct.tst
--- a/test/struct.tst
+++ b/test/struct.tst
@@ -147,31 +147,31 @@
 %! c(3, 3, 3, 3).value = 1;
 %! assert (c(2,2,2,2), struct ("name", [], "value", []));
 
 ## assign to subrange of field in 4D struct array
 %!test
 %! c(4, 4, 4, 4).name  = "a";
 %! c(3, 3, 3, 3).value = 1;
 %! [c([1, 3], 2, :, [3, 4]).value] = deal (1);
-%! assert (length(find([c.value] == 1)), 17);
-%! assert (length(find([c.value])), 17);
+%! assert (length (find ([c.value] == 1)), 17);
+%! assert (length (find ([c.value])), 17);
 
 ## swap elements of struct array
 %!test
 %! b = struct ("name", {"a", "b", "c"; "d", "e", "f"}, "value", 0);
 %! [b([2, 1], [3, 1]).name] = deal (b([1, 2], [1, 2]).name);
 %! assert ({b.name}, {"e", "b", "b", "e", "d", "a"});
 
 ## test internal ordering of struct array fields
 %!test
 %! c(4, 4, 4, 4).value = 3;
 %! c(1, 2, 3, 4).value = 2;
 %! c(3, 3, 3, 3).value = 1;
-%! d = reshape ({c.value}, size(c));
+%! d = reshape ({c.value}, size (c));
 %! assert ([d{4, 4, 4, 4}, d{1, 2, 3, 4}, d{3, 3, 3, 3}],
 %!         [3, 2, 1]);
 
 ## test assignment to mixed cs-list of field element subranges
 %!test
 %! b = struct ("name", {"a", "b", "c"; "d", "e", "f"}, "value", 100);
 %! [b(1:2, [1, 3]).name, b(2, 1:3).value] = ...
 %!   deal (1, 2, 3, 4, "5", "6", "7");
diff --git a/test/switch.tst b/test/switch.tst
--- a/test/switch.tst
+++ b/test/switch.tst
@@ -16,76 +16,76 @@
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 %% test/octave.test/switch/switch-1.m
 %!test
 %! a = 1;
 %! b = 2;
 %! c = 3;
-%! 
+%!
 %! switch 0 case 1 x = a; case 2 x = b; otherwise x = c; endswitch
 %! switch 1 case 1 y = a; case 2 y = b; otherwise y = c; endswitch
 %! switch 2 case 1 z = a; case 2 z = b; otherwise z = c; endswitch
 %! switch 3 case 1 p = a; case 2 p = b; otherwise p = c; endswitch
-%! 
+%!
 %! assert (x == c && y == a && z == b && p == c);
 
 %% test/octave.test/switch/switch-2.m
 %!test
 %! a = 1;
 %! b = 2;
 %! c = 3;
-%! 
+%!
 %! x = zeros (1, 4);
-%! 
+%!
 %! k = 1;
-%! 
+%!
 %! for i = 0:3
 %! switch (i)
 %!   case a
 %!    x(k) = a;
 %!   case b
 %!    x(k) = b;
 %!   otherwise
 %!    x(k) = c;
 %!   endswitch
 %!   k++;
 %! endfor
-%! 
+%!
 %! assert (all (x == [3, 1, 2, 3]));
 
 %% test/octave.test/switch/switch-3.m
 %!test
 %! a = 1;
 %! b = 2;
 %! c = 3;
-%! 
+%!
 %! x = zeros (1, 4);
-%! 
+%!
 %! k = 1;
-%! 
+%!
 %! for i = 0:3
 %!   switch (i)
 %!   case a
 %!    x(k) = a;
 %!   endswitch
 %!   k++;
 %! endfor
-%! 
+%!
 %! assert (all (x == [0, 1, 0, 0]));
 
 %!test
 %! a = 1;
 %!
 %! switch 1
 %! otherwise
 %!   a = 2;
 %! endswitch
-%! 
+%!
 %! assert (a == 2);
 
 
 %% test/octave.test/switch/switch-4.m
 %!error <syntax error> eval ("switch endswitch")
 
 %% test/octave.test/switch/switch-5.m
 %!error <syntax error> eval ("switch case endswitch")
diff --git a/test/system.tst b/test/system.tst
--- a/test/system.tst
+++ b/test/system.tst
@@ -150,24 +150,24 @@
 %% test/octave.test/system/umask-1.m
 %!test
 %! orig_umask = umask (0);
 %! nm = tmpnam ();
 %! id = fopen (nm, "wb");
 %! s1 = stat (nm);
 %! fclose (id);
 %! unlink (nm);
-%! 
+%!
 %! umask (777);
 %! nm = tmpnam ();
 %! id = fopen (nm, "wb");
 %! s2 = stat (nm);
 %! fclose (id);
 %! unlink (nm);
-%! 
+%!
 %! assert (deblank (s1.modestr), "-rw-rw-rw-");
 %! assert (deblank (s2.modestr), "----------");
 %! # Restore original umask value
 %! umask (orig_umask);
 
 %% test/octave.test/system/umask-2.m
 %!error <Invalid call to umask> umask ()
 
@@ -356,72 +356,72 @@
 %! if (ispc () && ! isunix ())
 %!   # should be a drive letter
 %!   assert (length (d1), 3);
 %!   assert (d1(2), ":");
 %!   assert (d1(3), "\\");
 %! else
 %!   assert ("/", d1);
 %! endif
-%! assert (pwd(), xdir);
+%! assert (pwd (), xdir);
 
 %% test/octave.test/system/cd-2.m
 %!error cd (1)
 
 %% test/octave.test/system/pwd-1.m
 %!assert (ischar (pwd ()))
 
 %% test/octave.test/system/getpwent-1.m
 %!testif HAVE_GETPWENT
 %! s = getpwent ();
-%! endpwent (); 
+%! endpwent ();
 %! assert ((isstruct (s)
 %! && isfield (s, "name")
 %! && isfield (s, "passwd")
 %! && isfield (s, "uid")
 %! && isfield (s, "gid")
 %! && isfield (s, "gecos")
 %! && isfield (s, "dir")
 %! && isfield (s, "shell")));
 
 %% test/octave.test/system/getpwent-2.m
 %!error <Invalid call to getpwent> getpwent (1)
 
 %% test/octave.test/system/getpwuid-1.m
 %!testif HAVE_GETPWUID
 %! x = getpwent ();
 %! y = getpwuid (x.uid);
-%! endpwent (); 
+%! endpwent ();
 %! assert (strcmp (x.name, y.name) && x.uid == y.uid && x.gid == y.gid);
 
 %% test/octave.test/system/getpwuid-2.m
 %!error <Invalid call to getpwuid> getpwuid ()
 
 %% test/octave.test/system/getpwuid-3.m
 %!error <Invalid call to getpwuid> getpwuid (1, 2)
 
 %% test/octave.test/system/getpwnam-1.m
 %!testif HAVE_GETPWNAM
 %! x = getpwent ();
 %! y = getpwnam (x.name);
-%! endpwent (); 
+%! endpwent ();
 %! assert (strcmp (x.name, y.name) && x.uid == y.uid && x.gid == y.gid);
 
 %% test/octave.test/system/getpwnam-2.m
 %!error <Invalid call to getpwnam> getpwnam ()
 
 %% test/octave.test/system/getpwnam-3.m
 %!error <Invalid call to getpwnam> getpwnam ("foo", 1)
 
 %% test/octave.test/system/setpwent-1.m
 %!testif HAVE_SETPWENT
 %! x = getpwent ();
 %! setpwent ();
 %! y = getpwent ();
-%! endpwent (); 
+%! endpwent ();
 %! assert (strcmp (x.name, y.name) && x.uid == y.uid && x.gid == y.gid);
 
 %% test/octave.test/system/setpwent-2.m
 %!error <Invalid call to setpwent> setpwent (1)
 
 %% test/octave.test/system/endpwent-1.m
 %!error <Invalid call to endpwent> endpwent (1)
 
diff --git a/test/try.tst b/test/try.tst
--- a/test/try.tst
+++ b/test/try.tst
@@ -63,17 +63,17 @@
 %!   a;
 %!   error ("Shoudn't get here");
 %! catch
 %!   assert (lasterr()(1:13), "'a' undefined");
 %! end_try_catch
 %! assert (lasterr()(1:13), "'a' undefined");
 
 %% test/octave.test/try/try-6.m
-%!test 
+%!test
 %! try
 %!   error ("user-defined error");
 %! catch
 %!   assert (lasterr, "user-defined error");
 %! end_try_catch
 
 %% test/octave.test/try/try-7.m
 %!function ms = mangle (s)
