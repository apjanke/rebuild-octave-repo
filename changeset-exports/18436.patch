# HG changeset patch
# User Rik <rik@octave.org>
# Date 1391832602 28800
#      Fri Feb 07 20:10:02 2014 -0800
# Branch stable
# Node ID 5d14a08e753395139e8c380e760ca2896a60970f
# Parent  4e49bc41f8998d24caf8ac9e33943ac571ff242d
doc: Change docstring for rand* functions from [N, M] to [M, N] (bug #41496).

* rand.cc (Frand,Frandn,Frande,Frandg,Frandp): Change docstring from [N, M] to
[M, N] (bug #41496).

diff --git a/libinterp/corefcn/rand.cc b/libinterp/corefcn/rand.cc
--- a/libinterp/corefcn/rand.cc
+++ b/libinterp/corefcn/rand.cc
@@ -361,18 +361,18 @@ gen_matrix:
       else
         return octave_rand::nd_array (dims);
     }
 }
 
 DEFUN (rand, args, ,
        "-*- texinfo -*-\n\
 @deftypefn  {Built-in Function} {} rand (@var{n})\n\
-@deftypefnx {Built-in Function} {} rand (@var{n}, @var{m}, @dots{})\n\
-@deftypefnx {Built-in Function} {} rand ([@var{n} @var{m} @dots{}])\n\
+@deftypefnx {Built-in Function} {} rand (@var{m}, @var{n}, @dots{})\n\
+@deftypefnx {Built-in Function} {} rand ([@var{m} @var{n} @dots{}])\n\
 @deftypefnx {Built-in Function} {@var{v} =} rand (\"state\")\n\
 @deftypefnx {Built-in Function} {} rand (\"state\", @var{v})\n\
 @deftypefnx {Built-in Function} {} rand (\"state\", \"reset\")\n\
 @deftypefnx {Built-in Function} {@var{v} =} rand (\"seed\")\n\
 @deftypefnx {Built-in Function} {} rand (\"seed\", @var{v})\n\
 @deftypefnx {Built-in Function} {} rand (\"seed\", \"reset\")\n\
 @deftypefnx {Built-in Function} {} rand (@dots{}, \"single\")\n\
 @deftypefnx {Built-in Function} {} rand (@dots{}, \"double\")\n\
@@ -548,18 +548,18 @@ classes.\n\
 %!assert (! isequal (__rand_sample__ (-1), __rand_sample__ (-2)))
 */
 
 static std::string current_distribution = octave_rand::distribution ();
 
 DEFUN (randn, args, ,
        "-*- texinfo -*-\n\
 @deftypefn  {Built-in Function} {} randn (@var{n})\n\
-@deftypefnx {Built-in Function} {} randn (@var{n}, @var{m}, @dots{})\n\
-@deftypefnx {Built-in Function} {} randn ([@var{n} @var{m} @dots{}])\n\
+@deftypefnx {Built-in Function} {} randn (@var{m}, @var{n}, @dots{})\n\
+@deftypefnx {Built-in Function} {} randn ([@var{m} @var{n} @dots{}])\n\
 @deftypefnx {Built-in Function} {@var{v} =} randn (\"state\")\n\
 @deftypefnx {Built-in Function} {} randn (\"state\", @var{v})\n\
 @deftypefnx {Built-in Function} {} randn (\"state\", \"reset\")\n\
 @deftypefnx {Built-in Function} {@var{v} =} randn (\"seed\")\n\
 @deftypefnx {Built-in Function} {} randn (\"seed\", @var{v})\n\
 @deftypefnx {Built-in Function} {} randn (\"seed\", \"reset\")\n\
 @deftypefnx {Built-in Function} {} randn (@dots{}, \"single\")\n\
 @deftypefnx {Built-in Function} {} randn (@dots{}, \"double\")\n\
@@ -620,18 +620,18 @@ J. Statistical Software, vol 5, 2000,\n\
 %!   assert (skewness (x), 0, 0.02);
 %!   assert (kurtosis (x), 0, 0.04);
 %! endif
 */
 
 DEFUN (rande, args, ,
        "-*- texinfo -*-\n\
 @deftypefn  {Built-in Function} {} rande (@var{n})\n\
-@deftypefnx {Built-in Function} {} rande (@var{n}, @var{m}, @dots{})\n\
-@deftypefnx {Built-in Function} {} rande ([@var{n} @var{m} @dots{}])\n\
+@deftypefnx {Built-in Function} {} rande (@var{m}, @var{n}, @dots{})\n\
+@deftypefnx {Built-in Function} {} rande ([@var{m} @var{n} @dots{}])\n\
 @deftypefnx {Built-in Function} {@var{v} =} rande (\"state\")\n\
 @deftypefnx {Built-in Function} {} rande (\"state\", @var{v})\n\
 @deftypefnx {Built-in Function} {} rande (\"state\", \"reset\")\n\
 @deftypefnx {Built-in Function} {@var{v} =} rande (\"seed\")\n\
 @deftypefnx {Built-in Function} {} rande (\"seed\", @var{v})\n\
 @deftypefnx {Built-in Function} {} rande (\"seed\", \"reset\")\n\
 @deftypefnx {Built-in Function} {} rande (@dots{}, \"single\")\n\
 @deftypefnx {Built-in Function} {} rande (@dots{}, \"double\")\n\
@@ -693,18 +693,18 @@ J. Statistical Software, vol 5, 2000,\n\
 %!   assert (skewness (x), 2, 0.06);
 %!   assert (kurtosis (x), 6, 0.7);
 %! endif
 */
 
 DEFUN (randg, args, ,
        "-*- texinfo -*-\n\
 @deftypefn  {Built-in Function} {} randg (@var{n})\n\
-@deftypefnx {Built-in Function} {} randg (@var{n}, @var{m}, @dots{})\n\
-@deftypefnx {Built-in Function} {} randg ([@var{n} @var{m} @dots{}])\n\
+@deftypefnx {Built-in Function} {} randg (@var{m}, @var{n}, @dots{})\n\
+@deftypefnx {Built-in Function} {} randg ([@var{m} @var{n} @dots{}])\n\
 @deftypefnx {Built-in Function} {@var{v} =} randg (\"state\")\n\
 @deftypefnx {Built-in Function} {} randg (\"state\", @var{v})\n\
 @deftypefnx {Built-in Function} {} randg (\"state\", \"reset\")\n\
 @deftypefnx {Built-in Function} {@var{v} =} randg (\"seed\")\n\
 @deftypefnx {Built-in Function} {} randg (\"seed\", @var{v})\n\
 @deftypefnx {Built-in Function} {} randg (\"seed\", \"reset\")\n\
 @deftypefnx {Built-in Function} {} randg (@dots{}, \"single\")\n\
 @deftypefnx {Built-in Function} {} randg (@dots{}, \"double\")\n\
@@ -965,18 +965,18 @@ classes.\n\
 %!   assert (skewness (x), 2/sqrt (a), 0.05);
 %!   assert (kurtosis (x), 6/a,        0.2);
 %! endif
 */
 
 DEFUN (randp, args, ,
        "-*- texinfo -*-\n\
 @deftypefn  {Built-in Function} {} randp (@var{l}, @var{n})\n\
-@deftypefnx {Built-in Function} {} randp (@var{l}, @var{n}, @var{m}, @dots{})\n\
-@deftypefnx {Built-in Function} {} randp (@var{l}, [@var{n} @var{m} @dots{}])\n\
+@deftypefnx {Built-in Function} {} randp (@var{l}, @var{m}, @var{n}, @dots{})\n\
+@deftypefnx {Built-in Function} {} randp (@var{l}, [@var{m} @var{n} @dots{}])\n\
 @deftypefnx {Built-in Function} {@var{v} =} randp (\"state\")\n\
 @deftypefnx {Built-in Function} {} randp (\"state\", @var{v})\n\
 @deftypefnx {Built-in Function} {} randp (\"state\", \"reset\")\n\
 @deftypefnx {Built-in Function} {@var{v} =} randp (\"seed\")\n\
 @deftypefnx {Built-in Function} {} randp (\"seed\", @var{v})\n\
 @deftypefnx {Built-in Function} {} randp (\"seed\", \"reset\")\n\
 @deftypefnx {Built-in Function} {} randp (@dots{}, \"single\")\n\
 @deftypefnx {Built-in Function} {} randp (@dots{}, \"double\")\n\
