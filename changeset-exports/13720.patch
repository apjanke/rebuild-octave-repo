# HG changeset patch
# User Michael Goffioul <michael.goffioul@gmail.com>
# Date 1319022280 -3600
#      Wed Oct 19 12:04:40 2011 +0100
# Node ID 8fb563d14d2fd6af85a2d37b8af36e5a7efdf585
# Parent  8547cde2a568f0b306b080a4f15895a40efa863f
Remove useless OCTAVE_API decorators.

* lo-mappers.h (X_NINT): Remove OCTAVE_API decorator.
(xmod): Likewise.
(xrem): Likewise.

diff --git a/liboctave/lo-mappers.h b/liboctave/lo-mappers.h
--- a/liboctave/lo-mappers.h
+++ b/liboctave/lo-mappers.h
@@ -222,17 +222,16 @@ extern OCTAVE_API bool xnegative_sign (f
 
 extern OCTAVE_API octave_idx_type NINTbig (double x);
 extern OCTAVE_API octave_idx_type NINTbig (float x);
 
 extern OCTAVE_API int NINT (double x);
 extern OCTAVE_API int NINT (float x);
 
 template <typename T>
-OCTAVE_API
 T
 X_NINT (T x)
 {
   return (xisinf (x) || xisnan (x)) ? x : xfloor (x + 0.5);
 }
 
 inline OCTAVE_API double D_NINT (double x) { return X_NINT (x); }
 inline OCTAVE_API float F_NINT (float x) { return X_NINT (x); }
@@ -300,17 +299,16 @@ std::complex<T>
 signum (const std::complex<T>& x)
 {
   T tmp = abs (x);
 
   return tmp == 0 ? 0.0 : x / tmp;
 }
 
 template <typename T>
-OCTAVE_API
 T
 xmod (T x, T y)
 {
   T retval;
 
   if (y == 0)
     retval = x;
   else
@@ -348,17 +346,16 @@ xmod (T x, T y)
 
   if (x != y && y != 0 && retval != 0)
     retval = xcopysign (retval, y);
 
   return retval;
 }
 
 template <typename T>
-OCTAVE_API
 T
 xrem (T x, T y)
 {
   T retval;
 
   if (y == 0)
     retval = x;
   else
