# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1209021717 14400
#      Thu Apr 24 03:21:57 2008 -0400
# Node ID 2d2a969c731ca25a53191f3d428ebe1c2e818b4f
# Parent  b68e44c90afed78ea53353ca51c17e4138382158
fix max_recursion_limit exceeded at startup with Intel C++

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,19 @@
+2008-04-24  John W. Eaton  <jwe@octave.org>
+
+	* ov-usr-fcn.cc: Move constructor definitions here, from ov-usr-fcn.h.
+	* ov-usr-fcn.h (octave_user_script::octave_user_script): 
+	Also Initialize t_parsed and t_checked.
+
+2008-04-24  Jaroslav Hajek <highegg@gmail.com>
+
+	* ov-usr-fcn.h (octave_user_script::octave_user_script): 
+	Initialize call_depth.
+
 2008-04-24  John W. Eaton  <jwe@octave.org>
 
 	* file-io.cc (do_stream_open): Return -1 for directories.
 
 2008-04-23  John W. Eaton  <jwe@octave.org>
 
 	* DLD-FUNCTIONS/__qp__.cc (qp): Avoid bounds error when removing
 	constraint from active set.
diff --git a/src/ov-usr-fcn.cc b/src/ov-usr-fcn.cc
--- a/src/ov-usr-fcn.cc
+++ b/src/ov-usr-fcn.cc
@@ -54,16 +54,42 @@ static int Vmax_recursion_depth = 256;
 // User defined scripts.
 
 DEFINE_OCTAVE_ALLOCATOR (octave_user_script);
 
 DEFINE_OV_TYPEID_FUNCTIONS_AND_DATA (octave_user_script,
 				     "user-defined script",
 				     "user-defined script");
 
+octave_user_script::octave_user_script (void)
+  : octave_user_code (), cmd_list (0), file_name (),
+    t_parsed (static_cast<time_t> (0)),
+    t_checked (static_cast<time_t> (0)),
+    call_depth (0)
+{ }
+
+octave_user_script::octave_user_script (const std::string& fnm,
+					const std::string& nm,
+					tree_statement_list *cmds,
+					const std::string& ds)
+  : octave_user_code (nm, ds), cmd_list (cmds), file_name (fnm),
+    t_parsed (static_cast<time_t> (0)),
+    t_checked (static_cast<time_t> (0)),
+    call_depth (0)
+{ }
+
+octave_user_script::octave_user_script (const std::string& fnm,
+					const std::string& nm,
+					const std::string& ds)
+  : octave_user_code (nm, ds), cmd_list (0), file_name (fnm), 
+    t_parsed (static_cast<time_t> (0)),
+    t_checked (static_cast<time_t> (0)),
+    call_depth (0)
+{ }
+
 octave_user_script::~octave_user_script (void)
 {
   delete cmd_list;
 }
 
 octave_value_list
 octave_user_script::subsref (const std::string&,
 			     const std::list<octave_value_list>&, int)
diff --git a/src/ov-usr-fcn.h b/src/ov-usr-fcn.h
--- a/src/ov-usr-fcn.h
+++ b/src/ov-usr-fcn.h
@@ -73,27 +73,24 @@ private:
 
 // Scripts.
 
 class
 octave_user_script : public octave_user_code
 {
 public:
 
-  octave_user_script (void)
-    : octave_user_code (), cmd_list (0), file_name () { }
+  octave_user_script (void);
 
   octave_user_script (const std::string& fnm, const std::string& nm,
 		      tree_statement_list *cmds,
-		      const std::string& ds = std::string ())
-    : octave_user_code (nm, ds), cmd_list (cmds), file_name (fnm) { }
+		      const std::string& ds = std::string ());
 
   octave_user_script (const std::string& fnm, const std::string& nm,
-		      const std::string& ds = std::string ())
-    : octave_user_code (nm, ds), cmd_list (0), file_name (fnm) { }
+		      const std::string& ds = std::string ());
 
   ~octave_user_script (void);
 
   octave_function *function_value (bool = false) { return this; }
 
   octave_user_script *user_script_value (bool = false) { return this; }
 
   octave_user_code *user_code_value (bool = false) { return this; }
