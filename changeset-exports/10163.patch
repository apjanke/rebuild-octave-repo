# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1264039040 18000
#      Wed Jan 20 20:57:20 2010 -0500
# Node ID a822560a3ce347f6ef9dc1abb5aeeb2ef5f26535
# Parent  9f9eb9d2eefd06d363a3eb7e12e500df2c4cc6d2
scripts/gethelp.cc: untabify

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2010-01-20  John W. Eaton  <jwe@octave.org>
+
+	* gethelp.cc: Untabfy.
+
 2010-01-20  Ben Abbott <bpabbot@mac.com>
 
 	* /plot/__go_draw_figure__.m: Reverse order axes are drawn.
 
 2010-01-20  David Bateman  <dbateman@free.fr>
 
 	* plot/private/__contour__.m: Set default linestyle if pltopt returns
 	an empty style.
diff --git a/scripts/gethelp.cc b/scripts/gethelp.cc
--- a/scripts/gethelp.cc
+++ b/scripts/gethelp.cc
@@ -51,86 +51,86 @@ extract_help_text (void)
   bool have_help_text = false;
   bool in_comment = false;
   bool discard_space = true;
   int c;
 
   while ((c = std::cin.get ()) != EOF)
     {
       if (begin_comment)
-	{
-	  if (c == '%' || c == '#')
-	    continue;
-	  else if (discard_space && c == ' ')
-	    {
-	      discard_space = false;
-	      continue;
-	    }
-	  else
-	    begin_comment = false;
-	}
+        {
+          if (c == '%' || c == '#')
+            continue;
+          else if (discard_space && c == ' ')
+            {
+              discard_space = false;
+              continue;
+            }
+          else
+            begin_comment = false;
+        }
 
       if (in_comment)
-	{
-	  if (! have_help_text)
-	    {
-	      first_comments_seen = true;
-	      help_txt += (char) c;
-	    }
+        {
+          if (! have_help_text)
+            {
+              first_comments_seen = true;
+              help_txt += (char) c;
+            }
 
-	  if (c == '\n')
-	    {
-	      in_comment = false;
-	      discard_space = true;
+          if (c == '\n')
+            {
+              in_comment = false;
+              discard_space = true;
 
-	      if ((c = std::cin.get ()) != EOF)
-		{
-		  if (c == '\n')
-		    break;
-		}
-	      else
-		break;
-	    }
-	}
+              if ((c = std::cin.get ()) != EOF)
+                {
+                  if (c == '\n')
+                    break;
+                }
+              else
+                break;
+            }
+        }
       else
-	{
-	  switch (c)
-	    {
-	    case ' ':
-	    case '\t':
-	      if (first_comments_seen)
-		have_help_text = true;
-	      break;
+        {
+          switch (c)
+            {
+            case ' ':
+            case '\t':
+              if (first_comments_seen)
+                have_help_text = true;
+              break;
 
-	    case '\n':
-	      if (first_comments_seen)
-		have_help_text = true;
-	      continue;
+            case '\n':
+              if (first_comments_seen)
+                have_help_text = true;
+              continue;
 
-	    case '%':
-	    case '#':
-	      begin_comment = true;
-	      in_comment = true;
-	      break;
+            case '%':
+            case '#':
+              begin_comment = true;
+              in_comment = true;
+              break;
 
-	    default:
-	      goto done;
-	    }
-	}
+            default:
+              goto done;
+            }
+        }
     }
 
  done:
 
   if (! help_txt.empty ())
     {
       if (looks_like_octave_copyright (help_txt)) 
-	help_txt.resize (0);
+        help_txt.resize (0);
 
       if (help_txt.empty ())
-	help_txt = extract_help_text ();
+        help_txt = extract_help_text ();
     }
 
   return help_txt;
 }
 
 int
 main (int argc, char **argv)
 {
@@ -148,17 +148,17 @@ main (int argc, char **argv)
       file_name = argv[2];
     }
 
   std::string help_text = extract_help_text ();  
 
   if (! help_text.empty ())
     {
       std::cout << "" << name << "\n"
-		<< "@c " << file_name << "\n"
+        	<< "@c " << file_name << "\n"
 		<< help_text;
 
       if (help_text[help_text.length () - 1] != '\n')
 	std::cout << "\n";
     }
 
   return 0;
 }
