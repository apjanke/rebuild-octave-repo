# HG changeset patch
# User Kai T. Ohlhus <k.ohlhus@gmail.com>
# Date 1521716167 -3600
#      Thu Mar 22 11:56:07 2018 +0100
# Branch stable
# Node ID 0cd310ac0d779b1f671056861c101466632d1a6d
# Parent  5371922e5665eeb7d571c24c2a6b444815ad5eeb
* libinterp/corefcn/symrec.h: consistent use of context_id.

In that file, there is

   typedef size_t context_id;

Except of the instances replaced here, all usgages of "size_t" seem to have
been replaced by context_id.

diff --git a/libinterp/corefcn/symrec.h b/libinterp/corefcn/symrec.h
--- a/libinterp/corefcn/symrec.h
+++ b/libinterp/corefcn/symrec.h
@@ -176,19 +176,19 @@ namespace octave
       //       foo (n-1);
       //     else
       //       eval ("x = 1");
       //     endif
       //   endfunction
       //
       // Here, X should only exist in the final stack frame.
 
-      size_t pop_context (void)
+      context_id pop_context (void)
       {
-        size_t retval = 1;
+        context_id retval = 1;
 
         if (auto t_fwd_rep = m_fwd_rep.lock ())
           return retval;
 
         if (! (is_persistent () || is_global ()))
           {
             m_value_stack.pop_back ();
             retval = m_value_stack.size ();
@@ -599,17 +599,17 @@ namespace octave
 
     octave_value varval (context_id context) const
     {
       return m_rep->varval (context);
     }
 
     void push_context (void) { m_rep->push_context (); }
 
-    size_t pop_context (void) { return m_rep->pop_context (); }
+    context_id pop_context (void) { return m_rep->pop_context (); }
 
     void clear (context_id context) { m_rep->clear (context); }
 
     bool is_defined (context_id context) const
     {
       return m_rep->is_defined (context);
     }
 
