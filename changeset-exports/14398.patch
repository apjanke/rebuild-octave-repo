# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1330030514 18000
#      Thu Feb 23 15:55:14 2012 -0500
# Node ID e8bc9c02533a9995f6b36799dd2d9b888e799539
# Parent  e41e538e9d035f398096e24d0673153ee4f65953
# Parent  670feb71afdef1db7574bc8ca91d98b5a3baff85
maint: periodic merge of stable to default

diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -28,17 +28,17 @@ EXTERN_CFLAGS="$CFLAGS"
 EXTERN_CXXFLAGS="$CXXFLAGS"
 
 AC_INIT([GNU Octave], [3.7.0+], [http://octave.org/bugs.html], [octave])
 
 dnl PACKAGE_VERSION is set by the AC_INIT VERSION arg
 OCTAVE_VERSION="$PACKAGE_VERSION"
 OCTAVE_API_VERSION_NUMBER="48"
 OCTAVE_API_VERSION="api-v$OCTAVE_API_VERSION_NUMBER+"
-OCTAVE_RELEASE_DATE="2012-02-07"
+OCTAVE_RELEASE_DATE="2012-02-22"
 OCTAVE_COPYRIGHT="Copyright (C) 2012 John W. Eaton and others."
 AC_SUBST(OCTAVE_VERSION)
 AC_SUBST(OCTAVE_API_VERSION_NUMBER)
 AC_SUBST(OCTAVE_API_VERSION)
 AC_SUBST(OCTAVE_RELEASE_DATE)
 AC_SUBST(OCTAVE_COPYRIGHT)
 
 AC_REVISION($Revision: 1.603 $)
diff --git a/libcruft/Makefile.am b/libcruft/Makefile.am
--- a/libcruft/Makefile.am
+++ b/libcruft/Makefile.am
@@ -15,17 +15,20 @@
 # for more details.
 #
 # You should have received a copy of the GNU General Public License
 # along with Octave; see the file COPYING.  If not, see
 # <http://www.gnu.org/licenses/>.
 
 include $(top_srcdir)/build-aux/common.mk
 
-AM_CPPFLAGS = @CPPFLAGS@ -I../libgnu -I$(top_srcdir)/libgnu
+## Search local directories before those specified by the user.
+AM_CPPFLAGS = \
+  -I../libgnu -I$(top_srcdir)/libgnu \
+  @CPPFLAGS@
 
 AUTOMAKE_OPTIONS = subdir-objects
 
 octlib_LTLIBRARIES = libcruft.la
 
 libcruft_la_SOURCES =
 
 libcruft_la_FFLAGS = $(F77_INTEGER_8_FLAG)
diff --git a/liboctave/CColVector.cc b/liboctave/CColVector.cc
--- a/liboctave/CColVector.cc
+++ b/liboctave/CColVector.cc
@@ -341,23 +341,29 @@ operator * (const ComplexMatrix& m, cons
   if (nc != a_len)
     gripe_nonconformant ("operator *", nr, nc, a_len, 1);
   else
     {
       retval.clear (nr);
 
       if (nr != 0)
         {
-          Complex *y = retval.fortran_vec ();
+          if (nc == 0)
+            retval.fill (0.0);
+          else
+            {
+              Complex *y = retval.fortran_vec ();
 
-          F77_XFCN (zgemv, ZGEMV, (F77_CONST_CHAR_ARG2 ("N", 1),
-                                   nr, nc, 1.0, m.data (), nr,
-                                   a.data (), 1, 0.0, y, 1
-                                   F77_CHAR_ARG_LEN (1)));
+              F77_XFCN (zgemv, ZGEMV, (F77_CONST_CHAR_ARG2 ("N", 1),
+                                       nr, nc, 1.0, m.data (), nr,
+                                       a.data (), 1, 0.0, y, 1
+                                       F77_CHAR_ARG_LEN (1)));
+            }
         }
+
     }
 
   return retval;
 }
 
 // matrix by column vector -> column vector operations
 
 ComplexColumnVector
diff --git a/liboctave/Makefile.am b/liboctave/Makefile.am
--- a/liboctave/Makefile.am
+++ b/liboctave/Makefile.am
@@ -15,19 +15,21 @@
 # for more details.
 #
 # You should have received a copy of the GNU General Public License
 # along with Octave; see the file COPYING.  If not, see
 # <http://www.gnu.org/licenses/>.
 
 include $(top_srcdir)/build-aux/common.mk
 
+## Search local directories before those specified by the user.
 AM_CPPFLAGS = \
-  @CPPFLAGS@ -I../libgnu -I$(top_srcdir)/libgnu \
-  -I$(top_srcdir)/libcruft/misc
+  -I../libgnu -I$(top_srcdir)/libgnu \
+  -I$(top_srcdir)/libcruft/misc \
+  @CPPFLAGS@
 
 EXTRA_DIST = \
   config-ops.sh \
   mk-ops.awk \
   mx-op-inc.mk \
   mx-op-src.mk \
   mx-ops \
   smx-op-inc.mk \
diff --git a/liboctave/config-ops.sh b/liboctave/config-ops.sh
--- a/liboctave/config-ops.sh
+++ b/liboctave/config-ops.sh
@@ -29,77 +29,77 @@ liboctave_dir="$top_srcdir/liboctave"
 mk_ops="$liboctave_dir/mk-ops.awk"
 sparse_mk_ops="$liboctave_dir/sparse-mk-ops.awk"
 
 case "$obj_type" in
   vx | all)
     case "$src_type" in
       inc | all)
         VX_INC=$($AWK -f $mk_ops prefix=vx list_h_files=1 $liboctave_dir/vx-ops)
-        echo "VX_OP_INC = $(echo $VX_INC)" > $liboctave_dir/vx-op-inc.mk-t
+        echo "VX_OP_INC = $VX_INC" > $liboctave_dir/vx-op-inc.mk-t
         $move_if_change $liboctave_dir/vx-op-inc.mk-t $liboctave_dir/vx-op-inc.mk
       ;;
     esac
   ;;
 esac
 
 case "$obj_type" in
   vx | all)
     case "$src_type" in
       src | all)
         VX_SRC=$($AWK -f $mk_ops prefix=vx list_cc_files=1 $liboctave_dir/vx-ops)
-        echo "VX_OP_SRC = $(echo $VX_SRC)" > $liboctave_dir/vx-op-src.mk-t
+        echo "VX_OP_SRC = $VX_SRC" > $liboctave_dir/vx-op-src.mk-t
         $move_if_change $liboctave_dir/vx-op-src.mk-t $liboctave_dir/vx-op-src.mk
       ;;
     esac
   ;;
 esac
 
 case "$obj_type" in
   mx | all)
     case "$src_type" in
       inc | all)
         MX_INC=$($AWK -f $mk_ops prefix=mx list_h_files=1 $liboctave_dir/mx-ops)
-        echo "MX_OP_INC = $(echo $MX_INC)" > $liboctave_dir/mx-op-inc.mk-t
+        echo "MX_OP_INC = $MX_INC" > $liboctave_dir/mx-op-inc.mk-t
         $move_if_change $liboctave_dir/mx-op-inc.mk-t $liboctave_dir/mx-op-inc.mk
       ;;
     esac
   ;;
 esac
 
 case "$obj_type" in
   mx | all)
     case "$src_type" in
       src | all)
         MX_SRC=$($AWK -f $mk_ops prefix=mx list_cc_files=1 $liboctave_dir/mx-ops)
-        echo "MX_OP_SRC = $(echo $MX_SRC)" > $liboctave_dir/mx-op-src.mk-t
+        echo "MX_OP_SRC = $MX_SRC" > $liboctave_dir/mx-op-src.mk-t
         $move_if_change $liboctave_dir/mx-op-src.mk-t $liboctave_dir/mx-op-src.mk
       ;;
     esac
   ;;
 esac
 
 case "$obj_type" in
   smx | all)
     case "$src_type" in
       inc | all)
         SMX_INC=$($AWK -f $sparse_mk_ops prefix=smx list_h_files=1 $liboctave_dir/sparse-mx-ops)
-        echo "SMX_OP_INC = $(echo $SMX_INC)" > $liboctave_dir/smx-op-inc.mk-t
+        echo "SMX_OP_INC = $SMX_INC" > $liboctave_dir/smx-op-inc.mk-t
         $move_if_change $liboctave_dir/smx-op-inc.mk-t $liboctave_dir/smx-op-inc.mk
       ;;
     esac
   ;;
 esac
 
 case "$obj_type" in
   smx | all)
     case "$src_type" in
       src | all)
         SMX_SRC=$($AWK -f $sparse_mk_ops prefix=smx list_cc_files=1 $liboctave_dir/sparse-mx-ops)
-        echo "SMX_OP_SRC = $(echo $SMX_SRC)" > $liboctave_dir/smx-op-src.mk-t
+        echo "SMX_OP_SRC = $SMX_SRC" > $liboctave_dir/smx-op-src.mk-t
         $move_if_change $liboctave_dir/smx-op-src.mk-t $liboctave_dir/smx-op-src.mk
       ;;
     esac
   ;;
 esac
 
 
 
diff --git a/liboctave/dColVector.cc b/liboctave/dColVector.cc
--- a/liboctave/dColVector.cc
+++ b/liboctave/dColVector.cc
@@ -207,22 +207,27 @@ operator * (const Matrix& m, const Colum
   if (nc != a_len)
     gripe_nonconformant ("operator *", nr, nc, a_len, 1);
   else
     {
       retval.clear (nr);
 
       if (nr != 0)
         {
-          double *y = retval.fortran_vec ();
+          if (nc == 0)
+            retval.fill (0.0);
+          else
+            {
+              double *y = retval.fortran_vec ();
 
-          F77_XFCN (dgemv, DGEMV, (F77_CONST_CHAR_ARG2 ("N", 1),
-                                   nr, nc, 1.0, m.data (), nr,
-                                   a.data (), 1, 0.0, y, 1
-                                   F77_CHAR_ARG_LEN (1)));
+              F77_XFCN (dgemv, DGEMV, (F77_CONST_CHAR_ARG2 ("N", 1),
+                                       nr, nc, 1.0, m.data (), nr,
+                                       a.data (), 1, 0.0, y, 1
+                                       F77_CHAR_ARG_LEN (1)));
+            }
         }
     }
 
   return retval;
 }
 
 // diagonal matrix by column vector -> column vector operations
 
diff --git a/liboctave/fCColVector.cc b/liboctave/fCColVector.cc
--- a/liboctave/fCColVector.cc
+++ b/liboctave/fCColVector.cc
@@ -341,22 +341,27 @@ operator * (const FloatComplexMatrix& m,
   if (nc != a_len)
     gripe_nonconformant ("operator *", nr, nc, a_len, 1);
   else
     {
       retval.clear (nr);
 
       if (nr != 0)
         {
-          FloatComplex *y = retval.fortran_vec ();
+          if (nc == 0)
+            retval.fill (0.0);
+          else
+            {
+              FloatComplex *y = retval.fortran_vec ();
 
-          F77_XFCN (cgemv, CGEMV, (F77_CONST_CHAR_ARG2 ("N", 1),
-                                   nr, nc, 1.0f, m.data (), nr,
-                                   a.data (), 1, 0.0f, y, 1
-                                   F77_CHAR_ARG_LEN (1)));
+              F77_XFCN (cgemv, CGEMV, (F77_CONST_CHAR_ARG2 ("N", 1),
+                                       nr, nc, 1.0f, m.data (), nr,
+                                       a.data (), 1, 0.0f, y, 1
+                                       F77_CHAR_ARG_LEN (1)));
+            }
         }
     }
 
   return retval;
 }
 
 // matrix by column vector -> column vector operations
 
diff --git a/liboctave/fColVector.cc b/liboctave/fColVector.cc
--- a/liboctave/fColVector.cc
+++ b/liboctave/fColVector.cc
@@ -206,22 +206,27 @@ operator * (const FloatMatrix& m, const 
   if (nc != a_len)
     gripe_nonconformant ("operator *", nr, nc, a_len, 1);
   else
     {
       retval.clear (nr);
 
       if (nr != 0)
         {
-          float *y = retval.fortran_vec ();
+          if (nc == 0)
+            retval.fill (0.0);
+          else
+            {
+              float *y = retval.fortran_vec ();
 
-          F77_XFCN (sgemv, SGEMV, (F77_CONST_CHAR_ARG2 ("N", 1),
-                                   nr, nc, 1.0f, m.data (), nr,
-                                   a.data (), 1, 0.0f, y, 1
-                                   F77_CHAR_ARG_LEN (1)));
+              F77_XFCN (sgemv, SGEMV, (F77_CONST_CHAR_ARG2 ("N", 1),
+                                       nr, nc, 1.0f, m.data (), nr,
+                                       a.data (), 1, 0.0f, y, 1
+                                       F77_CHAR_ARG_LEN (1)));
+            }
         }
     }
 
   return retval;
 }
 
 // diagonal matrix by column vector -> column vector operations
 
diff --git a/liboctave/mk-ops.awk b/liboctave/mk-ops.awk
--- a/liboctave/mk-ops.awk
+++ b/liboctave/mk-ops.awk
@@ -88,23 +88,23 @@ BEGIN {
           while (NF > n)
             bool_headers[k++] = $(++n);
 
           cc_file = sprintf ("%s-%s-%s.cc", prefix, lhs_tag, rhs_tag);
           h_file = sprintf ("%s-%s-%s.h", prefix, lhs_tag, rhs_tag);
 
           if (list_cc_files)
             {
-              print cc_file;
+              printf (" %s", cc_file);
               next;
             }
 
           if (list_h_files)
             {
-              print h_file;
+              printf (" %s", h_file);
               next;
             }
 
           if (make_inclusive_header)
             {
               printf ("#include \"%s\"\n", h_file);
               next;
             }
diff --git a/liboctave/sparse-mk-ops.awk b/liboctave/sparse-mk-ops.awk
--- a/liboctave/sparse-mk-ops.awk
+++ b/liboctave/sparse-mk-ops.awk
@@ -87,23 +87,23 @@ BEGIN {
           while (NF > n)
             bool_headers[k++] = $(++n);
 
           cc_file = sprintf ("%s-%s-%s.cc", prefix, lhs_tag, rhs_tag);
           h_file = sprintf ("%s-%s-%s.h", prefix, lhs_tag, rhs_tag);
 
           if (list_cc_files)
             {
-              print cc_file;
+              printf (" %s", cc_file);
               next;
             }
 
           if (list_h_files)
             {
-              print h_file;
+              printf (" %s", h_file);
               next;
             }
 
           if (make_inclusive_header)
             {
               printf ("#include \"%s\"\n", h_file);
               next;
             }
diff --git a/src/Makefile.am b/src/Makefile.am
--- a/src/Makefile.am
+++ b/src/Makefile.am
@@ -15,21 +15,23 @@
 # for more details.
 #
 # You should have received a copy of the GNU General Public License
 # along with Octave; see the file COPYING.  If not, see
 # <http://www.gnu.org/licenses/>.
 
 include $(top_srcdir)/build-aux/common.mk
 
+## Search local directories before those specified by the user.
 AM_CPPFLAGS = \
-  @CPPFLAGS@ -I../libgnu -I$(top_srcdir)/libgnu \
+  -I../libgnu -I$(top_srcdir)/libgnu \
   -I$(top_srcdir)/libcruft/misc \
   -I../liboctave -I$(top_srcdir)/liboctave \
-  -I. -I$(srcdir)
+  -I. -I$(srcdir) \
+  @CPPFLAGS@
 
 AUTOMAKE_OPTIONS = subdir-objects
 
 octlib_LTLIBRARIES = liboctinterp.la
 
 if AMCOND_BUILD_COMPILED_AUX_PROGRAMS
 bin_PROGRAMS = \
   mkoctfile \
