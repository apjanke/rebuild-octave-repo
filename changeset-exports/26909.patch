# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1552547122 0
#      Thu Mar 14 07:05:22 2019 +0000
# Node ID 5042a568771aec7d41d06eef2a2fe0e22d6ab454
# Parent  6bd408bde569b74c83be781cc2aba79b361abbfe
don't disable all of sundials if including sunlinsol_klu.h fails (bug #55911)

* configure.ac (HAVE_SUNDIALS): Don't disable sundials if
sunlinsol_klu.h is missing or unusable.

* acinclude.m4 (OCTAVE_CHECK_SUNDIALS_SUNLINSOL_KLU): Don't define
HAVE_SUNDIALS_SUNLINSOL_KLU if sunlinsol_klu.h is missing or unusable.

* __ode15__.cc: Make inline definition of replacement for
SUNLinSol_KLU conditional.

diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -2214,17 +2214,16 @@ dnl Define this way instead of with an #
 dnl the build features script will get the correct value.
 dnl
 dnl The test on the sunlinsol_klu.h header is a bit of a kluge.
 dnl How can we do a better job here?  Do we need to disable sundials
 dnl any tests fail, or can we fix __ode15__.cc so that it still partially
 dnl works when some things are missing (for example, KLU)?
 if test -n "$SUNDIALS_IDA_LIBS" \
     && test -n "$SUNDIALS_NVECSERIAL_LIBS" \
-    && test "x$ac_cv_header_sunlinsol_sunlinsol_klu_h" = xyes \
     && test $octave_cv_sundials_sunlinsol_dense = yes \
     && test $octave_cv_sundials_realtype_is_double = yes; then
   AC_DEFINE(HAVE_SUNDIALS, 1, [Define to 1 if SUNDIALS is available.])
 else
   warn_sundials_disabled="disabling SUNDIALS because something is missing, solvers odee15i and ode15s will be disabled"
   OCTAVE_CONFIGURE_WARNING([warn_sundials_disabled])
 fi
 
diff --git a/libinterp/dldfcn/__ode15__.cc b/libinterp/dldfcn/__ode15__.cc
--- a/libinterp/dldfcn/__ode15__.cc
+++ b/libinterp/dldfcn/__ode15__.cc
@@ -95,22 +95,24 @@ IDASetLinearSolver (void *ida_mem, SUNLi
 #  if ! defined (HAVE_SUNLINSOL_DENSE) && defined (HAVE_SUNDENSELINEARSOLVER)
 static inline SUNLinearSolver
 SUNLinSol_Dense (N_Vector y, SUNMatrix A)
 {
   return SUNDenseLinearSolver (y, A);
 }
 #  endif
 
-#  if ! defined (HAVE_SUNLINSOL_KLU) && defined (HAVE_SUNKLU)
+#  if defined (HAVE_SUNDIALS_SUNLINSOL_KLU)
+#    if ! defined (HAVE_SUNLINSOL_KLU) && defined (HAVE_SUNKLU)
 static inline SUNLinearSolver
 SUNLinSol_KLU (N_Vector y, SUNMatrix A)
 {
   return SUNKLU (y, A);
 }
+#    endif
 #  endif
 
 static inline realtype *
 nv_data_s (N_Vector& v)
 {
 #if defined (HAVE_PRAGMA_GCC_DIAGNOSTIC)
    // Disable warning from GCC about old-style casts in Sundials
    // macro expansions.  Do this in a function so that this
diff --git a/m4/acinclude.m4 b/m4/acinclude.m4
--- a/m4/acinclude.m4
+++ b/m4/acinclude.m4
@@ -2264,21 +2264,22 @@ AC_DEFUN([OCTAVE_CHECK_SUNDIALS_SUNLINSO
          #include <sunlinsol/sunlinsol_klu.h>
          #endif
          ]], [[
          SUNKLU (0, 0);
       ]])],
       octave_cv_sundials_sunlinsol_klu=yes,
       octave_cv_sundials_sunlinsol_klu=no)
     ])
-  if test $octave_cv_sundials_sunlinsol_klu = yes; then
+  if test $octave_cv_sundials_sunlinsol_klu = yes \
+     && test "x$ac_cv_header_sunlinsol_sunlinsol_klu_h" = xyes; then
     AC_DEFINE(HAVE_SUNDIALS_SUNLINSOL_KLU, 1,
       [Define to 1 if SUNDIALS IDA is configured with SUNLINSOL_KLU enabled.])
   else
-    warn_sundials_sunlinsol_klu="SUNDIALS IDA library not configured with SUNLINSOL_KLU, ode15i and ode15s will not support the sparse Jacobian feature"
+    warn_sundials_sunlinsol_klu="SUNDIALS IDA library not configured with SUNLINSOL_KLU or sunlinksol_klu.h is not usable; ode15i and ode15s will not support the sparse Jacobian feature"
     OCTAVE_CONFIGURE_WARNING([warn_sundials_sunlinsol_klu])
   fi
 ])
 dnl
 dnl Check whether SUNDIALS IDA library has the SUNLINSOL_DENSE linear solver.
 dnl The IDADENSE API was removed in SUNDIALS version 3.0.0.
 dnl
 AC_DEFUN([OCTAVE_CHECK_SUNDIALS_SUNLINSOL_DENSE], [
