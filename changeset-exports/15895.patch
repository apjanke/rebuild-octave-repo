# HG changeset patch
# User Michael Goffioul <michael.goffioul@gmail.com>
# Date 1357264867 18000
#      Thu Jan 03 21:01:07 2013 -0500
# Branch classdef
# Node ID ce8ad12ce8a0e0dd0c8880946399a8c24b35c5a6
# Parent  1ca9beb2a1943b0cfd90bdb1b6c58004d41f9e98
Force classdef name to match filename.

* libinterp/parse-tree/oct-parse.yy (make_classdef): Fail if the class name
does not match the filename.
(rule classdef): abort parsing if make_classdef fails.

diff --git a/libinterp/parse-tree/oct-parse.yy b/libinterp/parse-tree/oct-parse.yy
--- a/libinterp/parse-tree/oct-parse.yy
+++ b/libinterp/parse-tree/oct-parse.yy
@@ -1584,17 +1584,18 @@ classdef_beg    : CLASSDEF
                     lexer_flags.parsing_classdef = true;
                     $$ = $1;
                   }
                 ;
 
 classdef        : classdef_beg stash_comment opt_attr_list identifier opt_superclass_list opt_sep class_body opt_sep END
                   {
                     lexer_flags.parsing_classdef = false;
-                    $$ = make_classdef ($1, $3, $4, $5, $7, $9, $2);
+                    if (! ($$ = make_classdef ($1, $3, $4, $5, $7, $9, $2)))
+                      ABORT_PARSE;
                   }
                 ;
 
 opt_attr_list   : // empty
                   { $$ = 0; }
                 | '(' attr_list ')'
                   { $$ = $2; }
                 ;
@@ -3445,16 +3446,31 @@ make_meta_class_query (const std::string
 static tree_classdef *
 make_classdef (token *tok_val, tree_classdef_attribute_list *a,
                tree_identifier *id, tree_classdef_superclass_list *sc,
                tree_classdef_body *body, token *end_tok,
                octave_comment_list *lc)
 {
   tree_classdef *retval = 0;
 
+  std::string cls_name = id->name ();
+
+  std::string nm = curr_fcn_file_name;
+
+  size_t pos = nm.find_last_of (file_ops::dir_sep_chars ());
+
+  if (pos != std::string::npos)
+    nm = curr_fcn_file_name.substr (pos+1);
+
+  if (nm != cls_name)
+    {
+      yyerror ("invalid classdef definition, the class name must match the file name");
+      return retval;
+    }
+
   if (end_token_ok (end_tok, token::classdef_end))
     {
       octave_comment_list *tc = octave_comment_buffer::get_comment ();
 
       int l = tok_val->line ();
       int c = tok_val->column ();
 
       retval = new tree_classdef (a, id, sc, body, lc, tc, l, c);
