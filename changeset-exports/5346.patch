# HG changeset patch
# User dbateman
# Date 1115718098 0
#      Tue May 10 09:41:38 2005 +0000
# Node ID a103c41e68b20c2797255f0768748a7b6e7ad6f0
# Parent  2781568bf95109ae93695ede19c39e5b2f6590d5
[project @ 2005-05-10 09:41:38 by dbateman]

diff --git a/liboctave/CSparse.cc b/liboctave/CSparse.cc
--- a/liboctave/CSparse.cc
+++ b/liboctave/CSparse.cc
@@ -733,21 +733,21 @@ SparseComplexMatrix::determinant (octave
 
 	      if (status < 0)
 		{
 		  (*current_liboctave_error_handler) 
 		    ("SparseComplexMatrix::determinant error calculating determinant");
 		  
 		  UMFPACK_ZNAME (report_status) (control, status);
 		  UMFPACK_ZNAME (report_info) (control, info);
-		  
-		  UMFPACK_ZNAME (free_numeric) (&Numeric);
 		}
 	      else
 		retval = ComplexDET (d);
+		  
+	      UMFPACK_ZNAME (free_numeric) (&Numeric);
 	    }
 	}
     }
 #else
   (*current_liboctave_error_handler) ("UMFPACK not installed");
 #endif
 
   return retval;
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,14 @@
+2005-05-10  David Bateman <dbateman@free.fr>
+
+	* dSparse.cc (determinant): Free numeric factorization after
+	sucessful calculation.
+	* CSparse.cc (determinant): ditto.
+
 2005-05-06  John W. Eaton  <jwe@octave.org>
 
 	* dbleCHOL.cc (CHOL::init): Use xelem instead of elem for indexing
 	chol_mat.
 	(chol2mat_internal, chol2mat, CHOL::inverse): New functions.
 	* dbleCHOL.h (chol2mat_internal, chol2mat, CHOL::inverse):
 	Provide decls.
 
diff --git a/liboctave/dSparse.cc b/liboctave/dSparse.cc
--- a/liboctave/dSparse.cc
+++ b/liboctave/dSparse.cc
@@ -812,21 +812,21 @@ SparseMatrix::determinant (octave_idx_ty
 
 	      if (status < 0)
 		{
 		  (*current_liboctave_error_handler) 
 		    ("SparseMatrix::determinant error calculating determinant");
 		  
 		  UMFPACK_DNAME (report_status) (control, status);
 		  UMFPACK_DNAME (report_info) (control, info);
-
-		  UMFPACK_DNAME (free_numeric) (&Numeric);
 		}
 	      else
 		retval = DET (d);
+
+	      UMFPACK_DNAME (free_numeric) (&Numeric);
 	    }
 	}
     }
 #else
   (*current_liboctave_error_handler) ("UMFPACK not installed");
 #endif
 
   return retval;
