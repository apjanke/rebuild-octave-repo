# HG changeset patch
# User jwe
# Date 862872767 0
#      Mon May 05 22:52:47 1997 +0000
# Node ID b53d9b2acd88a1f71ea7a439769caa5437d24693
# Parent  0f33c19e5f102faa1da916021711cc478cd4097d
[project @ 1997-05-05 22:50:28 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,12 @@
 Mon May  5 00:54:03 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* DLD-FUNCTIONS/getpwent.cc: Use new octave_passwd class.
+
 	* ov-str-mat.cc (octave_char_matrix_str::print_name_tag): Print
 	empty strings on one line.
 
 	* DLD-FUNCTIONS, OPERATORS, and	TEMPLATE-INST: New subdirectories.
 	Move appropriate files to new directories.
 	* Makefile.in: Add DLD-FUNCTIONS, OPERATORS, and TEMPLATE-INST
 	directories to VPATH.  Fix rules to work with new directory
 	structure.
diff --git a/src/DLD-FUNCTIONS/getpwent.cc b/src/DLD-FUNCTIONS/getpwent.cc
--- a/src/DLD-FUNCTIONS/getpwent.cc
+++ b/src/DLD-FUNCTIONS/getpwent.cc
@@ -25,47 +25,45 @@ Software Foundation, 59 Temple Place - S
 #endif
 
 #include <string>
 
 #ifdef HAVE_SYS_TYPES_H
 #include <sys/types.h>
 #endif
 
-#ifdef HAVE_PWD_H
-#include <pwd.h>
-#endif
+#include "oct-passwd.h"
 
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "help.h"
 #include "oct-map.h"
 #include "ov.h"
 #include "oct-obj.h"
 #include "utils.h"
 
 // Password file functions.  (Why not?)
 
 static octave_value
-mk_pw_map (struct passwd *pw)
+mk_pw_map (const octave_passwd& pw)
 {
   octave_value retval;
 
   if (pw)
     {
       Octave_map m;
 
-      m ["name"] = pw->pw_name;
-      m ["passwd"] = pw->pw_passwd;
-      m ["uid"] = static_cast<double> (pw->pw_uid);
-      m ["gid"] = static_cast<double> (pw->pw_gid);
-      m ["gecos"] = pw->pw_gecos;
-      m ["dir"] = pw->pw_dir;
-      m ["shell"] = pw->pw_shell;
+      m ["name"] = pw.name ();
+      m ["passwd"] = pw.passwd ();
+      m ["uid"] = static_cast<double> (pw.uid ());
+      m ["gid"] = static_cast<double> (pw.gid ());
+      m ["gecos"] = pw.gecos ();
+      m ["dir"] = pw.dir ();
+      m ["shell"] = pw.shell ();
 
       retval = m;
     }
   else
     retval = 0.0;
 
   return retval;
 }
@@ -75,23 +73,17 @@ DEFUN_DLD (getpwent, args, ,
 \n\
 Read an entry from the password-file stream, opening it if necessary.")
 {
   octave_value retval;
 
   int nargin = args.length ();
 
   if (nargin == 0)
-    {
-#ifdef HAVE_GETPWENT
-      retval = mk_pw_map (getpwent ());
-#else
-      gripe_not_supported ("getpwent");
-#endif
-    }
+    retval = mk_pw_map (octave_passwd::getpwent ());
   else
     print_usage ("getpwent");
 
   return retval;
 }
 
 DEFUN_DLD (getpwuid, args, ,
   "getpwuid (UID)\n\
@@ -99,33 +91,29 @@ DEFUN_DLD (getpwuid, args, ,
 Search for a password entry with a matching user ID.")
 {
   octave_value retval;
 
   int nargin = args.length ();
 
   if (nargin == 1)
     {
-#ifdef HAVE_GETPWUID
       double dval = args(0).double_value ();
 
       if (! error_state)
 	{
 	  if (D_NINT (dval) == dval)
 	    {
 	      uid_t uid = static_cast<uid_t> (dval);
 
-	      retval = mk_pw_map (getpwuid (uid));
+	      retval = mk_pw_map (octave_passwd::getpwuid (uid));
 	    }
 	  else
 	    error ("getpwuid: argument must be an integer");
 	}
-#else
-      gripe_not_supported ("getpwuid");
-#endif
     }
   else
     print_usage ("getpwuid");
 
   return retval;
 }
 
 DEFUN_DLD (getpwnam, args, ,
@@ -134,24 +122,20 @@ DEFUN_DLD (getpwnam, args, ,
 Search for password entry with a matching username.")
 {
   octave_value retval;
 
   int nargin = args.length ();
 
   if (nargin == 1)
     {
-#ifdef HAVE_GETPWNAM
       string s = args(0).string_value ();
 
       if (! error_state)
-	retval = mk_pw_map (getpwnam (s.c_str ()));
-#else
-      gripe_not_supported ("getpwnam");
-#endif
+	retval = mk_pw_map (octave_passwd::getpwnam (s.c_str ()));
     }
   else
     print_usage ("getpwnam");
 
   return retval;
 }
 
 DEFUN_DLD (setpwent, args, ,
@@ -159,46 +143,34 @@ DEFUN_DLD (setpwent, args, ,
 \n\
 Rewind the password-file stream.")
 {
   octave_value retval;
 
   int nargin = args.length ();
 
   if (nargin == 0)
-    {
-#ifdef HAVE_SETPWENT
-      setpwent ();
-#else
-      gripe_not_supported ("setpwent");
-#endif
-    }
+    octave_passwd::setpwent ();
   else
     print_usage ("setpwent");
 
   return retval;
 }
 
 DEFUN_DLD (endpwent, args, ,
   "endpwent ()\n\
 \n\
 Close the password-file stream.")
 {
   octave_value retval;
 
   int nargin = args.length ();
 
   if (nargin == 0)
-    {
-#ifdef HAVE_ENDPWENT
-      endpwent ();
-#else
-      gripe_not_supported ("endpwent");
-#endif
-    }
+    octave_passwd::endpwent ();
   else
     print_usage ("endpwent");
 
   return retval;
 }
 
 /*
 ;;; Local Variables: ***
diff --git a/src/ov-str-mat.cc b/src/ov-str-mat.cc
--- a/src/ov-str-mat.cc
+++ b/src/ov-str-mat.cc
@@ -234,17 +234,17 @@ octave_char_matrix_str::print_raw (ostre
 
 bool
 octave_char_matrix_str::print_name_tag (ostream& os, const string& name) const
 {
   bool retval = false;
 
   indent (os);
 
-  if (rows () == 1)
+  if (rows () <= 1)
     os << name << " = ";
   else
     {
       os << name << " =";
       newline (os);
       newline (os);
       retval = true;
     }
