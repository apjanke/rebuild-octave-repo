# HG changeset patch
# User jwe
# Date 1152910425 0
#      Fri Jul 14 20:53:45 2006 +0000
# Node ID b9676944b7a2f58c5266b9cac34113b9ecbf930c
# Parent  bd3041e30d97fbe0c0c2eb8345b4c502bd7e67b7
[project @ 2006-07-14 20:53:45 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,13 @@
 2006-07-14  John W. Eaton  <jwe@octave.org>
 
+	* ov-str-mat.h (octave_char_matrix_sq_str::resize):
+	Include fill arg to match base class.
+
 	* ov-base-mat.cc, ov-base-mat.h, ov-base-sparse.cc,
 	ov-base-sparse.h, ov-base.cc, ov-base.h, ov-bool.cc,
 	ov-bool.h, ov-complex.cc, ov-complex.h, ov-intx.h, ov-list.cc,
 	ov-list.h, ov-range.cc, ov-range.h, ov-scalar.cc, ov-scalar.h,
 	ov-str-mat.cc, ov-str-mat.h, ov.h (do_index_op):
 	Declare	resize_ok arg as bool, not int.
 	Provide default value for resize_ok.
 
diff --git a/src/ov-str-mat.h b/src/ov-str-mat.h
--- a/src/ov-str-mat.h
+++ b/src/ov-str-mat.h
@@ -202,17 +202,17 @@ public:
   octave_base_value *empty_clone (void) const { return new octave_char_matrix_sq_str (); }
 
   octave_value reshape (const dim_vector& new_dims) const
     { return octave_value (charNDArray (matrix.reshape (new_dims)), true, '\''); }
 
   octave_value permute (const Array<int>& vec, bool inv = false) const
     { return octave_value (charNDArray (matrix.permute (vec, inv)), true, '\''); }
 
-  octave_value resize (const dim_vector& dv) const
+  octave_value resize (const dim_vector& dv, bool fill = false) const
     {
       charNDArray retval (matrix);
       retval.resize (dv);
       return octave_value (retval, true, '\'');
     }
 
   bool is_sq_string (void) const { return true; }
 
