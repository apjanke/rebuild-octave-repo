# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1259147109 -3600
#      Wed Nov 25 12:05:09 2009 +0100
# Branch release-3-2-x
# Node ID d82388277620cf3aa3319e35b7ce5e7fec4fdbf0
# Parent  1fc9fd052f0c0e26cf37c87ff22799f880ce1669
fix bug in balance

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,12 @@
+2009-11-17  Jaroslav Hajek  <highegg@gmail.com>
+
+	* base-aepbal.h (permuting_vector): Fix lower part swapping.
+
 2009-11-18  David Grundberg  <davidg@cs.umu.se>
 
        * str-vec.cc (string_vector::list_in_columns): Avoid crash on
        empty arguments from list_in_columns.
 
 2009-10-27  David Bateman  <dbateman@free.fr>
 
 	* SparsedbleLU.cc (SparseLU::SparseLU (const SparseMatrix&,
diff --git a/liboctave/base-aepbal.h b/liboctave/base-aepbal.h
--- a/liboctave/base-aepbal.h
+++ b/liboctave/base-aepbal.h
@@ -59,26 +59,22 @@ public:
     {
       octave_idx_type n = balanced_mat.rows ();
       VectorT pv (n);
       for (octave_idx_type i = 0; i < n; i++)
         pv(i) = i+1;
       for (octave_idx_type i = n-1; i >= ihi; i--)
         {
           octave_idx_type j = scale(i) - 1;
-          octave_idx_type k = pv(j);
-          pv(j) = pv(i);
-          pv(i) = k;
+          std::swap (pv(i), pv(j));
         }
-      for (octave_idx_type i = ilo-2; i >= 0; i--)
+      for (octave_idx_type i = 0; i < ilo-1; i++)
         {
           octave_idx_type j = scale(i) - 1;
-          octave_idx_type k = pv(j);
-          pv(j) = pv(i);
-          pv(i) = k;
+          std::swap (pv(i), pv(j));
         }
       
       return pv;
     }
 
   VectorT scaling_vector (void) const
     {
       octave_idx_type n = balanced_mat.rows ();
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,12 @@
+2009-11-17  Jaroslav Hajek  <highegg@gmail.com>
+
+	* DLD-FUNCTIONS/balance.cc: Fix docs.
+
 2009-11-03  David Grundberg  <davidg@cs.umu.se>
 
 	* ov-class.cc (make_idx_args): Call user-defined subsref/subsasgn
 	with 1xN structs instead of Nx1.
 
 2009-09-30  John W. Eaton  <jwe@octave.org>
 
 	* error.cc (error_1, pr_where_2, handle_message):
diff --git a/src/DLD-FUNCTIONS/balance.cc b/src/DLD-FUNCTIONS/balance.cc
--- a/src/DLD-FUNCTIONS/balance.cc
+++ b/src/DLD-FUNCTIONS/balance.cc
@@ -58,17 +58,17 @@ Compute @code{aa = dd \\ a * dd} in whic
 row and column norms are roughly equal in magnitude, and\n\
 @code{dd} = @code{p * d}, in which @code{p} is a permutation\n\
 matrix and @code{d} is a diagonal matrix of powers of two.  This allows\n\
 the equilibration to be computed without roundoff.  Results of\n\
 eigenvalue calculation are typically improved by balancing first.\n\
 \n\
 If two output values are requested, @code{balance} returns \n\
 the diagonal @code{d} and the permutation @code{p} separately as vectors.  \n\
-In this case, @code{dd = eye(n)(p,:) * diag (d)}, where @code{n} is the matrix \n\
+In this case, @code{dd = eye(n)(:,p) * diag (d)}, where @code{n} is the matrix \n\
 size.  \n\
 \n\
 If four output values are requested, compute @code{aa = cc*a*dd} and\n\
 @code{bb = cc*b*dd)}, in which @code{aa} and @code{bb} have non-zero\n\
 elements of approximately the same magnitude and @code{cc} and @code{dd}\n\
 are permuted diagonal matrices as in @code{dd} for the algebraic\n\
 eigenvalue problem.\n\
 \n\
