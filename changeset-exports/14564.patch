# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1334457225 25200
#      Sat Apr 14 19:33:45 2012 -0700
# Node ID a459d42bb0a61d791538a02d9582e8df7bda6158
# Parent  c973d4637659aec8bafc5a7fc10b992597e4412c
Return an error exit code to shell when eval'ed code fails a memory allocation.

octave.cc (execute_eval_option_code, safe_source_file): Set error_state variable
to -2 when bad_alloc exception encountered.

diff --git a/src/octave.cc b/src/octave.cc
--- a/src/octave.cc
+++ b/src/octave.cc
@@ -312,16 +312,17 @@ safe_source_file (const std::string& fil
   catch (octave_execution_exception)
     {
       recover_from_exception ();
       gripe_safe_source_exception (file_name, "unhandled execution exception");
     }
   catch (std::bad_alloc)
     {
       recover_from_exception ();
+      error_state = -2;
       gripe_safe_source_exception
         (file_name,
          "memory exhausted or requested size too large for range of Octave's index type");
     }
 }
 
 // Initialize by reading startup files.
 
@@ -438,16 +439,17 @@ execute_eval_option_code (const std::str
   catch (octave_execution_exception)
     {
       recover_from_exception ();
       std::cerr << "error: unhandled execution exception -- eval failed"
                 << std::endl;
     }
   catch (std::bad_alloc)
     {
+      error_state = -2;
       std::cerr << "error: memory exhausted or requested size too large for range of Octave's index type -- eval failed"
                 << std::endl;
     }
 
   return parse_status;
 }
 
 static void
