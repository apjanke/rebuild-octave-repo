# HG changeset patch
# User jwe
# Date 811494778 0
#      Tue Sep 19 07:12:58 1995 +0000
# Node ID d90d88618a9e7d394ce15727ba2106d8bf68187c
# Parent  045e70a15a8f5a57014bd9018759815b63782e2d
[project @ 1995-09-19 07:12:58 by jwe]

diff --git a/src/defun.h b/src/defun.h
--- a/src/defun.h
+++ b/src/defun.h
@@ -54,34 +54,46 @@ Software Foundation, 59 Temple Place - S
 //     cannot be cleared.
 //
 //   sv_fcn is a pointer to a function that should be called whenever
 //     this variable is given a new value.  It can be 0 if there is no
 //     function to call.  See also the code in user-prefs.cc.
 //
 //   doc is the simple help text for this variable.
 
-#define DEFVAR(name, sname, defn, inst_as_fcn, protect, \
-	       eternal, sv_fcn, doc) \
+#define DEFVAR_INT(name, sname, defn, inst_as_fcn, protect, \
+		   sv_fcn, doc) \
   do \
     { \
       builtin_variable sname = \
 	{ \
 	  name, \
 	  new tree_constant (defn), \
 	  inst_as_fcn, \
 	  protect, \
-	  eternal, \
+	  (sv_fcn ? 1 : 0), \
 	  sv_fcn, \
 	  doc, \
 	}; \
       install_builtin_variable (&sname); \
     } \
   while (0)
 
+#define DEFVAR(name, sname, defn, inst_as_fcn, sv_fcn, doc) \
+  DEFVAR_INT (name, sname, defn, inst_as_fcn, 0, sv_fcn, doc)
+
+// Define a builtin-constant, and a corresponding variable that can be
+// redefined.  This is just the same as DEFVAR, except that it defines
+// `name' as a variable, and `__name__' as a constant that cannot be
+// redefined.
+
+#define DEFCONST(name, sname, defn, inst_as_fcn, sv_fcn, doc) \
+  DEFVAR_INT (name, sname, defn, inst_as_fcn, 0, sv_fcn, doc); \
+  DEFVAR_INT ("__" ## name ## "__", sname, defn, 0, 1, sv_fcn, doc)
+
 // Define a builtin function.
 //
 //   name is the name of the function, as a string.
 //
 //   fname is the name of the C++ function.  By convention, it is
 //     constructed by prefixing name with the character F.
 //
 //   sname is the name of the structure that is used to hold
@@ -89,17 +101,17 @@ Software Foundation, 59 Temple Place - S
 //     install_builtin_function to register the function in the symbol
 //     table.  By convention, it is constructed by prefixing name with
 //     the character S.
 //
 //   nargin_max is the maximum number of arguments this function can
 //     accept. XXX FIXME XXX -- is this really used now?
 //
 //   nargout_max is the maximum number of outputs this function can
-//   produce.  XXX FIXME XXX -- is this really used now?
+//     produce.  XXX FIXME XXX -- is this really used now?
 //
 //   doc is the simple help text for the function.
 
 #define DEFUN(name, fname, sname, nargin_max, nargout_max, doc) \
   DEFUN_INTERNAL (name, fname, sname, nargin_max, nargout_max, 0, doc)
 
 // Define a builtin text-style function.
 //
