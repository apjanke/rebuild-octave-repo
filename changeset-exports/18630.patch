# HG changeset patch
# User Torsten <ttl@justmail.de>
# Date 1396773532 -7200
#      Sun Apr 06 10:38:52 2014 +0200
# Branch gui-release
# Node ID a811d45b7ca7c80705ef4eb4c0eb8345deed3f4f
# Parent  a827fc5fe59d2e33aca57f38b1db90260b76ee26
fix checking duplicates for a new shortcut

* shortcut-manager.cc (init): add the widget name to the shortcut hash
  (shortcut_dialog_finished): add the widget name to the shortcut hash
  (enter_shortcut::keyPressEvent): allow entering shortcuts with function keys

diff --git a/libgui/src/shortcut-manager.cc b/libgui/src/shortcut-manager.cc
--- a/libgui/src/shortcut-manager.cc
+++ b/libgui/src/shortcut-manager.cc
@@ -130,25 +130,28 @@ shortcut_manager::do_init_data ()
 
 void
 shortcut_manager::init (QString description, QString key, QKeySequence def_sc)
 {
   QSettings *settings = resource_manager::get_settings ();
 
   QKeySequence actual = QKeySequence (settings->value ("shortcuts/"+key, def_sc).toString ());
 
+  // append the new shortcut to the list
   shortcut_t shortcut_info;
   shortcut_info.description = description;
   shortcut_info.settings_key = key;
   shortcut_info.actual_sc = actual;
   shortcut_info.default_sc = def_sc;
   _sc << shortcut_info;
 
+  // insert shortcut prepended by widget in order check for duplicates later
+  QString widget = key.section ('_',0,0);  // get widget that uses the shortcut
   if (! actual.isEmpty ())
-    _shortcut_hash[actual] = _sc.count ();  // offset of 1 to avoid 0
+    _shortcut_hash[widget + ":" + actual.toString ()] = _sc.count ();  // offset of 1 to avoid 0
   _action_hash[key] = _sc.count ();  // offset of 1 to avoid 0
 }
 
 void
 shortcut_manager::do_fill_treewidget (QTreeWidget *tree_view)
 {
   _dialog = 0;
   _level_hash.clear ();
@@ -328,17 +331,22 @@ shortcut_manager::shortcut_dialog (int i
 }
 
 void
 shortcut_manager::shortcut_dialog_finished (int result)
 {
   if (result == QDialog::Rejected)
     return;
 
-  int double_index = _shortcut_hash[_edit_actual->text()] - 1;
+  // check for duplicate
+
+  // get the widget for which this shortcut is defined
+  QString widget = _sc.at (_handled_index).settings_key.section ('_',0,0);
+  // and look
+  int double_index = _shortcut_hash[widget + ":" + _edit_actual->text()] - 1;
 
   if (double_index >= 0 && double_index != _handled_index)
     {
       int ret = QMessageBox::warning(this, tr("Double Shortcut"),
                   tr ("The chosen shortcut\n  \"%1\"\n"
                       "is already used for the action\n  \"%2\".\n"
                       "Do you want to use the shortcut anyhow removing it "
                       "from the previous action?")
@@ -361,17 +369,17 @@ shortcut_manager::shortcut_dialog_finish
   if (! shortcut.actual_sc.isEmpty ())
     _shortcut_hash.remove (shortcut.actual_sc);
   shortcut.actual_sc = _edit_actual->text();
   _sc.replace (_handled_index, shortcut);
 
   _index_item_hash[_handled_index]->setText (2, shortcut.actual_sc);
 
   if (! shortcut.actual_sc.isEmpty ())
-    _shortcut_hash[shortcut.actual_sc] = _handled_index + 1; // index+1 to avoid 0
+    _shortcut_hash[widget + ":" + shortcut.actual_sc.toString ()] = _handled_index + 1;
 }
 
 void
 shortcut_manager::shortcut_dialog_set_default ()
 {
   _edit_actual->setText (_label_default->text ());
 }
 
@@ -403,17 +411,17 @@ enter_shortcut::keyPressEvent (QKeyEvent
       QLineEdit::keyPressEvent (e);
       return;
     }
 
   if (e->type () == QEvent::KeyPress)
     {
       int key = e->key ();
 
-      if (key == Qt::Key_unknown || key == 0 || key >= 16777248)
+      if (key == Qt::Key_unknown || key == 0)
         return;
 
       Qt::KeyboardModifiers modifiers = e->modifiers ();
 
       if(modifiers & Qt::ShiftModifier)
         key += Qt::SHIFT;
       if(modifiers & Qt::ControlModifier)
         key += Qt::CTRL;
