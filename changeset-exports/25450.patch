# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1528737940 14400
#      Mon Jun 11 13:25:40 2018 -0400
# Branch stable
# Node ID 66b72fbf2845feb3bc86ffbce09f2789ee0fe334
# Parent  97e64c23fd076cd164c5cb86039e2a7356300dff
Backed out changeset 97e64c23fd07 (bug #54096)

This change was an attempt to fix bug 51725 but it caused other
trouble.  Backing out and making another attempt.

diff --git a/libinterp/corefcn/mex.cc b/libinterp/corefcn/mex.cc
--- a/libinterp/corefcn/mex.cc
+++ b/libinterp/corefcn/mex.cc
@@ -2464,37 +2464,28 @@ static inline void *
 maybe_unmark (void *ptr)
 {
   if (mex_context)
     mex_context->unmark (ptr);
 
   return ptr;
 }
 
-static mxArray *
-make_empty_matrix (void)
-{
-  static const mwSize zero = 0;
-
-  return new mxArray (mxDOUBLE_CLASS, zero, zero, mxREAL);
-}
-
 void
 mxArray_struct::set_field_by_number (mwIndex index, int key_num, mxArray *val)
 {
   if (key_num >= 0 && key_num < nfields)
-    data[nfields * index + key_num]
-      = val ? maybe_unmark_array (val) : make_empty_matrix ();
+    data[nfields * index + key_num] = maybe_unmark_array (val);
 }
 
 void
 mxArray_cell::set_cell (mwIndex idx, mxArray *val)
 {
   if (idx >= 0 && idx < get_number_of_elements ())
-    data[idx] = val ? maybe_unmark_array (val) : make_empty_matrix ();
+    data[idx] = maybe_unmark_array (val);
 }
 
 // ------------------------------------------------------------------
 
 // C interface to mxArray objects:
 
 // Floating point predicates.
 
