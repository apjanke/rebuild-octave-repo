# HG changeset patch
# User Rik <rik@octave.org>
# Date 1512065471 28800
#      Thu Nov 30 10:11:11 2017 -0800
# Node ID 648616b26cc68eabee9d5eefac5b549fc020f9c1
# Parent  999b167e5b4afaf7921d109cfd40fd966868d6fe
# Parent  1212ffc13d24d4a881ee2a70759c18b227b181e6
maint: merge of stable to default.

diff --git a/libinterp/parse-tree/pt-tm-const.cc b/libinterp/parse-tree/pt-tm-const.cc
--- a/libinterp/parse-tree/pt-tm-const.cc
+++ b/libinterp/parse-tree/pt-tm-const.cc
@@ -336,21 +336,30 @@ namespace octave
           {
             first_elem = false;
 
             dv = this_elt_dv;
           }
         else if (all_str && dv.ndims () == 2
                  && this_elt_dv.ndims () == 2)
           {
-            // FIXME: this is Octave's specialty.
-            // Character matrices allow rows of unequal length.
-            if (this_elt_nc > cols ())
-              dv(1) = this_elt_nc;
-            dv(0) += this_elt_nr;
+            // This is Octave's specialty.
+            // Character matrices support rows of unequal length.
+            if (dv.any_zero ())
+              {
+                // Empty existing element (bug #52542).
+                // Replace empty element with non-empty one.
+                dv = this_elt_dv;
+              }
+            else
+              {
+                if (this_elt_nc > cols ())
+                  dv(1) = this_elt_nc;
+                dv(0) += this_elt_nr;
+              }
           }
         else if ((! any_class) && (! dv.hvcat (this_elt_dv, 0)))
           eval_error ("vertical dimensions mismatch", dv, this_elt_dv);
       }
 
     ok = true;
   }
 
diff --git a/test/parser.tst b/test/parser.tst
--- a/test/parser.tst
+++ b/test/parser.tst
@@ -326,8 +326,14 @@
 ## Maybe unnecessary, but check that further changes to parser don't
 ## invalidate error handling (bug #46534).
 #!error <vertical dimensions mismatch \(1x2 vs 1x1\)> z = [1, 2; 3]
 
 %!test
 %! f = @(s,t=toeplitz(s),u=t(x=2:end-1,x)=32)t;
 %! assert (f (1), 1);
 %! assert (f (1, 2), 2);
+
+## FIXME: We need a sequence of concatenation tests since this seems
+##        to be a frequently reported source of incompatibilities w/Matlab
+## Check concatenation of empty char matrices (bug #52542)
+%!assert (double ([char(ones(0,3)); 'A']), 65)
+%!assert (double ([char(ones(0,3)); char(ones(2,0)); 'A']), 65)
