# HG changeset patch
# User Rik <rik@octave.org>
# Date 1372116859 25200
#      Mon Jun 24 16:34:19 2013 -0700
# Node ID 2ce1ddead134a67f8fcf930cd59055930d1fbb17
# Parent  969233a27bcea815815fae38108f6c42e3c97281
Return a cellstr column vector for ticklabels (bug #34906).

* libinterp/interpfcn/graphics.cc(convert_ticklabel_string): Check for cellstr
row vector input and reshape it to column vector.

diff --git a/libinterp/interpfcn/graphics.cc b/libinterp/interpfcn/graphics.cc
--- a/libinterp/interpfcn/graphics.cc
+++ b/libinterp/interpfcn/graphics.cc
@@ -2073,17 +2073,17 @@ graphics_object::set (const octave_map& 
 %! assert (class (xticklabel), "char");
 %! assert (size (xticklabel), [6, 3]);
 %!test
 %! set (gcf (), "visible", "off");
 %! set (gca (), "xticklabel", ["0 "; "0.2"; "0.4"; "0.6"; "0.8"; "1 "]);
 %! xticklabel = get (gca (), "xticklabel");
 %! assert (class (xticklabel), "char");
 %! assert (size (xticklabel), [6, 3]);
-%!xtest
+%!test
 %! set (gcf (), "visible", "off");
 %! set (gca (), "xticklabel", {"0", "0.2", "0.4", "0.6", "0.8", "1"});
 %! xticklabel = get (gca (), "xticklabel");
 %! assert (class (xticklabel), "cell");
 %! assert (size (xticklabel), [6, 1]);
 */
 
 /*
@@ -5743,17 +5743,23 @@ axes::properties::get_extent (bool with_
   return ext;
 }
 
 static octave_value
 convert_ticklabel_string (const octave_value& val)
 {
   octave_value retval = val;
 
-  if (!val.is_cellstr ())
+  if (val.is_cellstr ())
+    {
+      // Always return a column vector for Matlab Compatibility
+      if (val.columns () > 1)
+        retval = val.reshape (dim_vector (val.numel (), 1));
+    }
+  else
     {
       string_vector str;
       if (val.is_numeric_type ())
         {
           NDArray data = val.array_value ();
           std::ostringstream oss;
           oss.precision (5);
           for (octave_idx_type i = 0; i < val.numel (); i++)
@@ -5779,18 +5785,18 @@ convert_ticklabel_string (const octave_v
 
       charMatrix ch (str);
 
       for (octave_idx_type i = 0; i < ch.numel (); i++)
         if (ch(i) == 0)
           ch(i) = ' ';
 
       retval = octave_value (ch);
-
-    }
+    }
+
   return retval;
 }
 
 void
 axes::properties::set_xticklabel (const octave_value& v)
 {
   if (!error_state)
     {
