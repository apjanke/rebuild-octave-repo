# HG changeset patch
# User jwe
# Date 1196120366 0
#      Mon Nov 26 23:39:26 2007 +0000
# Node ID 9092375e3936119b992319020a798ea69c4de4e2
# Parent  97d2da8ed7462b117fcc7f166e560ab895d6df3d
[project @ 2007-11-26 23:39:26 by jwe]

diff --git a/scripts/plot/plotyy.m b/scripts/plot/plotyy.m
--- a/scripts/plot/plotyy.m
+++ b/scripts/plot/plotyy.m
@@ -39,56 +39,57 @@
 ## and @var{y1} data. The return value @var{ax} is a two element vector with
 ## the axis handles of the two plots. @var{h1} and @var{h2} are handles to
 ## the objects generated by the plot commands.
 ##
 ## @example
 ## @group
 ## x = 0:0.1:2*pi; 
 ## y1 = sin (x);
-## y2 = exp(x - 1);
-## ax = plotyy(x, y1, x - 1, y2, @@plot, @@semilogy);
+## y2 = exp (x - 1);
+## ax = plotyy (x, y1, x - 1, y2, @@plot, @@semilogy);
 ## xlabel ("X");
 ## ylabel (ax(1), "Axis 1");
 ## ylabel (ax(2), "Axis 2");
 ## @end group
 ## @end example
 ## @end deftypefn
 
 function [Ax, H1, H2] = plotyy (varargin)
 
   if (isscalar (varargin{1}) && ishandle (varargin{1}))
     ax = varargin {1};
     if (! strcmp (get (ax, "type"), "axes"))
       error ("plotyy: expecting first argument to be an axes object");
     endif
     if (nargin < 5)
-      print_usage();
+      print_usage ();
     endif
     oldh = gca ();
     unwind_protect
       axes (ax);
       newplot ();
       [ax, h1, h2] = __plotyy__ (ax, varargin{2:end});
     unwind_protect_cleanup
       axes (oldh);
     end_unwind_protect
   else
     if (nargin < 4)
-      print_usage();
+      print_usage ();
     endif
     newplot ();
     [ax, h1, h2] = __plotyy__ (gca (), varargin{:});
   endif
 
   if (nargout > 0)
     Ax = ax;
     H1 = h1;
     H2 = h2;
   endif
+
 endfunction
 
 function [ax, h1, h2] = __plotyy__ (ax, x1, y1, x2, y2, varargin)
   if (nargin > 5)
     fun1 = varargin{1};
   else
     fun1 = @plot;
   endif
