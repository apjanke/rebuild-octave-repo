# HG changeset patch
# User jwe
# Date 861872229 0
#      Thu Apr 24 08:57:09 1997 +0000
# Node ID 2e45e7a3d45edb332d5993dae40b5825a20cbcc2
# Parent  38ca4e62120c58158fb11174486deeb70d971d17
[project @ 1997-04-24 08:56:20 by jwe]

diff --git a/src/SLList-expr.cc b/src/SLList-expr.cc
--- a/src/SLList-expr.cc
+++ b/src/SLList-expr.cc
@@ -24,16 +24,17 @@ Software Foundation, 59 Temple Place - S
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "SLList.h"
 #include "SLList.cc"
 
+#include "ov.h"
 #include "pt-exp.h"
 #include "pt-fvc.h"
 #include "pt-mvr.h"
 
 template class SLNode<tree_expression *>;
 template class SLList<tree_expression *>;
 
 template class SLNode<tree_identifier *>;
diff --git a/src/SLList-misc.cc b/src/SLList-misc.cc
--- a/src/SLList-misc.cc
+++ b/src/SLList-misc.cc
@@ -24,16 +24,17 @@ Software Foundation, 59 Temple Place - S
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "SLList.h"
 #include "SLList.cc"
 
+#include "ov.h"
 #include "pt-exp.h"
 #include "ov.h"
 #include "pt-misc.h"
 
 template class SLNode<tree_statement *>;
 template class SLList<tree_statement *>;
 
 template class SLNode<tree_if_clause *>;
diff --git a/src/SLList-plot.cc b/src/SLList-plot.cc
--- a/src/SLList-plot.cc
+++ b/src/SLList-plot.cc
@@ -24,16 +24,17 @@ Software Foundation, 59 Temple Place - S
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "SLList.h"
 #include "SLList.cc"
 
+#include "ov.h"
 #include "pt-plot.h"
 
 template class SLNode<subplot *>;
 template class SLList<subplot *>;
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
diff --git a/src/SLList-tm.cc b/src/SLList-tm.cc
--- a/src/SLList-tm.cc
+++ b/src/SLList-tm.cc
@@ -24,16 +24,17 @@ Software Foundation, 59 Temple Place - S
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "SLList.h"
 #include "SLList.cc"
 
+#include "ov.h"
 #include "pt-mat.h"
 
 template class SLNode<tree_matrix_row *>;
 template class SLList<tree_matrix_row *>;
 
 template class SLNode<tree_matrix *>;
 template class SLList<tree_matrix *>;
 
diff --git a/src/file-io.cc b/src/file-io.cc
--- a/src/file-io.cc
+++ b/src/file-io.cc
@@ -520,17 +520,17 @@ DEFUN (ftell, args, ,
 
 DEFUN (fprintf, args, ,
   "fprintf (FILENUM, FORMAT, ...)")
 {
   double retval = -1.0;
 
   int nargin = args.length ();
 
-  if (nargin > 1)
+  if (nargin > 1 || (nargin > 0 && args(0).is_string ()))
     {
       octave_stream *os	= 0;
       int fmt_n = 0;
 
       if (args(0).is_string ())
 	os = octave_stream_list::lookup (1);
       else
 	{
diff --git a/src/help.cc b/src/help.cc
--- a/src/help.cc
+++ b/src/help.cc
@@ -831,50 +831,52 @@ display the definition of each NAME that
 		{
 		  tree_fvc *defn = sym_rec->def ();
 
 		  assert (defn && defn->is_constant ());
 
 		  tree_constant *tmp = static_cast<tree_constant *> (defn);
 
 		  int var_ok = 1;
-		  if (tmp && tmp->is_map ())
+
+		  // XXX FIXME XXX -- need to handle structure
+		  // references correctly.
+
+		  if (tmp)
 		    {
-		      if (! elts.empty ())
-			{
-			  octave_value ult =
-			    tmp->lookup_map_element (elts, 0, 1);
+		      octave_value vtmp = tmp->value ();
 
-			  if (! ult.is_defined ())
-			    var_ok = 0;			    
-			}
+		      if (vtmp.is_map ())
+			error ("type: operations on structs not implemented");
 		    }
 
-		  if (nargout == 0 && ! quiet)
+		  if (! error_state)
 		    {
-		      if (var_ok)
+		      if (nargout == 0 && ! quiet)
 			{
-			  output_buf << argv[i];
-			  if (sym_rec->is_user_variable ())
-			    output_buf << " is a user-defined variable\n";
+			  if (var_ok)
+			    {
+			      output_buf << argv[i];
+			      if (sym_rec->is_user_variable ())
+				output_buf << " is a user-defined variable\n";
+			      else
+				output_buf << " is a built-in variable\n";
+			    }
 			  else
-			    output_buf << " is a built-in variable\n";
+			    {
+			      if (! elts.empty ())
+				output_buf << "type: structure `" << id
+					   << "' has no member `" << elts
+					   << "'\n";
+			      else
+				output_buf << "type: `" << id
+					   << "' has unknown type!\n";
+			    }
 			}
-		      else
-			{
-			  if (! elts.empty ())
-			    output_buf << "type: structure `" << id
-			      << "' has no member `" << elts << "'\n";
-			  else
-			    output_buf << "type: `" << id
-			      << "' has unknown type!\n";
-			}
-		    }
-		  if (! tmp->is_map ())
-		    {
+
 		      tree_print_code tpc (output_buf, "", pr_orig_txt);
 
 		      tmp->accept (tpc);
 
 		      if (nargout == 0)
 			output_buf << "\n";
 		    }
 		}
