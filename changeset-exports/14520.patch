# HG changeset patch
# User Marco Caliari <marco.caliari@univr.it>
# Date 1333510685 25200
#      Tue Apr 03 20:38:05 2012 -0700
# Node ID c4ed0fdf2b62c8bf40f2a29d6631a46d5eebc474
# Parent  80abf6374cb791032d59ec9f4aafc811a16d500f
Fix initialization in Higham's method for norm estimate (bug #36031).

* oct-norm.cc (higham): Initialize mu to 1.

diff --git a/liboctave/oct-norm.cc b/liboctave/oct-norm.cc
--- a/liboctave/oct-norm.cc
+++ b/liboctave/oct-norm.cc
@@ -410,17 +410,17 @@ VectorT dual_p (const VectorT& x, R p, R
 template <class MatrixT, class VectorT, class R>
 R higham (const MatrixT& m, R p, R tol, int maxiter,
           VectorT& x)
 {
   x.resize (m.columns (), 1);
   // the OSE part
   VectorT y(m.rows (), 1, 0), z(m.rows (), 1);
   typedef typename VectorT::element_type RR;
-  RR lambda = 0, mu = 0;
+  RR lambda = 0, mu = 1;
   for (octave_idx_type k = 0; k < m.columns (); k++)
     {
       octave_quit ();
       VectorT col (m.column (k));
       if (k > 0)
         higham_subp (y, col, 4*k, p, lambda, mu);
       for (octave_idx_type i = 0; i < k; i++)
         x(i) *= lambda;
diff --git a/src/data.cc b/src/data.cc
--- a/src/data.cc
+++ b/src/data.cc
@@ -5228,16 +5228,22 @@ the norms of each column and return a ro
 %!assert (norm (m,Inf), single (34))
 %!assert (norm (m,"inf"), single (34))
 %!shared m2, flo, fhi
 %! m2 = single ([1,2;3,4]);
 %! flo = single (1e-300);
 %! fhi = single (1e+300);
 %!assert (norm (flo*m2,"fro"), single (sqrt (30)*flo), -eps ("single"))
 %!assert (norm (fhi*m2,"fro"), single (sqrt (30)*fhi), -eps ("single"))
+
+%!test
+%! ## Test for norm returning NaN on sparse matrix (bug #30631)
+%! A = sparse (2,2); 
+%! A(2,1) = 1;
+%! assert (norm (A), 1);
 */
 
 static octave_value
 unary_op_defun_body (octave_value::unary_op op,
                      const octave_value_list& args)
 {
   octave_value retval;
   if (args.length () == 1)
