# HG changeset patch
# User Markus MÃ¼tzel <markus.muetzel@gmx.de>
# Date 1469105010 -7200
#      Thu Jul 21 14:43:30 2016 +0200
# Node ID e505367348557f07a23b0265da64359a6abc3143
# Parent  9babcd59767641549bc5ed7e12fe14a0c0f79276
Change default properties of isosurface (bug #48572).

* isosurface.m: Change default properties of isosurface to match Matlab
more closely. Adapt demo and docstring.

diff --git a/scripts/plot/draw/isosurface.m b/scripts/plot/draw/isosurface.m
--- a/scripts/plot/draw/isosurface.m
+++ b/scripts/plot/draw/isosurface.m
@@ -63,17 +63,18 @@
 ## has no effect.
 ## The string input arguments must be passed after the other arguments.
 ##
 ## If called with two or three output arguments, return the information about
 ## the faces @var{f}, vertices @var{v} and color data @var{c} as separate arrays
 ## instead of a single structure array.
 ##
 ## If called with no output argument, the isosurface geometry is directly
-## processed with the @command{patch} command.
+## processed with the @command{patch} command and a light object is added to
+## the axes if not yet present.
 ##
 ## For example,
 ##
 ## @example
 ## @group
 ## [x, y, z] = meshgrid (1:5, 1:5, 1:5);
 ## val = rand (5, 5, 5);
 ## isosurface (x, y, z, val, .5);
@@ -159,34 +160,43 @@ function varargout = isosurface (varargi
   if (isempty (fvc.vertices) || isempty (fvc.faces))
     warning ("isosurface: triangulation is empty");
   endif
 
   if (!noshare)
     [fvc.faces, fvc.vertices, J] = __unite_shared_vertices__ (fvc.faces, fvc.vertices);
 
     if (calc_colors)
-      #fvc.facevertexcdata = fvc.facevertexcdata(vertices_idx);
       fvc.facevertexcdata(J) = []; # share very close vertices
     endif
   endif
 
   switch (nargout)
     case 0
       ## plot the calculated surface
       if (calc_colors)
-        pa = patch ("Faces", fvc.faces, "Vertices", fvc.vertices,
-                    "FaceVertexCData", fvc.facevertexcdata,
-                    "FaceColor", "flat", "EdgeColor", "none");
+        fc = fvc.facevertexcdata;
       else
-        pa = patch ("Faces", fvc.faces, "Vertices", fvc.vertices,
-                    "FaceColor", "g", "EdgeColor", "k");
+        fc = iso;
       endif
+      ## FIXME: Matlab uses "EdgeColor", "none". But that would look odd
+      ##        with gnuplot.
+      pa = patch ("Faces", fvc.faces, "Vertices", fvc.vertices,
+                  "FaceVertexCData", fc,
+                  "FaceColor", "flat", "EdgeColor", "k",
+                  "FaceLighting", "gouraud");
+      hax = gca ();
       if (! ishold ())
-        set (gca (), "View", [-37.5, 30], "Box", "off");
+        set (hax, "View", [-37.5, 30], "Box", "off");
+      endif
+      isonormals (x, y, z, val, pa);
+      lights = findobj (hax, "Type", "light");
+      if (isempty (lights))
+        ## FIXME: Matlab seems to use camlight (patch #9014) here
+        light ();
       endif
     case 1
       varargout = {fvc};
     case 2
       varargout = {fvc.faces, fvc.vertices};
     otherwise ## 3
       varargout = {fvc.faces, fvc.vertices, fvc.facevertexcdata};
   endswitch
@@ -329,19 +339,20 @@ function [x, y, z, data, iso, colors, no
 
 endfunction
 
 
 %!demo
 %! clf;
 %! [x,y,z] = meshgrid (-2:0.5:2, -2:0.5:2, -2:0.5:2);
 %! val = x.^2 + y.^2 + z.^2;
-%! isosurface (x, y, z, val, 1);
+%! isosurface (x, y, z, val, 3);
+%! isosurface (x, y, z, val, 5);
 %! axis equal;
-%! title ('isosurface of a sphere');
+%! title ('isosurfaces of two nested spheres');
 
 %!demo
 %! x = 0:2;
 %! y = 0:3;
 %! z = 0:1;
 %! [xx, yy, zz]  = meshgrid (x, y, z);
 %! val        = [0, 0, 0; 0, 0, 0; 0, 0, 1; 0, 0, 1];
 %! val(:,:,2) = [0, 0, 0; 0, 0, 1; 0, 1, 2; 0, 1, 2];
