# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1235467795 18000
#      Tue Feb 24 04:29:55 2009 -0500
# Node ID 86088b49a6d75e91a210c5e9e4f7c31ef7a51b1f
# Parent  d6de39523f03250fd3ce2d0be24733580959cf56
single conversions

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,15 @@
+2009-02-24  John W. Eaton  <jwe@octave.org>
+
+	* OPERATORS/op-float-conv.cc: New file.
+	* Makefile.in (FLOAT_OP_XSRC): Add it to the list.
+	(DOUBLE_OP_XSRC): Move op-double-conv.cc here from INTTYPE_OP_XSRC.
+	* ops.h (DEFFLTCONVFN, DEFSTRFLTCONVFN): New macros.
+
 2009-02-23  John W. Eaton  <jwe@octave.org>
 
 	* ov-base-sparse.cc (octave_base_sparse<T>::print_raw):
 	Remove extra ")" from output.
 
 	* DLD-FUNCTIONS/eigs.cc (Feigs): If sigma argument is not a
 	string, try extraction as complex value and check for error
 	instead of inquiring about type first.
diff --git a/src/Makefile.in b/src/Makefile.in
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -135,34 +135,34 @@ INCLUDES := Cell.h base-list.h builtins.
 	$(OV_INCLUDES) \
 	$(PT_INCLUDES) \
 	$(OV_SPARSE_INCLUDES)
 
 TI_XSRC := Array-os.cc Array-tc.cc
 
 TI_SRC := $(addprefix TEMPLATE-INST/, $(TI_XSRC))
 
-INTTYPE_OP_XSRC := op-int-concat.cc op-int-conv.cc op-double-conv.cc \
+INTTYPE_OP_XSRC := op-int-concat.cc op-int-conv.cc \
 	op-i8-i8.cc op-i16-i16.cc op-i32-i32.cc op-i64-i64.cc \
 	op-ui8-ui8.cc op-ui16-ui16.cc op-ui32-ui32.cc op-ui64-ui64.cc
 
 SPARSE_OP_XSRC := op-bm-sbm.cc op-b-sbm.cc op-cm-scm.cc op-cm-sm.cc \
 	op-cs-scm.cc op-cs-sm.cc op-m-scm.cc op-m-sm.cc op-sbm-b.cc \
 	op-sbm-bm.cc op-sbm-sbm.cc op-scm-cm.cc op-scm-cs.cc op-scm-m.cc \
 	op-scm-s.cc op-scm-scm.cc op-scm-sm.cc op-sm-cm.cc \
 	op-sm-cs.cc op-sm-m.cc op-sm-s.cc op-sm-scm.cc op-sm-sm.cc \
 	op-s-scm.cc op-s-sm.cc
 
-DOUBLE_OP_XSRC := op-cm-cm.cc op-cm-cs.cc op-cm-m.cc \
+DOUBLE_OP_XSRC := op-double-conv.cc op-cm-cm.cc op-cm-cs.cc op-cm-m.cc \
 	op-cm-s.cc op-cs-cm.cc op-cs-cs.cc op-cs-m.cc \
 	op-cs-s.cc op-m-cm.cc \
 	op-m-cs.cc op-m-m.cc op-m-s.cc op-s-cm.cc \
 	op-s-cs.cc op-s-m.cc op-s-s.cc 
 
-FLOAT_OP_XSRC := op-fcm-fcm.cc op-fcm-fcs.cc op-fcm-fm.cc \
+FLOAT_OP_XSRC := op-float-conv.cc op-fcm-fcm.cc op-fcm-fcs.cc op-fcm-fm.cc \
 	op-fcm-fs.cc op-fcs-fcm.cc op-fcs-fcs.cc op-fcs-fm.cc \
 	op-fcs-fs.cc op-fm-fcm.cc \
 	op-fm-fcs.cc op-fm-fm.cc op-fm-fs.cc op-fs-fcm.cc \
 	op-fs-fcs.cc op-fs-fm.cc op-fs-fs.cc 
 
 DIAG_OP_XSRC := op-cdm-cdm.cc op-cdm-cm.cc op-cdm-cs.cc op-cdm-dm.cc \
 	op-cdm-m.cc op-cdm-s.cc op-cm-cdm.cc op-cm-dm.cc op-dm-cdm.cc \
 	op-dm-cm.cc op-dm-cs.cc op-dm-dm.cc op-dm-m.cc op-dm-s.cc \
diff --git a/src/ops.h b/src/ops.h
--- a/src/ops.h
+++ b/src/ops.h
@@ -240,22 +240,33 @@ extern void install_ops (void);
 #define DEFDBLCONVFN(name, ovtfrom, e) \
   CONVDECL (name) \
   { \
     CAST_CONV_ARG (const CONCAT2(octave_, ovtfrom)&); \
  \
     return new octave_matrix (NDArray (v.CONCAT2(e, _value) ())); \
   }
 
+#define DEFFLTCONVFN(name, ovtfrom, e) \
+  CONVDECL (name) \
+  { \
+    CAST_CONV_ARG (const CONCAT2(octave_, ovtfrom)&); \
+ \
+    return new octave_float_matrix (FloatNDArray (v.CONCAT2(e, _value) ())); \
+  }
+
 #define DEFSTRINTCONVFN(name, tto) \
   DEFCONVFNX(name, char_matrix_str, CONCAT2(tto, _matrix), tto, char_)
 
 #define DEFSTRDBLCONVFN(name, tfrom) \
   DEFCONVFNX(name, tfrom, matrix, , char_)
 
+#define DEFSTRFLTCONVFN(name, tfrom) \
+  DEFCONVFNX(name, tfrom, float_matrix, Float, char_)
+
 #define DEFCONVFN(name, tfrom, tto) \
   DEFCONVFNX2 (name, tfrom, CONCAT2(tto, _matrix), CONCAT2(tto, _))
 
 #define DEFCONVFN2(name, tfrom, sm, tto) \
   DEFCONVFNX2 (name, CONCAT3(tfrom, _, sm), CONCAT2(tto, _matrix), CONCAT2(tto, _))
 
 #define UNOPDECL(name, a) \
   static octave_value \
