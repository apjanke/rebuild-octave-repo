# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1224701871 14400
#      Wed Oct 22 14:57:51 2008 -0400
# Node ID 81b124f463f93f0b7902b2dada3a7686d3b6d818
# Parent  1c213dff76fcd2575b202eda344090b544570fed
properly update currentaxes when axes are deleted

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,13 @@
 2008-10-22  John W. Eaton  <jwe@octave.org>
 
+	* graphics.cc (figure::properties::remove_child): New function.
+	* graphics.h.in: Provide decl.
+
 	* gl-render.cc (opengl_renderer::draw): Get all children.
 
 	* DLD-FUNCTIONS/fltk_backend.cc (__fltk_redraw__):
 	Check for "root" object, not "root_figure".
 
 	* graphics.h.in (base_properties::get_all_children): New function.
 
 2008-10-22  David Bateman  <dbateman@free.fr>
diff --git a/src/graphics.cc b/src/graphics.cc
--- a/src/graphics.cc
+++ b/src/graphics.cc
@@ -2021,16 +2021,42 @@ figure::properties::set_currentaxes (con
 
   if (xisnan (val.value ()) || is_handle (val))
     currentaxes = val;
   else
     gripe_set_invalid ("currentaxes");
 }
 
 void
+figure::properties::remove_child (const graphics_handle& gh)
+{
+  base_properties::remove_child (gh);
+
+  if (gh == currentaxes.handle_value ())
+    {
+      graphics_handle new_currentaxes;
+
+      for (octave_idx_type i = 0; i < children.numel (); i++)
+	{
+	  graphics_handle kid = children(i);
+
+	  graphics_object go = gh_manager::get_object (kid);
+
+	  if (go.isa ("axes"))
+	    {
+	      new_currentaxes = kid;
+	      break;
+	    }
+	}
+
+      currentaxes = new_currentaxes;
+    }
+}
+
+void
 figure::properties::set_visible (const octave_value& val)
 {
   std::string s = val.string_value ();
 
   if (! error_state)
     {
       if (s == "on")
 	xset (0, "currentfigure", __myhandle__.value ());
diff --git a/src/graphics.h.in b/src/graphics.h.in
--- a/src/graphics.h.in
+++ b/src/graphics.h.in
@@ -2213,16 +2213,18 @@ private:
 // ---------------------------------------------------------------------
 
 class OCTINTERP_API figure : public base_graphics_object
 {
 public:
   class OCTINTERP_API properties : public base_properties
   {
   public:
+    void remove_child (const graphics_handle& h);
+
     void set_visible (const octave_value& val);
 
     graphics_backend get_backend (void) const
       {
 	if (! backend)
 	  backend = graphics_backend::default_backend ();
 
 	return backend;
