# HG changeset patch
# User jwe
# Date 1045713691 0
#      Thu Feb 20 04:01:31 2003 +0000
# Node ID 8aa604426d35ff55c0b40c8e40ed245502c41e88
# Parent  05ba2a8757da8afb5fbb114bb82f65935649de6c
[project @ 2003-02-20 04:01:31 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2003-02-19  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* plot/axis.m: Avoid whitespace in literal matrix problem.
+
 2003-02-18  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* linear-algebra/logm.m: New file.
 
 2003-02-18  David Bateman <dbateman@free.fr>
 
  	* mkpkgadd: Scan C++ files as well
 
diff --git a/scripts/plot/axis.m b/scripts/plot/axis.m
--- a/scripts/plot/axis.m
+++ b/scripts/plot/axis.m
@@ -129,16 +129,17 @@ function curr_axis = axis (ax, varargin)
   ## limits.
 
   if (nargin == 0)
     gset autoscale;
     curr_axis = __current_axis__;
 
   elseif (isstr (ax))
     ax = tolower (ax);
+    len = length (ax);
 
     ## 'matrix mode' to reverse the y-axis
     if (strcmp (ax, "ij"))
       gset yrange [] reverse; 
     elseif (strcmp (ax, "xy"))
       gset yrange [] noreverse;
 
       ## aspect ratio
@@ -149,19 +150,19 @@ function curr_axis = axis (ax, varargin)
       gset size ratio -1;
     elseif (strcmp (ax, "square"))
       gset size ratio 1;
     elseif (strcmp (ax, "normal"))
       gset size noratio;
 
 
       ## axis limits
-    elseif (length (ax) >= 4 && strcmp (ax (1:4), "auto"))
-      if length (ax) > 4
-      	eval (["gset autoscale ", ax (5 : length (ax)), ";"]);
+    elseif (len >= 4 && strcmp (ax(1:4), "auto"))
+      if (len > 4)
+      	eval (sprintf ("gset autoscale %s;", ax(5:len)));
       else
 	gset autoscale;
       endif
     elseif (strcmp (ax, "manual"))
       ## fixes the axis limits, like axis(axis) should;
       gset xrange [] writeback;
       gset yrange [] writeback;
       gset zrange [] writeback;
@@ -186,48 +187,48 @@ function curr_axis = axis (ax, varargin)
     elseif (strcmp (ax, "off"))
       gset noxtics;
       gset noytics;
       gset noztics;
     elseif (strcmp (ax, "tic"))
       gset xtics;
       gset ytics;
       gset ztics;
-    elseif (length (ax) > 3 && strcmp (ax (1:3), "tic"))
-      if any (ax == "x")
+    elseif (len > 3 && strcmp (ax(1:3), "tic"))
+      if (any (ax == "x"))
 	gset xtics;
       else
 	gset noxtics;
       endif
-      if any (ax == "y")
+      if (any (ax == "y"))
 	gset ytics;
       else
 	gset noytics;
       endif
-      if any (ax == "z")
+      if (any (ax == "z"))
 	gset ztics;
       else
 	gset noztics;
       endif
     elseif (strcmp (ax, "label"))
       gset format;
     elseif (strcmp (ax, "nolabel"))
       gset format "\\0";
-    elseif (length (ax) > 5 && strcmp (ax (1:5), "label"))
-      if any (ax == "x")
+    elseif (len > 5 && strcmp (ax(1:5), "label"))
+      if (any (ax == "x"))
 	gset format x;
       else
 	gset format x "\\0";
       endif
-      if any (ax == "y")
+      if (any (ax == "y"))
 	gset format y;
       else
 	gset format y "\\0";
       endif
-      if any (ax == "z")
+      if (any (ax == "z"))
 	gset format z;
       else
 	gset format z "\\0";
       endif
 
     else
       warning ("unknown axis option '%s'", ax);
     endif
@@ -238,25 +239,25 @@ function curr_axis = axis (ax, varargin)
 
     if (len != 2 && len != 4 && len != 6)
       error ("axis: expecting vector with 2, 4, or 6 elements");
     endif
 
     __current_axis__ = reshape (ax, 1, len);
 
     if (len > 1)
-      eval (sprintf ("gset xrange [%g:%g];", ax (1), ax (2)));
+      eval (sprintf ("gset xrange [%g:%g];", ax(1), ax(2)));
     endif
 
     if (len > 3)
-      eval (sprintf ("gset yrange [%g:%g];", ax (3), ax (4)));
+      eval (sprintf ("gset yrange [%g:%g];", ax(3), ax(4)));
     endif
 
     if (len > 5)
-      eval (sprintf ("gset zrange [%g:%g];", ax (5), ax (6)));
+      eval (sprintf ("gset zrange [%g:%g];", ax(5), ax(6)));
     endif
 
   else
     error ("axis: expecting no args, or a vector with 2, 4, or 6 elements");
   endif
 
   if (nargin > 1)
     axis (varargin{:});
diff --git a/scripts/signal/freqz_plot.m b/scripts/signal/freqz_plot.m
--- a/scripts/signal/freqz_plot.m
+++ b/scripts/signal/freqz_plot.m
@@ -74,17 +74,17 @@ function freqz_plot(w,h)
 	title ("");
       else
 	input ("press any key for the next plot: ");
       endif
       grid ("on");
       axis ("autoy");
       xlabel ("Frequency");
       axis ([ w(1), w(n) ]);
-      plot (w, phase/(2*pi), ";Phase (radians/2pi);");
+      plot (w, phase*360/(2*pi), ";Phase (degrees);");
       
     unwind_protect_cleanup
 
       ## Restore graph state.
 
       ## XXX FIXME XXX -- if automatic_replot is non-zero, this will
       ## mess up the graph, however if we don't do it here then the user
       ## will have to do it themselves.
