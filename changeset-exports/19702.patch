# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1423769521 18000
#      Thu Feb 12 14:32:01 2015 -0500
# Node ID c048358da712c2d0047bda57c2f7570e8b1c5993
# Parent  f4af02a9a6fc39b136f82239dcd9972c39badca2
also kill pending input line when gui command window is cleared (bug #44015)

* oct-rl-edit.h, oct-rl-edit.c (octave_rl_kill_full_line): New function.
* cmd-edit.h, cmd-edit.cc (command_editor::kill_full_line,
command_editor::do_kill_full_line, gnu_readline::do_kill_full_line,
default_command_editor::do_kill_full_line): New functions.
* main-window.cc (main_window::clear_command_window_callback):
Kill pending input line before clearing screen.

diff --git a/libgui/src/main-window.cc b/libgui/src/main-window.cc
--- a/libgui/src/main-window.cc
+++ b/libgui/src/main-window.cc
@@ -2006,16 +2006,17 @@ main_window::command_window_undo_callbac
 {
   command_editor::undo ();
   command_editor::redisplay ();
 }
 
 void
 main_window::clear_command_window_callback (void)
 {
+  command_editor::kill_full_line ();
   command_editor::clear_screen ();
 }
 
 void
 main_window::resize_command_window_callback (void)
 {
   command_editor::resize_terminal ();
 }
diff --git a/liboctave/util/cmd-edit.cc b/liboctave/util/cmd-edit.cc
--- a/liboctave/util/cmd-edit.cc
+++ b/liboctave/util/cmd-edit.cc
@@ -146,16 +146,18 @@ public:
   do_generate_filename_completions (const std::string& text);
 
   std::string do_get_line_buffer (void) const;
 
   std::string do_get_current_line (void) const;
 
   void do_replace_line (const std::string& text, bool clear_undo);
 
+  void do_kill_full_line (void);
+
   void do_insert_text (const std::string& text);
 
   void do_newline (void);
 
   void do_accept_line (void);
 
   bool do_undo (void);
 
@@ -567,16 +569,22 @@ gnu_readline::do_get_current_line (void)
 
 void
 gnu_readline::do_replace_line (const std::string& text, bool clear_undo)
 {
   ::octave_rl_replace_line (text.c_str (), clear_undo);
 }
 
 void
+gnu_readline::do_kill_full_line (void)
+{
+  ::octave_rl_kill_full_line ();
+}
+
+void
 gnu_readline::do_insert_text (const std::string& text)
 {
   ::octave_rl_insert_text (text.c_str ());
 }
 
 void
 gnu_readline::do_newline (void)
 {
@@ -836,16 +844,18 @@ public:
   string_vector do_generate_filename_completions (const std::string& text);
 
   std::string do_get_line_buffer (void) const;
 
   std::string do_get_current_line (void) const;
 
   void do_replace_line (const std::string& text, bool clear_undo);
 
+  void do_kill_full_line (void);
+
   void do_insert_text (const std::string& text);
 
   void do_newline (void);
 
   void do_accept_line (void);
 
 private:
 
@@ -915,16 +925,22 @@ default_command_editor::do_get_current_l
 
 void
 default_command_editor::do_replace_line (const std::string&, bool)
 {
   // FIXME
 }
 
 void
+default_command_editor::do_kill_full_line (void)
+{
+  // FIXME
+}
+
+void
 default_command_editor::do_insert_text (const std::string&)
 {
   // FIXME
 }
 
 void
 default_command_editor::do_newline (void)
 {
@@ -1325,16 +1341,23 @@ command_editor::get_current_line (void)
 void
 command_editor::replace_line (const std::string& text, bool clear_undo)
 {
   if (instance_ok ())
     instance->do_replace_line (text, clear_undo);
 }
 
 void
+command_editor::kill_full_line (void)
+{
+  if (instance_ok ())
+    instance->do_kill_full_line ();
+}
+
+void
 command_editor::insert_text (const std::string& text)
 {
   if (instance_ok ())
     instance->do_insert_text (text);
 }
 
 void
 command_editor::newline (void)
diff --git a/liboctave/util/cmd-edit.h b/liboctave/util/cmd-edit.h
--- a/liboctave/util/cmd-edit.h
+++ b/liboctave/util/cmd-edit.h
@@ -128,16 +128,18 @@ public:
   static string_vector generate_filename_completions (const std::string& text);
 
   static std::string get_line_buffer (void);
 
   static std::string get_current_line (void);
 
   static void replace_line (const std::string& text, bool clear_undo = true);
 
+  static void kill_full_line (void);
+
   static void insert_text (const std::string& text);
 
   static void newline (void);
 
   static void accept_line (void);
 
   static bool undo (void);
 
@@ -304,16 +306,18 @@ protected:
   do_generate_filename_completions (const std::string& text) = 0;
 
   virtual std::string do_get_line_buffer (void) const = 0;
 
   virtual std::string do_get_current_line (void) const = 0;
 
   virtual void do_replace_line (const std::string& text, bool clear_undo) = 0;
 
+  virtual void do_kill_full_line (void) = 0;
+
   virtual void do_insert_text (const std::string& text) = 0;
 
   virtual void do_newline (void) = 0;
 
   virtual void do_accept_line (void) = 0;
 
   virtual bool do_undo (void) { return false; }
 
diff --git a/liboctave/util/oct-rl-edit.c b/liboctave/util/oct-rl-edit.c
--- a/liboctave/util/oct-rl-edit.c
+++ b/liboctave/util/oct-rl-edit.c
@@ -145,16 +145,22 @@ octave_rl_copy_line (void)
 
 void
 octave_rl_replace_line (const char *s, int clear_undo)
 {
   rl_replace_line (s, clear_undo);
 }
 
 void
+octave_rl_kill_full_line (void)
+{
+  rl_kill_full_line (0, 0);
+}
+
+void
 octave_rl_insert_text (const char *s)
 {
   rl_insert_text (s);
 }
 
 int
 octave_rl_newline (int count, int key)
 {
diff --git a/liboctave/util/oct-rl-edit.h b/liboctave/util/oct-rl-edit.h
--- a/liboctave/util/oct-rl-edit.h
+++ b/liboctave/util/oct-rl-edit.h
@@ -69,16 +69,18 @@ extern void octave_rl_resize_terminal (v
 extern void octave_rl_set_screen_size (int ht, int wd);
 
 extern void octave_rl_restore_terminal_state (void);
 
 extern char *octave_rl_copy_line (void);
 
 extern void octave_rl_replace_line (const char *s, int clear_undo);
 
+extern void octave_rl_kill_full_line (void);
+
 extern void octave_rl_insert_text (const char *);
 
 extern int octave_rl_newline (int, int);
 
 extern const char *octave_rl_line_buffer (void);
 
 extern int octave_rl_do_undo (void);
 
