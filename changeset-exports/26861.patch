# HG changeset patch
# User Pantxo Diribarne <pantxo.diribarne@gmail.com>
# Date 1551972711 -3600
#      Thu Mar 07 16:31:51 2019 +0100
# Node ID 6236c790bd1b17989e9dcf7a61c7b584232b9fe2
# Parent  7c9a681c4474ab7f24893a412e6828e0ba53d07a
Disalow zoom/pan/rotate on legend and colorbar axes (bug #55848)

* Canvas.cc (Canvas::canvasMousePressEvent): Add new bool variable that is false
  for legend, colorbar and axes with handlevisibility "off". Use it to prevent
  pan, zoom and rotate from acting on those axes objects.

diff --git a/libgui/graphics/Canvas.cc b/libgui/graphics/Canvas.cc
--- a/libgui/graphics/Canvas.cc
+++ b/libgui/graphics/Canvas.cc
@@ -634,24 +634,25 @@ namespace QtHandles
               tmpgo = gh_manager::get_object (tmpgo.get_parent ());
 
             if (tmpgo && tmpgo.get_handle () != 0.0)
               currentObj = tmpgo;
             else
               currentObj = graphics_object ();
           }
 
-        if (axesObj)
-          {
-            if (axesObj.get_properties ().handlevisibility_is ("on")
-                && axesObj.get_properties ().get_tag () != "legend"
-                && axesObj.get_properties ().get_tag () != "colorbar")
-              Utils::properties<figure> (figObj)
-              .set_currentaxes (axesObj.get_handle ().as_octave_value ());
-          }
+        // Make selected axes current
+        bool valid_axes = axesObj.valid_object ()
+          && axesObj.get_properties ().handlevisibility_is ("on")
+          && axesObj.get_properties ().get_tag () != "legend"
+          && axesObj.get_properties ().get_tag () != "colorbar";
+        
+        if (valid_axes)
+          Utils::properties<figure> (figObj)
+            .set_currentaxes (axesObj.get_handle ().as_octave_value ());
 
         Figure *fig = dynamic_cast<Figure *> (Backend::toolkitObject (figObj));
 
         MouseMode newMouseMode = NoMode;
 
         if (fig)
           newMouseMode = fig->mouseMode ();
 
@@ -713,17 +714,17 @@ namespace QtHandles
               redraw (false);
             }
             break;
 
           case PanMode:
           case RotateMode:
           case ZoomInMode:
           case ZoomOutMode:
-            if (axesObj && axesObj.get_properties ().handlevisibility_is ("on"))
+            if (valid_axes)
               {
                 bool redraw_figure = true;
 
                 if (isdblclick)
                   {
                     if (event->button () == Qt::LeftButton)
                       {
                         axes::properties& ap = Utils::properties<axes> (axesObj);
