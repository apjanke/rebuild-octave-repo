# HG changeset patch
# User Rik <rik@octave.org>
# Date 1542221866 28800
#      Wed Nov 14 10:57:46 2018 -0800
# Node ID 8b6f1731474babae07e0c1eab2d899c63950a0ba
# Parent  01da3729016ad83fe46060c067e11db77bb71ff5
# Parent  658153e1976d00b94a2cd81c9b8600177ccd3ee8
maint: merge stable to default.

diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -3061,17 +3061,17 @@ Octave is now configured for $canonical_
   UMFPACK libraries:             $UMFPACK_LIBS
   X11 include flags:             $X11_INCFLAGS
   X11 libraries:                 $X11_LIBS
   Z CPPFLAGS:                    $Z_CPPFLAGS
   Z LDFLAGS:                     $Z_LDFLAGS
   Z libraries:                   $Z_LIBS
 
   Default pager:                 $DEFAULT_PAGER
-  gnuplot:                       $GNUPLOT
+  gnuplot:                       $GNUPLOT_BINARY
 
   Build Octave Qt GUI:                  $BUILD_QT_SUMMARY_MSG
   JIT compiler for loops:               $ENABLE_JIT
   Build Java interface:                 $build_java
   Build static libraries:               $STATIC_LIBS
   Build shared libraries:               $SHARED_LIBS
   Dynamic Linking API:                  $DL_API_MSG
   Include support for GNU readline:     $USE_READLINE
diff --git a/libinterp/dldfcn/__init_gnuplot__.cc b/libinterp/dldfcn/__init_gnuplot__.cc
--- a/libinterp/dldfcn/__init_gnuplot__.cc
+++ b/libinterp/dldfcn/__init_gnuplot__.cc
@@ -179,17 +179,17 @@ have_gnuplot_binary (void)
   const std::string path = octave::sys::env::getenv ("PATH");
   bool retval = false;
 
   try
     {
       octave_value_list tmp
         = octave::feval ("gnuplot_binary", octave_value_list ());
 
-      if (tmp(0).is_string ())
+      if (tmp(0).is_string () && ! tmp(0).isempty ())
         {
           std::string gnuplot_binary = tmp(0).string_value ();
 
           string_vector args (gnuplot_binary);
           std::string gnuplot_path = octave::search_path_for_file (path, args);
 
           octave::sys::file_stat fs (gnuplot_path);
 
diff --git a/m4/acinclude.m4 b/m4/acinclude.m4
--- a/m4/acinclude.m4
+++ b/m4/acinclude.m4
@@ -3230,21 +3230,24 @@ using Octave
 dnl
 dnl Check for gnuplot.
 dnl
 AC_DEFUN([OCTAVE_PROG_GNUPLOT], [
   ac_octave_gp_names="gnuplot"
   ac_octave_gp_default="gnuplot"
   if test "$cross_compiling" = yes; then
     GNUPLOT="$ac_octave_gp_default"
+    GNUPLOT_BINARY=$GNUPLOT
     AC_MSG_RESULT([assuming $GNUPLOT exists on $canonical_host_type host])
   else
     AC_CHECK_PROGS(GNUPLOT, [$ac_octave_gp_names])
+    GNUPLOT_BINARY=$GNUPLOT
     if test -z "$GNUPLOT"; then
-      GNUPLOT="$gp_default"
+      GNUPLOT="$ac_octave_gp_default"
+      GNUPLOT_BINARY=""
       warn_gnuplot="
 
 gnuplot not found.  It isn't necessary to have gnuplot installed, but
 without native graphics or gnuplot you won't be able to use any of
 Octave's plotting commands.
 "
       OCTAVE_CONFIGURE_WARNING([warn_gnuplot])
     fi
diff --git a/scripts/plot/util/gnuplot_binary.in.m b/scripts/plot/util/gnuplot_binary.in.m
--- a/scripts/plot/util/gnuplot_binary.in.m
+++ b/scripts/plot/util/gnuplot_binary.in.m
@@ -56,17 +56,21 @@ function [prog, args] = gnuplot_binary (
     endif
     gp_args = varargin;
   endif
 
 endfunction
 
 
 %!test
-%! [orig_val, orig_args] = gnuplot_binary ();
-%! [old_val, old_args] = gnuplot_binary ("__foobar__", "-opt1");
-%! assert (orig_val, old_val);
-%! assert (orig_args, old_args);
-%! assert (gnuplot_binary (), "__foobar__");
-%! [~, new_args] = gnuplot_binary ();
-%! assert (new_args, {"-opt1"});
-%! gnuplot_binary (orig_val, orig_args{:});
-%! assert (gnuplot_binary (), orig_val);
+%! try
+%!   [orig_val, orig_args] = gnuplot_binary ();
+%!   [old_val, old_args] = gnuplot_binary ("__foobar__", "-opt1");
+%!   assert (orig_val, old_val);
+%!   assert (orig_args, old_args);
+%!   assert (gnuplot_binary (), "__foobar__");
+%!   [~, new_args] = gnuplot_binary ();
+%!   assert (new_args, {"-opt1"});
+%!   gnuplot_binary (orig_val, orig_args{:});
+%!   assert (gnuplot_binary (), orig_val);
+%! catch
+%!   gnuplot_binary (orig_val, orig_args{:});
+%! end_try_catch
