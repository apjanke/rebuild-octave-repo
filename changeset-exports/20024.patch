# HG changeset patch
# User Rik <rik@octave.org>
# Date 1428014198 25200
#      Thu Apr 02 15:36:38 2015 -0700
# Node ID cf9b94a89620cefbd2eb55ac242286252b69ef51
# Parent  6babcfbe1a0a3a3f0e12117b45de7a5a5b01aace
Document get_home_directory in Octave manual and NEWS file.

* NEWS: Add get_home_directory to list of new functions.

* system.txi: Add get_home_directory to manual.

* sysdep.cc(Fget_home_directory): Use preferred docstring format of single line
summary sentence followed by second paragragh of explanation.  Add BIST test.

diff --git a/NEWS b/NEWS
--- a/NEWS
+++ b/NEWS
@@ -199,16 +199,17 @@ Summary of important user-visible change
  ** Other new functions added in 4.0:
 
       annotation
       bandwidth
       cubehelix
       dir_in_loadpath
       flip
       frame2im
+      get_home_directory
       hgload
       hgsave
       ichol
       ilu
       im2frame
       isbanded
       isdiag
       isstudent
diff --git a/doc/interpreter/system.txi b/doc/interpreter/system.txi
--- a/doc/interpreter/system.txi
+++ b/doc/interpreter/system.txi
@@ -401,16 +401,18 @@ they can be used, look at the definition
 @section Environment Variables
 
 @DOCSTRING(getenv)
 
 @DOCSTRING(setenv)
 
 @DOCSTRING(unsetenv)
 
+@DOCSTRING(get_home_directory)
+
 @node Current Working Directory
 @section Current Working Directory
 
 @DOCSTRING(cd)
 
 @DOCSTRING(ls)
 
 @DOCSTRING(ls_command)
diff --git a/libinterp/corefcn/sysdep.cc b/libinterp/corefcn/sysdep.cc
--- a/libinterp/corefcn/sysdep.cc
+++ b/libinterp/corefcn/sysdep.cc
@@ -1006,27 +1006,36 @@ tilde_expand (\"~/bin\")\n\
 %! home = get_home_directory ();
 %! assert (tilde_expand ("~/foobar"), fullfile (home, "/foobar"));
 %! assert (tilde_expand ("/foo/bar"), "/foo/bar");
 %! assert (tilde_expand ("foo/bar"), "foo/bar");
 */
 
 DEFUN (get_home_directory, , ,
        "-*- texinfo -*-\n\
-@deftypefn {Built-in Function} {} get_home_directory ()\n\
-Return the current home directory.  On most systems, this is equivalent\n\
-to @code{getenv (\"HOME\")}.  On Windows systems, if @env{HOME} is not\n\
-set in the environment, it is equivalent to\n\
+@deftypefn {Built-in Function} {@var{homedir} =} get_home_directory ()\n\
+Return the current home directory.\n\
+\n\
+On most systems, this is equivalent to @code{getenv (\"HOME\")}.  On Windows\n\
+systems, if the environment variable @env{HOME} is not set then it is\n\
+equivalent to\n\
 @code{fullfile (getenv (\"HOMEDRIVE\"), getenv (\"HOMEPATH\"))}\n\
 @seealso{getenv}\n\
 @end deftypefn")
 {
   return octave_value (octave_env::get_home_directory ());
 }
 
+/*
+%!test
+%! if (! ispc ())
+%!   assert (get_home_directory (), getenv ("HOME")); 
+%! endif
+*/
+
 // This function really belongs in display.cc, but including defun.h in
 // that file results in conflicts with symbols from headers that are
 // needed for X11 and Carbon functions.
 
 DEFUN (have_window_system, , ,
        "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} have_window_system ()\n\
 Return true if a window system is available (X11, Windows, or Apple OS X)\n\
