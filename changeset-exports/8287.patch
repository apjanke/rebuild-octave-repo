# HG changeset patch
# User Thorsten Meyer <thorsten.meyier@gmx.de>
# Date 1225318488 14400
#      Wed Oct 29 18:14:48 2008 -0400
# Node ID f3dbea0e8a1ddf2ac4fece92f8c00af048e78438
# Parent  6f2d952559110c532de4f3c8a91fadd7af7357ca
Adapted munge-texi to expand @seealso commands to texinfo references

diff --git a/doc/ChangeLog b/doc/ChangeLog
--- a/doc/ChangeLog
+++ b/doc/ChangeLog
@@ -3,16 +3,19 @@ 2008-10-29  Thorsten Meyer  <tmeyier@gmx
 	* interpreter/system.txi, interpreter/poly.txi,
 	interpreter/arith.txi, interpreter/poly.txi,
 	interpreter/optim.txi, interpreter/diffeq.txi,
 	interpreter/sparse.txi, interpreter/matrix.txi,
 	interpreter/plot.txi, interpreter/io.txi, interpreter/debug.txi,
 	interpreter/var.txi, interpreter/strings.txi:
 	Add missing @DOCSTRING commands.
 
+	* interpreter/munge-texi.cc (extract_docstring): Expand arguments
+	of @seealso{} into Texinfo references.
+          
 2008-10-22  David Bateman  <dbateman@free.fr>
 
 	* interprter/plot.txi: Add documentation for error bar series.
 
 	* interprter/plot.txi: Update documentation for line series, Add 
 	documetation for scatter groups, stem series and surface groups.
 
 	* texinfo.tex: Import new upstream version.
diff --git a/doc/interpreter/munge-texi.cc b/doc/interpreter/munge-texi.cc
--- a/doc/interpreter/munge-texi.cc
+++ b/doc/interpreter/munge-texi.cc
@@ -65,18 +65,92 @@ extract_symbol_name (std::istream& is)
 
 static std::string
 extract_docstring (std::istream& is)
 {
   std::string doc;
 
   int c;
   while ((c = is.get ()) != EOF && c != doc_delim)
-    doc += (char) c;
+    {
+      // Expand @seealso commands to Texinfo references.
+      if (c == '@')
+        {
+          char buf[16];
+          int i = 0;
+          buf[i++] = (char) c;
+          
+          if ((   buf[i++] = (char) is.get ()) == 's'  
+              && (buf[i++] = (char) is.get ()) == 'e'
+              && (buf[i++] = (char) is.get ()) == 'e'
+              && (buf[i++] = (char) is.get ()) == 'a'
+              && (buf[i++] = (char) is.get ()) == 'l'
+              && (buf[i++] = (char) is.get ()) == 's'
+              && (buf[i++] = (char) is.get ()) == 'o'
+              && (buf[i++] = (char) is.get ()) == '{')
+            {
+              doc += "@seealso{";
+              
+              bool first = true;
+              
+              // process @seealso parameters
+              while ((c = is.get ()) != EOF
+                     && c != doc_delim
+                     && c != '}') 
+                {
+                  // ignore whitespace and delimiters
+                  while (   c == ' ' 
+                         || c == '\t'
+                         || c == '\r'
+                         || c == '\n'
+                         || c == ',')
+                    {
+                      c = is.get ();
+                    }
+                    
+                  // test for end of @seealso
+                  if (c == '}') 
+                    break;
+                  
+                  // get function name
+	          std::string function_name;
+                  do 
+                    function_name += (char) c;
+                  while ((c = is.get ()) != EOF
+                          && c != doc_delim
+                          && c != ' '
+                          && c != '\t'
+                          && c != '\r'
+                          && c != '\n'
+                          && c != ','
+                          && c != '}');
+                  if (first)
+                    first = false;
+                  else
+                    doc += ", ";
 
+                  doc += "@ref{doc-" + function_name + ",,"
+		    + function_name + "}";
+
+                  // test for end of @seealso
+                  if (c == '}') 
+                    break;
+                }
+              if (c == '}')
+                doc += (char) c;
+            }
+          else
+            {
+              for (int j = 0; j < i; j++)
+                doc += buf[j];
+            }
+        }
+      else
+        doc += (char) c;
+    }
   return doc;
 }
 
 static void
 skip_comments (std::ifstream& is)
 {
   int c;
 
@@ -144,19 +218,19 @@ process_texi_input_file (std::istream& i
       if (bol)
 	{
 	  if (c == '@')
 	    {
 	      std::string symbol_name;
 
 	      char buf[16];
 	      int i = 0;
-	      buf[i++] = c;
+	      buf[i++] = (char) c;
 
-	      if ((buf[i++] = (char) is.get ()) == 'D'
+	      if ((   buf[i++] = (char) is.get ()) == 'D'
 		  && (buf[i++] = (char) is.get ()) == 'O'
 		  && (buf[i++] = (char) is.get ()) == 'C'
 		  && (buf[i++] = (char) is.get ()) == 'S'
 		  && (buf[i++] = (char) is.get ()) == 'T'
 		  && (buf[i++] = (char) is.get ()) == 'R'
 		  && (buf[i++] = (char) is.get ()) == 'I'
 		  && (buf[i++] = (char) is.get ()) == 'N'
 		  && (buf[i++] = (char) is.get ()) == 'G'
