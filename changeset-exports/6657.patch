# HG changeset patch
# User jwe
# Date 1179894904 0
#      Wed May 23 04:35:04 2007 +0000
# Node ID 86354a8cd6a7d2c898a21b0d5e9fdc03409f71aa
# Parent  c92e679d9cc5381874e7bb36f74d3bbff3cbacd6
[project @ 2007-05-23 04:35:04 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,16 @@
+2007-05-23  John W. Eaton  <jwe@octave.org>
+
+	* parse.y (make_anon_fcn_handle): Don't build assignment expression.
+	* ov-fcn-handle.cc (octave_fcn_handle::print_raw):
+	Don't split assignment expression.
+	* ov-usr-fcn.cc (octave_user_function::do_multi_index_op):
+	Special case for inline function body evaluation.
+
 2007-05-22  John W. Eaton  <jwe@octave.org>
 
 	* version.h (OCTAVE_VERSION): Now 2.9.12.
 
 	* pt-fcn-handle.cc (tree_anon_fcn_handle::rvalue):
 	Set current function as parent of anonymous function handle.
 
 	* Makefile.in (uninstall): Also remove
diff --git a/src/ov-fcn-handle.cc b/src/ov-fcn-handle.cc
--- a/src/ov-fcn-handle.cc
+++ b/src/ov-fcn-handle.cc
@@ -1260,33 +1260,17 @@ octave_fcn_handle::print_raw (std::ostre
 
 	      if (s)
 		{
 		  if (s->is_expression ())
 		    {
 		      tree_expression *e = s->expression ();
 
 		      if (e)
-			{
-			  if (e->is_assignment_expression ())
-			    {
-			      // The parser builds an assignment to
-			      // __retval__, and we don't want to
-			      // display that part.
-
-			      tree_simple_assignment *tsa
-				= reinterpret_cast <tree_simple_assignment *> (e);
-			      tree_expression *rhs = tsa->right_hand_side ();
-
-			      if (rhs)
-				rhs->accept (tpc);
-			    }
-			  else
-			    e->accept (tpc);
-			}
+			e->accept (tpc);
 		    }
 		  else
 		    {
 		      tree_command *c = s->command ();
 
 		      tpc.suspend_newline ();
 		      c->accept (tpc);
 		      tpc.resume_newline ();
diff --git a/src/ov-usr-fcn.cc b/src/ov-usr-fcn.cc
--- a/src/ov-usr-fcn.cc
+++ b/src/ov-usr-fcn.cc
@@ -351,17 +351,24 @@ octave_user_function::do_multi_index_op 
     if (echo_commands)
       print_code_function_header ();
 
     // Evaluate the commands that make up the function.
 
     unwind_protect_bool (evaluating_function_body);
     evaluating_function_body = true;
 
-    cmd_list->eval ();
+    if (is_inline_function ())
+      {
+	assert (cmd_list->length () == 1);
+
+	retval = cmd_list->eval (false, nargout);
+      }
+    else
+      cmd_list->eval ();
 
     if (echo_commands)
       print_code_function_trailer ();
 
     if (tree_return_command::returning)
       tree_return_command::returning = 0;
 
     if (tree_break_command::breaking)
@@ -370,17 +377,17 @@ octave_user_function::do_multi_index_op 
     if (error_state)
       {
 	traceback_error ();
 	goto abort;
       }
     
     // Copy return values out.
 
-    if (ret_list)
+    if (ret_list && ! is_inline_function ())
       {
 	ret_list->initialize_undefined_elements (my_name, nargout, Matrix ());
 
 	Cell varargout;
 
 	if (ret_list->takes_varargs ())
 	  {
 	    symbol_record *sr = local_sym_tab->lookup ("varargout");
diff --git a/src/parse.y b/src/parse.y
--- a/src/parse.y
+++ b/src/parse.y
@@ -1777,38 +1777,17 @@ make_anon_fcn_handle (tree_parameter_lis
   if (symtab_context.empty ())
     panic_impossible ();
 
   curr_sym_tab = symtab_context.top ();
 
   symtab_context.pop ();
 
   if (stmt && stmt->is_expression ())
-    {
-      symbol_record *sr = fcn_sym_tab->lookup ("__retval__", true);
-
-      tree_expression *e = stmt->expression ();
-
-      tree_identifier *id = new tree_identifier (sr);
-
-      tree_simple_assignment *asn = new tree_simple_assignment (id, e);
-
-      stmt->set_expression (asn);
-
-      stmt->set_print_flag (false);
-
-      // FIXME -- would like to delete old_stmt here or
-      // replace expression inside it with the new expression we just
-      // created so we don't have to create a new statement at all.
-
-      id = new tree_identifier (sr);
-      tree_decl_elt *elt = new tree_decl_elt (id);
-
-      ret_list = new tree_parameter_list (elt);
-    }
+    stmt->set_print_flag (false);
 
   tree_statement_list *body = new tree_statement_list (stmt);
 
   body->mark_as_function_body ();
 
   tree_anon_fcn_handle *retval
     = new tree_anon_fcn_handle (param_list, ret_list, body, fcn_sym_tab, l, c);
 
