# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1541097335 14400
#      Thu Nov 01 14:35:35 2018 -0400
# Node ID 8c3e5b727e8f2446bd237cd4eaf4f3725107fe4e
# Parent  acb4689aa5f25caa0b8482432a882e26c5223890
* __init_fltk__.cc: Eliminate some old commented debugging code.

diff --git a/libinterp/dldfcn/__init_fltk__.cc b/libinterp/dldfcn/__init_fltk__.cc
--- a/libinterp/dldfcn/__init_fltk__.cc
+++ b/libinterp/dldfcn/__init_fltk__.cc
@@ -147,18 +147,16 @@ public:
       hide_overlay ();
   }
 
   bool zoom (void) { return m_in_zoom; }
   void set_zoom_box (const Matrix& zb) { m_zoom_box = zb; }
 
   void print (const std::string& cmd, const std::string& term)
   {
-    //std::cout << "OpenGL_fltk::print(cmd=" << cmd << ", term=" << term << ") canvas size = " << w () << 'x' << h () << std::endl;
-
     octave::gl2ps_print (m_glfcns, gh_manager::get_object (m_number),
                          cmd, term);
   }
 
   uint8NDArray get_pixels (void)
   {
     m_renderer.draw (gh_manager::get_object (m_number));
     return m_renderer.get_pixels (w (), h ());
@@ -1462,18 +1460,16 @@ private:
   {
     if (event == FL_FOCUS)
       return 1;
 
     graphics_handle gh;
 
     if (! m_fp.is_beingdeleted ())
       {
-        //std::cout << "plot_window::handle event = " <<  fl_eventnames[event] << std::endl;
-
         // FLTK resends keyboard events with flipped case if all
         // widgets rejects the event.
         // See Event Propagation http://www.fltk.org/doc-1.3/events.html
         static bool key_resent_detected = false;
 
         switch (event)
           {
           case FL_SHORTCUT:
@@ -1820,17 +1816,17 @@ private:
                           mark_modified ();
                           return 1;
                         }
                     }
                 }
               break;
             }
       }
-    //std::cout << "plot_window::handle wasn't interested in event " <<  fl_eventnames[event] << std::endl;
+
     return Fl_Window::handle (event);
   }
 };
 
 class figure_manager
 {
 private:
 
