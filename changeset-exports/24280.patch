# HG changeset patch
# User Torsten <mttl@mailbox.org>
# Date 1510521046 -3600
#      Sun Nov 12 22:10:46 2017 +0100
# Branch stable
# Node ID bda0c5b38bda9adb9840160a26d01f1d0cd50802
# Parent  4746bd294c54aeb2f6e3fb40372531ca9abcd730
consistent case of settings keys in the settings file (important for qt5)

* settings_dialog (settings_dialog, write_changed_settings):
  change Dockwidgets into DockWidgets

* octave-dock-widget.cc (handle_settings):
  change Dockwidgets into DockWidgets

diff --git a/libgui/src/octave-dock-widget.cc b/libgui/src/octave-dock-widget.cc
--- a/libgui/src/octave-dock-widget.cc
+++ b/libgui/src/octave-dock-widget.cc
@@ -426,27 +426,27 @@ octave_dock_widget::handle_settings (con
 {
   _custom_style
     = settings->value ("DockWidgets/widget_title_custom_style",false).toBool ();
 
   _title_3d
     = settings->value ("DockWidgets/widget_title_3d",50).toInt ();
 
   QColor default_var = QColor (0,0,0);
-  _fg_color = settings->value ("Dockwidgets/title_fg_color",
+  _fg_color = settings->value ("DockWidgets/title_fg_color",
                                default_var).value<QColor> ();
   default_var = QColor (0,0,0);
-  _fg_color_active = settings->value ("Dockwidgets/title_fg_color_active",
+  _fg_color_active = settings->value ("DockWidgets/title_fg_color_active",
                                       default_var).value<QColor> ();
 
   default_var = QColor (255,255,255);
-  _bg_color = settings->value ("Dockwidgets/title_bg_color",
+  _bg_color = settings->value ("DockWidgets/title_bg_color",
                                default_var).value<QColor> ();
   default_var = QColor (192,192,192);
-  _bg_color_active = settings->value ("Dockwidgets/title_bg_color_active",
+  _bg_color_active = settings->value ("DockWidgets/title_bg_color_active",
                                       default_var).value<QColor> ();
 
   int r, g, b;
   _bg_color.getRgb (&r, &g, &b);
   if (r+g+b < 400)
     _icon_color = "-light";
   else
     _icon_color = "";
diff --git a/libgui/src/settings-dialog.cc b/libgui/src/settings-dialog.cc
--- a/libgui/src/settings-dialog.cc
+++ b/libgui/src/settings-dialog.cc
@@ -315,44 +315,44 @@ settings_dialog::settings_dialog (QWidge
     settings->value ("DockWidgets/widget_icon_set","NONE").toString ();
   ui->general_icon_octave-> setChecked (true);  // the default (if invalid set)
   ui->general_icon_octave-> setChecked (widget_icon_set == "NONE");
   ui->general_icon_graphic-> setChecked (widget_icon_set == "GRAPHIC");
   ui->general_icon_letter-> setChecked (widget_icon_set == "LETTER");
 
   // custom title bar of dock widget
   QVariant default_var = QColor (255,255,255);
-  QColor bg_color = settings->value ("Dockwidgets/title_bg_color",
+  QColor bg_color = settings->value ("DockWidgets/title_bg_color",
                                      default_var).value<QColor> ();
   _widget_title_bg_color = new color_picker (bg_color);
   _widget_title_bg_color->setEnabled (false);
   ui->layout_widget_bgtitle->addWidget (_widget_title_bg_color,0);
   connect (ui->cb_widget_custom_style, SIGNAL (toggled (bool)),
            _widget_title_bg_color, SLOT (setEnabled (bool)));
 
   default_var = QColor (192,192,192);
-  QColor bg_color_active = settings->value ("Dockwidgets/title_bg_color_active",
+  QColor bg_color_active = settings->value ("DockWidgets/title_bg_color_active",
                                             default_var).value<QColor> ();
   _widget_title_bg_color_active = new color_picker (bg_color_active);
   _widget_title_bg_color_active->setEnabled (false);
   ui->layout_widget_bgtitle_active->addWidget (_widget_title_bg_color_active,0);
   connect (ui->cb_widget_custom_style, SIGNAL (toggled (bool)),
            _widget_title_bg_color_active, SLOT (setEnabled (bool)));
 
   default_var = QColor (0,0,0);
-  QColor fg_color = settings->value ("Dockwidgets/title_fg_color",
+  QColor fg_color = settings->value ("DockWidgets/title_fg_color",
                                      default_var).value<QColor> ();
   _widget_title_fg_color = new color_picker (fg_color);
   _widget_title_fg_color->setEnabled (false);
   ui->layout_widget_fgtitle->addWidget (_widget_title_fg_color,0);
   connect (ui->cb_widget_custom_style, SIGNAL (toggled (bool)),
            _widget_title_fg_color, SLOT (setEnabled (bool)));
 
   default_var = QColor (0,0,0);
-  QColor fg_color_active = settings->value ("Dockwidgets/title_fg_color_active",
+  QColor fg_color_active = settings->value ("DockWidgets/title_fg_color_active",
                                             default_var).value<QColor> ();
   _widget_title_fg_color_active = new color_picker (fg_color_active);
   _widget_title_fg_color_active->setEnabled (false);
   ui->layout_widget_fgtitle_active->addWidget (_widget_title_fg_color_active,0);
   connect (ui->cb_widget_custom_style, SIGNAL (toggled (bool)),
            _widget_title_fg_color_active, SLOT (setEnabled (bool)));
 
   ui->sb_3d_title->setValue (
@@ -737,23 +737,23 @@ settings_dialog::write_changed_settings 
     language = "SYSTEM";
   settings->setValue ("language", language);
 
   // dock widget title bar
   settings->setValue ("DockWidgets/widget_title_custom_style",
                       ui->cb_widget_custom_style->isChecked ());
   settings->setValue ("DockWidgets/widget_title_3d",
                       ui->sb_3d_title->value ());
-  settings->setValue ("Dockwidgets/title_bg_color",
+  settings->setValue ("DockWidgets/title_bg_color",
                       _widget_title_bg_color->color ());
-  settings->setValue ("Dockwidgets/title_bg_color_active",
+  settings->setValue ("DockWidgets/title_bg_color_active",
                       _widget_title_bg_color_active->color ());
-  settings->setValue ("Dockwidgets/title_fg_color",
+  settings->setValue ("DockWidgets/title_fg_color",
                       _widget_title_fg_color->color ());
-  settings->setValue ("Dockwidgets/title_fg_color_active",
+  settings->setValue ("DockWidgets/title_fg_color_active",
                       _widget_title_fg_color_active->color ());
 
   // icon size
   int icon_size = 0;
   if (ui->icon_size_small->isChecked ())
     icon_size = -1;
   else if (ui->icon_size_large->isChecked ())
     icon_size = 1;
