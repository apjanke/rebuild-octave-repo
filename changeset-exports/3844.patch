# HG changeset patch
# User jwe
# Date 995918866 0
#      Mon Jul 23 20:07:46 2001 +0000
# Node ID 87f85453b6b77097014b14c6be194f73e58fdd38
# Parent  f848bc60b927eb53f490ddb1469c0ce6d596ef37
[project @ 2001-07-23 20:07:45 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,12 @@
+2001-07-23  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* parse.y: Clear help_buf after documenting function.
+
 2001-06-29  Mumit Khan  <khan@nanotech.wisc.edu>
 
 	* defun-int.h (DEFINE_FUN_INSTALLER_FUN{2,3}): New macros.
 	(DEFINE_FUN_INSTALLER_FUN): Use.
 	* dynamic-ld.cc ({STRINGIFY, STRINGIFY1}): New macros.
 	(octave_dynamic_loader::mangle_name): Support dynamic linking
 	for GNU v3 and Sun C++ ABI.
 
diff --git a/src/parse.y b/src/parse.y
--- a/src/parse.y
+++ b/src/parse.y
@@ -2497,16 +2497,18 @@ frob_function (tree_identifier *id, octa
     fcn->stash_symtab_ptr (sr);
   else
     panic_impossible ();
 
   id->define (fcn, symbol_record::USER_FUNCTION);
 
   id->document (help_buf);
 
+  help_buf.resize (0);
+
   return fcn;
 }
 
 // Finish defining a function.
 
 static octave_user_function *
 finish_function (tree_identifier *id, octave_user_function *fcn,
 		 octave_comment_list *lc)
@@ -3279,19 +3281,19 @@ be named @file{@var{file}.m}.\n\
     }
   else
     print_usage ("source");
 
   return retval;
 }
 
 // Evaluate an Octave function (built-in or interpreted) and return
-// the list of result values.  the results.  NAME is the name of the
-// function to call.  ARGS are the arguments to the function.  NARGOUT
-// is the number of output arguments expected.
+// the list of result values.  NAME is the name of the function to
+// call.  ARGS are the arguments to the function.  NARGOUT is the
+// number of output arguments expected. 
 
 octave_value_list
 feval (const std::string& name, const octave_value_list& args, int nargout)
 {
   octave_value_list retval;
 
   octave_function *fcn = is_valid_function (name, "feval", 1);
 
