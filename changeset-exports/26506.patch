# HG changeset patch
# User Rik <rik@octave.org>
# Date 1547010096 28800
#      Tue Jan 08 21:01:36 2019 -0800
# Branch stable
# Node ID 9cf999911dfe17df47a4282baf831e537290453c
# Parent  af476ac04cfd628bad82bb6be087b215aa987710
lo-sysdep.cc: Fix static analyzer detected issues (bug #55347).

* lo-sysdep.cc (putenv_wrapper): Check validity of pointer "new_item" before
using.

diff --git a/liboctave/system/lo-sysdep.cc b/liboctave/system/lo-sysdep.cc
--- a/liboctave/system/lo-sysdep.cc
+++ b/liboctave/system/lo-sysdep.cc
@@ -165,17 +165,18 @@ namespace octave
       int new_len = name.length () + value.length () + 2;
 
       // FIXME: This leaks memory, but so would a call to setenv.
       // Short of extreme measures to track memory, altering the environment
       // always leaks memory, but the saving grace is that the leaks are small.
 
       char *new_item = static_cast<char *> (std::malloc (new_len));
 
-      sprintf (new_item, "%s=%s", name.c_str (), value.c_str ());
+      if (new_item)
+        sprintf (new_item, "%s=%s", name.c_str (), value.c_str ());
 
       // As far as I can see there's no way to distinguish between the
       // various errors; putenv doesn't have errno values.
 
 #if defined (OCTAVE_USE_WINDOWS_API)
       wchar_t *wnew_item = u8_to_wchar (new_item);
       std::free (static_cast<void *> (new_item));
       if (_wputenv (wnew_item) < 0)
