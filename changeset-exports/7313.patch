# HG changeset patch
# User jwe
# Date 1197498975 0
#      Wed Dec 12 22:36:15 2007 +0000
# Node ID 7fd7abd371131ddf28ffbc81e7314224467172aa
# Parent  1ebbf09242176e3805262297f916d2042a24a5af
[project @ 2007-12-12 22:36:15 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,10 +1,14 @@
 2007-12-12  John W. Eaton  <jwe@octave.org>
 
+	* image/loadimage.m: Avoid calling eval.  Avoid calling exist.
+
+	* plot/pie.m: Avoid calling "exist".
+
 	* linear-algebra/condest.m: Use nargin instead of size(varargin,2).	
 	Condense argument processing logic.  Allow 6 arguments.
 	Use issquare.  Avoid calling "exist".
 
 	* plot/__go_draw_axes__.m: Handle the axes layer property.
 
 2007-12-12  David Bateman  <dbateman@free.fr>
 
diff --git a/scripts/image/loadimage.m b/scripts/image/loadimage.m
--- a/scripts/image/loadimage.m
+++ b/scripts/image/loadimage.m
@@ -39,25 +39,25 @@ function [img_retval, map_retval] = load
   file = file_in_path (IMAGE_PATH, filename);
 
   if (isempty (file))
     error ("loadimage: unable to find image file");
   endif
 
   ## The file is assumed to have variables img and map, or X and map.
 
-  eval (sprintf ("load %s", file));
+  vars = load (file);
 
-  if (exist ("img"))
-    img_retval = img;
-  elseif (exist ("X"))
-    img_retval = X;
+  if (isfield (vars, "img"))
+    img_retval = vars.img;
+  elseif (isfield (vars, "X"))
+    img_retval = vars.X;
   else
     error ("loadimage: invalid image file found");
   endif
 
-  if (exist ("map"))
-    map_retval = map;
+  if (isfield (vars, "map"))
+    map_retval = vars.map;
   else
     error ("loadimage: invalid image file found");
   endif
 
 endfunction
diff --git a/scripts/plot/pie.m b/scripts/plot/pie.m
--- a/scripts/plot/pie.m
+++ b/scripts/plot/pie.m
@@ -72,36 +72,41 @@ function hlist = __pie__ (varargin)
   iarg = 3;
 
   if (! isvector (x))
     error ("pie: expecting vector argument");
   endif
 
   len = length (x);
 
+  have_explode = false;
+  have_labels = false;
+
   while (iarg <= nargin)
     arg = varargin{iarg++};
     if (iscell (arg))
       labels = arg;
+      have_labels = true;
       if (! size_equal (x, labels))
 	error ("pie: mismatch in number of labels and data");
       endif
     elseif (isnumeric (arg))
       explode = arg;
+      have_explode = true;
       if (! size_equal (x, explode))
 	error ("pie: mismatch in number of elements in explode and data");
       endif
     endif
   endwhile
 
-  if (! exist ("explode", "var"))
+  if (! have_explode)
     explode = zeros (size (x));
   endif
 
-  if (! exist ("labels", "var"))
+  if (! have_labels)
     xp = round (100 * x ./ sum (x)); 
     for i = 1:len
       labels{i} = sprintf ("%d%%", xp(i));
     endfor
   endif
 
   hlist = [];
   refinement = 90;
