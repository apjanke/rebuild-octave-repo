# HG changeset patch
# User jwe
# Date 885716845 0
#      Sun Jan 25 08:27:25 1998 +0000
# Node ID 02766207b74ca2a9423a3cf1704e5c51a56b9696
# Parent  4061d67231a80dd0690e8fe42ad66a79df814836
[project @ 1998-01-25 08:27:23 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,28 @@
+Sun Jan 25 01:59:47 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* aclocal.m4 (OCTAVE_F2C_F77_COMPAT): Require OCTAVE_PROG_G77.
+	Handle cross compiling with g77.
+	(OCTAVE_REINSTALL_SIGHANDLERS): Provide defaults for cross compiling.
+
+	* aclocal.m4 (OCTAVE_PROG_AR, OCTAVE_PROG_G77, OCTAVE_PROG_PAGER,
+	OCTAVE_PROG_GNUPLOT, OCTAVE_PROG_RUNTEST, OCTAVE_F77_MAIN_FLAG):
+	New macros.
+	* configure.in: Use them in place of in-line code.
+	
+Sat Jan 24 00:33:14 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* aclocal.m4 (OCTAVE_HOST_TYPE): Don't set target_host_type.
+	* configure.in: Use canonical_host_type in place of target_host_type.
+
+Fri Jan 23 02:47:57 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* configure.in: Also check for -fno-rtti.
+
 Thu Jan 15 23:12:27 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* config.guess, config.sub: Update to new version from the FSF.
 	* configure.in: Match alpha*-... instead of just alpha-... to cope
 	with new strings like alphaev56-dec-osf4.0b returned from
 	config.guess.
 
 	* aclocal.m4 (OCTAVE_CC_FLAG, OCTAVE_CXX_FLAG): New macros.
diff --git a/PROJECTS b/PROJECTS
--- a/PROJECTS
+++ b/PROJECTS
@@ -31,16 +31,18 @@ Numerical:
 
   * Free NLP solver.
 
   * Support for sparse matrices.
 
   * Fix CollocWt to handle Laguerre polynomials.  Make it easy to
     extend it to other polynomial types.
 
+  * Make filter faster (perhaps by calling BLAS functions).
+
   * Add optional arguments to colloc so that it's not restricted to
     Legendre polynomials.
 
   * Fix eig to also be able to solve the generalized eigenvalue
     problem, and to solve for eigenvalues and eigenvectors without
     performing a balancing step first.
 
   * Move rand, eye, xpow, xdiv, etc., functions to the matrix classes.
@@ -565,16 +567,18 @@ Documentation and On-Line Help:
 
   * Make the arrow keys work in the info reader.
 
   * Update Info to be based on the current Texinfo release.
 
   * Should info/terminal.c include definitions for PC, BC, UP, and
     ospeed on all systems?
 
+  * Clean up help stuff.
+
   * Demo files.
 
   * As the number of m-files with octave grows perhaps a 'Contents.m'
     file for each toolbox (directory) would be appropriate so one
     knows exactly what functions are in a toolbox with a quick look.
     It would be best to generate information for each function directly
     from the M-files, so that the information doesn't have to be
     duplicated, and will remain current if the M-files change.  It
diff --git a/README.Windows b/README.Windows
--- a/README.Windows
+++ b/README.Windows
@@ -49,21 +49,32 @@ Here is a list of current problems (and 
 
   After deleting -DREADLINE from the Makefile, I was able to compile a
   working version of gnuplot 3.6 beta 315 using the GNU-WIN32 tools,
   but it does not support the Windows graphics terminal.  It does
   support dumb terminals and lots of other output devices, including
   PostScript, but it would be much nicer if it could open a separate
   window and draw pretty graphs there.
 
+* If Octave takes a long time to find function files, you may have to
+  modify your LOADPATH to avoid device names specified using the
+  `//DEV/sudir' syntax.  To map the D: drive (for example) to
+  /D_DRIVE, do the following:
 
-If you know of solutions for any of these problems, please contact
-bug-octave@bevo.che.wisc.edu.
+    cd /
+    mkdir /D_DRIVE
+    mount d: /D_DRIVE
+
+  Then you can set your LOADPATH to include /D_DRIVE/subdir instead of
+  //d/subdir.
+
+If you know of solutions for any of the problems mentioned above,
+please contact bug-octave@bevo.che.wisc.edu.
 
 More information about the GNU-WIN32 project is available via the WWW
 at http://www.cygnus.com/gnu-win32.
 
 John W. Eaton
 jwe@bevo.che.wisc.edu
 University of Wisconsin-Madison
 Department of Chemical Engineering
 
-Wed Jan  8 23:15:59 1997
+Thu Jan 15 23:35:03 1998
diff --git a/aclocal.m4 b/aclocal.m4
--- a/aclocal.m4
+++ b/aclocal.m4
@@ -24,23 +24,22 @@ dnl
 dnl Figure out the hardware-vendor-os info.
 dnl
 dnl OCTAVE_HOST_TYPE
 AC_DEFUN(OCTAVE_HOST_TYPE,
 [AC_CANONICAL_HOST
 if test -z "$host"; then
   host=unknown
 fi
-target_host_type=$host
 canonical_host_type=$host
 if test "$host" = unknown; then
   AC_MSG_WARN([configuring Octave for unknown system type
 ])
 fi
-AC_SUBST(target_host_type)])
+AC_SUBST(canonical_host_type)])
 dnl
 dnl Set default value for a variable and substitute it.
 dnl
 dnl OCTAVE_SET_DEFAULT
 AC_DEFUN(OCTAVE_SET_DEFAULT,
 [ifelse($#, 2, [$1=$2
 ])dnl
 AC_MSG_RESULT([defining $1 to be $$1])
@@ -54,16 +53,45 @@ AC_DEFUN(OCTAVE_CHECK_EXCLUSIVE_WITH_OPT
     if test "$with_$2" = no; then
       true
     else
       $3
     fi
   fi
 fi])
 dnl
+dnl Check for ar.
+dnl
+AC_DEFUN(OCTAVE_PROG_AR,
+[if test -z "$AR"; then
+  AR=ar
+fi
+AC_SUBST(AR)
+
+if test -z "$ARFLAGS"; then
+  ARFLAGS="rc"
+fi
+AC_SUBST(ARFLAGS)
+])
+dnl
+dnl See if $F77 is the GNU Fortran compiler
+dnl
+AC_DEFUN(OCTAVE_PROG_G77,
+[AC_CACHE_CHECK([whether ${F77-f77} is the GNU Fortran compiler],
+octave_cv_f77_is_g77,
+[if $use_g77; then
+  octave_cv_f77_is_g77=yes
+else
+  f77_output=`$F77 -v 2>&1 | grep "GNU F77"`
+  if test -n "$f77_output"; then
+    octave_cv_f77_is_g77=yes
+  fi
+fi])
+])
+dnl
 dnl See what libraries are used by the Fortran compiler.
 dnl
 dnl Write a minimal program and compile it with -v.  I don't know what
 dnl to do if your compiler doesn't have -v...
 dnl
 dnl OCTAVE_FLIBS()
 AC_DEFUN(OCTAVE_FLIBS,
 [AC_MSG_CHECKING([for Fortran libraries])
@@ -234,16 +262,31 @@ if test -n "$ld_run_path"; then
 else
   flibs_result="$flibs"
 fi
 changequote([, ])dnl
 octave_cv_flibs="$flibs_result"])
 FLIBS="$octave_cv_flibs"
 AC_MSG_RESULT([$FLIBS])])
 dnl
+dnl This is apparently needed on some Linux systems.
+dnl
+AC_DEFUN(OCTAVE_F77_MAIN_FLAG,
+[FORTRAN_MAIN_FLAG=
+case "$canonical_host_type" in
+  *-linux-*)
+    FORTRAN_MAIN_FLAG="-u MAIN__"
+  ;;
+esac
+if test -n "$FORTRAN_MAIN_FLAG"; then
+  AC_MSG_RESULT([defining FORTRAN_MAIN_FLAG to be $FORTRAN_MAIN_FLAG])
+fi
+AC_SUBST(FORTRAN_MAIN_FLAG)
+])
+dnl
 dnl See if the Fortran compiler uses uppercase external names.
 dnl
 dnl OCTAVE_F77_UPPERCASE_NAMES()
 AC_DEFUN(OCTAVE_F77_UPPERCASE_NAMES,
 [AC_MSG_CHECKING([whether $F77 uses uppercase external names])
 AC_CACHE_VAL(octave_cv_f77_uppercase_names,
 [octave_cv_f77_uppercase_names=no
 cat > conftest.f <<EOF
@@ -292,37 +335,44 @@ fi])
 dnl
 dnl See if the Fortran compiler is compatible with f2c.
 dnl
 dnl Write a minimal program, compile it, and see if it works as
 dnl expected.
 dnl
 dnl OCTAVE_F2C_F77_COMPAT()
 AC_DEFUN(OCTAVE_F2C_F77_COMPAT,
-[AC_REQUIRE([OCTAVE_FLIBS])
+[AC_REQUIRE([OCTAVE_PROG_G77])
+AC_REQUIRE([OCTAVE_FLIBS])
 AC_REQUIRE([OCTAVE_F77_APPEND_UNDERSCORE])
-AC_MSG_CHECKING([$F77/f2c compatibility])
-AC_CACHE_VAL(octave_cv_f2c_f77_compat,
-[trap 'rm -f ftest* ctest* core; exit 1' 1 3 15
-octave_cv_f2c_f77_compat=no
-cat > ftest.f <<EOF
+if test "$cross_compiling" = yes; then
+  octave_cv_f2c_f77_compat=yes
+  if test "$octave_cv_f77_is_g77" = yes; then
+    AC_MSG_RESULT([assuming ${F77-f77} cross compiler is f2c compatible])
+  else
+    AC_MSG_WARN([assuming ${F77-f77} cross compiler is f2c compatible])
+  fi
+else
+  AC_CACHE_CHECK([$F77/f2c compatibility], octave_cv_f2c_f77_compat,
+  [trap 'rm -f ftest* ctest* core; exit 1' 1 3 15
+  octave_cv_f2c_f77_compat=no
+  cat > ftest.f <<EOF
       INTEGER FUNCTION FORSUB (C, D)
       CHARACTER *(*) C
       INTEGER L
       DOUBLE PRECISION D
       L = LEN (C)
       WRITE (*, '(A,1X,I2)') C(1:L), INT (D)
       FORSUB = 1
       RETURN
       END
 EOF
-${F77-f77} -c ftest.f 1>&AC_FD_CC 2>&AC_FD_CC
-dnl
-changequote(, )
-cat > ctest.c <<EOF
+  ${F77-f77} -c ftest.f 1>&AC_FD_CC 2>&AC_FD_CC
+  changequote(, )
+  cat > ctest.c <<EOF
 #include "confdefs.h"
 static char s[14];
 int main ()
 {
   double d = 10.0;
   int len;
   strcpy (s, "FOO-I-HITHERE");
   len = strlen (s);
@@ -333,29 +383,29 @@ int main ()
 #endif
 }
 #if defined (sun)
 int MAIN_ () { return 0; }
 #elif defined (linux) && defined (__ELF__)
 int MAIN__ () { return 0; }
 #endif
 EOF
-changequote([, ])
-dnl
-if ${CC-cc} -c ctest.c 1>&AC_FD_CC 2>&AC_FD_CC; then
-  if ${CC-cc} -o ctest ctest.o ftest.o $FLIBS -lm 1>&AC_FD_CC 2>&AC_FD_CC; then
-    ctest_output=`./ctest 2>&1`
-    status=$?
-    if test $status -eq 0 && test "$ctest_output" = "FOO-I-HITHERE 10"; then
-      octave_cv_f2c_f77_compat=yes
+  changequote([, ])
+  if ${CC-cc} -c ctest.c 1>&AC_FD_CC 2>&AC_FD_CC; then
+    if ${CC-cc} -o ctest ctest.o ftest.o $FLIBS -lm 1>&AC_FD_CC 2>&AC_FD_CC; then
+      ctest_output=`./ctest 2>&1`
+      status=$?
+      if test $status -eq 0 && test "$ctest_output" = "FOO-I-HITHERE 10"; then
+	octave_cv_f2c_f77_compat=yes
+      fi
     fi
-  fi
-fi])
+  fi])
+fi
 rm -f ftest* ctest* core
-AC_MSG_RESULT([$octave_cv_f2c_f77_compat])])
+])
 dnl
 dnl See if struct group has a gr_passwd field.
 dnl
 AC_DEFUN(OCTAVE_STRUCT_GR_PASSWD,
 [AC_CACHE_CHECK([for gr_passwd in struct group], octave_cv_struct_gr_passwd,
 [AC_TRY_COMPILE([#include <sys/types.h>
 #include <grp.h>], [struct group s; s.gr_passwd;],
 octave_cv_struct_gr_passwd=yes, octave_cv_struct_gr_passwd=no)])
@@ -529,20 +579,28 @@ main()
 {
   nsigint = 0;
   set_signal_handler(SIGINT, sigint);
   kill((int)getpid(), SIGINT);
   kill((int)getpid(), SIGINT);
   exit(nsigint != 2);
 }
 ], octave_cv_must_reinstall_sighandlers=no, octave_cv_must_reinstall_sighandlers=yes,
-AC_MSG_ERROR(cannot check signal handling if cross compiling))])
-AC_MSG_RESULT($octave_cv_must_reinstall_sighandlers)
+if test "$octave_cv_signal_vintage" = svr3; then
+  octave_cv_must_reinstall_sighandlers=yes
+else
+  octave_cv_must_reinstall_sighandlers=no
+fi)])
+if test "$cross_compiling" = yes; then
+  AC_MSG_RESULT([$octave_cv_must_reinstall_sighandlers assumed for cross compilation])
+else
+  AC_MSG_RESULT($octave_cv_must_reinstall_sighandlers)
+fi
 if test "$octave_cv_must_reinstall_sighandlers" = yes; then
-AC_DEFINE(MUST_REINSTALL_SIGHANDLERS)
+  AC_DEFINE(MUST_REINSTALL_SIGHANDLERS)
 fi
 ])
 dnl
 dnl This check originally from bash 2.0.
 dnl
 dnl Check for typedef'd symbols in header files, but allow the caller to
 dnl specify the include files to be checked in addition to the default.
 dnl 
@@ -589,17 +647,16 @@ AC_DEFUN(OCTAVE_CXX_NEW_FRIEND_TEMPLATE_
 	 return 0;
        }
 EOB
     AC_TRY_LINK([#include "conftest.h"], [
         A a (1);
         return a == A(1);
       ], 
       octave_cv_cxx_new_friend_template_decl=no,
-      octave_cv_cxx_new_friend_template_decl=yes,
       octave_cv_cxx_new_friend_template_decl=yes
     )
     AC_LANG_RESTORE
   ])
   AC_MSG_RESULT($octave_cv_cxx_new_friend_template_decl)
   if test $octave_cv_cxx_new_friend_template_decl = yes; then
     AC_DEFINE(CXX_NEW_FRIEND_TEMPLATE_DECL)
   fi
@@ -653,8 +710,97 @@ AC_DEFUN(OCTAVE_CXX_FLAG, [
   if eval "test \"`echo '$octave_cv_cxx_flag_'$ac_safe`\" = yes"; then
     AC_MSG_RESULT(yes)
     ifelse([$2], , [CXXFLAGS="$CXXFLAGS $1"], [$2])
   else
     AC_MSG_RESULT(no)
     ifelse([$3], , , [$3])
   fi
 ])
+dnl
+dnl What pager should we use?
+dnl
+AC_DEFUN(OCTAVE_PROG_PAGER,
+[if test "$cross_compiling" = yes; then
+  DEFAULT_PAGER=less
+  AC_MSG_RESULT(assuming $DEFAULT_PAGER exists on $canonical_host_type host)
+  AC_SUBST(DEFAULT_PAGER)
+else
+  octave_possible_pagers="less more page pg"
+  case "$canonical_host_type" in
+    *-*-cygwin32)
+      octave_possible_pagers="$octave_possible_pagers more.com"
+    ;;
+  esac
+
+  AC_CHECK_PROGS(DEFAULT_PAGER, $octave_possible_pagers, [])
+  if test -z "$DEFAULT_PAGER"; then
+    warn_less="I couldn't find \`less', \`more', \`page', or \`pg'"
+    AC_MSG_WARN($warn_less)
+  fi
+fi
+])
+dnl
+dnl Does gnuplot exist?  Is it a recent version?
+dnl
+AC_DEFUN(OCTAVE_PROG_GNUPLOT,
+[if test "$cross_compiling" = yes; then
+  GNUPLOT_BINARY=gnuplot
+  AC_MSG_RESULT(assuming $GNUPLOT_BINARY exists on $canonical_host_type host)
+  AC_SUBST(DEFAULT_PAGER)
+  AC_MSG_RESULT(assuming $GNUPLOT_BINARY supports multiplot mode)
+  AC_DEFINE(GNUPLOT_HAS_MULTIPLOT, 1)
+  AC_MSG_RESULT(assuming $GNUPLOT_BINARY supports multiple frams)
+  AC_DEFINE(GNUPLOT_HAS_FRAMES, 1)
+else
+  AC_CHECK_PROG(GNUPLOT_BINARY, gnuplot, gnuplot, [])
+  if test -n "$GNUPLOT_BINARY"; then
+    AC_MSG_CHECKING([to see if your gnuplot supports multiplot])
+    if test -z "`echo 'set term unknown; set multiplot' | \
+      $GNUPLOT_BINARY 2>&1`"; then
+      AC_MSG_RESULT([yes])
+      AC_DEFINE(GNUPLOT_HAS_MULTIPLOT, 1)
+    else
+      AC_MSG_RESULT([no])
+    fi
+    AC_MSG_CHECKING([to see if your gnuplot supports multiple plot windows])
+    if test -z "`echo 'set term x11 2' | $GNUPLOT_BINARY 2>&1`"; then
+      AC_MSG_RESULT([yes])
+      AC_DEFINE(GNUPLOT_HAS_FRAMES, 1)
+    else
+      AC_MSG_RESULT([no])
+    fi
+  else
+    warn_gnuplot="yes"
+
+    ## If you change this text, be sure to also copy it to the set of
+    ## warnings at the end of the script
+
+    AC_MSG_WARN([I didn't find gnuplot.  It isn't necessary to have gnuplot])
+    AC_MSG_WARN([installed, but you won't be able to use any of Octave's])
+    AC_MSG_WARN([plotting commands without it.])
+    AC_MSG_WARN([])
+    AC_MSG_WARN([If gnuplot is installed but it isn't in your path, you can])
+    AC_MSG_WARN([tell Octave where to find it by typing the command])
+    AC_MSG_WARN([])
+    AC_MSG_WARN([gnuplot_binary = "/full/path/to/gnuplot/binary"])
+    AC_MSG_WARN([])
+    AC_MSG_WARN([at the Octave prompt.])
+  fi
+fi
+])
+dnl
+dnl Is DejaGNU installed?
+dnl
+AC_DEFUN(OCTAVE_PROG_RUNTEST,
+[if test "$cross_compiling" = yes; then
+  RUNTEST=runtest
+  AC_MSG_RESULT(assuming $RUNTEST exists on $canonical_host_type host)
+  AC_SUBST(RUNTEST)
+else
+  AC_CHECK_PROG(RUNTEST, runtest, runtest, [])
+  if test -z "$RUNTEST"; then
+    warn_runtest="I didn't find runtest -- install DejaGNU if you want to run \`make check'"
+    AC_MSG_WARN($warn_runtest)
+  fi
+  AC_SUBST(RUNTEST)
+fi
+])
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -16,17 +16,17 @@ dnl Copyright (C) 1996, 1997 John W. Eat
 ### FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ### for more details.
 ### 
 ### You should have received a copy of the GNU General Public License
 ### along with Octave; see the file COPYING.  If not, write to the Free
 ### Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ### 02111-1307, USA. 
 
-AC_REVISION($Revision: 1.293 $)
+AC_REVISION($Revision: 1.294 $)
 AC_PREREQ(2.9)
 AC_INIT(src/octave.cc)
 AC_CONFIG_HEADER(config.h)
 
 AC_DEFINE(OCTAVE_SOURCE, 1)
 
 OCTAVE_HOST_TYPE
 
@@ -35,23 +35,23 @@ OCTAVE_HOST_TYPE
 OCTAVE_SET_DEFAULT(man1dir, '$(mandir)/man1')
 OCTAVE_SET_DEFAULT(man1ext, '.1')
 OCTAVE_SET_DEFAULT(infofile, '$(infodir)/octave.info')
 OCTAVE_SET_DEFAULT(octincludedir, '$(includedir)/octave-$(version)/octave')
 OCTAVE_SET_DEFAULT(fcnfiledir, '$(datadir)/octave/$(version)/m')
 OCTAVE_SET_DEFAULT(localfcnfiledir, '$(datadir)/octave/site/m')
 OCTAVE_SET_DEFAULT(localfcnfilepath, '$(localfcnfiledir)//')
 OCTAVE_SET_DEFAULT(archlibdir,
-  '$(libexecdir)/octave/$(version)/exec/$(target_host_type)')
+  '$(libexecdir)/octave/$(version)/exec/$(canonical_host_type)')
 OCTAVE_SET_DEFAULT(localarchlibdir,
-  '$(libexecdir)/octave/site/exec/$(target_host_type)')
+  '$(libexecdir)/octave/site/exec/$(canonical_host_type)')
 OCTAVE_SET_DEFAULT(octfiledir,
-  '$(libexecdir)/octave/$(version)/oct/$(target_host_type)')
+  '$(libexecdir)/octave/$(version)/oct/$(canonical_host_type)')
 OCTAVE_SET_DEFAULT(localoctfiledir,
-  '$(libexecdir)/octave/site/oct/$(target_host_type)')
+  '$(libexecdir)/octave/site/oct/$(canonical_host_type)')
 OCTAVE_SET_DEFAULT(localoctfilepath, '$(localoctfiledir)//')
 OCTAVE_SET_DEFAULT(fcnfilepath,
   '.:$(localoctfilepath):$(localfcnfilepath):$(octfiledir)//:$(fcnfiledir)//')
 OCTAVE_SET_DEFAULT(imagedir, '$(datadir)/octave/$(version)/imagelib')
 OCTAVE_SET_DEFAULT(imagepath, '.:$(imagedir)//')
 
 ### Make configure args available for other uses.
 
@@ -282,18 +282,21 @@ changequote([,])dnl
       ieee_fp_flag=-mieee
       XTRA_CFLAGS="$XTRA_CFLAGS -mieee"])
     OCTAVE_CXX_FLAG(-mieee, [
       ieee_fp_flag=-mieee
       XTRA_CXXFLAGS="$XTRA_CXXFLAGS -mieee"])
   ;;
 esac
 
-### Octave doesn't use exceptions yet, so disable them for somewhat
-### faster and smaller code.
+### Octave doesn't use run-time type identification or exceptions yet,
+### so disable them for somewhat faster and smaller code.
+
+OCTAVE_CXX_FLAG(-fno-rtti,
+  [XTRA_CXXFLAGS="$XTRA_CXXFLAGS -fno-rtti"])
 
 OCTAVE_CXX_FLAG(-fno-exceptions,
   [XTRA_CXXFLAGS="$XTRA_CXXFLAGS -fno-exceptions"])
 
 ### We do our own template instantiation.
 
 OCTAVE_CXX_FLAG(-fno-implicit-templates,
   [XTRA_CXXFLAGS="$XTRA_CXXFLAGS -fno-implicit-templates"])
@@ -310,25 +313,17 @@ case "$canonical_host_type" in
 esac
 if test -n "$LD_STATIC_FLAG"; then
   AC_MSG_RESULT([defining LD_STATIC_FLAG to be $LD_STATIC_FLAG])
 fi
 AC_SUBST(LD_STATIC_FLAG)
 
 ### We need these before trying to find libf2c.
 
-if test -z "$AR"; then
-  AR=ar
-fi
-AC_SUBST(AR)
-
-if test -z "$ARFLAGS"; then
-  ARFLAGS="rc"
-fi
-AC_SUBST(ARFLAGS)
+OCTAVE_PROG_AR
 
 AC_PROG_RANLIB
 
 ### If we haven't been forced to use a particular Fortran compiler,
 ### try to find one using any one of several common Un*x Fortran
 ### compiler names.  Put fc last to avoid confusion with some vendor's
 ### /bin/sh fc builtin.
 ###
@@ -374,42 +369,32 @@ elif $use_f2c; then
   AC_MSG_RESULT([defining F2C to be $F2C])
 else
   AC_CHECK_PROGS(F77, g77 f77 f90 xlf cf77 fc)
 fi
 
 have_fortran_compiler=false
 have_f2c=false
 
-f77_is_g77=false
-
 if $use_f2c; then
   have_f2c=true
 else
   if test -n "$F77"; then
     OCTAVE_FLIBS
     OCTAVE_F77_APPEND_UNDERSCORE
     OCTAVE_F2C_F77_COMPAT
     if test "$octave_cv_f2c_f77_compat" = no; then
       F77=
     else
-      if $use_g77; then
-	f77_is_g77=true
-      else
-        f77_output=`$F77 -v 2>&1 | grep "GNU F77"`
-        if test -n "$f77_output"; then
-	  f77_is_g77=true
-        fi
-      fi
       if test -z "$FFLAGS"; then
         FFLAGS="-O"
       fi
       case "$canonical_host_type" in
         alpha*-*-*)
-          if $f77_is_g77 || test -z "$ieee_fp_flag" ; then
+          if test "$f77_is_g77" = yes || test -z "$ieee_fp_flag" ; then
             true
 	  else
 	    FFLAGS="-fpe1 $FFLAGS"
 	  fi
         ;;
       esac
       if test -n "$FFLAGS"; then
         AC_MSG_RESULT([defining FFLAGS to be $FFLAGS])
@@ -489,34 +474,25 @@ EOF
 
 EOF
 else
   AC_MSG_WARN([in order to build octave, you must have a compatible])
   AC_MSG_WARN([Fortran compiler or f2c installed and in your path.])
   AC_MSG_ERROR([See the file INSTALL for more information.])
 fi
 
-FORTRAN_MAIN_FLAG=
-case "$canonical_host_type" in
-  *-linux-*)
-    FORTRAN_MAIN_FLAG="-u MAIN__"
-  ;;
-esac
-if test -n "$FORTRAN_MAIN_FLAG"; then
-  AC_MSG_RESULT([defining FORTRAN_MAIN_FLAG to be $FORTRAN_MAIN_FLAG])
-fi
+OCTAVE_F77_MAIN_FLAG
 
 FC=$F77
 AC_SUBST(FC)
 AC_SUBST(F77)
 AC_SUBST(FFLAGS)
 AC_SUBST(FLIBS)
 AC_SUBST(F2C)
 AC_SUBST(F2CFLAGS)
-AC_SUBST(FORTRAN_MAIN_FLAG)
 AC_SUBST_FILE(f77_rules_frag)
 
 ### Handle dynamic linking and shared library options.
 
 ### Allow the user to experiment with dynamic linking using dlopen/dlsym.
 
 AC_ARG_ENABLE(dl,
   [  --enable-dl             use dlopen/dlsym for dynamic linking (not all systems)],
@@ -595,43 +571,43 @@ changequote([,])dnl
   ;;
   rs6000-ibm-aix* | powerpc-ibm-aix*)
     CPICFLAG=
     CXXPICFLAG=
     FPICFLAG=
     DLFCN_DIR=dlfcn
   ;;
   hppa*-hp-hpux*)
-    if $f77_is_g77; then
+    if test "$f77_is_g77" = yes; then
       FPICFLAG=-fPIC
     else
       FPICFLAG=+Z
     fi
     SHLEXT=sl
     SH_LDFLAGS="-shared -fPIC"
     RLD_FLAG='-Xlinker +b -Xlinker $(libdir)'
   ;;
   *-sgi-*)
     CPICFLAG=
     CXXPICFLAG=
     FPICFLAG=
     RLD_FLAG='-L$(libdir)'
   ;;
   sparc-sun-sunos4*)
-    if $f77_is_g77; then
+    if test "$f77_is_g77" = yes; then
       FPICFLAG=-fPIC
     else
       FPICFLAG=-PIC
     fi
     SH_LD=ld
     SH_LDFLAGS="-assert nodefinitions"
     RLD_FLAG='-L$(libdir)'
   ;;
   sparc-sun-solaris2*)
-    if $f77_is_g77; then
+    if test "$f77_is_g77" = yes; then
       FPICFLAG=-fPIC
     else
       FPICFLAG=-PIC
     fi
     RLD_FLAG='-Xlinker -R -Xlinker $(libdir)'
   ;;
 esac
 
@@ -689,19 +665,19 @@ case "$canonical_host_type" in
     AC_CHECK_LIB(dxml, dgemm_, [SPECIAL_MATH_LIB=-ldxml])
   ;;
 esac
 AC_SUBST(SPECIAL_MATH_LIB)
 
 ### How big are ints and how are they oriented?  These could probably
 ### be eliminated in favor of run-time checks.
 
-AC_CHECK_SIZEOF(short)
-AC_CHECK_SIZEOF(int)
-AC_CHECK_SIZEOF(long)
+AC_CHECK_SIZEOF(short, 2)
+AC_CHECK_SIZEOF(int, 4)
+AC_CHECK_SIZEOF(long, 4)
 
 ### Does the C compiler handle alloca() and const correctly?
 
 AC_ALLOCA
 AC_C_CONST
 
 ### See if we should define NPOS.
 
@@ -892,17 +868,29 @@ case "$canonical_host_type" in
   ;;
   *)
     AC_CHECK_FUNCS(finite isnan isinf infinity quiet_nan)
   ;;
 esac
 
 ### Check for nonstandard but common math functions that we need.
 
-AC_CHECK_FUNCS(acosh asinh atanh erf erfc gamma lgamma)
+AC_CHECK_FUNCS(acosh asinh atanh erf erfc)
+
+case "$canonical_host_type" in
+  *-*-cygwin32)
+    AC_MSG_RESULT(assuming gamma works)
+    AC_DEFINE(HAVE_GAMMA, 1)
+    AC_MSG_RESULT(assuming lgamma works)
+    AC_DEFINE(HAVE_LGAMMA, 1)
+  ;;
+  *)
+    AC_CHECK_FUNCS(gamma lgamma)
+  ;;
+esac
 
 ### Checks for OS specific cruft.
 
 AC_STRUCT_ST_BLKSIZE
 AC_STRUCT_ST_BLOCKS
 AC_STRUCT_ST_RDEV
 AC_STRUCT_TM
 AC_STRUCT_TIMEZONE
@@ -1044,83 +1032,33 @@ case "$YACC" in
   *)
     warn_bison="I didn't find bison, but it's only a problem if you need to reconstruct parse.cc"
     AC_MSG_WARN($warn_bison)
   ;;
 esac
 
 AC_PROG_LN_S
 
-AC_CHECK_PROG(RUNTEST, runtest, runtest, [])
-if test -z "$RUNTEST"; then
-  warn_runtest="I didn't find runtest -- install DejaGNU if you want to run \`make check'"
-  AC_MSG_WARN($warn_runtest)
-fi
-AC_SUBST(RUNTEST)
+OCTAVE_PROG_RUNTEST
 
 AC_PROG_INSTALL
 INSTALL_SCRIPT='${INSTALL}'
 AC_SUBST(INSTALL_SCRIPT)
 
+OCTAVE_PROG_GNUPLOT
+OCTAVE_PROG_PAGER
+
 EXE=
 case "$canonical_host_type" in
   *-*-cygwin32)
     EXE=.exe
   ;;
 esac
 AC_SUBST(EXE)
 
-AC_CHECK_PROG(GNUPLOT_BINARY, gnuplot, gnuplot, [])
-if test -n "$GNUPLOT_BINARY"; then
-  AC_MSG_CHECKING([to see if your gnuplot supports multiplot])
-  if test -z "`echo 'set term unknown; set multiplot' | \
-    $GNUPLOT_BINARY 2>&1`"; then
-    AC_MSG_RESULT([yes])
-    AC_DEFINE(GNUPLOT_HAS_MULTIPLOT, 1)
-  else
-    AC_MSG_RESULT([no])
-  fi
-  AC_MSG_CHECKING([to see if your gnuplot supports multiple plot windows])
-  if test -z "`echo 'set term x11 2' | $GNUPLOT_BINARY 2>&1`"; then
-    AC_MSG_RESULT([yes])
-    AC_DEFINE(GNUPLOT_HAS_FRAMES, 1)
-  else
-    AC_MSG_RESULT([no])
-  fi
-else
-  warn_gnuplot="yes"
-
-  ## If you change this text, be sure to also copy it to the set of
-  ## warnings at the end of the script
-
-  AC_MSG_WARN([I didn't find gnuplot.  It isn't necessary to have gnuplot])
-  AC_MSG_WARN([installed, but you won't be able to use any of Octave's])
-  AC_MSG_WARN([plotting commands without it.])
-  AC_MSG_WARN([])
-  AC_MSG_WARN([If gnuplot is installed but it isn't in your path, you can])
-  AC_MSG_WARN([tell Octave where to find it by typing the command])
-  AC_MSG_WARN([])
-  AC_MSG_WARN([gnuplot_binary = "/full/path/to/gnuplot/binary"])
-  AC_MSG_WARN([])
-  AC_MSG_WARN([at the Octave prompt.])
-fi
-
-octave_possible_pagers="less more page pg"
-case "$canonical_host_type" in
-  *-*-cygwin32)
-    octave_possible_pagers="$octave_possible_pagers more.com"
-  ;;
-esac
-
-AC_CHECK_PROGS(DEFAULT_PAGER, $octave_possible_pagers, [])
-if test -z "$DEFAULT_PAGER"; then
-  warn_less="I couldn't find \`less', \`more', \`page', or \`pg'"
-  AC_MSG_WARN($warn_less)
-fi
-
 ### Even though we include config.h, we need to have the preprocessor
 ### defines available in a variable for the octave-bug script.  Use
 ### UGLY_DEFS for that.
 
 AC_OUTPUT_MAKE_DEFS
 UGLY_DEFS=`echo $DEFS | sed 's,\\",\\\\\\\\\\\\\\\\\\",g'`
 AC_MSG_RESULT([defining UGLY_DEFS to be $UGLY_DEFS])
 AC_SUBST(UGLY_DEFS)
diff --git a/doc/interpreter/eval.texi b/doc/interpreter/eval.texi
--- a/doc/interpreter/eval.texi
+++ b/doc/interpreter/eval.texi
@@ -106,10 +106,11 @@ function result = newtroot (fname, x)
 endfunction
 @end group
 @end example
 
 Note that this is only meant to be an example of calling user-supplied
 functions and should not be taken too seriously.  In addition to using a
 more robust algorithm, any serious code would check the number and type
 of all the arguments, ensure that the supplied function really was a
-function, etc.
-
+function, etc.  See @xref{Predicates for Numeric Objects}, for example,
+for a list of predicates for numeric objects, and @xref{Status of
+Variables}, for a description of the @code{exist} function.
diff --git a/doc/interpreter/install.texi b/doc/interpreter/install.texi
--- a/doc/interpreter/install.texi
+++ b/doc/interpreter/install.texi
@@ -229,16 +229,36 @@ For Linux/GNU systems, the source for @f
 Building @file{.oct} files doesn't work.
 
 You should probably have a shared version of @code{libg++}.  A patch is
 needed to build shared versions of version 2.7.2 of @code{libg++} and
 @code{libstdc++} on the HP-PA architecture.  You can find the patch at
 @url{ftp://ftp.cygnus.com/pub/g++/libg++-2.7.2-hppa-gcc-fix}.
 
 @item
+On FreeBSD systems Octave may hang while initializing some internal
+constants.  The fix appears to be to use
+
+@example
+options      GPL_MATH_EMULATE
+@end example
+
+@noindent
+rather than 
+
+@example
+options      MATH_EMULATE 
+@end example
+
+@noindent
+in the kernel configuration files (typically found in the directory
+@file{/sys/i386/conf}.  After making this change, you'll need to rebuild
+the kernel, install it, and reboot.
+
+@item
 If you encounter errors like
 
 @smallexample
 @group
 passing `void (*)()' as argument 2 of
   `octave_set_signal_handler(int, void (*)(int))'
 @end group
 @end smallexample
diff --git a/libcruft/ChangeLog b/libcruft/ChangeLog
--- a/libcruft/ChangeLog
+++ b/libcruft/ChangeLog
@@ -1,8 +1,12 @@
+Mon Jan 19 23:11:21 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* lapack/xdlange.f, lapack/xzlange.f: New files.
+
 Mon Dec  1 00:51:03 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* dassl/xerhlt.f, dassl/xermsg.f, dassl/xerprn.f, dassl/xgetua.f,
 	dassl/xsetua.f: Delete.
 
 	* slatec-err: New directory.
 	* Makefile.in: Add it to the list.
 
diff --git a/liboctave/Array2-idx.h b/liboctave/Array2-idx.h
--- a/liboctave/Array2-idx.h
+++ b/liboctave/Array2-idx.h
@@ -491,20 +491,22 @@ assign (Array2<LT>& lhs, const Array2<RT
 		      int len = lhs.length ();
 
 		      if (len > 0)
 			{
 			  int idx_nr = idx.orig_rows ();
 			  int idx_nc = idx.orig_columns ();
 
 			  // lhs_is_empty now means that lhs was
-			  // *originally* empty.
+			  // *originally* empty, and lhs_len is the
+			  // *original* length of the lhs.
 
 			  if (liboctave_dfi_flag
-			      || (idx_nr == 1 && idx_nc == 1))
+			      || (idx_nr == 1 && idx_nc == 1)
+			      || (rhs_nr == 1 && rhs_nc == 1 && lhs_len == 1))
 			    {
 			      if (liboctave_pcv_flag)
 				{
 				  lhs.d1 = lhs.length ();
 				  lhs.d2 = 1;
 				}
 			      else
 				{
@@ -512,22 +514,24 @@ assign (Array2<LT>& lhs, const Array2<RT
 				  lhs.d2 = lhs.length ();
 				}
 			    }
 			  else if (lhs_is_empty && idx.is_colon ())
 			    {
 			      lhs.d1 = rhs.d1;
 			      lhs.d2 = rhs.d2;
 			    }
-			  else if (idx_nr == 1 && rhs_nr == 1)
+			  else if (rhs_nr == 1
+				   && (idx_nr == 1 || lhs_len == 1))
 			    {
 			      lhs.d1 = 1;
 			      lhs.d2 = lhs.length ();
 			    }
-			  else if (idx_nc == 1 && rhs_nc == 1)
+			  else if (rhs_nc == 1
+				   && (idx_nc == 1 || lhs_len == 1))
 			    {
 			      lhs.d1 = lhs.length ();
 			      lhs.d2 = 1;
 			    }
 			  else
 			    (*current_liboctave_error_handler)
       ("A(I) = X: X must be a scalar or a matrix with the same size as I");
 			}
diff --git a/liboctave/CMatrix.cc b/liboctave/CMatrix.cc
--- a/liboctave/CMatrix.cc
+++ b/liboctave/CMatrix.cc
@@ -95,19 +95,19 @@ extern "C"
 
   int F77_FCN (ztrsyl, ZTRSYL) (const char*, const char*, const int&,
 				const int&, const int&,
 				const Complex*, const int&,
 				const Complex*, const int&, 
 				const Complex*, const int&, double&,
 				int&, long, long);
 
-  double F77_FCN (zlange, ZLANGE) (const char*, const int&,
-				   const int&, const Complex*,
-				   const int&, double*); 
+  int F77_FCN (xzlange, XZLANGE) (const char*, const int&,
+				  const int&, const Complex*,
+				  const int&, double*, double&); 
 }
 
 static const Complex Complex_NaN_result (octave_NaN, octave_NaN);
 
 // Complex Matrix class
 
 ComplexMatrix::ComplexMatrix (const Matrix& a)
   : MArray2<Complex> (a.rows (), a.cols ())
@@ -1581,41 +1581,46 @@ ComplexMatrix
 ComplexMatrix::expm (void) const
 {
   ComplexMatrix retval;
 
   ComplexMatrix m = *this;
 
   int nc = columns ();
 
+  // Preconditioning step 1: trace normalization to reduce dynamic
+  // range of poles, but avoid making stable eigenvalues unstable.
+
   // trace shift value
   Complex trshift = 0.0;
 
-  // Preconditioning step 1: trace normalization.
-
   for (int i = 0; i < nc; i++)
     trshift += m.elem (i, i);
 
   trshift /= nc;
 
+  if (trshift.real () < 0.0)
+    trshift = trshift.imag ();
+
   for (int i = 0; i < nc; i++)
     m.elem (i, i) -= trshift;
 
   // Preconditioning step 2: eigenvalue balancing.
 
   ComplexAEPBALANCE mbal (m, "B");
   m = mbal.balanced_matrix ();
   ComplexMatrix d = mbal.balancing_matrix ();
 
   // Preconditioning step 3: scaling.
 
   ColumnVector work (nc);
-  double inf_norm
-    = F77_FCN (zlange, ZLANGE) ("I", nc, nc, m.fortran_vec (), nc,
-				work.fortran_vec ());
+  double inf_norm;
+
+  F77_FCN (xzlange, XZLANGE) ("I", nc, nc, m.fortran_vec (), nc,
+			      work.fortran_vec (), inf_norm);
 
   int sqpow = (inf_norm > 0.0
 	       ? static_cast<int> (1.0 + log (inf_norm) / log (2.0)) : 0);
 
   // Check whether we need to square at all.
 
   if (sqpow < 0)
     sqpow = 0;
@@ -1672,17 +1677,17 @@ ComplexMatrix::expm (void) const
   retval = retval.transpose ();
   d = d.transpose ();
   retval = retval * d;
   retval = d.solve (retval);
   retval = retval.transpose ();
 
   // Reverse preconditioning step 1: fix trace normalization.
 
-  return retval * exp (trshift);
+  return exp (trshift) * retval;
 }
 
 // column vector by row vector -> matrix operations
 
 ComplexMatrix
 operator * (const ColumnVector& v, const ComplexRowVector& a)
 {
   ComplexColumnVector tmp (v);
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,23 @@
+Tue Jan 20 16:30:00 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* dMatrix.cc (Matrix::expm): Skip trace normalization step if the
+	trace is negative. 
+	* CMatrix.cc (ComplexMatrix::expm): Skip trace normalization if
+	the real part of the trace is negative.
+
+Mon Jan 19 16:01:59 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* dMatrix.cc (Matrix::expm): Call xdlange instead of dlange.
+	* CMatrix.cc (ComplexMatrix::expm): Call xzlange instead of zlange.
+
+	* Array2-idx.h (assign): Allow operations like a = 1; a(2:3) = [1;2]
+	to succeed.
+
 Thu Dec 18 14:53:45 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* idx-vector.cc (IDX_VEC_REP::sort): Don't do anything unless len > 1.
 	(make_uniq): Likewise.
 
 Fri Dec 12 10:58:33 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* lo-ieee.cc (octave_ieee_init): Check for linux before __alpha__.
diff --git a/liboctave/dMatrix.cc b/liboctave/dMatrix.cc
--- a/liboctave/dMatrix.cc
+++ b/liboctave/dMatrix.cc
@@ -90,19 +90,19 @@ extern "C"
 				double&, double&);
 
   int F77_FCN (dtrsyl, DTRSYL) (const char*, const char*, const int&,
 				const int&, const int&, const double*,
 				const int&, const double*, const int&,
 				const double*, const int&, double&,
 				int&, long, long);
 
-  double F77_FCN (dlange, DLANGE) (const char*, const int&,
-				   const int&, const double*,
-				   const int&, double*); 
+  int F77_FCN (xdlange, XDLANGE) (const char*, const int&,
+				  const int&, const double*,
+				  const int&, double*, double&); 
 
   int F77_FCN (qzhes, QZHES) (const int&, const int&, double*,
 			      double*, const long&, double*);
  
   int F77_FCN (qzit, QZIT) (const int&, const int&, double*, double*,
 			    const double&, const long&, double*,
 			    int&);
  
@@ -1329,41 +1329,46 @@ Matrix
 Matrix::expm (void) const
 {
   Matrix retval;
 
   Matrix m = *this;
 
   int nc = columns ();
 
+  // Preconditioning step 1: trace normalization to reduce dynamic
+  // range of poles, but avoid making stable eigenvalues unstable.
+
   // trace shift value
-  double trshift = 0;
-
-  // Preconditioning step 1: trace normalization.
+  double trshift = 0.0;
 
   for (int i = 0; i < nc; i++)
     trshift += m.elem (i, i);
 
   trshift /= nc;
 
-  for (int i = 0; i < nc; i++)
-    m.elem (i, i) -= trshift;
+  if (trshift > 0.0)
+    {
+      for (int i = 0; i < nc; i++)
+	m.elem (i, i) -= trshift;
+    }
 
   // Preconditioning step 2: balancing.
 
   AEPBALANCE mbal (m, "B");
   m = mbal.balanced_matrix ();
   Matrix d = mbal.balancing_matrix ();
 
   // Preconditioning step 3: scaling.
 
   ColumnVector work(nc);
-  double inf_norm
-    = F77_FCN (dlange, DLANGE) ("I", nc, nc, m.fortran_vec (),nc,
-				work.fortran_vec ());
+  double inf_norm;
+
+  F77_FCN (xdlange, XDLANGE) ("I", nc, nc, m.fortran_vec (), nc,
+			      work.fortran_vec (), inf_norm);
 
   int sqpow = (int) (inf_norm > 0.0
 		     ? (1.0 + log (inf_norm) / log (2.0))
 		     : 0.0);
 
   // Check whether we need to square at all.
 
   if (sqpow < 0)
@@ -1391,17 +1396,17 @@ Matrix::expm (void) const
       npp = m * npp + m * padec[j];
       dpp = m * dpp + m * (minus_one_j * padec[j]);
       minus_one_j *= -1;
     }
 
   // Zero power.
 
   dpp = -dpp;
-  for(int j = 0; j < nc; j++)
+  for (int j = 0; j < nc; j++)
     {
       npp.elem (j, j) += 1.0;
       dpp.elem (j, j) += 1.0;
     }
 
   // Compute pade approximation = inverse (dpp) * npp.
 
   retval = dpp.solve (npp);
@@ -1419,17 +1424,20 @@ Matrix::expm (void) const
   retval = retval.transpose();
   d = d.transpose ();
   retval = retval * d;
   retval = d.solve (retval);
   retval = retval.transpose ();
 
   // Reverse preconditioning step 1: fix trace normalization.
 
-  return retval * exp (trshift);
+  if (trshift > 0.0)
+    retval = exp (trshift) * retval;
+
+  return retval;
 }
 
 Matrix&
 Matrix::operator += (const Matrix& a)
 {
   int nr = rows ();
   int nc = cols ();
 
diff --git a/readline/ChangeLog b/readline/ChangeLog
--- a/readline/ChangeLog
+++ b/readline/ChangeLog
@@ -1,8 +1,17 @@
+Sun Jan 25 02:19:15 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* aclocal.m4 (BASH_REINSTALL_SIGHANDLERS, BASH_FUNC_STRCOLL):
+	Provide defaults for cross compiling.
+
+Fri Jan 16 21:02:58 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* Makefile.in (install, uninstall): For Octave, do nothing.
+
 Tue Jan 13 14:59:56 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* readline.h (rl_dispatching): Add missing extern in declaration.
 
 Thu Jul 10 18:26:56 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* acconfig.h: Add #undefs for FIONREAD_IN_SYS_IOCTL,
 	HAVE_BSD_SIGNALS, HAVE_LSTAT, HAVE_POSIX_SIGNALS,
diff --git a/readline/Makefile.in b/readline/Makefile.in
--- a/readline/Makefile.in
+++ b/readline/Makefile.in
@@ -180,37 +180,41 @@ stamp-h: config.status $(srcdir)/config.
 	cd $(srcdir) && autoconf	## Comment-me-out in distribution
 
 documentation: force
 	-test -d doc || mkdir doc
 	-( cd doc && $(MAKE) $(MFLAGS) )
 
 force:
 
-install: installdirs libreadline.a
-	for f in ${INSTALLED_HEADERS}; do \
-		$(INSTALL_DATA) $(srcdir)/$$f $(includedir)/readline ; \
-	done
-	-$(MV) $(libdir)/libreadline.a $(libdir)/libreadline.old
-	$(INSTALL_DATA) libreadline.a $(libdir)/libreadline.a
-	-test -n "$(RANLIB)" && -$(RANLIB) -t $(libdir)/libreadline.a
-	-( if test -d doc ; then \
-		cd doc && \
-		${MAKE} ${MFLAGS} infodir=$(infodir) INSTALL_DATA=$(INSTALL_DATA) $@; \
-	  fi )
+install:
+
+#install: installdirs libreadline.a
+#	for f in ${INSTALLED_HEADERS}; do \
+#		$(INSTALL_DATA) $(srcdir)/$$f $(includedir)/readline ; \
+#	done
+#	-$(MV) $(libdir)/libreadline.a $(libdir)/libreadline.old
+#	$(INSTALL_DATA) libreadline.a $(libdir)/libreadline.a
+#	-test -n "$(RANLIB)" && -$(RANLIB) -t $(libdir)/libreadline.a
+#	-( if test -d doc ; then \
+#		cd doc && \
+#		${MAKE} ${MFLAGS} infodir=$(infodir) INSTALL_DATA=$(INSTALL_DATA) $@; \
+#	  fi )
 
 installdirs: $(srcdir)/support/mkdirs
 	-$(SHELL) $(srcdir)/support/mkdirs $(includedir) \
 		$(includedir)/readline $(libdir) $(infodir) $(man3dir)
 
 uninstall:
-	-test -n "$(includedir)" && cd $(includedir)/readline && \
-		${RM} ${INSTALLED_HEADERS}
-	-test -n "$(libdir)" && cd $(libdir) && \
-		${RM} libreadline.a libreadline.old $(SHARED_LIBS)
+
+#uninstall:
+#	-test -n "$(includedir)" && cd $(includedir)/readline && \
+#		${RM} ${INSTALLED_HEADERS}
+#	-test -n "$(libdir)" && cd $(libdir) && \
+#		${RM} libreadline.a libreadline.old $(SHARED_LIBS)
 
 TAGS:	force
 	$(ETAGS) $(CSOURCES) $(HSOURCES)
 
 tags:	force
 	$(CTAGS) $(CSOURCES) $(HSOURCES)
 
 clean:	force
diff --git a/readline/aclocal.m4 b/readline/aclocal.m4
--- a/readline/aclocal.m4
+++ b/readline/aclocal.m4
@@ -667,18 +667,26 @@ main()
 {
 	nsigint = 0;
 	set_signal_handler(SIGINT, sigint);
 	kill((int)getpid(), SIGINT);
 	kill((int)getpid(), SIGINT);
 	exit(nsigint != 2);
 }
 ], bash_cv_must_reinstall_sighandlers=no, bash_cv_must_reinstall_sighandlers=yes,
-AC_MSG_ERROR(cannot check signal handling if cross compiling))])
-AC_MSG_RESULT($bash_cv_must_reinstall_sighandlers)
+if test "$bash_cv_signal_vintage" = svr3; then
+  bash_cv_must_reinstall_sighandlers=yes
+else
+  bash_cv_must_reinstall_sighandlers=no
+fi)])
+if test "$cross_compiling" = yes; then
+  AC_MSG_RESULT([$bash_cv_must_reinstall_sighandlers assumed for cross compilation])
+else
+  AC_MSG_RESULT($bash_cv_must_reinstall_sighandlers)
+fi
 if test $bash_cv_must_reinstall_sighandlers = yes; then
 AC_DEFINE(MUST_REINSTALL_SIGHANDLERS)
 fi
 ])
 
 AC_DEFUN(BASH_FUNC_SBRK_DECLARED,
 [AC_MSG_CHECKING(for declaration of sbrk in <unistd.h>)
 AC_CACHE_VAL(bash_cv_sbrk_declared,
@@ -828,19 +836,23 @@ if (code)
 sigaddset(&set, SIGINT);
 sigprocmask(SIG_BLOCK, &set, (sigset_t *)NULL);
 
 /* and siglongjmp */
 siglongjmp(xx, 10);
 exit(1);
 #endif
 }],bash_cv_func_sigsetjmp=present, bash_cv_func_sigsetjmp=missing,
-   AC_MSG_ERROR(cannot check for sigsetjmp/siglongjmp if cross-compiling))
+   bash_cv_func_sigsetjmp=present)
 ])
-AC_MSG_RESULT($bash_cv_func_sigsetjmp)
+if test "$cross_compiling" = yes; then
+  AC_MSG_RESULT([$bash_cv_func_sigsetjmp=present assumed for cross compiling])
+else
+  AC_MSG_RESULT($bash_cv_func_sigsetjmp)
+fi
 if test $bash_cv_func_sigsetjmp = present; then
 AC_DEFINE(HAVE_POSIX_SIGSETJMP)
 fi
 ])
 
 AC_DEFUN(BASH_HAVE_TIOCGWINSZ,
 [AC_MSG_CHECKING(for TIOCGWINSZ in sys/ioctl.h)
 AC_CACHE_VAL(bash_cv_tiocgwinsz_in_ioctl,
@@ -1082,15 +1094,19 @@ char    *v[];
 	   same. */
 
         /* Exit with 1 (failure) if these two values are both > 0, since
 	   this tests whether strcoll(3) is broken with respect to strcmp(3)
 	   in the default locale. */
 	exit (r1 > 0 && r2 > 0);
 }
 ], bash_cv_func_strcoll_broken=yes, bash_cv_func_strcoll_broken=no,
-   AC_MSG_ERROR(cannot check strcoll if cross compiling))
+   bash_cv_func_strcoll_broken=no)
 ])
-AC_MSG_RESULT($bash_cv_func_strcoll_broken)
+if test "$cross_compiling" = yes; then
+  AC_MSG_RESULT([$bash_cv_func_strcoll_broken assumed for cross compiling])
+else
+  AC_MSG_RESULT($bash_cv_func_strcoll_broken)
+fi
 if test $bash_cv_func_strcoll_broken = yes; then
 AC_DEFINE(STRCOLL_BROKEN)
 fi
 ])
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,20 @@
+Thu Jan 22 13:45:26 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* dynamic-ld.cc (make_dynamic_loader): Fix typo.
+
+Tue Jan 20 17:02:19 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* variables.cc (Fexist): If local symbol is undefined, check
+	global table.
+
+	* pr-output.cc (pr_max_internal): Initial value for result is
+	-DBL_MAX, not DBL_MIN.
+
 Thu Jan  8 11:54:33 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* xpow.cc (elem_xpow): If second arg of pow is complex, make sure
 	first arg is also complex.
 
 	* symtab.cc (symbol_table::rename): Properly insert new item at
 	the front of the list to avoid losing the rest of the items.
 
diff --git a/src/dynamic-ld.cc b/src/dynamic-ld.cc
--- a/src/dynamic-ld.cc
+++ b/src/dynamic-ld.cc
@@ -205,17 +205,17 @@ octave_dynamic_loader::instance_ok (void
 }
 
 void
 octave_dynamic_loader::make_dynamic_loader (void)
 {
 #if defined (WITH_DL)
   instance = new octave_dlopen_dynamic_loader ();
 #elif defined (WITH_SHL)
-  instance = new octave_sh_load_dynamic_loader ();
+  instance = new octave_shl_load_dynamic_loader ();
 #else
   instance = new octave_dynamic_loader ();
 #endif
 }
 
 bool
 octave_dynamic_loader::load_fcn_from_dot_oct_file (const string& fcn_name)
 {
diff --git a/src/pr-output.cc b/src/pr-output.cc
--- a/src/pr-output.cc
+++ b/src/pr-output.cc
@@ -108,17 +108,17 @@ static bool print_big_e = false;
 // XXX FIXME XXX -- these should probably be somewhere else.
 
 static double
 pr_max_internal (const Matrix& m)
 {
   int nr = m.rows ();
   int nc = m.columns ();
 
-  double result = DBL_MIN;
+  double result = -DBL_MAX;
 
   for (int j = 0; j < nc; j++)
     for (int i = 0; i < nr; i++)
       {
 	double val = m (i, j);
 	if (xisinf (val) || xisnan (val))
 	  continue;
 
diff --git a/src/variables.cc b/src/variables.cc
--- a/src/variables.cc
+++ b/src/variables.cc
@@ -430,17 +430,17 @@ and stat instead.")
 
   if (pos != NPOS && pos > 0)
     {
       struct_elts = name.substr (pos+1);
       symbol_name = name.substr (0, pos);
     }
 
   symbol_record *sr = curr_sym_tab->lookup (symbol_name);
-  if (! sr)
+  if (! (sr && sr->is_defined ()))
     sr = global_sym_tab->lookup (symbol_name);
 
   retval = 0.0;
 
   if (sr && sr->is_variable () && sr->is_defined ())
     {
       if (struct_elts.empty () || sr->is_map_element (struct_elts))
 	retval = 1.0;
