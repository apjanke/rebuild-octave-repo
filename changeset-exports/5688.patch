# HG changeset patch
# User jwe
# Date 1142541389 0
#      Thu Mar 16 20:36:29 2006 +0000
# Node ID 6274256266d97e9c2206e6ccbd2a828d8e114efd
# Parent  a2902024bc4e2c2ff28d7a9f502e6567f302a5d4
[project @ 2006-03-16 20:36:28 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,12 @@
+2006-03-16  Bill Denney  <bill@givebillmoney.com>
+
+	* DLD-FUNCTIONS/time.cc: Improve @seealso entries in doc strings.
+
 2006-03-16  John W. Eaton  <jwe@octave.org>
 
 	* __gnuplot_raw__.l (F__gnuplot_show__): Temporarily use DEFCMD
 	instead of DEFUN.
 	(symbols_of___gnuplot_raw__): Temporarily ark __gnuplot_plot__,
 	__gnuplot_set__, __gnuplot_splot__, and __gnuplot_replot__ as raw
 	commands.
 
diff --git a/src/DLD-FUNCTIONS/time.cc b/src/DLD-FUNCTIONS/time.cc
--- a/src/DLD-FUNCTIONS/time.cc
+++ b/src/DLD-FUNCTIONS/time.cc
@@ -78,16 +78,17 @@ extract_tm (Octave_map &m)
 
 DEFUN_DLD (time, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {} time ()\n\
 Return the current time as the number of seconds since the epoch.  The\n\
 epoch is referenced to 00:00:00 CUT (Coordinated Universal Time) 1 Jan\n\
 1970.  For example, on Monday February 17, 1997 at 07:15:06 CUT, the\n\
 value returned by @code{time} was 856163706.\n\
+@seealso{strftime, strptime, localtime, gmtime, mktime, now, date, clock, datenum, datestr, datevec, calendar, weekday}\n\
 @end deftypefn")
 {
   octave_value retval;
 
   if (args.length () == 0)
     retval = static_cast<double> (octave_time ());
   else
     print_usage ("time");
@@ -114,16 +115,17 @@ gmtime (time ())\n\
            min = 15\n\
            wday = 1\n\
            hour = 7\n\
            isdst = 0\n\
            yday = 47\n\
          @}\n\
 @end group\n\
 @end example\n\
+@seealso{strftime, strptime, localtime, mktime, time, now, date, clock, datenum, datestr, datevec, calendar, weekday}\n\
 @end deftypefn")
 {
   octave_value retval;
 
   if (args.length () == 1)
     {
       double tmp = args(0).double_value ();
 
@@ -155,16 +157,17 @@ localtime (time ())\n\
            min = 15\n\
            wday = 1\n\
            hour = 1\n\
            isdst = 0\n\
            yday = 47\n\
          @}\n\
 @end group\n\
 @end example\n\
+@seealso{strftime, strptime, gmtime, mktime, time, now, date, clock, datenum, datestr, datevec, calendar, weekday}\n\
 @end deftypefn")
 {
   octave_value retval;
 
   if (args.length () == 1)
     {
       double tmp = args(0).double_value ();
 
@@ -184,16 +187,17 @@ Convert a time structure corresponding t
 of seconds since the epoch.  For example,\n\
 \n\
 @example\n\
 @group\n\
 mktime (localtime (time ())\n\
      @result{} 856163706\n\
 @end group\n\
 @end example\n\
+@seealso{strftime, strptime, localtime, gmtime, time, now, date, clock, datenum, datestr, datevec, calendar, weekday}\n\
 @end deftypefn")
 {
   octave_value retval;
 
   if (args.length () == 1)
     {
       Octave_map map = args(0).map_value ();
 
@@ -360,17 +364,17 @@ Week number of year with Monday as first
 Locale's date representation (mm/dd/yy).\n\
 \n\
 @item %y\n\
 Last two digits of year (00-99).\n\
 \n\
 @item %Y\n\
 Year (1970-).\n\
 @end table\n\
-@seealso{strptime, localtime, time}\n\
+@seealso{strptime, localtime, gmtime, mktime, time, now, date, clock, datenum, datestr, datevec, calendar, weekday}\n\
 @end deftypefn")
 {
   octave_value retval;
 
   if (args.length () == 2)
     {
       std::string fmt = args(0).string_value ();
 
@@ -403,17 +407,17 @@ DEFUN_DLD (strptime, args, ,
  "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {[@var{tm_struct}, @var{nchars}] =} strptime (@var{str}, @var{fmt})\n\
 Convert the string @var{str} to the time structure @var{tm_struct} under\n\
 the control of the format string @var{fmt}.\n\
 \n\
 If @var{fmt} fails to match, @var{nchars} is 0; otherwise it is set to the\n\
 position of last matched character plus 1. Always check for this unless\n\
 you're absolutely sure the date string will be parsed correctly.\n\
-@seealso{strftime, localtime, time}\n\
+@seealso{strftime, localtime, gmtime, mktime, time, now, date, clock, datenum, datestr, datevec, calendar, weekday}\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
   if (args.length () == 2)
     {
       std::string str = args(0).string_value ();
 
