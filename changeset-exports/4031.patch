# HG changeset patch
# User jwe
# Date 1028953372 0
#      Sat Aug 10 04:22:52 2002 +0000
# Node ID 2168f4a0e88d761c6253815573dc1a8d0a3c6fcc
# Parent  22bd65326ec1a0082e329fe4e879255c6f24dd9d
[project @ 2002-08-10 04:22:52 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,30 @@
+2002-08-09  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* configure.in (AC_CONFIG_FILES): Add deprecated/Makefile to the
+	list.
+	* deprecated/Makefile.in: New file.
+
+2002-08-09  Paul Kienzle <pkienzle@users.sf.net>
+
+	* statistics/distributions/beta_cdf.m: Replace betai with betainc.
+	* statistics/distributions/binomial_cdf.m: Likewise.
+	* statistics/distributions/f_cdf.m: Likewise.
+	* statistics/distributions/t_cdf.m: Likewise.
+
+	* miscellaneous/bincoeff.m: Replace lgamma with gammaln.
+	* specfun/beta.m: Likewise.
+	* special-matrix/invhilb.m: Likewise (but it is only in a comment).
+	* statistics/distributions/gamma_pdf.m: Likewise.
+	* statistics/distributions/poisson_pdf.m: Likewise.
+
+	* statistics/distributions/gamma_cdf.m: replace gammai with gammainc
+	* statistics/distributions/poisson_cdf.m: Likewise.
+
 2002-08-09  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* deprecated/is_bool.m: New file.
 	* deprecated/is_complex.m: New file.
 	* deprecated/is_global.m: New file.
 	* deprecated/is_list.m: New file.
 	* deprecated/is_matrix.m: New file.
 	* deprecated/is_scalar.m: New file.
diff --git a/scripts/configure.in b/scripts/configure.in
--- a/scripts/configure.in
+++ b/scripts/configure.in
@@ -22,19 +22,20 @@ dnl Copyright (C) 1996, 1997 John W. Eat
 
 AC_INIT
 AC_REVISION()
 AC_PREREQ(2.52)
 AC_CONFIG_SRCDIR([startup/octaverc])
 
 AC_PROG_INSTALL
 
-AC_CONFIG_FILES([Makefile audio/Makefile control/Makefile control/base/Makefile \
-	  control/hinf/Makefile control/obsolete/Makefile \
-	  control/system/Makefile control/util/Makefile elfun/Makefile \
+AC_CONFIG_FILES([Makefile audio/Makefile control/Makefile \
+	  control/base/Makefile control/hinf/Makefile \
+	  control/obsolete/Makefile control/system/Makefile \
+	  control/util/Makefile deprecated/Makefile elfun/Makefile \
 	  finance/Makefile general/Makefile image/Makefile io/Makefile \
 	  linear-algebra/Makefile miscellaneous/Makefile plot/Makefile \
 	  polynomial/Makefile quaternion/Makefile set/Makefile \
 	  signal/Makefile specfun/Makefile special-matrix/Makefile \
 	  startup/Makefile statistics/Makefile statistics/base/Makefile \
 	  statistics/distributions/Makefile statistics/models/Makefile \
 	  statistics/tests/Makefile strings/Makefile time/Makefile])
 AC_OUTPUT
diff --git a/scripts/deprecated/Makefile.in b/scripts/deprecated/Makefile.in
new file mode 100644
--- /dev/null
+++ b/scripts/deprecated/Makefile.in
@@ -0,0 +1,75 @@
+#
+# Makefile for octave's scripts/deprecated directory
+#
+# John W. Eaton
+# jwe@bevo.che.wisc.edu
+# University of Wisconsin-Madison
+# Department of Chemical Engineering
+
+TOPDIR = ../..
+
+script_sub_dir = deprecated
+
+srcdir = @srcdir@
+top_srcdir = @top_srcdir@
+VPATH = @srcdir@
+
+include $(TOPDIR)/Makeconf
+
+INSTALL = @INSTALL@
+INSTALL_PROGRAM = @INSTALL_PROGRAM@
+INSTALL_DATA = @INSTALL_DATA@
+
+SOURCES = *.m
+
+DISTFILES = Makefile.in $(SOURCES)
+
+FCN_FILES = $(wildcard $(srcdir)/*.m)
+FCN_FILES_NO_DIR = $(notdir $(FCN_FILES))
+
+BINDISTFILES = $(FCN_FILES)
+
+all:
+.PHONY: all
+
+install install-strip:
+	$(top_srcdir)/mkinstalldirs $(fcnfiledir)/$(script_sub_dir)
+	for f in $(FCN_FILES_NO_DIR); do \
+	  rm -f $(fcnfiledir)/$(script_sub_dir)/$$f; \
+	  $(INSTALL_DATA) $(srcdir)/$$f $(fcnfiledir)/$(script_sub_dir)/$$f; \
+	done
+.PHONY: install install-strip
+
+uninstall:
+	for f in $(FCN_FILES_NO_DIR); \
+	  do rm -f $(fcnfiledir)/$(script_sub_dir)/$$f; \
+	done
+.PHONY: uninstall
+
+clean:
+.PHONY: clean
+
+tags: $(SOURCES)
+	ctags $(SOURCES)
+
+TAGS: $(SOURCES)
+	etags $(SOURCES)
+
+mostlyclean: clean
+.PHONY: mostlyclean
+
+distclean: clean
+	rm -f Makefile
+.PHONY: distclean
+
+maintainer-clean: distclean
+	rm -f tags TAGS
+.PHONY: maintainer-clean
+
+dist:
+	ln $(DISTFILES) ../../`cat ../../.fname`/scripts/deprecated
+.PHONY: dist
+
+bin-dist:
+	ln $(BINDISTFILES) ../../`cat ../../.fname`/scripts/deprecated
+.PHONY: bin-dist
diff --git a/scripts/deprecated/is_bool.m b/scripts/deprecated/is_bool.m
new file mode 100644
--- /dev/null
+++ b/scripts/deprecated/is_bool.m
@@ -0,0 +1,31 @@
+## Copyright (C) 2002 John W. Eaton
+##
+## This file is part of Octave.
+##
+## Octave is free software; you can redistribute it and/or modify it
+## under the terms of the GNU General Public License as published by
+## the Free Software Foundation; either version 2, or (at your option)
+## any later version.
+##
+## Octave is distributed in the hope that it will be useful, but
+## WITHOUT ANY WARRANTY; without even the implied warranty of
+## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+## General Public License for more details.
+##
+## You should have received a copy of the GNU General Public License
+## along with Octave; see the file COPYING.  If not, write to the Free
+## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
+## 02111-1307, USA.
+
+## -*- texinfo -*-
+## @deftypefn {Function File} {} is_bool (@var{a})
+## This function has been deprecated.  Use isbool instead.
+## @end deftypefn
+
+## Author: jwe
+
+function retval = is_bool (varargin)
+
+  retval = isbool (varargin{:});
+
+endfunction
diff --git a/scripts/deprecated/is_complex.m b/scripts/deprecated/is_complex.m
new file mode 100644
--- /dev/null
+++ b/scripts/deprecated/is_complex.m
@@ -0,0 +1,31 @@
+## Copyright (C) 2002 John W. Eaton
+##
+## This file is part of Octave.
+##
+## Octave is free software; you can redistribute it and/or modify it
+## under the terms of the GNU General Public License as published by
+## the Free Software Foundation; either version 2, or (at your option)
+## any later version.
+##
+## Octave is distributed in the hope that it will be useful, but
+## WITHOUT ANY WARRANTY; without even the implied warranty of
+## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+## General Public License for more details.
+##
+## You should have received a copy of the GNU General Public License
+## along with Octave; see the file COPYING.  If not, write to the Free
+## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
+## 02111-1307, USA.
+
+## -*- texinfo -*-
+## @deftypefn {Function File} {} is_complex (@var{a})
+## This function has been deprecated.  Use iscomplex instead.
+## @end deftypefn
+
+## Author: jwe
+
+function retval = is_complex (varargin)
+
+  retval = iscomplex (varargin{:});
+
+endfunction
diff --git a/scripts/deprecated/is_global.m b/scripts/deprecated/is_global.m
new file mode 100644
--- /dev/null
+++ b/scripts/deprecated/is_global.m
@@ -0,0 +1,31 @@
+## Copyright (C) 2002 John W. Eaton
+##
+## This file is part of Octave.
+##
+## Octave is free software; you can redistribute it and/or modify it
+## under the terms of the GNU General Public License as published by
+## the Free Software Foundation; either version 2, or (at your option)
+## any later version.
+##
+## Octave is distributed in the hope that it will be useful, but
+## WITHOUT ANY WARRANTY; without even the implied warranty of
+## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+## General Public License for more details.
+##
+## You should have received a copy of the GNU General Public License
+## along with Octave; see the file COPYING.  If not, write to the Free
+## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
+## 02111-1307, USA.
+
+## -*- texinfo -*-
+## @deftypefn {Function File} {} is_global (@var{a})
+## This function has been deprecated.  Use isglobal instead.
+## @end deftypefn
+
+## Author: jwe
+
+function retval = is_global (varargin)
+
+  retval = isglobal (varargin{:});
+
+endfunction
diff --git a/scripts/deprecated/is_list.m b/scripts/deprecated/is_list.m
new file mode 100644
--- /dev/null
+++ b/scripts/deprecated/is_list.m
@@ -0,0 +1,31 @@
+## Copyright (C) 2002 John W. Eaton
+##
+## This file is part of Octave.
+##
+## Octave is free software; you can redistribute it and/or modify it
+## under the terms of the GNU General Public License as published by
+## the Free Software Foundation; either version 2, or (at your option)
+## any later version.
+##
+## Octave is distributed in the hope that it will be useful, but
+## WITHOUT ANY WARRANTY; without even the implied warranty of
+## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+## General Public License for more details.
+##
+## You should have received a copy of the GNU General Public License
+## along with Octave; see the file COPYING.  If not, write to the Free
+## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
+## 02111-1307, USA.
+
+## -*- texinfo -*-
+## @deftypefn {Function File} {} is_list (@var{a})
+## This function has been deprecated.  Use islist instead.
+## @end deftypefn
+
+## Author: jwe
+
+function retval = is_list (varargin)
+
+  retval = islist (varargin{:});
+
+endfunction
diff --git a/scripts/deprecated/is_matrix.m b/scripts/deprecated/is_matrix.m
new file mode 100644
--- /dev/null
+++ b/scripts/deprecated/is_matrix.m
@@ -0,0 +1,31 @@
+## Copyright (C) 2002 John W. Eaton
+##
+## This file is part of Octave.
+##
+## Octave is free software; you can redistribute it and/or modify it
+## under the terms of the GNU General Public License as published by
+## the Free Software Foundation; either version 2, or (at your option)
+## any later version.
+##
+## Octave is distributed in the hope that it will be useful, but
+## WITHOUT ANY WARRANTY; without even the implied warranty of
+## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+## General Public License for more details.
+##
+## You should have received a copy of the GNU General Public License
+## along with Octave; see the file COPYING.  If not, write to the Free
+## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
+## 02111-1307, USA.
+
+## -*- texinfo -*-
+## @deftypefn {Function File} {} is_matrix (@var{a})
+## This function has been deprecated.  Use ismatrix instead.
+## @end deftypefn
+
+## Author: jwe
+
+function retval = is_matrix (varargin)
+
+  retval = ismatrix (varargin{:});
+
+endfunction
diff --git a/scripts/deprecated/is_stream.m b/scripts/deprecated/is_stream.m
new file mode 100644
--- /dev/null
+++ b/scripts/deprecated/is_stream.m
@@ -0,0 +1,31 @@
+## Copyright (C) 2002 John W. Eaton
+##
+## This file is part of Octave.
+##
+## Octave is free software; you can redistribute it and/or modify it
+## under the terms of the GNU General Public License as published by
+## the Free Software Foundation; either version 2, or (at your option)
+## any later version.
+##
+## Octave is distributed in the hope that it will be useful, but
+## WITHOUT ANY WARRANTY; without even the implied warranty of
+## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+## General Public License for more details.
+##
+## You should have received a copy of the GNU General Public License
+## along with Octave; see the file COPYING.  If not, write to the Free
+## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
+## 02111-1307, USA.
+
+## -*- texinfo -*-
+## @deftypefn {Function File} {} is_stream (@var{a})
+## This function has been deprecated.  Use isstream instead.
+## @end deftypefn
+
+## Author: jwe
+
+function retval = is_stream (varargin)
+
+  retval = isstream(varargin{:});
+
+endfunction
diff --git a/scripts/deprecated/is_struct.m b/scripts/deprecated/is_struct.m
new file mode 100644
--- /dev/null
+++ b/scripts/deprecated/is_struct.m
@@ -0,0 +1,31 @@
+## Copyright (C) 2002 John W. Eaton
+##
+## This file is part of Octave.
+##
+## Octave is free software; you can redistribute it and/or modify it
+## under the terms of the GNU General Public License as published by
+## the Free Software Foundation; either version 2, or (at your option)
+## any later version.
+##
+## Octave is distributed in the hope that it will be useful, but
+## WITHOUT ANY WARRANTY; without even the implied warranty of
+## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+## General Public License for more details.
+##
+## You should have received a copy of the GNU General Public License
+## along with Octave; see the file COPYING.  If not, write to the Free
+## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
+## 02111-1307, USA.
+
+## -*- texinfo -*-
+## @deftypefn {Function File} {} is_struct (@var{a})
+## This function has been deprecated.  Use isstruct instead.
+## @end deftypefn
+
+## Author: jwe
+
+function retval = is_struct (varargin)
+
+  retval = isstruct (varargin{:});
+
+endfunction
diff --git a/scripts/miscellaneous/bincoeff.m b/scripts/miscellaneous/bincoeff.m
--- a/scripts/miscellaneous/bincoeff.m
+++ b/scripts/miscellaneous/bincoeff.m
@@ -78,24 +78,24 @@ function b = bincoeff (n, k)
 
   ind = find (k == 0);
   if (any (ind))
     b(ind) = ones (length (ind), 1);
   endif
 
   ind = find ((k > 0) & ((n == real (round (n))) & (n < 0)));
   if any (ind)
-    b(ind) = (-1) .^ k(ind) .* exp (lgamma (abs (n(ind)) + k(ind)) ...
-        - lgamma (k(ind) + 1) - lgamma (abs (n(ind))));
+    b(ind) = (-1) .^ k(ind) .* exp (gammaln (abs (n(ind)) + k(ind)) ...
+        - gammaln (k(ind) + 1) - gammaln (abs (n(ind))));
   endif
 
   ind = find ((k > 0) & ((n != real (round (n))) | (n >= k)));
   if (length (ind) > 0)
-    b(ind) = exp (lgamma (n(ind) + 1) - lgamma (k(ind) + 1) ...
-        - lgamma (n(ind) - k(ind) + 1));
+    b(ind) = exp (gammaln (n(ind) + 1) - gammaln (k(ind) + 1) ...
+        - gammaln (n(ind) - k(ind) + 1));
   endif
 
   ## clean up rounding errors
   ind = find (n == round (n));
   if (any (ind))
     b(ind) = round (b(ind));
   endif
 
diff --git a/scripts/specfun/beta.m b/scripts/specfun/beta.m
--- a/scripts/specfun/beta.m
+++ b/scripts/specfun/beta.m
@@ -40,11 +40,11 @@
 ## Adapted-By: jwe
 
 function retval = beta (a, b)
 
   if (nargin != 2)
     usage ("beta (a, b)");
   endif
 
-  retval = exp (lgamma (a) + lgamma (b) - lgamma (a+b));
+  retval = exp (gammaln (a) + gammaln (b) - gammaln (a+b));
 
 endfunction
diff --git a/scripts/special-matrix/invhilb.m b/scripts/special-matrix/invhilb.m
--- a/scripts/special-matrix/invhilb.m
+++ b/scripts/special-matrix/invhilb.m
@@ -80,17 +80,17 @@ function retval = invhilb (n)
     ## p(k) is evaluated for k=1:n which involves O(n) calls to bincoeff 
     ## instead of O(n^2).
     ##
     ## We evaluate the expression as (-1)^(i+j)*(p(i)*p(j))/(i+j-1) except
     ## when p(i)*p(j) would overflow.  In cases where p(i)*p(j) is an exact
     ## machine number, the result is also exact.  Otherwise we calculate
     ## (-1)^(i+j)*p(i)*(p(j)/(i+j-1)).
     ##
-    ## The Octave bincoeff routine uses transcendental functions (lgamma
+    ## The Octave bincoeff routine uses transcendental functions (gammaln
     ## and exp) rather than multiplications, for the sake of speed.  
     ## However, it rounds the answer to the nearest integer, which 
     ## justifies the claim about exactness made above.
 
     retval = zeros (n); 
     k = [1:n]; 
     p = k .* bincoeff (k+n-1, k-1) .* bincoeff (n, k);
     p(2:2:n) = -p(2:2:n);
diff --git a/scripts/statistics/distributions/beta_cdf.m b/scripts/statistics/distributions/beta_cdf.m
--- a/scripts/statistics/distributions/beta_cdf.m
+++ b/scripts/statistics/distributions/beta_cdf.m
@@ -52,14 +52,14 @@ function cdf = beta_cdf (x, a, b)
 
   k = find ((x >= 1) & (a > 0) & (b > 0));
   if (any (k))
     cdf (k) = ones (length (k), 1);
   endif
 
   k = find ((x > 0) & (x < 1) & (a > 0) & (b > 0));
   if (any (k))
-    cdf (k) = betai (a(k), b(k), x(k));
+    cdf (k) = betainc (x(k), a(k), b(k));
   endif
 
   cdf = reshape (cdf, r, c);
 
 endfunction
diff --git a/scripts/statistics/distributions/binomial_cdf.m b/scripts/statistics/distributions/binomial_cdf.m
--- a/scripts/statistics/distributions/binomial_cdf.m
+++ b/scripts/statistics/distributions/binomial_cdf.m
@@ -55,14 +55,14 @@ function cdf = binomial_cdf (x, n, p)
   if (any (k))
     cdf(k) = ones (1, length (k));
   endif
 
   k = find ((x >= 0) & (x < n) & (n == round (n))
 	    & (p >= 0) & (p <= 1));
   if (any (k))
     tmp = floor (x(k));
-    cdf(k) = 1 - betai (tmp + 1, n(k) - tmp, p(k));
+    cdf(k) = 1 - betainc (p(k), tmp + 1, n(k) - tmp);
   endif
 
   cdf = reshape (cdf, r, c);
 
 endfunction
diff --git a/scripts/statistics/distributions/f_cdf.m b/scripts/statistics/distributions/f_cdf.m
--- a/scripts/statistics/distributions/f_cdf.m
+++ b/scripts/statistics/distributions/f_cdf.m
@@ -52,14 +52,14 @@ function cdf = f_cdf (x, m, n)
 
   k = find ((x == Inf) & (m > 0) & (n > 0));
   if (any (k))
     cdf(k) = ones (1, length (k));
   endif
 
   k = find ((x > 0) & (x < Inf) & (m > 0) & (n > 0));
   if (any (k))
-    cdf(k) = 1 - betai (n(k) / 2, m(k) / 2, 1 ./ (1 + m(k) .* x(k) ./ n(k)));
+    cdf(k) = 1 - betainc (1 ./ (1 + m(k) .* x(k) ./ n(k)), n(k) / 2, m(k) / 2);
   endif
 
   cdf = reshape (cdf, r, c);
 
 endfunction
diff --git a/scripts/statistics/distributions/gamma_cdf.m b/scripts/statistics/distributions/gamma_cdf.m
--- a/scripts/statistics/distributions/gamma_cdf.m
+++ b/scripts/statistics/distributions/gamma_cdf.m
@@ -47,14 +47,14 @@ function cdf = gamma_cdf (x, a, b)
 
   k = find (!(a > 0) | !(b > 0) | isnan (x));
   if (any (k))
     cdf (k) = NaN * ones (length (k), 1);
   endif
 
   k = find ((x > 0) & (a > 0) & (b > 0));
   if (any (k))
-    cdf (k) = gammai (a(k), b(k) .* x(k));
+    cdf (k) = gammainc (b(k) .* x(k), a(k));
   endif
 
   cdf = reshape (cdf, r, c);
 
 endfunction
diff --git a/scripts/statistics/distributions/gamma_pdf.m b/scripts/statistics/distributions/gamma_pdf.m
--- a/scripts/statistics/distributions/gamma_pdf.m
+++ b/scripts/statistics/distributions/gamma_pdf.m
@@ -54,14 +54,14 @@ function pdf = gamma_pdf (x, a, b)
   if (any (k))
     pdf(k) = ((b(k) .^ a(k)) .* (x(k) .^ (a(k) - 1))
 	      .* exp(-b(k) .* x(k)) ./ gamma (a(k)));
   endif
 
   k = find ((x > 0) & (a > 1) & (b > 0));
   if (any (k))
     pdf(k) = exp (a(k) .* log (b(k)) + (a(k)-1) .* log (x(k))
-		  - b(k) .* x(k) - lgamma (a(k)));
+		  - b(k) .* x(k) - gammaln (a(k)));
   endif
 
   pdf = reshape (pdf, r, c);
 
 endfunction
diff --git a/scripts/statistics/distributions/poisson_cdf.m b/scripts/statistics/distributions/poisson_cdf.m
--- a/scripts/statistics/distributions/poisson_cdf.m
+++ b/scripts/statistics/distributions/poisson_cdf.m
@@ -51,14 +51,14 @@ function cdf = poisson_cdf (x, l)
 
   k = find ((x == Inf) & (l > 0));
   if (any (k))
     cdf(k) = ones (1, length (k));
   endif
 
   k = find ((x >= 0) & (x < Inf) & (l > 0));
   if (any (k))
-    cdf(k) = 1 - gammai (floor (x(k)) + 1, l(k));
+    cdf(k) = 1 - gammainc (l(k), floor (x(k)) + 1);
   endif
 
   cdf = reshape (cdf, r, c);
 
 endfunction
diff --git a/scripts/statistics/distributions/poisson_pdf.m b/scripts/statistics/distributions/poisson_pdf.m
--- a/scripts/statistics/distributions/poisson_pdf.m
+++ b/scripts/statistics/distributions/poisson_pdf.m
@@ -45,14 +45,14 @@ function pdf = poisson_pdf (x, l)
 
   k = find (!(l > 0) | isnan (x));
   if (any (k))
     pdf(k) = NaN * ones (1, length (k));
   endif
 
   k = find ((x >= 0) & (x < Inf) & (x == round (x)) & (l > 0));
   if (any (k))
-    pdf(k) = exp (x(k) .* log (l(k)) - l(k) - lgamma (x(k) + 1));
+    pdf(k) = exp (x(k) .* log (l(k)) - l(k) - gammaln (x(k) + 1));
   endif
 
   pdf = reshape (pdf, r, c);
 
 endfunction
diff --git a/scripts/statistics/distributions/t_cdf.m b/scripts/statistics/distributions/t_cdf.m
--- a/scripts/statistics/distributions/t_cdf.m
+++ b/scripts/statistics/distributions/t_cdf.m
@@ -51,17 +51,17 @@ function cdf = t_cdf (x, n)
 
   k = find ((x == Inf) & (n > 0));
   if (any (k))
     cdf(k) = ones (1, length (k));
   endif
 
   k = find ((x > -Inf) & (x < Inf) & (n > 0));
   if (any (k))
-    cdf(k) = betai (n(k) / 2, 1 / 2, 1 ./ (1 + x(k) .^ 2 ./ n(k))) / 2;
+    cdf(k) = betainc (1 ./ (1 + x(k) .^ 2 ./ n(k)), n(k) / 2, 1 / 2) / 2;
     ind = find (x(k) > 0);
     if (any (ind))
       cdf(k(ind)) = 1 - cdf(k(ind));
     endif
   endif
 
   cdf = reshape (cdf, r, c);
 
