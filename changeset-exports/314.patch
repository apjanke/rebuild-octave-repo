# HG changeset patch
# User jwe
# Date 759539957 0
#      Tue Jan 25 23:19:17 1994 +0000
# Node ID 1738f4390384b38e886e320a1e2826e8c109f6cf
# Parent  9465b39f764a2fb3a3b045961b07fe6d83ec2f50
[project @ 1994-01-25 23:19:17 by jwe]

diff --git a/liboctave/Matrix.cc b/liboctave/Matrix.cc
--- a/liboctave/Matrix.cc
+++ b/liboctave/Matrix.cc
@@ -1,12 +1,12 @@
 // Matrix manipulations.                              -*- C++ -*-
 /*
 
-Copyright (C) 1992, 1993 John W. Eaton
+Copyright (C) 1992, 1993, 1994 John W. Eaton
 
 This file is part of Octave.
 
 Octave is free software; you can redistribute it and/or modify it
 under the terms of the GNU General Public License as published by the
 Free Software Foundation; either version 2, or (at your option) any
 later version.
 
@@ -180,17 +180,18 @@ extern "C"
 #undef KLUDGE_DIAG_MATRICES
 #undef TYPE
 #undef KL_DMAT_TYPE
 
 /*
  * Matrix class.
  */
 
-Matrix::Matrix (const DiagMatrix& a) : Array2<double> (a.rows (), a.cols ())
+Matrix::Matrix (const DiagMatrix& a)
+  : Array2<double> (a.rows (), a.cols (), 0.0)
 {
   for (int i = 0; i < a.length (); i++)
     elem (i, i) = a.elem (i, i);
 }
 
 #if 0
 Matrix&
 Matrix::resize (int r, int c)
@@ -2313,24 +2314,24 @@ ComplexMatrix::ComplexMatrix (const Matr
   : Array2<Complex> (a.rows (), a.cols ())
 {
   for (int j = 0; j < cols (); j++)
     for (int i = 0; i < rows (); i++)
       elem (i, j) = a.elem (i, j);
 }
 
 ComplexMatrix::ComplexMatrix (const DiagMatrix& a)
-  : Array2<Complex> (a.rows (), a.cols ())
+  : Array2<Complex> (a.rows (), a.cols (), 0.0)
 {
   for (int i = 0; i < a.length (); i++)
     elem (i, i) = a.elem (i, i);
 }
 
 ComplexMatrix::ComplexMatrix (const ComplexDiagMatrix& a)
-  : Array2<Complex> (a.rows (), a.cols ())
+  : Array2<Complex> (a.rows (), a.cols (), 0.0)
 {
   for (int i = 0; i < a.length (); i++)
     elem (i, i) = a.elem (i, i);
 }
 
 #if 0
 ComplexMatrix&
 ComplexMatrix::resize (int r, int c)
