# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1246616472 -7200
#      Fri Jul 03 12:21:12 2009 +0200
# Node ID 5d46c4a894e81548889d677381c80db0a56d01f3
# Parent  2cc47338e4276a24ff71725f56e49371affab17a
fix bugs in sparse reductions

diff --git a/liboctave/CSparse.cc b/liboctave/CSparse.cc
--- a/liboctave/CSparse.cc
+++ b/liboctave/CSparse.cc
@@ -7368,17 +7368,17 @@ SparseComplexMatrix::cumsum (int dim) co
 SparseComplexMatrix
 SparseComplexMatrix::prod (int dim) const
 {
   if ((rows() == 1 && dim == -1) || dim == 1)
     return transpose (). prod (0). transpose();
   else
     {
       SPARSE_REDUCTION_OP (SparseComplexMatrix, Complex, *=, 
-			   (cidx(j+1) - cidx(j) < nc ? 0.0 : 1.0), 1.0);
+			   (cidx(j+1) - cidx(j) < nr ? 0.0 : 1.0), 1.0);
     }
 }
 
 SparseComplexMatrix
 SparseComplexMatrix::sum (int dim) const
 {
   SPARSE_REDUCTION_OP (SparseComplexMatrix, Complex, +=, 0.0, 0.0);
 }
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,14 @@
+2009-07-03  Jaroslav Hajek  <highegg@gmail.com>
+
+	* Sparse-op-defs.h (SPARSE_ALL_OP): Fix typo.
+	* dSparse.cc (SparseMatrix::prod): Ditto.
+	* CSparse.cc (ComplexSparseMatrix::prod): Ditto.
+
 2009-07-02  Jaroslav Hajek  <highegg@gmail.com>
 
 	* Sparse-diag-op-defs.h (inner_do_add_sm_dm): Rewrite to ensure
 	ordering of row indices.
 
 2009-06-30  Jaroslav Hajek  <highegg@gmail.com>
 
 	* oct-sort.cc (octave_sort<T>::lookupb<Comp>): Fix typo.
diff --git a/liboctave/Sparse-op-defs.h b/liboctave/Sparse-op-defs.h
--- a/liboctave/Sparse-op-defs.h
+++ b/liboctave/Sparse-op-defs.h
@@ -1823,17 +1823,17 @@ along with Octave; see the file COPYING.
 			SPARSE_ANY_ALL_OP_COL_CODE (TEST_OP, TEST_TRUE_VAL), \
 			INIT_VAL, MT_RESULT)
 
 #define SPARSE_ALL_OP(DIM) \
   if ((rows() == 1 && dim == -1) || dim == 1) \
     return transpose (). all (0). transpose(); \
   else \
     { \
-      SPARSE_ANY_ALL_OP (DIM, (cidx(j+1) - cidx(j) < nc ? false : true), \
+      SPARSE_ANY_ALL_OP (DIM, (cidx(j+1) - cidx(j) < nr ? false : true), \
 			 true, ==, false); \
     }
 
 #define SPARSE_ANY_OP(DIM) SPARSE_ANY_ALL_OP (DIM, false, false, !=, true)
 
 #define SPARSE_SPARSE_MUL( RET_TYPE, RET_EL_TYPE, EL_TYPE ) \
   octave_idx_type nr = m.rows (); \
   octave_idx_type nc = m.cols (); \
diff --git a/liboctave/dSparse.cc b/liboctave/dSparse.cc
--- a/liboctave/dSparse.cc
+++ b/liboctave/dSparse.cc
@@ -7478,17 +7478,17 @@ SparseMatrix::cumsum (int dim) const
 SparseMatrix
 SparseMatrix::prod (int dim) const
 {
   if ((rows() == 1 && dim == -1) || dim == 1)
     return transpose (). prod (0). transpose();
   else
     {
       SPARSE_REDUCTION_OP (SparseMatrix, double, *=, 
-			   (cidx(j+1) - cidx(j) < nc ? 0.0 : 1.0), 1.0);
+			   (cidx(j+1) - cidx(j) < nr ? 0.0 : 1.0), 1.0);
     }
 }
 
 SparseMatrix
 SparseMatrix::sum (int dim) const
 {
   SPARSE_REDUCTION_OP (SparseMatrix, double, +=, 0.0, 0.0);
 }
