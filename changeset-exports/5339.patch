# HG changeset patch
# User jwe
# Date 1115319986 0
#      Thu May 05 19:06:26 2005 +0000
# Node ID 4266ef7972b27ff7d502d3225fd6f378ad94bc87
# Parent  c4b55d47122e9591160dc1d711a06150640a2086
[project @ 2005-05-05 19:06:25 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2005-05-05  Keith Goodman  <kwgoodman@gmail.com>
+
+	* ov-usr-fcn.cc	(Fnargout, Fnargin): Update doc strings.
+	* help.cc (keywords): Update doc strings for varargin, varargout.
+
 2005-05-05  John W. Eaton  <jwe@octave.org>
 
 	* oct-stream.cc (BEGIN_S_CONVERSION): Correctly handle width
 	specifiers.
 
 2005-05-04  John W. Eaton  <jwe@octave.org>
 
 	* ls-mat5.cc (read_mat5_binary_element): Implement reading of N-d
diff --git a/src/help.cc b/src/help.cc
--- a/src/help.cc
+++ b/src/help.cc
@@ -132,26 +132,28 @@ ambiguous", },
 
   { "**",
     "Power operator.  See also `^', `.**', and `.^'", },
 
   { "+",
     "Addition operator.", },
 
   { "++",
-    "Increment operator.  As in C, may be applied as a prefix or postfix operator.", },
+    "Increment operator.  As in C, may be applied as a prefix or postfix\n\
+operator.", },
 
   { ",",
     "Array index, function argument, or command separator.", },
 
   { "-",
     "Subtraction or unary negation operator.", },
 
   { "--",
-    "Decrement operator.  As in C, may be applied as a prefix or postfix operator.", },
+    "Decrement operator.  As in C, may be applied as a prefix or postfix\n\
+operator.", },
 
   { ".'",
     "Matrix transpose operator.  For complex matrices, computes the\n\
 transpose, *not* the complex conjugate transpose.  See also `''.", },
 
   { ".*",
     "Element by element multiplication operator.  See also `*'.", },
 
@@ -318,20 +320,22 @@ body of the loop is executed at least on
 
   { "unwind_protect",
     "Begin an unwind_protect block.", }, 
 
   { "unwind_protect_cleanup",
     "Begin the cleanup section of an unwind_protect block.", }, 
 
   { "varargin",
-    "Pass an arbitrary number of arguments into a function.",},
+    "Pass an arbitrary number of arguments into a function.  See also\n\
+varargout, nargin, and nargout.",},
 
   { "varargout",
-    "Pass an arbitrary number of arguments out of a function.",},
+    "Pass an arbitrary number of arguments out of a function.  See also\n\
+varargin, nargin, and nargout.",},
 
   { "while",
     "Begin a while loop.", },
 
   { 0, 0, },
 };
 
 // Return a copy of the operator or keyword names.
diff --git a/src/ov-usr-fcn.cc b/src/ov-usr-fcn.cc
--- a/src/ov-usr-fcn.cc
+++ b/src/ov-usr-fcn.cc
@@ -595,16 +595,18 @@ DEFUN (nargin, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} nargin ()\n\
 @deftypefnx {Built-in Function} {} nargin (@var{fcn_name})\n\
 Within a function, return the number of arguments passed to the function.\n\
 At the top level, return the number of command line arguments passed to\n\
 Octave.  If called with the optional argument @var{fcn_name}, return the\n\
 maximum number of arguments the named function can accept, or -1 if the\n\
 function accepts a variable number of arguments.\n\
+\n\
+@seealso{nargout, varargin, and varargout}\n\
 @end deftypefn")
 {
   octave_value retval;
 
   int nargin = args.length ();
 
   if (nargin == 1)
     {
@@ -667,16 +669,18 @@ will cause @code{nargout} to return 0 in
 [s, t] = f ()\n\
 @end example\n\
 \n\
 @noindent\n\
 will cause @code{nargout} to return 2 inside the function\n\
 @code{f}.\n\
 \n\
 At the top level, @code{nargout} is undefined.\n\
+\n\
+@seealso{nargin, varargin, and varargout}\n\
 @end deftypefn")
 {
   octave_value retval;
 
   int nargin = args.length ();
 
   if (nargin == 1)
     {
