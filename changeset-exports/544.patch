# HG changeset patch
# User jwe
# Date 774853484 0
#      Fri Jul 22 05:04:44 1994 +0000
# Node ID 20fbad23ae5180cacc6fa57f6874650bc8ecf3db
# Parent  b15c1fafec8495c96287054324790e85e96f7e72
[project @ 1994-07-22 05:04:44 by jwe]

diff --git a/src/balance.cc b/src/balance.cc
--- a/src/balance.cc
+++ b/src/balance.cc
@@ -34,16 +34,17 @@ Software Foundation, 675 Mass Ave, Cambr
 #include "dbleAEPBAL.h"
 #include "CmplxAEPBAL.h"
 #include "dbleGEPBAL.h"
 
 #include "tree-const.h"
 #include "user-prefs.h"
 #include "gripes.h"
 #include "error.h"
+#include "help.h"
 #include "defun-dld.h"
 
 DEFUN_DLD ("balance", Fbalance, Sbalance, 4, 4,
   "AA = balance (A [, OPT]) or [[DD,] AA] =  balance (A [, OPT])\n\
 \n\
 generalized eigenvalue problem:\n\
 \n\
   [cc, dd, aa, bb] = balance (a, b [, opt])\n\
diff --git a/src/chol.cc b/src/chol.cc
--- a/src/chol.cc
+++ b/src/chol.cc
@@ -27,16 +27,17 @@ Software Foundation, 675 Mass Ave, Cambr
 
 #include "dbleCHOL.h"
 #include "CmplxCHOL.h"
 
 #include "tree-const.h"
 #include "user-prefs.h"
 #include "gripes.h"
 #include "error.h"
+#include "help.h"
 #include "defun-dld.h"
 
 DEFUN_DLD ("chol", Fchol, Schol, 2, 1,
   "R = chol (X): cholesky factorization")
 {
   Octave_object retval;
 
   int nargin = args.length ();
diff --git a/src/colloc.cc b/src/colloc.cc
--- a/src/colloc.cc
+++ b/src/colloc.cc
@@ -25,16 +25,17 @@ Software Foundation, 675 Mass Ave, Cambr
 #include "config.h"
 #endif
 
 #include "CollocWt.h"
 
 #include "tree-const.h"
 #include "error.h"
 #include "utils.h"
+#include "help.h"
 #include "defun-dld.h"
 
 DEFUN_DLD ("colloc", Fcolloc, Scolloc, 7, 4,
   "[R, A, B, Q] = colloc (N [, \"left\"] [, \"right\"]): collocation weights")
 {
   Octave_object retval;
 
   int nargin = args.length ();
diff --git a/src/dassl.cc b/src/dassl.cc
--- a/src/dassl.cc
+++ b/src/dassl.cc
@@ -30,16 +30,17 @@ Software Foundation, 675 Mass Ave, Cambr
 #include "DAE.h"
 
 #include "tree-const.h"
 #include "variables.h"
 #include "gripes.h"
 #include "error.h"
 #include "utils.h"
 #include "pager.h"
+#include "help.h"
 #include "defun-dld.h"
 
 // Global pointer for user defined function required by dassl.
 static tree_fvc *dassl_fcn;
 
 static ODE_options dassl_opts;
 
 ColumnVector
diff --git a/src/det.cc b/src/det.cc
--- a/src/det.cc
+++ b/src/det.cc
@@ -27,16 +27,17 @@ Software Foundation, 675 Mass Ave, Cambr
 
 #include "dbleDET.h"
 #include "CmplxDET.h"
 
 #include "tree-const.h"
 #include "user-prefs.h"
 #include "gripes.h"
 #include "error.h"
+#include "help.h"
 #include "defun-dld.h"
 
 DEFUN_DLD ("det", Fdet, Sdet, 2, 1,
   "det (X): determinant of a square matrix")
 {
   Octave_object retval;
 
   int nargin = args.length ();
diff --git a/src/eig.cc b/src/eig.cc
--- a/src/eig.cc
+++ b/src/eig.cc
@@ -26,16 +26,17 @@ Software Foundation, 675 Mass Ave, Cambr
 #endif
 
 #include "EIG.h"
 
 #include "tree-const.h"
 #include "user-prefs.h"
 #include "gripes.h"
 #include "error.h"
+#include "help.h"
 #include "defun-dld.h"
 
 DEFUN_DLD ("eig", Feig, Seig, 2, 1,
   "eig (X) or [V, D] = eig (X): compute eigenvalues and eigenvectors of X")
 {
   Octave_object retval;
 
   int nargin = args.length ();
diff --git a/src/expm.cc b/src/expm.cc
--- a/src/expm.cc
+++ b/src/expm.cc
@@ -35,16 +35,17 @@ Software Foundation, 675 Mass Ave, Cambr
 #include "dbleAEPBAL.h"
 #include "CmplxAEPBAL.h"
 #include "f77-uscore.h"
 
 #include "tree-const.h"
 #include "user-prefs.h"
 #include "gripes.h"
 #include "error.h"
+#include "help.h"
 #include "defun-dld.h"
 
 extern "C"
 {
   double F77_FCN (dlange) (const char*, const int*, const int*,
 			   const double*, const int*, double*);
 
   double F77_FCN (zlange) (const char*, const int*, const int*,
diff --git a/src/fft.cc b/src/fft.cc
--- a/src/fft.cc
+++ b/src/fft.cc
@@ -27,16 +27,17 @@ Software Foundation, 675 Mass Ave, Cambr
 
 #include "dMatrix.h"
 #include "CMatrix.h"
 
 #include "tree-const.h"
 #include "user-prefs.h"
 #include "gripes.h"
 #include "error.h"
+#include "help.h"
 #include "defun-dld.h"
 
 DEFUN_DLD ("fft", Ffft, Sfft, 2, 1,
   "fft (X): fast fourier transform of a vector")
 {
   Octave_object retval;
 
   int nargin = args.length ();
diff --git a/src/find.cc b/src/find.cc
--- a/src/find.cc
+++ b/src/find.cc
@@ -22,16 +22,17 @@ Software Foundation, 675 Mass Ave, Cambr
 */
 
 #ifdef HAVE_CONFIG_H
 #include "config.h"
 #endif
 
 #include "tree-const.h"
 #include "error.h"
+#include "help.h"
 #include "defun-dld.h"
 
 static Octave_object
 find_to_fortran_idx (const ColumnVector i_idx, const ColumnVector j_idx,
 		     const tree_constant& val, int nr, int nc, int nargout)
 {
   Octave_object retval (nargout);
 
diff --git a/src/fsolve.cc b/src/fsolve.cc
--- a/src/fsolve.cc
+++ b/src/fsolve.cc
@@ -30,16 +30,17 @@ Software Foundation, 675 Mass Ave, Cambr
 #include "NLEqn.h"
 
 #include "tree-const.h"
 #include "variables.h"
 #include "gripes.h"
 #include "error.h"
 #include "utils.h"
 #include "pager.h"
+#include "help.h"
 #include "defun-dld.h"
 
 // Global pointer for user defined function required by hybrd1.
 static tree_fvc *fsolve_fcn;
 
 static NLEqn_options fsolve_opts;
 
 int
diff --git a/src/fsqp.cc b/src/fsqp.cc
--- a/src/fsqp.cc
+++ b/src/fsqp.cc
@@ -26,16 +26,17 @@ Software Foundation, 675 Mass Ave, Cambr
 #endif
 
 #ifndef FSQP_MISSING
 
 #include "FSQP.h"
 
 #include "tree-const.h"
 #include "error.h"
+#include "help.h"
 #include "defun-dld.h"
 
 // Global pointers for user defined functions required by fsqp.
 // static tree *fsqp_objective;
 // static tree *fsqp_constraints;
 
 double
 fsqp_objective_function (const ColumnVector& x)
diff --git a/src/givens.cc b/src/givens.cc
--- a/src/givens.cc
+++ b/src/givens.cc
@@ -30,16 +30,17 @@ Software Foundation, 675 Mass Ave, Cambr
 #include "dMatrix.h"
 #include "CMatrix.h"
 #include "f77-uscore.h"
 
 #include "tree-const.h"
 #include "user-prefs.h"
 #include "error.h"
 #include "gripes.h"
+#include "help.h"
 #include "defun-dld.h"
 
 extern "C"
 {
   int F77_FCN (dlartg) (const double*, const double*, double*, double*,
 			double*);
 
   int F77_FCN (zlartg) (const Complex*, const Complex*, double*,
diff --git a/src/hess.cc b/src/hess.cc
--- a/src/hess.cc
+++ b/src/hess.cc
@@ -27,16 +27,17 @@ Software Foundation, 675 Mass Ave, Cambr
 
 #include "dbleHESS.h"
 #include "CmplxHESS.h"
 
 #include "tree-const.h"
 #include "user-prefs.h"
 #include "error.h"
 #include "gripes.h"
+#include "help.h"
 #include "defun-dld.h"
 
 DEFUN_DLD ("hess", Fhess, Shess, 2, 2,
   "[P, H] = hess (A) or H = hess (A): Hessenberg decomposition")
 {
   Octave_object retval;
 
   int nargin = args.length ();
diff --git a/src/ifft.cc b/src/ifft.cc
--- a/src/ifft.cc
+++ b/src/ifft.cc
@@ -27,16 +27,17 @@ Software Foundation, 675 Mass Ave, Cambr
 
 #include "dMatrix.h"
 #include "CMatrix.h"
 
 #include "tree-const.h"
 #include "user-prefs.h"
 #include "gripes.h"
 #include "error.h"
+#include "help.h"
 #include "defun-dld.h"
 
 DEFUN_DLD ("ifft", Fifft, Sifft,2, 1,
   "ifft (X): inverse fast fourier transform of a vector")
 {
   Octave_object retval;
 
   int nargin = args.length ();
diff --git a/src/inv.cc b/src/inv.cc
--- a/src/inv.cc
+++ b/src/inv.cc
@@ -27,16 +27,17 @@ Software Foundation, 675 Mass Ave, Cambr
 
 #include "dMatrix.h"
 #include "CMatrix.h"
 
 #include "tree-const.h"
 #include "user-prefs.h"
 #include "gripes.h"
 #include "error.h"
+#include "help.h"
 #include "defun-dld.h"
 
 DEFUN_DLD ("inv", Finv, Sinv, 2, 1,
   "inv (X): inverse of a square matrix")
 {
   Octave_object retval;
 
   int nargin = args.length ();
diff --git a/src/log.cc b/src/log.cc
--- a/src/log.cc
+++ b/src/log.cc
@@ -26,16 +26,17 @@ Software Foundation, 675 Mass Ave, Cambr
 #endif
 
 #include "EIG.h"
 
 #include "tree-const.h"
 #include "user-prefs.h"
 #include "error.h"
 #include "gripes.h"
+#include "help.h"
 #include "defun-dld.h"
 
 // XXX FIXME XXX -- the next two functions should really be just one...
 
 DEFUN_DLD ("logm", Flogm, Slogm, 2, 1,
   "logm (X): matrix logarithm")
 {
   Octave_object retval;
diff --git a/src/lpsolve.cc b/src/lpsolve.cc
--- a/src/lpsolve.cc
+++ b/src/lpsolve.cc
@@ -24,16 +24,17 @@ Software Foundation, 675 Mass Ave, Cambr
 #ifdef HAVE_CONFIG_H
 #include "config.h"
 #endif
 
 #include "LPsolve.h"
 
 #include "tree-const.h"
 #include "error.h"
+#include "help.h"
 #include "defun-dld.h"
 
 DEFUN_DLD ("lpsolve", Flpsolve, Slpsolve, 11, 3,
   "lp_solve (): solve linear programs using lp_solve.")
 {
   Octave_object retval;
 
 // Force a bad value of inform, and empty matrices for x and phi.
diff --git a/src/lsode.cc b/src/lsode.cc
--- a/src/lsode.cc
+++ b/src/lsode.cc
@@ -30,16 +30,17 @@ Software Foundation, 675 Mass Ave, Cambr
 #include "ODE.h"
 
 #include "tree-const.h"
 #include "variables.h"
 #include "gripes.h"
 #include "error.h"
 #include "utils.h"
 #include "pager.h"
+#include "help.h"
 #include "defun-dld.h"
 
 // Global pointer for user defined function required by lsode.
 static tree_fvc *lsode_fcn;
 
 static ODE_options lsode_opts;
 
 ColumnVector
diff --git a/src/lu.cc b/src/lu.cc
--- a/src/lu.cc
+++ b/src/lu.cc
@@ -26,16 +26,17 @@ Software Foundation, 675 Mass Ave, Cambr
 #endif
 
 #include "dbleLU.h"
 #include "CmplxLU.h"
 
 #include "tree-const.h"
 #include "user-prefs.h"
 #include "gripes.h"
+#include "help.h"
 #include "defun-dld.h"
 
 DEFUN_DLD ("lu", Flu, Slu, 2, 3,
   "[L, U, P] = lu (A): LU factorization")
 {
   Octave_object retval;
 
   int nargin = args.length ();
diff --git a/src/minmax.cc b/src/minmax.cc
--- a/src/minmax.cc
+++ b/src/minmax.cc
@@ -24,16 +24,17 @@ Software Foundation, 675 Mass Ave, Cambr
 #ifdef HAVE_CONFIG_H
 #include "config.h"
 #endif
 
 #include <math.h>
 
 #include "tree-const.h"
 #include "error.h"
+#include "help.h"
 #include "defun-dld.h"
 
 #ifndef MAX
 #define MAX(a,b) ((a) > (b) ? (a) : (b))
 #endif
 
 #ifndef MIN
 #define MIN(a,b) ((a) < (b) ? (a) : (b))
diff --git a/src/npsol.cc b/src/npsol.cc
--- a/src/npsol.cc
+++ b/src/npsol.cc
@@ -32,16 +32,17 @@ Software Foundation, 675 Mass Ave, Cambr
 #include "NPSOL.h"
 
 #include "tree-const.h"
 #include "variables.h"
 #include "gripes.h"
 #include "error.h"
 #include "pager.h"
 #include "utils.h"
+#include "help.h"
 #include "defun-dld.h"
 
 // Global pointers for user defined functions required by npsol.
 static tree_fvc *npsol_objective;
 static tree_fvc *npsol_constraints;
 
 static NPSOL_options npsol_opts;
 
diff --git a/src/qpsol.cc b/src/qpsol.cc
--- a/src/qpsol.cc
+++ b/src/qpsol.cc
@@ -32,16 +32,17 @@ Software Foundation, 675 Mass Ave, Cambr
 #include "QPSOL.h"
 
 #include "tree-const.h"
 #include "variables.h"
 #include "gripes.h"
 #include "error.h"
 #include "utils.h"
 #include "pager.h"
+#include "help.h"
 #include "defun-dld.h"
 
 // This should probably be defined in some shared file and declared in
 // a header file...
 extern int linear_constraints_ok (const ColumnVector& x,
 				  const ColumnVector& llb, const Matrix& c,
 				  const ColumnVector& lub, char *warn_for,
 				  int warn);
diff --git a/src/qr.cc b/src/qr.cc
--- a/src/qr.cc
+++ b/src/qr.cc
@@ -29,16 +29,17 @@ Software Foundation, 675 Mass Ave, Cambr
 #include "CmplxQR.h"
 
 #include "dbleQRP.h"
 #include "CmplxQRP.h"
 
 #include "tree-const.h"
 #include "user-prefs.h"
 #include "gripes.h"
+#include "help.h"
 #include "defun-dld.h"
 
 DEFUN_DLD ("qr", Fqr, Sqr, 2, 2,
   "[Q, R] = qr (X):      form Q unitary and R upper triangular such\n\
                        that Q * R = X\n\
 \n\
 [Q, R] = qr (X, 0):    form the economy decomposition such that if X is\n\
                        if X is m by n then only the first n columns of Q\n\
diff --git a/src/quad.cc b/src/quad.cc
--- a/src/quad.cc
+++ b/src/quad.cc
@@ -31,16 +31,17 @@ Software Foundation, 675 Mass Ave, Cambr
 
 #include "tree-const.h"
 #include "variables.h"
 #include "mappers.h"
 #include "gripes.h"
 #include "error.h"
 #include "utils.h"
 #include "pager.h"
+#include "help.h"
 #include "defun-dld.h"
 
 // Global pointer for user defined function required by quadrature functions.
 static tree_fvc *quad_fcn;
 
 static Quad_options quad_opts;
 
 double
diff --git a/src/qzval.cc b/src/qzval.cc
--- a/src/qzval.cc
+++ b/src/qzval.cc
@@ -33,16 +33,17 @@ Software Foundation, 675 Mass Ave, Cambr
 #include "dColVector.h"
 #include "CColVector.h"
 #include "f77-uscore.h"
 
 #include "tree-const.h"
 #include "user-prefs.h"
 #include "gripes.h"
 #include "error.h"
+#include "help.h"
 #include "defun-dld.h"
 
 extern "C"
 {
   int F77_FCN (qzhes) (const int*, const int*, double*, double*, const
 		       long*, double*);
  
   int F77_FCN (qzit) (const int*, const int*, double*, double*, const
diff --git a/src/rand.cc b/src/rand.cc
--- a/src/rand.cc
+++ b/src/rand.cc
@@ -26,16 +26,17 @@ Software Foundation, 675 Mass Ave, Cambr
 #endif
 
 #include <time.h>
 
 #include "tree-const.h"
 #include "f77-uscore.h"
 #include "error.h"
 #include "utils.h"
+#include "help.h"
 #include "defun-dld.h"
 
 // Possible distributions of random numbers.
 enum rand_dist { uniform, normal };
 
 // Current distribution of random numbers.
 static rand_dist current_distribution = uniform;
 
diff --git a/src/schur.cc b/src/schur.cc
--- a/src/schur.cc
+++ b/src/schur.cc
@@ -27,16 +27,17 @@ Software Foundation, 675 Mass Ave, Cambr
 
 #include "dbleSCHUR.h"
 #include "CmplxSCHUR.h"
 
 #include "tree-const.h"
 #include "user-prefs.h"
 #include "error.h"
 #include "gripes.h"
+#include "help.h"
 #include "defun-dld.h"
 
 DEFUN_DLD ("schur", Fschur, Sschur, 3, 2,
   "[U, S] = schur (A) or S = schur (A)\n\
 \n\
 or, for ordered Schur:\n\
 \n\
   [U, S] = schur (A, TYPE) or S = schur (A, TYPE)\n\
diff --git a/src/sort.cc b/src/sort.cc
--- a/src/sort.cc
+++ b/src/sort.cc
@@ -21,16 +21,17 @@ Software Foundation, 675 Mass Ave, Cambr
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include "config.h"
 #endif
 
 #include "tree-const.h"
+#include "help.h"
 #include "defun-dld.h"
 
 static void
 mx_sort (Matrix& m, Matrix& idx, int return_idx)
 {
   int nr = m.rows ();
   int nc = m.columns ();
   idx.resize (nr, nc);
diff --git a/src/svd.cc b/src/svd.cc
--- a/src/svd.cc
+++ b/src/svd.cc
@@ -27,16 +27,17 @@ Software Foundation, 675 Mass Ave, Cambr
 
 #include "dbleSVD.h"
 #include "CmplxSVD.h"
 
 #include "tree-const.h"
 #include "user-prefs.h"
 #include "gripes.h"
 #include "error.h"
+#include "help.h"
 #include "defun-dld.h"
 
 DEFUN_DLD ("svd", Fsvd, Ssvd, 2, 3,
   "S = svd (X) or [U, S, V] = svd (X [, 0])\n\
 \n\
 Compute the singular value decomposition of X.  Given a second input\n\
 argument, an `economy' sized factorization is computed that omits\n\
 unnecessary rows and columns of U and V")
diff --git a/src/syl.cc b/src/syl.cc
--- a/src/syl.cc
+++ b/src/syl.cc
@@ -32,16 +32,17 @@ Software Foundation, 675 Mass Ave, Cambr
 #include "dbleSCHUR.h"
 #include "CmplxSCHUR.h"
 #include "f77-uscore.h"
 
 #include "tree-const.h"
 #include "user-prefs.h"
 #include "gripes.h"
 #include "error.h"
+#include "help.h"
 #include "defun-dld.h"
 
 extern "C"
 {
   int F77_FCN (dtrsyl) (const char*, const char*, const int*,
 			const int*, const int*, const double*,
 			const int*, const double*, const int*,
 			const double*, const int*, double*, int*,
