# HG changeset patch
# User jwe
# Date 954795987 0
#      Mon Apr 03 21:06:27 2000 +0000
# Node ID 6324a4994278d8656758ec062ef8d0e0c19f731f
# Parent  02ae67aa84c515143d4f6c3a8fad6dedcf172d97
[project @ 2000-04-03 21:06:26 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,14 @@
+2000-04-03  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* dynamic-ld.cc (octave_dynamic_loader::do_load): Also fail with
+	error message if we don't find the mangled function name in the
+	file.
+
 2000-03-31  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* oct-stream.cc (printf_value_cache::string_value): Return string
 	matrices in a Matlab-compatible way.
 	(printf_value_cache): Redesign the way list_exhausted works.
 
 	* oct-fstrm.cc (octave_fstream::do_close): New function.
 	* oct-stdstrm.cc (octave_istdiostream::do_close): Ditto.
diff --git a/src/dynamic-ld.cc b/src/dynamic-ld.cc
--- a/src/dynamic-ld.cc
+++ b/src/dynamic-ld.cc
@@ -179,17 +179,17 @@ octave_dynamic_loader::instance_ok (void
 {
   bool retval = true;
 
   if (! instance)
     instance = new octave_dynamic_loader ();
 
   if (! instance)
     {
-      error ("unable to create dynamic loader object!");
+      ::error ("unable to create dynamic loader object!");
 
       retval = false;
     }
 
   return retval;
 }
 
 static
@@ -249,33 +249,33 @@ octave_dynamic_loader::do_load (const st
 		{
 		  if (oct_file)
 		    {
 		      octave_shlib_list::append (oct_file);
 
 		      function = oct_file.search (fcn_name, mangle_name);
 		    }
 		  else
-		    error ("%s is not a valid shared library",
-			   oct_file_name.c_str ());
+		    ::error ("%s is not a valid shared library",
+			     oct_file_name.c_str ());
 		}
 	    }
 	}
     }
 
   if (function)
     {
       octave_dld_fcn_installer f
 	= X_CAST (octave_dld_fcn_installer, function);
 
       retval = f (oct_file);
-
-      if (! retval)
-	error ("failed to install dld function `%s'", fcn_name.c_str ());
     }
+  
+  if (! retval)
+    ::error ("failed to install dld function `%s'", fcn_name.c_str ());
 
   unwind_protect::run_frame ("octave_dynamic_loader::do_load");
 
   return retval;
 }
 
 bool
 octave_dynamic_loader::do_remove (const std::string& fcn_name, octave_shlib& shl)
