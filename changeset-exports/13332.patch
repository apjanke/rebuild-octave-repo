# HG changeset patch
# User Jacob Dawid <jacob.dawid@googlemail.com>
# Date 1302016501 -7200
#      Tue Apr 05 17:15:01 2011 +0200
# Node ID ff3206f87e4d093d809f1e6f7a83ec786b45605a
# Parent  30469264a58f8b5c06b22a4b42b817722cad0675
Octave restarts when process exits.

diff --git a/gui//client.cpp b/gui//client.cpp
--- a/gui//client.cpp
+++ b/gui//client.cpp
@@ -1,13 +1,16 @@
 #include "client.h"
 
-Client::Client(QString command) {
-    m_process.start(command, QProcess::ReadWrite);
+Client::Client(QString command)
+    : m_command(command) {
+    m_process.start(m_command, QProcess::ReadWrite);
     connect(&m_process, SIGNAL(readyRead()), this, SLOT(reemitDataAvailable()));
+    connect(&m_process, SIGNAL(stateChanged(QProcess::ProcessState)), this, SLOT(handleProcessStatusChange(QProcess::ProcessState)));
+    connect(&m_process, SIGNAL(finished(int,QProcess::ExitStatus)), this, SLOT(handleProcessFinished(int,QProcess::ExitStatus)));
 }
 
 void Client::send(QString content) {
     m_process.write(content.toLocal8Bit());
 }
 
 QString Client::fetch() {
     QString fetchedInput(m_process.readAllStandardOutput());
@@ -22,8 +25,22 @@ QString Client::errorMessage() {
 void Client::reemitDataAvailable() {
     emit dataAvailable();
 }
 
 void Client::reemitErrorAvailable() {
     emit errorAvailable();
 }
 
+void Client::handleProcessFinished(int exitCode, QProcess::ExitStatus exitStatus) {
+    m_process.start(m_command, QProcess::ReadWrite);
+}
+
+void Client::handleProcessStatusChange(QProcess::ProcessState processState) {
+    switch(processState) {
+        case QProcess::NotRunning:
+            break;
+        case QProcess::Starting:
+            break;
+        case QProcess::Running:
+            break;
+    };
+}
diff --git a/gui//client.h b/gui//client.h
--- a/gui//client.h
+++ b/gui//client.h
@@ -13,22 +13,26 @@ class Client : public QObject {
 public:
     void send(QString content);
     QString fetch();
     QString errorMessage();
 
 signals:
     void dataAvailable();
     void errorAvailable();
+    void lostConnection();
 
 protected:
     Client(QString command);
 
 private slots:
     void reemitDataAvailable();
     void reemitErrorAvailable();
+    void handleProcessFinished(int exitCode, QProcess::ExitStatus exitStatus);
+    void handleProcessStatusChange(QProcess::ProcessState processState);
 
 private:
+    QString m_command;
     QProcess m_process;
     QMutex m_clientInRequest;
 };
 
 #endif // CLIENT_H
diff --git a/gui//mainwindow.cpp b/gui//mainwindow.cpp
--- a/gui//mainwindow.cpp
+++ b/gui//mainwindow.cpp
@@ -8,16 +8,18 @@
 
 MainWindow::MainWindow(QWidget *parent)
     : QMainWindow(parent) {
     showMaximized();
     m_mdiArea = new QMdiArea();
     setCentralWidget(m_mdiArea);
 
     addOctaveTerminal();
+    addOctaveTerminal();
+    addOctaveTerminal();
     loadWebPage("Online Manual", "http://www.gnu.org/software/octave/doc/interpreter/");
     m_mdiArea->setViewMode(QMdiArea::TabbedView);
 }
 
 MainWindow::~MainWindow() {
 
 }
 
