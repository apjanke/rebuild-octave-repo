# HG changeset patch
# User Carlo de Falco <cdf@users.sourceforge.net>
# Date 1349938448 -7200
#      Thu Oct 11 08:54:08 2012 +0200
# Node ID 96b7343b8a419fc727a30f9aca10b1bf7f66028f
# Parent  6e834a1137608e8f52293bd91df3c002614b4f8d
Fix typo in docstring for 'sign'.

* mappers.cc(Fsign): correct bad escape sequence in the docstring.

diff --git a/libinterp/corefcn/mappers.cc b/libinterp/corefcn/mappers.cc
--- a/libinterp/corefcn/mappers.cc
+++ b/libinterp/corefcn/mappers.cc
@@ -1750,17 +1750,18 @@ sign (x) =  0, x = 0;\n\
             1, x > 0.\n\
 @end group\n\
 @end example\n\
 \n\
 @end ifnottex\n\
 \n\
 For complex arguments, @code{sign} returns @code{x ./ abs (@var{x})}.\n\
 \n\
-Note that @code{sign (-0.0)} is 0.\n\  Although IEEE 754 floating point\n\
+Note that @code{sign (-0.0)} is 0.\n\
+Although IEEE 754 floating point\n\
 allows zero to be signed, 0.0 and -0.0 compare equal.  If you must test\n\
 whether zero is signed, use the @code{signbit} function.\n\
 @seealso{signbit}\n\
 @end deftypefn")
 {
   octave_value retval;
   if (args.length () == 1)
     retval = args(0).signum ();
