# HG changeset patch
# User jwe
# Date 1078871815 0
#      Tue Mar 09 22:36:55 2004 +0000
# Node ID e78bc84ac0d3f5c8648f0dbacaaabf738ee48008
# Parent  bb82599f039faf28a7cf1fc4133638c350d9df24
[project @ 2004-03-09 22:36:55 by jwe]

diff --git a/liboctave/Array.cc b/liboctave/Array.cc
--- a/liboctave/Array.cc
+++ b/liboctave/Array.cc
@@ -1982,28 +1982,30 @@ Array<T>::index2 (idx_vector& idx_arg, i
       int result_nc = 1;
 
       retval = Array<T> (*this, dim_vector (result_nr, result_nc));
     }
   else if (nr == 1 && nc == 1)
     {
       Array<T> tmp = Array<T>::index1 (idx_arg, resize_ok);
 
-      if (tmp.length () != 0)
+      int len = tmp.length ();
+
+      if (len == 0 && idx_arg.one_zero_only ())
+	retval = Array<T> (tmp, dim_vector (0, 0));
+      else
 	retval = Array<T> (tmp, dim_vector (idx_orig_rows, idx_orig_columns));
-      else
-	retval = Array<T> (tmp, dim_vector (0, 0));
     }
   else if (nr == 1 || nc == 1)
     {
       // If indexing a vector with a matrix, return value has same
       // shape as the index.  Otherwise, it has same orientation as
       // indexed object.
 
-      Array<T> tmp = index1 (idx_arg, resize_ok);
+      Array<T> tmp = Array<T>::index1 (idx_arg, resize_ok);
 
       int len = tmp.length ();
 
       if ((len != 0 && idx_arg.one_zero_only ())
 	  || idx_orig_rows == 1 || idx_orig_columns == 1)
 	{
 	  if (nr == 1)
 	    retval = Array<T> (tmp, dim_vector (1, len));
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,10 +1,13 @@
 2004-03-09  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* Array.cc (Array<T>::index2): If scalar or vector is indexed by
+	matrix, return object that is the same size as the index.
+
 	* mx-op-defs.h (NDND_CMP_OP, MM_CMP_OP): Require dimensions to agree.
 	Eliminate MT_RESULT args.  Return value is always size of args.
 	(MS_CMP_OP, SM_CMP_OP, NDS_CMP_OP, SND_CMP_OP):
 	Eliminate EMPTY_RESULT arg.
 	Return value is always size of matrix or N-d array arg.
 	(TBM, FBM, NBM): Delete unused macros.
 
 2004-03-05  John W. Eaton  <jwe@bevo.che.wisc.edu>
