# HG changeset patch
# User Ben Abbott <bpabbott@mac.com>
# Date 1235914259 18000
#      Sun Mar 01 08:30:59 2009 -0500
# Node ID 32d2184946027ca9f5147177a4ca14b437c5d43d
# Parent  d077c590eb889f6820821d722bb7639380b196fc
colorbar.m: Bug fix. Allow hidden colorbars to be deleted, and replace existing colorbar when a new one is created. Additional demos are included to verify these behaviors.

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,14 @@
+2009-03-01  Ben Abbott <bpabbott@mac.com>
+
+	* plot/colorbar.m: Bug fix. Allow hidden colorbars to be deleted,
+	and replace existing colorbar when a new one is created. Additional
+	demos are included to verify these behaviors.
+
 2009-02-28  Ben Abbott <bpabbott@mac.com>
 
 	* plot/__actual_axis_position__.m: Include file missed in prior
 	changeset.
 
 2009-02-28  Ben Abbott <bpabbott@mac.com>
 
 	* plot/print.m, plot/gnuplot_drawnow.m: Add compatible support for
diff --git a/scripts/plot/colorbar.m b/scripts/plot/colorbar.m
--- a/scripts/plot/colorbar.m
+++ b/scripts/plot/colorbar.m
@@ -80,42 +80,45 @@ function h = colorbar (varargin)
     else
       args{end+1} = arg;
     endif
   endwhile
 
   if (isempty (ax))
     ax = gca ();
   endif
-  obj = get (ax);
 
-  if (deleting)
-    objs = findobj (get (ax, "parent"), "type", "axes");
-    for i = 1 : length (objs)
-      if (strcmp (get (objs(i), "tag"), "colorbar") &&
-	  get (objs(i), "axes") == ax)
-	delete (objs(i));
-      endif
-    endfor
-    else
+  showhiddenhandles = get (0, "showhiddenhandles");
+  unwind_protect
+    set (0, "showhiddenhandles", "on")
+    cax = findobj (get (ax, "parent"), "tag", "colorbar", "type", "axes", "axes", ax);
+    if (! isempty (cax))
+      delete (cax);
+    endif
+  unwind_protect_cleanup
+    set (0, "showhiddenhandles", showhiddenhandles)
+  end_unwind_protect
+
+  if (! deleting)
+    obj = get (ax);
     position = obj.position;
     clen = rows (get (get (ax, "parent"), "colormap"));
     cext = get (ax, "clim");
     cdiff = (cext(2) - cext(1)) / clen / 2;
     cmin = cext(1) + cdiff;
     cmax = cext(2) - cdiff;
 
     orig_pos = obj.position;
     orig_opos = obj.outerposition;
     [pos, cpos, vertical, mirror, aspect] =  ...
 	__position_colorbox__ (loc, obj, ancestor (ax, "figure"));
     set (ax, "activepositionproperty", "position", "position", pos);
 
     cax = __go_axes__ (get (ax, "parent"), "tag", "colorbar", 
-		       "handlevisibility", "off", 
+    		       "handlevisibility", "off", 
 		       "activepositionproperty", "position", 
 		       "position", cpos);
     addproperty ("location", cax, "radio",
 		 "eastoutside|east|westoutside|west|northoutside|north|southoutside|south",
 		 loc);
     addproperty ("axes", cax, "handle", ax);
 
     if (vertical)
@@ -493,54 +496,39 @@ endfunction
 %! imagesc(x)
 %! colorbar("northoutside");
 %! subplot(2,1,2)
 %! imagesc(x)
 %! colorbar("southoutside");
 
 %!demo
 %! clf
-%! locations = {"northoutside", "north", "southoutside", "south",
-%!              "westoutside", "west", "eastoutside", "east"};
-%! n = 64;
-%! x = kron (1:n,ones(n,1)); x = abs(x - x.'); 
-%! x = x .* fliplr (x) / 32^2;
-%! for r = 1:2
-%!   for c = 1:4
-%!     n = 2*(c-1) + r;
-%!     subplot (2, 4, n)
-%!     contour (x)
-%!     xlim ([1, 64])
-%!     ylim ([1, 64])
-%!     set (gca, "clim", [0, 1])
-%!     colorbar (locations{n});
-%!   endfor
-%! endfor
-
-%!demo
-%! clf
-%! n = 64; x = kron (1:n,ones(n,1)); x = abs(x - x.'); 
-%! subplot(1,2,1)
-%! contour(x)
-%! axis square;
-%! colorbar("east");
-%! xlim ([1, 64])
-%! ylim ([1, 64])
-%! subplot(1,2,2)
-%! imagesc(x)
-%! axis square;
-%! colorbar()
-
-%!demo
-%! clf
 %! n = 64; x = kron (1:n,ones(n,1)); x = abs(x - x.'); 
 %! subplot(1,2,1)
 %! contour(x)
 %! axis square;
 %! colorbar("east");
 %! xlim ([1, 64])
 %! ylim ([1, 64])
 %! subplot(1,2,2)
 %! contour(x)
 %! colorbar("west");
 %! xlim ([1, 64])
 %! ylim ([1, 64])
 
+%!demo
+%! clf
+%! n = 64; x = kron (1:n,ones(n,1)); x = abs(x - x.'); 
+%! contour (x)
+%! xlim ([1, 64])
+%! ylim ([1, 64])
+%! colorbar ();
+%! colorbar off
+
+%!demo
+%! clf
+%! n = 64; x = kron (1:n,ones(n,1)); x = abs(x - x.'); 
+%! contour (x)
+%! xlim ([1, 64])
+%! ylim ([1, 64])
+%! colorbar ();
+%! colorbar ();
+
