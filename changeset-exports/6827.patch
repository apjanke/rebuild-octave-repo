# HG changeset patch
# User jwe
# Date 1187973485 0
#      Fri Aug 24 16:38:05 2007 +0000
# Node ID 647cad23207009dd087320bf6c206f5158f06644
# Parent  8618f29520c6fefc62d94aaf194edf9a63cfccba
[project @ 2007-08-24 16:38:05 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,13 @@
+2007-08-24  Kim Hansen  <kimhanse@gmail.com>
+
+	* run-octave.in: Use `command` instead of $(command) to accomodate
+	brain-dead shells.
+
 2007-08-24  David Bateman  <dbateman@free.fr>
 
         * configure.in: Probe for the use of Qhull.
         * aclocal.m4 (AC_CHECK_QHULL_VERSION): Macro to check whether
         Qhull needs a version number.
         * Makeconf.in: Add QHULL_LIBS.
 
 2007-08-23  John W. Eaton  <jwe@octave.org>
diff --git a/run-octave.in b/run-octave.in
--- a/run-octave.in
+++ b/run-octave.in
@@ -12,36 +12,36 @@ liboctinterp="$builddir/src/%liboctinter
 liboctave="$builddir/liboctave/%liboctave%"
 libcruft="$builddir/libcruft/%libcruft%"
 
 d1="$top_srcdir/test"
 d2="$top_srcdir/scripts"
 d3="$builddir/scripts"
 d4="$builddir/src"
 
-d1_list=$(find "$d1" -type d -a ! \( \( -name CVS -o -name private \) -a -prune \) -exec echo '{}': ';')
-d2_list=$(find "$d2" -type d -a ! \( \( -name CVS -o -name private \) -a -prune \) -exec echo '{}': ';')
-d3_list=$(find "$d3" -type d -a ! \( \( -name CVS -o -name private \) -a -prune \) -exec echo '{}': ';')
-d4_list=$(find "$d4" -type d -a ! \( \( -name CVS -o -name private \) -a -prune \) -exec echo '{}': ';')
+d1_list=`find "$d1" -type d -a ! \( \( -name CVS -o -name private \) -a -prune \) -exec echo '{}': ';'`
+d2_list=`find "$d2" -type d -a ! \( \( -name CVS -o -name private \) -a -prune \) -exec echo '{}': ';'`
+d3_list=`find "$d3" -type d -a ! \( \( -name CVS -o -name private \) -a -prune \) -exec echo '{}': ';'`
+d4_list=`find "$d4" -type d -a ! \( \( -name CVS -o -name private \) -a -prune \) -exec echo '{}': ';'`
 
-d1_path=$(echo "$d1_list" | $AWK '{ t = (s $0); s = t; } END { sub (/:$/, "", s); print s; }')
-d2_path=$(echo "$d2_list" | $AWK '{ t = (s $0); s = t; } END { sub (/:$/, "", s); print s; }')
-d3_path=$(echo "$d3_list" | $AWK '{ t = (s $0); s = t; } END { sub (/:$/, "", s); print s; }')
-d4_path=$(echo "$d4_list" | $AWK '{ t = (s $0); s = t; } END { sub (/:$/, "", s); print s; }')
+d1_path=`echo "$d1_list" | $AWK '{ t = (s $0); s = t; } END { sub (/:$/, "", s); print s; }'`
+d2_path=`echo "$d2_list" | $AWK '{ t = (s $0); s = t; } END { sub (/:$/, "", s); print s; }'`
+d3_path=`echo "$d3_list" | $AWK '{ t = (s $0); s = t; } END { sub (/:$/, "", s); print s; }'`
+d4_path=`echo "$d4_list" | $AWK '{ t = (s $0); s = t; } END { sub (/:$/, "", s); print s; }'`
 
 LOADPATH="$d1_path:$d2_path:$d3_path:$d4_path"
 IMAGEPATH="$top_srcdir/scripts/image"
 INFOFILE="$builddir/doc/interperter/octave.info"
 
 args="--no-initial-path --path=\"$LOADPATH\" --image-path=\"$IMAGEPATH\" --info-file=\"$INFOFILE\""
 
 if [ $# -gt 0 ]; then
   if [ "x$1" = "x-g" ]; then
     driver="gdb"
-    if [ $(/bin/pwd) = "$builddir" ]; then
+    if [ `/bin/pwd` = "$builddir" ]; then
       sed "s|^set args.*$|set args $args|" .gdbinit > .gdbinit-tmp
       mv .gdbinit-tmp .gdbinit
     fi
     args=""
     shift
   elif [ "x$1" = "x-valgrind" ]; then
     driver="valgrind --tool=memcheck"
     shift
