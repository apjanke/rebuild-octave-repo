# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1365491298 14400
#      Tue Apr 09 03:08:18 2013 -0400
# Node ID 0696dcc92fc8a7f54a8f6536e33288ee798182aa
# Parent  720fd1ca04ecc4cde19772fa3e9b564e29ea6461
allow windows console to be cleared

* lo-sysdep.h, lo-sysdep.cc (w32_clear_console_window): New function.
* cmd-edit.cc (gnu_readline::do_clear_screen): Use it.
* oct-rl-edit.c (octave_rl_clear_screen): Don't call system ("cls").
to clear screen on windows systems.

diff --git a/liboctave/system/lo-sysdep.cc b/liboctave/system/lo-sysdep.cc
--- a/liboctave/system/lo-sysdep.cc
+++ b/liboctave/system/lo-sysdep.cc
@@ -135,9 +135,42 @@ octave_popen2 (const std::string& cmd, c
   CloseHandle (childRead);
   CloseHandle (childWrite);
   CloseHandle (pi.hProcess);
   CloseHandle (pi.hThread);
 
   return pid;
 }
 
+void
+w32_clear_console_window (void)
+{
+  HANDLE console = GetStdHandle (STD_OUTPUT_HANDLE);
+
+  // Get the number of character cells in the current buffer.
+
+  CONSOLE_SCREEN_BUFFER_INFO csbi; 
+
+  if (GetConsoleScreenBufferInfo (console, &csbi))
+    {
+      DWORD screen_size = csbi.dwSize.X * csbi.dwSize.Y;
+
+      // Fill the entire screen with blanks.
+
+      COORD home = { 0, 0 };
+      DWORD nchars;
+
+      if (FillConsoleOutputCharacter (console, static_cast<TCHAR> (' '),
+                                      screen_size, home, &nchars))
+        {
+          if (GetConsoleScreenBufferInfo (console, &csbi))
+            {
+              if (FillConsoleOutputAttribute (console, csbi.wAttributes,
+                                              screen_size, home, &nchars))
+                {
+                  SetConsoleCursorPosition (console, home);
+                }
+            }
+        }
+    }
+}
+
 #endif
diff --git a/liboctave/system/lo-sysdep.h b/liboctave/system/lo-sysdep.h
--- a/liboctave/system/lo-sysdep.h
+++ b/liboctave/system/lo-sysdep.h
@@ -30,11 +30,14 @@ class string_vector;
 
 extern std::string octave_getcwd (void);
 
 extern int octave_chdir (const std::string&);
 
 #if defined (__WIN32__) && ! defined (__CYGWIN__)
 extern pid_t octave_popen2 (const std::string&, const string_vector&,
     bool, int *, std::string&);
+
+extern void w32_clear_console_window (void);
+
 #endif
 
 #endif
diff --git a/liboctave/util/cmd-edit.cc b/liboctave/util/cmd-edit.cc
--- a/liboctave/util/cmd-edit.cc
+++ b/liboctave/util/cmd-edit.cc
@@ -33,16 +33,17 @@ along with Octave; see the file COPYING.
 #include <unistd.h>
 
 #include "quit.h"
 
 #include "cmd-edit.h"
 #include "cmd-hist.h"
 #include "file-ops.h"
 #include "lo-error.h"
+#include "lo-sysdep.h"
 #include "lo-utils.h"
 #include "oct-env.h"
 #include "oct-mutex.h"
 #include "oct-time.h"
 #include "singleton-cleanup.h"
 
 command_editor *command_editor::instance = 0;
 
@@ -312,17 +313,21 @@ gnu_readline::do_terminal_cols (void)
   int sw = ::octave_rl_screen_width ();
 
   return sw > 0 ? sw : 80;
 }
 
 void
 gnu_readline::do_clear_screen (void)
 {
+#if defined (__WIN32__) && ! defined (__CYGWIN__)
+  w32_clear_console_window ();
+#else
   ::octave_rl_clear_screen ();
+#endif
 }
 
 void
 gnu_readline::do_resize_terminal (void)
 {
   ::octave_rl_resize_terminal ();
 }
 
diff --git a/liboctave/util/oct-rl-edit.c b/liboctave/util/oct-rl-edit.c
--- a/liboctave/util/oct-rl-edit.c
+++ b/liboctave/util/oct-rl-edit.c
@@ -88,36 +88,25 @@ static void
 flush_stdout (void)
 {
   fflush (stdout);
 }
 
 void
 octave_rl_clear_screen (void)
 {
-  /* This is a bit of a kluge, but I think it will work (I know, famous
-     last words).  */
-
-#if defined (__WIN32__) && ! defined (__CYGWIN__)
-
-  system ("cls");
-
-#else
-
   int ignore1 = 0;
   int ignore2 = 0;
 
   rl_voidfunc_t *saved_redisplay_function = rl_redisplay_function;
   rl_redisplay_function = flush_stdout;
 
   rl_clear_screen (ignore1, ignore2);
 
   rl_redisplay_function = saved_redisplay_function;
-
-#endif
 }
 
 void
 octave_rl_resize_terminal (void)
 {
   rl_resize_terminal ();
 }
 
