# HG changeset patch
# User Rik <rik@octave.org>
# Date 1504735251 25200
#      Wed Sep 06 15:00:51 2017 -0700
# Node ID df53ba41ea90fc0c33bf099dc9577a2d8eb57c96
# Parent  b0e696ea6487dc2183e677f92f3566500cfb285b
For performance, don't initialize SparseRep data array to 0.

* Sparse.h (SparseRep (octave_idx_type nr, octave_idx_type nc, octave_idx_type nz = 0)):
Don't use aggregate initialization of array d.  It is not necessary since valid elements
are controlled by r and c indices and will be set when an actual value is assigned.

diff --git a/liboctave/array/Sparse.h b/liboctave/array/Sparse.h
--- a/liboctave/array/Sparse.h
+++ b/liboctave/array/Sparse.h
@@ -73,17 +73,17 @@ protected:
     { }
 
     SparseRep (octave_idx_type n)
       : d (nullptr), r (nullptr), c (new octave_idx_type [n+1] {}),
         nzmx (0), nrows (n), ncols (n), count (1)
     { }
 
     SparseRep (octave_idx_type nr, octave_idx_type nc, octave_idx_type nz = 0)
-      : d (nz > 0 ? new T [nz] {} : nullptr),
+      : d (nz > 0 ? new T [nz] : nullptr),
         r (nz > 0 ? new octave_idx_type [nz] {} : nullptr),
         c (new octave_idx_type [nc+1] {}), nzmx (nz), nrows (nr),
         ncols (nc), count (1)
     { }
 
     SparseRep (const SparseRep& a)
       : d (new T [a.nzmx]), r (new octave_idx_type [a.nzmx]),
         c (new octave_idx_type [a.ncols + 1]),
