# HG changeset patch
# User jwe
# Date 1029177520 0
#      Mon Aug 12 18:38:40 2002 +0000
# Node ID 1432e11733d19608b892facdb2f2090a66566e10
# Parent  92776b806c5569b3901e17ba1a193e2a1630ab7a
[project @ 2002-08-12 18:38:40 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2002-08-12  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* file-io.cc (fopen_mode_to_ios_mode): Default value is std::ios::in.
+	Return std::ios::openmode instead of int.
+
 2002-08-10  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* DLD-FUNCTIONS/dasrt.cc (DASRT_ABORT1, DASRT_ABORT2):
 	"##" pastes tokens, not strings.
 
 	* DLD-FUNCTIONS/odessa.cc: Add std:: qualifiers as needed.
 
 2002-08-09  John W. Eaton  <jwe@bevo.che.wisc.edu>
diff --git a/src/file-io.cc b/src/file-io.cc
--- a/src/file-io.cc
+++ b/src/file-io.cc
@@ -89,20 +89,20 @@ initialize_file_io (void)
 }
 
 void
 close_files (void)
 {
   octave_stream_list::clear ();
 }
 
-static int
+static std::ios::openmode
 fopen_mode_to_ios_mode (const std::string& mode)
 {
-  int retval = 0;
+  std::ios::openmode retval = std::ios::in;
 
   if (! mode.empty ())
     {
       // Could probably be faster, but does it really matter?
 
       if (mode == "r")
 	retval = std::ios::in;
       else if (mode == "w")
@@ -119,19 +119,21 @@ fopen_mode_to_ios_mode (const std::strin
 	retval = std::ios::in | std::ios::binary;
       else if (mode == "wb")
 	retval = std::ios::out | std::ios::trunc | std::ios::binary;
       else if (mode == "ab")
 	retval = std::ios::out | std::ios::app | std::ios::binary;
       else if (mode == "r+b")
 	retval = std::ios::in | std::ios::out | std::ios::binary;
       else if (mode == "w+b")
-	retval = std::ios::in | std::ios::out | std::ios::trunc | std::ios::binary; 
+	retval = (std::ios::in | std::ios::out | std::ios::trunc
+		  | std::ios::binary);
       else if (mode == "a+b")
-	retval = std::ios::in | std::ios::out | std::ios::app | std::ios::binary;
+	retval = (std::ios::in | std::ios::out | std::ios::app
+		  | std::ios::binary);
       else
 	::error ("invalid mode specified");
     }
 
   return retval;
 }
 
 DEFUN (isstream, args, ,
@@ -305,27 +307,25 @@ If there are no more characters to read,
 static octave_stream
 do_stream_open (const std::string& name, const std::string& mode,
 		const std::string& arch, int& fid)
 {
   octave_stream retval;
 
   fid = -1;
 
-  int md = fopen_mode_to_ios_mode (mode);
+  std::ios::openmode md = fopen_mode_to_ios_mode (mode);
 
   if (! error_state)
     {
       oct_mach_info::float_format flt_fmt =
 	oct_mach_info::string_to_float_format (arch);
 
       if (! error_state)
-	retval = octave_fstream::create (name,
-	                                 static_cast<std::ios::openmode> (md), 
-					 flt_fmt);
+	retval = octave_fstream::create (name, md, flt_fmt);
     }
 
   return retval;
 }
 
 static octave_stream
 do_stream_open (const octave_value& tc_name, const octave_value& tc_mode,
 		const octave_value& tc_arch, const char *fcn, int& fid)
diff --git a/test/octave.test/io/fopen-1.m b/test/octave.test/io/fopen-1.m
--- a/test/octave.test/io/fopen-1.m
+++ b/test/octave.test/io/fopen-1.m
@@ -10,25 +10,31 @@ for i = 1:6
     else
       mode_list = ["w+"; "r+"; "a+"];
     endif
     nm = tmpnam ();
     for k = 1:3
       mode = deblank (mode_list (k,:));
       [id, err] = fopen (nm, mode, arch);
       if (id < 0)
-      	status = 0; break;
+	printf ("open failed: %s (%s, %s): %s\n", nm, mode, arch, err);
+      	status = 0;
+	break;
+      else
+	fclose (id);
       endif
-      fclose (id);
       mode = strcat (mode, "b");
       [id, err] = fopen (nm, mode, arch);
       if (id < 0)
-      	status = 0; break;
+	printf ("open failed: %s (%s, %s): %s\n", nm, mode, arch, err);
+      	status = 0;
+	break;
+      else
+	fclose (id);
       endif
-      fclose (id);
     endfor
     if (status == 0)
       break;
     endif
   endfor
   if (status == 0)
     break;
   endif
