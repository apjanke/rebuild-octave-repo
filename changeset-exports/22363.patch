# HG changeset patch
# User Rik <rik@octave.org>
# Date 1471904519 25200
#      Mon Aug 22 15:21:59 2016 -0700
# Node ID 0ca341841198dc70552cfc86cf42328a90f8224e
# Parent  f3ce0015dd422409008449feb37633a95d4233e6
Implement "boxstyle" graphics property.

* NEWS: Announce new feature.

* gl-render.cc (draw_axes_boxes): Get graphics property "boxstyle" and
check setting before drawing front planes in a 3-D view.

* box.m: Add %!demo blocks for testing.

diff --git a/NEWS b/NEWS
--- a/NEWS
+++ b/NEWS
@@ -103,16 +103,20 @@ Summary of important user-visible change
     which controls the default appearance of text created with
     xlabel(), ylabel(), or zlabel().
 
  ** The graphics property "box" for axes now defaults to "off".
     To obtain equivalent plots to previous versions of Octave use
       set (0, "DefaultAxesBox", "off");
     in your .octaverc file.
 
+ ** The graphics property "boxstyle" has been implemented.  The default
+    is "back" which draws only the back planes in a 3-D view.  If the
+    option is "full" then all planes are drawn.
+
  ** The graphics property "erasemode" has been hidden, and will
     eventually be removed.  This property has also been removed
     from Matlab, and was never implemented in Octave.
 
  ** The graphics property "graphicssmothing" for figures now controls
     whether anti-aliasing will be used for lines.  The default is "on".
 
  ** The value "zero" for the axes properties "xaxislocation" and
diff --git a/libinterp/corefcn/gl-render.cc b/libinterp/corefcn/gl-render.cc
--- a/libinterp/corefcn/gl-render.cc
+++ b/libinterp/corefcn/gl-render.cc
@@ -1172,16 +1172,17 @@ namespace octave
 #if defined (HAVE_OPENGL)
 
     if (! props.is_visible ())
       return;
 
     bool xySym = props.get_xySym ();
     bool layer2Dtop = props.get_layer2Dtop ();
     bool is2d = props.get_is2D ();
+    bool boxFull = (props.get_boxstyle () == "full");
     double xPlane = props.get_xPlane ();
     double yPlane = props.get_yPlane ();
     double zPlane = props.get_zPlane ();
     double xPlaneN = props.get_xPlaneN ();
     double yPlaneN = props.get_yPlaneN ();
     double zPlaneN = props.get_zPlaneN ();
     double xpTick = props.get_xpTick ();
     double ypTick = props.get_ypTick ();
@@ -1209,18 +1210,21 @@ namespace octave
     if (props.is_box ())
       {
         glVertex3d (xPlaneN, ypTickN, zpTick);
         glVertex3d (xPlane, ypTickN, zpTick);
         if (! is2d)
           {
             glVertex3d (xPlaneN, ypTickN, zpTickN);
             glVertex3d (xPlane, ypTickN, zpTickN);
-            glVertex3d (xPlaneN, ypTick, zpTickN);
-            glVertex3d (xPlane, ypTick, zpTickN);
+            if (boxFull)
+              {
+                glVertex3d (xPlaneN, ypTick, zpTickN);
+                glVertex3d (xPlane, ypTick, zpTickN);
+              }
           }
       }
 
     // Y box
     set_color (props.get_ycolor_rgb ());
     glVertex3d (xpTick, yPlaneN, zpTick);
     glVertex3d (xpTick, yPlane, zpTick);
 
@@ -1228,18 +1232,21 @@ namespace octave
       {
         glVertex3d (xpTickN, yPlaneN, zpTick);
         glVertex3d (xpTickN, yPlane, zpTick);
 
         if (! is2d)
           {
             glVertex3d (xpTickN, yPlaneN, zpTickN);
             glVertex3d (xpTickN, yPlane, zpTickN);
-            glVertex3d (xpTick, yPlaneN, zpTickN);
-            glVertex3d (xpTick, yPlane, zpTickN);
+            if (boxFull)
+              {
+                glVertex3d (xpTick, yPlaneN, zpTickN);
+                glVertex3d (xpTick, yPlane, zpTickN);
+              }
           }
       }
 
     // Z box
     if (! is2d)
       {
         set_color (props.get_zcolor_rgb ());
 
@@ -1265,18 +1272,21 @@ namespace octave
                 glVertex3d (xPlane, yPlaneN, zPlane);
               }
             else
               {
                 glVertex3d (xPlaneN, yPlane, zPlaneN);
                 glVertex3d (xPlaneN, yPlane, zPlane);
               }
 
-            glVertex3d (xPlaneN, yPlaneN, zPlaneN);
-            glVertex3d (xPlaneN, yPlaneN, zPlane);
+            if (boxFull)
+              {
+                glVertex3d (xPlaneN, yPlaneN, zPlaneN);
+                glVertex3d (xPlaneN, yPlaneN, zPlane);
+              }
           }
       }
 
     glEnd ();
 
 #else
 
     octave_unused_parameter (props);
diff --git a/scripts/plot/appearance/box.m b/scripts/plot/appearance/box.m
--- a/scripts/plot/appearance/box.m
+++ b/scripts/plot/appearance/box.m
@@ -64,8 +64,44 @@ function box (varargin)
   else
     print_usage ();
   endif
 
   set (hax, "box", box_state);
 
 endfunction
 
+
+%!demo
+%! clf;
+%! plot (1:10, "o-");
+%! box off;
+%! title ("box off");
+
+%!demo
+%! clf;
+%! plot (1:10, "o-");
+%! box on;
+%! title ("box on");
+
+%!demo
+%! clf;
+%! z = [0:0.05:5];
+%! plot3 (cos (2*pi*z), sin (2*pi*z), z);
+%! box off;
+%! title ("box off");
+
+%!demo
+%! clf;
+%! z = [0:0.05:5];
+%! plot3 (cos (2*pi*z), sin (2*pi*z), z);
+%! box on;
+%! set (gca, "boxstyle", "back");
+%! title ({"box on", 'boxstyle = "back"'});
+
+%!demo
+%! clf;
+%! z = [0:0.05:5];
+%! plot3 (cos (2*pi*z), sin (2*pi*z), z);
+%! box on;
+%! set (gca, "boxstyle", "full");
+%! title ({"box on", 'boxstyle = "full"'});
+
