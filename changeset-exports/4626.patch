# HG changeset patch
# User jwe
# Date 1068942787 0
#      Sun Nov 16 00:33:07 2003 +0000
# Node ID 1ba089061bfe8f8bbaf8c5c4df455647d3de760e
# Parent  87c01a296263b9ff6f76f03c8ce3b0c787b5886b
[project @ 2003-11-16 00:33:07 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,18 @@
+2003-11-15  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* Makeconf.in (WARN_CFLAGS, WARN_CXXFLAGS): Substitute them.
+	(ALL_CFLAGS, BUG_CFLAGS): Add $(WARN_CFLAGS).
+	(ALL_CXXFLAGS, BUG_CXXFLAGS): Add $(WARN_CXXFLAGS).
+	(UGLY_ALL_CXXFLAGS): Delete.
+
+	* configure.in: Add -Wall and -Wshadow to WARN_CFLAGS and
+	WARN_CXXFLAGS instead of CFLAGS and CXXFLAGS.
+
 2003-11-12  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* configure.in: If we need alloca, then also include it in LIBGLOB.
 
 2003-11-10  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* configure.in: Preserve CFLAGS and CXXFLAGS before doing anything.
 	Maybe add -Wshadow to CFLAGS and CXXFLAGS.
diff --git a/Makeconf.in b/Makeconf.in
--- a/Makeconf.in
+++ b/Makeconf.in
@@ -61,17 +61,17 @@ DEFAULT_PAGER = @DEFAULT_PAGER@
 ENABLE_DYNAMIC_LINKING = @ENABLE_DYNAMIC_LINKING@
 
 STATIC_LIBS = @STATIC_LIBS@
 
 SHARED_LIBS = @SHARED_LIBS@
 SHLEXT = @SHLEXT@
 SHLEXT_VER = @SHLEXT_VER@
 SHLLIB = @SHLLIB@
-SHLLIB_VER = @SHLLIB_VER@
+SHLLIB_VER = @SHLLIB_VvER@
 SHLBIN = @SHLBIN@
 SHLBIN_VER = @SHLBIN_VER@
 SHLLINKEXT=
 
 INCLUDE_LINK_DEPS = @INCLUDE_LINK_DEPS@
 
 LIBEXT = a
 
@@ -117,34 +117,36 @@ DEFS = @DEFS@
 
 UGLY_DEFS = @UGLY_DEFS@
 
 CC = @CC@
 CC_VERSION = @CC_VERSION@
 CFLAGS = @CFLAGS@
 CPICFLAG = @CPICFLAG@
 XTRA_CFLAGS = @XTRA_CFLAGS@
-ALL_CFLAGS = $(INCFLAGS) $(DEFS) $(XTRA_CFLAGS) $(CFLAGS)
-BUG_CFLAGS = $(DEFS) $(XTRA_CFLAGS) $(CFLAGS)
+WARN_CFLAGS = @WARN_CFLAGS@
+ALL_CFLAGS = $(INCFLAGS) $(DEFS) $(XTRA_CFLAGS) $(WARN_CFLAGS) $(CFLAGS)
+BUG_CFLAGS = $(DEFS) $(XTRA_CFLAGS) $(WARN_CFLAGS) $(CFLAGS)
 
 BUILD_CC = @BUILD_CC@
 BUILD_CFLAGS = @BUILD_CFLAGS@
 
 DEPEND_FLAGS = @DEPEND_FLAGS@
 DEPEND_EXTRA_SED_PATTERN = @DEPEND_EXTRA_SED_PATTERN@
 
 CXX = @CXX@
 CXX_VERSION = @CXX_VERSION@
 CXXCPP = @CXXCPP@
 CXXFLAGS = @CXXFLAGS@
 CXXPICFLAG = @CXXPICFLAG@
 XTRA_CXXFLAGS = @XTRA_CXXFLAGS@
-ALL_CXXFLAGS = $(INCFLAGS) $(DEFS) $(XTRA_CXXFLAGS) $(CXXFLAGS)
-UGLY_ALL_CXXFLAGS = $(INCFLAGS) $(UGLY_DEFS) $(XTRA_CXXFLAGS) $(CXXFLAGS)
-BUG_CXXFLAGS = $(DEFS) $(XTRA_CXXFLAGS) $(CXXFLAGS)
+WARN_CXXFLAGS = @WARN_CXXFLAGS@
+ALL_CXXFLAGS = \
+  $(INCFLAGS) $(DEFS) $(XTRA_CXXFLAGS) $(WARN_CXXFLAGS) $(CXXFLAGS)
+BUG_CXXFLAGS = $(DEFS) $(XTRA_CXXFLAGS) $(WARN_CXXFLAGS) $(CXXFLAGS)
 
 BUILD_CXX = @BUILD_CXX@
 BUILD_CXXFLAGS = @BUILD_CXXFLAGS@
 
 CPPFLAGS = @CPPFLAGS@
 
 LD_CXX = @LD_CXX@
 LDFLAGS = @LDFLAGS@
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -24,17 +24,17 @@ dnl Copyright (C) 1996, 1997 John W. Eat
 ### Preserve CFLAGS and CXXFLAGS from the environment before doing
 ### anything else because we don't know which macros might call
 ### AC_PROG_CC or AC_PROG_CXX.
 
 EXTERN_CFLAGS="$CFLAGS"
 EXTERN_CXXFLAGS="$CXXFLAGS"
 
 AC_INIT
-AC_REVISION($Revision: 1.439 $)
+AC_REVISION($Revision: 1.440 $)
 AC_PREREQ(2.57)
 AC_CONFIG_SRCDIR([src/octave.cc])
 AC_CONFIG_HEADER(config.h)
 
 AC_DEFINE(OCTAVE_SOURCE, 1, [Define if this is Octave.])
   
 OCTAVE_HOST_TYPE
 
@@ -1281,23 +1281,31 @@ case "$canonical_host_type" in
 esac
 AC_MSG_RESULT([defining UGLY_DEFS to be $UGLY_DEFS])
 AC_SUBST(UGLY_DEFS)
 
 ### Maybe add -Wall and -Wshadow to compiler flags now that we're
 ### done feature testing. 
 
 if test -z "$EXTERN_CFLAGS"; then
-  OCTAVE_CC_FLAG(-Wall)
-  OCTAVE_CC_FLAG(-Wshadow)
+  OCTAVE_CC_FLAG(-Wall, [
+	WARN_CFLAGS="$WARN_CFLAGS -Wall";
+	AC_MSG_RESULT([adding -Wall to WARN_CFLAGS])])
+  OCTAVE_CC_FLAG(-Wshadow, [
+	WARN_CFLAGS="$WARN_CFLAGS -Wshadow";
+	AC_MSG_RESULT([adding -Wshadow to WARN_CFLAGS])])
 fi
 
 if test -z "$EXTERN_CXXFLAGS"; then
-  OCTAVE_CXX_FLAG(-Wall)
-  OCTAVE_CXX_FLAG(-Wshadow)
+  OCTAVE_CXX_FLAG(-Wall, [
+    WARN_CXXFLAGS="$WARN_CXXFLAGS -Wall";
+    AC_MSG_RESULT([adding -Wall to WARN_CXXFLAGS])])
+  OCTAVE_CXX_FLAG(-Wshadow, [
+    WARN_CXXFLAGS="$WARN_CXXFLAGS -Wshadow";
+    AC_MSG_RESULT([adding -Wshadow to WARN_CXXFLAGS])])
 fi
 
 ### Someday, maybe include -ansi and even -pedantic in this list...
 
 GCC_PICKY_FLAGS="-Wcast-align -Wcast-qual -Wid-clash-31 \
  -Winline -Wmissing-prototypes -Wnested-externs -Wpointer-arith \
  -Wstrict-prototypes -Wwrite-strings"
 
@@ -1305,26 +1313,33 @@ GXX_PICKY_FLAGS="$GCC_PICKY_FLAGS -Weffc
 
 AC_ARG_ENABLE(picky-flags,
   [  --enable-picky-flags    add picky options to CFLAGS, CXXFLAGS, FFLAGS],
   [if test "$enableval" = no; then
      true
    elif test "$enableval" = yes; then
      if test -z "$EXTERN_CFLAGS"; then
        for flag in $GCC_PICKY_FLAGS; do
-	 OCTAVE_CC_FLAG($flag)
+	 OCTAVE_CC_FLAG($flag, [
+	   WARN_CFLAGS="$WARN_CFLAGS $flag";
+	   AC_MSG_RESULT([adding $flag to WARN_CFLAGS])])
        done
      fi
      if test -z "$EXTERN_CXXFLAGS"; then
        for flag in $GXX_PICKY_FLAGS; do
-	 OCTAVE_CXX_FLAG($flag)
+	 OCTAVE_CXX_FLAG($flag, [
+	   WARN_CXXFLAGS="$WARN_CXXFLAGS $flag";
+	   AC_MSG_RESULT([adding $flag to WARN_CXXFLAGS])])
        done
      fi
    fi], [])
 
+AC_SUBST(WARN_CFLAGS)
+AC_SUBST(WARN_CXXFLAGS)
+
 ### Run configure in subdirectories.
 
 export CC
 export CXX
 export F77
 
 AC_CONFIG_SUBDIRS(scripts)
 
@@ -1461,18 +1476,18 @@ else
 fi
 
 AC_MSG_RESULT([
 
 Octave is now configured for $canonical_host_type
 
   Source directory:     $srcdir
   Installation prefix:  $prefix
-  C compiler:           $CC $XTRA_CFLAGS $CFLAGS
-  C++ compiler:         $CXX $XTRA_CXXFLAGS $CXXFLAGS
+  C compiler:           $CC $XTRA_CFLAGS $WARN_CFLAGS $CFLAGS
+  C++ compiler:         $CXX $XTRA_CXXFLAGS $WARN_CXXFLAGS $CXXFLAGS
   Fortran compiler:     $FORT
   Fortran libraries:    $FLIBS
   BLAS libraries:       $BLAS_LIBS
   FFTW libraries:       $FFTW_LIBS
   HDF5 libraries:       $HDF5_LIBS
   MPI libraries:        $MPI_LIBS
   LIBS:                 $LIBS
   Default pager:        $DEFAULT_PAGER
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,24 +1,27 @@
 2003-11-15  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* version.h (OCTAVE_VERSION): Now 2.1.51.
+	(OCTAVE_API_VERSION): Now api-v2.
+
+	* version.h (OCTAVE_BUGS_STATEMENT): Also tell people to look at
+	http://www.octave.org/bugs.html.
+
 	* oct-map.cc (Octave_map::assign): Use resize, not resize and fill.
 	* ov-typeinfo.cc (octave_value_typeinfo::do_register_type): Likewise.
 
 	* Cell.cc (Cell::Cell): Pass dim_vector to resize instead of two ints.
 
 2003-11-14  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* Makefile.in (stamp-liboctave-prereq): New target.
 	($(DEF_FILES), $(MAKEDEPS)): Depend on it.	
 	(distclean): Remove it.
 
-	* version.h (OCTAVE_VERSION): Now 2.1.51.
-	(OCTAVE_API_VERSION): Now api-v2.
-
 	* parse.y (cancel_obj_idx): New rule.
 	(postfix_expr, prefix_expr): Use begin_obj_idx after every
 	postfix_expr on RHS.  Use cancel_obj_idx as soon as possible for
 	cases where we are not working on an index expression.
 
 	* lex.l (maybe_unput_comma, handle_close_bracket):
 	Don't insert comma if we are looking at an object index and the
 	closest nesting level is a brace.
diff --git a/src/version.h b/src/version.h
--- a/src/version.h
+++ b/src/version.h
@@ -40,17 +40,18 @@ Software Foundation, 59 Temple Place - S
   "There is ABSOLUTELY NO WARRANTY; not even for MERCHANTIBILITY or\n\
 FITNESS FOR A PARTICULAR PURPOSE."
 
 #define OCTAVE_CONTRIB_STATEMENT \
   "Please contribute if you find this software useful.\n\
 For more information, visit http://www.octave.org/help-wanted.html"
 
 #define OCTAVE_BUGS_STATEMENT \
-  "Report bugs to <bug-octave@bevo.che.wisc.edu>."
+  "Report bugs to <bug-octave@bevo.che.wisc.edu> (but first, please read\n\
+http://www.octave.org/bugs.html to learn how to write a helpful report)."
 
 #define OCTAVE_NAME_VERSION_AND_COPYRIGHT \
   OCTAVE_NAME_AND_VERSION ".\n" \
   OCTAVE_COPYRIGHT
 
 #define OCTAVE_NAME_VERSION_COPYRIGHT_COPYING_AND_WARRANTY \
   OCTAVE_NAME_VERSION_AND_COPYRIGHT "\n" \
   OCTAVE_COPYING_STATEMENT "\n" \
