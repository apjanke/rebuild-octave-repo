# HG changeset patch
# User jwe
# Date 823347889 0
#      Sat Feb 03 11:44:49 1996 +0000
# Node ID dca09b7668160d8008c771f8676974f6373c8d74
# Parent  88c5728ae7aea6bbed2e72e0af717550769784b9
[project @ 1996-02-03 11:44:20 by jwe]

diff --git a/liboctave/Makefile.in b/liboctave/Makefile.in
--- a/liboctave/Makefile.in
+++ b/liboctave/Makefile.in
@@ -22,19 +22,19 @@ MATRIX_INC := Array.h Array-idx.h MArray
 	mx-defs.h mx-ext.h CColVector.h CDiagMatrix.h CMatrix.h \
 	CRowVector.h CmplxAEPBAL.h CmplxCHOL.h CmplxDET.h CmplxHESS.h \
 	CmplxLU.h CmplxQR.h CmplxQRP.h CmplxSCHUR.h CmplxSVD.h EIG.h \
 	chMatrix.h \
 	dColVector.h dDiagMatrix.h dMatrix.h dRowVector.h dbleAEPBAL.h \
 	dbleCHOL.h dbleDET.h dbleGEPBAL.h dbleHESS.h dbleLU.h dbleQR.h \
 	dbleQRP.h dbleSCHUR.h dbleSVD.h
 
-INCLUDES := Bounds.h CollocWt.h DAE.h DAEFunc.h FEGrid.h FSQP.h \
-	LinConst.h LP.h LPsolve.h NLConst.h NLEqn.h NLFunc.h NLP.h \
-	NPSOL.h ODE.h ODEFunc.h Objective.h QP.h QPSOL.h Quad.h \
+INCLUDES := Bounds.h CollocWt.h DAE.h DAEFunc.h DASSL.h FEGrid.h FSQP.h \
+	LinConst.h LP.h LPsolve.h LSODE.h NLConst.h NLEqn.h NLFunc.h \
+	NLP.h NPSOL.h ODE.h ODEFunc.h Objective.h QP.h QPSOL.h Quad.h \
 	Range.h base-de.h base-min.h cmd-hist.h dir-ops.h file-ops.h \
 	f77-uscore.h getopt.h idx-vector.h lo-error.h oct-cmplx.h \
 	oct-glob.h oct-math.h oct-term.h pathsearch.h prog-args.h \
 	statdefs.h str-vec.h sun-utils.h sysdir.h \
 	$(MATRIX_INC)
 
 TEMPLATE_SRC := Array.cc MArray.cc
 
@@ -45,23 +45,23 @@ TI_SRC := Array-C.cc Array-ch.cc Array-i
 MATRIX_SRC := Array-ext.cc CColVector.cc CDiagMatrix.cc CMatrix.cc \
 	CRowVector.cc CmplxAEPBAL.cc CmplxCHOL.cc CmplxDET.cc \
 	CmplxHESS.cc CmplxLU.cc CmplxQR.cc CmplxQRP.cc CmplxSCHUR.cc \
 	CmplxSVD.cc EIG.cc chMatrix.cc dColVector.cc dDiagMatrix.cc \
 	dMatrix.cc dRowVector.cc dbleAEPBAL.cc dbleCHOL.cc \
 	dbleDET.cc dbleGEPBAL.cc dbleHESS.cc dbleLU.cc dbleQR.cc \
 	dbleQRP.cc dbleSCHUR.cc dbleSVD.cc
 
-SOURCES := Bounds.cc CollocWt.cc DAE.cc FEGrid.cc FSQP.cc LinConst.cc \
-	LPsolve.cc NLEqn.cc NPSOL.cc ODE.cc QPSOL.cc Quad.cc Range.cc \
-	acosh.c asinh.c atanh.c cmd-hist.cc dir-ops.cc erf.c erfc.c \
-	file-ops.cc filemode.c gamma.c getopt.c getopt1.c idx-vector.cc \
-	lo-error.cc lgamma.c mkdir.c oct-glob.cc oct-term.cc \
-	pathsearch.cc prog-args.cc rename.c rmdir.c str-vec.cc \
-	sun-utils.cc tempname.c tempnam.c \
+SOURCES := Bounds.cc CollocWt.cc DAE.cc DASSL.cc FEGrid.cc FSQP.cc \
+	LinConst.cc LPsolve.cc LSODE.cc NLEqn.cc NPSOL.cc QPSOL.cc \
+	Quad.cc Range.cc acosh.c asinh.c atanh.c cmd-hist.cc \
+	dir-ops.cc erf.c erfc.c file-ops.cc filemode.c gamma.c \
+	getopt.c getopt1.c idx-vector.cc lo-error.cc lgamma.c \
+	mkdir.c oct-glob.cc oct-term.cc pathsearch.cc prog-args.cc \
+	rename.c rmdir.c str-vec.cc sun-utils.cc tempname.c tempnam.c \
 	$(TEMPLATE_SRC) \
 	$(TI_SRC) \
 	$(MATRIX_SRC)
 
 EXTRAS := mx-inlines.cc
 
 DISTFILES := Makefile.in safe-xstat.cin safe-xstat.hin \
 	$(SOURCES) $(INCLUDES) $(EXTRAS)
diff --git a/liboctave/ODEFunc.h b/liboctave/ODEFunc.h
--- a/liboctave/ODEFunc.h
+++ b/liboctave/ODEFunc.h
@@ -1,12 +1,12 @@
 // ODEFunc.h                                             -*- C++ -*-
 /*
 
-Copyright (C) 1992, 1993, 1994, 1995 John W. Eaton
+Copyright (C) 1996 John W. Eaton
 
 This file is part of Octave.
 
 Octave is free software; you can redistribute it and/or modify it
 under the terms of the GNU General Public License as published by the
 Free Software Foundation; either version 2, or (at your option) any
 later version.
 
@@ -30,44 +30,34 @@ class ColumnVector;
 class ODEFunc
 {
 public:
 
   typedef ColumnVector (*ODERHSFunc) (const ColumnVector&, double);
   typedef Matrix (*ODEJacFunc) (const ColumnVector&, double);
 
   ODEFunc (void)
-    {
-      fun = 0;
-      jac = 0;
-    }
+    : fun (0), jac (0) { }
 
   ODEFunc (ODERHSFunc f)
-    {
-      fun = f;
-      jac = 0;
-    }
+    : fun (f), jac (0) { }
 
   ODEFunc (ODERHSFunc f, ODEJacFunc j)
-    {
-      fun = f;
-      jac = j;
-    }
+    : fun (f), jac (j) { }
 
   ODEFunc (const ODEFunc& a)
-    {
-      fun = a.function ();
-      jac = a.jacobian_function ();
-    }
+    : fun (a.fun), jac (a.jac) { }
 
   ODEFunc& operator = (const ODEFunc& a)
     {
-      fun = a.function ();
-      jac = a.jacobian_function ();
-
+      if (this != &a)
+	{
+	  fun = a.fun;
+	  jac = a.jac;
+	}
       return *this;
     }
 
   ODERHSFunc function (void) const { return fun; }
 
   ODEFunc& set_function (ODERHSFunc f)
     {
       fun = f;
