# HG changeset patch
# User Rik <rik@octave.org>
# Date 1380306292 25200
#      Fri Sep 27 11:24:52 2013 -0700
# Node ID 1ccff59592f0b7299813173d2becc4e7d6b3e9b3
# Parent  3dcd7fb9945d0cf28f015df5be9b4f51b82ba5ce
tetramesh.m: Overhaul function.

* scripts/plot/tetramesh.m: Call newplot() before adding patches.
Set FaceAlpha property to 0.9 (for gnuplot which supports transparency).
Set 3-D viewpoint and turn plot box off.  Rename variable colmap to cmap.

diff --git a/scripts/plot/tetramesh.m b/scripts/plot/tetramesh.m
--- a/scripts/plot/tetramesh.m
+++ b/scripts/plot/tetramesh.m
@@ -55,56 +55,64 @@ function h = tetramesh (varargin)
   if (length (reg) < 2 || length (reg) > 3)
     print_usage ();
   endif
 
   T = reg{1};
   X = reg{2};
 
   if (! ismatrix (T) || columns (T) != 4)
-    error ("tetramesh: T must be a n-by-4 matrix");
-  endif
-  if (! ismatrix (X) || columns (X) != 3)
-    error ("tetramesh: X must be a n-by-3 matrix");
+    error ("tetramesh: T must be an n-by-4 matrix");
+  elseif (! ismatrix (X) || columns (X) != 3)
+    error ("tetramesh: X must be an n-by-3 matrix");
   endif
 
   size_T = rows (T);
-  colmap = colormap ();
+  cmap = colormap ();
   
   if (length (reg) < 3)
-    size_colmap = rows (colmap);
-    C = mod ((1:size_T)' - 1, size_colmap) + 1;
-    if (size_T < size_colmap && size_T > 1) 
+    size_cmap = rows (cmap);
+    C = mod ((1:size_T)' - 1, size_cmap) + 1;
+    if (size_T < size_cmap && size_T > 1) 
       ## expand to the available range of colors
-      C = floor ((C - 1) * (size_colmap - 1) / (size_T - 1)) + 1;
+      C = floor ((C - 1) * (size_cmap - 1) / (size_T - 1)) + 1;
     endif
   else
     C = reg{3};
     if (! isvector (C) || size_T != length (C))
       error ("tetramesh: C must be a vector of the same length as T");
     endif
   endif
 
-  h = zeros (1, size_T);
+  hax = newplot ();
+
+  hvec = zeros (size_T, 1);
   if (strcmp (graphics_toolkit (), "gnuplot"))
-    ## tiny reduction of the tetrahedron size to help gnuplot by
+    ## Tiny reduction of the tetrahedron size to help gnuplot by
     ## avoiding identical faces with different colors
     for i = 1:size_T
       [th, p] = __shrink__ ([1 2 3 4], X(T(i, :), :), 1 - 1e-7);
       hvec(i) = patch ("Faces", th, "Vertices", p, 
-                       "FaceColor", colmap(C(i), :), prop{:});
+                       "FaceColor", cmap(C(i), :), "FaceAlpha", 0.9,
+                       prop{:});
     endfor
   else
+    ## FLTK does not support FaceAlpha.
     for i = 1:size_T
       th = [1 2 3; 2 3 4; 3 4 1; 4 1 2];
       hvec(i) = patch ("Faces", th, "Vertices", X(T(i, :), :), 
-                       "FaceColor", colmap(C(i), :), prop{:});
+                       "FaceColor", cmap(C(i), :), "FaceAlpha", 1.0,
+                       prop{:});
     endfor
   endif
 
+  if (! ishold ())
+    set (hax, "view", [-37.5, 30], "box", "off");
+  endif
+
   if (nargout > 0)
     h = hvec;
   endif
 
 endfunction
 
 ## shrink the tetrahedron relative to its center of gravity
 function [tri, p] = __shrink__ (T, X, sf)
@@ -124,25 +132,27 @@ endfunction
 %! z = [z(:); 0];
 %! tetra = delaunay3 (x, y, z);
 %! X = [x(:) y(:) z(:)];
 %! colormap (jet (64));
 %! h = tetramesh (tetra, X);
 %! set (h(1:2:end), 'Visible', 'off');
 %! axis equal;
 %! view (30, 20);
-%! title ('Using jet (64), every other tetrahedron invisible');
+%! title ({'tetramesh() plot', ...
+%!         'colormap = jet (64), every other tetrahedron invisible'});
 
 %!demo
 %! clf;
 %! d = [-1 1];
 %! [x,y,z] = meshgrid (d, d, d);
 %! x = [x(:); 0];
 %! y = [y(:); 0];
 %! z = [z(:); 0];
 %! tetra = delaunay3 (x, y, z);
 %! X = [x(:) y(:) z(:)];
 %! colormap (gray (256));
 %! tetramesh (tetra, X, 21:20:241, 'EdgeColor', 'w');
 %! axis equal;
 %! view (30, 20);
-%! title ('Using gray (256) and white edges');
+%! title ({'tetramesh() plot', ...
+%!         'colormap = gray (256) with white edges'});
 
