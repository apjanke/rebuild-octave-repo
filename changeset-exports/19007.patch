# HG changeset patch
# User Philip Nienhuis <prnienhuis@users.sf.net>
# Date 1404478438 -7200
#      Fri Jul 04 14:53:58 2014 +0200
# Node ID d69358d7f9bb21097726f40b0d894da2f7aede48
# Parent  96751a74bbbb31f15597c48687d8465dc2036f2d
textscan.m: Avoid conjugate transpose for complex data and empty format string (bug #42528)

diff --git a/scripts/io/textscan.m b/scripts/io/textscan.m
--- a/scripts/io/textscan.m
+++ b/scripts/io/textscan.m
@@ -324,17 +324,17 @@ function [C, position] = textscan (fid, 
         else
           ## Otherwise return supplied emptyvalue. Pick last occurrence
           C(1) = [C{1}; repmat(args{emptv(end)+1}, ncols - pad, 1)];
         endif
       endif
       ## Compute nr. of rows
       nrows = floor (numel (C{1}) / ncols);
       ## Reshape C; watch out, transpose needed
-      C(1) = reshape (C{1}, ncols, numel (C{1}) / ncols)';
+      C(1) = reshape (C{1}, ncols, numel (C{1}) / ncols).';
       ## Distribute columns over C and wipe cols 2:end of C{1}
       for ii=2:ncols
         C(ii) = C{1}(:, ii);
       endfor
       C{1} = C{1}(:, 1);
     endif 
   endif
 
@@ -672,8 +672,12 @@ endfunction
 %!test
 %! assert (textscan (",NaN", "", "delimiter", "," ,"emptyValue" ,Inf), {Inf, NaN});
 
 %% Bug #42343-2, test padding with supplied emptyvalue (done by textscan.m)
 %!test
 %! a = textscan (",1,,4\nInf,  ,NaN", "", "delimiter", ",", "emptyvalue", -10);
 %! assert (cell2mat (a), [-10, 1, -10, 4; Inf, -10, NaN, -10]);
 
+%% Bug #42528
+%!test
+%! assert (textscan ("1i", ""){1},  0+1i);
+%! assert (cell2mat (textscan ("3, 2-4i, NaN\n -i, 1, 23.4+2.2i", "")), [3+0i, 2-4i, NaN+0i; 0-i,  1+0i, 23.4+2.2i]);
