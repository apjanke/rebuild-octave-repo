# HG changeset patch
# User Rik <rik@octave.org>
# Date 1489213759 28800
#      Fri Mar 10 22:29:19 2017 -0800
# Node ID 44d51b2b691c47adeaad99ab9973aec29e7f0766
# Parent  c3c26f6a78121bff845f959cbe1e751eaf77e792
dir.m: Add folder entry to output struct for Matlab compatibility (bug #50504).

* dir.m: Add new entry "folder" to docstring.  Add folder to output struct.
Change regexp to return directory, base file name, and extension.
Pre-declare size of output struct array for efficiency.  Use linear indexing
rather than row,column indexing for simplicity.

diff --git a/scripts/miscellaneous/dir.m b/scripts/miscellaneous/dir.m
--- a/scripts/miscellaneous/dir.m
+++ b/scripts/miscellaneous/dir.m
@@ -25,16 +25,19 @@
 ## If @var{directory} is not specified then list the present working directory.
 ##
 ## If a return value is requested, return a structure array with the fields
 ##
 ## @table @asis
 ## @item name
 ## File or directory name.
 ##
+## @item folder
+## Location of file or directory
+## 
 ## @item date
 ## Timestamp of file modification (string value).
 ##
 ## @item bytes
 ## File size in bytes.
 ##
 ## @item isdir
 ## True if name is a directory.
@@ -76,18 +79,17 @@ function retval = dir (directory)
   endif
 
   if (! ischar (directory))
     error ("dir: DIRECTORY argument must be a string");
   endif
 
   ## Prep the retval.
   info = struct (zeros (0, 1),
-                 {"name", "date", "bytes", "isdir", "datenum", "statinfo"});
-
+           {"name", "folder" "date", "bytes", "isdir", "datenum", "statinfo"});
 
   if (strcmp (directory, "*"))
     directory = ".";
   endif
   if (strcmp (directory, "."))
     flst = {"."};
     nf = 1;
   else
@@ -107,42 +109,52 @@ function retval = dir (directory)
       nf = numel (flst);
       flst = strcat ([fn filesep], flst);
     endif
   endif
 
   if (numel (flst) > 0)
 
     fs = regexptranslate ("escape", filesep ("all"));
-    re = sprintf ('(?:^.+[%s])([^%s.]*)([.][^%s]*)?$', fs, fs, fs);
+    re = sprintf ('(^.+[%s])([^%s.]*)([.][^%s]*)?$', fs, fs, fs);
+    last_dir = last_absdir = "";
+    info(nf,1).name = "";  # pre-declare size of struct array
+
     ## Collect results.
     for i = nf:-1:1
       fn = flst{i};
       [st, err, msg] = lstat (fn);
       if (err < 0)
         warning ("dir: 'lstat (%s)' failed: %s", fn, msg);
       else
         ## If we are looking at a link that points to something,
         ## return info about the target of the link, otherwise, return
         ## info about the link itself.
         if (S_ISLNK (st.mode))
-          [xst, err, msg] = stat (fn);
+          [xst, err] = stat (fn);
           if (! err)
             st = xst;
           endif
         endif
-        fn = regexprep (fn, re, '$1$2');
-        info(i,1).name = fn;
+        tmpdir = regexprep (fn, re, '$1');
+        fn = regexprep (fn, re, '$2$3');
+        info(i).name = fn;
+        if (! strcmp (last_dir, tmpdir))
+          ## Caching mechanism to speed up function
+          last_dir = tmpdir;
+          last_absdir = make_absolute_filename (last_dir);
+        endif
+        info(i).folder = last_absdir;
         lt = localtime (st.mtime);
-        info(i,1).date = strftime ("%d-%b-%Y %T", lt);
-        info(i,1).bytes = st.size;
-        info(i,1).isdir = S_ISDIR (st.mode);
-        info(i,1).datenum = [lt.year + 1900, lt.mon + 1, lt.mday, ...
+        info(i).date = strftime ("%d-%b-%Y %T", lt);
+        info(i).bytes = st.size;
+        info(i).isdir = S_ISDIR (st.mode);
+        info(i).datenum = [lt.year + 1900, lt.mon + 1, lt.mday, ...
                              lt.hour, lt.min, lt.sec];
-        info(i,1).statinfo = st;
+        info(i).statinfo = st;
       endif
     endfor
     ## A lot of gymnastics in order to call datenum just once.  2x speed up.
     dvec = [info.datenum]([[1:6:end]', [2:6:end]', [3:6:end]', ...
                            [4:6:end]', [5:6:end]', [6:6:end]']);
     dnum = datenum (dvec);
     ctmp = mat2cell (dnum, ones (nf,1), 1);
     [info.datenum] = ctmp{:};
