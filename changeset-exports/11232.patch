# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1289440914 18000
#      Wed Nov 10 21:01:54 2010 -0500
# Node ID 88e4ea8b2c19bc8956fe530c404b076fadd070e1
# Parent  2f29b765c0ef7dfb7c3e0d8d9a1a7c142cb79928
eliminate special cases for NeXT systems

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,12 @@
+2010-11-10  John W. Eaton  <jwe@octave.org>
+
+	* configure.ac: Eliminate special cases for nextstep.
+
 2010-11-10  John W. Eaton  <jwe@octave.org>
 
 	* configure.ac: Eliminate special checks for SCO systems.
 
 2010-11-10  John W. Eaton  <jwe@octave.org>
 
 	* NEWS: Update deprecated function list with dispatch.
 
diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -506,18 +506,16 @@ AC_ARG_VAR(BUILD_EXEEXT, [build system e
 
 dnl This is bogus.  We shouldn't have to explicitly add libc too!
 dnl Keep this check before the check for the Fortran compiler,
 dnl in case -lm is needed to compile Fortran programs.
 
 ### Look for math library.  If found, this will add -lm to LIBS.
 
 case "$canonical_host_type" in
-  *-*-nextstep*)
-  ;;  
   *-*-linux*)
     AC_CHECK_LIB(m, sin, , , -lc)
   ;;
   *)
     AC_CHECK_LIB(m, sin)
   ;;
 esac
 
@@ -1542,27 +1540,16 @@ AC_LANG_POP(C++)
 
 have_termios_h=no
 AC_CHECK_HEADERS(termios.h, have_termios_h=yes)
 AC_CHECK_HEADERS(termio.h, have_termio_h=yes, have_termio_h=no)
 AC_CHECK_HEADERS(sgtty.h, have_sgtty_h=yes, have_sgtty_h=no)
 AC_CHECK_HEADERS(fnmatch.h, have_fnmatch_h=yes, have_fnmatch_h=no)
 AC_CHECK_HEADERS(conio.h, have_conio_h=yes, have_conio_h=no)
 
-### I'm told that termios.h is broken on NeXT systems.
-
-case "$canonical_host_type" in
-  *-*-nextstep*)
-    if test "$have_termios_h" = yes; then
-      AC_MSG_WARN([Ignoring termios.h on NeXT systems.])
-      have_termios_h=no
-    fi
-  ;;
-esac
-
 if test "$have_termios_h" = yes \
     || test "$have_termio_h" = yes \
     || test "$have_sgtty_h" = yes; then
   true
 else
   AC_MSG_WARN([I couldn't find termios.h, termio.h, or sgtty.h!])
 fi
 
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,12 @@
+2010-11-10  John W. Eaton  <jwe@octave.org>
+
+	* syswait.h: Delete special cases for NeXT systems.
+
 2010-11-10  John W. Eaton  <jwe@octave.org>
 
 	* lo-sysdep.cc (octave_chdir): Delete special case for __EMX__.
 	* oct-env.cc (octave_env::do_make_absolute): Likewise.
 
 2010-11-10  John W. Eaton  <jwe@octave.org>
 
 	* lo-ieee.h: Eliminate special cases for SCO.
diff --git a/liboctave/syswait.h b/liboctave/syswait.h
--- a/liboctave/syswait.h
+++ b/liboctave/syswait.h
@@ -26,44 +26,20 @@ along with Octave; see the file COPYING.
 #ifdef __cplusplus
 extern "C" {
 #endif
 
 /* This mess suggested by the autoconf manual.  */
 
 #include <sys/types.h>
 
-#if defined (NeXT) && ! defined (_POSIX_SOURCE)
-#define HAVE_SYS_WAIT_H
-#endif
-
 #if defined HAVE_SYS_WAIT_H
 #include <sys/wait.h>
 #endif
 
-#if defined (NeXT)
-#define HAVE_WAITPID 1
-#define WAITPID(a, b, c) \
-  wait4 ((a) == -1 ? 0 : (a), (union wait *)(b), c, 0)
-
-/* Use the defaults below.  */
-#undef WIFEXITED
-#undef WEXITSTATUS
-#undef WIFSIGNALLED
-#endif
-
-/* NeXT has sys/wait.h, but it is not compatible with POSIX.1, so we
-   try to define waitpid in terms of wait4.  */
-
-#if defined (NeXT)
-#include <sys/wait.h>
-#define waitpid(a, b, c) \
-  wait4 ((a) == -1 ? 0 : (a), (union wait *)(b), c, 0)
-#endif
-
 #ifndef WIFEXITED
 #define WIFEXITED(stat_val) (((stat_val) & 255) == 0)
 #endif
 
 #ifndef WEXITSTATUS
 #define WEXITSTATUS(stat_val) ((unsigned)(stat_val) >> 8)
 #endif
 
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2010-11-10  John W. Eaton  <jwe@octave.org>
+
+	* sysdep.cc (sysdep_init): Eliminate special case for NeXT systems.
+	(malloc_handler, NeXT_init): Delete.
+
 2010-11-10  John W. Eaton  <jwe@octave.org>
 
 	* sighandlers.cc (MAYBE_ACK_SIGNAL): Delete macro and all uses.
 	(sigchld_handler): Delete special case for __EMX__.
 	* sysdep.cc (sysdep_init): Eliminate special case for __EMX__.
 	(OS2_init, Fextproc): Delete.
 
 2010-11-10  John W. Eaton  <jwe@octave.org>
diff --git a/src/sysdep.cc b/src/sysdep.cc
--- a/src/sysdep.cc
+++ b/src/sysdep.cc
@@ -242,50 +242,25 @@ same_file_internal (const std::string& f
 template std::istream&
 std::operator >> (std::istream&, std::complex<double>&);
 
 template std::string&
 std::string::append (const std::string&, size_t, size_t);
 
 #endif
 
-#if defined (NeXT)
-extern "C"
-{
-  typedef void (*_cplus_fcn_int) (int);
-  extern void (*malloc_error (_cplus_fcn_int)) (int);
-}
-
-static void
-malloc_handler (int code)
-{
-  if (code == 5)
-    warning ("hopefully recoverable malloc error: freeing wild pointer");
-  else
-    panic ("probably irrecoverable malloc error: code %d", code);
-}
-
-static void
-NeXT_init (void)
-{
-  malloc_error (malloc_handler);
-}
-#endif
-
 void
 sysdep_init (void)
 {
 #if defined (__386BSD__) || defined (__FreeBSD__) || defined(__NetBSD__)
   BSD_init ();
 #elif defined (__MINGW32__)
   MINGW_init ();
 #elif defined (_MSC_VER)
   MSVC_init ();
-#elif defined (NeXT)
-  NeXT_init ();
 #endif
 
   octave_ieee_init ();
 }
 
 void
 sysdep_cleanup (void)
 {
