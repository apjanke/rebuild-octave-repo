# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1269411224 -3600
#      Wed Mar 24 07:13:44 2010 +0100
# Node ID 03d0dea2309d797615cac7c5b1d450bb37a20028
# Parent  146e615b667496161f7a94eb3a89f5f54acf5de2
support cells of cells in cell2mat

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2010-03-24  Jaroslav Hajek  <highegg@gmail.com>
+
+	* general/cell2mat.m: Support cells of cells.
+
 2010-03-23  John W. Eaton  <jwe@octave.org>
 
 	* plot/refreshdata.m: Don't use cell2mat on cell array of cell arrays.
 
 2010-03-22  Soren Hauberg  <hauberg@gmail.com>
 
 	* image/gmap40.m, image/hot.m, image/hsv2rgb.m, image/image.m,
 	image/image_viewer.m, image/imfinfo.m, image/imread.m, image/imshow.m,
diff --git a/scripts/general/cell2mat.m b/scripts/general/cell2mat.m
--- a/scripts/general/cell2mat.m
+++ b/scripts/general/cell2mat.m
@@ -15,18 +15,18 @@
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {@var{m} =} cell2mat (@var{c})
 ## Convert the cell array @var{c} into a matrix by concatenating all
 ## elements of @var{c} into a hyperrectangle.  Elements of @var{c} must
-## be numeric, logical or char, and @code{cat} must be able to
-## concatenate them together.
+## be numeric, logical or char matrices, or cell arrays, and @code{cat} 
+## must be able to concatenate them together.
 ## @seealso{mat2cell, num2cell}
 ## @end deftypefn
 
 function m = cell2mat (c)
 
   if (nargin != 1)
     print_usage ();
   endif
@@ -36,19 +36,20 @@ function m = cell2mat (c)
   endif
   
   nb = numel (c);
 
   ## We only want numeric, logical, and char matrices.
   valid = cellfun (@isnumeric, c);
   valid |= cellfun (@islogical, c);
   valid |= cellfun (@ischar, c);
+  validc = cellfun (@iscell, c);
 
-  if (! all (valid))
-    error ("cell2mat: elements must be numeric, char or logical");
+  if (! all (valid(:)) && ! all (validc(:)))
+    error ("cell2mat: wrong type elements or mixed cells and matrices");
   endif
 
   if (nb == 0)
     m = [];
   elseif (ndims (c) == 2)
     ## 2d case optimized
     [nr, nc] = size (c);
     if (nc > nr)
