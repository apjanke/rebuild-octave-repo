# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1235111620 -3600
#      Fri Feb 20 07:33:40 2009 +0100
# Node ID 40ff50ce30520fd223c1331ec9047c9e63ecd7f0
# Parent  352f111b04cedf1c283012692059d6559343505f
ov-base-mat.cc: correctly compute all-scalar index for indexing

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2009-02-20  Jaroslav Hajek  <highegg@gmail.com>
+
+	* ov-base-mat.cc (octave_base_matrix<MT>::do_index_op):
+	Correctly compute all-scalar index.
+
 2009-02-20  John W. Eaton  <jwe@octave.org>
 
 	* ov-base-mat.cc (octave_base_matrix<MT>::assign):
 	Correctly compute all-scalar index.
 
 	* symbtab.cc (symbol_table::stash_dir_name_for_subfunctions):
 	New function.
 	* symtab.h: Provide decl.
diff --git a/src/ov-base-mat.cc b/src/ov-base-mat.cc
--- a/src/ov-base-mat.cc
+++ b/src/ov-base-mat.cc
@@ -200,17 +200,17 @@ octave_base_matrix<MT>::do_index_op (con
           {
             if (scalar_opt)
               {
                 // optimize all scalar indices. Don't construct an index array,
                 // but rather calc a scalar index directly.
                 octave_idx_type k = 1, j = 0;
                 for (octave_idx_type i = 0; i < n_idx; i++)
                   {
-                    j += i * k;
+                    j += idx_vec(i)(0) * k;
                     k *= dv (i);
                   }
                 retval = const_cast<const MT&> (matrix)(j);
               }
             else
               retval = MT (matrix.index (idx_vec, resize_ok));
           }
       }
