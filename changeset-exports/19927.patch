# HG changeset patch
# User Rik <rik@octave.org>
# Date 1426047834 25200
#      Tue Mar 10 21:23:54 2015 -0700
# Node ID 0cc365dada52bb499de2127657f3776a52b5aec2
# Parent  501cbbaafc564e16555a6a4a38207f73011c162b
Allow tar, unpack, and zip to run on Windows with CR/NL EOL.

* tar.m: Don't check for "\n" newline.  Use ostrsplit with "\r\n" to split on
any EOL char.  Use unlink in BIST test, rather than delete, because it will not
generate an error.

* unpack.m: Don't check for "\n" newline.  Use ostrsplit with "\r\n" to split on
any EOL char.

* zip.m: Don't check for "\n" newline.  Use ostrsplit with "\r\n" to split on
any EOL char.  Use unlink in BIST test, rather than delete, because it will not
generate an error.

diff --git a/scripts/miscellaneous/tar.m b/scripts/miscellaneous/tar.m
--- a/scripts/miscellaneous/tar.m
+++ b/scripts/miscellaneous/tar.m
@@ -60,20 +60,17 @@ function filelist = tar (tarfile, files,
 
   [status, output] = system (cmd);
 
   if (status)
     error ("tar: tar exited with status = %d", status);
   endif
 
   if (nargout > 0)
-    if (output(end) == "\n")
-      output(end) = [];
-    endif
-    filelist = ostrsplit (output, "\n");
+    filelist = ostrsplit (output, "\r\n", true);
     filelist = filelist';
   endif
 
 endfunction
 
 
 %!xtest
 %! ## test tar together with untar
@@ -112,19 +109,17 @@ endfunction
 %!   assert (str, "Hello World");
 %!   fid = fopen (fullfile (outdir, fname2), "rt");
 %!   assert (fid >= 0);
 %!   str = fgetl (fid);
 %!   fclose (fid);
 %!   assert (str, "Goodbye World");
 %! unwind_protect_cleanup
 %!   chdir (orig_dir);
-%!   if (exist (tarname))
-%!     delete (tarname);
-%!   endif
+%!   unlink (tarname);
 %!   confirm_recursive_rmdir (false, "local");
 %!   if (exist (dirname))
 %!     rmdir (dirname, "s");
 %!   endif
 %!   if (exist (outdir))
 %!     rmdir (outdir, "s");
 %!   endif
 %! end_unwind_protect
diff --git a/scripts/miscellaneous/unpack.m b/scripts/miscellaneous/unpack.m
--- a/scripts/miscellaneous/unpack.m
+++ b/scripts/miscellaneous/unpack.m
@@ -231,22 +231,18 @@ function filelist = unpack (file, dir = 
   end_unwind_protect
 
   if (status)
     error ("unpack: unarchiving program exited with status: %d\n%s",
            status, output);
   endif
 
   if (nargout > 0 || needmove)
-    ## Trim the last CR if needed.
-    ## FIXME: Will this need to change to a check for "\r\n" for windows?
-    if (output(end) == "\n")
-      output(end) = [];
-    endif
-    files = parsefcn (ostrsplit (output, "\n"))';
+    ## Trim the last CR or NL if needed.
+    files = parsefcn (ostrsplit (output, "\r\n", true))';
 
     ## Move files if necessary.
     if (needmove)
       [st, msg] = movefile (files, cenddir);
       if (! st)
         error ('unpack: unable to move files to "%s": %s', dir, msg);
       endif
 
diff --git a/scripts/miscellaneous/zip.m b/scripts/miscellaneous/zip.m
--- a/scripts/miscellaneous/zip.m
+++ b/scripts/miscellaneous/zip.m
@@ -65,34 +65,31 @@ function filelist = zip (zipfile, files,
   endif
 
   if (nargout > 0)
     cmd = ["unzip -Z -1 " zipfile];
     [status, filelist] = system (cmd);
     if (status)
       error ("zip: zipinfo failed with exit status = %d", status);
     endif
-    if (filelist(end) == "\n")
-      filelist(end) = [];
-    endif
-    filelist = ostrsplit (filelist, "\n");
+    filelist = ostrsplit (filelist, "\r\n", true);
   endif
 
 endfunction
 
 
 %!xtest
 %! ## test zip together with unzip
 %! unwind_protect
-%!   filename = tempname;
+%!   filename = tempname ();
 %!   tmp_var  = pi;
 %!   save (filename, "tmp_var");
-%!   dirname = tempname;
+%!   dirname = tempname ();
 %!   mkdir (dirname);
-%!   zipfile = tempname;
+%!   zipfile = tempname ();
 %!   [~, basename, ext] = fileparts (filename);
 %!   filelist = zip (zipfile, [basename ext], tempdir);
 %!   filelist = filelist{1};
 %!   if (! strcmp (filelist, [basename ext]))
 %!     error ("zip archive does not contain expected name!");
 %!   endif
 %!   if (! exist ([zipfile ".zip"], "file"))
 %!     error ("zip file cannot be found!");
@@ -105,18 +102,18 @@ endfunction
 %!   fid = fopen ([dirname filesep basename ext], "rb");
 %!   assert (fid >= 0);
 %!   new_data = fread (fid);
 %!   fclose (fid);
 %!   if (orig_data != new_data)
 %!     error ("unzipped file not equal to original file!");
 %!   endif
 %! unwind_protect_cleanup
-%!   delete (filename);
-%!   delete ([dirname, filesep, basename, extension]);
+%!   unlink (filename);
+%!   unlink ([dirname, filesep, basename, extension]);
 %!   rmdir (dirname);
 %! end_unwind_protect
 
 ## Test input validation
 %!error zip ()
 %!error zip (1)
 %!error zip (1,2,3,4)
 %!error <ZIPFILE must be a string> zip (1, "foobar")
