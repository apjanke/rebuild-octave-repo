# HG changeset patch
# User Torsten <mttl@mailbox.org>
# Date 1531515525 -7200
#      Fri Jul 13 22:58:45 2018 +0200
# Node ID bd362df6277ceca51f5a21e6a41009bb7e13995e
# Parent  ffc858064239593ddfc43967fdaa5d61d6520aaf
use std::string instead of QString when the latter is not required

* main-window.cc (handle_edit_mfile_request)
* octave-qt-link.cc (do_enter_debugger_event): use std::string for analyzing
  the results from F__which__

diff --git a/libgui/src/main-window.cc b/libgui/src/main-window.cc
--- a/libgui/src/main-window.cc
+++ b/libgui/src/main-window.cc
@@ -1105,30 +1105,28 @@ namespace octave
   {
     interpreter& interp
       = __get_interpreter__ ("main_window::clear_workspace_callback");
 
     // Is it a regular function within the search path? (Call __which__)
     octave_value_list fct = F__which__ (interp, ovl (fname.toStdString ()),0);
     octave_map map = fct(0).map_value ();
 
-    QString type = QString::fromStdString (
-                                           map.contents ("type").data ()[0].string_value ());
-    QString name = QString::fromStdString (
-                                           map.contents ("name").data ()[0].string_value ());
+    std::string type = map.contents ("type").data ()[0].string_value ();
+    std::string name = map.contents ("name").data ()[0].string_value ();
 
     QString message = QString ();
     QString filename = QString ();
 
-    if (type == QString ("built-in function"))
+    if (type == "built-in function")
       {
         // built in function: can't edit
         message = tr ("%1 is a built-in function");
       }
-    else if (type.isEmpty ())
+    else if (type == "")
       {
         // function not known to octave -> try directory of edited file
         // get directory
         QDir dir;
         if (ffile.isEmpty ())
           {
             if (curr_dir.isEmpty ())
               dir = QDir (m_current_directory_combo_box->itemText (0));
@@ -1163,17 +1161,17 @@ namespace octave
           }
       }
 
     if (! message.isEmpty ())
       {
         QMessageBox *msgBox
           = new QMessageBox (QMessageBox::Critical,
                              tr ("Octave Editor"),
-                             message.arg (name),
+                             message.arg (QString::fromStdString (name)),
                              QMessageBox::Ok, this);
 
         msgBox->setWindowModality (Qt::NonModal);
         msgBox->setAttribute (Qt::WA_DeleteOnClose);
         msgBox->show ();
         return;
       }
 
diff --git a/libgui/src/octave-qt-link.cc b/libgui/src/octave-qt-link.cc
--- a/libgui/src/octave-qt-link.cc
+++ b/libgui/src/octave-qt-link.cc
@@ -458,19 +458,18 @@ namespace octave
   void octave_qt_link::do_enter_debugger_event (const std::string& file,
                                                 int line)
   {
     interpreter& interp = __get_interpreter__ (
                                   "octave_qt_link::do_enter_debugger_event");
     octave_value_list fct = F__which__ (interp, ovl (file),0);
     octave_map map = fct(0).map_value ();
 
-    QString type = QString::fromStdString (
-                    map.contents ("type").data ()[0].string_value ());
-    if (type == QString ("command-line function"))
+    std::string type = map.contents ("type").data ()[0].string_value ();
+    if (type == "command-line function")
       return;
 
     do_insert_debugger_pointer (file, line);
 
     emit enter_debugger_signal ();
   }
 
   void octave_qt_link::do_execute_in_debugger_event (const std::string& file,
