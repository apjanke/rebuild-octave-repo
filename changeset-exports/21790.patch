# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1464616307 14400
#      Mon May 30 09:51:47 2016 -0400
# Node ID f625afd1ef5553120f0639d5a12562508f93e2d7
# Parent  6afdf40be5349deb391d97cf3c21e68e31028a44
* gl-render.cc: Remove trailing whitespace; style fixes.

diff --git a/libinterp/corefcn/gl-render.cc b/libinterp/corefcn/gl-render.cc
--- a/libinterp/corefcn/gl-render.cc
+++ b/libinterp/corefcn/gl-render.cc
@@ -2086,20 +2086,20 @@ opengl_renderer::draw_surface (const sur
                     }
                   if (fl_mode > 0)
                     {
                       d = sqrt (n(j-1,i-1,0) * n(j-1,i-1,0)
                                 + n(j-1,i-1,1) * n(j-1,i-1,1)
                                 + n(j-1,i-1,2) * n(j-1,i-1,2));
                       double dir = 1.0;
                       if (bfl_mode > 0)
-                        dir = (n(j-1,i-1,0) * view_vector(0) + 
-                               n(j-1,i-1,1) * view_vector(1) + 
-                               n(j-1,i-1,2) * view_vector(2) < 0) ? 
-                                ((bfl_mode > 1) ? 0.0 : -1.0) : 1.0;
+                        dir = ((n(j-1,i-1,0) * view_vector(0)
+                                + n(j-1,i-1,1) * view_vector(1)
+                                + n(j-1,i-1,2) * view_vector(2) < 0)
+                               ? ((bfl_mode > 1) ? 0.0 : -1.0) : 1.0);
                       glNormal3d (dir * n(j-1,i-1,0)/d,
                                   dir * n(j-1,i-1,1)/d,
                                   dir * n(j-1,i-1,2)/d);
                     }
                   glVertex3d (x(j1,i-1), y(j-1,i1), z(j-1,i-1));
 
                   // Vertex 2
                   if (fc_mode == TEXTURE)
@@ -2128,20 +2128,20 @@ opengl_renderer::draw_surface (const sur
 
                   if (fl_mode == GOURAUD)
                     {
                       d = sqrt (n(j-1,i,0) * n(j-1,i,0)
                                 + n(j-1,i,1) * n(j-1,i,1)
                                 + n(j-1,i,2) * n(j-1,i,2));
                       double dir = 1.0;
                       if (bfl_mode > 0)
-                        dir = (n(j-1,i,0) * view_vector(0) + 
-                               n(j-1,i,1) * view_vector(1) + 
-                               n(j-1,i,2) * view_vector(2) < 0) ? 
-                                ((bfl_mode > 1) ? 0.0 : -1.0) : 1.0;
+                        dir = ((n(j-1,i,0) * view_vector(0)
+                                + n(j-1,i,1) * view_vector(1)
+                                + n(j-1,i,2) * view_vector(2) < 0)
+                               ? ((bfl_mode > 1) ? 0.0 : -1.0) : 1.0);
                       glNormal3d (dir * n(j-1,i,0)/d,
                                   dir * n(j-1,i,1)/d,
                                   dir * n(j-1,i,2)/d);
                     }
 
                   glVertex3d (x(j1,i), y(j-1,i2), z(j-1,i));
 
                   // Vertex 3
@@ -2170,20 +2170,20 @@ opengl_renderer::draw_surface (const sur
                     }
                   if (fl_mode == GOURAUD)
                     {
                       d = sqrt (n(j,i,0) * n(j,i,0)
                                 + n(j,i,1) * n(j,i,1)
                                 + n(j,i,2) * n(j,i,2));
                       double dir = 1.0;
                       if (bfl_mode > 0)
-                        dir = (n(j,i,0) * view_vector(0) + 
-                               n(j,i,1) * view_vector(1) + 
-                               n(j,i,2) * view_vector(2) < 0) ? 
-                                ((bfl_mode > 1) ? 0.0 : -1.0) : 1.0;
+                        dir = ((n(j,i,0) * view_vector(0)
+                                + n(j,i,1) * view_vector(1)
+                                + n(j,i,2) * view_vector(2) < 0)
+                               ? ((bfl_mode > 1) ? 0.0 : -1.0) : 1.0);
                       glNormal3d (dir * n(j,i,0)/d,
                                   dir * n(j,i,1)/d,
                                   dir * n(j,i,2)/d);
                     }
                   glVertex3d (x(j2,i), y(j,i2), z(j,i));
 
                   // Vertex 4
                   if (fc_mode == TEXTURE)
@@ -2211,20 +2211,20 @@ opengl_renderer::draw_surface (const sur
                     }
                   if (fl_mode == GOURAUD)
                     {
                       d = sqrt (n(j,i-1,0) * n(j,i-1,0)
                                 + n(j,i-1,1) * n(j,i-1,1)
                                 + n(j,i-1,2) * n(j,i-1,2));
                       double dir = 1.0;
                       if (bfl_mode > 0)
-                        dir = (n(j,i-1,0) * view_vector(0) + 
-                               n(j,i-1,1) * view_vector(1) + 
-                               n(j,i-1,2) * view_vector(2) < 0) ? 
-                                ((bfl_mode > 1) ? 0.0 : -1.0) : 1.0;
+                        dir = ((n(j,i-1,0) * view_vector(0)
+                                + n(j,i-1,1) * view_vector(1)
+                                + n(j,i-1,2) * view_vector(2) < 0)
+                               ? ((bfl_mode > 1) ? 0.0 : -1.0) : 1.0);
                       glNormal3d (dir * n(j,i-1,0)/d,
                                   dir * n(j,i-1,1)/d,
                                   dir * n(j,i-1,2)/d);
                     }
                   glVertex3d (x(j2,i-1), y(j,i1), z(j,i-1));
 
                   glEnd ();
                 }
@@ -2336,20 +2336,20 @@ opengl_renderer::draw_surface (const sur
                         }
                       if (el_mode > 0)
                         {
                           d = sqrt (n(j-1,i,0) * n(j-1,i,0)
                                     + n(j-1,i,1) * n(j-1,i,1)
                                     + n(j-1,i,2) * n(j-1,i,2));
                           double dir = 1.0;
                           if (bfl_mode > 0)
-                            dir = (n(j-1,i,0) * view_vector(0) + 
-                                   n(j-1,i,1) * view_vector(1) + 
-                                   n(j-1,i,2) * view_vector(2) < 0) ? 
-                                    ((bfl_mode > 1) ? 0.0 : -1.0) : 1.0;
+                            dir = ((n(j-1,i,0) * view_vector(0)
+                                    + n(j-1,i,1) * view_vector(1)
+                                    + n(j-1,i,2) * view_vector(2) < 0)
+                                   ? ((bfl_mode > 1) ? 0.0 : -1.0) : 1.0);
                           glNormal3d (dir * n(j-1,i,0)/d,
                                       dir * n(j-1,i,1)/d,
                                       dir * n(j-1,i,2)/d);
                         }
                       glVertex3d (x(j1,i), y(j-1,i2), z(j-1,i));
 
                       // Vertex 2
                       if (ec_mode == INTERP)
@@ -2375,20 +2375,20 @@ opengl_renderer::draw_surface (const sur
                         }
                       if (el_mode == GOURAUD)
                         {
                           d = sqrt (n(j,i,0) * n(j,i,0)
                                     + n(j,i,1) * n(j,i,1)
                                     + n(j,i,2) * n(j,i,2));
                           double dir = 1.0;
                           if (bfl_mode > 0)
-                            dir = (n(j,i,0) * view_vector(0) + 
-                                   n(j,i,1) * view_vector(1) + 
-                                   n(j,i,2) * view_vector(2) < 0) ? 
-                                    ((bfl_mode > 1) ? 0.0 : -1.0) : 1.0;
+                            dir = ((n(j,i,0) * view_vector(0)
+                                    + n(j,i,1) * view_vector(1)
+                                    + n(j,i,2) * view_vector(2) < 0)
+                                   ? ((bfl_mode > 1) ? 0.0 : -1.0) : 1.0);
                           glNormal3d (dir * n(j,i,0)/d,
                                       dir * n(j,i,1)/d,
                                       dir * n(j,i,2)/d);
                         }
                       glVertex3d (x(j2,i), y(j,i2), z(j,i));
 
                       glEnd ();
                     }
@@ -2457,20 +2457,20 @@ opengl_renderer::draw_surface (const sur
                         }
                       if (el_mode > 0)
                         {
                           d = sqrt (n(j,i-1,0) * n(j,i-1,0)
                                     + n(j,i-1,1) * n(j,i-1,1)
                                     + n(j,i-1,2) * n(j,i-1,2));
                           double dir = 1.0;
                           if (bfl_mode > 0)
-                            dir = (n(j,i-1,0) * view_vector(0) + 
-                                   n(j,i-1,1) * view_vector(1) + 
-                                   n(j,i-1,2) * view_vector(2) < 0) ?
-                                    ((bfl_mode > 1) ? 0.0 : -1.0) : 1.0;
+                            dir = ((n(j,i-1,0) * view_vector(0)
+                                    + n(j,i-1,1) * view_vector(1)
+                                    + n(j,i-1,2) * view_vector(2) < 0)
+                                   ? ((bfl_mode > 1) ? 0.0 : -1.0) : 1.0);
                           glNormal3d (dir * n(j,i-1,0)/d,
                                       dir * n(j,i-1,1)/d,
                                       dir * n(j,i-1,2)/d);
                         }
                       glVertex3d (x(j2,i-1), y(j,i1), z(j,i-1));
 
                       // Vertex 2
                       if (ec_mode == INTERP)
@@ -2496,20 +2496,20 @@ opengl_renderer::draw_surface (const sur
                         }
                       if (el_mode == GOURAUD)
                         {
                           d = sqrt (n(j,i,0) * n(j,i,0)
                                     + n(j,i,1) * n(j,i,1)
                                     + n(j,i,2) * n(j,i,2));
                           double dir = 1.0;
                           if (bfl_mode > 0)
-                            dir = (n(j,i,0) * view_vector(0) + 
-                                   n(j,i,1) * view_vector(1) + 
-                                   n(j,i,2) * view_vector(2) < 0) ? 
-                                    ((bfl_mode > 1) ? 0.0 : -1.0) : 1.0;
+                            dir = ((n(j,i,0) * view_vector(0)
+                                    + n(j,i,1) * view_vector(1)
+                                    + n(j,i,2) * view_vector(2) < 0)
+                                   ? ((bfl_mode > 1) ? 0.0 : -1.0) : 1.0);
                           glNormal3d (dir * n(j,i,0)/d,
                                       dir * n(j,i,1)/d,
                                       dir * n(j,i,2)/d);
                         }
                       glVertex3d (x(j2,i), y(j,i2), z(j,i));
 
                       glEnd ();
                     }
@@ -2737,20 +2737,20 @@ opengl_renderer::draw_patch (const patch
 
         vv(0) = v(idx,0); vv(1) = v(idx,1);
         if (has_z)
           vv(2) = v(idx,2);
         if (has_normals)
           {
             double dir = 1.0;
             if (bfl_mode > 0)
-              dir = (n(idx,0) * view_vector(0) + 
-                     n(idx,1) * view_vector(1) + 
-                     n(idx,2) * view_vector(2) < 0) ?
-                      ((bfl_mode > 1) ? 0.0 : -1.0) : 1.0;
+              dir = ((n(idx,0) * view_vector(0)
+                      + n(idx,1) * view_vector(1)
+                      + n(idx,2) * view_vector(2) < 0)
+                     ? ((bfl_mode > 1) ? 0.0 : -1.0) : 1.0);
             nn(0) = dir * n(idx,0);
             nn(1) = dir * n(idx,1);
             nn(2) = dir * n(idx,2);
           }
         if (c.numel () > 0)
           {
             cc.resize (1, 3);
             if (has_facecolor)
@@ -3623,17 +3623,17 @@ opengl_renderer::set_clipping (bool enab
       else
         for (int i = 0; i < 6; i++)
           glDisable (GL_CLIP_PLANE0+i);
     }
 
 #else
 
   octave_unused_parameter (enable);
-  
+
   // This shouldn't happen because construction of opengl_renderer
   // objects is supposed to be impossible if OpenGL is not available.
 
   panic_impossible ();
 
 #endif
 }
 
