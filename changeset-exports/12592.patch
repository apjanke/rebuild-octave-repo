# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1302573812 25200
#      Mon Apr 11 19:03:32 2011 -0700
# Branch stable
# Node ID 732a568bf6947823fe3277ad8a110008f086bee9
# Parent  c3d4542a4f062935c8ef1766824b0b3e4f0fe352
Modify func.txi discussion of output arguments to include discussion of isargout.

diff --git a/doc/ChangeLog b/doc/ChangeLog
--- a/doc/ChangeLog
+++ b/doc/ChangeLog
@@ -1,8 +1,13 @@
+2011-04-11  Rik  <octave@nomad.inbox5.com>
+
+	* interpreter/func.txi: Add discussion of isargout to Ignoring
+	Arguments section of documentation.
+
 2011-04-07  Rik  <octave@nomad.inbox5.com>
 
 	* interpreter/Makefile.am: Add spellcheck target to documentation
 	Makefile.
 
 2011-04-06  Rik  <octave@nomad.inbox5.com>
 
 	* interpreter/numbers.txi, interpreter/strings.txi: Group commonly used
diff --git a/doc/interpreter/func.txi b/doc/interpreter/func.txi
--- a/doc/interpreter/func.txi
+++ b/doc/interpreter/func.txi
@@ -337,18 +337,16 @@ c = 2
 along with a warning.
 
 @DOCSTRING(nargout)
 
 @DOCSTRING(nargchk)
 
 @DOCSTRING(nargoutchk)
 
-@DOCSTRING(isargout)
-
 @anchor{doc-varargin} @anchor{doc-varargout}
 @node Variable-length Argument Lists
 @section Variable-length Argument Lists
 @cindex variable-length argument lists
 @cindex @code{varargin}
 
 Sometimes the number of input arguments is not known when the function
 is defined.  As an example think of a function that returns the smallest
@@ -451,16 +449,36 @@ value should be ignored and not stored t
 function val = pick2nd (~, arg2)
   val = arg2;
 endfunction
 @end group
 @end example
 
 The value of @code{nargin} is not affected by using this declaration.
 
+Return arguments can also be ignored using the same syntax.  Functions may
+take advantage of ignored outputs to reduce the number of calculations
+performed.  To do so, use the @code{isargout} function to query whether the
+output argument is wanted.  For example:
+
+@example
+@group
+function [out1, out2] = long_function (x, y, z)
+  if (isargout (1))
+    ## Long calculation
+    @dots{}
+    out1 = result;
+  endif
+  @dots{}
+endfunction
+@end group
+@end example
+
+@DOCSTRING(isargout)
+
 @node Variable-length Return Lists
 @section Variable-length Return Lists
 @cindex variable-length return lists
 @cindex @code{varargout}
 
 It is possible to return a variable number of output arguments from a
 function using a syntax that's similar to the one used with the
 special @code{varargin} parameter name.  To let a function return a
