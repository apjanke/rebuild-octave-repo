# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1253222737 14400
#      Thu Sep 17 17:25:37 2009 -0400
# Node ID 11844593875aef155cd078bd76147159d0458997
# Parent  54f45f883a53a7805039d3906ad461856d965db5
eliminate oct-dlldefs.h and oct-types.h

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,15 @@
+2009-09-17  John W. Eaton  <jwe@octave.org>
+
+	* configure.ac: Also AC_DEFINE OCTAAVE_IDX_TYPE.
+	(AH_BOTTOM): Include contents of libcruft/misc/oct-dlldefs.h and
+	liboctave/oct-types.h here.  Use C-style comments.
+	(AC_CONFIG_FILES): Remove liboctave/oct-types.h from the list.
+
 2009-09-15  John W. Eaton  <jwe@octave.org>
 
 	* configure.ac: Rename from configure.in.
 	(AC_CONFIG_FILES): Add m4/Makefile to the list.
 	* acx_blas.m4, acx_lapack.m4, acx_blas_f77_func.m4,
 	acx_pthread.m4: Move to m4 subdirectory.
 	* m4/Makefile.in: New file.
 	* octMakefile.in (M4_FILES): Adjust for new m4 subdirectory.
diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -160,16 +160,18 @@ if $USE_64_BIT_IDX_T; then
     fi
   else
     warn_64_bit="pointers are not 64-bits wide so disabling 64-bit features"
     AC_MSG_WARN($warn_64_bit)
     USE_64_BIT_IDX_T=false
   fi
 fi
 AC_SUBST(OCTAVE_IDX_TYPE)
+AC_DEFINE_UNQUOTED(OCTAVE_IDX_TYPE, $OCTAVE_IDX_TYPE,
+  [Define to the type of octave_idx_type (64 or 32 bit signed integer)])
 if $USE_64_BIT_IDX_T; then
   AC_DEFINE(USE_64_BIT_IDX_T, 1, [Define if using 64-bit integers for array dimensions and indexing])
 fi
 AC_SUBST(USE_64_BIT_IDX_T)
 
 ### It seems that there are some broken inline assembly functions in
 ### the GNU libc.  Since I'm not sure how to test whether we are using
 ### GNU libc, just disable them for all platforms.
@@ -2007,55 +2009,142 @@ typedef int sig_atomic_t;
 #endif
 
 #ifdef USE_64_BIT_IDX_T
 #define SIZEOF_OCTAVE_IDX_TYPE 8
 #else
 #define SIZEOF_OCTAVE_IDX_TYPE SIZEOF_INT
 #endif
 
-// To be able to use long doubles for 64-bit mixed arithmetics, we need them at
-// least 80 bits wide and we need roundl declared in math.h.
-// FIXME -- maybe substitute this by a more precise check in the future.
+/* To be able to use long doubles for 64-bit mixed arithmetics, we need
+   them at least 80 bits wide and we need roundl declared in math.h.
+   FIXME -- maybe substitute this by a more precise check in the future.  */
 #if (SIZEOF_LONG_DOUBLE >= 10) && defined (HAVE_ROUNDL)
 #define OCTAVE_INT_USE_LONG_DOUBLE
 #endif
 
 #define OCTAVE_EMPTY_CPP_ARG
 
-// Octave is currently unable to use FFTW unless both float
-// and double versions are both available.
+/* Octave is currently unable to use FFTW unless both float
+   and double versions are both available.  */
 #if defined (HAVE_FFTW3) && defined (HAVE_FFTW3F)
 #define HAVE_FFTW
 #endif
 
-// Backward compatibility.
+/* Backward compatibility.  */
 #if defined (HAVE_Z)
 #define HAVE_ZLIB
 #endif
 
-#include "oct-dlldefs.h"
-#include "oct-types.h"
+/* oct-dlldefs.h */
+
+#if defined (_MSC_VER)
+#define OCTAVE_EXPORT __declspec(dllexport)
+#define OCTAVE_IMPORT __declspec(dllimport)
+#else
+/* All other compilers, at least for now. */
+#define OCTAVE_EXPORT
+#define OCTAVE_IMPORT
+#endif
+
+/* API macro for libcruft */
+#ifdef CRUFT_DLL
+#define CRUFT_API OCTAVE_EXPORT
+#else
+#define CRUFT_API OCTAVE_IMPORT
+#endif
+
+/* API macro for liboctave */
+#ifdef OCTAVE_DLL
+#define OCTAVE_API OCTAVE_EXPORT
+#else
+#define OCTAVE_API OCTAVE_IMPORT
+#endif
+
+/* API macro for src */
+#ifdef OCTINTERP_DLL
+#define OCTINTERP_API OCTAVE_EXPORT
+#else
+#define OCTINTERP_API OCTAVE_IMPORT
+#endif
+
+/* API macro for src/graphics */
+#ifdef OCTGRAPHICS_DLL
+#define OCTGRAPHICS_API OCTAVE_EXPORT
+#else
+#define OCTGRAPHICS_API OCTAVE_IMPORT
+#endif
+
+/* oct-types.h */
+
+typedef OCTAVE_IDX_TYPE octave_idx_type;
+
+#if defined (HAVE_STDINT_H)
+#include <stdint.h>
+#elif defined (HAVE_INTTYPES_H)
+#include <inttypes.h>
+#else
+
+#if defined (HAVE_LIMITS_H)
+#include <limits.h>
+#endif
+
+#if CHAR_BIT == 8
+typedef signed char int8_t;
+typedef unsigned char uint8_t;
+#else
+#error "CHAR_BIT is not 8!"
+#endif
+
+#if SIZEOF_SHORT == 2
+typedef short int16_t;
+typedef unsigned short uint16_t;
+#elif SIZEOF_INT == 2
+typedef long int16_t;
+typedef unsigned long uint16_t;
+#else
+#error "No 2 byte integer type found!"
+#endif
+
+#if SIZEOF_INT == 4
+typedef int int32_t;
+typedef unsigned int uint32_t;
+#elif SIZEOF_LONG == 4
+typedef long int32_t;
+typedef unsigned long uint32_t;
+#else
+#error "No 4 byte integer type found!"
+#endif
+
+#if SIZEOF_LONG == 8
+typedef long int64_t;
+typedef unsigned long uint64_t;
+#elif SIZEOF_LONG_LONG == 8
+typedef long long int64_t;
+typedef unsigned long long uint64_t;
+#endif
+
+#endif
 ])
 
 ### Do the substitutions in all the Makefiles.
 
 AC_CONFIG_COMMANDS([Makefile], [if test "$ac_srcdir" != "."; then
   cp $srcdir/Makefile .
 fi])
 
 AC_SUBST(ac_config_files)
 AC_SUBST(ac_config_headers)
 
 AC_CONFIG_FILES([octMakefile Makeconf m4/Makefile test/Makefile
   doc/Makefile doc/faq/Makefile doc/interpreter/Makefile
   doc/liboctave/Makefile doc/refcard/Makefile emacs/Makefile
   examples/Makefile examples/@polynomial/Makefile 
   examples/@FIRfilter/Makefile liboctave/Makefile
-  liboctave/oct-types.h src/Makefile src/mxarray.h libcruft/Makefile
+  src/Makefile src/mxarray.h libcruft/Makefile
   libcruft/Makerules libcruft/amos/Makefile libcruft/blas/Makefile
   libcruft/daspk/Makefile libcruft/dasrt/Makefile
   libcruft/dassl/Makefile libcruft/fftpack/Makefile
   libcruft/lapack/Makefile 
   libcruft/misc/Makefile libcruft/odepack/Makefile
   libcruft/ordered-qz/Makefile libcruft/quadpack/Makefile
   libcruft/ranlib/Makefile libcruft/slatec-fn/Makefile
   libcruft/slatec-err/Makefile libcruft/villad/Makefile
diff --git a/libcruft/ChangeLog b/libcruft/ChangeLog
--- a/libcruft/ChangeLog
+++ b/libcruft/ChangeLog
@@ -1,8 +1,13 @@
+2009-09-17  John W. Eaton  <jwe@octave.org>
+
+	* misc/oct-dlldefs.h: Delete.
+	* misc/Makefile.in (INCLUDES): Remove oct-dlldefs.h from the list.
+
 2009-08-05  John W. Eaton  <jwe@octave.org>
 
 	* Makefile.in (LINK_DEPS): Omit $(FFTW_LIBS) from the list.
 
 2009-06-22  John W. Eaton  <jwe@octave.org>
 
 	* Makefile.in (MISC_OBJ): Remove misc/machar.o and misc/smachar.o
 	from the list.
diff --git a/libcruft/misc/Makefile.in b/libcruft/misc/Makefile.in
--- a/libcruft/misc/Makefile.in
+++ b/libcruft/misc/Makefile.in
@@ -30,17 +30,17 @@ EXTERNAL_DISTFILES = $(DISTFILES)
 FSRC = d1mach.f r1mach.f i1mach.f
 
 CSRC = f77-fcn.c lo-error.c cquit.c
 
 CXXSRC = f77-extern.cc quit.cc
 
 MAKEDEPS := $(patsubst %.c, %.d, $(CSRC)) $(patsubst %.cc, %.d, $(CXXSRC))
 
-INCLUDES := f77-fcn.h lo-error.h oct-dlldefs.h quit.h
+INCLUDES := f77-fcn.h lo-error.h quit.h
 
 SPECIAL:= d1mach-tst.for $(INCLUDES)
 
 include $(TOPDIR)/Makeconf
 
 INSTALL = @INSTALL@
 INSTALL_PROGRAM = @INSTALL_PROGRAM@
 INSTALL_DATA = @INSTALL_DATA@
diff --git a/libcruft/misc/oct-dlldefs.h b/libcruft/misc/oct-dlldefs.h
deleted file mode 100644
--- a/libcruft/misc/oct-dlldefs.h
+++ /dev/null
@@ -1,69 +0,0 @@
-/*
-
-Copyright (C) 2006, 2007, 2008 John W. Eaton
-
-This file is part of Octave.
-
-Octave is free software; you can redistribute it and/or modify it
-under the terms of the GNU General Public License as published by the
-Free Software Foundation; either version 3 of the License, or (at your
-option) any later version.
-
-Octave is distributed in the hope that it will be useful, but WITHOUT
-ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
-FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
-for more details.
-
-You should have received a copy of the GNU General Public License
-along with Octave; see the file COPYING.  If not, see
-<http://www.gnu.org/licenses/>.
-
-*/
-
-#if !defined (octave_dlldefs_h)
-#define octave_dlldefs_h 1
-
-#if defined (_MSC_VER)
-#define OCTAVE_EXPORT __declspec(dllexport)
-#define OCTAVE_IMPORT __declspec(dllimport)
-#else
-/* All other compilers, at least for now. */
-#define OCTAVE_EXPORT
-#define OCTAVE_IMPORT
-#endif
-
-/* API macro for libcruft */
-#ifdef CRUFT_DLL
-#define CRUFT_API OCTAVE_EXPORT
-#else
-#define CRUFT_API OCTAVE_IMPORT
-#endif
-
-/* API macro for liboctave */
-#ifdef OCTAVE_DLL
-#define OCTAVE_API OCTAVE_EXPORT
-#else
-#define OCTAVE_API OCTAVE_IMPORT
-#endif
-
-/* API macro for src */
-#ifdef OCTINTERP_DLL
-#define OCTINTERP_API OCTAVE_EXPORT
-#else
-#define OCTINTERP_API OCTAVE_IMPORT
-#endif
-
-/* API macro for src/graphics */
-#ifdef OCTGRAPHICS_DLL
-#define OCTGRAPHICS_API OCTAVE_EXPORT
-#else
-#define OCTGRAPHICS_API OCTAVE_IMPORT
-#endif
-
-#endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,19 @@
+2009-09-17  John W. Eaton  <jwe@octave.org>
+
+	* oct-types.h.in: Delete.
+	* Makefile.in (BUILT_INCLUDES, DISTFILES): Remove oct-types.h.in
+	from the list.
+	(distclean, maintainer-clean): 
+	* DAEFunc.h, MatrixType.h, base-aepbal.h, dim-vector.h,
+	lo-specfun.h, lo-utils.h, mx-op-decl.h, oct-inttypes.h,
+	randgamma.h, randmtzig.h, randpoisson.h:
+	Don't include oct-types.h.
+
 2009-09-16  Jaroslav Hajek  <highegg@gmail.com>
 
 	* oct-rand.cc (octave_rand::do_matrix, do_nd_array, do_vector):
 	Use Array::clear rather than Array::resize.
 
 2009-09-06  Jaroslav Hajek  <highegg@gmail.com>
 
 	* dColVector.h (operator *(const Matrix&, const ColumnVector)):
diff --git a/liboctave/DAEFunc.h b/liboctave/DAEFunc.h
--- a/liboctave/DAEFunc.h
+++ b/liboctave/DAEFunc.h
@@ -19,18 +19,16 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #if !defined (octave_DAEFunc_h)
 #define octave_DAEFunc_h 1
 
-#include "oct-types.h"
-
 class Matrix;
 class ColumnVector;
 
 class
 DAEFunc
 {
 public:
 
diff --git a/liboctave/Makefile.in b/liboctave/Makefile.in
--- a/liboctave/Makefile.in
+++ b/liboctave/Makefile.in
@@ -99,17 +99,17 @@ INCLUDES := CollocWt.h DAE.h DAEFunc.h D
         oct-passwd.h oct-rand.h oct-rl-edit.h oct-rl-hist.h oct-shlib.h \
         oct-sort.h oct-spparms.h oct-syscalls.h oct-sparse.h oct-time.h \
         oct-uname.h pathlen.h pathsearch.h prog-args.h \
 	randgamma.h randmtzig.h randpoisson.h regex-match.h \
 	sparse-sort.h statdefs.h str-vec.h \
 	sparse-util.h sun-utils.h sysdir.h systime.h syswait.h \
 	$(MATRIX_INC)
 
-BUILT_INCLUDES := oct-types.h mx-ops.h \
+BUILT_INCLUDES := mx-ops.h \
 	$(OPT_INC) \
 	$(MX_OP_INC) \
 	$(VX_OP_INC) \
 	$(SPARSE_MX_OP_INC)
 
 TEMPLATE_SRC := Array.cc ArrayN.cc eigs-base.cc DiagArray2.cc \
 	MArray.cc MArray2.cc MArrayN.cc MDiagArray2.cc \
 	base-lu.cc oct-sort.cc sparse-base-lu.cc \
@@ -195,17 +195,17 @@ SOURCES := \
 	$(LIBOCT_READLINE_SOURCES) \
 	$(LIBOCT_PATHSEARCH_SOURCES)
 
 EXTRAS := mx-inlines.cc kpse.cc intNDArray.cc
 
 INCLUDES_FOR_INSTALL := $(INCLUDES) $(BUILT_INCLUDES) $(TEMPLATE_SRC) $(EXTRAS)
 
 DISTFILES := $(addprefix $(srcdir)/, Makefile.in ChangeLog mk-ops.awk \
-	mx-ops vx-ops sparse-mk-ops.awk sparse-mx-ops oct-types.h.in \
+	mx-ops vx-ops sparse-mk-ops.awk sparse-mx-ops \
 	$(TEMPLATE_SRC) \
 	$(LIBOCTAVE_CXX_SOURCES) \
 	$(LIBOCT_READLINE_SOURCES) \
 	$(LIBOCT_PATHSEARCH_SOURCES) \
 	$(LIBOCTAVE_C_SOURCES) \
 	$(INCLUDES) $(EXTRAS) $(OPT_IN)) \
 	$(BUILT_LIBOCTAVE_CXX_SOURCES) $(BUILT_INCLUDES)
 
@@ -360,17 +360,17 @@ clean:
 	-rmdir pic
 .PHONY: clean
 
 mostlyclean: clean
 .PHONY: mostlyclean
 
 distclean maintainer-clean: clean
 	rm -f tags TAGS
-	rm -f Makefile so_locations oct-types.h $(PREREQ)
+	rm -f Makefile so_locations $(PREREQ)
 .PHONY: distclean maintainer-clean
 
 dist: $(PREREQ)
 	ln $(DISTFILES) ../`cat ../.fname`/liboctave
 .PHONY: dist
 
 $(OPT_INC) : %.h : %.in $(top_srcdir)/mk-opts.pl
 	@echo making $@ from $<
diff --git a/liboctave/MatrixType.h b/liboctave/MatrixType.h
--- a/liboctave/MatrixType.h
+++ b/liboctave/MatrixType.h
@@ -19,18 +19,16 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #if !defined (octave_MatrixType_h)
 #define octave_MatrixType_h
 
-#include "oct-types.h"
-
 class Matrix;
 class ComplexMatrix;
 class FloatMatrix;
 class FloatComplexMatrix;
 class SparseMatrix;
 class SparseComplexMatrix;
 
 class
diff --git a/liboctave/base-aepbal.h b/liboctave/base-aepbal.h
--- a/liboctave/base-aepbal.h
+++ b/liboctave/base-aepbal.h
@@ -18,18 +18,16 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #if !defined (octave_base_aepbal_h)
 #define octave_base_aepbal_h 1
 
-#include "oct-types.h"
-
 template <class MatrixT, class VectorT>
 class base_aepbal
 {
 protected:
   MatrixT balanced_mat;
   VectorT scale;
   octave_idx_type ilo, ihi;
   char job;
diff --git a/liboctave/dim-vector.h b/liboctave/dim-vector.h
--- a/liboctave/dim-vector.h
+++ b/liboctave/dim-vector.h
@@ -25,17 +25,16 @@ along with Octave; see the file COPYING.
 #define octave_dim_vector_h 1
 
 #include <cassert>
 
 #include <sstream>
 #include <string>
 
 #include "lo-error.h"
-#include "oct-types.h"
 
 // Rationale: This implementation is more tricky than Array, but the big plus
 // is that dim_vector requires only one allocation instead of two.
 // It is (slightly) patterned after GCC's basic_string implementation.
 // rep is a pointer to an array of memory, comprising count, length,
 // and the data:
 //          <count>
 //          <ndims>
diff --git a/liboctave/lo-specfun.h b/liboctave/lo-specfun.h
--- a/liboctave/lo-specfun.h
+++ b/liboctave/lo-specfun.h
@@ -20,17 +20,16 @@ along with Octave; see the file COPYING.
 <http://www.gnu.org/licenses/>.
 
 */
 
 #if !defined (octave_liboctave_specfun_h)
 #define octave_liboctave_specfun_h 1
 
 #include "oct-cmplx.h"
-#include "oct-types.h"
 #include "ArrayN.h"
 
 template <class T> class Array2;
 class Matrix;
 class ComplexMatrix;
 class NDArray;
 class ComplexNDArray;
 class RowVector;
diff --git a/liboctave/lo-utils.h b/liboctave/lo-utils.h
--- a/liboctave/lo-utils.h
+++ b/liboctave/lo-utils.h
@@ -25,17 +25,16 @@ along with Octave; see the file COPYING.
 #define octave_liboctave_utils_h 1
 
 #include <cstdio>
 
 #include <iostream>
 #include <string>
 
 #include "oct-cmplx.h"
-#include "oct-types.h"
 #include "syswait.h"
 
 extern OCTAVE_API octave_idx_type NINTbig (double x);
 extern OCTAVE_API octave_idx_type NINTbig (float x);
 extern OCTAVE_API int NINT (double x);
 extern OCTAVE_API int NINT (float x);
 extern OCTAVE_API double D_NINT (double x);
 extern OCTAVE_API float F_NINT (float x);
diff --git a/liboctave/mx-op-decl.h b/liboctave/mx-op-decl.h
--- a/liboctave/mx-op-decl.h
+++ b/liboctave/mx-op-decl.h
@@ -20,18 +20,16 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #if !defined (octave_mx_op_decl_h)
 #define octave_mx_op_decl_h 1
 
-#include "oct-types.h"
-
 #define BIN_OP_DECL(R, OP, X, Y, API) \
   extern API R OP (const X&, const Y&)
 
 class boolMatrix;
 class boolNDArray;
 
 #define CMP_OP_DECL(OP, X, Y, API) \
   extern API boolMatrix OP (const X&, const Y&)
diff --git a/liboctave/oct-inttypes.h b/liboctave/oct-inttypes.h
--- a/liboctave/oct-inttypes.h
+++ b/liboctave/oct-inttypes.h
@@ -27,17 +27,16 @@ along with Octave; see the file COPYING.
 #include <climits>
 #include <cstdlib>
 
 #include <limits>
 #include <iosfwd>
 
 #include "lo-traits.h"
 #include "lo-math.h"
-#include "oct-types.h"
 #include "lo-mappers.h"
 
 #ifdef OCTAVE_INT_USE_LONG_DOUBLE
 inline long double xround (long double x) { return roundl (x); }
 inline long double xisnan (long double x) { return xisnan (static_cast<double> (x)); }
 #endif
 
 // Undefine min/max if needed (this may happen under Windows)
diff --git a/liboctave/oct-types.h.in b/liboctave/oct-types.h.in
deleted file mode 100644
--- a/liboctave/oct-types.h.in
+++ /dev/null
@@ -1,81 +0,0 @@
-/*
-
-Copyright (C) 2005, 2006, 2007 John W. Eaton
-
-This file is part of Octave.
-
-Octave is free software; you can redistribute it and/or modify it
-under the terms of the GNU General Public License as published by the
-Free Software Foundation; either version 3 of the License, or (at your
-option) any later version.
-
-Octave is distributed in the hope that it will be useful, but WITHOUT
-ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
-FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
-for more details.
-
-You should have received a copy of the GNU General Public License
-along with Octave; see the file COPYING.  If not, see
-<http://www.gnu.org/licenses/>.
-
-*/
-
-#if !defined (octave_oct_types_h)
-#define octave_oct_types_h 1
-
-typedef @OCTAVE_IDX_TYPE@ octave_idx_type;
-
-#if defined (HAVE_STDINT_H)
-#include <stdint.h>
-#elif defined (HAVE_INTTYPES_H)
-#include <inttypes.h>
-#else
-
-#if defined (HAVE_LIMITS_H)
-#include <limits.h>
-#endif
-
-#if CHAR_BIT == 8
-typedef signed char int8_t;
-typedef unsigned char uint8_t;
-#else
-#error "CHAR_BIT is not 8!"
-#endif
-
-#if SIZEOF_SHORT == 2
-typedef short int16_t;
-typedef unsigned short uint16_t;
-#elif SIZEOF_INT == 2
-typedef long int16_t;
-typedef unsigned long uint16_t;
-#else
-#error "No 2 byte integer type found!"
-#endif
-
-#if SIZEOF_INT == 4
-typedef int int32_t;
-typedef unsigned int uint32_t;
-#elif SIZEOF_LONG == 4
-typedef long int32_t;
-typedef unsigned long uint32_t;
-#else
-#error "No 4 byte integer type found!"
-#endif
-
-#if SIZEOF_LONG == 8
-typedef long int64_t;
-typedef unsigned long uint64_t;
-#elif SIZEOF_LONG_LONG == 8
-typedef long long int64_t;
-typedef unsigned long long uint64_t;
-#endif
-
-#endif
-
-#endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/liboctave/randgamma.h b/liboctave/randgamma.h
--- a/liboctave/randgamma.h
+++ b/liboctave/randgamma.h
@@ -20,18 +20,16 @@ along with Octave; see the file COPYING.
 
 */
 
 /* Original version written by Paul Kienzle distributed as free
    software in the in the public domain.  */
 
 #ifndef _RANDGAMMA_H
 
-#include "oct-types.h"
-
 #ifdef  __cplusplus
 extern "C" {
 #endif
 
 extern double oct_randg (double a);
 extern void oct_fill_randg (double a, octave_idx_type n, double *p);
 
 #ifdef  __cplusplus
diff --git a/liboctave/randmtzig.h b/liboctave/randmtzig.h
--- a/liboctave/randmtzig.h
+++ b/liboctave/randmtzig.h
@@ -59,18 +59,16 @@ along with Octave; see the file COPYING.
    NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
    SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
 */
 
 #ifndef _RANDMTZIG_H
 #define _RANDMTZIG_H
 
-#include "oct-types.h"
-
 #define MT_N 624
 
 #ifdef  __cplusplus
 extern "C" {
 #endif
 
 /* === Mersenne Twister === */
 extern void oct_init_by_int (uint32_t s);
diff --git a/liboctave/randpoisson.h b/liboctave/randpoisson.h
--- a/liboctave/randpoisson.h
+++ b/liboctave/randpoisson.h
@@ -20,18 +20,16 @@ along with Octave; see the file COPYING.
 
 */
 
 /* Original version written by Paul Kienzle distributed as free
    software in the in the public domain.  */
 
 #ifndef _RANDPOISSON_H
 
-#include "oct-types.h"
-
 #ifdef  __cplusplus
 extern "C" {
 #endif
 
 extern double oct_randp (double L);
 extern void oct_fill_randp (double L, octave_idx_type n, double *p);
 
 #ifdef  __cplusplus
diff --git a/src/gripes.h b/src/gripes.h
--- a/src/gripes.h
+++ b/src/gripes.h
@@ -21,18 +21,16 @@ along with Octave; see the file COPYING.
 
 */
 
 #if !defined (octave_gripes_h)
 #define octave_gripes_h 1
 
 #include <string>
 
-#include "oct-types.h"
-
 class octave_value;
 
 extern OCTINTERP_API void
 gripe_not_supported (const char *);
 
 extern OCTINTERP_API void
 gripe_not_implemented (const char *);
 
