# HG changeset patch
# User Ben Abbott <bpabbott@mac.com>
# Date 1245754677 -7200
#      Tue Jun 23 12:57:57 2009 +0200
# Branch release-3-2-x
# Node ID d5c5927d7d117e2427bf2aa509dadbcb0b868a77
# Parent  dc56a38b5a64dee2cf19c33232b57702fd984f08
grid.m: Add missing semi-colon. Fix grid toggle. Allow minor grid when no minor tick.

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,16 @@
+2009-06-22  Ben Abbott <bpabbott@mac.com>
+
+	* plot/grid.m: Add missing semi-colon. Allow grid to be toggled
+	on/off for each axis independently. Gnuplot requires that minor
+	ticks accompany minor ticks. Add demo.
+	* plot/__go_draw_axes__.m: For {x,y,z}scale == 'log' use 10 minor
+	ticks.
+
 2009-06-22  John W. Eaton  <jwe@octave.org>
 
 	* statistics/base/var.m: Return zero for scalar case.  Handle
 	empty arguments in a Matlab compatible way.  New tests.
 
 2009-06-18  Ben Abbott <bpabbott@mac.com>
 
 	* plot/__go_draw_axes__.m: Change the default x11 fontspec from '*,0'
diff --git a/scripts/plot/__go_draw_axes__.m b/scripts/plot/__go_draw_axes__.m
--- a/scripts/plot/__go_draw_axes__.m
+++ b/scripts/plot/__go_draw_axes__.m
@@ -221,33 +221,48 @@ function __go_draw_axes__ (h, plot_strea
       have_grid = true;
       fputs (plot_stream, "set grid ztics;\n");
     else
       fputs (plot_stream, "set grid noztics;\n");
     endif
 
     if (strcmpi (axis_obj.xminorgrid, "on"))
       have_grid = true;
-      fprintf (plot_stream, "set m%stics 5;\n", xaxisloc);
+      if (strcmp (axis_obj.xscale, "log"))
+	m = 10;
+      else
+	m = 5;
+      endif
+      fprintf (plot_stream, "set m%stics %d;\n", xaxisloc, m);
       fprintf (plot_stream, "set grid m%stics;\n", xaxisloc);
     else
       fprintf (plot_stream, "set grid nom%stics;\n", xaxisloc);
     endif
 
     if (strcmpi (axis_obj.yminorgrid, "on"))
       have_grid = true;
-      fprintf (plot_stream, "set m%stics 5;\n", yaxisloc);
+      if (strcmp (axis_obj.yscale, "log"))
+	m = 10;
+      else
+	m = 5;
+      endif
+      fprintf (plot_stream, "set m%stics %d;\n", yaxisloc, m);
       fprintf (plot_stream, "set grid m%stics;\n", yaxisloc);
     else
       fprintf (plot_stream, "set grid nom%stics;\n", yaxisloc);
     endif
 
     if (strcmpi (axis_obj.zminorgrid, "on"))
       have_grid = true;
-      fputs (plot_stream, "set mztics 5;\n");
+      if (strcmp (axis_obj.zscale, "log"))
+	m = 10;
+      else
+	m = 5;
+      endif
+      fprintf (plot_stream, "set mztics %d;\n", m);
       fputs (plot_stream, "set grid mztics;\n");
     else
       fputs (plot_stream, "set grid nomztics;\n");
     endif
 
     ## The grid front/back/layerdefault option also controls the
     ## appearance of tics, so it is used even if the grid is absent.
     if (strcmpi (axis_obj.layer, "top"))
@@ -1530,16 +1545,26 @@ function __gnuplot_write_data__ (plot_st
 endfunction
 
 function do_tics (obj, plot_stream, ymirror, mono, gnuplot_term)
 
   obj.xticklabel = ticklabel_to_cell (obj.xticklabel);
   obj.yticklabel = ticklabel_to_cell (obj.yticklabel);
   obj.zticklabel = ticklabel_to_cell (obj.zticklabel);
 
+  if (strcmp (obj.xminorgrid, "on"))
+    obj.xminortick = "on";
+  endif
+  if (strcmp (obj.yminorgrid, "on"))
+    obj.yminortick = "on";
+  endif
+  if (strcmp (obj.zminorgrid, "on"))
+    obj.zminortick = "on";
+  endif
+
   [fontname, fontsize] = get_fontname_and_size (obj);
   fontspec = create_fontspec (fontname, fontsize, gnuplot_term);
 
   ## A Gnuplot tic scale of 69 is equivalent to Octave's 0.5.
   ticklength = sprintf ("scale %4.1f", (69/0.5)*obj.ticklength(1));
 
   if (strcmpi (obj.xaxislocation, "top"))
     do_tics_1 (obj.xtickmode, obj.xtick, obj.xminortick, obj.xticklabelmode,
@@ -1608,18 +1633,20 @@ function do_tics_1 (ticmode, tics, mtics
   elseif (strcmpi (interpreter, "latex"))
     if (! warned_latex)
       warning ("latex markup not supported for tick marks");
       warned_latex = true;
     endif
   endif
   if (strcmp (scale, "log"))
     fmt = "10^{%T}";
+    num_mtics = 10;
   else
     fmt = "%g";
+    num_mtics = 5;
   endif
   colorspec = get_text_colorspec (color, mono);
   if (strcmpi (ticmode, "manual") || strcmpi (labelmode, "manual"))
     if (isempty (tics))
       fprintf (plot_stream, "unset %stics;\nunset m%stics;\n", ax, ax);
     elseif (strcmpi (labelmode, "manual"))
       if (ischar (labels))
 	labels = cellstr (labels);
@@ -1650,17 +1677,17 @@ function do_tics_1 (ticmode, tics, mtics
 	    fputs (plot_stream, ", ");
 	  endif
 	  if (k > nlabels)
 	    k = 1;
 	  endif
 	endfor
 	fprintf (plot_stream, ") %s %s;\n", colorspec, fontspec);
  	if (strcmp (mtics, "on"))
-	  fprintf (plot_stream, "set m%stics 5;\n", ax);
+	  fprintf (plot_stream, "set m%stics %d;\n", ax, num_mtics);
 	else
 	  fprintf (plot_stream, "unset m%stics;\n", ax);
 	endif
      else
 	error ("unsupported type of ticklabel");
       endif
     else
       fprintf (plot_stream, "set format %s \"%s\";\n", ax, fmt);
@@ -1669,32 +1696,32 @@ function do_tics_1 (ticmode, tics, mtics
 		 ticklength, axispos);
       else
 	fprintf (plot_stream, "set %stics %s %s %s nomirror (", ax, tickdir,
 		 ticklength, axispos);
       endif
       fprintf (plot_stream, " %.15g,", tics(1:end-1));
       fprintf (plot_stream, " %.15g) %s;\n", tics(end), fontspec);
       if (strcmp (mtics, "on"))
-        fprintf (plot_stream, "set m%stics 5;\n", ax);
+        fprintf (plot_stream, "set m%stics %d;\n", ax, num_mtics);
       else
 	fprintf (plot_stream, "unset m%stics;\n", ax);
       endif
     endif
   else
     fprintf (plot_stream, "set format %s \"%s\";\n", ax, fmt);
     if (mirror)
       fprintf (plot_stream, "set %stics %s %s %s mirror %s %s;\n", ax, 
 	       axispos, tickdir, ticklength, colorspec, fontspec);
     else
       fprintf (plot_stream, "set %stics %s %s %s nomirror %s %s;\n", ax, 
 	       tickdir, ticklength, axispos, colorspec, fontspec);
     endif
     if (strcmp (mtics, "on"))
-      fprintf (plot_stream, "set m%stics 5;\n", ax);
+      fprintf (plot_stream, "set m%stics %d;\n", ax, num_mtics);
     else
       fprintf (plot_stream, "unset m%stics;\n", ax);
     endif
   endif
 endfunction
 
 function ticklabel = ticklabel_to_cell (ticklabel)
   if (! isempty (ticklabel) && ! iscell (ticklabel))
diff --git a/scripts/plot/grid.m b/scripts/plot/grid.m
--- a/scripts/plot/grid.m
+++ b/scripts/plot/grid.m
@@ -34,20 +34,25 @@
 ## specified axis object.
 ## @seealso{plot}
 ## @end deftypefn
 
 ## Author: jwe
 
 function grid (varargin)
 
-  persistent grid_on = false;
-  persistent minor_on = false;
+  [ax, varargin, nargs] = __plt_get_axis_arg__ ("grid", varargin{:});
 
-  [ax, varargin, nargs] = __plt_get_axis_arg__ ("grid", varargin{:});
+  grid_on = (strcmp (get (ax, "xgrid"), "on")
+             && strcmp (get (ax, "ygrid"), "on")
+             && strcmp (get (ax, "zgrid"), "on"));
+
+  minor_on = (strcmp (get (ax, "xminorgrid"), "on")
+              && strcmp (get (ax, "yminorgrid"), "on")
+              && strcmp (get (ax, "zminorgrid"), "on"));
 
   if (nargs > 2)
     print_usage ();
   elseif (nargs == 0)
     grid_on = ! grid_on;
   else
     x = varargin{1};
     if (ischar (x))
@@ -62,17 +67,17 @@ function grid (varargin)
 	    minor_on = true;
 	    grid_on = true;
 	  elseif (strcmpi (x2, "off"))
 	    minor_on = false;
 	  else
 	    print_usage ();
 	  endif
 	else
-	   minor_on = ! minor_on
+	   minor_on = ! minor_on;
 	   if (minor_on)
 	     grid_on = true;
 	   endif
 	endif
       else
 	print_usage ();
       endif
     else
@@ -88,8 +93,30 @@ function grid (varargin)
       set (ax, "xminorgrid", "off", "yminorgrid", "off", "zminorgrid", "off");
     endif
   else
     set (ax, "xgrid", "off", "ygrid", "off", "zgrid", "off");
     set (ax, "xminorgrid", "off", "yminorgrid", "off", "zminorgrid", "off");
   endif
 
 endfunction
+
+%!demo
+%! clf
+%! subplot (2,2,1)
+%! plot (1:100)
+%! grid minor
+%! grid minor
+%! grid
+%! title ("no grid")
+%! subplot (2,2,2)
+%! plot (1:100)
+%! grid
+%! title ("grid on")
+%! subplot (2,2,3)
+%! plot (1:100)
+%! grid minor
+%! title ("grid minor")
+%! subplot (2,2,4)
+%! semilogy (1:100)
+%! grid minor
+%! title ("grid minor")
+
