# HG changeset patch
# User jwe
# Date 774906300 0
#      Fri Jul 22 19:45:00 1994 +0000
# Node ID 75a371805554710195a7702a606a711d51c32386
# Parent  18007cc05a026609531009e42819257a6eb37ab3
[project @ 1994-07-22 19:44:41 by jwe]

diff --git a/src/dirfns.cc b/src/dirfns.cc
--- a/src/dirfns.cc
+++ b/src/dirfns.cc
@@ -406,18 +406,16 @@ users home directory")
   tree_constant *dir = new tree_constant (directory);
   bind_builtin_variable ("PWD", dir, 1);
 
   DELETE_ARGV;
 
   return retval;
 }
 
-DEFALIAS (dir, ls);
-
 /*
  * Get a directory listing.
  */
 DEFUN_TEXT ("ls", Fls, Sls, -1, 1,
   "ls [options]\n\
 \n\
 print a directory listing")
 {
@@ -448,16 +446,18 @@ print a directory listing")
   
   delete [] ls_command;
 
   DELETE_ARGV;
 
   return retval;
 }
 
+DEFALIAS (dir, ls);
+
 DEFUN ("pwd", Fpwd, Spwd, 1, 0,
   "pwd (): print current working directory")
 {
   Octave_object retval;
   char *directory;
 
   if (verbatim_pwd)
     {
diff --git a/src/octave.cc b/src/octave.cc
--- a/src/octave.cc
+++ b/src/octave.cc
@@ -574,18 +574,16 @@ DEFUN_TEXT ("casesen", Fcasesen, Scasese
   else
     print_usage ("casesen");
 
   DELETE_ARGV;
 
   return retval;
 }
 
-DEFALIAS (exit, quit);
-
 DEFUN ("flops", Fflops, Sflops, 2, 1,
   "flops (): count floating point operations")
 {
   int nargin = args.length ();
 
   if (nargin > 2)
     print_usage ("flops");
 
@@ -598,16 +596,18 @@ DEFUN ("quit", Fquit, Squit, 1, 0,
   "quit (): exit Octave gracefully")
 {
   Octave_object retval;
   quitting_gracefully = 1;
   clean_up_and_exit (0);
   return retval;
 }
 
+DEFALIAS (exit, quit);
+
 DEFUN ("warranty", Fwarranty, Swarranty, 1, 0,
   "warranty (): describe copying conditions")
 {
   Octave_object retval;
 
   ostrstream output_buf;
   output_buf << "\n    Octave, version " << version_string
 	     << ".  Copyright (C) 1992, 1993, 1994 John W. Eaton\n"
diff --git a/src/sysdep.cc b/src/sysdep.cc
--- a/src/sysdep.cc
+++ b/src/sysdep.cc
@@ -384,16 +384,18 @@ DEFUN ("clc", Fclc, Sclc, 1, 0,
   crlf ();
 #endif
 
   fflush (rl_outstream);
 
   return retval;
 }
 
+DEFALIAS (home, clc);
+
 DEFUN ("getenv", Fgetenv, Sgetenv, 2, 1,
   "getenv (STRING): get environment variable values")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   if (nargin == 2 && args(1).is_string_type ())
@@ -405,18 +407,16 @@ DEFUN ("getenv", Fgetenv, Sgetenv, 2, 1,
 	retval = "";
     }
   else
     print_usage ("getenv");
 
   return retval;
 }
 
-DEFALIAS (home, clc);
-
 DEFUN ("kbhit", Fkbhit, Skbhit, 1, 1,
   "kbhit: get a single character from the terminal")
 {
   Octave_object retval;
 
 // XXX FIXME XXX -- add timeout and default value args?
 
   if (interactive)
diff --git a/src/variables.cc b/src/variables.cc
--- a/src/variables.cc
+++ b/src/variables.cc
@@ -199,16 +199,31 @@ install_builtin_variable_as_function (co
   if (protect)
     sym_rec->protect ();
 
   if (eternal)
     sym_rec->make_eternal ();
 }
 
 void
+alias_builtin (const char *alias, const char *name)
+{
+  symbol_record *sr_name = global_sym_tab->lookup (name, 0, 0);
+  if (! sr_name)
+    panic ("can't alias to undefined name!");
+
+  symbol_record *sr_alias = global_sym_tab->lookup (alias, 1, 0);
+
+  if (sr_alias)
+    sr_alias->alias (sr_name);
+  else
+    panic_impossible ();
+}
+
+void
 bind_nargin_and_nargout (symbol_table *sym_tab, int nargin, int nargout)
 {
   tree_constant *tmp;
   symbol_record *sr;
 
   sr = sym_tab->lookup ("nargin", 1, 0);
   sr->unprotect ();
   tmp = new tree_constant (nargin-1);
@@ -1394,24 +1409,30 @@ glob_pattern_p (char *pattern)
 	default:
 	  continue;
 	}
     }
 
   return 0;
 }
 
+static int
+is_globally_visible (const char *name)
+{
+  symbol_record *sr = curr_sym_tab->lookup (name, 0, 0);
+  return (sr && sr->is_linked_to_global ());
+}
+
 DEFUN_TEXT ("save", Fsave, Ssave, -1, 1,
   "save file [var ...]\n\
 \n\
 save variables in a file")
 {
   Octave_object retval;
 
-#if 0
   DEFINE_ARGV("save");
 
   if (argc < 2)
     {
       print_usage ("save");
       DELETE_ARGV;
       return retval;
     }
@@ -1500,17 +1521,16 @@ save variables in a file")
 	    warning ("save: no such variable `%s'", *argv);
 	}
     }
 
   if (file);
     file.close ();
 
   DELETE_ARGV;
-#endif
 
   return retval;
 }
 
 DEFUN_TEXT ("who", Fwho, Swho, -1, 1,
   "who [-all] [-builtins] [-functions] [-long] [-variables]\n\
 \n\
 List currently defined symbol(s).  Options may be shortened to one\n\
