# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1494969789 14400
#      Tue May 16 17:23:09 2017 -0400
# Node ID 647705ffb110014e0ef413765a8c34edc571426d
# Parent  f45402b9dcc435f1f64fb733c0802ac4c7abf2e1
use F77_INT type for integer args to Fortran MEX functions

* mex.cc (fmex_fptr, call_mex): Use F77_INT for integer arguments in
  Fortran MEX fucntion interface.

diff --git a/libinterp/corefcn/mex.cc b/libinterp/corefcn/mex.cc
--- a/libinterp/corefcn/mex.cc
+++ b/libinterp/corefcn/mex.cc
@@ -3075,18 +3075,18 @@ size_t
 mxGetElementSize (const mxArray *ptr)
 {
   return ptr->get_element_size ();
 }
 
 // ------------------------------------------------------------------
 
 typedef void (*cmex_fptr) (int nlhs, mxArray **plhs, int nrhs, mxArray **prhs);
-typedef F77_RET_T (*fmex_fptr) (int& nlhs, mxArray **plhs,
-                                int& nrhs, mxArray **prhs);
+typedef F77_RET_T (*fmex_fptr) (F77_INT& nlhs, mxArray **plhs,
+                                F77_INT& nrhs, mxArray **prhs);
 
 octave_value_list
 call_mex (bool have_fmex, void *f, const octave_value_list& args,
           int nargout_arg, octave_mex_function *curr_mex_fcn)
 {
   octave_quit ();
 
   // Use at least 1 for nargout since even for zero specified args,
@@ -3115,18 +3115,18 @@ call_mex (bool have_fmex, void *f, const
     argin[i] = context.make_value (args(i));
 
   mex_context = &context;
 
   if (have_fmex)
     {
       fmex_fptr fcn = reinterpret_cast<fmex_fptr> (f);
 
-      int tmp_nargout = nargout;
-      int tmp_nargin = nargin;
+      F77_INT tmp_nargout = nargout;
+      F77_INT tmp_nargin = nargin;
 
       fcn (tmp_nargout, argout, tmp_nargin, argin);
     }
   else
     {
       cmex_fptr fcn = reinterpret_cast<cmex_fptr> (f);
 
       fcn (nargout, argout, nargin, argin);
