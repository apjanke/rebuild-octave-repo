# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1261797979 18000
#      Fri Dec 25 22:26:19 2009 -0500
# Node ID 9b3a100922a6a2500251000c988035bf70e5972e
# Parent  acd5e9df38f847419e10ef6aab7be5f9bc07f1ad
fntests.m: use regexp instead of findstr and only recognize tests that are the first thing on a line

diff --git a/test/ChangeLog b/test/ChangeLog
--- a/test/ChangeLog
+++ b/test/ChangeLog
@@ -1,8 +1,13 @@
+2009-12-25  John W. Eaton  <jwe@octave.org>
+
+	* fntests.m (hastests): Use regexp instead of findstr and only
+	match tests that appear as the first thing on a line.
+
 2009-12-19  Rik <octave@nomad.inbox5.com>
 
 	* build_sparse_tests.sh: Use lognrnd instead of deprecated lognormal_rnd
 
 2009-12-19  Rik <octave@nomad.inbox5.com>
 
 	* Makefile.am: Eliminate TOPDIR variable in favor of built-in automake
 	variables of top_builddir and top_srcdir.
diff --git a/test/fntests.m b/test/fntests.m
--- a/test/fntests.m
+++ b/test/fntests.m
@@ -82,31 +82,31 @@ endfunction
 ## FIXME -- should we only try match the keyword at the start of a line?
 function y = hastests (f)
   fid = fopen (f);
   if (fid < 0)
     error ("fopen failed: %s", f);
   else
     str = fread (fid, "*char")';
     fclose (fid);
-    y = (findstr (str, "%!test") || findstr (str, "%!assert")
-	 || findstr (str, "%!error") || findstr (str, "%!warning"));
+    y = ! isempty (regexp (str, "^[ \t]*%!(test|assert|error|warning)",
+                           "lineanchors"));
   endif
 endfunction
 
 function [dp, dn, dxf, dsk] = run_test_dir (fid, d);
   global files_with_tests;
   global files_with_no_tests;
   lst = dir (d);
   dp = dn = dxf = dsk = 0;
   for i = 1:length (lst)
     nm = lst(i).name;
     if (length (nm) > 5 && strcmp (nm(1:5), "test_")
 	&& strcmp (nm((end-1):end), ".m"))
-      p = n = 0;
+      p = n = xf = sk = 0;
       ffnm = fullfile (d, nm);
       if (hastests (ffnm))
 	print_test_file_name (nm);
 	[p, n, xf, sk] = test (nm(1:(end-2)), "quiet", fid);
 	print_pass_fail (n, p);
 	files_with_tests(end+1) = ffnm;
       else
 	files_with_no_tests(end+1) = ffnm;
