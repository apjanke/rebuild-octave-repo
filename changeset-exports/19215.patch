# HG changeset patch
# User Rik <rik@octave.org>
# Date 1412478970 25200
#      Sat Oct 04 20:16:10 2014 -0700
# Node ID c61deba773ab0d2695ebfbd49179ca33f3def3c5
# Parent  8cc4a9bb253b4fd2a405713fa440dfc3479ce86b
Add BIST test to perl() and python().

* perl.m, python.m: Reformat docstring to have a single line description of
function first.  Add BIST test.

diff --git a/scripts/miscellaneous/perl.m b/scripts/miscellaneous/perl.m
--- a/scripts/miscellaneous/perl.m
+++ b/scripts/miscellaneous/perl.m
@@ -16,19 +16,21 @@
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {@var{output} =} perl (@var{scriptfile})
 ## @deftypefnx {Function File} {@var{output} =} perl (@var{scriptfile}, @var{argument1}, @var{argument2}, @dots{})
 ## @deftypefnx {Function File} {[@var{output}, @var{status}] =} perl (@dots{})
 ## Invoke Perl script @var{scriptfile}, possibly with a list of command line
-## arguments.  Return output in @var{output} and optional status in
-## @var{status}.  If @var{scriptfile} is not an absolute file name it is
-## is searched for in the current directory and then in the Octave loadpath.
+## arguments.
+##
+## Return output in @var{output} and optional status in @var{status}.  If
+## @var{scriptfile} is not an absolute file name it is is searched for in the
+## current directory and then in the Octave loadpath.
 ## @seealso{system, python}
 ## @end deftypefn
 
 function [output, status] = perl (scriptfile = "-e ''", varargin)
 
   ## VARARGIN is intialized to {}(1x0) if no additional arguments are
   ## supplied, so there is no need to check for it, or provide an
   ## initial value in the argument list of the function definition.
@@ -44,8 +46,11 @@ function [output, status] = perl (script
     [status, output] = system (["perl " scriptfile ...
                                 sprintf(" %s", varargin{:})]);
   else
     error ("perl: invalid arguments");
   endif
 
 endfunction
 
+
+%!error <invalid arguments> perl (123)
+
diff --git a/scripts/miscellaneous/python.m b/scripts/miscellaneous/python.m
--- a/scripts/miscellaneous/python.m
+++ b/scripts/miscellaneous/python.m
@@ -17,19 +17,21 @@
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {@var{output} =} python (@var{scriptfile})
 ## @deftypefnx {Function File} {@var{output} =} python (@var{scriptfile}, @var{argument1}, @var{argument2}, @dots{})
 ## @deftypefnx {Function File} {[@var{output}, @var{status}] =} python (@dots{})
 ## Invoke Python script @var{scriptfile}, possibly with a list of command line
-## arguments.  Return output in @var{output} and optional status in
-## @var{status}.  If @var{scriptfile} is not an absolute file name it is
-## is searched for in the current directory and then in the Octave loadpath.
+## arguments.
+##
+## Return output in @var{output} and optional status in @var{status}.  If
+## @var{scriptfile} is not an absolute file name it is is searched for in the
+## current directory and then in the Octave loadpath.
 ## @seealso{system, perl}
 ## @end deftypefn
 
 ## Author: CarnÃ« Draug <carandraug+dev@gmail.com>
 
 function [output, status] = python (scriptfile = "-c ''", varargin)
 
   if (ischar (scriptfile)
@@ -43,8 +45,11 @@ function [output, status] = python (scri
     [status, output] = system (["python ", scriptfile, ...
                                 sprintf(" %s", varargin{:})]);
   else
     error ("python: invalid arguments");
   endif
 
 endfunction
 
+
+%!error <invalid arguments> python (123)
+
