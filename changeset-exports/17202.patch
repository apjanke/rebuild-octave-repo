# HG changeset patch
# User Philipp Kutin <philipp.kutin@gmail.com>
# Date 1374943692 -7200
#      Sat Jul 27 18:48:12 2013 +0200
# Node ID 9e613baf431ed030b422bd055b1cb27fa1418e8b
# Parent  d23fcc227fa9925d502f357c4ccda6af91dc808a
profexplore.m: Allow calling with no args, add "quit" as alias to "exit".

* scripts/general/profexplore.m: If called with no args, use data from
`profile ("info")'. Add "quit" alias to "exit" for convenience and
consistency with the top level.

diff --git a/scripts/general/profexplore.m b/scripts/general/profexplore.m
--- a/scripts/general/profexplore.m
+++ b/scripts/general/profexplore.m
@@ -12,32 +12,36 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {} profexplore (@var{data})
+## @deftypefn {Function File} {} profexplore ()
+## @deftypefnx {Function File} {} profexplore (@var{data})
 ## Interactively explore hierarchical profiler output.
 ##
 ## Assuming @var{data} is the structure with profile data returned by
 ## @code{profile ("info")}, this command opens an interactive prompt
 ## that can be used to explore the call-tree.  Type @kbd{help} to get a list
-## of possible commands.
+## of possible commands. If @var{data} is omitted, @code{profile ("info")}
+## is called and used in its place.
 ## @seealso{profile, profshow}
 ## @end deftypefn
 
 ## Built-in profiler.
 ## Author: Daniel Kraft <d@domob.eu>
 
 function profexplore (data)
 
-  if (nargin != 1)
+  if (nargin == 0)
+    data = profile ("info");
+  elseif (nargin != 1)
     print_usage ();
   endif
 
   ## The actual work is done by a recursive worker function, since that
   ## is an easy way to traverse the tree datastructure.  Here, we just check
   ## the arguments (already done) and give over to it.
 
   __profexplore_worker (data.FunctionTable, data.Hierarchical, "Top\n", "  ");
@@ -73,22 +77,23 @@ function rv = __profexplore_worker (fcn_
                             tree(i).TotalTime, tree(i).SelfTime);
       printf ("%s%d) %s\n", prefix, i, strings{i});
     endfor
     printf ("\n");
 
     cmd = input ("profexplore> ", "s");
     option = fix (str2double (cmd));
 
-    if (strcmp (cmd, "exit"))
+    if (strcmp (cmd, "exit") || strcmp (cmd, "quit"))
       rv = 0;
       return;
     elseif (strcmp (cmd, "help"))
       printf ("\nCommands for profile explorer:\n\n");
       printf ("exit   Return to Octave prompt.\n");
+      printf ("quit   Return to Octave prompt.\n");
       printf ("help   Display this help message.\n");
       printf ("up [N] Go up N levels, where N is an integer.  Default is 1.\n");
       printf ("N      Go down a level into option N.\n");
     elseif (! isnan (option))
       if (option < 1 || option > length (tree))
         printf ("The chosen option is out of range!\n");
       else
         newParents = sprintf ("%s%s%s\n", parents, prefix, strings{option});
