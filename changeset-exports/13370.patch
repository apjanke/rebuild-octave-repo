# HG changeset patch
# User Jacob Dawid <jacob.dawid@googlemail.com>
# Date 1302203673 -7200
#      Thu Apr 07 21:14:33 2011 +0200
# Node ID 3b089411a59d4628caefae559cc5140b31dd4e44
# Parent  ed8625feac69c448046e5ac7fa55ce238f818351
Added menubar, octave terminals can be added dynamically. Removed behaviour of maximizing at startup.

diff --git a/gui//src/MainWindow.cpp b/gui//src/MainWindow.cpp
--- a/gui//src/MainWindow.cpp
+++ b/gui//src/MainWindow.cpp
@@ -22,33 +22,42 @@
 #include <QtWebKit/QWebView>
 
 #include "MainWindow.h"
 #include "TerminalMdiSubWindow.h"
 
 MainWindow::MainWindow(QWidget *parent)
     : QMainWindow(parent) {
     m_mdiArea = new QMdiArea();
+    setWindowTitle("Quint");
     setCentralWidget(m_mdiArea);
 
+    constructWindow();
+
     loadWebPage("Online Manual", "http://www.gnu.org/software/octave/doc/interpreter/");
-    addTerminalWindow();
-    addTerminalWindow();
+    //addTerminalWindow();
     m_mdiArea->setViewMode(QMdiArea::SubWindowView);
-    showMaximized();
 }
 
 MainWindow::~MainWindow() {
 
 }
 
 void MainWindow::addTerminalWindow() {
     TerminalMdiSubWindow *terminal = new TerminalMdiSubWindow;
     m_mdiArea->addSubWindow(terminal);
+    terminal->show();
 }
 
 void MainWindow::loadWebPage(QString title, QString url) {
 
     QWebView *webView = new QWebView();
     webView->setWindowTitle(title);
     webView->load(QUrl(url));
     m_mdiArea->addSubWindow(webView);
 }
+
+void MainWindow::constructWindow() {
+    QMenu *viewsMenu = menuBar()->addMenu("Views");
+    QAction *addOctaveTerminalAction = viewsMenu->addAction("Add Octave Terminal");
+
+    connect(addOctaveTerminalAction, SIGNAL(triggered()), this, SLOT(addTerminalWindow()));
+}
diff --git a/gui//src/MainWindow.h b/gui//src/MainWindow.h
--- a/gui//src/MainWindow.h
+++ b/gui//src/MainWindow.h
@@ -25,21 +25,23 @@
 /**
   * \class MainWindow
   *
   * Represents the main window.
   */
 class MainWindow : public QMainWindow
 {
     Q_OBJECT
-
 public:
     MainWindow(QWidget *parent = 0);
     ~MainWindow();
 
+public slots:
     void addTerminalWindow();
     void loadWebPage(QString title, QString url);
 
 private:
+    void constructWindow();
+
     QMdiArea *m_mdiArea;
 };
 
 #endif // MAINWINDOW_H
