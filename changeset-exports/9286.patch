# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1243929464 -7200
#      Tue Jun 02 09:57:44 2009 +0200
# Node ID c2248cc4821a4ad5dceb48416897c43503a157ab
# Parent  226f6d001ee2d28abd7518f65257145edfc4d35b
don't crash on assignments like a() = 1

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,16 @@
+2009-06-02  Jaroslav Hajek  <highegg@gmail.com>
+
+	* ov-base.cc (octave_base_value::numeric_assign): Gripe when no index
+	given.
+	* ov-cell.cc (octave_cell::subsasgn): Ditto.
+	* ov-struct.cc (octave_struct::subsasgn): Ditto.
+	* ov-list.cc (octave_list::subsasgn): Ditto.
+
 2009-05-28  John W. Eaton  <jwe@octave.org>
 
 	* load-path.cc (load_path::do_files): Avoid shadow warning from GCC.
 
 2009-05-27  John W. Eaton  <jwe@octave.org>
 
 	* DLD-FUNCTIONS/__magick_read__.cc (write_image):
 	Bail out if given indexed image.
diff --git a/src/ov-base.cc b/src/ov-base.cc
--- a/src/ov-base.cc
+++ b/src/ov-base.cc
@@ -1198,16 +1198,22 @@ gripe_no_conversion (const std::string& 
 
 octave_value
 octave_base_value::numeric_assign (const std::string& type,
 				   const std::list<octave_value_list>& idx,
 				   const octave_value& rhs)
 {
   octave_value retval;
 
+  if (idx.front ().empty ())
+    {
+      error ("missing index in indexed assignment");
+      return retval;
+    }
+
   int t_lhs = type_id ();
   int t_rhs = rhs.type_id ();
 
   octave_value_typeinfo::assign_op_fcn f
     = octave_value_typeinfo::lookup_assign_op (octave_value::op_asn_eq,
 					       t_lhs, t_rhs);
 
   bool done = false;
diff --git a/src/ov-cell.cc b/src/ov-cell.cc
--- a/src/ov-cell.cc
+++ b/src/ov-cell.cc
@@ -211,16 +211,22 @@ octave_cell::subsasgn (const std::string
   octave_value retval;
 
   int n = type.length ();
 
   octave_value t_rhs = rhs;
 
   clear_cellstr_cache ();
 
+  if (idx.front ().empty ())
+    {
+      error ("missing index in indexed assignment");
+      return retval;
+    }
+
   if (n > 1)
     {
       switch (type[0])
 	{
 	case '(':
 	  {
 	    if (is_empty () && type[1] == '.')
 	      {
diff --git a/src/ov-list.cc b/src/ov-list.cc
--- a/src/ov-list.cc
+++ b/src/ov-list.cc
@@ -152,16 +152,22 @@ octave_list::subsasgn (const std::string
 		       const octave_value& rhs)
 {
   octave_value retval;
 
   octave_idx_type n = type.length ();
 
   octave_value t_rhs = rhs;
 
+  if (idx.front ().empty ())
+    {
+      error ("missing index in indexed assignment");
+      return retval;
+    }
+
   if (n > 1)
     {
       switch (type[0])
 	{
 	case '(':
 	  {
 	    octave_value tmp = do_index_op (idx.front (), true);
 
diff --git a/src/ov-struct.cc b/src/ov-struct.cc
--- a/src/ov-struct.cc
+++ b/src/ov-struct.cc
@@ -259,16 +259,22 @@ octave_struct::subsasgn (const std::stri
 			 const octave_value& rhs)
 {
   octave_value retval;
 
   int n = type.length ();
 
   octave_value t_rhs = rhs;
 
+  if (idx.front ().empty ())
+    {
+      error ("missing index in indexed assignment");
+      return retval;
+    }
+
   if (n > 1 && ! (type.length () == 2 && type[0] == '(' && type[1] == '.'))
     {
       switch (type[0])
 	{
 	case '(':
 	  {
 	    if (type.length () > 1 && type[1] == '.')
 	      {
