# HG changeset patch
# User jwe
# Date 823425296 0
#      Sun Feb 04 09:14:56 1996 +0000
# Node ID 369ad9cf76aa4b9cbea08581bc60e47af19916ab
# Parent  99d5b59cb855651bcef0d2fbcfd6a6f131924fdc
[project @ 1996-02-04 09:14:18 by jwe]

diff --git a/liboctave/CColVector.cc b/liboctave/CColVector.cc
--- a/liboctave/CColVector.cc
+++ b/liboctave/CColVector.cc
@@ -189,18 +189,17 @@ ComplexColumnVector::hermitian (void) co
 {
   int len = length ();
   return ComplexRowVector (conj_dup (data (), len), len);
 }
 
 ComplexRowVector
 ComplexColumnVector::transpose (void) const
 {
-  int len = length ();
-  return ComplexRowVector (dup (data (), len), len);
+  return ComplexRowVector (*this);
 }
 
 ComplexColumnVector
 conj (const ComplexColumnVector& a)
 {
   int a_len = a.length ();
   ComplexColumnVector retval;
   if (a_len > 0)
diff --git a/liboctave/CRowVector.cc b/liboctave/CRowVector.cc
--- a/liboctave/CRowVector.cc
+++ b/liboctave/CRowVector.cc
@@ -189,18 +189,17 @@ ComplexRowVector::hermitian (void) const
 {
   int len = length ();
   return ComplexColumnVector (conj_dup (data (), len), len);
 }
 
 ComplexColumnVector
 ComplexRowVector::transpose (void) const
 {
-  int len = length ();
-  return ComplexColumnVector (dup (data (), len), len);
+  return ComplexColumnVector (*this);
 }
 
 ComplexRowVector
 conj (const ComplexRowVector& a)
 {
   int a_len = a.length ();
   ComplexRowVector retval;
   if (a_len > 0)
diff --git a/liboctave/dColVector.cc b/liboctave/dColVector.cc
--- a/liboctave/dColVector.cc
+++ b/liboctave/dColVector.cc
@@ -118,18 +118,17 @@ ColumnVector::stack (const ColumnVector&
   retval.insert (*this, 0);
   retval.insert (a, nr_insert);
   return retval;
 }
 
 RowVector
 ColumnVector::transpose (void) const
 {
-  int len = length ();
-  return RowVector (dup (data (), len), len);
+  return RowVector (*this);
 }
 
 ColumnVector
 real (const ComplexColumnVector& a)
 {
   int a_len = a.length ();
   ColumnVector retval;
   if (a_len > 0)
diff --git a/liboctave/dRowVector.cc b/liboctave/dRowVector.cc
--- a/liboctave/dRowVector.cc
+++ b/liboctave/dRowVector.cc
@@ -121,18 +121,17 @@ RowVector::append (const RowVector& a) c
   retval.insert (*this, 0);
   retval.insert (a, nc_insert);
   return retval;
 }
 
 ColumnVector
 RowVector::transpose (void) const
 {
-  int len = length ();
-  return ColumnVector (dup (data (), len), len);
+  return ColumnVector (*this);
 }
 
 RowVector
 real (const ComplexRowVector& a)
 {
   int a_len = a.length ();
   RowVector retval;
   if (a_len > 0)
