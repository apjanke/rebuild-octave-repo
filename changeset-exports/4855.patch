# HG changeset patch
# User jwe
# Date 1081305682 0
#      Wed Apr 07 02:41:22 2004 +0000
# Node ID d62c421f448b3036651ee0b9e47aee58f189199b
# Parent  4b0f3b055331379dc6d3d5a1d7826e22cdb074cc
[project @ 2004-04-07 02:41:22 by jwe]

diff --git a/scripts/control/system/is_controllable.m b/scripts/control/system/is_controllable.m
--- a/scripts/control/system/is_controllable.m
+++ b/scripts/control/system/is_controllable.m
@@ -31,17 +31,17 @@
 ## @item tol
 ## optional roundoff paramter.  default value: @code{10*eps}
 ## @end table
 ##
 ## @strong{Outputs}
 ## @table @var
 ## @item retval
 ## Logical flag; returns true (1) if the system @var{sys} or the
-## pair (@var{a},@var{b}) is controllable, whichever was passed as input
+## pair (@var{a}, @var{b}) is controllable, whichever was passed as input
 ## arguments.
 ## @item U
 ##  U is an orthogonal basis of the controllable subspace.
 ## @end table
 ##
 ## @strong{Method}
 ## Controllability is determined by applying Arnoldi iteration with
 ## complete re-orthogonalization to obtain an orthogonal basis of the
diff --git a/scripts/control/system/is_detectable.m b/scripts/control/system/is_detectable.m
--- a/scripts/control/system/is_detectable.m
+++ b/scripts/control/system/is_detectable.m
@@ -14,19 +14,19 @@
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {@var{retval} =} is_detectable (@var{a}, @var{c}, @var{tol}, @var{dflg})
 ## @deftypefnx {Function File} {@var{retval} =} is_detectable (@var{sys}, @var{tol})
-## Test for detactability (observability of unstable modes) of (@var{a},@var{c}).
+## Test for detactability (observability of unstable modes) of (@var{a}, @var{c}).
 ##
-## Returns 1 if the system @var{a} or the pair (@var{a},@var{c})is
+## Returns 1 if the system @var{a} or the pair (@var{a}, @var{c}) is
 ## detectable, 0 if not, and -1 if the system has unobservable modes at the
 ## imaginary axis (unit circle for discrete-time systems)
 ##
 ## @strong{See} @code{is_stabilizable} for detailed description of
 ## arguments and computational method.
 ##
 ##
 ## @end deftypefn
diff --git a/scripts/control/system/is_observable.m b/scripts/control/system/is_observable.m
--- a/scripts/control/system/is_observable.m
+++ b/scripts/control/system/is_observable.m
@@ -18,17 +18,17 @@
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {[@var{retval}, @var{u}] =} is_observable (@var{a}, @var{c}, @var{tol})
 ## @deftypefnx {Function File} {[@var{retval}, @var{u}] =} is_observable (@var{sys}, @var{tol})
 ## Logical check for system observability.
 ##
 ## Default: tol = 10*norm(a,'fro')*eps
 ##
-## Returns 1 if the system @var{sys} or the pair (@var{a},@var{c}) is
+## Returns 1 if the system @var{sys} or the pair (@var{a}, @var{c}) is
 ## observable, 0 if not.
 ##
 ## @strong{See} @code{is_controllable} for detailed description of arguments
 ## and default values.
 ## @end deftypefn
 ## @seealso{size, rows, columns, length, ismatrix, isscalar, and isvector}
 
 ## Author: A. S. Hodel <a.s.hodel@eng.auburn.edu>
diff --git a/scripts/control/system/ss.m b/scripts/control/system/ss.m
--- a/scripts/control/system/ss.m
+++ b/scripts/control/system/ss.m
@@ -134,18 +134,18 @@
 ## where @math{cout} is the list of in 1:@code{rows}(@var{p})
 ## that are not contained in outlist. (Discrete/continuous outputs
 ## may be entered in any order desired by the user.)
 ##
 ## @strong{Example}
 ## @example
 ## octave:1> a = [1 2 3; 4 5 6; 7 8 10];
 ## octave:2> b = [0 0 ; 0 1 ; 1 0];
-## octave:3> c = eye(3);
-## octave:4> sys = ss(a,b,c,[],0,3,0,@{"volts","amps","joules"@});
+## octave:3> c = eye (3);
+## octave:4> sys = ss (a, b, c, [], 0, 3, 0, @{"volts", "amps", "joules"@});
 ## octave:5> sysout(sys);
 ## Input(s)
 ##         1: u_1
 ##         2: u_2
 ##
 ## Output(s):
 ##         1: y_1
 ##         2: y_2
diff --git a/scripts/control/system/ss2sys.m b/scripts/control/system/ss2sys.m
--- a/scripts/control/system/ss2sys.m
+++ b/scripts/control/system/ss2sys.m
@@ -134,18 +134,18 @@
 ## where @math{cout} is the list of in 1:@code{rows}(@var{p})
 ## that are not contained in outlist. (Discrete/continuous outputs
 ## may be entered in any order desired by the user.)
 ##
 ## @strong{Example}
 ## @example
 ## octave:1> a = [1 2 3; 4 5 6; 7 8 10];
 ## octave:2> b = [0 0 ; 0 1 ; 1 0];
-## octave:3> c = eye(3);
-## octave:4> sys = ss(a,b,c,[],0,3,0,@{"volts","amps","joules"@});
+## octave:3> c = eye (3);
+## octave:4> sys = ss (a, b, c, [], 0, 3, 0, @{"volts", "amps", "joules"@});
 ## octave:5> sysout(sys);
 ## Input(s)
 ##         1: u_1
 ##         2: u_2
 ##
 ## Output(s):
 ##         1: y_1
 ##         2: y_2
diff --git a/scripts/control/system/sysprune.m b/scripts/control/system/sysprune.m
--- a/scripts/control/system/sysprune.m
+++ b/scripts/control/system/sysprune.m
@@ -27,18 +27,18 @@
 ## @item out_idx
 ## @itemx in_idx
 ##
 ## Indices or signal names of the outputs and inputs to be kept in the returned
 ## system; remaining connections are "pruned" off.
 ## May select as [] (empty matrix) to specify all outputs/inputs.
 ##
 ## @example
-## retsys = sysprune(Asys,[1:3,4],"u_1");
-## retsys = sysprune(Asys,@{"tx","ty","tz"@}, 4);
+## retsys = sysprune (Asys, [1:3,4], "u_1");
+## retsys = sysprune (Asys, @{"tx", "ty", "tz"@}, 4);
 ## @end example
 ##
 ## @end table
 ##
 ## @strong{Outputs}
 ## @var{retsys}: resulting system
 ## @example
 ## @group
diff --git a/scripts/general/isdefinite.m b/scripts/general/isdefinite.m
--- a/scripts/general/isdefinite.m
+++ b/scripts/general/isdefinite.m
@@ -13,17 +13,17 @@
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ## 02111-1307, USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {} isdefinite (@var{x},@var{tol})
+## @deftypefn {Function File} {} isdefinite (@var{x}, @var{tol})
 ## Return 1 if @var{x} is symmetric positive definite within the
 ## tolerance specified by @var{tol} or 0 if @var{x} is symmetric
 ## positive semidefinite.  Otherwise, return -1.  If @var{tol}
 ## is omitted, use a tolerance equal to 100 times the machine precision.  
 ## @end deftypefn
 ## @seealso{issymmetric}
 
 ## Author: Gabriele Pannocchia <g.pannocchia@ing.unipi.it>
diff --git a/scripts/statistics/base/cor.m b/scripts/statistics/base/cor.m
--- a/scripts/statistics/base/cor.m
+++ b/scripts/statistics/base/cor.m
@@ -14,17 +14,17 @@
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ## 02111-1307, USA.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} cor (@var{x}, @var{y})
-## The (@var{i},@var{j})-th entry of @code{cor (@var{x}, @var{y})} is
+## The (@var{i}, @var{j})-th entry of @code{cor (@var{x}, @var{y})} is
 ## the correlation between the @var{i}-th variable in @var{x} and the
 ## @var{j}-th variable in @var{y}.
 ##
 ## For matrices, each row is an observation and each column a variable;
 ## vectors are always observations and may be row or column vectors.
 ##
 ## @code{cor (@var{x})} is equivalent to @code{cor (@var{x}, @var{x})}.
 ## @end deftypefn
diff --git a/scripts/statistics/base/corrcoef.m b/scripts/statistics/base/corrcoef.m
--- a/scripts/statistics/base/corrcoef.m
+++ b/scripts/statistics/base/corrcoef.m
@@ -15,17 +15,17 @@
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ## 02111-1307, USA.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} corrcoef (@var{x}, @var{y})
 ## If each row of @var{x} and @var{y} is an observation and each column is
-## a variable, the (@var{i},@var{j})-th entry of
+## a variable, the (@var{i}, @var{j})-th entry of
 ## @code{corrcoef (@var{x}, @var{y})} is the correlation between the
 ## @var{i}-th variable in @var{x} and the @var{j}-th variable in @var{y}.
 ## If called with one argument, compute @code{corrcoef (@var{x}, @var{x})}.
 ## @end deftypefn
 
 ## Author: Kurt Hornik <hornik@ci.tuwien.ac.at>
 ## Created: March 1993
 ## Adapted-By: jwe
diff --git a/scripts/statistics/base/cov.m b/scripts/statistics/base/cov.m
--- a/scripts/statistics/base/cov.m
+++ b/scripts/statistics/base/cov.m
@@ -15,17 +15,17 @@
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ## 02111-1307, USA.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} cov (@var{x}, @var{y})
 ## If each row of @var{x} and @var{y} is an observation and each column is
-## a variable, the (@var{i},@var{j})-th entry of
+## a variable, the (@var{i}, @var{j})-th entry of
 ## @code{cov (@var{x}, @var{y})} is the covariance between the @var{i}-th
 ## variable in @var{x} and the @var{j}-th variable in @var{y}.  If called
 ## with one argument, compute @code{cov (@var{x}, @var{x})}.
 ## @end deftypefn
 
 ## Author: KH <Kurt.Hornik@ci.tuwien.ac.at>
 ## Description: Compute covariances
 
diff --git a/scripts/statistics/base/moment.m b/scripts/statistics/base/moment.m
--- a/scripts/statistics/base/moment.m
+++ b/scripts/statistics/base/moment.m
@@ -13,17 +13,17 @@
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ## 02111-1307, USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {} moment (@var{x}, @var{p}, @var{opt},@var{dim})
+## @deftypefn {Function File} {} moment (@var{x}, @var{p}, @var{opt}, @var{dim})
 ## If @var{x} is a vector, compute the @var{p}-th moment of @var{x}.
 ##
 ## If @var{x} is a matrix, return the row vector containing the
 ## @var{p}-th moment of each column.
 ##
 ## With the optional string opt, the kind of moment to be computed can
 ## be specified.  If opt contains @code{"c"} or @code{"a"}, central
 ## and/or absolute moments are returned.  For example,
diff --git a/scripts/statistics/distributions/wiener_rnd.m b/scripts/statistics/distributions/wiener_rnd.m
--- a/scripts/statistics/distributions/wiener_rnd.m
+++ b/scripts/statistics/distributions/wiener_rnd.m
@@ -15,17 +15,17 @@
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ## 02111-1307, USA.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} wiener_rnd (@var{t}, @var{d}, @var{n})
 ## Return a simulated realization of the @var{d}-dimensional Wiener Process
-## on the interval [0,@var{t}].  If @var{d} is omitted, @var{d} = 1 is
+## on the interval [0, @var{t}].  If @var{d} is omitted, @var{d} = 1 is
 ## used. The first column of the return matrix contains time, the
 ## remaining columns contain the Wiener process.
 ##
 ## The optional parameter @var{n} gives the number of summands used for
 ## simulating the process over an interval of length 1.  If @var{n} is
 ## omitted, @var{n} = 1000 is used.
 ## @end deftypefn
 
