# HG changeset patch
# User Daniel J Sebald <daniel.sebald@ieee.org>
# Date 1519377140 21600
#      Fri Feb 23 03:12:20 2018 -0600
# Node ID abfd4fc1b97706b01d573c5b412f6a50a77f0f7b
# Parent  8585b3f9c28cab59ad64675dcdbc37752e086464
Add boundary tests on QLists associated with Qt inputdlg() routine (bug #53209).

* dialog.cc (InputDialog::InputDialog): Check that 'defaults', 'nr' and 'nc'
  contain item i before accessing item i.

diff --git a/libgui/src/dialog.cc b/libgui/src/dialog.cc
--- a/libgui/src/dialog.cc
+++ b/libgui/src/dialog.cc
@@ -354,37 +354,39 @@ namespace octave
     buttonOk_clicked ();
   }
 
   InputDialog::InputDialog (const QStringList& prompt, const QString& title,
                             const QFloatList& nr, const QFloatList& nc,
                             const QStringList& defaults)
     : QDialog ()
   {
-    // FIXME: Why define and then immediately test value?
+
 #define LINE_EDIT_FOLLOWS_PROMPT 0
 
 #if LINE_EDIT_FOLLOWS_PROMPT
     // Prompt on left followed by input on right.
     QGridLayout *promptInputLayout = new QGridLayout;
 #else
     // Prompt aligned above input.
     QVBoxLayout *promptInputLayout = new QVBoxLayout;
 #endif
     int N_gridrows = prompt.size ();
     for (int i = 0; i < N_gridrows; i++)
       {
         QLabel *label = new QLabel (prompt.at (i));
-        QLineEdit *line_edit = new QLineEdit (defaults.at (i));
-        if (nr.at (i) > 0)
+        QLineEdit *line_edit = new QLineEdit ();
+        if (i < defaults.size ())
+          line_edit->setText (defaults.at (i));
+        if (i < nr.size () && nr.at (i) > 0)
           {
             QSize qsize = line_edit->sizeHint ();
             int intval = qsize.height () * nr.at (i);
             line_edit->setFixedHeight (intval);
-            if (nc.at (i) > 0)
+            if (i < nc.size () && nc.at (i) > 0)
               {
                 intval = qsize.height () * nc.at (i) / 2;
                 line_edit->setFixedWidth (intval);
               }
           }
         input_line << line_edit;
 #if LINE_EDIT_FOLLOWS_PROMPT
         promptInputLayout->addWidget (label, i + 1, 0);
