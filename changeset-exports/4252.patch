# HG changeset patch
# User jwe
# Date 1041356462 0
#      Tue Dec 31 17:41:02 2002 +0000
# Node ID 20e70f7f1dbe9b8fbb2af3c6a71181963d2ab2df
# Parent  48fb5cec5d778b738f4cc616bd997b964b8964ce
[project @ 2002-12-31 17:41:02 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,14 @@
+2002-12-31  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* ov.h (DECLARE_OV_TYPEID_FUNCTIONS_AND_DATA): Delete volatile
+	qualifier for decls of static_type_id and t_id.
+	(DEFINE_OV_TYPEID_FUNCTIONS_AND_DATA): Likewise, for def of t_id.
+
 2002-12-30  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* utils.cc (Ffile_in_path): Index args correctly.
 
 	* utils.cc (Ffile_in_path): Call error, not print_usage, for
 	invalid option error.
 	(Ffile_in_loadpath): Likewise.
 
diff --git a/src/ov.h b/src/ov.h
--- a/src/ov.h
+++ b/src/ov.h
@@ -653,26 +653,26 @@ OV_BINOP_FN (op_el_or)
 OV_BINOP_FN (op_struct_ref)
 
 // T_ID is the type id of struct objects, set by register_type().
 // T_NAME is the type name of struct objects.
 #define DECLARE_OV_TYPEID_FUNCTIONS_AND_DATA \
   public: \
     int type_id (void) const { return t_id; } \
     std::string type_name (void) const { return t_name; } \
-    static volatile int static_type_id (void) { return t_id; } \
+    static int static_type_id (void) { return t_id; } \
     static void register_type (void) \
       { t_id = octave_value_typeinfo::register_type (t_name); } \
  \
   private: \
-    static volatile int t_id; \
+    static int t_id; \
     static const std::string t_name;
 
 #define DEFINE_OV_TYPEID_FUNCTIONS_AND_DATA(t, n) \
-  volatile int t::t_id (-1); \
+  int t::t_id (-1); \
   const std::string t::t_name (n)
 
 // If TRUE, allow assignments like
 //
 //   octave> A(1) = 3; A(2) = 5
 //
 // for A already defined and a matrix type.
 extern bool Vdo_fortran_indexing;
