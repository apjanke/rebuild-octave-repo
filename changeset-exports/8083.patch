# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1220456171 14400
#      Wed Sep 03 11:36:11 2008 -0400
# Node ID 16ab78b816bc8ec897bd8c00934fc2e79a6cbc48
# Parent  163d20e4d39c450943e56e3b366ce671e384c232
variables.cc (mlock): lock current function

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,13 @@
 2008-09-03  John W. Eaton  <jwe@octave.org>
 
+	* variables.cc (mlock): Lock current function on the call stack.
+	(Fmlock): Lock caller.
+
 	* symtab.cc (out_of_date_check_internal): If dispatch type is set,
 	check for method.  If that fails, check for regular function. 
 
 2008-09-02  Michael Goffioul  <michael.goffioul@gmail.com>
 
 	* graphics.cc (hggroup::update_axis_limits): Also reacts on
 	[xyzac]liminclude changes.
 
diff --git a/src/variables.cc b/src/variables.cc
--- a/src/variables.cc
+++ b/src/variables.cc
@@ -1883,17 +1883,17 @@ bind_internal_variable (const std::strin
   args(0) = val;
 
   feval (fname, args, 0);
 }
 
 void 
 mlock (void)
 {
-  octave_function *fcn = octave_call_stack::caller ();
+  octave_function *fcn = octave_call_stack::current ();
 
   if (fcn)
     fcn->lock ();
   else
     error ("mlock: invalid use outside a function");
 }
 
 void 
@@ -1933,17 +1933,24 @@ DEFCMD (mlock, args, ,
 @deftypefn {Built-in Function} {} mlock ()\n\
 Lock the current function into memory so that it can't be cleared.\n\
 @seealso{munlock, mislocked, persistent}\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
   if (args.length () == 0)
-    mlock ();
+    {
+      octave_function *fcn = octave_call_stack::caller ();
+
+      if (fcn)
+	fcn->lock ();
+      else
+	error ("mlock: invalid use outside a function");
+    }
   else
     print_usage ();
 
   return retval;
 }
 
 DEFCMD (munlock, args, ,
   "-*- texinfo -*-\n\
