# HG changeset patch
# User Rik <rik@octave.org>
# Date 1534282530 25200
#      Tue Aug 14 14:35:30 2018 -0700
# Node ID 810c7df7e5e7194daf1b1470064fd599e110b28a
# Parent  872111558bc0e68b7a9ef6d7eaf0af0689c0a9d6
figure.m: Accept structures of property/value pairs (bug #44672).

* figure.m: Change input validation to look for a numeric scalar argument as
the first argument.  If it is then validate that it is either a figure handle
or an integer for a new figure.  Use cellfun to determine which inputs in
varargin are structs and remove them before calculating whether the number
of property/value pairs is a multiple of 2.  Adjust BIST tests to pass.

diff --git a/scripts/plot/util/figure.m b/scripts/plot/util/figure.m
--- a/scripts/plot/util/figure.m
+++ b/scripts/plot/util/figure.m
@@ -43,40 +43,47 @@
 ## @end deftypefn
 
 ## Author: jwe, Bill Denney
 
 function h = figure (varargin)
 
   nargs = nargin;
 
-  if (mod (nargs, 2) == 0)
+  init_new_figure = true;
+  if (nargs == 0)
     f = NaN;
-    init_new_figure = true;
   else
     arg = varargin{1};
-    if (ischar (arg))
+    if (nargs == 1 && ischar (arg))
       arg = str2double (arg);
+      if (isnan (arg))
+        arg = varargin{1};
+      endif
     endif
-    if (isscalar (arg) && isfigure (arg))
-      f = arg;
-      init_new_figure = false;
-      varargin(1) = [];
-      nargs -= 1;
-    elseif (isscalar (arg) && isnumeric (arg) && arg > 0 && arg == fix (arg))
-      f = arg;
-      init_new_figure = true;
-      varargin(1) = [];
-      nargs -= 1;
+    if (isscalar (arg) && isnumeric (arg))
+      if (isfigure (arg))
+        f = arg;
+        init_new_figure = false;
+        varargin(1) = [];
+        nargs -= 1;
+      elseif (arg > 0 && arg == fix (arg))
+        f = arg;
+        varargin(1) = [];
+        nargs -= 1;
+      else
+        error ("figure: N must be figure handle or figure number");
+      endif
     else
-      error ("figure: N must be figure handle or figure number");
+      f = NaN;
     endif
   endif
 
-  if (rem (nargs, 2) == 1)
+  numpairs = nargs - sum (cellfun ("isclass", varargin, "struct"));
+  if (rem (numpairs, 2) == 1)
     error ("figure: PROPERTY/VALUE arguments must be in pairs");
   endif
 
   ## Check to see if we already have a figure on the screen.  If we do,
   ## then update it if it is different from the figure we are creating
   ## or switching to.
   cf = get (0, "currentfigure");   # Can't use gcf () because it calls figure()
   if (! isempty (cf) && cf != 0)
@@ -120,12 +127,12 @@ endfunction
 %!   assert (hf, hf2);
 %!   assert (hf2, gcf);
 %!   assert (isfigure (hf2));
 %!   assert (get (hf2, "visible"), "off");
 %! unwind_protect_cleanup
 %!   close (hf);
 %! end_unwind_protect
 
-%!error <N must be figure handle or figure number> figure ({1})
-%!error <N must be figure handle or figure number> figure ([1 2])
 %!error <N must be figure handle or figure number> figure (-1)
 %!error <N must be figure handle or figure number> figure (1.5)
+%!error <PROPERTY/VALUE arguments must be in pairs> figure ("color")
+%!error <PROPERTY/VALUE arguments must be in pairs> figure ("color", struct ())
