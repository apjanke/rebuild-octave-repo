# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1502457035 14400
#      Fri Aug 11 09:10:35 2017 -0400
# Node ID 8e61b91f2e2400f181da5e1c22439eaad147e7c1
# Parent  5aec653c88e74753ebe3050268aecaf9e479750a
* ov-base.cc: Eliminate unecessary uses of retval.

diff --git a/libinterp/octave-value/ov-base.cc b/libinterp/octave-value/ov-base.cc
--- a/libinterp/octave-value/ov-base.cc
+++ b/libinterp/octave-value/ov-base.cc
@@ -428,33 +428,31 @@ octave_base_value::print_raw (std::ostre
 {
   err_wrong_type_arg ("octave_base_value::print_raw ()", type_name ());
 }
 
 bool
 octave_base_value::print_name_tag (std::ostream& os,
                                    const std::string& name) const
 {
-  bool retval = false;
-
   indent (os);
 
   if (print_as_scalar ())
     os << name << " = ";
   else
     {
       os << name << " =";
       newline (os);
       if (! Vcompact_format)
         newline (os);
 
-      retval = true;
+      return true;
     }
 
-  return retval;
+  return false;
 }
 
 void
 octave_base_value::print_with_name (std::ostream& output_buf,
                                     const std::string& name,
                                     bool print_padding)
 {
   bool pad_after = print_name_tag (output_buf, name);
@@ -630,23 +628,19 @@ boolNDArray
 octave_base_value::bool_array_value (bool) const
 {
   err_wrong_type_arg ("octave_base_value::bool_array_value()", type_name ());
 }
 
 charMatrix
 octave_base_value::char_matrix_value (bool force) const
 {
-  charMatrix retval;
-
   octave_value tmp = convert_to_str (false, force);
 
-  retval = tmp.char_matrix_value ();
-
-  return retval;
+  return tmp.char_matrix_value ();
 }
 
 charNDArray
 octave_base_value::char_array_value (bool) const
 {
   err_wrong_type_arg ("octave_base_value::char_array_value()", type_name ());
 }
 
@@ -797,43 +791,35 @@ uint64NDArray
 octave_base_value::uint64_array_value (void) const
 {
   err_wrong_type_arg ("octave_base_value::uint64_array_value()", type_name ());
 }
 
 string_vector
 octave_base_value::string_vector_value (bool pad) const
 {
-  string_vector retval;
-
   octave_value tmp = convert_to_str (pad, true);
 
-  retval = tmp.string_vector_value ();
-
-  return retval;
+  return tmp.string_vector_value ();
 }
 
 std::string
 octave_base_value::string_value (bool force) const
 {
-  std::string retval;
-
   octave_value tmp = convert_to_str (force);
 
-  retval = tmp.string_value ();
-
-  return retval;
+  return tmp.string_value ();
 }
 
 std::string
 octave_base_value::xstring_value (void) const
 {
-  std::string retval;
   wrong_type_arg_error ();
-  return retval;
+
+  return std::string ();
 }
 
 Array<std::string>
 octave_base_value::cellstr_value (void) const
 {
   err_wrong_type_arg ("octave_base_value::cellstr_value()", type_name ());
 }
 
@@ -883,89 +869,75 @@ string_vector
 octave_base_value::parent_class_names (void) const
 {
   err_wrong_type_arg ("octave_base_value::parent_class_names()", type_name ());
 }
 
 octave_classdef *
 octave_base_value::classdef_object_value (bool silent)
 {
-  octave_classdef *retval = nullptr;
-
   if (! silent)
     err_wrong_type_arg ("octave_base_value::classdef_object_value()",
                         type_name ());
 
-  return retval;
+  return nullptr;
 }
 
 octave_function *
 octave_base_value::function_value (bool silent)
 {
-  octave_function *retval = nullptr;
-
   if (! silent)
     err_wrong_type_arg ("octave_base_value::function_value()", type_name ());
 
-  return retval;
+  return nullptr;
 }
 
 octave_user_function *
 octave_base_value::user_function_value (bool silent)
 {
-  octave_user_function *retval = nullptr;
-
   if (! silent)
     err_wrong_type_arg ("octave_base_value::user_function_value()",
                         type_name ());
-  return retval;
+  return nullptr;
 }
 
 octave_user_script *
 octave_base_value::user_script_value (bool silent)
 {
-  octave_user_script *retval = nullptr;
-
   if (! silent)
     err_wrong_type_arg ("octave_base_value::user_script_value()", type_name ());
 
-  return retval;
+  return nullptr;
 }
 
 octave_user_code *
 octave_base_value::user_code_value (bool silent)
 {
-  octave_user_code *retval = nullptr;
-
   if (! silent)
     err_wrong_type_arg ("octave_base_value::user_code_value()", type_name ());
 
-  return retval;
+  return nullptr;
 }
 
 octave_fcn_handle *
 octave_base_value::fcn_handle_value (bool silent)
 {
-  octave_fcn_handle *retval = nullptr;
-
   if (! silent)
     err_wrong_type_arg ("octave_base_value::fcn_handle_value()", type_name ());
 
-  return retval;
+  return nullptr;
 }
 
 octave_fcn_inline *
 octave_base_value::fcn_inline_value (bool silent)
 {
-  octave_fcn_inline *retval = nullptr;
-
   if (! silent)
     err_wrong_type_arg ("octave_base_value::fcn_inline_value()", type_name ());
 
-  return retval;
+  return nullptr;
 }
 
 octave_value_list
 octave_base_value::list_value (void) const
 {
   err_wrong_type_arg ("octave_base_value::list_value()", type_name ());
 }
 
