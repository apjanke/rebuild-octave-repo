# HG changeset patch
# User Rik <rik@octave.org>
# Date 1386265691 28800
#      Thu Dec 05 09:48:11 2013 -0800
# Node ID 6c706a83070f3ee471c1639acf5d9f82ddb330f2
# Parent  72221b9ce477a0d326ed31967720bd784b5e008c
Tweak cset 8e056300994b defining 1 var per line in liboctave.

diff --git a/liboctave/array/Array.cc b/liboctave/array/Array.cc
--- a/liboctave/array/Array.cc
+++ b/liboctave/array/Array.cc
@@ -683,19 +683,19 @@ private:
   {
     if (lev == 0)
       {
         copy_or_memcpy (cext[0], src, dest);
         fill_or_memset (dext[0] - cext[0], rfv, dest + cext[0]);
       }
     else
       {
-        octave_idx_type sd = sext[lev-1];
-        octave_idx_type dd = dext[lev-1];
-        octave_idx_type k;
+        octave_idx_type sd, dd, k;
+        sd = sext[lev-1];
+        dd = dext[lev-1];
         for (k = 0; k < cext[lev]; k++)
           do_resize_fill (src + k * sd, dest + k * dd, rfv, lev - 1);
 
         fill_or_memset (dext[lev] - k * dd, rfv, dest + k * dd);
       }
   }
 
   // No copying!
diff --git a/liboctave/operators/mx-inlines.cc b/liboctave/operators/mx-inlines.cc
--- a/liboctave/operators/mx-inlines.cc
+++ b/liboctave/operators/mx-inlines.cc
@@ -1340,18 +1340,18 @@ inline void twosum_accum (T& s, T& e,
   s = s1;
   e += e1;
 }
 
 template <class T>
 inline T
 mx_inline_xsum (const T *v, octave_idx_type n)
 {
-  T s = 0;
-  T e = 0;
+  T s, e;
+  s = e = 0;
   for (octave_idx_type i = 0; i < n; i++)
     twosum_accum (s, e, v[i]);
 
   return s + e;
 }
 
 template <class T>
 inline void
