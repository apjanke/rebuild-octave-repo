# HG changeset patch
# User CarnÃ« Draug <carandraug@octave.org>
# Date 1458669783 0
#      Tue Mar 22 18:03:03 2016 +0000
# Node ID 86d8801a14ddfbc645a1504aae90c8923a2406a8
# Parent  27f2881598fa7c543d5746f7d8219a0f0e616fd0
ribbon: support specifying X as vector to be repeated for each column in Y.

* plot/draw/ribbon.m: X can be a vector with same number of elements as rows
in Y.  Add support.  Also reduce code for (nargin == 1) case so the whole
logic of repmat is in a single place.

diff --git a/scripts/plot/draw/ribbon.m b/scripts/plot/draw/ribbon.m
--- a/scripts/plot/draw/ribbon.m
+++ b/scripts/plot/draw/ribbon.m
@@ -19,19 +19,23 @@
 ## -*- texinfo -*-
 ## @deftypefn  {} {} ribbon (@var{y})
 ## @deftypefnx {} {} ribbon (@var{x}, @var{y})
 ## @deftypefnx {} {} ribbon (@var{x}, @var{y}, @var{width})
 ## @deftypefnx {} {} ribbon (@var{hax}, @dots{})
 ## @deftypefnx {} {@var{h} =} ribbon (@dots{})
 ## Draw a ribbon plot for the columns of @var{y} vs. @var{x}.
 ##
+## If @var{x} is omitted, a vector containing the row numbers is assumed
+## (@code{1:rows (Y)}).  Alternatively, @var{x} can also be a vector with
+## same number of elements as rows of @var{y} in which case the same
+## @var{x} is used for each column of @var{y}.
+##
 ## The optional parameter @var{width} specifies the width of a single ribbon
-## (default is 0.75).  If @var{x} is omitted, a vector containing the
-## row numbers is assumed (@code{1:rows (Y)}).
+## (default is 0.75).
 ##
 ## If the first argument @var{hax} is an axes handle, then plot into this axis,
 ## rather than the current axes returned by @code{gca}.
 ##
 ## The optional return value @var{h} is a vector of graphics handles to
 ## the surface objects representing each ribbon.
 ## @seealso{surface, waterfall}
 ## @end deftypefn
@@ -46,39 +50,34 @@ function h = ribbon (varargin)
     print_usage ();
   endif
 
   if (nargin == 1)
     y = varargin{1};
     if (isvector (y))
       y = y(:);
     endif
-    [nr, nc] = size (y);
-    x = repmat ((1:nr)', 1, nc);
+    x = 1:rows(y);
     width = 0.75;
   elseif (nargin == 2)
     x = varargin{1};
     y = varargin{2};
     width = 0.75;
   else
     x = varargin{1};
     y = varargin{2};
     width = varargin{3};
   endif
 
-  if (isvector (x) && isvector (y))
-    if (length (x) != length (y))
-      error ("ribbon: vectors X and Y must have the same length");
+  if (! size_equal (x, y))
+    if (! isvector (x) || rows (y) != numel (x))
+      error (["ribbon: X must have the same dimensions as Y or be a "  ...
+              "vector with the same number of rows as Y"]);
     endif
-    x = x(:);
-    y = y(:);
-  else
-    if (! size_equal (x, y))
-      error ("ribbon: matrices X and Y must have the same size");
-    endif
+    x = repmat (x(:), 1, columns (y));
   endif
 
   oldfig = [];
   if (! isempty (hax))
     oldfig = get (0, "currentfigure");
   endif
   unwind_protect
     hax = newplot (hax);
