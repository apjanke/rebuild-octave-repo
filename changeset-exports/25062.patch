# HG changeset patch
# User Rik <rik@octave.org>
# Date 1522437301 25200
#      Fri Mar 30 12:15:01 2018 -0700
# Branch stable
# Node ID 32a7222d637a7e9cd69f19eebd7bb6caa4e0a266
# Parent  5fef743c34d76df4d4f5b7a995a37d50501b8ee0
[mq]: tr

diff --git a/libgui/src/m-editor/file-editor-tab.cc b/libgui/src/m-editor/file-editor-tab.cc
--- a/libgui/src/m-editor/file-editor-tab.cc
+++ b/libgui/src/m-editor/file-editor-tab.cc
@@ -2237,29 +2237,29 @@ namespace octave
   }
 
   bool file_editor_tab::check_valid_codec (QTextCodec *codec)
   {
     if (! codec)
       {
         QMessageBox::critical (nullptr,
                                tr ("Octave Editor"),
-                               tr ("The current codec %1\n"
+                               tr ("The current encoding %1\n"
                                    "can not be applied.\n\n"
                                    "Please select another one or cancel saving!").arg (_encoding));
 
         return true;
       }
 
     if (! codec->canEncode (_edit_area->text ()))
       {
         int ans = QMessageBox::warning (nullptr,
                                         tr ("Octave Editor"),
                                         tr ("The current editor contents can not be encoded\n"
-                                            "with the selected codec %1.\n"
+                                            "with the selected encoding %1.\n"
                                             "Using it will result in data loss!\n\n"
                                             "Do you want to chose another codec?").arg (_encoding),
                                         QMessageBox::Yes | QMessageBox::No, QMessageBox::Yes);
 
         if (ans == QMessageBox::Yes)
           return true;
       }
 
diff --git a/libgui/src/m-editor/file-editor.cc b/libgui/src/m-editor/file-editor.cc
--- a/libgui/src/m-editor/file-editor.cc
+++ b/libgui/src/m-editor/file-editor.cc
@@ -1735,17 +1735,17 @@ namespace octave
       = add_action (m_edit_fmt_menu,
                     tr ("Indent Code"),
                     SLOT (request_smart_indent_line_or_selected_text (void)));
 
     m_edit_fmt_menu->addSeparator ();
 
     m_conv_eol_windows_action
       = add_action (m_edit_fmt_menu,
-                    tr ("convert line endings to &windows (crlf)"),
+                    tr ("Convert line endings to &windows (crlf)"),
                     SLOT (request_conv_eol_windows (bool)));
 
     m_conv_eol_unix_action
       = add_action (m_edit_fmt_menu,
                     tr ("Convert Line Endings to &Unix (LF)"),
                     SLOT (request_conv_eol_unix (bool)));
 
     m_conv_eol_mac_action
@@ -2233,17 +2233,17 @@ namespace octave
 
   void file_editor::mru_menu_update (void)
   {
     int num_files = qMin (m_mru_files.size (), int (MaxMRUFiles));
 
     // configure and show active actions of mru-menu
     for (int i = 0; i < num_files; ++i)
       {
-        QString text = tr ("&%1 %2").
+        QString text = QString ("&%1 %2").
           arg ((i+1) % int (MaxMRUFiles)).arg (m_mru_files.at (i));
         m_mru_file_actions[i]->setText (text);
 
         QStringList action_data;
         action_data << m_mru_files.at (i) << m_mru_files_encodings.at (i);
         m_mru_file_actions[i]->setData (action_data);
 
         m_mru_file_actions[i]->setVisible (true);
diff --git a/libgui/src/variable-editor.cc b/libgui/src/variable-editor.cc
--- a/libgui/src/variable-editor.cc
+++ b/libgui/src/variable-editor.cc
@@ -354,18 +354,18 @@ namespace octave
   {
     if (! hasFocus ())
       return;
 
     QString name = objectName ();
     QString file
       = QFileDialog::getSaveFileName (this,
                                       tr ("Save Variable %1 As").arg (name),
-                                      /* Should determine extension from save_default_options */
-                                      tr ("./%1.txt").arg (name),
+    // FIXME: Should determine extension from save_default_options
+                                      QString ("./%1.txt").arg (name),
                                       0, 0,
                                       QFileDialog::DontUseNativeDialog);
 
     // FIXME: Type? binary, float-binary, ascii, text, hdf5, matlab format?
     // FIXME: Call octave_value::save_* directly?
 
     if (! file.isEmpty ())
       emit command_signal (QString ("save (\"%1\", \"%2\");")
