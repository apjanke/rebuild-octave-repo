# HG changeset patch
# User jwe
# Date 862433884 0
#      Wed Apr 30 20:58:04 1997 +0000
# Node ID 5c285800ebe26568dddf1a030810de1ce3be7d29
# Parent  4e7bea116f244bee6e3dd3595db5eadbccd2d264
[project @ 1997-04-30 20:58:04 by jwe]
Array-idx.h

diff --git a/liboctave/Array2-idx.h b/liboctave/Array2-idx.h
--- a/liboctave/Array2-idx.h
+++ b/liboctave/Array2-idx.h
@@ -238,27 +238,30 @@ Array2<T>::maybe_delete_elements (idx_ve
 
 		  int idx = 0;
 
 		  for (int j = 0; j < nc; j++)
 		    if (j == idx_j.elem (idx))
 		      {
 			idx++;
 			new_nc--;
+
+			if (idx == num_to_delete)
+			  break;
 		      }
 
 		  if (new_nc > 0)
 		    {
 		      T *new_data = new T [nr * new_nc];
 
 		      int jj = 0;
 		      idx = 0;
 		      for (int j = 0; j < nc; j++)
 			{
-			  if (j == idx_j.elem (idx))
+			  if (idx < num_to_delete && j == idx_j.elem (idx))
 			    idx++;
 			  else
 			    {
 			      for (int i = 0; i < nr; i++)
 				new_data[nr*jj+i] = elem (i, j);
 			      jj++;
 			    }
 			}
@@ -297,27 +300,30 @@ Array2<T>::maybe_delete_elements (idx_ve
 
 		  int idx = 0;
 
 		  for (int i = 0; i < nr; i++)
 		    if (i == idx_i.elem (idx))
 		      {
 			idx++;
 			new_nr--;
+
+			if (idx == num_to_delete)
+			  break;
 		      }
 
 		  if (new_nr > 0)
 		    {
 		      T *new_data = new T [new_nr * nc];
 
 		      int ii = 0;
 		      idx = 0;
 		      for (int i = 0; i < nr; i++)
 			{
-			  if (i == idx_i.elem (idx))
+			  if (idx < num_to_delete && i == idx_i.elem (idx))
 			    idx++;
 			  else
 			    {
 			      for (int j = 0; j < nc; j++)
 				new_data[new_nr*j+ii] = elem (i, j);
 			      ii++;
 			    }
 			}
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,14 @@
+Tue Apr 29 04:39:01 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* Array2-idx.h (Array2<T>::maybe_delete_elements): Prevent
+	out-of-bounds indexing of the index array.
+	* Array-idx.h (Array<T>::maybe_delete_elements): Likewise.
+
 Fri Mar 28 15:37:09 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* LSODE.h (x_step_limit): New field.
 	(LSODE_options::init): Initialize it.
 	(LSODE_options::copy): Copy it.
 	(LSODE_options::set_step_limit, LSODE_options::step_limit):
 	New functions.
 	(LSODE::working_too_hard): Delete.
