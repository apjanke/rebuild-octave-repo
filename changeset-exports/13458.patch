# HG changeset patch
# User Jacob Dawid <jacob.dawid@googlemail.com>
# Date 1303024924 -7200
#      Sun Apr 17 09:22:04 2011 +0200
# Node ID 16d26344c2a29d77bf4b19d0237e2f727fb56f41
# Parent  aa1d4754edc34417e3efe191c1d8e9e3063cf17a
Added semaphore to ensure that the workspace view will not get updated twice at a time.

diff --git a/gui//src/VariablesDockWidget.cpp b/gui//src/VariablesDockWidget.cpp
--- a/gui//src/VariablesDockWidget.cpp
+++ b/gui//src/VariablesDockWidget.cpp
@@ -3,16 +3,17 @@
 
 VariablesDockWidget::VariablesDockWidget(QWidget *parent)
     : QDockWidget(parent) {
     setObjectName("VariablesDockWidget");
     construct();
 }
 
 void VariablesDockWidget::construct() {
+    m_updateSemaphore = new QSemaphore(1);
     QStringList headerLabels;
     headerLabels << "Name" << "Type" << "Value";
     m_variablesTreeWidget = new QTreeWidget(this);
     m_variablesTreeWidget->setHeaderHidden(false);
     m_variablesTreeWidget->setHeaderLabels(headerLabels);
     QHBoxLayout *layout = new QHBoxLayout();
 
     setWindowTitle("Workspace");
@@ -46,17 +47,17 @@ void VariablesDockWidget::construct() {
 
 void VariablesDockWidget::updateTreeEntry(QTreeWidgetItem *treeItem, SymbolRecord symbolRecord) {
     treeItem->setData(0, 0, QString(symbolRecord.name().c_str()));
     treeItem->setData(1, 0, QString(symbolRecord.varval().type_name().c_str()));
     treeItem->setData(2, 0, OctaveLink::octaveValueAsQString(symbolRecord.varval()));
 }
 
 void VariablesDockWidget::setVariablesList(QList<SymbolRecord> symbolTable) {
-
+    m_updateSemaphore->acquire();
     // Split the symbol table into its different scopes.
     QList<SymbolRecord> localSymbolTable;
     QList<SymbolRecord> globalSymbolTable;
     QList<SymbolRecord> persistentSymbolTable;
     QList<SymbolRecord> hiddenSymbolTable;
 
     foreach(SymbolRecord symbolRecord, symbolTable) {
         // It's true that being global or hidden includes it's can mean it's also locally visible,
@@ -77,16 +78,17 @@ void VariablesDockWidget::setVariablesLi
             hiddenSymbolTable.append(symbolRecord);
         }
     }
 
     updateScope(0, localSymbolTable);
     updateScope(1, globalSymbolTable);
     updateScope(2, persistentSymbolTable);
     updateScope(3, hiddenSymbolTable);
+    m_updateSemaphore->release();
 }
 
 void VariablesDockWidget::updateScope(int topLevelItemIndex, QList<SymbolRecord> symbolTable) {
     // This method may be a little bit confusing; variablesList is a complete list of all
     // variables that are in the workspace currently.
     QTreeWidgetItem *topLevelItem = m_variablesTreeWidget->topLevelItem(topLevelItemIndex);
 
     // First we check, if any variables that exist in the model tree have to be updated
diff --git a/gui//src/VariablesDockWidget.h b/gui//src/VariablesDockWidget.h
--- a/gui//src/VariablesDockWidget.h
+++ b/gui//src/VariablesDockWidget.h
@@ -1,21 +1,23 @@
 #ifndef VARIABLESDOCKWIDGET_H
 #define VARIABLESDOCKWIDGET_H
 
 #include <QDockWidget>
 #include <QTreeWidget>
+#include <QSemaphore>
 #include "OctaveLink.h"
 
 class VariablesDockWidget : public QDockWidget
 {
 public:
     VariablesDockWidget(QWidget *parent = 0);
     void setVariablesList(QList<SymbolRecord> symbolTable);
 
 private:
     void construct();
     void updateTreeEntry(QTreeWidgetItem *treeItem, SymbolRecord symbolRecord);
     void updateScope(int topLevelItemIndex, QList<SymbolRecord> symbolTable);
     QTreeWidget *m_variablesTreeWidget;
+    QSemaphore *m_updateSemaphore;
 };
 
 #endif // VARIABLESDOCKWIDGET_H
