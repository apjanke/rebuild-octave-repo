# HG changeset patch
# User Rik <rik@octave.org>
# Date 1546461878 28800
#      Wed Jan 02 12:44:38 2019 -0800
# Branch stable
# Node ID b3a2ee31dd58bb17f56a4b0d6e8f8f48ac2378d7
# Parent  5b4b46f7e9ecac9776a750fb95a3ebb0e56d0bec
movie.m: Don't change "visible" property of figure handle input.

* movie.m: Remove call to figure().  Find axes handle from any figure handle
passed in.  Add semicolons to BIST tests.

diff --git a/scripts/image/movie.m b/scripts/image/movie.m
--- a/scripts/image/movie.m
+++ b/scripts/image/movie.m
@@ -62,18 +62,20 @@ function movie (varargin)
 
   ## Extract possible handle argument
   hax = [];
   if (ishghandle (varargin{1}))
     typ = get (varargin{1}, "type");
     if (strcmp (typ, "axes"))
       hax = varargin{1};
     elseif (strcmp (typ, "figure"))
-      figure (varargin{1});
-      hax = gca ();
+      hax = get (varargin{1}, "currentaxes");
+      if (isempty (hax))
+        hax = axes ("parent", varargin{1});
+      endif
     else
       error ("movie: H must be a handle to an axes or figure");
     endif
     varargin(1) = [];
     nargin = nargin - 1;
     if (nargin == 0)
       print_usage ();
     endif
@@ -239,31 +241,31 @@ endfunction
 %!error <MOV must be a frame struct array> movie ({2})
 %!error <MOV must contain at least two frames>
 %! movie (struct ("cdata", [], "colormap", []));
 %!error <N must be a non-zero integer>
 %! movie (struct ("cdata", {[], []}, "colormap", []), 2.3);
 %!error <N must be a non-zero integer>
 %! movie (struct ("cdata", {[], []}, "colormap", []), [2.3 -6]);
 %!error <All elements N\(2:end\) must be valid indices into the MOV struct>
-%! movie (struct ("cdata", {[], []}, "colormap", []), [1 -1])
+%! movie (struct ("cdata", {[], []}, "colormap", []), [1 -1]);
 %!error <All elements N\(2:end\) must be valid indices into the MOV struct>
-%! movie (struct ("cdata", {[], []}, "colormap", []), [1 5])
+%! movie (struct ("cdata", {[], []}, "colormap", []), [1 5]);
 %!error <FPS must be a numeric scalar . 0>
-%! movie (struct ("cdata", {[], []}, "colormap", []), 1, "a")
+%! movie (struct ("cdata", {[], []}, "colormap", []), 1, "a");
 %!error <FPS must be a numeric scalar . 0>
-%! movie (struct ("cdata", {[], []}, "colormap", []), 1, [1 1])
+%! movie (struct ("cdata", {[], []}, "colormap", []), 1, [1 1]);
 %!error <FPS must be a numeric scalar . 0>
-%! movie (struct ("cdata", {[], []}, "colormap", []), 1, -1/12)
+%! movie (struct ("cdata", {[], []}, "colormap", []), 1, -1/12);
 %!error <empty image data at frame 1>
 %! hf = figure ("visible", "off");
 %! unwind_protect
 %!   movie (hf, struct ("cdata", {[], []}, "colormap", []));
 %! unwind_protect_cleanup
 %!   close (hf);
 %! end_unwind_protect
 %!error <empty image data at frame 2>
 %! hf = figure ("visible", "off");
 %! unwind_protect
-%!   movie (struct ("cdata", {ones(2), []}, "colormap", []))
+%!   movie (struct ("cdata", {ones(2), []}, "colormap", []));
 %! unwind_protect_cleanup
 %!   close (hf);
 %! end_unwind_protect
