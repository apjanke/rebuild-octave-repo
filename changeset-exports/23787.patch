# HG changeset patch
# User Rik <rik@octave.org>
# Date 1500870862 25200
#      Sun Jul 23 21:34:22 2017 -0700
# Node ID b481a9baeb6136754067eb339336eca5b44f216b
# Parent  10136bfd46a3398e8b68ba7615e67f2342d3caee
Replace += "\n" with += '\n' which avoids string constructor for performance.

* TerminalView.cpp (dropEvent), QWinTerminalImpl.cpp (dropEvent),
history-dock-widget.cc (handle_context, handle_contextmenu_create_script),
graphics.cc (base_graphics_object::value_as_string),
lex.ll (lexer::fill_flex_buffer): Replace += "\n" with += '\n'.

diff --git a/libgui/qterminal/libqterminal/unix/TerminalView.cpp b/libgui/qterminal/libqterminal/unix/TerminalView.cpp
--- a/libgui/qterminal/libqterminal/unix/TerminalView.cpp
+++ b/libgui/qterminal/libqterminal/unix/TerminalView.cpp
@@ -2621,17 +2621,17 @@ void TerminalView::dropEvent(QDropEvent*
 
   QString dropText;
 
   if (event->mimeData ()->hasUrls ())
   {
     foreach (QUrl url, event->mimeData ()->urls ())
     {
       if(dropText.length () > 0)
-        dropText += "\n";
+        dropText += '\n';
       dropText  += url.toLocalFile ();
     }
   }
 
   /*  if (!urls.isEmpty())
   {
     for ( int i = 0 ; i < urls.count() ; i++ )
     {
diff --git a/libgui/qterminal/libqterminal/win32/QWinTerminalImpl.cpp b/libgui/qterminal/libqterminal/win32/QWinTerminalImpl.cpp
--- a/libgui/qterminal/libqterminal/win32/QWinTerminalImpl.cpp
+++ b/libgui/qterminal/libqterminal/win32/QWinTerminalImpl.cpp
@@ -1835,17 +1835,17 @@ void QWinTerminalImpl::dropEvent (QDropE
 {
   QString dropText;
 
   if (event->mimeData ()->hasUrls ())
     {
       foreach (QUrl url, event->mimeData ()->urls ())
         {
           if(dropText.length () > 0)
-            dropText += "\n";
+            dropText += '\n';
           dropText  += url.toLocalFile ();
         }
       sendText (dropText);
     }
 }
 
 //////////////////////////////////////////////////////////////////////////////
 
diff --git a/libgui/src/history-dock-widget.cc b/libgui/src/history-dock-widget.cc
--- a/libgui/src/history-dock-widget.cc
+++ b/libgui/src/history-dock-widget.cc
@@ -224,17 +224,17 @@ void history_dock_widget::handle_context
   QModelIndexList rows = selectionModel->selectedRows ();
   QModelIndexList::iterator it;
   bool prev_valid_row = false;
   for (it = rows.begin (); it != rows.end (); it++)
     {
       if ((*it).isValid ())
         {
           if (prev_valid_row)
-            text += "\n";
+            text += '\n';
           text += (*it).data ().toString ();
           prev_valid_row = true;
         }
     }
   QApplication::clipboard ()->setText (text);
 }
 
 void history_dock_widget::handle_contextmenu_evaluate (bool)
@@ -257,17 +257,17 @@ history_dock_widget::handle_contextmenu_
   QModelIndexList rows = selectionModel->selectedRows ();
 
   bool prev_valid_row = false;
   for (QModelIndexList::iterator it = rows.begin (); it != rows.end (); it++)
     {
       if ((*it).isValid ())
         {
           if (prev_valid_row)
-            text += "\n";
+            text += '\n';
           text += (*it).data ().toString ();
           prev_valid_row = true;
         }
     }
 
   if (text.length () > 0)
     emit command_create_script (text);
 }
diff --git a/libinterp/corefcn/graphics.cc b/libinterp/corefcn/graphics.cc
--- a/libinterp/corefcn/graphics.cc
+++ b/libinterp/corefcn/graphics.cc
@@ -3399,17 +3399,17 @@ base_graphics_object::values_as_string (
               retval += "\n\t" + std::string (pname) + ":  ";
               if (p.is_radio ())
                 retval += p.values_as_string ();
             }
         }
     }
 
   if (! retval.empty ())
-    retval += "\n";
+    retval += '\n';
 
   return retval;
 }
 
 std::string
 base_graphics_object::value_as_string (const std::string& prop)
 {
   std::string retval;
@@ -3426,17 +3426,17 @@ base_graphics_object::value_as_string (c
       if (p.ok () && ! p.is_hidden ())
         {
           if (p.is_radio ())
             retval += p.values_as_string ();
         }
     }
 
   if (! retval.empty ())
-    retval += "\n";
+    retval += '\n';
 
   return retval;
 }
 
 octave_scalar_map
 base_graphics_object::values_as_struct (void)
 {
   octave_scalar_map retval;
diff --git a/libinterp/parse-tree/lex.ll b/libinterp/parse-tree/lex.ll
--- a/libinterp/parse-tree/lex.ll
+++ b/libinterp/parse-tree/lex.ll
@@ -3661,17 +3661,17 @@ namespace octave
         // See also comments in push_lexer::append_input.
 
         if (buffer_function_text)
           {
             if (! current_input_line.empty ())
             {
               function_text += current_input_line;
               if (current_input_line.back () != '\n')
-                function_text += "\n";
+                function_text += '\n';
             }
           }
       }
 
     if (! input_buf.empty ())
       status = input_buf.copy_chunk (buf, max_size);
     else
       status = YY_NULL;
