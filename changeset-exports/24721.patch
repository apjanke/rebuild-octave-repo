# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1518262636 18000
#      Sat Feb 10 06:37:16 2018 -0500
# Node ID f26c5320e858ae17f15ae3560951607c56a80779
# Parent  48f22c5b22aabccf4ecf03e5d197d9d7b2f578bb
avoid comparison to NULL

* mexproto.h (mxAssert): Use "if (msg && msg[0])" instead of
"if (msg != NULL && msg[0] != '\0')".

diff --git a/libinterp/corefcn/mexproto.h b/libinterp/corefcn/mexproto.h
--- a/libinterp/corefcn/mexproto.h
+++ b/libinterp/corefcn/mexproto.h
@@ -297,41 +297,45 @@ extern OCTINTERP_API size_t mxGetElement
 
 #if defined (MEX_DEBUG)
 
 #  define mxAssert(expr, msg)                                           \
   do                                                                    \
     {                                                                   \
       if (! (expr))                                                     \
         {                                                               \
-          if (msg != NULL && msg[0] != '\0')                            \
-            mexErrMsgIdAndTxt ("Octave:MEX",                            \
-                               "Assertion failed: %s, at line %d of file \"%s\".\n%s\n", \
-                               #expr, __LINE__, __FILE__, msg);         \
+          if (msg && msg[0])                                            \
+            mexErrMsgIdAndTxt                                           \
+              ("Octave:MEX",                                            \
+               "Assertion failed: %s, at line %d of file \"%s\".\n%s\n", \
+               #expr, __LINE__, __FILE__, msg);                         \
           else                                                          \
-            mexErrMsgIdAndTxt ("Octave:MEX",                            \
-                               "Assertion failed: %s, at line %d of file \"%s\".\n", \
-                               #expr, __LINE__, __FILE__);              \
+            mexErrMsgIdAndTxt                                           \
+              ("Octave:MEX",                                            \
+               "Assertion failed: %s, at line %d of file \"%s\".\n",    \
+               #expr, __LINE__, __FILE__);                              \
         }                                                               \
     }                                                                   \
   while (0)
 
 #  define mxAssertS(expr, msg)                                          \
   do                                                                    \
     {                                                                   \
       if (! (expr))                                                     \
         {                                                               \
-          if (msg != NULL && msg[0] != '\0')                            \
-            mexErrMsgIdAndTxt ("Octave:MEX",                            \
-                               "Assertion failed at line %d of file \"%s\".\n%s\n", \
-                               __LINE__, __FILE__, msg);                \
+          if (msg && msg[0])                                            \
+            mexErrMsgIdAndTxt                                           \
+              ("Octave:MEX",                                            \
+               "Assertion failed at line %d of file \"%s\".\n%s\n",     \
+               __LINE__, __FILE__, msg);                                \
           else                                                          \
-            mexErrMsgIdAndTxt ("Octave:MEX",                            \
-                               "Assertion failed at line %d of file \"%s\".\n", \
-                               __LINE__, __FILE__);                     \
+            mexErrMsgIdAndTxt                                           \
+              ("Octave:MEX",                                            \
+               "Assertion failed at line %d of file \"%s\".\n",         \
+               __LINE__, __FILE__);                                     \
         }                                                               \
     }                                                                   \
   while (0)
 
 #else
 #  define mxAssert(expr, msg)
 #  define mxAssertS(expr, msg)
 #endif
