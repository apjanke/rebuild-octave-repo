# HG changeset patch
# User akira noda <you.akira.noda@gmail.com>
# Date 1440176752 14400
#      Fri Aug 21 13:05:52 2015 -0400
# Node ID a142b62527efe80aa9d770f1bf13f32e75442b23
# Parent  4bb41929286b32bf0c22c5027324a10790786952
Fix compilation of classdef with the clang compiler (bug #41178)

* ov-classdef.cc, ov-classdef.h (cdef_object_scalar::mark_as_constructed):
Move function definition out of header file to avoid dependency on incomplete
type, compilation error with clang.

diff --git a/libinterp/octave-value/ov-classdef.cc b/libinterp/octave-value/ov-classdef.cc
--- a/libinterp/octave-value/ov-classdef.cc
+++ b/libinterp/octave-value/ov-classdef.cc
@@ -1941,16 +1941,22 @@ cdef_object_scalar::is_partially_constru
   for (std::list<cdef_class>::const_iterator lit = it->second.begin ();
        lit != it->second.end (); ++lit)
     if (! is_constructed_for (*lit))
       return false;
 
   return true;
 }
 
+void
+cdef_object_scalar::mark_as_constructed (const cdef_class& cls)
+{
+  ctor_list.erase (cls);
+}
+
 handle_cdef_object::~handle_cdef_object (void)
 {
 #if DEBUG_TRACE
   std::cerr << "deleting " << get_class ().get_name ()
             << " object (handle)" << std::endl;
 #endif
 }
 
diff --git a/libinterp/octave-value/ov-classdef.h b/libinterp/octave-value/ov-classdef.h
--- a/libinterp/octave-value/ov-classdef.h
+++ b/libinterp/octave-value/ov-classdef.h
@@ -433,17 +433,17 @@ public:
   void mark_for_construction (const cdef_class&);
 
   bool is_constructed_for (const cdef_class& cls) const;
 
   bool is_partially_constructed_for (const cdef_class& cls) const;
 
   void mark_as_constructed (void) { ctor_list.clear (); }
 
-  void mark_as_constructed (const cdef_class& cls) { ctor_list.erase (cls); }
+  void mark_as_constructed (const cdef_class& cls);
 
   bool is_constructed (void) const { return ctor_list.empty (); }
 
 protected:
   // Object property values
   octave_scalar_map map;
 
   // Internal/temporary structure used during object construction
