# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1347637964 14400
#      Fri Sep 14 11:52:44 2012 -0400
# Node ID f918db8102d540000cbdac2492029ed94ad88150
# Parent  24b5348d38e7096b233e65f6bb470924304b402a
eliminate use of Q_UNUSED macro

* file-editor-tab.cc (file_editor_tab::handle_event): Don't create
useless temporary variable just to mark it with Q_UNUSED.
(file_editor_tab::handle_margin_clicked): Don't tag state with
Q_UNUSED.
(file_editor_tab::file_has_changed): Eliminate argument name and
corresponding Q_UNUSED.
* file-editor.cc (active_tab_changed): Likeiwse.
workspace-view.cc (workspace_view::item_double_clicked): Likewise.

diff --git a/libgui/src/m-editor/file-editor-tab.cc b/libgui/src/m-editor/file-editor-tab.cc
--- a/libgui/src/m-editor/file-editor-tab.cc
+++ b/libgui/src/m-editor/file-editor-tab.cc
@@ -134,20 +134,18 @@ file_editor_tab::handle_event (octave_ev
 
       if (octave_remove_breakpoint_event *rbe
           = dynamic_cast<octave_remove_breakpoint_event*> (e))
         {
           // TODO: Check file.
           _edit_area->markerDelete (rbe->get_line (), breakpoint);
         }
 
-      if (octave_remove_all_breakpoints_event *rabe
-          = dynamic_cast<octave_remove_all_breakpoints_event*> (e))
+      if (dynamic_cast<octave_remove_all_breakpoints_event*> (e))
         {
-          Q_UNUSED (rabe);
           _edit_area->markerDeleteAll (breakpoint);
         }
     }
   else
     {
       if (dynamic_cast<octave_run_file_event*> (e))
         {
           // Running file failed.
@@ -187,17 +185,16 @@ file_editor_tab::set_file_name (const QS
   update_lexer ();
   update_tracked_file ();
 }
 
 void
 file_editor_tab::handle_margin_clicked(int margin, int line,
                                        Qt::KeyboardModifiers state)
 {
-  Q_UNUSED (state);
   if (margin == 1)
     {
       unsigned int markers_mask = _edit_area->markersAtLine (line);
 
       if (state & Qt::ControlModifier)
         {
           if (markers_mask && (1 << bookmark))
             _edit_area->markerDelete(line,bookmark);
@@ -752,19 +749,18 @@ file_editor_tab::run_file ()
   _file_editor->terminal ()->sendText (QString ("cd \'%1\'\n%2\n")
                                        .arg(path).arg (function_name));
   // TODO: Sending a run event crashes for long scripts. Find out why.
   //  octave_link::post_event (new octave_run_file_event
   //                           (*this, _file_name.toStdString ()));
 }
 
 void
-file_editor_tab::file_has_changed (const QString& fileName)
+file_editor_tab::file_has_changed (const QString&)
 {
-  Q_UNUSED (fileName);
   if (QFile::exists (_file_name))
     {
       // Prevent popping up multiple message boxes when the file has
       // been changed multiple times.
       static bool alreadyAsking = false;
       if (!alreadyAsking)
         {
           alreadyAsking = true;
diff --git a/libgui/src/m-editor/file-editor.cc b/libgui/src/m-editor/file-editor.cc
--- a/libgui/src/m-editor/file-editor.cc
+++ b/libgui/src/m-editor/file-editor.cc
@@ -348,19 +348,18 @@ file_editor::handle_tab_close_request ()
     if (fileEditorTab->close ())
       {
         _tab_widget->removeTab (_tab_widget->indexOf (fileEditorTab));
         delete fileEditorTab;
       }
 }
 
 void
-file_editor::active_tab_changed (int index)
+file_editor::active_tab_changed (int)
 {
-  Q_UNUSED (index);
   handle_editor_state_changed ();
 }
 
 void
 file_editor::handle_editor_state_changed ()
 {
   file_editor_tab *f = active_editor_tab ();
   if (f)
diff --git a/libgui/src/workspace-view.cc b/libgui/src/workspace-view.cc
--- a/libgui/src/workspace-view.cc
+++ b/libgui/src/workspace-view.cc
@@ -193,19 +193,18 @@ workspace_view::expand_requested (QModel
     _explicit_collapse.local = false;
   if (item_data[0] == "Global")
     _explicit_collapse.global = false;
   if (item_data[0] == "Persistent")
     _explicit_collapse.persistent = false;
 }
 
 void
-workspace_view::item_double_clicked (QModelIndex index)
+workspace_view::item_double_clicked (QModelIndex)
 {
-  Q_UNUSED (index);
   // TODO: Implement opening a dialog that allows the user to change a variable in the workspace.
 }
 
 void
 workspace_view::closeEvent (QCloseEvent *e)
 {
   emit active_changed (false);
   QDockWidget::closeEvent (e);
