# HG changeset patch
# User Andreas Weber <andy.weber.aw@gmail.com>
# Date 1412501789 -7200
#      Sun Oct 05 11:36:29 2014 +0200
# Branch gui-release
# Node ID 4b6f87c6739fd2465ce7c7805aa09e9764213f19
# Parent  e85203f414029260ecddba3e7546abe602e98c8f
Fix out_of_range from substr in short_disp for GUI symtab (bug #43351)

* ov-base-mat.cc, ov-base-scalar.cc::short_disp: Return single space if the
  printed string consists only of spaces.

diff --git a/libinterp/octave-value/ov-base-mat.cc b/libinterp/octave-value/ov-base-mat.cc
--- a/libinterp/octave-value/ov-base-mat.cc
+++ b/libinterp/octave-value/ov-base-mat.cc
@@ -471,17 +471,20 @@ octave_base_matrix<MT>::short_disp (std:
       for (octave_idx_type i = 0; i < nr; i++)
         {
           for (octave_idx_type j = 0; j < nc; j++)
             {
               std::ostringstream buf;
               octave_print_internal (buf, matrix(j*nr+i));
               std::string tmp = buf.str ();
               size_t pos = tmp.find_first_not_of (" ");
-              os << tmp.substr (pos);
+              if (pos != std::string::npos)
+                os << tmp.substr (pos);
+              else if (! tmp.empty ())
+                os << tmp[0];
 
               if (++elts >= max_elts)
                 goto done;
 
               if (j < nc - 1)
                 os << ", ";
             }
 
diff --git a/libinterp/octave-value/ov-base-scalar.cc b/libinterp/octave-value/ov-base-scalar.cc
--- a/libinterp/octave-value/ov-base-scalar.cc
+++ b/libinterp/octave-value/ov-base-scalar.cc
@@ -171,17 +171,20 @@ octave_base_scalar<ST>::print_name_tag (
 template <class ST>
 void
 octave_base_scalar<ST>::short_disp (std::ostream& os) const
 {
   std::ostringstream buf;
   octave_print_internal (buf, scalar);
   std::string tmp = buf.str ();
   size_t pos = tmp.find_first_not_of (" ");
-  os << tmp.substr (pos);
+  if (pos != std::string::npos)
+    os << tmp.substr (pos);
+  else if (! tmp.empty ())
+    os << tmp[0];
 }
 
 template <class ST>
 bool
 octave_base_scalar<ST>::fast_elem_insert_self (void *where,
                                                builtin_type_t btyp) const
 {
 
