# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1446757778 18000
#      Thu Nov 05 16:09:38 2015 -0500
# Node ID 8787e80a44b2e96d2397284333bfd1d77b45b69c
# Parent  19d6f94c21cbc98296ed5ae8d756569d9b3fff53
ensure va_end is executed before returning in value extractors

* ov.cc, ov.h (octave_value::string_value, octave_value::cell_value):
Don't return before calling va_end.

diff --git a/libinterp/octave-value/ov.cc b/libinterp/octave-value/ov.cc
--- a/libinterp/octave-value/ov.cc
+++ b/libinterp/octave-value/ov.cc
@@ -1548,20 +1548,22 @@ Cell
 octave_value::cell_value (void) const
 {
   return rep->cell_value ();
 }
 
 Cell
 octave_value::cell_value (const char *fmt, ...) const
 {
+  Cell retval;
   va_list args;
   va_start (args,fmt);
-  return rep->cell_value (fmt, args);
+  retval = rep->cell_value (fmt, args);
   va_end (args);
+  return retval;
 }
 
 // Define the idx_type_value function here instead of in ov.h to avoid
 // needing definitions for the SIZEOF_X macros in ov.h.
 
 octave_idx_type
 octave_value::idx_type_value (bool req_int, bool frc_str_conv) const
 {
diff --git a/libinterp/octave-value/ov.h b/libinterp/octave-value/ov.h
--- a/libinterp/octave-value/ov.h
+++ b/libinterp/octave-value/ov.h
@@ -896,20 +896,22 @@ public:
   string_vector all_strings (bool pad = false) const
   { return rep->all_strings (pad); }
 
   std::string string_value (bool force = false) const
   { return rep->string_value (force); }
 
   std::string string_value (const char *fmt, ...) const
   {
+    std::string retval;
     va_list args;
     va_start (args,fmt);
-    return rep->string_value (fmt, args);
+    retval = rep->string_value (fmt, args);
     va_end (args);
+    return retval;
   }
 
   Array<std::string> cellstr_value (void) const
   { return rep->cellstr_value (); }
 
   Range range_value (void) const
   { return rep->range_value (); }
 
