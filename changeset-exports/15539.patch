# HG changeset patch
# User Rik <rik@octave.org>
# Date 1350489462 25200
#      Wed Oct 17 08:57:42 2012 -0700
# Node ID 4d6e5fa37899c2cd6be7fa5e8f061fab9c3a1059
# Parent  94d21131fefd1eb164f225f33b676eb3cd6247cc
doc: Update docstrings for enable_jit_debugging and enable_jit_compiler.

* pt-jit.cc(Fenable_jit_debugging, Fenable_jit_compiler): Add alternate
calling forms of function.  Add seealso links.  Add documentation about
"local" option.

diff --git a/libinterp/interp-core/pt-jit.cc b/libinterp/interp-core/pt-jit.cc
--- a/libinterp/interp-core/pt-jit.cc
+++ b/libinterp/interp-core/pt-jit.cc
@@ -2177,33 +2177,47 @@ jit_info::find (const vmap& extra_vars, 
   return iter == extra_vars.end () ? symbol_table::varval (vname)
     : *iter->second;
 }
 
 #endif
 
 DEFUN (enable_jit_debugging, args, nargout,
   "-*- texinfo -*-\n\
-@deftypefn {Built-in Function} {} enable_jit_debugging ()\n\
+@deftypefn  {Built-in Function} {@var{val} =} enable_jit_debugging ()\n\
+@deftypefnx {Built-in Function} {@var{old_val} =} enable_jit_debugging (@var{new_val})\n\
+@deftypefnx {Built-in Function} {} enable_jit_debugging (@var{new_val}, \"local\")\n\
 Query or set the internal variable that determines whether\n\
 debugging/tracing is enabled for Octave's JIT compiler.\n\
+\n\
+When called from inside a function with the \"local\" option, the variable is\n\
+changed locally for the function and any subroutines it calls.  The original\n\
+variable value is restored when exiting the function.\n\
+@seealso{enable_jit_compiler}\n\
 @end deftypefn")
 {
 #if defined (HAVE_LLVM)
   return SET_INTERNAL_VARIABLE (enable_jit_debugging);
 #else
   warning ("enable_jit_debugging: JIT compiling not available in this version of Octave");
   return octave_value ();
 #endif
 }
 
 DEFUN (enable_jit_compiler, args, nargout,
   "-*- texinfo -*-\n\
-@deftypefn {Built-in Function} {} enable_jit_compiler ()\n\
+@deftypefn  {Built-in Function} {@var{val} =} enable_jit_compiler ()\n\
+@deftypefnx {Built-in Function} {@var{old_val} =} enable_jit_compiler (@var{new_val})\n\
+@deftypefnx {Built-in Function} {} enable_jit_compiler (@var{new_val}, \"local\")\n\
 Query or set the internal variable that enables Octave's JIT compiler.\n\
+\n\
+When called from inside a function with the \"local\" option, the variable is\n\
+changed locally for the function and any subroutines it calls.  The original\n\
+variable value is restored when exiting the function.\n\
+@seealso{enable_jit_debugging}\n\
 @end deftypefn")
 {
 #if defined (HAVE_LLVM)
   return SET_INTERNAL_VARIABLE (enable_jit_compiler);
 #else
   warning ("enable_jit_compiler: JIT compiling not available in this version of Octave");
   return octave_value ();
 #endif
