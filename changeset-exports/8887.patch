# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1235764168 18000
#      Fri Feb 27 14:49:28 2009 -0500
# Node ID 6e4a811e58f8ad1dfa2e0714b21f52add463ec07
# Parent  0c1a9c178fdd9e9ac8313c337b045c581545c300
deprecate create_set

diff --git a/doc/ChangeLog b/doc/ChangeLog
--- a/doc/ChangeLog
+++ b/doc/ChangeLog
@@ -1,8 +1,12 @@
+2009-02-27  John W. Eaton  <jwe@octave.org>
+
+	* interpreter/set.txi (Sets): Don't document create_set.
+
 2009-02-26  John W. Eaton  <jwe@octave.org>
 
 	* interpreter/strings.txi (Manipulating Strings):
 	Document strsplit, not split.
 
 2009-02-25  John W. Eaton  <jwe@octave.org>
 
 	* interpreter/Makefile.in (distclean): Remove tags and TAGS here
diff --git a/doc/interpreter/set.txi b/doc/interpreter/set.txi
--- a/doc/interpreter/set.txi
+++ b/doc/interpreter/set.txi
@@ -18,18 +18,16 @@
 
 @node Sets
 @chapter Sets
 
 Octave has a limited number of functions for managing sets of data, where a
 set is defined as a collection of unique elements.  In Octave a set is
 represented as a vector of numbers.
 
-@DOCSTRING(create_set)
-
 @DOCSTRING(unique)
 
 @menu
 * Set Operations:: 
 @end menu
 
 @node Set Operations
 @section Set Operations
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,10 +1,17 @@
 2009-02-27  John W. Eaton  <jwe@octave.org>
 
+	* set/complement.m: Call unique, not create_set.
+	* set/unique.m: Style fix for docstring.
+	* deprecated/create_set.m: Move here from set/create_set.m.
+	Always return a row vector, as documented.
+	* set/Makefile.in (SOURCES): Remove create_set.m from the list.
+	* deprecated/Makefile.in (SOURCES): Add create_set.m to the list.
+
 	* general/num2str.m: Call strsplit instead of split.
 
 	* strings/strsplit.m: Style fixes.
 
 2009-02-27  Jaroslav Hajek  <highegg@gmail.com>
 
 	* strings/strsplit.m: Check also nargin.
 
diff --git a/scripts/deprecated/Makefile.in b/scripts/deprecated/Makefile.in
--- a/scripts/deprecated/Makefile.in
+++ b/scripts/deprecated/Makefile.in
@@ -30,17 +30,18 @@ include $(TOPDIR)/Makeconf
 
 INSTALL = @INSTALL@
 INSTALL_PROGRAM = @INSTALL_PROGRAM@
 INSTALL_DATA = @INSTALL_DATA@
 
 SOURCES = beta_cdf.m beta_inv.m beta_pdf.m beta_rnd.m \
   binomial_cdf.m binomial_inv.m binomial_pdf.m binomial_rnd.m \
   chisquare_cdf.m chisquare_inv.m chisquare_pdf.m chisquare_rnd.m \
-  clearplot.m clg.m com2str.m dmult.m exponential_cdf.m exponential_inv.m \
+  clearplot.m clg.m com2str.m create_set.m \
+  dmult.m exponential_cdf.m exponential_inv.m \
   exponential_pdf.m exponential_rnd.m f_cdf.m f_inv.m f_pdf.m \
   f_rnd.m gamma_cdf.m gamma_inv.m gamma_pdf.m gamma_rnd.m \
   geometric_cdf.m geometric_inv.m geometric_pdf.m geometric_rnd.m \
   hypergeometric_cdf.m hypergeometric_inv.m hypergeometric_pdf.m \
   hypergeometric_rnd.m intersection.m is_bool.m is_complex.m \
   is_list.m is_matrix.m is_scalar.m is_square.m is_stream.m \
   is_struct.m is_symmetric.m is_vector.m iscommand.m israwcommand.m \
   isstr.m lchol.m loadimage.m lognormal_cdf.m lognormal_inv.m \
diff --git a/scripts/set/create_set.m b/scripts/deprecated/create_set.m
rename from scripts/set/create_set.m
rename to scripts/deprecated/create_set.m
--- a/scripts/set/create_set.m
+++ b/scripts/deprecated/create_set.m
@@ -15,16 +15,19 @@
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} create_set (@var{x})
 ## @deftypefnx{Function File} {} create_set (@var{x}, "rows")
+## This function has been deprecated.  Use unique instead.
+## @end deftypefn
+
 ## Return a row vector containing the unique values in @var{x}, sorted in
 ## ascending order.  For example,
 ##
 ## @example
 ## @group
 ## create_set ([ 1, 2; 3, 4; 4, 2; 1, 2 ])
 ##      @result{} [ 1, 2, 3, 4 ]
 ## @end group
@@ -36,36 +39,42 @@
 ## @group
 ## create_set ([ 1, 2; 3, 4; 4, 2; 1, 2 ], "rows")
 ##      @result{}  1   2
 ##     3   4
 ##     4   2
 ## @end group
 ## @end example
 ## @seealso{union, intersect, complement, unique}
-## @end deftypefn
 
 ## Author: jwe
 
+## Deprecated in version 3.0
+
 function y = create_set (x, rows_opt)
 
+  persistent warned = false;
+  if (! warned)
+    warned = true;
+    warning ("Octave:deprecated-function",
+             "create_set is obsolete and will be removed from a future version of Octave, please use unique instead");
+  endif
+
   if (nargin < 1 || nargin > 2)
     print_usage ();
   endif
   
   if (nargin == 1)
-    y = unique (x).';
+    y = unique (x)(:)';
   elseif (strcmpi (rows_opt, "rows"))
     y = unique (x, "rows");
   else
     error ("create_set: expecting \"rows\" as second argument");
   endif
 
 endfunction
 
+%!assert(all (all (create_set ([1, 2, 3, 4, 2, 4]) == [1, 2, 3, 4])));
 %!assert(all (all (create_set ([1, 2; 3, 4; 2, 4]) == [1, 2, 3, 4])));
-
 %!assert(all (all (create_set ([1; 2; 3; 4; 2; 4]) == [1, 2, 3, 4])));
-
 %!assert(isempty (create_set ([])));
-
 %!error create_set (1, 2);
 
diff --git a/scripts/set/Makefile.in b/scripts/set/Makefile.in
--- a/scripts/set/Makefile.in
+++ b/scripts/set/Makefile.in
@@ -28,17 +28,17 @@ top_srcdir = @top_srcdir@
 VPATH = @srcdir@
 
 include $(TOPDIR)/Makeconf
 
 INSTALL = @INSTALL@
 INSTALL_PROGRAM = @INSTALL_PROGRAM@
 INSTALL_DATA = @INSTALL_DATA@
 
-SOURCES = complement.m create_set.m intersect.m ismember.m \
+SOURCES = complement.m intersect.m ismember.m \
   setdiff.m setxor.m union.m unique.m
 
 DISTFILES = $(addprefix $(srcdir)/, Makefile.in $(SOURCES))
 
 FCN_FILES = $(addprefix $(srcdir)/, $(SOURCES))
 FCN_FILES_NO_DIR = $(notdir $(FCN_FILES))
 
 all: PKG_ADD
diff --git a/scripts/set/complement.m b/scripts/set/complement.m
--- a/scripts/set/complement.m
+++ b/scripts/set/complement.m
@@ -35,22 +35,22 @@
 
 function y = complement (a, b)
 
   if (nargin != 2)
     print_usage ();
   endif
 
   if (isempty (a))
-    y = create_set(b);
+    y = unique (b);
   elseif (isempty (b))
     y = [];
   else
-    a = create_set (a);
-    b = create_set (b);
+    a = unique (a);
+    b = unique (b);
     yindex = 1;
     y = zeros (1, length (b));
     for index = 1:length (b)
       if (all (a != b (index)))
         y(yindex++) = b(index);
       endif
     endfor
     y = y(1:(yindex-1));
diff --git a/scripts/set/unique.m b/scripts/set/unique.m
--- a/scripts/set/unique.m
+++ b/scripts/set/unique.m
@@ -14,50 +14,51 @@
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} unique (@var{x})
-##
+## @deftypefnx {Function File} {} unique (@var{x}, "rows")
+## @deftypefnx {Function File} {} unique (@dots{}, "first")
+## @deftypefnx {Function File} {} unique (@dots{}, "last")
+## @deftypefnx {Function File} {[@var{y}, @var{i}, @var{j}] =} unique (@dots{})
 ## Return the unique elements of @var{x}, sorted in ascending order.
 ## If @var{x} is a row vector, return a row vector, but if @var{x}
 ## is a column vector or a matrix return a column vector.
 ##
-## @deftypefnx {Function File} {} unique (@var{A}, 'rows')
-##
-## Return the unique rows of @var{A}, sorted in ascending order.
-##
-## @deftypefnx {Function File} {[@var{y}, @var{i}, @var{j}] =} unique (@var{x})
+## If the optional argument @code{"rows"} is supplied, return the unique
+## rows of @var{x}, sorted in ascending order.
 ##
-## Return index vectors @var{i} and @var{j} such that @code{x(i)==y} and
-## @code{y(j)==x}.
-## 
-## Additionally, one of 'first' or 'last' can be given as an argument.
-## 'last' (default) specifies that the highest possible indices are returned
-## in @var{i}, while 'first' means the lowest.
+## If requested, return index vectors @var{i} and @var{j} such that
+## @code{x(i)==y} and @code{y(j)==x}.
+##
+## Additionally, one of @code{"first"} or @code{"last"} may be given as
+## an argument.  If @code{"last"} is specified, return the highest
+## possible indices in @var{i}, otherwise, if @code{"first"} is
+## specified, return the lowest.  The default is @code{"last"}.
 ## @seealso{union, intersect, setdiff, setxor, ismember}
 ## @end deftypefn
 
 function [y, i, j] = unique (x, varargin)
 
   if (nargin < 1)
     print_usage ();
   endif
 
   if (nargin > 1)
 
     ## parse options
     if (iscellstr (varargin))
       varargin = unique (varargin);
-      optfirst = strmatch ('first', varargin) > 0;
-      optlast = strmatch ('last', varargin) > 0;
-      optrows = strmatch ('rows', varargin) > 0 && size (x, 2) > 1;
+      optfirst = strmatch ("first", varargin) > 0;
+      optlast = strmatch ("last", varargin) > 0;
+      optrows = strmatch ("rows", varargin) > 0 && size (x, 2) > 1;
       if (optfirst && optlast)
         error ("unique: cannot specify both \"last\" and \"first\"");
       elseif (optfirst + optlast + optrows != nargin-1)
         error ("unique: invalid option");
       endif
     else
       error ("unique: options must be strings");
     endif
