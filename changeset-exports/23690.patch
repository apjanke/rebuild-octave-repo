# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1498347498 14400
#      Sat Jun 24 19:38:18 2017 -0400
# Node ID 8bba52bd04d2e40437fb69ae9756241eb0b3c4f8
# Parent  b729e97aa8d1e22e8da30ac827c739394a5a0c65
* max.cc: Tag %!xtest tests with bug number.

diff --git a/libinterp/corefcn/max.cc b/libinterp/corefcn/max.cc
--- a/libinterp/corefcn/max.cc
+++ b/libinterp/corefcn/max.cc
@@ -535,17 +535,17 @@ the first index of the minimum value(s).
 %!assert (min (uint64 ([1, 4, 2, 3])), uint64 (1))
 %!assert (min (uint64 ([1; -10; 5; -2])), uint64 (-10))
 %!assert (min (int64 ([1, 4, 2, 3])), int64 (1))
 %!assert (min (int64 ([1; -10; 5; -2])), int64 (-10))
 ## Sparse double values
 %!assert (min (sparse ([1, 4, 2, 3])), sparse (1))
 %!assert (min (sparse ([1; -10; 5; -2])), sparse(-10))
 ## FIXME: sparse doesn't order complex values by phase angle
-%!xtest
+%!test <51307>
 %! assert (min (sparse ([4, 2i 4.999; -2, 2, 3+4i])), sparse ([-2, 2, 4.999]));
 
 ## Test dimension argument
 %!test
 %! x = reshape (1:8, [2,2,2]);
 %! assert (min (x, [], 1), reshape ([1, 3, 5, 7], [1,2,2]));
 %! assert (min (x, [], 2), reshape ([1, 2, 5, 6], [2,1,2]));
 %! [y, i] = min (x, [], 3);
@@ -583,17 +583,17 @@ the first index of the minimum value(s).
 %! x = [1, 2, 3, 4];  y = fliplr (x);
 %! assert (min (x, y), [1 2 2 1]);
 %! assert (min (x, 3), [1 2 3 3]);
 %! assert (min (2, x), [1 2 2 2]);
 %! assert (min (x, 2.1i), [1 2 2.1i 2.1i]);
 ## FIXME: Ordering of complex results with equal magnitude is not by phase
 ##        angle in the 2-input form.  Instead, it is in the order in which it
 ##        appears in the argument list.
-%!xtest
+%!test <51307>
 %! x = [1, 2, 3, 4];  y = fliplr (x);
 %! assert (min (x, 2i), [2i 2i 3 4]);
 ## Special routines for char arrays
 %!assert (min ("abc", "b"), [97 98 98])
 %!assert (min ("b", "cba"), [98 98 97])
 ## Special handling for logical arrays
 %!assert (min ([true false], false), [false false])
 %!assert (min (true, [true false]), [true false])
@@ -802,17 +802,17 @@ the first index of the maximum value(s).
 %! x = [1, 2, 3, 4];  y = fliplr (x);
 %! assert (max (x, y), [4 3 3 4]);
 %! assert (max (x, 3), [3 3 3 4]);
 %! assert (max (2, x), [2 2 3 4]);
 %! assert (max (x, 2.1i), [2.1i 2.1i 3 4]);
 ## FIXME: Ordering of complex results with equal magnitude is not by phase
 ##        angle in the 2-input form.  Instead, it is in the order in which it
 ##        appears in the argument list.
-%!xtest
+%!test <51307>
 %! x = [1, 2, 3, 4];  y = fliplr (x);
 %! assert (max (x, 2i), [2i 2i 3 4]);
 ## Special routines for char arrays
 %!assert (max ("abc", "b"), [98 98 99])
 %!assert (max ("b", "cba"), [99 98 98])
 ## Special handling for logical arrays
 %!assert (max ([true false], false), [true false])
 %!assert (max (true, [false false]), [true true])
