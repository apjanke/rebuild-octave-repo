# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1389036896 18000
#      Mon Jan 06 14:34:56 2014 -0500
# Node ID 1af5ee5f30762ef01e7a5f4899058d7f7987c681
# Parent  cda4bd2fd0c09e1a3287cf990d991488c045404b
# Parent  9a0f996a358ad53ca95818ac69f76170c3f76a97
maint: Periodic merge of gui-release to default.

diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -1,24 +1,24 @@
 dnl Process this file with autoconf to produce a configure script.
 dnl
 dnl Copyright (C) 1993-2013 John W. Eaton
-### 
+###
 ### This file is part of Octave.
-### 
+###
 ### Octave is free software; you can redistribute it and/or modify it
 ### under the terms of the GNU General Public License as published by the
 ### Free Software Foundation; either version 3 of the License, or (at
 ### your option) any later version.
-### 
+###
 ### Octave is distributed in the hope that it will be useful, but WITHOUT
 ### ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 ### FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ### for more details.
-### 
+###
 ### You should have received a copy of the GNU General Public License
 ### along with Octave; see the file COPYING.  If not, see
 ### <http://www.gnu.org/licenses/>.
 
 AC_PREREQ([2.62])
 AC_INIT([GNU Octave], [4.1.0+], [http://octave.org/bugs.html], [octave])
 
 dnl PACKAGE_VERSION is set by the AC_INIT VERSION arg
@@ -45,17 +45,17 @@ AM_INIT_AUTOMAKE([1.11 foreign -Wno-port
 
 ## Add the option to enable silent rules, available since Automake 1.11
 ## and included by default starting with Automake 1.13.
 AM_SILENT_RULES
 
 OCTAVE_CANONICAL_HOST
 
 AC_DEFINE(OCTAVE_SOURCE, 1, [Define to 1 if this is Octave.])
-  
+
 AC_USE_SYSTEM_EXTENSIONS
 
 ### Make configure args available for other uses.
 
 config_opts=$ac_configure_args
 AC_SUBST(config_opts)
 
 ### Set default file locations
@@ -445,17 +445,17 @@ AC_ARG_ENABLE([float-truncate],
      mingw* | cygwin*)
        ac_float_truncate=volatile
      ;;
      *)
        ac_float_truncate=
      ;;
    esac])
 
-AC_DEFINE_UNQUOTED(FLOAT_TRUNCATE, [$ac_float_truncate], 
+AC_DEFINE_UNQUOTED(FLOAT_TRUNCATE, [$ac_float_truncate],
   [Define to volatile if you need to truncate intermediate FP results.])
 
 ### Determine extra CFLAGS that may be necessary for Octave.
 
 ## On Intel systems with gcc, we may need to compile with -mieee-fp
 ## to get full support for IEEE floating point.
 ##
 ## On Alpha/OSF systems, we need -mieee.
@@ -985,17 +985,17 @@ warn_magick="$magick++ library not found
 MAGICK_CPPFLAGS=
 MAGICK_LDFLAGS=
 MAGICK_LIBS=
 
 PKG_CHECK_EXISTS([$magick++], [
   ## Make sure we only get -I, -L, and -l flags.  Some Graphics/ImageMagick++
   ## packages add extra flags that are useful when building
   ## Graphics/ImageMagick++ extentions.  These extra flags break the
-  ## Octave build. 
+  ## Octave build.
   MAGICK_CPPFLAGS=`$PKG_CONFIG --cflags-only-I $magick++`
   MAGICK_LDFLAGS=`$PKG_CONFIG --libs-only-L $magick++`
   MAGICK_LIBS=`$PKG_CONFIG --libs-only-l $magick++`
 
   warn_magick="$magick++ library fails tests.  The imread function for reading image files will not be fully functional."
 
   save_CPPFLAGS="$CPPFLAGS"
   save_LIBS="$LIBS"
@@ -1046,17 +1046,17 @@ if test "$have_x" = yes; then
   if test "$x_includes" != "NONE"; then
     X11_INCFLAGS="$x_includes"
   fi
   AC_SUBST(X11_INCFLAGS)
 
   if test -z "$x_libraries"; then
     AC_CHECK_LIB([X11], XrmInitialize, [X11_LIBS="-lX11"], [X11_LIBS=])
   elif test $x_libraries != "NONE"; then
-    AC_CHECK_LIB([X11], XrmInitialize, 
+    AC_CHECK_LIB([X11], XrmInitialize,
       [X11_LIBS="-L$x_libraries -lX11"], [X11_LIBS=], "-L$x_libraries")
   fi
   AC_SUBST(X11_LIBS)
 fi
 
 ### Check for the Carbon framework on MacOSX systems
 OCTAVE_HAVE_FRAMEWORK([Carbon],
   [[#include <Carbon/Carbon.h>]], [[CGMainDisplayID ()]],
@@ -1220,17 +1220,17 @@ if test -n "$OPENGL_LIBS"; then
         octave_cv_fltk_opengl_support=no,
         octave_cv_fltk_opengl_support=yes)
       CFLAGS="$save_CFLAGS"
       ])
     if test $octave_cv_fltk_opengl_support = no; then
       warn_fltk_opengl="FLTK does not have OpenGL support.  Native graphics will be disabled."
     else
       AC_DEFINE(HAVE_FLTK, 1, [Define to 1 if FLTK is available.])
-    fi 
+    fi
 
     if test -z "$warn_fltk_opengl"; then
       GRAPHICS_CFLAGS="$FLTK_CFLAGS"
       GRAPHICS_LIBS="$FLTK_LDFLAGS"
     else
       native_graphics=no
       OCTAVE_CONFIGURE_WARNING([warn_fltk_opengl])
     fi
@@ -1376,17 +1376,17 @@ if test $ax_blas_ok = no; then
 fi
 
 if test $ax_blas_ok = no || test $ax_lapack_ok = no; then
   AC_MSG_ERROR([BLAS and LAPACK libraries are required])
 fi
 
 ### Check for the qrupdate library
 
-## No need to adjust FFLAGS because only link is attempted. 
+## No need to adjust FFLAGS because only link is attempted.
 ## Must supply proper LIBS, however.
 save_LIBS="$LIBS"
 LIBS="$LAPACK_LIBS $BLAS_LIBS $FLIBS $LIBS"
 OCTAVE_CHECK_LIB(qrupdate, qrupdate,
   [qrupdate not found.  The QR & Cholesky updating functions will be slow.],
   [],
   [sqr1up],
   [Fortran 77], [don't use qrupdate, disable QR & Cholesky updating functions])
@@ -1511,17 +1511,17 @@ if test -n "$UMFPACK_LIBS"; then
   if test $octave_cv_umfpack_need_suitesparse_time = yes; then
     AC_CHECK_LIB([rt], [clock_gettime], [xtra_libs="-lrt"], [xtra_libs=])
     ## FIXME: This library list is only accurate for Linux, Mac OS X.
     ##        Possibly need other library names for MinGW, Cygwin.
     AC_SEARCH_LIBS([SuiteSparse_time],
                    [suitesparseconfig SuiteSparse],
                    [], [], [$xtra_libs])
     case $ac_cv_search_SuiteSparse_time in
-      -l*)  
+      -l*)
         UMFPACK_LIBS="$UMFPACK_LIBS $ac_cv_search_SuiteSparse_time"
       ;;
       no)
         UMFPACK_LIBS=
         AC_MSG_WARN([UMFPACK library found but is missing SuiteSparse_time functionality.])
         AC_MSG_WARN([UMFPACK library will be disabled.])
       ;;
     esac
@@ -1629,34 +1629,34 @@ case $canonical_host_type in
     SH_LDFLAGS='-dynamiclib -single_module $(LDFLAGS)'
     case $canonical_host_type in
       powerpc-*)
         CXXPICFLAG=
         CPICFLAG=
         FPICFLAG=
       ;;
     esac
-    SHLEXT=dylib 
+    SHLEXT=dylib
     SHLLIB='$(SHLEXT)'
     SHLEXT_VER='$(version).$(SHLEXT)'
     SHLLIB_VER='$(version).$(SHLLIB)'
     NO_OCT_FILE_STRIP=true
     SONAME_FLAGS='-install_name $(octlibdir)/$@'
-    library_path_var=DYLD_LIBRARY_PATH  
+    library_path_var=DYLD_LIBRARY_PATH
   ;;
   *-*-cygwin*)
     CPICFLAG=
     CXXPICFLAG=
     FPICFLAG=
     LIBPRE=lib
     SHLPRE=cyg
     SHLBINPRE=cyg
     SHLEXT=dll
     SHLLIB=dll.a
-    SHLBIN=dll    
+    SHLBIN=dll
     DL_LDFLAGS="-shared -Wl,--export-all-symbols -Wl,--enable-auto-import -Wl,--enable-runtime-pseudo-reloc"
     SH_LDFLAGS="-shared -Wl,--export-all-symbols -Wl,--enable-auto-import -Wl,--enable-auto-image-base"
     SONAME_FLAGS='-Wl,--out-implib=$(patsubst $(SHLPRE)%,$(LIBPRE)%,$@).a'
     ldpreloadsep=":"
   ;;
   *-*-mingw*)
     BUILD_COMPILED_AUX_PROGRAMS=yes
     if test $have_msvc = yes; then
@@ -2127,17 +2127,17 @@ OCTAVE_CXX_COMPLEX_REFERENCE_ACCESSORS
 
 ## Check if fast integer arithmetics based on bit tricks is available.
 OCTAVE_FAST_INT_OPS
 
 ## Does the C compiler handle alloca() and const correctly?
 AC_FUNC_ALLOCA
 
 ## Does the C compiler support Automake subdir-objects option?
-AM_PROG_CC_C_O 
+AM_PROG_CC_C_O
 
 ### gnulib initialization: part 2
 ### After all include and path modifications have taken place
 ### and at the same priority level as function checks.
 
 gl_INIT
 
 ### Checks for functions and variables.
@@ -2236,17 +2236,17 @@ if test $octave_cv_header_math_defines =
     CPPFLAGS="$save_CPPFLAGS"
     ])
   if test $octave_cv_header__use_math_defines = yes; then
     octave_cv_header_math_defines=yes
     AC_DEFINE(_USE_MATH_DEFINES, 1,
       [Define to 1 if _USE_MATH_DEFINES is required to get math constants like M_LN2.])
     CPPFLAGS="$CPPFLAGS -D_USE_MATH_DEFINES"
   fi
-fi 
+fi
 
 if test $octave_cv_header_math_defines = yes; then
   AC_DEFINE(HAVE_MATH_DEFINES, 1,
     [Define to 1 if defines such as M_PI are available in math.h])
 else
   AC_MSG_ERROR([MATH DEFINES in math.h such as M_PI are required to build Octave])
 fi
 
@@ -2288,34 +2288,34 @@ esac
 if test $have_framework_carbon = yes; then
   OCTAVE_CARBON_CGDISPLAYBITSPERPIXEL
 fi
 
 AC_CHECK_FUNCS([getpwnam], [], [AC_CHECK_LIB([sun], [getpwnam])])
 
 AC_FUNC_CLOSEDIR_VOID
 
-## Check return type of matherr() 
+## Check return type of matherr()
 AC_CACHE_CHECK([for struct exception in math.h],
   [octave_cv_func_matherr_type],
   [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
       #include <math.h>
       ]], [[
       struct exception *x;
       x->type;
       x->name;
       ]])],
     octave_cv_func_matherr_type=yes,
     octave_cv_func_matherr_type=no)
   ])
 if test $octave_cv_func_matherr_type = yes; then
   AC_DEFINE(EXCEPTION_IN_MATH, 1,
     [Define to 1 if math.h declares struct exception for matherr().])
 fi
- 
+
 ## Signal stuff.
 
 AC_CHECK_DECLS([sys_siglist], [], [],
 [[#include <signal.h>
 /* NetBSD declares sys_siglist in unistd.h.  */
 #if HAVE_UNISTD_H
 # include <unistd.h>
 #endif
@@ -2335,17 +2335,17 @@ if test -n "$DOCDIR"; then
     DOCDIR=
     warn_docs_makeinfo="building documentation disabled because makeinfo was not found; make dist will fail"
     OCTAVE_CONFIGURE_WARNING([warn_docs_makeinfo])
   fi
 fi
 AM_CONDITIONAL([AMCOND_BUILD_DOCS], [test -n "$DOCDIR"])
 
 ### Maybe add -Wall, -W, and -Wshadow to compiler flags now that we're
-### done feature testing. 
+### done feature testing.
 
 GCC_EXTRA_FLAGS="-Wall -W -Wshadow -Wformat -Wpointer-arith -Wmissing-prototypes -Wstrict-prototypes -Wwrite-strings -Wcast-align -Wcast-qual"
 
 GXX_EXTRA_FLAGS="-Wall -W -Wshadow -Wold-style-cast -Wformat -Wpointer-arith -Wwrite-strings -Wcast-align -Wcast-qual"
 
 try_extra_warning_flags=yes
 
 AC_ARG_ENABLE([extra-warning-flags],
@@ -2557,17 +2557,17 @@ do
       if test -f "$dir/$jvmlib"; then
         JAVA_LDPATH=$dir
         break
       fi
     done
   fi
 
   if test -z "$JAVA_LDPATH"; then
-    ## Nothing found.  Try Java again using bootpath argument. 
+    ## Nothing found.  Try Java again using bootpath argument.
     JAVA_TMP_LDPATH=`$JAVA -classpath ${srcdir}/build-aux OctJavaQry JAVA_BOOTPATH`
     JAVA_TMP_LDPATH="${JAVA_TMP_LDPATH} ${JAVA_TMP_LDPATH}/client ${JAVA_TMP_LDPATH}/server"
     for dir in $JAVA_TMP_LDPATH; do
       if test -f "$dir/$jvmlib"; then
         JAVA_LDPATH=$dir
         break
       fi
     done
@@ -2590,17 +2590,17 @@ do
   fi
 
   ## Verify value passed in option --with-java-libdir
   if test -n "$JAVA_LDPATH"; then
     if test -f "${JAVA_LDPATH}/$jvmlib"; then
       :  # libjvm found
     else
       JAVA_LDPATH=""
-    fi 
+    fi
   fi
 
   if test -z "$JAVA_LDPATH"; then
     AC_MSG_RESULT([not found])
     warn_java="Library $jvmlib not found.  Octave will not be able to call Java methods."
     break
   else
     AC_MSG_RESULT([$JAVA_LDPATH])
@@ -2630,17 +2630,17 @@ do
         JAVA_CPPFLAGS="-I${JAVA_HOME}/include -I${JAVA_HOME}/include/linux"
       fi
     ;;
   esac
 
   ## Verify jni.h include file exists.
   JNI_PATH=`echo $JAVA_CPPFLAGS | $SED -e 's/-I//g'`
   have_jni=no
-  for dir in $JNI_PATH; do 
+  for dir in $JNI_PATH; do
     if test -f "${dir}/jni.h"; then have_jni=yes; break; fi
   done
   if test $have_jni = yes; then
     AC_MSG_RESULT([$dir])
   else
     AC_MSG_RESULT([not found])
     warn_java="Include file <jni.h> not found.  Octave will not be able to call Java methods."
     break
@@ -2699,17 +2699,17 @@ if test $build_gui = yes; then
   fi
 
   if test $build_gui = yes; then
     AC_CHECK_TOOLS(MOC, [moc-qt5 moc-qt4 moc])
     AC_CHECK_TOOLS(UIC, [uic-qt5 uic-qt4 uic])
     AC_CHECK_TOOLS(RCC, [rcc-qt5 rcc-qt4 rcc])
     AC_CHECK_TOOLS(LRELEASE, [lrelease-qt5 lrelease-qt4 lrelease])
     if test -n "$MOC" && test -n "$UIC" && test -n "$RCC" && test -n "$LRELEASE"; then
-      AC_DEFINE(HAVE_QT, 1, 
+      AC_DEFINE(HAVE_QT, 1,
         [Define to 1 if Qt is available (libraries, developer header files, utility programs (moc, uic, rcc, and lrelease))])
     else
       warn_gui="Qt utility programs moc, uic, rcc, and lrelease not found -- disabling GUI"
       build_gui=no
     fi
   fi
 
   if test $build_gui = yes; then
@@ -2718,20 +2718,21 @@ if test $build_gui = yes; then
       warn_gui="QAbstractItemModel::beginResetModel() not found -- disabling GUI"
       build_gui=no
     fi
   fi
 
   if test $build_gui = yes; then
     OCTAVE_CHECK_QFONT_MONOSPACE
     OCTAVE_CHECK_FUNC_SETPLACEHOLDERTEXT
+    OCTAVE_CHECK_FUNC_QTABWIDGET_SETMOVABLE
   fi
 
   if test $build_gui = yes; then
-    ## Check for Qscintilla library which is used in the GUI editor. 
+    ## Check for Qscintilla library which is used in the GUI editor.
     AC_CACHE_CHECK([whether Qscintilla library is installed],
       [octave_cv_lib_qscintilla],
       [save_CPPFLAGS="$CPPFLAGS"
       save_LDFLAGS="$LDFLAGS"
       save_LIBS="$LIBS"
       CPPFLAGS="$QT_CPPFLAGS $CPPFLAGS"
       LDFLAGS="$QT_LDFLAGS $LDFLAGS"
       LIBS="$QT_LIBS -lqscintilla2"
@@ -2751,17 +2752,17 @@ if test $build_gui = yes; then
     if test $octave_cv_lib_qscintilla = no; then
       warn_gui_editor="Qscintilla library not found -- disabling built-in GUI editor"
       OCTAVE_CONFIGURE_WARNING([warn_gui_editor])
     else
       ## Let's assume Qscintilla library is at the same location as
       ## other regular Qt libraries.
       QT_LIBS="$QT_LIBS -lqscintilla2"
       OCTAVE_CHECK_VERSION_2_6_0
-      AC_DEFINE(HAVE_QSCINTILLA, 1, 
+      AC_DEFINE(HAVE_QSCINTILLA, 1,
         [Define to 1 if the QScintilla library and header files are available])
 
       save_CPPFLAGS="$CPPFLAGS"
       CPPFLAGS="$QT_CPPFLAGS $CPPFLAGS"
       AC_LANG_PUSH(C++)
       AC_CHECK_HEADERS([Qsci/qscilexeroctave.h Qsci/qscilexermatlab.h])
       AC_LANG_POP(C++)
       CPPFLAGS="$save_CPPFLAGS"
@@ -2818,17 +2819,17 @@ AC_OUTPUT_MAKE_DEFS
 
 ### Do the substitutions in all the Makefiles.
 
 AC_SUBST(ac_config_files)
 AC_SUBST(ac_config_headers)
 
 AC_CONFIG_FILES([
   oct-conf-post.h:oct-conf-post.in.h
-  Makefile 
+  Makefile
   doc/Makefile
   doc/doxyhtml/Makefile
   doc/doxyhtml/Doxyfile
   doc/icons/Makefile
   doc/interpreter/Makefile
   doc/liboctave/Makefile
   doc/refcard/Makefile
   examples/Makefile
diff --git a/doc/interpreter/Makefile.am b/doc/interpreter/Makefile.am
--- a/doc/interpreter/Makefile.am
+++ b/doc/interpreter/Makefile.am
@@ -27,16 +27,17 @@ TEXINPUTS := "$(PATH_SEPARATOR)$(srcdir)
 export TEXINPUTS
 
 ## Include custom texmf.cnf necessary to run @seealso macro 
 TEXMFCNF := "..$(PATH_SEPARATOR)$(srcdir)/..$(PATH_SEPARATOR)$(TEXMFCNF)$(PATH_SEPARATOR)"
 export TEXMFCNF
 
 dist_man_MANS = \
   mkoctfile.1 \
+  octave-cli.1 \
   octave-config.1 \
   octave.1
 
 ## The following files are included in the manual via the @EXAMPLEFILE macro.
 ## They are dependencies for the documentation.
 ## They must not be distributed from this directory.
 EXAMPLE_FILES = \
   $(top_srcdir)/examples/@FIRfilter/FIRfilter.m \
diff --git a/doc/interpreter/contributors.in b/doc/interpreter/contributors.in
--- a/doc/interpreter/contributors.in
+++ b/doc/interpreter/contributors.in
@@ -128,17 +128,17 @@ Jarkko Kaleva
 Mohamed Kamoun
 Lute Kamstra
 Fotios Kasolis
 Thomas Kasper
 Joel Keay
 Mumit Khan
 Paul Kienzle
 Aaron A. King
-Erik Kjelsson
+Erik Kjellson
 Arno J. Klaassen
 Alexander Klein
 Geoffrey Knauth
 Heine Kolltveit
 Ken Kouno
 Kacper Kowalik
 Daniel Kraft
 Nir Krakauer
diff --git a/doc/interpreter/errors.txi b/doc/interpreter/errors.txi
--- a/doc/interpreter/errors.txi
+++ b/doc/interpreter/errors.txi
@@ -171,16 +171,32 @@ for n = 1:100
     if (strfind (msg, "operator *"))
       number_of_errors++;
     endif
   end_try_catch
 endfor
 @end group
 @end example
 
+@noindent
+Alternatively, the output of the @code{lasterror} function can be found
+in a variable indicated immediately after the @code{catch} keyword, as
+in the example below showing how to redirect an error as a warning:
+
+@example
+@group
+try
+  @dots{}
+catch err
+  warning(err.identifier, err.message);
+  @dots{}
+end_try_catch
+@end group
+@end example
+
 @DOCSTRING(lasterror)
 
 @DOCSTRING(lasterr)
 
 It is also possible to assign an identification string to an error.
 If an error has such an ID the user can catch this error
 as will be shown in the next example.  To assign an ID to an error,
 simply call @code{error} with two string arguments, where the first
diff --git a/doc/interpreter/mkoctfile.1 b/doc/interpreter/mkoctfile.1
--- a/doc/interpreter/mkoctfile.1
+++ b/doc/interpreter/mkoctfile.1
@@ -23,17 +23,17 @@
 .ft CW
 .nf
 ..
 .de Ve \" (V)erbatim (e)nd.  Return to regular font and justification
 .ft R
 .fi
 ..
 .\" --------------------------------------------------------------------
-.TH MKOCTFILE 1 "4 February 2011" "GNU Octave"
+.TH MKOCTFILE 1 "3 January 2014" "GNU Octave"
 .SH NAME
 mkoctfile \- Compile dynamic-load modules for GNU Octave
 .SH SYNOPSIS
 \fBmkoctfile\fP [\fIOPTION\fP]... file...
 .SH DESCRIPTION
 \fBmkoctfile\fP is used to compile C, C++, or Fortran source code in
 to a dynamically loadable \fI.oct\fP file for
 .BR octave (1).
@@ -135,16 +135,16 @@ Compile or link file.  Recognized file t
    .f    Fortran source (fixed form)
    .F    Fortran source (fixed form)
    .f90  Fortran source (free form)
    .F90  Fortran source (free form)
    .o    object file
    .a    library file
 .Ve
 .RE
-.SH "SEE ALSO"
-octave (1).
 .SH AUTHOR
 John W. Eaton <jwe@octave.org>
 
 This manual page was contributed by Dirk Eddelbuettel
 <edd@debian.org> for the Debian GNU/Linux distribution but
 may be used by others.
+.SH "SEE ALSO"
+octave (1).
diff --git a/doc/interpreter/octave-cli.1 b/doc/interpreter/octave-cli.1
new file mode 100644
--- /dev/null
+++ b/doc/interpreter/octave-cli.1
@@ -0,0 +1,86 @@
+.\" Copyright (C) 1996-2014 John W. Eaton
+.\"
+.\" This file is part of Octave.
+.\"
+.\" Octave is free software; you can redistribute it and/or modify it
+.\" under the terms of the GNU General Public License as published by the
+.\" Free Software Foundation; either version 3 of the License, or (at
+.\" your option) any later version.
+.\"
+.\" Octave is distributed in the hope that it will be useful, but WITHOUT
+.\" ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+.\" FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+.\" for more details.
+.\"
+.\" You should have received a copy of the GNU General Public License
+.\" along with Octave; see the file COPYING.  If not, see
+.\" <http://www.gnu.org/licenses/>.
+.\" --------------------------------------------------------------------
+.de Vb \" (V)erbatim (b)egin.  Use fixed width font and no justification
+.ft CW
+.nf
+..
+.de Ve \" (V)erbatim (e)nd.  Return to regular font and justification
+.ft R
+.fi
+..
+.\" --------------------------------------------------------------------
+.TH OCTAVE-CLI 1 "03 January 2014" "GNU Octave"
+.SH NAME
+octave-cli \- A high-level interactive language for numerical computations.
+.SH SYNOPSIS
+\fBoctave-cli\fP [\fIoptions\fP]... [\fIfile\fP]
+.SH DESCRIPTION
+Octave is a high-level language, primarily intended for numerical
+computations.  It provides a convenient command line interface for
+solving linear and nonlinear problems numerically.  \fBoctave-cli\fP
+has been compiled without any GUI support (Qt) which makes it smaller
+than the default \fBoctave\fP executable, but also limits it to
+providing just the command line interface (CLI).
+.SH OPTIONS
+The complete set of command-line options for \fBoctave-cli\fP is available
+by running the following command from the shell.
+.Vb
+
+    octave-cli \-\-help
+.Ve
+.SH DOCUMENTATION
+The primary documentation for Octave is written using Texinfo, the GNU
+documentation system, which allows the same source files to be used to
+produce online and printed versions of the manual.
+.PP
+You can read the online copy of the Octave documentation by issuing
+the following command from within Octave.
+.Vb
+
+    octave:1> doc
+
+.Ve
+The Info files may also be read with a stand-alone program such as
+\fBinfo\fP or \fBxinfo\fP.  HTML, Postscript, or PDF versions of the
+documentation are installed on many systems as well.
+.SH BUGS
+The Octave project maintains a bug tracker at http://bugs.octave.org.
+Before submitting a new item please read the instructions at
+http://www.octave.org/bugs.html on how to submit a useful report.
+.SH FILES
+Upon startup Octave looks for four initialization files.  Each file
+may contain any number of valid Octave commands.
+.TP
+\fIoctave-home\fP/share/octave/site/m/startup/octaverc
+Site-wide initialization file which changes options for all users.
+\fIoctave-home\fP is the directory where Octave was installed such as
+\fB/usr/local\fP.
+.TP
+\fIoctave-home\fP/share/octave/\fIversion\fP/m/startup/octaverc
+Site-wide initialization file for Octave version \fIversion\fP.
+.TP
+~/.octaverc
+User's personal initialization file.
+.TP
+\&\.octaverc
+Project-specific initialization file located in the current directory.
+.SH AUTHOR
+John W. Eaton <jwe@octave.org>
+.SH SEE ALSO
+octave (1)
diff --git a/doc/interpreter/octave-config.1 b/doc/interpreter/octave-config.1
--- a/doc/interpreter/octave-config.1
+++ b/doc/interpreter/octave-config.1
@@ -23,17 +23,17 @@
 .ft CW
 .nf
 ..
 .de Ve \" (V)erbatim (e)nd.  Return to regular font and justification
 .ft R
 .fi
 ..
 .\" --------------------------------------------------------------------
-.TH OCTAVE-CONFIG 1 "4 February 2011" "GNU Octave"
+.TH OCTAVE-CONFIG 1 "3 January 2014" "GNU Octave"
 .SH NAME
 octave-config - GNU Octave component and library information retrieval
 .SH SYNOPSIS
 \fBoctave-config\fP [\fIOPTION\fP]...
 .SH DESCRIPTION
 .B octave-config
 is a tool to obtain directory information for \fB.oct\fP and \fB.m\fP files for
 .BR octave (1).
@@ -76,8 +76,10 @@ Display the version number of
 .TP
 \fB\-h\fP, \fB\-?\fP, \fB\-\-help\fP
 Print help message.
 .SH AUTHOR
 John W. Eaton <jwe@octave.org>
 
 This manual page was contributed by Dirk Eddelbuettel <edd@debian.org> 
 for the Debian GNU/Linux distribution but may be used by others.
+.SH "SEE ALSO"
+octave (1).
diff --git a/doc/interpreter/stmt.txi b/doc/interpreter/stmt.txi
--- a/doc/interpreter/stmt.txi
+++ b/doc/interpreter/stmt.txi
@@ -810,50 +810,64 @@ end_unwind_protect
 
 @noindent
 Without @code{unwind_protect}, the value of @var{frobnosticate}
 would not be restored if an error occurs while evaluating the first part
 of the @code{unwind_protect} block because evaluation would stop at the
 point of the error and the statement to restore the value would not be
 executed.
 
+In addition to unwind_protect, Octave supports another form of
+exception handling, the @code{try} block.
+
+
 @node The try Statement
 @section The try Statement
 @cindex @code{try} statement
 @cindex @code{catch}
 @cindex @code{end_try_catch}
 
-In addition to unwind_protect, Octave supports another limited form of
-exception handling.
-
-The general form of a @code{try} block looks like this:
+The original form of a @code{try} block looks like this:
 
 @example
 @group
 try
   @var{body}
 catch
   @var{cleanup}
 end_try_catch
 @end group
 @end example
 
 @noindent
 where @var{body} and @var{cleanup} are both optional and may contain any
 Octave expressions or commands.  The statements in @var{cleanup} are
 only executed if an error occurs in @var{body}.
 
-No warnings or error messages are printed while @var{body} is
-executing.  If an error does occur during the execution of @var{body},
-@var{cleanup} can use the function @code{lasterr} to access the text
-of the message that would have been printed.  This is the same
-as @code{eval (@var{try}, @var{catch})} but it is more efficient since
-the commands do not need to be parsed each time the @var{try} and
-@var{catch} statements are evaluated.  @xref{Errors and Warnings}, for more
-information about the @code{lasterr} function.
+No warnings or error messages are printed while @var{body} is executing.
+If an error does occur during the execution of @var{body}, @var{cleanup}
+can use the functions @code{lasterr} or @code{lasterror} to access the
+text of the message that would have been printed, as well as its
+identifier. The alternative form,
+
+@example
+@group
+try
+  @var{body}
+catch @var{err}
+  @var{cleanup}
+end_try_catch
+@end group
+@end example
+
+@noindent
+will automatically store the output of @code{lasterror} in the structure
+@var{err}. @xref{Errors and Warnings} for more information about the
+@code{lasterr} and @code{lasterror} functions.
+
 
 @node Continuation Lines
 @section Continuation Lines
 @cindex continuation lines
 @cindex @code{...} continuation marker
 @cindex @code{\} continuation marker
 
 In the Octave language, most statements end with a newline character and
diff --git a/libgui/src/icons/widget-close-light.png b/libgui/src/icons/widget-close-light.png
new file mode 100644
index e69de29bb2d1d6434b8b29ae775ad8c2e48c5391..9164da3bf0fe5ec717d73f97b6c789bb461395f1
GIT binary patch
literal 239
zc%17D@N?(olHy`uVBq!ia0vp^AT}ol8<6B)wpSQPF%}28J29*~C-V}>VN3FMcVYMs
zf(!O8pA1r4;1O92R4fd_j105pNB{-dOFVsD+3zv32+8m)YveBg3gvscIEF}EE}d|Y
zm&K5Sx&3c2Z>GZ3<&7cETp#xC=(U&|-{9`H$(3d4Ui0n8B;G4^o(W0QQku}BqV%YG
zdW$F1gE`6#mdhE}Y-M@yj&08a-sxOS75^l^|6#t@Y5VtO+wSP4cRyTS_-~iZYPst6
by{GvbWPCTf#m`d!TFv0;>gTe~DWM4f=t@xb

diff --git a/libgui/src/icons/widget-dock-light.png b/libgui/src/icons/widget-dock-light.png
new file mode 100644
index e69de29bb2d1d6434b8b29ae775ad8c2e48c5391..a4ad878c657fc0846cddb0c173a1a9b78e519b8a
GIT binary patch
literal 205
zc%17D@N?(olHy`uVBq!ia0vp^AT}ol8<6B)wpSQPF%}28J29*~C-V}>VN3FMcVYMs
zf(!O8pA1r4;1O92R4fd_j105pNB{-dOFVsD+3zv3h-k^(SULGWP{`NQ#W6(U^3;HX
zybOjMhrFlnu$4J*QT9OYllOale!YsU6JTOIdFBuUe_I4YLfWOK-Pg}WNBb%<soYOq
sv|Ie-?^k<WL;oM&@-l0yPyHW;|M^NcgEO00fd(^py85}Sb4q9e06A<#6aWAK

diff --git a/libgui/src/icons/widget-undock-light.png b/libgui/src/icons/widget-undock-light.png
new file mode 100644
index e69de29bb2d1d6434b8b29ae775ad8c2e48c5391..fbd4da04e9aaf6562d84dad46179be98037a236a
GIT binary patch
literal 221
zc%17D@N?(olHy`uVBq!ia0vp^AT}ol8<6B)wpSQPF%}28J29*~C-V}>VN3FMcVYMs
zf(!O8pA1r4;1O92R4fd_j105pNB{-dOFVsD+3zv32uTa4oS5PS6pHn9aSV~T+}nSe
zmqC%kh5d1+zDY9sm0WfaWzh}lQ)XO!V=eT|J(=e?qo5)~K&Z%{C26V4zQ22DCjU4g
zZJ+&YNrp8quH7=7_04d()YO@pcNSe2S6w+Td&_U5o5xe)zS`;=PO&(c2egR6)78&q
Iol`;+0OaCEcmMzZ

diff --git a/libgui/src/m-editor/file-editor.cc b/libgui/src/m-editor/file-editor.cc
--- a/libgui/src/m-editor/file-editor.cc
+++ b/libgui/src/m-editor/file-editor.cc
@@ -866,16 +866,22 @@ file_editor::construct (void)
   // FIXME: what was the intended purpose of this unused variable?
   // QStyle *editor_style = QApplication::style ();
 
   _menu_bar = new QMenuBar (editor_widget);
   _tool_bar = new QToolBar (editor_widget);
   _tool_bar->setMovable (true);
   _tab_widget = new QTabWidget (editor_widget);
   _tab_widget->setTabsClosable (true);
+#ifdef HAVE_QTABWIDGET_SETMOVABLE
+  _tab_widget->setMovable (true);
+#endif
+  _tab_widget->setStyleSheet ("QTabBar::tab {max-height: 4ex; }");
+
+
 
   QAction *new_action = new QAction (QIcon (":/actions/icons/filenew.png"),
                                      tr ("&New File"), _tool_bar);
 
   QAction *open_action = new QAction (QIcon (":/actions/icons/fileopen.png"),
                                       tr ("&Open File"), _tool_bar);
 
   _save_action = new QAction (QIcon (":/actions/icons/filesave.png"),
diff --git a/libgui/src/module.mk b/libgui/src/module.mk
--- a/libgui/src/module.mk
+++ b/libgui/src/module.mk
@@ -66,16 +66,19 @@ octave_gui_ICONS = \
   src/icons/stop.png \
   src/icons/terminal.png \
   src/icons/undo.png \
   src/icons/up.png \
   src/icons/warning.png \
   src/icons/widget-close.png \
   src/icons/widget-dock.png \
   src/icons/widget-undock.png \
+  src/icons/widget-close-light.png \
+  src/icons/widget-dock-light.png \
+  src/icons/widget-undock-light.png \
   src/icons/zoom-in.png \
   src/icons/zoom-out.png
 
 octave_gui_MOC =
 
 if AMCOND_HAVE_QSCINTILLA
 octave_gui_MOC += \
   src/m-editor/moc-file-editor-interface.cc \
diff --git a/libgui/src/octave-dock-widget.cc b/libgui/src/octave-dock-widget.cc
--- a/libgui/src/octave-dock-widget.cc
+++ b/libgui/src/octave-dock-widget.cc
@@ -60,26 +60,28 @@ octave_dock_widget::octave_dock_widget (
   _dock_action-> setToolTip (tr ("Undock widget"));
   connect (_dock_action, SIGNAL (triggered (bool)),
            this, SLOT (change_floating (bool)));
   _dock_button = new QToolButton (this);
   _dock_button->setDefaultAction (_dock_action);
   _dock_button->setFocusPolicy (Qt::NoFocus);
   _dock_button->setIconSize (QSize (12,12));
 
-  QAction *close_action = new QAction
+  _close_action = new QAction
                    (QIcon (":/actions/icons/widget-close.png"), "", this );
-  close_action-> setToolTip (tr ("Hide widget"));
-  connect (close_action, SIGNAL (triggered (bool)),
+  _close_action-> setToolTip (tr ("Hide widget"));
+  connect (_close_action, SIGNAL (triggered (bool)),
            this, SLOT (change_visibility (bool)));
   _close_button = new QToolButton (this);
-  _close_button->setDefaultAction (close_action);
+  _close_button->setDefaultAction (_close_action);
   _close_button->setFocusPolicy (Qt::NoFocus);
   _close_button->setIconSize (QSize (12,12));
 
+  _icon_color = "";
+
   QHBoxLayout *h_layout = new QHBoxLayout ();
   h_layout->addStretch (100);
   h_layout->addWidget (_dock_button);
   h_layout->addWidget (_close_button);
   h_layout->setSpacing (0);
   h_layout->setContentsMargins (5,2,2,2);
 
   _title_widget = new QWidget ();
@@ -141,16 +143,17 @@ octave_dock_widget::connect_visibility_c
 // set the title in the dockwidgets title bar
 void
 octave_dock_widget::set_title (const QString& title)
 {
 #if defined (Q_OS_WIN32)
   QHBoxLayout* h_layout =
     static_cast<QHBoxLayout *> (titleBarWidget ()->layout ());
   QLabel *label = new QLabel (title);
+  label->setStyleSheet ("background: transparent;");
   h_layout->insertWidget (0,label);
 #endif
   setWindowTitle (title);
 }
 
 // make the widget floating
 void
 octave_dock_widget::make_window ()
@@ -165,30 +168,30 @@ octave_dock_widget::make_window ()
   // FIXME: dockWidgetArea always returns 2
   settings->setValue ("DockWidgets/" + objectName () + "_dock_area",
                       _parent->dockWidgetArea (this));
   settings->setValue ("DockWidgets/" + objectName (), saveGeometry ());
   settings->sync ();
 
   // remove parent and adjust the (un)dock icon
   setParent (0, Qt::Window);
-  _dock_action->setIcon (QIcon (":/actions/icons/widget-dock.png"));
+  _dock_action->setIcon (QIcon (":/actions/icons/widget-dock"+_icon_color+".png"));
   _dock_action->setToolTip (tr ("Dock widget"));
 
   // restore the last geometry( when floating
   setGeometry (settings->value ("DockWidgets/" + objectName ()
                        + "_floating_geometry",QRect(50,100,480,480)).toRect ());
 
 #else
 
   // non windows: Just set the appripriate window flag
   setWindowFlags (Qt::Window);
 
   QString css = styleSheet ();
-  css.replace ("widget-undock.png","widget-dock.png");
+  css.replace ("widget-undock","widget-dock");
   setStyleSheet (css);
 
 #endif
 
   _floating = true;
 }
 
 // dock the widget
@@ -218,26 +221,26 @@ octave_dock_widget::make_widget (bool do
       //        and its child widget
       restoreGeometry (settings->value
              ("DockWidgets/" + objectName ()).toByteArray ());
     }
   else  // only reparent, no docking
     setParent (_parent);
 
   // adjust the (un)dock icon
-  _dock_action->setIcon (QIcon (":/actions/icons/widget-undock.png"));
+  _dock_action->setIcon (QIcon (":/actions/icons/widget-undock"+_icon_color+".png"));
   _dock_action->setToolTip (tr ("Undock widget"));
 
 #else
 
   // non windows: just say we are a docked widget again
   setWindowFlags (Qt::Widget);
 
   QString css = styleSheet ();
-  css.replace ("widget-dock.png","widget-undock.png");
+  css.replace ("widget-dock","widget-undock");
   setStyleSheet (css);
 
 #endif
 
   _floating = false;
 }
 
 // slot for (un)dock action
@@ -271,75 +274,85 @@ octave_dock_widget::focusWidget ()
 }
 
 void
 octave_dock_widget::handle_settings (const QSettings *settings)
 {
   QString css;
   QString css_button;
   QString dock_icon;
+
   if (_floating)
-    dock_icon = "widget-dock.png";
+    dock_icon = "widget-dock";
   else
-    dock_icon = "widget-undock.png";
+    dock_icon = "widget-undock";
 
   if (settings->value ("DockWidgets/widget_title_custom_style",false).toBool ())
     {
 
       QColor default_var = QColor (0,0,0);
       QColor fg_color = settings->value ("Dockwidgets/title_fg_color",
                                          default_var).value<QColor> ();
 
       default_var = QColor (255,255,255);
       QColor bg_color = settings->value ("Dockwidgets/title_bg_color",
                                          default_var).value<QColor> ();
 
-      QString bg_icon = QString ("transparent");
-      if (bg_color.lightness () < 128)
-        bg_icon = fg_color.name ();
+      int r, g, b;
+      QColor bg_color_light = bg_color.lighter ();
+
+      bg_color.getRgb (&r, &g, &b);
+      if (r+g+b < 400)
+          _icon_color = "-light";
+      else
+        _icon_color = "";
+
+      QString background =
+          QString ("background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,"
+                   "            stop: 0 %1, stop: 0.75 %2, stop: 0.9 %2, stop: 1.0 %1);").
+                   arg (bg_color_light.name ()).
+                   arg (bg_color.name ());
 
 #if defined (Q_OS_WIN32)
-      css = QString ("background: %1; color: %2 ;").
-                     arg (bg_color.name ()).
-                     arg (fg_color.name ());
-      css_button = QString ("background: %3; border: 0px;").arg (bg_icon);
+      css = background + QString (" color: %1 ;").arg (fg_color.name ());
 #else
-      css = QString ("QDockWidget::title { background: %1;"
+      css = QString ("QDockWidget::title { " + background +
                      "                     text-align: center left;"
                      "                     padding: 0px 0px 0px 4px;}\n"
-                     "QDockWidget { color: %2 ; "
-                     "  titlebar-close-icon: url(:/actions/icons/widget-close.png);"
-                     "  titlebar-normal-icon: url(:/actions/icons/"+dock_icon+"); }"
+                     "QDockWidget { color: %1 ; "
+                     "  titlebar-close-icon: url(:/actions/icons/widget-close%2.png);"
+                     "  titlebar-normal-icon: url(:/actions/icons/"+dock_icon+"%2); }"
                      "QDockWidget::close-button,"
-                     "QDockWidget::float-button { background: %3; border: 0px;}"
+                     "QDockWidget::float-button { border: 0px;}"
                      ).
-                     arg (bg_color.name ()).
                      arg (fg_color.name ()).
-                     arg (bg_icon);
+                     arg (_icon_color);
 #endif
     }
   else
     {
 #if defined (Q_OS_WIN32)
       css = QString ("");
-      css_button = QString ("background: transparent; border: 0px;");
 #else
       css = QString ("QDockWidget::title { text-align: center left;"
                      "                     padding: 0px 0px 0px 4px;}"
                      "QDockWidget {"
                      "  titlebar-close-icon: url(:/actions/icons/widget-close.png);"
                      "  titlebar-normal-icon: url(:/actions/icons/"+dock_icon+"); }"
                      "QDockWidget::close-button,"
                      "QDockWidget::float-button { border: 0px; }"
                     );
 #endif
     }
 
 #if defined (Q_OS_WIN32)
   _title_widget->setStyleSheet (css);
+  css_button = QString ("background: transparent; border: 0px;");
   _dock_button->setStyleSheet (css_button);
   _close_button->setStyleSheet (css_button);
+  _dock_action->setIcon (QIcon (":/actions/icons/"+dock_icon+_icon_color+".png"));
+  _close_action->setIcon (QIcon (":/actions/icons/widget-close"+_icon_color+".png"));
 #else
   setStyleSheet (css);
 #endif
 
   notice_settings (settings);  // call individual handler
 }
diff --git a/libgui/src/octave-dock-widget.h b/libgui/src/octave-dock-widget.h
--- a/libgui/src/octave-dock-widget.h
+++ b/libgui/src/octave-dock-widget.h
@@ -105,20 +105,22 @@ protected slots:
 private slots:
 
   void change_floating (bool);
   void change_visibility (bool);
 
 private:
 
   QMainWindow *_parent;  // store the parent since we are reparenting to 0
-  QAction *_dock_action;
   bool _floating;
+  QString _icon_color;
 
 #if defined (Q_OS_WIN32)
   QWidget *_title_widget;
   QToolButton *_dock_button;
   QToolButton *_close_button;
+  QAction *_dock_action;
+  QAction *_close_action;
 #endif
 
 };
 
 #endif
diff --git a/libgui/src/resource.qrc b/libgui/src/resource.qrc
--- a/libgui/src/resource.qrc
+++ b/libgui/src/resource.qrc
@@ -62,10 +62,13 @@
         <file>icons/graphic_logo_HistoryDockWidget.png</file>
         <file>icons/graphic_logo_WorkspaceView.png</file>
         <file>icons/graphic_logo_DocumentationDockWidget.png</file>
         <file>icons/graphic_logo_ReleaseWidget.png</file>
         <file>icons/warning.png</file>
         <file>icons/widget-close.png</file>
         <file>icons/widget-dock.png</file>
         <file>icons/widget-undock.png</file>
+        <file>icons/widget-close-light.png</file>
+        <file>icons/widget-dock-light.png</file>
+        <file>icons/widget-undock-light.png</file>
     </qresource>
 </RCC>
diff --git a/libinterp/corefcn/error.cc b/libinterp/corefcn/error.cc
--- a/libinterp/corefcn/error.cc
+++ b/libinterp/corefcn/error.cc
@@ -2006,16 +2006,22 @@ last_error_message (void)
 }
 
 std::string
 last_error_id (void)
 {
   return Vlast_error_id;
 }
 
+octave_map
+last_error_stack (void)
+{
+  return Vlast_error_stack;
+}
+
 std::string
 last_warning_message (void)
 {
   return Vlast_warning_message;
 }
 
 std::string
 last_warning_id (void)
diff --git a/libinterp/corefcn/error.h b/libinterp/corefcn/error.h
--- a/libinterp/corefcn/error.h
+++ b/libinterp/corefcn/error.h
@@ -21,16 +21,17 @@ along with Octave; see the file COPYING.
 */
 
 #if !defined (octave_error_h)
 #define octave_error_h 1
 
 #include <cstdarg>
 #include <string>
 
+class octave_map;
 class octave_value_list;
 class unwind_protect;
 
 #define panic_impossible() \
   panic ("impossible state reached in file '%s' at line %d", \
          __FILE__, __LINE__)
 
 extern OCTINTERP_API void reset_error_handler (void);
@@ -132,14 +133,15 @@ extern OCTINTERP_API int buffer_error_me
 extern OCTINTERP_API bool discard_error_messages;
 
 // TRUE means warning messages are turned off.
 extern OCTINTERP_API bool discard_warning_messages;
 
 // Helper functions to pass last error and warning messages and ids
 extern OCTINTERP_API std::string last_error_message (void);
 extern OCTINTERP_API std::string last_error_id (void);
+extern OCTINTERP_API octave_map last_error_stack (void);
 extern OCTINTERP_API std::string last_warning_message (void);
 extern OCTINTERP_API std::string last_warning_id (void);
 
 extern OCTINTERP_API void interpreter_try (unwind_protect&);
 
 #endif
diff --git a/libinterp/corefcn/jit-typeinfo.cc b/libinterp/corefcn/jit-typeinfo.cc
--- a/libinterp/corefcn/jit-typeinfo.cc
+++ b/libinterp/corefcn/jit-typeinfo.cc
@@ -911,17 +911,17 @@ jit_operation::do_generate (const signat
 jit_function *
 jit_operation::generate (const signature_vec&) const
 {
   return 0;
 }
 
 bool
 jit_operation::signature_cmp
-::operator() (const signature_vec *lhs, const signature_vec *rhs)
+::operator() (const signature_vec *lhs, const signature_vec *rhs) const
 {
   const signature_vec& l = *lhs;
   const signature_vec& r = *rhs;
 
   if (l.size () < r.size ())
     return true;
   else if (l.size () > r.size ())
     return false;
diff --git a/libinterp/corefcn/jit-typeinfo.h b/libinterp/corefcn/jit-typeinfo.h
--- a/libinterp/corefcn/jit-typeinfo.h
+++ b/libinterp/corefcn/jit-typeinfo.h
@@ -367,17 +367,17 @@ protected:
   virtual jit_function *generate (const signature_vec& types) const;
 private:
   Array<octave_idx_type> to_idx (const signature_vec& types) const;
 
   const jit_function& do_generate (const signature_vec& types) const;
 
   struct signature_cmp
   {
-    bool operator() (const signature_vec *lhs, const signature_vec *rhs);
+    bool operator() (const signature_vec *lhs, const signature_vec *rhs) const;
   };
 
   typedef std::map<const signature_vec *, jit_function *, signature_cmp>
   generated_map;
 
   mutable generated_map generated;
 
   std::vector<Array<jit_function> > overloads;
diff --git a/libinterp/parse-tree/lex.h b/libinterp/parse-tree/lex.h
--- a/libinterp/parse-tree/lex.h
+++ b/libinterp/parse-tree/lex.h
@@ -265,19 +265,19 @@ public:
       parsing_classdef_get_method (false),
       parsing_classdef_set_method (false), 
       quote_is_transpose (false), force_script (false),
       reading_fcn_file (false), reading_script_file (false),
       reading_classdef_file (false),
       input_line_number (1), current_input_column (1),
       bracketflag (0), braceflag (0),
       looping (0), defining_func (0), looking_at_function_handle (0),
-      block_comment_nesting_level (0), token_count (0),
-      current_input_line (), comment_text (), help_text (),
-      string_text (), string_line (0), string_column (0),
+      block_comment_nesting_level (0), command_arg_paren_count (0),
+      token_count (0), current_input_line (), comment_text (),
+      help_text (), string_text (), string_line (0), string_column (0),
       fcn_file_name (), fcn_file_full_name (), looking_at_object_index (),
       parsed_function_name (), pending_local_variables (),
       symtab_context (), nesting_level (), tokens ()
   {
     init ();
   }
 
   ~lexical_feedback (void);
@@ -392,16 +392,19 @@ public:
   int defining_func;
 
   // nonzero means we are parsing a function handle.
   int looking_at_function_handle;
 
   // nestng level for blcok comments.
   int block_comment_nesting_level;
 
+  // Parenthesis count for command argument parsing.
+  int command_arg_paren_count;
+
   // Count of tokens recognized by this lexer since initialized or
   // since the last reset.
   size_t token_count;
 
   // The current line of input.
   std::string current_input_line;
 
   // The current comment text.
diff --git a/libinterp/parse-tree/lex.ll b/libinterp/parse-tree/lex.ll
--- a/libinterp/parse-tree/lex.ll
+++ b/libinterp/parse-tree/lex.ll
@@ -227,16 +227,37 @@ object) relevant global values before an
             return -1; \
  \
           if (curr_lexer->at_end_of_file ()) \
             return curr_lexer->handle_end_of_input (); \
         } \
     } \
   while (0)
 
+// When a command argument boundary is detected, push out the
+// current argument being built.  This one seems like a good
+// candidate for a function call.
+
+#define COMMAND_ARG_FINISH \
+  do \
+    { \
+      if (curr_lexer->string_text.empty ()) \
+        break; \
+ \
+      int retval = curr_lexer->handle_token (curr_lexer->string_text, \
+                                             SQ_STRING); \
+ \
+      curr_lexer->string_text = ""; \
+      curr_lexer->command_arg_paren_count = 0; \
+ \
+      yyless (0); \
+ \
+      return retval; \
+    } \
+  while (0)
 
 static bool Vdisplay_tokens = false;
 
 static unsigned int Vtoken_count = 0;
 
 // Internal variable for lexer debugging state.
 static bool lexer_debug_flag = false;
 
@@ -278,64 +299,139 @@ ANY_INCLUDING_NL (.|{NL})
 
     return curr_lexer->show_token (INPUT_FILE);
   }
 
 %{
 // Help and other command-style functions.
 %}
 
-<COMMAND_START>{NL} {
-    curr_lexer->lexer_debug ("<COMMAND_START>{NL}");
+%{
+// Commands can be continued on a second line using the ellipsis.
+// If an argument is in construction, it is completed.
+%}
+
+<COMMAND_START>(\.\.\.)[^\r\n]*{NL} {
+    curr_lexer->lexer_debug ("<COMMAND_START>(\\.\\.\\.)[^\\r\\n]*{NL}");
+
+    COMMAND_ARG_FINISH;
+
+    curr_lexer->input_line_number++;
+    curr_lexer->current_input_column = 1;
+
+    HANDLE_STRING_CONTINUATION;
+  }
+
+%{
+// Commands normally end at the end of a line or a semicolon.
+%}
+
+<COMMAND_START>({CCHAR}[^\r\n]*)?{NL} {
+    curr_lexer->lexer_debug ("<COMMAND_START>({CCHAR}[^\\r\\n]*)?{NL}");
+
+    COMMAND_ARG_FINISH;
 
     curr_lexer->input_line_number++;
     curr_lexer->current_input_column = 1;
-
     curr_lexer->looking_for_object_index = false;
     curr_lexer->at_beginning_of_statement = true;
-
     curr_lexer->pop_start_state ();
 
-    return curr_lexer->count_token ('\n');
+    return curr_lexer->handle_token ('\n');
+  }
+
+<COMMAND_START>[\,\;] {
+    curr_lexer->lexer_debug( "<COMMAND_START>[\\,\\;]" );
+
+    if (yytext[0] != ',' || curr_lexer->command_arg_paren_count == 0)
+      {
+        COMMAND_ARG_FINISH;
+        curr_lexer->looking_for_object_index = false;
+        curr_lexer->at_beginning_of_statement = true;
+        curr_lexer->pop_start_state ();
+        return curr_lexer->handle_token (yytext[0]);
+      }
+    else
+      curr_lexer->string_text += yytext;
+
+    curr_lexer->current_input_column += yyleng;
   }
 
-<COMMAND_START>[\;\,] {
-    curr_lexer->lexer_debug ("<COMMAND_START>[\\;\\,]");
-
-    curr_lexer->looking_for_object_index = false;
-    curr_lexer->at_beginning_of_statement = true;
-
-    curr_lexer->pop_start_state ();
-
-    if (strcmp (yytext, ",") == 0)
-      return curr_lexer->handle_token (',');
-    else
-      return curr_lexer->handle_token (';');
+%{
+// Unbalanced parentheses serve as pseudo-quotes: they are included in
+// the final argument string, but they cause parentheses and quotes to
+// be slurped into that argument as well.
+%}
+
+<COMMAND_START>[\(\[\{]+ {
+    curr_lexer->lexer_debug ("<COMMAND_START>[\\(\\[\\{]+");
+
+    curr_lexer->command_arg_paren_count += yyleng;
+    curr_lexer->string_text += yytext;
+    curr_lexer->current_input_column += yyleng;
   }
 
+<COMMAND_START>[\)\]\}]+ {
+   curr_lexer->lexer_debug ("<COMMAND_START>[\\)\\]\\}]+");
+
+   curr_lexer->command_arg_paren_count -= yyleng;
+   curr_lexer->string_text += yytext;
+   curr_lexer->current_input_column += yyleng;
+}
+
+%{
+// Handle quoted strings.  Quoted strings that are not separated by
+// whitespace from other argument text are combined with that previous
+// text.  For instance,
+//
+//   command 'text1'"text2"
+//
+// has a single argument text1text2, not two separate arguments.
+// That's why we must test to see if we are in command argument mode
+// when processing the end of a string.
+%}
+
 <COMMAND_START>[\"\'] {
     curr_lexer->lexer_debug ("<COMMAND_START>[\\\"\\']");
 
-    curr_lexer->at_beginning_of_statement = false;
-
-    curr_lexer->current_input_column++;
-
-    curr_lexer->begin_string (yytext[0] == '"'
-                              ? DQ_STRING_START : SQ_STRING_START);
+    if (curr_lexer->command_arg_paren_count == 0)
+      curr_lexer->begin_string (yytext[0] == '"'
+                                ? DQ_STRING_START : SQ_STRING_START);
+    else
+      curr_lexer->string_text += yytext;
+
+    curr_lexer->current_input_column += yyleng;
   }
 
-<COMMAND_START>[^#% \t\r\n\;\,\"\'][^ \t\r\n\;\,]*{S}* {
-    curr_lexer->lexer_debug ("<COMMAND_START>[^#% \\t\\r\\n\\;\\,\\\"\\'][^ \\t\\r\\n\\;\\,]*{S}*");
-
-    std::string tok = strip_trailing_whitespace (yytext);
-
-    curr_lexer->looking_for_object_index = false;
-    curr_lexer->at_beginning_of_statement = false;
-
-    return curr_lexer->handle_token (tok, SQ_STRING);
+%{
+// In standard command argument processing, whitespace separates
+// arguments.  In the presence of unbalanced parentheses, it is
+// incorporated into the argument.
+%}
+
+<COMMAND_START>{S}+ {
+    curr_lexer->lexer_debug ("<COMMAND_START>{S}+");
+
+    if (curr_lexer->command_arg_paren_count == 0)
+      COMMAND_ARG_FINISH;
+    else
+      curr_lexer->string_text += yytext;
+
+    curr_lexer->current_input_column += yyleng;
+  }
+
+%{
+// Everything else is slurped into the command arguments.
+%}
+
+<COMMAND_START>([\.]|[^#% \t\r\n\,\;\"\'\(\[\{\}\]\)]+) {
+    curr_lexer->lexer_debug ("<COMMAND_START>[^#% \\t\\r\\n\\.\\,\\;\\\"\\'\\(\\[\\{\\}\\]\\)]+");
+
+    curr_lexer->string_text += yytext;
+    curr_lexer->current_input_column += yyleng;
   }
 
 <MATRIX_START>{S}* {
     curr_lexer->lexer_debug ("<MATRIX_START>{S}*");
 
     curr_lexer->mark_previous_token_trailing_space ();
   }
 
@@ -673,27 +769,30 @@ ANY_INCLUDING_NL (.|{NL})
 
 <DQ_STRING_START>\" {
     curr_lexer->lexer_debug ("<DQ_STRING_START>\\\"");
 
     curr_lexer->current_input_column++;
 
     curr_lexer->pop_start_state ();
 
-    curr_lexer->looking_for_object_index = true;
-    curr_lexer->at_beginning_of_statement = false;
-
-    curr_lexer->push_token (new token (DQ_STRING,
-                                       curr_lexer->string_text,
-                                       curr_lexer->string_line,
-                                       curr_lexer->string_column));
-
-    curr_lexer->string_text = "";
-
-    return curr_lexer->count_token_internal (DQ_STRING);
+    if (curr_lexer->start_state() != COMMAND_START)
+      {
+        curr_lexer->looking_for_object_index = true;
+        curr_lexer->at_beginning_of_statement = false;
+
+        curr_lexer->push_token (new token (DQ_STRING,
+                                           curr_lexer->string_text,
+                                           curr_lexer->string_line,
+                                           curr_lexer->string_column));
+
+        curr_lexer->string_text = "";
+
+        return curr_lexer->count_token_internal (DQ_STRING);
+      }
   }
 
 <DQ_STRING_START>\\[0-7]{1,3} {
     curr_lexer->lexer_debug ("<DQ_STRING_START>\\\\[0-7]{1,3}");
 
     curr_lexer->current_input_column += yyleng;
 
     int result;
@@ -856,27 +955,30 @@ ANY_INCLUDING_NL (.|{NL})
 
 <SQ_STRING_START>\' {
     curr_lexer->lexer_debug ("<SQ_STRING_START>\\'");
 
     curr_lexer->current_input_column++;
 
     curr_lexer->pop_start_state ();
 
-    curr_lexer->looking_for_object_index = true;
-    curr_lexer->at_beginning_of_statement = false;
-
-    curr_lexer->push_token (new token (SQ_STRING,
-                                       curr_lexer->string_text,
-                                       curr_lexer->string_line,
-                                       curr_lexer->string_column));
-
-    curr_lexer->string_text = "";
-
-    return curr_lexer->count_token_internal (SQ_STRING);
+    if (curr_lexer->start_state() != COMMAND_START)
+      {
+        curr_lexer->looking_for_object_index = true;
+        curr_lexer->at_beginning_of_statement = false;
+
+        curr_lexer->push_token (new token (SQ_STRING,
+                                           curr_lexer->string_text,
+                                           curr_lexer->string_line,
+                                           curr_lexer->string_column));
+
+        curr_lexer->string_text = "";
+
+        return curr_lexer->count_token_internal (SQ_STRING);
+      }
   }
 
 <SQ_STRING_START>[^\'\n\r]+ {
     curr_lexer->lexer_debug ("<SQ_STRING_START>[^\\'\\n\\r]+");
 
     curr_lexer->current_input_column += yyleng;
     curr_lexer->string_text += yytext;
   }
@@ -1846,16 +1948,17 @@ lexical_feedback::reset (void)
   help_text = "";
   string_text = "";
   string_line = 0;
   string_column = 0;
   fcn_file_name = "";
   fcn_file_full_name = "";
   looking_at_object_index.clear ();
   looking_at_object_index.push_front (false);
+  command_arg_paren_count = 0;
 
   while (! parsed_function_name.empty ())
     parsed_function_name.pop ();
 
   nesting_level.reset ();
 
   tokens.clear ();
 }
@@ -3236,8 +3339,9 @@ octave_push_lexer::fill_flex_buffer (cha
       status = YY_NULL;
 
       if (! input_buf.at_eof ())
         fatal_error ("octave_base_lexer::fill_flex_buffer failed");
     }
 
   return status;
 }
+
diff --git a/libinterp/parse-tree/pt-eval.cc b/libinterp/parse-tree/pt-eval.cc
--- a/libinterp/parse-tree/pt-eval.cc
+++ b/libinterp/parse-tree/pt-eval.cc
@@ -938,16 +938,17 @@ tree_evaluator::visit_try_catch_command 
 
               ult = expr_id->lvalue ();
 
               if (error_state)
                 return;
 
               err.assign ("message", last_error_message ());
               err.assign ("identifier", last_error_id ());
+              err.assign ("stack", last_error_stack ());
 
               if (! error_state)
                 ult.assign (octave_value::op_asn_eq, err);
 
             }
 
           if (catch_code)
             catch_code->accept (*this);
diff --git a/m4/acinclude.m4 b/m4/acinclude.m4
--- a/m4/acinclude.m4
+++ b/m4/acinclude.m4
@@ -449,16 +449,47 @@ AC_DEFUN([OCTAVE_CHECK_FUNC_QABSTRACTITE
     AC_LANG_POP(C++)
   ])
   if test $octave_cv_func_qabstractitemmodel_beginresetmodel = yes; then
     AC_DEFINE(HAVE_QABSTRACTITEMMODEL_BEGINRESETMODEL, 1,
       [Define to 1 if Qt has the QAbstractItemModel::beginResetModel() function.])
   fi
 ])
 dnl
+dnl Check whether the Qt QTabWidget::setMovable() function exists.
+dnl This function was added in Qt 4.5.
+dnl
+AC_DEFUN([OCTAVE_CHECK_FUNC_QTABWIDGET_SETMOVABLE], [
+  AC_CACHE_CHECK([whether Qt has the QTabWidget::setMovable() function],
+    [octave_cv_func_qtabwidget_setmovable],
+    [AC_LANG_PUSH(C++)
+    ac_octave_save_CPPFLAGS="$CPPFLAGS"
+    CPPFLAGS="$QT_CPPFLAGS $CPPFLAGS"
+    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
+        #include <QTabWidget>
+        class tab_widget : public QTabWidget
+        {
+        public:
+          tab_widget (QWidget *parent = 0) : QTabWidget (parent) { this->setMovable (true); }
+          ~tab_widget () {}
+        };
+        ]], [[
+        tab_widget tw;
+        ]])],
+      octave_cv_func_qtabwidget_setmovable=yes,
+      octave_cv_func_qtabwidget_setmovable=no)
+    CPPFLAGS="$ac_octave_save_CPPFLAGS"
+    AC_LANG_POP(C++)
+  ])
+  if test $octave_cv_func_qtabwidget_setmovable = yes; then
+    AC_DEFINE(HAVE_QTABWIDGET_SETMOVABLE, 1,
+      [Define to 1 if Qt has the QTabWidget::setMovable() function.])
+  fi
+])
+dnl
 dnl Check whether HDF5 library has version 1.6 API functions.
 dnl
 AC_DEFUN([OCTAVE_CHECK_HDF5_HAS_VER_16_API], [
   AC_CACHE_CHECK([whether HDF5 library has enforced version 1.6 API],
     [octave_cv_hdf5_has_ver_16_api],
     [AC_LINK_IFELSE([AC_LANG_PROGRAM([[
       #include <hdf5.h>
       ]], [[
diff --git a/scripts/pkg/private/fix_depends.m b/scripts/pkg/private/fix_depends.m
--- a/scripts/pkg/private/fix_depends.m
+++ b/scripts/pkg/private/fix_depends.m
@@ -24,17 +24,17 @@
 
 ## Make sure the depends field is of the right format.
 ## This function returns a cell of structures with the following fields:
 ##   package, version, operator
 function deps_cell = fix_depends (depends)
   deps = strtrim (ostrsplit (tolower (depends), ","));
   deps_cell = cell (1, length (deps));
   dep_pat = ...
-  '\s*(?<name>\w+)+\s*(\(\s*(?<op>[<>=]+)\s*(?<ver>\d+\.\d+(\.\d+)*)\s*\))*\s*';
+  '\s*(?<name>[-\w]+)\s*(\(\s*(?<op>[<>=]+)\s*(?<ver>\d+\.\d+(\.\d+)*)\s*\))*\s*';
 
   ## For each dependency.
   for i = 1:length (deps)
     dep = deps{i};
     [start, nm] = regexp (dep, dep_pat, 'start', 'names');
     ## Is the dependency specified 
     ## in the correct format?
     if (! isempty (start))
diff --git a/scripts/plot/util/close.m b/scripts/plot/util/close.m
--- a/scripts/plot/util/close.m
+++ b/scripts/plot/util/close.m
@@ -100,10 +100,9 @@ endfunction
 %!     close (hf);
 %!   endif
 %! end_unwind_protect
 
 %!error close (1,2,3)
 %!error <first argument must be "all" or a figure> close ({"all"})
 %!error <first argument must be "all" or a figure> close ("all_and_more")
 %!error <first argument must be "all" or a figure> close (-1)
-%!error <expecting argument to be "all hidden"> close "all" hid"
-
+%!error <expecting argument to be "all hidden"> close all hid
