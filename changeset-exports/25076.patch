# HG changeset patch
# User Markus MÃ¼tzel <markus.muetzel@gmx.de>
# Date 1522529220 -7200
#      Sat Mar 31 22:47:00 2018 +0200
# Branch stable
# Node ID b9c62b62f9eb7a1d8180a0e50c541a19e33b18d4
# Parent  8fb9aeed454938b47672a3438d306891bd1d9632
test: Mark certain bugs as xtest when run on Windows platforms (bug #53490).

* mappers.cc (Facos, Facosh, Fasin, Fasinh): Use run-time conditional
(! ispc ()) to regular BIST code and only run xtest on Windoes platforms.

diff --git a/libinterp/corefcn/mappers.cc b/libinterp/corefcn/mappers.cc
--- a/libinterp/corefcn/mappers.cc
+++ b/libinterp/corefcn/mappers.cc
@@ -121,24 +121,24 @@ Compute the inverse cosine in radians fo
 %! obs = acos ([-2, -2-i*eps, -2+i*eps]);
 %! exp = [rval - ival*i, rval + ival*i, rval - ival*i];
 %! assert (obs, exp, 5*eps);
 %! assert (acos ([2 0]),  [ival*i, pi/2], 3*eps);
 %! assert (acos ([2 0i]), [ival*i, pi/2], 3*eps);
 
 ## Test large magnitude arguments (bug #45507)
 ## Test fails with older versions of libm, solution is to upgrade.
-%!testif ; ! ismac ()   <*45507>
+%!testif ; ! ismac () && ! ispc ()   <*45507>
 %! x = [1, -1, i, -i] .* 1e150;
 %! v = [0, pi, pi/2, pi/2];
 %! assert (real (acos (x)), v);
 
 %!xtest <52627>
-%! ## Same test code as above, but intended only for test statistics on Mac.
-%! ## Mac trig/hyperbolic functions have huge tolerances.
+%! ## Same test code as above, but intended only for test statistics on Mac and
+%! ## Windows.  Their trig/hyperbolic functions have huge tolerances.
 %! if (! ismac ()), return; endif
 %! x = [1, -1, i, -i] .* 1e150;
 %! v = [0, pi, pi/2, pi/2];
 %! assert (real (acos (x)), v);
 
 %!error acos ()
 %!error acos (1, 2)
 */
@@ -196,24 +196,24 @@ Compute the inverse hyperbolic cosine fo
 %!test <49091>
 %! re = single (2.99822295029797);
 %! im = single (pi/2);
 %! assert (acosh (single (10i)), re + i*im, 5*eps ("single"));
 %! assert (acosh (single (-10i)), re - i*im, 5*eps ("single"));
 
 ## Test large magnitude arguments (bug #45507)
 ## Test fails with older versions of libm, solution is to upgrade.
-%!testif ; ! ismac ()   <*45507>
+%!testif ; ! ismac () && ! ispc ()   <*45507>
 %! x = [1, -1, i, -i] .* 1e150;
 %! v = [0, pi, pi/2, -pi/2];
 %! assert (imag (acosh (x)), v);
 
 %!xtest <52627>
-%! ## Same test code as above, but intended only for test statistics on Mac.
-%! ## Mac trig/hyperbolic functions have huge tolerances.
+%! ## Same test code as above, but intended only for test statistics on Mac and
+%! ## Windows.  Their trig/hyperbolic functions have huge tolerances.
 %! if (! ismac ()), return; endif
 %! x = [1, -1, i, -i] .* 1e150;
 %! v = [0, pi, pi/2, -pi/2];
 %! assert (imag (acosh (x)), v);
 
 %!error acosh ()
 %!error acosh (1, 2)
 */
@@ -324,24 +324,24 @@ Compute the inverse sine in radians for 
 %! obs = asin ([-2, -2-i*eps, -2+i*eps]);
 %! exp = [-rval + ival*i, -rval - ival*i, -rval + ival*i];
 %! assert (obs, exp, 2*eps);
 %! assert (asin ([2 0]),  [rval - ival*i, 0], 2*eps);
 %! assert (asin ([2 0i]), [rval - ival*i, 0], 2*eps);
 
 ## Test large magnitude arguments (bug #45507)
 ## Test fails with older versions of libm, solution is to upgrade.
-%!testif ; ! ismac ()   <*45507>
+%!testif ; ! ismac () && ! ispc ()   <*45507>
 %! x = [1, -1, i, -i] .* 1e150;
 %! v = [pi/2, -pi/2, 0, -0];
 %! assert (real (asin (x)), v);
 
 %!xtest <52627>
-%! ## Same test code as above, but intended only for test statistics on Mac.
-%! ## Mac trig/hyperbolic functions have huge tolerances.
+%! ## Same test code as above, but intended only for test statistics on Mac and
+%! ## Windows. Their trig/hyperbolic functions have huge tolerances.
 %! if (! ismac ()), return; endif
 %! x = [1, -1, i, -i] .* 1e150;
 %! v = [pi/2, -pi/2, 0, -0];
 %! assert (real (asin (x)), v);
 
 %!error asin ()
 %!error asin (1, 2)
 */
@@ -367,24 +367,24 @@ Compute the inverse hyperbolic sine for 
 
 %!test
 %! v = single ([0, pi/2*i, 0, -pi/2*i]);
 %! x = single ([0, i, 0, -i]);
 %! assert (asinh (x), v,  sqrt (eps ("single")));
 
 ## Test large magnitude arguments (bug #45507)
 ## Test fails with older versions of libm, solution is to upgrade.
-%!testif ; ! ismac ()   <*45507>
+%!testif ; ! ismac () && ! ispc ()   <*45507>
 %! x = [1, -1, i, -i] .* 1e150;
 %! v = [0, 0, pi/2, -pi/2];
 %! assert (imag (asinh (x)), v);
 
 %!xtest <52627>
-%! ## Same test code as above, but intended only for test statistics on Mac.
-%! ## Mac trig/hyperbolic functions have huge tolerances.
+%! ## Same test code as above, but intended only for test statistics on Mac and
+%! ## Windows.  Their trig/hyperbolic functions have huge tolerances.
 %! if (! ismac ()), return; endif
 %! x = [1, -1, i, -i] .* 1e150;
 %! v = [0, 0, pi/2, -pi/2];
 %! assert (imag (asinh (x)), v);
 
 %!error asinh ()
 %!error asinh (1, 2)
 */
