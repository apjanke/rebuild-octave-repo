# HG changeset patch
# User Markus MÃ¼tzel <markus.muetzel@gmx.de>
# Date 1530189586 -7200
#      Thu Jun 28 14:39:46 2018 +0200
# Node ID c63f67d87b4ac6150440f13ee5f02034eac6afb0
# Parent  7fb40efda31f345734a33300ad78522727d71581
Add C++ functions to convert between UTF-8 string and wstring (bug #49118).

* lo-sysdep.[cc,h]: Add functions "u8_to_wstring" and "u8_from_wstring" for
conversion between utf-8 strings and wide character strings.

diff --git a/liboctave/system/lo-sysdep.cc b/liboctave/system/lo-sysdep.cc
--- a/liboctave/system/lo-sysdep.cc
+++ b/liboctave/system/lo-sysdep.cc
@@ -24,16 +24,17 @@ along with Octave; see the file COPYING.
 #  include "config.h"
 #endif
 
 #include <string>
 
 #include "file-ops.h"
 #include "lo-error.h"
 #include "lo-sysdep.h"
+#include "uniconv-wrappers.h"
 #include "unistd-wrappers.h"
 
 namespace octave
 {
   namespace sys
   {
     std::string
     getcwd (void)
@@ -62,10 +63,44 @@ namespace octave
 
 #if defined (OCTAVE_USE_WINDOWS_API)
       if (path.length () == 2 && path[1] == ':')
         path += '\\';
 #endif
 
       return octave_chdir_wrapper (path.c_str ());
     }
+
+    std::wstring
+    u8_to_wstring (const std::string& utf8_string)
+    {
+      wchar_t *wchar = nullptr;
+
+      wchar = u8_to_wchar (utf8_string.c_str ());
+
+      std::wstring retval = L"";
+      if (wchar != nullptr)
+        {
+          retval = std::wstring (wchar);
+          free (static_cast<void *> (wchar));
+        }
+
+      return retval;
+    }
+
+    std::string
+    u8_from_wstring (const std::wstring& wchar_string)
+    {
+      char *mbchar = nullptr;
+
+      mbchar = u8_from_wchar (wchar_string.c_str ());
+
+      std::string retval = "";
+      if (mbchar != nullptr)
+        {
+          retval = std::string (mbchar);
+          free (static_cast<void *> (mbchar));
+        }
+
+      return retval;
+    }
   }
 }
diff --git a/liboctave/system/lo-sysdep.h b/liboctave/system/lo-sysdep.h
--- a/liboctave/system/lo-sysdep.h
+++ b/liboctave/system/lo-sysdep.h
@@ -35,12 +35,16 @@ class string_vector;
 
 namespace octave
 {
   namespace sys
   {
     extern std::string getcwd (void);
 
     extern int chdir (const std::string&);
+
+    extern std::wstring u8_to_wstring (const std::string&);
+
+    extern std::string u8_from_wstring (const std::wstring&);
   }
 }
 
 #endif
