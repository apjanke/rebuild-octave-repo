# HG changeset patch
# User jwe
# Date 1174677612 0
#      Fri Mar 23 19:20:12 2007 +0000
# Node ID 407c08a8e5b745a84814a38316303719bc9a3ae1
# Parent  af8e28709a2cbb0dee7d28202d5fcb8a7f8d5761
[project @ 2007-03-23 19:20:12 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,14 @@
+2007-03-23  John W. Eaton  <jwe@octave.org>
+
+	* examples/make_int.cc (octave_integer::clone): Return type is
+	pointer to octave_base_value, not octave_value.
+	(Fdoit): Rep is reference to octave_base_value, not octave_value.
+
 2007-03-21  Paul Kienzle <pkienzle@users.sf.net>
 
 	* octMakefile.in (all): Print message after successful build.
 
 2007-03-05  John W. Eaton  <jwe@octave.org>
 
 	* configure.in (GLPK_PRE_4_14): Rename from GLPK_PRE_4_15.
 
diff --git a/examples/make_int.cc b/examples/make_int.cc
--- a/examples/make_int.cc
+++ b/examples/make_int.cc
@@ -66,17 +66,17 @@ public:
   octave_integer (int i)
     : octave_base_value (), scalar (i) { }
 
   octave_integer (const octave_integer& s)
     : octave_base_value (), scalar (s.scalar) { }
 
   ~octave_integer (void) { }
 
-  octave_value *clone (void) { return new octave_integer (*this); }
+  octave_base_value *clone (void) { return new octave_integer (*this); }
 
 #if 0
   void *operator new (size_t size);
   void operator delete (void *p, size_t size);
 #endif
 
   idx_vector index_vector (void) const { return idx_vector ((double) scalar); }
 
@@ -318,17 +318,17 @@ DEFUN_DLD (doit, args, ,
   octave_value_list retval;
 
   if (args(0).type_id () == octave_integer::static_type_id ())
     {
       // At this point, we know we have a handle for an octave_integer
       // object, so we can peek at the representation and extract the
       // data.
 
-      const octave_value& rep = args(0).get_rep ();
+      const octave_base_value& rep = args(0).get_rep ();
 
       int my_value = ((const octave_integer&) rep) . integer_value ();
 
       message ("doit", "your lucky number is: %d", my_value);
     }
   else
     gripe_wrong_type_arg ("doit", args(0));
 
