# HG changeset patch
# User Rik <rik@octave.org>
# Date 1479614063 28800
#      Sat Nov 19 19:54:23 2016 -0800
# Node ID ba8c5dbc5cc07b424ebcab75d7366689bc4b4024
# Parent  1c73344fd3488dcd7aba2b3304144676acb1fa87
Change text describing demo plots to reflect new ColorOrder (bug #49288).

* legend.m, plotyy.m: Update text used in %!demo blocks to reflect the actual
colors displayed.

diff --git a/scripts/plot/appearance/legend.m b/scripts/plot/appearance/legend.m
--- a/scripts/plot/appearance/legend.m
+++ b/scripts/plot/appearance/legend.m
@@ -1239,74 +1239,74 @@ endfunction
 %! clf;
 %! plot (rand (3));
 %! title ('legend ("show") without inputs creates default labels');
 %! h = legend ("show");
 
 %!demo
 %! clf;
 %! x = 0:1;
-%! plot (x,x,";I am Blue;", x,2*x, x,3*x,";I am Red;");
+%! plot (x,x,";I am Blue;", x,2*x, x,3*x,";I am yellow;");
 %! h = legend ("location", "northeastoutside");
 %! ## Placing legend inside should return axes to original size
 %! legend (h, "location", "northeast");
-%! title ("Blue and Red keys, with Green missing");
+%! title ("Blue and Yellow keys, with Orange missing");
 
 %!demo
 %! clf;
 %! plot (1:10, 1:10, 1:10, fliplr (1:10));
-%! title ("incline is blue and decline is green");
-%! legend ({"I am blue", "I am green"}, "location", "east");
+%! title ("incline is blue and decline is orange");
+%! legend ({"I am blue", "I am orange"}, "location", "east");
 %! legend hide
 %! legend show
 
 %!demo
 %! clf;
 %! plot (1:10, 1:10, 1:10, fliplr (1:10));
 %! title ("Legend with keys in horizontal orientation");
-%! legend ({"I am blue", "I am green"}, ...
+%! legend ({"I am blue", "I am orange"}, ...
 %!         "location", "east", "orientation", "horizontal");
 %! legend boxoff
 %! legend boxon
 
 %!demo
 %! clf;
 %! plot (1:10, 1:10, 1:10, fliplr (1:10));
 %! title ("Legend with box off");
-%! legend ({"I am blue", "I am green"}, "location", "east");
+%! legend ({"I am blue", "I am orange"}, "location", "east");
 %! legend boxoff
 
 %!demo
 %! clf;
 %! plot (1:10, 1:10, 1:10, fliplr (1:10));
 %! title ("Legend with text to the left of key");
-%! legend ({"I am blue", "I am green"}, "location", "east");
+%! legend ({"I am blue", "I am orange"}, "location", "east");
 %! legend left
 
 %!demo
 %! clf;
 %! plot (1:10, 1:10, 1:10, fliplr (1:10));
 %! title ({"Use properties to place legend text to the left of key", ...
 %!         "Legend text color is magenta"});
-%! h = legend ({"I am blue", "I am green"}, "location", "east");
+%! h = legend ({"I am blue", "I am orange"}, "location", "east");
 %! legend ("right");
 %! set (h, "textposition", "left");
 %! set (h, "textcolor", [1 0 1]);
 
 %!demo
 %! clf;
 %! plot (1:10, 1:10, 1:10, fliplr (1:10));
 %! title ("Legend is hidden");
-%! legend ({"I am blue", "I am green"}, "location", "east");
+%! legend ({"I am blue", "I am orange"}, "location", "east");
 %! legend hide
 
 %!demo
 %! clf;
 %! x = 0:1;
-%! plot (x,x,";I am Blue;", x,2*x,";I am Green;", x,3*x,";I am Red;");
+%! plot (x,x,";I am Blue;", x,2*x,";I am Orange;", x,3*x,";I am Yellow;");
 %! title ({"Labels are embedded in call to plot", ...
 %!         "Legend is hidden and then shown"});
 %! legend boxon
 %! legend hide
 %! legend show
 
 %!demo
 %! clf;
@@ -1457,36 +1457,36 @@ endfunction
 %! legend ("Hello", "World", "interpreter", "foobar");
 
 %!demo
 %! clf;
 %! x = 0:10;
 %! y1 = rand (size (x));
 %! y2 = rand (size (x));
 %! [ax, h1, h2] = plotyy (x, y1, x, y2);
-%! title ("plotyy legend test #1: Blue and Green labels");
-%! legend ([h1, h2], {"Blue", "Green"}, "location", "south");
+%! title ("plotyy legend test #1: Blue and Orange labels");
+%! legend ([h1, h2], {"Blue", "Orange}, "location", "south");
 
 %!demo
 %! clf;
 %! x = 0:10;
 %! y1 = rand (size (x));
 %! y2 = rand (size (x));
 %! [ax, h1, h2] = plotyy (x, y1, x, y2);
-%! title ("plotyy legend test #2: Blue and Green labels");
-%! legend ({"Blue", "Green"}, "location", "south");
+%! title ("plotyy legend test #2: Blue and Orange labels");
+%! legend ({"Blue", "Orange"}, "location", "south");
 
 %!demo
 %! clf;
 %! x = 0:10;
 %! y1 = rand (size (x));
 %! y2 = rand (size (x));
 %! [ax, h1, h2] = plotyy (x, y1, x, y2);
-%! title ("plotyy legend test #3: Blue and Green labels");
-%! legend ("Blue", "Green", "location", "south");
+%! title ("plotyy legend test #3: Blue and Orange labels");
+%! legend ("Blue", "Orange", "location", "south");
 
 %!demo
 %! clf;
 %! plot (1:10, 1:10);
 %! title ("a very long label can sometimes cause problems");
 %! legend ("hello very big world", "location", "northeastoutside");
 
 %!demo  # bug 36408
diff --git a/scripts/plot/draw/plotyy.m b/scripts/plot/draw/plotyy.m
--- a/scripts/plot/draw/plotyy.m
+++ b/scripts/plot/draw/plotyy.m
@@ -278,20 +278,22 @@ endfunction
 %! clf;
 %! x = 0:0.1:2*pi;
 %! y1 = sin (x);
 %! y2 = exp (x - 1);
 %! ax = plotyy (x,y1, x-1,y2, @plot, @semilogy);
 %! xlabel ("X");
 %! ylabel (ax(1), "Axis 1");
 %! ylabel (ax(2), "Axis 2");
+%! lcolor = get (gca, "ColorOrder")(1,:);
+%! rcolor = get (gca, "ColorOrder")(2,:);
 %! text (0.5, 0.5, "Left Axis", ...
-%!       "color", [0 0 1], "horizontalalignment", "center", "parent", ax(1));
+%!       "color", lcolor, "horizontalalignment", "center", "parent", ax(1));
 %! text (4.5, 80, "Right Axis", ...
-%!       "color", [0 0.5 0], "horizontalalignment", "center", "parent", ax(2));
+%!       "color", rcolor, "horizontalalignment", "center", "parent", ax(2));
 %! title ({"plotyy() example"; "left axis uses @plot, right axis uses @semilogy"});
 
 %!demo
 %! clf;
 %! colormap ("default");
 %! x = linspace (-1, 1, 201);
 %! subplot (2,2,1);
 %!  plotyy (x,sin(pi*x), x,10*cos(pi*x));
@@ -310,10 +312,10 @@ endfunction
 %! x = sin (t);
 %! y = 5 * cos (t);
 %! [hax, h1, h2] = plotyy (t, x, t, y);
 %! [~, h3, h4] = plotyy (t+1, x, t+1, y);
 %! set ([h3, h4], "linestyle", "--");
 %! xlabel (hax(1), "xlabel");
 %! title (hax(2), 'Two plotyy graphs on same figure using "hold on"');
 %! ylabel (hax(1), "Left axis is Blue");
-%! ylabel (hax(2), "Right axis is Green");
+%! ylabel (hax(2), "Right axis is Orange");
 
