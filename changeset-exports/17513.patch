# HG changeset patch
# User Rik <rik@octave.org>
# Date 1380412474 25200
#      Sat Sep 28 16:54:34 2013 -0700
# Node ID fedcd3717ebcb5b544c2627ac9d41848a0c91943
# Parent  c001cddbda669dab6022cd86b51a8e1f0859c925
doc: grammarcheck of documentation before 3.8 release.

* build-aux/mk-opts.pl: Use @qcode macro around quoted code options.

* liboctave/numeric/DASPK-opts.in, liboctave/numeric/LSODE-opts.in:
Use @qcode macro around quoted code options.

* libinterp/corefcn/module.mk, liboctave/numeric/module.mk: Option handlers
must also depend on Perl script mk-opts.pl.

* libinterp/corefcn/bitfcns.cc, scripts/help/type.m, scripts/image/imfinfo.m,
scripts/miscellaneous/dir.m, scripts/plot/stem.m, scripts/plot/stem3.m,
scripts/plot/subplot.m, scripts/specfun/expint.m: grammarcheck of documentation
before 3.8 release.

diff --git a/build-aux/mk-opts.pl b/build-aux/mk-opts.pl
--- a/build-aux/mk-opts.pl
+++ b/build-aux/mk-opts.pl
@@ -235,17 +235,17 @@ sub process_data
 When called with no arguments, the names of all available options and\\n\\
 their current values are displayed.\\n\\
 Given one argument, return the value of the corresponding option.\\n\\
 When called with two arguments, \@code{$OPT_FCN_NAME} set the option\\n\\
 \@var{opt} to value \@var{val}.";
     }
 }
 
-#FIXME: What does this routine do?  And can it be simpler to understand?
+## FIXME: What does this routine do?  And can it be simpler to understand?
 sub get_min_match_len_info
 {
   my ($i, $j, $k);
 
   for ($i = 0; $i < $OPT_NUM; $i++)
     {
       for ($j = 0; $j < $MAX_TOKENS; $j++)
         {
@@ -919,17 +919,17 @@ DEFUN ($OPT_FCN_NAME, args, ,
 Options include\\n\\
 \\n\\
 \@table \@code\\n\\
 _END_EMIT_OPTIONS_FUNCTION_HDR_
 # FIXME: Add extra newline above
 
   for (my $i = 0; $i < $OPT_NUM; $i++)
     {
-      print '@item \"', $NAME[$i], '\"\n\\', "\n";
+      print '@item @qcode{\"', $NAME[$i], '\"}\n\\', "\n";
       print $DOC_ITEM[$i] if $DOC_ITEM[$i];
     }
 
   print <<"_END_EMIT_OPTIONS_FUNCTION_BODY_";
 \@end table\\n\\
 \@end deftypefn")
 {
   octave_value_list retval;
diff --git a/libinterp/corefcn/bitfcns.cc b/libinterp/corefcn/bitfcns.cc
--- a/libinterp/corefcn/bitfcns.cc
+++ b/libinterp/corefcn/bitfcns.cc
@@ -652,19 +652,20 @@ valid option.  On IEEE-754 compatible sy
 }
 
 DEFUN (flintmax, args, ,
   "-*- texinfo -*-\n\
 @deftypefn  {Built-in Function} {} flintmax ()\n\
 @deftypefnx {Built-in Function} {} flintmax (\"double\")\n\
 @deftypefnx {Built-in Function} {} flintmax (\"single\")\n\
 Return the largest integer that can be represented consecutively in a\n\
-floating point value.  The default class is @qcode{\"double\"}, but @qcode{\"single\"}\n\
-is a valid option.  On IEEE-754 compatible systems, @code{flintmax} is @w{@math{2^53}}\n\
-for @qcode{\"double\"} and @w{@math{2^24}} for @qcode{\"single\"}.\n\
+floating point value.  The default class is @qcode{\"double\"}, but\n\
+@qcode{\"single\"} is a valid option.  On IEEE-754 compatible systems,\n\
+@code{flintmax} is @w{@math{2^53}} for @qcode{\"double\"} and\n\
+@w{@math{2^24}} for @qcode{\"single\"}.\n\
 @seealso{bitmax, intmax, realmax, realmin}\n\
 @end deftypefn")
 {
   octave_value retval;
   std::string cname = "double";
   int nargin = args.length ();
 
   if (nargin == 1 && args(0).is_string ())
diff --git a/libinterp/corefcn/module.mk b/libinterp/corefcn/module.mk
--- a/libinterp/corefcn/module.mk
+++ b/libinterp/corefcn/module.mk
@@ -23,16 +23,18 @@ OPT_INC = \
   $(top_builddir)/liboctave/numeric/DASSL-opts.h \
   $(top_builddir)/liboctave/numeric/LSODE-opts.h \
   $(top_builddir)/liboctave/numeric/Quad-opts.h
 
 $(OPT_HANDLERS): corefcn/%.cc : $(top_builddir)/liboctave/numeric/%.in
 	$(PERL) $(top_srcdir)/build-aux/mk-opts.pl --opt-handler-fcns $< > $@-t
 	mv $@-t $@
 
+$(OPT_HANDLERS): $(top_srcdir)/build-aux/mk-opts.pl
+
 $(OPT_INC) : %.h : %.in
 	$(MAKE) -C $(top_builddir)/liboctave/numeric $(@F)
 
 JIT_INC = \
   corefcn/jit-util.h \
   corefcn/jit-typeinfo.h \
   corefcn/jit-ir.h \
   corefcn/pt-jit.h
diff --git a/liboctave/numeric/DASPK-opts.in b/liboctave/numeric/DASPK-opts.in
--- a/liboctave/numeric/DASPK-opts.in
+++ b/liboctave/numeric/DASPK-opts.in
@@ -98,17 +98,17 @@ one of two initialization problems:
 
 In either case, initial values for the given components are input, and
 initial guesses for the unknown components must also be provided as
 input.  Set this option to 1 to solve the first problem, or 2 to solve
 the second (the default is 0, so you must provide a set of
 initial conditions that are consistent).
 
 If this option is set to a nonzero value, you must also set the
-@code{\"algebraic variables\"} option to declare which variables in the
+@qcode{\"algebraic variables\"} option to declare which variables in the
 problem are algebraic.
 
   END_DOC_ITEM
   TYPE = "octave_idx_type"
   INIT_VALUE = "0"
   SET_EXPR = "val"
 END_OPTION
 
@@ -134,21 +134,21 @@ initial condition calculation.
 @item MXNIT
 Maximum number of Newton iterations (default is 5).
 
 @item MXNJ
 Maximum number of Jacobian evaluations (default is 6).
 
 @item MXNH
 Maximum number of values of the artificial stepsize parameter to be
-tried if the @code{\"compute consistent initial condition\"} option has
+tried if the @qcode{\"compute consistent initial condition\"} option has
 been set to 1 (default is 5).
 
 Note that the maximum total number of Newton iterations allowed is
-@code{MXNIT*MXNJ*MXNH} if the @code{\"compute consistent initial
+@code{MXNIT*MXNJ*MXNH} if the @qcode{\"compute consistent initial
 condition\"} option has been set to 1 and @code{MXNIT*MXNJ} if it is
 set to 2.
 
 @item LSOFF
 Set to a nonzero value to disable the linesearch algorithm (default is
 0).
 
 @item STPTOL
@@ -189,17 +189,17 @@ about the initial condition calculation 
   INIT_VALUE = "0"
   SET_EXPR = "val"
 END_OPTION
 
 OPTION
   NAME = "exclude algebraic variables from error test"
   DOC_ITEM
 Set to a nonzero value to exclude algebraic variables from the error
-test.  You must also set the @code{\"algebraic variables\"} option to
+test.  You must also set the @qcode{\"algebraic variables\"} option to
 declare which variables in the problem are algebraic (default is 0).
 
   END_DOC_ITEM
   TYPE = "octave_idx_type"
   INIT_VALUE = "0"
   SET_EXPR = "val"
 END_OPTION
 
@@ -207,18 +207,18 @@ OPTION
   NAME = "algebraic variables"
   DOC_ITEM
 A vector of the same length as the state vector.  A nonzero element
 indicates that the corresponding element of the state vector is an
 algebraic variable (i.e., its derivative does not appear explicitly
 in the equation set.
 
 This option is required by the
-@code{compute consistent initial condition\"} and
-@code{\"exclude algebraic variables from error test\"} options.
+@qcode{compute consistent initial condition\"} and
+@qcode{\"exclude algebraic variables from error test\"} options.
 
   END_DOC_ITEM
   TYPE = "Array<octave_idx_type>"
   SET_ARG_TYPE = const $TYPE&
   INIT_BODY
     $OPTVAR.resize (dim_vector (1, 1));
     $OPTVAR(0) = 0;
   END_INIT_BODY
@@ -234,17 +234,17 @@ This option is required by the
       { $OPTVAR = val; reset = true; }
   END_SET_CODE
 END_OPTION
 
 OPTION
   NAME = "enforce inequality constraints"
   DOC_ITEM
 Set to one of the following values to enforce the inequality
-constraints specified by the @code{\"inequality constraint types\"}
+constraints specified by the @qcode{\"inequality constraint types\"}
 option (default is 0).
 
 @enumerate
 @item To have constraint checking only in the initial condition calculation.
 
 @item To enforce constraint checking during the integration.
 
 @item To enforce both options 1 and 2.
@@ -277,17 +277,17 @@ Not constrained.
 @item 1
 Greater than or equal to zero.
 
 @item 2
 Greater than zero.
 @end table
 
 This option only has an effect if the
-@code{\"enforce inequality constraints\"} option is nonzero.
+@qcode{\"enforce inequality constraints\"} option is nonzero.
 
   END_DOC_ITEM
   TYPE = "Array<octave_idx_type>"
   SET_ARG_TYPE = const $TYPE&
   INIT_BODY
     $OPTVAR.resize (dim_vector (1, 1));
     $OPTVAR(0) = 0;
   END_INIT_BODY
diff --git a/liboctave/numeric/LSODE-opts.in b/liboctave/numeric/LSODE-opts.in
--- a/liboctave/numeric/LSODE-opts.in
+++ b/liboctave/numeric/LSODE-opts.in
@@ -69,22 +69,22 @@ END_OPTION
 
 OPTION
   NAME = "integration method"
   DOC_ITEM
 A string specifying the method of integration to use to solve the ODE
 system.  Valid values are
 
 @table @asis
-@item  \"adams\"
-@itemx \"non-stiff\"
+@item  @qcode{\"adams\"}
+@itemx @qcode{\"non-stiff\"}
 No Jacobian used (even if it is available).
 
-@item  \"bdf\"
-@itemx \"stiff\"
+@item  @qcode{\"bdf\"}
+@itemx @qcode{\"stiff\"}
 Use stiff backward differentiation formula (BDF) method.  If a
 function to compute the Jacobian is not supplied, @code{lsode} will
 compute a finite difference approximation of the Jacobian matrix.
 @end table
 
   END_DOC_ITEM
   TYPE = "std::string"
   SET_ARG_TYPE = "const $TYPE&"
diff --git a/liboctave/numeric/module.mk b/liboctave/numeric/module.mk
--- a/liboctave/numeric/module.mk
+++ b/liboctave/numeric/module.mk
@@ -163,21 +163,23 @@ TEMPLATE_SRC += \
   numeric/base-qr.cc \
   numeric/bsxfun-defs.cc \
   numeric/eigs-base.cc \
   numeric/sparse-base-chol.cc \
   numeric/sparse-base-lu.cc \
   numeric/sparse-dmsolve.cc
 
 ## Special rules for sources which must be built before rest of compilation.
-$(OPT_INC) : %.h : %.in $(top_srcdir)/build-aux/mk-opts.pl
+$(OPT_INC) : %.h : %.in
 	@echo making $@ from $<
 	@$(PERL) $(top_srcdir)/build-aux/mk-opts.pl --opt-class-header $< > $@-t
 	mv $@-t $@
 
+$(OPT_INC) : $(top_srcdir)/build-aux/mk-opts.pl
+
 noinst_LTLIBRARIES += numeric/libnumeric.la
 
 numeric_libnumeric_la_SOURCES = $(NUMERIC_SRC)
 numeric_libnumeric_la_CPPFLAGS = \
   $(liboctave_la_CPPFLAGS) \
   $(ARPACK_CPPFLAGS) \
   -I$(srcdir)/cruft/Faddeeva \
   $(FFTW_XCPPFLAGS) \
diff --git a/scripts/help/type.m b/scripts/help/type.m
--- a/scripts/help/type.m
+++ b/scripts/help/type.m
@@ -19,17 +19,17 @@
 ## -*- texinfo -*-
 ## @deftypefn  {Command} {} type @var{name} @dots{}
 ## @deftypefnx {Command} {} type -q @var{name} @dots{}
 ## @deftypefnx {Function File} {text =} type ("@var{name}", @dots{})
 ## Display the contents of @var{name} which may be a file, function (m-file),
 ## variable, operator, or keyword.
 ##
 ## @code{type} normally prepends a header line describing the category
-## of @var{name} such as function or variable;  The @option{-q} option
+## of @var{name} such as function or variable; The @option{-q} option
 ## suppresses this behavior.
 ##
 ## If no output variable is used the contents are displayed on screen.
 ## Otherwise, a cell array of strings is returned, where each element
 ## corresponds to the contents of each requested function.
 ## @end deftypefn
 
 function text = type (varargin)
diff --git a/scripts/image/imfinfo.m b/scripts/image/imfinfo.m
--- a/scripts/image/imfinfo.m
+++ b/scripts/image/imfinfo.m
@@ -103,32 +103,32 @@
 ## @qcode{"jbig2"}, @qcode{"jbig2"}, or @qcode{"undefined"}.
 ##
 ## @item Colormap
 ## Colormap for each image.
 ##
 ## @item Orientation
 ## The orientation of the image with respect to the rows and columns.  Value
 ## is an integer between 1 and 8 as defined in the TIFF 6 specifications, and
-## for @sc{Matlab} compatibility.
+## for @sc{matlab} compatibility.
 ##
 ## @item Software
 ## Name and version of the software or firmware of the camera or image input
 ## device used to generate the image.
 ##
 ## @item Make
 ## The manufacturer of the recording equipment.  This is the manufacture of the
 ## DSC, scanner, video digitizer or other equipment that generated the image.
 ##
 ## @item Model
 ## The model name or model number of the recording equipment as mentioned
 ## on the field @qcode{"Make"}.
 ##
 ## @item DateTime
-## The date and time of image creation as defined by the Exif standard, i.e,
+## The date and time of image creation as defined by the Exif standard, i.e.,
 ## it is the date and time the file was changed.
 ##
 ## @item ImageDescription
 ## The title of the image as defined by the Exif standard.
 ##
 ## @item Artist
 ## Name of the camera owner, photographer or image creator.
 ##
diff --git a/scripts/miscellaneous/dir.m b/scripts/miscellaneous/dir.m
--- a/scripts/miscellaneous/dir.m
+++ b/scripts/miscellaneous/dir.m
@@ -24,24 +24,29 @@
 ##
 ## If @var{directory} is not specified then list the present working directory.
 ##
 ## If a return value is requested, return a structure array with the fields
 ##
 ## @table @asis
 ## @item name
 ## File or directory name. 
+##
 ## @item date
 ## Timestamp of file modification (string value).
+##
 ## @item bytes
 ## File size in bytes.
+##
 ## @item isdir
 ## True if name is a directory. 
+##
 ## @item datenum
 ## Timestamp of file modification as serial date number (double).
+##
 ## @item statinfo
 ## Information structure returned from @code{stat}.
 ## @end table
 ##
 ## If @var{directory} is a filename, rather than a directory, then return
 ## information about the named file.  @var{directory} may be a list of
 ## directories specified either by name or with wildcard characters (like *
 ## and ?) which will be expanded with @code{glob}.
diff --git a/scripts/plot/stem.m b/scripts/plot/stem.m
--- a/scripts/plot/stem.m
+++ b/scripts/plot/stem.m
@@ -52,60 +52,60 @@
 ## plots 10 stems with heights from 2 to 20 in red;
 ##
 ## Optional property/value pairs may be specified to control the appearance
 ## of the plot.
 ##
 ## If the first argument @var{hax} is an axes handle, then plot into this axis,
 ## rather than the current axes returned by @code{gca}.
 ##
-## The optional return value @var{h} is a handle to a "stem series" hggroup.
-## The single hggroup handle has all of the graphical elements comprising the
-## plot as its children; This allows the properties of multiple graphics
-## objects to be changed by modifying just a single property of the
-## "stem series" hggroup.
+## The optional return value @var{h} is a handle to a @nospell{"stem series"}
+## hggroup.  The single hggroup handle has all of the graphical elements
+## comprising the plot as its children; This allows the properties of
+## multiple graphics objects to be changed by modifying just a single
+## property of the @nospell{"stem series"} hggroup.
 ##
 ## For example,
 ##
 ## @example
 ## @group
 ## x = [0:10]';
 ## y = [sin(x), cos(x)]
 ## h = stem (x, y);
 ## set (h(2), "color", "g");
 ## set (h(1), "basevalue", -1)
 ## @end group
 ## @end example
 ##
 ## @noindent
-## changes the color of the second "stem series" and moves the base line
-## of the first.
+## changes the color of the second @nospell{"stem series"} and moves the base
+## line of the first.
 ##
 ## Stem Series Properties
 ##
 ## @table @asis
 ## @item linestyle
 ## The linestyle of the stem.  (Default: @qcode{"-"})
 ##
 ## @item linewidth
 ## The width of the stem.  (Default: 0.5)
 ##
 ## @item color
 ## The color of the stem, and if not separately specified, the marker.
-## (Default: "b" [blue])
+## (Default: @qcode{"b"} [blue])
 ##
 ## @item marker
 ## The marker symbol to use at the top of each stem.  (Default: @qcode{"o"})
 ##
 ## @item markeredgecolor
 ## The edge color of the marker.  (Default: @qcode{"color"} property)
 ##
 ## @item markerfacecolor
-## The color to use for "filling" the marker.  (Default: @qcode{"none"}
-## [unfilled])
+## The color to use for @nospell{"filling"} the marker.  
+## (Default: @qcode{"none"} [unfilled])
 ##
 ## @item markersize
 ## The size of the marker.  (Default: 6)
 ##
 ## @item baseline
 ## The handle of the line object which implements the baseline.  Use @code{set}
 ## with the returned handle to change graphic properties of the baseline.
 ##
diff --git a/scripts/plot/stem3.m b/scripts/plot/stem3.m
--- a/scripts/plot/stem3.m
+++ b/scripts/plot/stem3.m
@@ -34,19 +34,20 @@
 ## present the markers at the top of the stems will be filled in.
 ##
 ## Optional property/value pairs may be specified to control the appearance
 ## of the plot.
 ##
 ## If the first argument @var{hax} is an axes handle, then plot into this axis,
 ## rather than the current axes returned by @code{gca}.
 ##
-## The optional return value @var{h} is a handle to the "stem series" hggroup
-## containing the line and marker objects used for the plot.
-## @xref{XREFstem,,stem}, for a description of the "stem series" object.
+## The optional return value @var{h} is a handle to the @nospell{"stem series"}
+## hggroup containing the line and marker objects used for the plot.
+## @xref{XREFstem,,stem}, for a description of the @nospell{"stem series"}
+## object.
 ##
 ## Example:
 ##
 ## @example
 ## @group
 ## theta = 0:0.2:6;
 ## stem3 (cos (theta), sin (theta), theta);
 ## @end group
diff --git a/scripts/plot/subplot.m b/scripts/plot/subplot.m
--- a/scripts/plot/subplot.m
+++ b/scripts/plot/subplot.m
@@ -24,17 +24,17 @@
 ## @deftypefnx {Function File} {} subplot (@dots{}, "replace")
 ## @deftypefnx {Function File} {} subplot (@dots{}, "position", @var{pos})
 ## @deftypefnx {Function File} {} subplot (@dots{}, @var{prop}, @var{val}, @dots{})
 ## @deftypefnx {Function File} {@var{hax} =} subplot (@dots{})
 ## Set up a plot grid with @var{rows} by @var{cols} subwindows and set the
 ## current axes for plotting (@code{gca}) to the location given by @var{index}.
 ##
 ## If only one numeric argument is supplied, then it must be a three digit
-## value specifying the the number of rows in in digit 1, the number of
+## value specifying the number of rows in digit 1, the number of
 ## columns in digit 2, and the plot index in digit 3.
 ##
 ## The plot index runs row-wise; First, all columns in a row are numbered
 ## and then the next row is filled.
 ##
 ## For example, a plot with 2x3 grid will have plot indices running as follows:
 ## @tex
 ## \vskip 10pt
diff --git a/scripts/specfun/expint.m b/scripts/specfun/expint.m
--- a/scripts/specfun/expint.m
+++ b/scripts/specfun/expint.m
@@ -32,18 +32,18 @@
 ## @group
 ##            infinity
 ##           /
 ## E_1 (x) = | exp (-t)/t dt
 ##           /
 ##          x
 ## @end group
 ## @end example
+##
 ## @end ifnottex
-##
 ## Note: For compatibility, this functions uses the @sc{matlab} definition
 ## of the exponential integral.  Most other sources refer to this particular
 ## value as @math{E_1 (x)}, and the exponential integral is
 ## @tex
 ## $$
 ## {\rm Ei} (x) = - \int_{-x}^\infty {e^{-t} \over t} dt.
 ## $$
 ## @end tex
@@ -53,18 +53,18 @@
 ## @group
 ##             infinity
 ##            /
 ## Ei (x) = - | exp (-t)/t dt
 ##            /
 ##          -x
 ## @end group
 ## @end example
+##
 ## @end ifnottex
-##
 ## The two definititions are related, for positive real values of @var{x}, by
 ## @tex
 ## $
 ## E_1 (-x) = -{\rm Ei} (x) - i\pi.
 ## $
 ## @end tex
 ## @ifnottex
 ## @w{@code{E_1 (-x) = -Ei (x) - i*pi}}.
