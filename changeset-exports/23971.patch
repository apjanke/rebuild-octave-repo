# HG changeset patch
# User Marco Caliari <marco.caliari@univr.it>
# Date 1504036843 14400
#      Tue Aug 29 16:00:43 2017 -0400
# Node ID 6cc3aafbdc41c7f2ba444110b9b23ebfd950742f
# Parent  37f3c4416f2e0c112d6cc90f64229c864fb3febb
improve accuracy of deconv for inputs of very different magnitude (bug #51221)

* deconv.m: Compute r from the second output argument of filter.

diff --git a/scripts/polynomial/deconv.m b/scripts/polynomial/deconv.m
--- a/scripts/polynomial/deconv.m
+++ b/scripts/polynomial/deconv.m
@@ -52,44 +52,36 @@ function [b, r] = deconv (y, a)
   la = length (a);
   ly = length (y);
 
   lb = ly - la + 1;
 
   if (ly > la)
     x = zeros (size (y) - size (a) + 1);
     x(1) = 1;
-    b = filter (y, a, x);
+    [b, r] = filter (y, a, x);
+    r *= a(1);
   elseif (ly == la)
-    b = filter (y, a, 1);
+    [b, r] = filter (y, a, 1);
+    r *= a(1);
   else
     b = 0;
+    r = y;
   endif
 
   if (isargout (2))
-    lc = la + length (b) - 1;
-    if (ly == lc)
-      r = y - conv (a, b);
-    else
-      ## Respect the orientation of Y.
-      if (rows (y) <= columns (y))
-        r = [(zeros (1, lc - ly)), y] - conv (a, b);
-      else
-        r = [(zeros (lc - ly, 1)); y] - conv (a, b);
-      endif
-      if (ly < la)
-        ## Trim the remainder to be the length of Y.
-        r = r(end-(length(y)-1):end);
-      endif
+    if (ly >= la)
+      r = [zeros(ly - la + 1, 1); r(1:la - 1)];
+      ## Respect the orientation of Y
+      r = reshape (r, size (y));
     endif
   endif
 
 endfunction
 
-
 %!test
 %! [b, r] = deconv ([3, 6, 9, 9], [1, 2, 3]);
 %! assert (b, [3, 0]);
 %! assert (r, [0, 0, 0, 9]);
 
 %!test
 %! [b, r] = deconv ([3, 6], [1, 2, 3]);
 %! assert (b, 0);
@@ -112,8 +104,32 @@ endfunction
 
 %!assert (deconv ((1:3)',[1, 1]), [1; 1])
 
 ## Test input validation
 %!error deconv (1)
 %!error deconv (1,2,3)
 %!error <Y .* must be vector> deconv ([3, 6], [1, 2; 3, 4])
 %!error <A must be vector> deconv ([3, 6], [1, 2; 3, 4])
+
+%!test
+%! y = (10:-1:1);
+%! a = (4:-1:1);
+%! [b, r] = deconv (y, a);
+%! assert (conv (a, b) + r, y, eps)
+
+%!test <51221>
+%! a = [1.92306958582241e+15, 3.20449986572221e+24, 1.34271290136344e+32, ...
+%!     2.32739765751038e+38];
+%! b = [7.33727670161595e+27, 1.05919311870816e+36, 4.56169848520627e+42];
+%! [div, rem] = deconv (a, b);
+%! assert (rem, [0, 0, -2.89443678763879e+32  -1.58695290534499e+39], -10*eps)
+%! a(2) = 3.204499865722215e+24;
+%! [div, rem] = deconv (a, b);
+%! assert (rem, [0, 0, -2.89443678763879e+32  -1.58695290534499e+39], -10*eps)
+
+%!test
+%! [b, r] = deconv ([1, 1], 1);
+%! assert (r, [0, 0])
+
+%!test
+%! [b, r] = deconv ([1; 1], 1);
+%! assert (r, [0; 0])
