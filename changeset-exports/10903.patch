# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1282414544 25200
#      Sat Aug 21 11:15:44 2010 -0700
# Node ID 9f0f1a89c7048b6731f5cd258c78f82fedabb552
# Parent  9a64e02e2aad2a08d39794b8539ed7b987b11367
Add new %!tests for negative integer arguments to gamma, lgamma.

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2010-08-17  Rik <octave@nomad.inbox5.com>
+
+	* mappers.cc (gamma,lgamma): Add %!tests for negative integer
+	input arguments.
+
 2010-08-17  Rik <octave@nomad.inbox5.com>
 
 	* bitfcns.cc (bitmax): Add additional calling argument, class, and 
 	additional return value for bitmax("single").
 
 2010-08-17  Rik <octave@nomad.inbox5.com>
 
 	* bitfcns.cc (sizemax): Improve documentation string.
diff --git a/src/mappers.cc b/src/mappers.cc
--- a/src/mappers.cc
+++ b/src/mappers.cc
@@ -911,16 +911,22 @@ gamma (z) = | t^(z-1) exp (-t) dt.\n\
 %! a = single(-1i*sqrt(-1/(6.4187*6.4187)));
 %! assert (gamma(a), gamma(real(a)));
 
 %!test
 %! x = single([.5, 1, 1.5, 2, 3, 4, 5]);
 %! v = single([sqrt(pi), 1, .5*sqrt(pi), 1, 2, 6, 24]);
 %! assert(gamma(x), v, sqrt(eps('single')))
 
+%!test
+%! x = [-1, 0, 1, Inf];
+%! v = [NaN, Inf, 1, Inf];
+%! assert (gamma(x), v);
+%! assert (gamma(single (x)), single (v));
+
 %!error gamma();
 %!error gamma(1,2);
 
 */
 
 DEFUN (imag, args, ,
     "-*- texinfo -*-\n\
 @deftypefn {Mapping Function} {} imag (@var{z})\n\
@@ -1289,16 +1295,22 @@ Return the natural logarithm of the gamm
 %! a = single(-1i*sqrt(-1/(6.4187*6.4187)));
 %! assert (lgamma(a), lgamma(real(a)));
 
 %!test
 %! x = single([.5, 1, 1.5, 2, 3, 4, 5]);
 %! v = single([sqrt(pi), 1, .5*sqrt(pi), 1, 2, 6, 24]);
 %! assert(lgamma(x), log(v), sqrt(eps ('single')))
 
+%!test
+%! x = [-1, 0, 1, Inf];
+%! v = [Inf, Inf, 0, Inf];
+%! assert (lgamma(x), v);
+%! assert (lgamma(single (x)), single(v));
+
 %!error lgamma();
 %!error lgamma(1,2);
 
 */
 
 DEFUN (log, args, ,
     "-*- texinfo -*-\n\
 @deftypefn {Mapping Function} {} log (@var{x})\n\
