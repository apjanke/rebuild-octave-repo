# HG changeset patch
# User Jacob Dawid <jacob.dawid@googlemail.com>
# Date 1302206474 -7200
#      Thu Apr 07 22:01:14 2011 +0200
# Node ID c6e7dc1c292598ff2cf3fae7e7fa5feff519ec86
# Parent  3b089411a59d4628caefae559cc5140b31dd4e44
Added variable list view and status bar to octave terminal.

diff --git a/gui//src/MainWindow.cpp b/gui//src/MainWindow.cpp
--- a/gui//src/MainWindow.cpp
+++ b/gui//src/MainWindow.cpp
@@ -21,43 +21,43 @@
 #include <QAction>
 #include <QtWebKit/QWebView>
 
 #include "MainWindow.h"
 #include "TerminalMdiSubWindow.h"
 
 MainWindow::MainWindow(QWidget *parent)
     : QMainWindow(parent) {
-    m_mdiArea = new QMdiArea();
-    setWindowTitle("Quint");
-    setCentralWidget(m_mdiArea);
-
     constructWindow();
 
     loadWebPage("Online Manual", "http://www.gnu.org/software/octave/doc/interpreter/");
-    //addTerminalWindow();
-    m_mdiArea->setViewMode(QMdiArea::SubWindowView);
 }
 
 MainWindow::~MainWindow() {
 
 }
 
 void MainWindow::addTerminalWindow() {
-    TerminalMdiSubWindow *terminal = new TerminalMdiSubWindow;
+    TerminalMdiSubWindow *terminal = new TerminalMdiSubWindow(this);
     m_mdiArea->addSubWindow(terminal);
     terminal->show();
 }
 
 void MainWindow::loadWebPage(QString title, QString url) {
 
     QWebView *webView = new QWebView();
     webView->setWindowTitle(title);
     webView->load(QUrl(url));
     m_mdiArea->addSubWindow(webView);
 }
 
 void MainWindow::constructWindow() {
+    m_mdiArea = new QMdiArea();
+    setWindowTitle("Quint");
+    setCentralWidget(m_mdiArea);
+
     QMenu *viewsMenu = menuBar()->addMenu("Views");
     QAction *addOctaveTerminalAction = viewsMenu->addAction("Add Octave Terminal");
 
+    m_mdiArea->setViewMode(QMdiArea::SubWindowView);
+
     connect(addOctaveTerminalAction, SIGNAL(triggered()), this, SLOT(addTerminalWindow()));
 }
diff --git a/gui//src/QTerminalWidget.cpp b/gui//src/QTerminalWidget.cpp
--- a/gui//src/QTerminalWidget.cpp
+++ b/gui//src/QTerminalWidget.cpp
@@ -43,17 +43,17 @@ Session *TermWidgetImpl::createSession()
     session->setTitle(Session::NameRole, "QTerminalWidget");
     session->setProgram("/bin/bash");
     session->setArguments(QStringList());
     session->setAutoClose(true);
     session->setCodec(QTextCodec::codecForName("UTF-8"));
     session->setFlowControlEnabled(true);
     session->setHistoryType(HistoryTypeBuffer(1000));
     session->setDarkBackground(true);
-    session->setKeyBindings("");	    
+    session->setKeyBindings("");
     return session;
 }
 
 TerminalDisplay *TermWidgetImpl::createTerminalDisplay(Session *session, QWidget* parent)
 {
     TerminalDisplay* display = new TerminalDisplay(parent);
     display->setBellMode(TerminalDisplay::NotifyBell);
     display->setTerminalSizeHint(true);
@@ -92,18 +92,18 @@ void QTerminalWidget::initialize()
 {    
     m_impl->m_terminalDisplay->setSize(80, 40);
     
     QFont font = QApplication::font(); 
     font.setFamily("Monospace");
     font.setPointSize(10);
     font.setStyleHint(QFont::TypeWriter);
     setTerminalFont(font);
-    setScrollBarPosition(NoScrollBar);    
-        
+    setScrollBarPosition(NoScrollBar);
+
     m_impl->m_session->addView(m_impl->m_terminalDisplay);
     
     connect(m_impl->m_session, SIGNAL(finished()), this, SLOT(sessionFinished()));
 }
 
 QTerminalWidget::~QTerminalWidget()
 {
     emit destroyed();
@@ -111,17 +111,17 @@ QTerminalWidget::~QTerminalWidget()
 
 void QTerminalWidget::setTerminalFont(QFont &font)
 {
     if (!m_impl->m_terminalDisplay)
 	return;
     m_impl->m_terminalDisplay->setVTFont(font);
 }
 
-void QTerminalWidget::setShellProgram(QString &progname)
+void QTerminalWidget::setShellProgram(QString progname)
 {
     if (!m_impl->m_session)
 	return;
     m_impl->m_session->setProgram(progname);	
 }
 
 void QTerminalWidget::setArgs(QStringList &args)
 {
@@ -177,18 +177,17 @@ void QTerminalWidget::setScrollBarPositi
 void QTerminalWidget::sendText(QString &text)
 {
     m_impl->m_session->sendText(text); 
 }
 
 void QTerminalWidget::resizeEvent(QResizeEvent*)
 {
     m_impl->m_terminalDisplay->resize(this->size());
+    m_impl->m_terminalDisplay->update();
 }
 
-
-
 void QTerminalWidget::sessionFinished()
 {
     emit finished();
 }
 
 
diff --git a/gui//src/QTerminalWidget.h b/gui//src/QTerminalWidget.h
--- a/gui//src/QTerminalWidget.h
+++ b/gui//src/QTerminalWidget.h
@@ -55,17 +55,17 @@ public:
     ~QTerminalWidget();
 
     void startShellProgram();
 
     /** Default is application font with family Monospace, size 10. */
     void setTerminalFont(QFont &font); 
     
     /**	Shell program, default is /bin/bash. */
-    void setShellProgram(QString &progname);
+    void setShellProgram(QString progname);
     
     /** Shell program args, default is none. */
     void setArgs(QStringList &args);
     
     /** Text codec, default is UTF-8. */
     void setTextCodec(QTextCodec *codec);
 
     /** Color scheme, default is white on black. */
diff --git a/gui//src/TerminalMdiSubWindow.cpp b/gui//src/TerminalMdiSubWindow.cpp
--- a/gui//src/TerminalMdiSubWindow.cpp
+++ b/gui//src/TerminalMdiSubWindow.cpp
@@ -1,23 +1,40 @@
 #include "TerminalMdiSubWindow.h"
+#include <QHBoxLayout>
+#include <QVBoxLayout>
 
-TerminalMdiSubWindow::TerminalMdiSubWindow()
-    : QMdiSubWindow(),
+TerminalMdiSubWindow::TerminalMdiSubWindow(QWidget *parent)
+    : QMdiSubWindow(parent),
       m_terminalWidget(0) {
-    setWindowTitle("Terminal Session");
-    resize(800, 400);
-    launchTerminal();
+    constructWindow();
 }
 
-void TerminalMdiSubWindow::launchTerminal() {
-    delete m_terminalWidget;
-    m_terminalWidget = new QTerminalWidget(0, this);
-    m_terminalWidget->setScrollBarPosition(QTerminalWidget::ScrollBarRight);
-    setWidget(m_terminalWidget);
+void TerminalMdiSubWindow::constructWindow() {
+    setWindowTitle("Octave Session");
+    resize(800, 400);
+    setWidget(new QWidget(this));
+
+    QVBoxLayout *vBoxLayout = new QVBoxLayout();
+
+        QWidget *hWidget = new QWidget();
+        QHBoxLayout *hBoxLayout = new QHBoxLayout();
 
-    QString programName = "octave";
-    m_terminalWidget->setShellProgram(programName);
-    m_terminalWidget->startShellProgram();
-    setFocus();
+        m_terminalWidget = new QTerminalWidget(0, hWidget);
+        m_terminalWidget->setScrollBarPosition(QTerminalWidget::ScrollBarRight);
+        m_terminalWidget->setShellProgram("octave");
+        m_terminalWidget->startShellProgram();
+        m_terminalWidget->setSizePolicy(QSizePolicy::Expanding, QSizePolicy::Expanding);
+        m_variableView = new QTreeView(hWidget);
+        m_variableView->setMaximumWidth(200);
 
-    connect(m_terminalWidget, SIGNAL(finished()), this, SLOT(launchTerminal()));
+        hBoxLayout->addWidget(m_terminalWidget);
+        hBoxLayout->addWidget(m_variableView);
+        hWidget->setLayout(hBoxLayout);
+
+        m_statusBar = new QStatusBar();
+
+    vBoxLayout->addWidget(hWidget);
+    vBoxLayout->addWidget(m_statusBar);
+    widget()->setLayout(vBoxLayout);
+
+    m_statusBar->showMessage("Ready.");
 }
diff --git a/gui//src/TerminalMdiSubWindow.h b/gui//src/TerminalMdiSubWindow.h
--- a/gui//src/TerminalMdiSubWindow.h
+++ b/gui//src/TerminalMdiSubWindow.h
@@ -1,19 +1,23 @@
 #ifndef TERMINALMDISUBWINDOW_H
 #define TERMINALMDISUBWINDOW_H
 
 #include <QMdiSubWindow>
+#include <QTreeView>
+#include <QStatusBar>
 #include "QTerminalWidget.h"
 
 class TerminalMdiSubWindow : public QMdiSubWindow {
     Q_OBJECT
 public:
-    TerminalMdiSubWindow();
+    TerminalMdiSubWindow(QWidget *parent = 0);
 
 private slots:
-    void launchTerminal();
 
 private:
+    void constructWindow();
     QTerminalWidget *m_terminalWidget;
+    QTreeView *m_variableView;
+    QStatusBar *m_statusBar;
 };
 
 #endif // TERMINALMDISUBWINDOW_H
