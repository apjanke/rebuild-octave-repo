# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1332650137 25200
#      Sat Mar 24 21:35:37 2012 -0700
# Branch stable
# Node ID b472596cd7b9b39df412203129ad5bece174247b
# Parent  3959f3f81e334df0d8f086403928ed6d5ba1fb89
Stop segfault when regular expression contains malformed lookbehind atom (bug #35961)

* liboctave/regexp.cc (compile_internal): Change '<=' to '<' in while loop condition
to stop running beyond length of pattern.

diff --git a/liboctave/regexp.cc b/liboctave/regexp.cc
--- a/liboctave/regexp.cc
+++ b/liboctave/regexp.cc
@@ -143,17 +143,17 @@ regexp::compile_internal (void)
           // as PCRE can not yet handle arbitrary length lookahead
           // operators. Use the string length as the maximum length to
           // avoid issues.
 
           int brackets = 1;
           size_t tmp_pos1 = new_pos + 2;
           size_t tmp_pos2 = tmp_pos1;
 
-          while (tmp_pos1 <= pattern.length () && brackets > 0)
+          while (tmp_pos1 < pattern.length () && brackets > 0)
             {
               char ch = pattern.at (tmp_pos1);
 
               if (ch == '(')
                 brackets++;
               else if (ch == ')')
                 {
                   if (brackets > 1)
