# HG changeset patch
# User Rik <rik@octave.org>
# Date 1401038945 25200
#      Sun May 25 10:29:05 2014 -0700
# Node ID 888f8ce79bbee984265d9503d68132038953c932
# Parent  70ea5a2856fe0ca6780f4b70f976790cf6a719ff
# Parent  bd1fd4ed3d67fb3bfd60184071a96ac5eb5f848d
maint: Periodic merge gui-release -> default.

diff --git a/CITATION b/CITATION
--- a/CITATION
+++ b/CITATION
@@ -1,20 +1,21 @@
 To cite GNU Octave in publications use:
 
-  John W. Eaton, David Bateman, and Søren Hauberg (2009).  GNU Octave version
-  3.0.1 manual: a high-level interactive language for numerical computations.
+  John W. Eaton, David Bateman, Søren Hauberg, Rik Wehbring (2014).
+  GNU Octave version 3.8.1 manual: a high-level interactive language for
+  numerical computations.
   CreateSpace Independent Publishing Platform.  ISBN 1441413006,
   URL http://www.gnu.org/software/octave/doc/interpreter/
 
 A BibTeX entry for LaTeX users is:
 
   @book{,
-    author    = {John W. Eaton and David Bateman and S\oren Hauberg},
-    title     = {{GNU Octave} version 3.0.1 manual: a high-level interactive language for numerical computations},
+    author    = {John W. Eaton, David Bateman, S\oren Hauberg, and Rik Wehbring},
+    title     = {{GNU Octave} version 3.8.1 manual: a high-level interactive language for numerical computations},
     publisher = {CreateSpace Independent Publishing Platform},
-    year      = {2009},
+    year      = {2014},
     note      = {{ISBN} 1441413006},
     url       = {http://www.gnu.org/software/octave/doc/interpreter},
   }
 
 We have invested a lot of time and effort in creating GNU Octave, please cite it
 when using it.  See also `citation pkgname' for citing Octave packages.
diff --git a/etc/CHECKLIST b/etc/CHECKLIST
--- a/etc/CHECKLIST
+++ b/etc/CHECKLIST
@@ -1,12 +1,14 @@
 Things to do before making a release:
 
   * Update the version number and release date in configure.ac.
 
+  * Update version number and release year in CITATION.
+
   * Update the NEWS file.
 
   * Update the NEWS-<VERSION>.html, index.in, news.in, and download.in
     files for the web site.
 
   * Copy tarballs to ftp.gnu.org.
 
   * Post a release announcement to the help@octave.org and
diff --git a/libgui/src/m-editor/file-editor-tab.cc b/libgui/src/m-editor/file-editor-tab.cc
--- a/libgui/src/m-editor/file-editor-tab.cc
+++ b/libgui/src/m-editor/file-editor-tab.cc
@@ -61,16 +61,17 @@ along with Octave; see the file COPYING.
 
 // Make parent null for the file editor tab so that warning
 // WindowModal messages don't affect grandparents.
 file_editor_tab::file_editor_tab (const QString& directory_arg)
 {
   QString directory = directory_arg;
   _lexer_apis = 0;
   _app_closing = false;
+  _is_octave_file = true;
 
   // Make sure there is a slash at the end of the directory name
   // for identification when saved later.
   if (directory.count () && directory.at (directory.count () - 1) != '/')
     directory.append ("/");
 
   _file_name = directory;
   _file_system_watcher.setObjectName ("_qt_autotest_force_engine_poller");
@@ -79,17 +80,17 @@ file_editor_tab::file_editor_tab (const 
   // Connect signal for command execution to a slot of this tab which in turn
   // emits a signal connected to the main window.
   // Direct connection is not possible because tab's parent is null.
   connect (_edit_area,
            SIGNAL (execute_command_in_terminal_signal (const QString&)),
            this,
            SLOT (execute_command_in_terminal (const QString&)));
 
-  connect (_edit_area, 
+  connect (_edit_area,
            SIGNAL (cursorPositionChanged (int, int)),
            this,
            SLOT (handle_cursor_moved (int,int)));
 
   connect (_edit_area, SIGNAL (create_context_menu_signal (QMenu*)),
            this, SLOT (create_context_menu (QMenu*)));
 
   // create statusbar for row/col indicator
@@ -210,19 +211,19 @@ file_editor_tab::set_file_name (const QS
   if (!fileName.isEmpty ())
     _file_system_watcher.addPath (fileName);
   _file_name = fileName;
 
   // update lexer after _file_name change
   update_lexer ();
 
   // update the file editor with current editing directory
-  emit editor_state_changed (_copy_available, _file_name);
+  emit editor_state_changed (_copy_available, _file_name, _is_octave_file);
+
   // add the new file to the mru list
-
   emit mru_add_file (_file_name);
 }
 
 // valid_file_name (file): checks whether "file" names a file
 // by default, "file" is empty, then _file_name is checked
 bool
 file_editor_tab::valid_file_name (const QString& file)
 {
@@ -265,24 +266,27 @@ file_editor_tab::update_lexer ()
 {
   if (_lexer_apis)
     _lexer_apis->cancelPreparation ();  // stop preparing if apis exists
 
   QsciLexer *lexer = _edit_area->lexer ();
   delete lexer;
   lexer = 0;
 
+  _is_octave_file = false;
+
   if (_file_name.endsWith (".m")
       || _file_name.endsWith ("octaverc"))
     {
 #if defined (HAVE_LEXER_OCTAVE)
       lexer = new QsciLexerOctave ();
 #elif defined (HAVE_LEXER_MATLAB)
       lexer = new QsciLexerMatlab ();
 #endif
+      _is_octave_file = true;
     }
 
   if (! lexer)
     {
       if (_file_name.endsWith (".c")
           || _file_name.endsWith (".cc")
           || _file_name.endsWith (".cpp")
           || _file_name.endsWith (".cxx")
@@ -306,18 +310,20 @@ file_editor_tab::update_lexer ()
         {
           lexer = new QsciLexerDiff ();
         }
       else if (! valid_file_name ())
         {
           // new, no yet named file: let us assume it is octave
 #if defined (HAVE_LEXER_OCTAVE)
           lexer = new QsciLexerOctave ();
+          _is_octave_file = true;
 #elif defined (HAVE_LEXER_MATLAB)
           lexer = new QsciLexerMatlab ();
+          _is_octave_file = true;
 #else
           lexer = new QsciLexerBash ();
 #endif
         }
       else
         {
           // other or no extension
           lexer = new QsciLexerBash ();
@@ -970,17 +976,18 @@ file_editor_tab::update_window_title (bo
   else
     emit file_name_changed (title, tooltip);
 }
 
 void
 file_editor_tab::handle_copy_available (bool enableCopy)
 {
   _copy_available = enableCopy;
-  emit editor_state_changed (_copy_available, QDir::cleanPath (_file_name));
+  emit editor_state_changed (_copy_available, QDir::cleanPath (_file_name),
+                             _is_octave_file);
 }
 
 // show_dialog: shows a modal or non modal dialog depeding on the closing
 //              of the app
 void
 file_editor_tab::show_dialog (QDialog *dlg)
 {
   dlg->setAttribute (Qt::WA_DeleteOnClose);
@@ -1505,17 +1512,18 @@ file_editor_tab::change_editor_state (co
     }
 
   if (_find_dialog && _find_dialog_is_visible)
     {
       _find_dialog->setGeometry (_find_dialog_geometry);
       _find_dialog->show ();
     }
 
-  emit editor_state_changed (_copy_available, QDir::cleanPath (_file_name));
+  emit editor_state_changed (_copy_available, QDir::cleanPath (_file_name),
+                             _is_octave_file);
 }
 
 void
 file_editor_tab::file_name_query (const QWidget *ID)
 {
   // A zero (null pointer) means that all file editor tabs
   // should respond, otherwise just the desired file editor tab.
   if (ID != this && ID != 0)
diff --git a/libgui/src/m-editor/file-editor-tab.h b/libgui/src/m-editor/file-editor-tab.h
--- a/libgui/src/m-editor/file-editor-tab.h
+++ b/libgui/src/m-editor/file-editor-tab.h
@@ -118,17 +118,18 @@ public slots:
 
   void execute_command_in_terminal (const QString& command);
   void edit_area_has_focus (bool foucs);
   void create_context_menu (QMenu *);
 
 signals:
 
   void file_name_changed (const QString& fileName, const QString& toolTip);
-  void editor_state_changed (bool copy_available, const QString& fileName);
+  void editor_state_changed (bool copy_available, const QString& fileName,
+                             bool is_octave_file);
   void tab_remove_request ();
   void add_filename_to_list (const QString&, QWidget *);
   void mru_add_file (const QString& file_name);
   void editor_check_conflict_save (const QString& saveFileName,
                                    bool remove_on_success);
   void run_file_signal (const QFileInfo& info);
   void execute_command_in_terminal_signal (const QString&);
   void set_global_edit_shortcuts_signal (bool);
@@ -212,16 +213,17 @@ private:
   QLabel *_col_indicator;
 
   QString _file_name;
   QString _file_name_short;
 
   bool _long_title;
   bool _copy_available;
   bool _app_closing;
+  bool _is_octave_file;
 
   QFileSystemWatcher _file_system_watcher;
 
   find_dialog *_find_dialog;
   bool _find_dialog_is_visible;
   QRect _find_dialog_geometry;
 
   QsciAPIs *_lexer_apis;
diff --git a/libgui/src/m-editor/file-editor.cc b/libgui/src/m-editor/file-editor.cc
--- a/libgui/src/m-editor/file-editor.cc
+++ b/libgui/src/m-editor/file-editor.cc
@@ -960,16 +960,18 @@ void file_editor::create_context_menu (Q
   menu->addAction (_undo_action);
   menu->addAction (_redo_action);
   menu->addSeparator ();
   menu->addAction (_cut_action);
   menu->addAction (_copy_action);
   menu->addAction (_paste_action);
   menu->addSeparator ();
   menu->addAction (_selectall_action);
+  menu->addSeparator ();
+  menu->addAction (_run_selection_action);
 }
 
 void
 file_editor::zoom_in (bool)
 {
   emit fetab_zoom_in (_tab_widget->currentWidget ());
 }
 
@@ -989,25 +991,27 @@ void
 file_editor::edit_status_update (bool undo, bool redo)
 {
   _undo_action->setEnabled (undo);
   _redo_action->setEnabled (redo);
 }
 
 void
 file_editor::handle_editor_state_changed (bool copy_available,
-                                          const QString& file_name)
+                                          const QString& file_name,
+                                          bool is_octave_file)
 {
   // In case there is some scenario where traffic could be coming from
   // all the file editor tabs, just process info from the current active tab.
   if (sender () == _tab_widget->currentWidget ())
     {
       _copy_action->setEnabled (copy_available);
       _cut_action->setEnabled (copy_available);
-      _run_selection_action->setEnabled (copy_available);
+      _run_selection_action->setEnabled (copy_available && is_octave_file);
+      _run_action->setEnabled (is_octave_file);
 
       if (!file_name.isEmpty ())
         {
           ced = QDir::cleanPath (file_name);
           int lastslash = ced.lastIndexOf ('/');
 
           // Test against > 0 because if somehow the directory is "/" the
           // slash should be retained.  Otherwise, last slash is removed.
@@ -1405,18 +1409,18 @@ file_editor::add_file_editor_tab (file_e
   connect (f->qsci_edit_area (), SIGNAL (status_update (bool, bool)),
            this, SLOT (edit_status_update (bool, bool)));
 
   // Signals from the file editor_tab
   connect (f, SIGNAL (file_name_changed (const QString&, const QString&)),
            this, SLOT (handle_file_name_changed (const QString&,
                                                  const QString&)));
 
-  connect (f, SIGNAL (editor_state_changed (bool, const QString&)),
-           this, SLOT (handle_editor_state_changed (bool, const QString&)));
+  connect (f, SIGNAL (editor_state_changed (bool, const QString&, bool)),
+           this, SLOT (handle_editor_state_changed (bool, const QString&, bool)));
 
   connect (f, SIGNAL (tab_remove_request ()),
            this, SLOT (handle_tab_remove_request ()));
 
   connect (f, SIGNAL (add_filename_to_list (const QString&, QWidget*)),
            this, SLOT (handle_add_filename_to_list (const QString&, QWidget*)));
 
   connect (f, SIGNAL (editor_check_conflict_save (const QString&, bool)),
diff --git a/libgui/src/m-editor/file-editor.h b/libgui/src/m-editor/file-editor.h
--- a/libgui/src/m-editor/file-editor.h
+++ b/libgui/src/m-editor/file-editor.h
@@ -173,17 +173,18 @@ public slots:
   void request_completion (bool);
 
   void handle_file_name_changed (const QString& fileName,
                                  const QString& toolTip);
   void handle_tab_close_request (int index);
   void handle_tab_remove_request (void);
   void handle_add_filename_to_list (const QString& fileName, QWidget *ID);
   void active_tab_changed (int index);
-  void handle_editor_state_changed (bool enableCopy, const QString& fileName);
+  void handle_editor_state_changed (bool enableCopy, const QString& fileName,
+                                    bool is_octave_file);
   void handle_mru_add_file (const QString& file_name);
   void check_conflict_save (const QString& fileName, bool remove_on_success);
 
   void handle_insert_debugger_pointer_request (const QString& file, int line);
   void handle_delete_debugger_pointer_request (const QString& file, int line);
   void handle_update_breakpoint_marker_request (bool insert,
                                                 const QString& file, int line);
 
diff --git a/libgui/src/m-editor/octave-qscintilla.cc b/libgui/src/m-editor/octave-qscintilla.cc
--- a/libgui/src/m-editor/octave-qscintilla.cc
+++ b/libgui/src/m-editor/octave-qscintilla.cc
@@ -195,20 +195,16 @@ octave_qscintilla::contextMenuEvent (QCo
           context_menu->addAction (tr ("Help on") + " " + _word_at_cursor,
                                    this, SLOT (contextmenu_help (bool)));
           context_menu->addAction (tr ("Documentation on")
                                    + " " + _word_at_cursor,
                                    this, SLOT (contextmenu_doc (bool)));
           context_menu->addAction (tr ("Edit") + " " + _word_at_cursor,
                                    this, SLOT (contextmenu_edit (bool)));
         }
-      context_menu->addSeparator ();   // separator before custom entries
-      if (hasSelectedText ())
-        context_menu->addAction (tr ("&Run Selection"),
-                                 this, SLOT (contextmenu_run (bool)));
     }
 
   // finaly show the menu
   context_menu->exec (global_pos);
 }
 #endif
 
 
diff --git a/libgui/src/main-window.cc b/libgui/src/main-window.cc
--- a/libgui/src/main-window.cc
+++ b/libgui/src/main-window.cc
@@ -735,16 +735,17 @@ main_window::change_directory (const QSt
   file_browser_window->update_octave_directory (dir);
 }
 
 void
 main_window::browse_for_directory (void)
 {
   QString dir
     = QFileDialog::getExistingDirectory (this, tr ("Browse directories"), 0,
+                                         QFileDialog::ShowDirsOnly |
                                          QFileDialog::DontUseNativeDialog);
 
   set_current_working_directory (dir);
 
   // FIXME: on Windows systems, the command window freezes after the
   // previous actions.  Forcing the focus appears to unstick it.
 
   focus_command_window ();
diff --git a/libinterp/corefcn/data.cc b/libinterp/corefcn/data.cc
--- a/libinterp/corefcn/data.cc
+++ b/libinterp/corefcn/data.cc
@@ -3286,52 +3286,49 @@ complex ([1, 2], [3, 4])\n\
             {
               if (re.numel () == 1)
                 {
                   SparseComplexMatrix result;
                   if (re_val.nnz () == 0)
                     result = Complex (0, 1) * SparseComplexMatrix (im_val);
                   else
                     {
-                      result = SparseComplexMatrix (im_val.dims (), re_val (0));
                       octave_idx_type nr = im_val.rows ();
                       octave_idx_type nc = im_val.cols ();
+                      result = SparseComplexMatrix (nr, nc, re_val(0));
 
                       for (octave_idx_type j = 0; j < nc; j++)
                         {
                           octave_idx_type off = j * nr;
                           for (octave_idx_type i = im_val.cidx (j);
                                i < im_val.cidx (j + 1); i++)
-                            result.data (im_val.ridx (i) + off) =
-                              result.data (im_val.ridx (i) + off) +
+                            result.data (im_val.ridx (i) + off) +=
                               Complex (0, im_val.data (i));
                         }
                     }
                   retval = octave_value (new octave_sparse_complex_matrix (result));
                 }
               else if (im.numel () == 1)
                 {
                   SparseComplexMatrix result;
                   if (im_val.nnz () == 0)
                     result = SparseComplexMatrix (re_val);
                   else
                     {
-                      result = SparseComplexMatrix (re_val.rows (),
-                                                    re_val.cols (),
-                                                    Complex (0, im_val (0)));
                       octave_idx_type nr = re_val.rows ();
                       octave_idx_type nc = re_val.cols ();
+                      result = SparseComplexMatrix (nr, nc,
+                                                    Complex (0, im_val(0)));
 
                       for (octave_idx_type j = 0; j < nc; j++)
                         {
                           octave_idx_type off = j * nr;
                           for (octave_idx_type i = re_val.cidx (j);
                                i < re_val.cidx (j + 1); i++)
-                            result.data (re_val.ridx (i) + off) =
-                              result.data (re_val.ridx (i) + off) +
+                            result.data (re_val.ridx (i) + off) +=
                               re_val.data (i);
                         }
                     }
                   retval = octave_value (new octave_sparse_complex_matrix (result));
                 }
               else
                 {
                   if (re_val.dims () == im_val.dims ())
diff --git a/libinterp/corefcn/find.cc b/libinterp/corefcn/find.cc
--- a/libinterp/corefcn/find.cc
+++ b/libinterp/corefcn/find.cc
@@ -84,19 +84,18 @@ find_nonzero_elem_idx (const Array<T>& n
 
 template <typename T>
 octave_value_list
 find_nonzero_elem_idx (const Sparse<T>& v, int nargout,
                        octave_idx_type n_to_find, int direction)
 {
   octave_value_list retval ((nargout == 0 ? 1 : nargout), Matrix ());
 
-
+  octave_idx_type nr = v.rows ();
   octave_idx_type nc = v.cols ();
-  octave_idx_type nr = v.rows ();
   octave_idx_type nz = v.nnz ();
 
   // Search in the default range.
   octave_idx_type start_nc = -1;
   octave_idx_type end_nc = -1;
   octave_idx_type count;
 
   // Search for the range to search
@@ -134,68 +133,71 @@ find_nonzero_elem_idx (const Sparse<T>& 
               break;
             }
         }
     }
 
   count = (n_to_find > v.cidx (end_nc) - v.cidx (start_nc) ?
            v.cidx (end_nc) - v.cidx (start_nc) : n_to_find);
 
-  // If the original argument was a row vector, force a row vector of
-  // the overall indices to be returned.  But see below for scalar
-  // case...
+  octave_idx_type result_nr;
+  octave_idx_type result_nc;
 
-  octave_idx_type result_nr = count;
-  octave_idx_type result_nc = 1;
-
-  bool scalar_arg = false;
-
-  if (v.rows () == 1)
+  // Default case is to return a column vector, however, if the original
+  // argument was a row vector, then force return of a row vector.
+  if (nr == 1)
     {
       result_nr = 1;
       result_nc = count;
-
-      scalar_arg = (v.columns () == 1);
+    }
+  else
+    {
+      result_nr = count;
+      result_nc = 1;
     }
 
   Matrix idx (result_nr, result_nc);
 
   Matrix i_idx (result_nr, result_nc);
   Matrix j_idx (result_nr, result_nc);
 
   Array<T> val (dim_vector (result_nr, result_nc));
 
   if (count > 0)
     {
-      // Search for elements to return.  Only search the region where
-      // there are elements to be found using the count that we want
-      // to find.
+      // Search for elements to return.  Only search the region where there
+      // are elements to be found using the count that we want to find.
       for (octave_idx_type j = start_nc, cx = 0; j < end_nc; j++)
         for (octave_idx_type i = v.cidx (j); i < v.cidx (j+1); i++)
           {
             OCTAVE_QUIT;
             if (direction < 0 && i < nz - count)
               continue;
             i_idx(cx) = static_cast<double> (v.ridx (i) + 1);
             j_idx(cx) = static_cast<double> (j + 1);
             idx(cx) = j * nr + v.ridx (i) + 1;
             val(cx) = v.data(i);
             cx++;
             if (cx == count)
               break;
           }
     }
-  else if (scalar_arg)
+  else
     {
-      idx.resize (0, 0);
+      // No items found.  Fixup return dimensions for Matlab compatibility.
+      // The behavior to match is documented in Array.cc (Array<T>::find).
+      if ((nr == 0 && nc == 0) || nr == 1 & nc == 1)
+        {
+          idx.resize (0, 0);
 
-      i_idx.resize (0, 0);
-      j_idx.resize (0, 0);
+          i_idx.resize (0, 0);
+          j_idx.resize (0, 0);
 
-      val.resize (dim_vector (0, 0));
+          val.resize (dim_vector (0, 0));
+        }
     }
 
   switch (nargout)
     {
     case 0:
     case 1:
       retval(0) = idx;
       break;
@@ -227,16 +229,17 @@ find_nonzero_elem_idx (const Sparse<T>& 
 
 octave_value_list
 find_nonzero_elem_idx (const PermMatrix& v, int nargout,
                        octave_idx_type n_to_find, int direction)
 {
   // There are far fewer special cases to handle for a PermMatrix.
   octave_value_list retval ((nargout == 0 ? 1 : nargout), Matrix ());
 
+  octave_idx_type nr = v.rows ();
   octave_idx_type nc = v.cols ();
   octave_idx_type start_nc, count;
 
   // Determine the range to search.
   if (n_to_find < 0 || n_to_find >= nc)
     {
       start_nc = 0;
       count = nc;
@@ -247,18 +250,16 @@ find_nonzero_elem_idx (const PermMatrix&
       count = n_to_find;
     }
   else
     {
       start_nc = nc - n_to_find;
       count = n_to_find;
     }
 
-  bool scalar_arg = (v.rows () == 1 && v.cols () == 1);
-
   Matrix idx (count, 1);
   Matrix i_idx (count, 1);
   Matrix j_idx (count, 1);
   // Every value is 1.
   Array<double> val (dim_vector (count, 1), 1.0);
 
   if (count > 0)
     {
@@ -286,23 +287,32 @@ find_nonzero_elem_idx (const PermMatrix&
               // j adjusted by the start point.
               const octave_idx_type koff = j - start_nc;
               i_idx(koff) = static_cast<double> (1+i);
               j_idx(koff) = static_cast<double> (1+j);
               idx(koff) = j * nc + i + 1;
             }
         }
     }
-  else if (scalar_arg)
+  else
     {
-      // Same odd compatibility case as the other overrides.
-      idx.resize (0, 0);
-      i_idx.resize (0, 0);
-      j_idx.resize (0, 0);
-      val.resize (dim_vector (0, 0));
+      // FIXME: Is this case even possible?  A scalar permutation matrix seems to devolve
+      //        to a scalar full matrix, at least from the Octave command line.  Perhaps
+      //        this function could be called internally from C++ with such a matrix.
+      // No items found.  Fixup return dimensions for Matlab compatibility.
+      // The behavior to match is documented in Array.cc (Array<T>::find).
+      if ((nr == 0 && nc == 0) || nr == 1 & nc == 1)
+        {
+          idx.resize (0, 0);
+
+          i_idx.resize (0, 0);
+          j_idx.resize (0, 0);
+
+          val.resize (dim_vector (0, 0));
+        }
     }
 
   switch (nargout)
     {
     case 0:
     case 1:
       retval(0) = idx;
       break;
diff --git a/libinterp/corefcn/graphics.cc b/libinterp/corefcn/graphics.cc
--- a/libinterp/corefcn/graphics.cc
+++ b/libinterp/corefcn/graphics.cc
@@ -9716,26 +9716,27 @@ object, whether 2 or 3.\n\
 @end deftypefn")
 {
   gh_manager::auto_lock guard;
 
   octave_value retval;
 
   int nargin = args.length ();
 
-  if (nargin != 1)
+  if (nargin == 1)
+    {
+      double h = args(0).double_value ();
+      if (! error_state)
+        retval = calc_dimensions (gh_manager::get_object (h));
+      else
+        error ("__calc_dimensions__: expecting graphics handle as only argument");
+    }
+  else
     print_usage ();
 
-  double h = args(0).double_value ();
-
-  if (! error_state)
-    retval = calc_dimensions (gh_manager::get_object (h));
-  else
-    error ("__calc_dimensions__: expecting graphics handle as only argument");
-
   return retval;
 }
 
 DEFUN (__go_axes__, args, ,
        "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} __go_axes__ (@var{parent})\n\
 Undocumented internal function.\n\
 @end deftypefn")
diff --git a/libinterp/parse-tree/lex.ll b/libinterp/parse-tree/lex.ll
--- a/libinterp/parse-tree/lex.ll
+++ b/libinterp/parse-tree/lex.ll
@@ -336,16 +336,28 @@ ANY_INCLUDING_NL (.|{NL})
     // as the first token.
     curr_lexer->reading_script_file = true;
 
     curr_lexer->pop_start_state ();
 
     return curr_lexer->show_token (INPUT_FILE);
   }
 
+<INPUT_FILE_START><<EOF>> {
+    curr_lexer->lexer_debug ("<INPUT_FILE_START><<EOF>>");
+
+    // May be reset later if we see "function" or "classdef" appears
+    // as the first token.
+    curr_lexer->reading_script_file = true;
+
+    curr_lexer->pop_start_state ();
+
+    return curr_lexer->show_token (INPUT_FILE);
+  }
+
 %{
 // Help and other command-style functions.
 %}
 
 %{
 // Commands can be continued on a second line using the ellipsis.
 // If an argument is in construction, it is completed.
 %}
diff --git a/scripts/plot/draw/hist.m b/scripts/plot/draw/hist.m
--- a/scripts/plot/draw/hist.m
+++ b/scripts/plot/draw/hist.m
@@ -152,17 +152,17 @@ function [nn, xx] = hist (varargin)
              (chist(end,:) - sum (isnan (y)))];
   endif
 
   freq = diff (chist);
 
   if (nargin > 2 && ! ischar (varargin{iarg}))
     ## Normalize the histogram.
     norm = varargin{iarg++};
-    freq *= norm / sum (! isnan (y));
+    freq = bsxfun (@times, freq, norm ./ sum (! isnan (y)));
   endif
 
   if (nargout > 0)
     if (arg_is_vector)  
       ## Matlab compatibility requires a row vector return
       nn = freq';  
       xx = x';
     else
@@ -204,9 +204,11 @@ endfunction
 %!   assert (sum (hist ([1:n], n)), n);
 %!   assert (sum (hist ([1:n], [2:n-1])), n);
 %!   assert (sum (hist ([1:n], [1:n])), n);
 %!   assert (sum (hist ([1:n], 29)), n);
 %!   assert (sum (hist ([1:n], 30)), n);
 %! endfor
 %!assert (hist (1,1), 1)
 %!assert (size (hist (randn (750,240), 200)), [200,240])
-
+## Test bug #42394
+%!assert (isempty (hist (rand (10,2), 0:5, 1)), false)
+%!assert (isempty (hist (rand (10,2), 0:5, [1 1])), false)
diff --git a/scripts/plot/draw/private/__bar__.m b/scripts/plot/draw/private/__bar__.m
--- a/scripts/plot/draw/private/__bar__.m
+++ b/scripts/plot/draw/private/__bar__.m
@@ -115,23 +115,27 @@ function varargout = __bar__ (vertical, 
     error ("%s: length of X and Y must be equal", func);
   endif
   if (any (x(2:end) < x(1:end-1)))
     error ("%s: X vector values must be in ascending order", func);
   endif
 
   nbars = columns (y);
 
-  ## Column width is 1 for 'hist*' styles.  Otherwise, same as group width.
-  if (nbars == 1)
+  ## Column width is 1 for 'hist*' styles (bars touch).
+  if (islogical (histc))
+    cwidth = 1;
+    if (nbars == 1)
+      gwidth = 1;
+    else
+      gwidth = width^2;
+    endif
+  elseif (nbars == 1)
     cwidth = 1;
     gwidth = width;
-  elseif (islogical (histc))
-    cwidth = 1;
-    gwidth = width^2;
   else
     cwidth = gwidth = width;
   endif
 
   ## Complicated algorithm sizes bars with unitless parameter width.
   ## If width is 1.0, adjacent bars in a group are touching.
   ## Otherwise, bar size is cwidth and the remaining space is split evenly on
   ## either side of the bar.  For the default 0.8, spacing is [0.1 0.8 0.1].
