# HG changeset patch
# User Ben Abbott <bpabbott@mac.com>
# Date 1271551071 14400
#      Sat Apr 17 20:37:51 2010 -0400
# Node ID 114376c7cba56e362a3349e93c94a6dd5bd15089
# Parent  7147078550fed832f4e4fc18fb1f02061fce202d
__actual_axis_position__.m: Fix bug when restoring figure position property to its original value.

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2010-04-17  Ben Abbott <bpabbott@mac.com>
+
+	* plot/private/__actual_axis_position__.m: Fix bug when restoring
+	figure position property to its original value.
+
 2010-04-16  David Bateman  <dbateman@free.fr>
 
 	* plot/__go_draw_figure__.m: Pass bg_is_set to __go_draw_axes__. Don't
 	unset the background figure color.
 	* plot/__go_draw_axes__.m: Unset the background figure color here.
 
 	* statistics/distributions/*: Replace constructs like "NaN * one()"
 	with "NaN()" and  "Inf * ones ()" with "Inf()".
diff --git a/scripts/plot/private/__actual_axis_position__.m b/scripts/plot/private/__actual_axis_position__.m
--- a/scripts/plot/private/__actual_axis_position__.m
+++ b/scripts/plot/private/__actual_axis_position__.m
@@ -35,17 +35,17 @@ function pos = __actual_axis_position__ 
     ## FIXME -- this works for "axis square", but has not been
     ##          thoroughly tested for other aspect ratios.
     aspect_ratio_2d = [max(axis_obj.plotboxaspectratio(1:2)), ...
 			   axis_obj.plotboxaspectratio(3)/sqrt(2)];
   else
     aspect_ratio_2d = axis_obj.plotboxaspectratio(1:2);
   endif
   orig_fig_units = get (axis_obj.parent, "units");
-  orig_fig_position = get (axis_obj.parent, "units");
+  orig_fig_position = get (axis_obj.parent, "position");
   unwind_protect
     set (axis_obj.parent, "units", "pixels")
     fig_position = get (axis_obj.parent, "position");
     pos_in_pixels = axis_obj.position .* fig_position([3, 4, 3, 4]);
     orig_aspect_ratio_2d = pos_in_pixels(3:4);
     rel_aspect_ratio_2d =  aspect_ratio_2d ./ orig_aspect_ratio_2d;
     rel_aspect_ratio_2d = rel_aspect_ratio_2d ./ max (rel_aspect_ratio_2d);
     if (rel_aspect_ratio_2d(1) < rel_aspect_ratio_2d(2));
@@ -53,17 +53,17 @@ function pos = __actual_axis_position__ 
       pos_in_pixels = pos_in_pixels + dx*[0.5, 0.0, -1.0, 0.0];
     elseif (rel_aspect_ratio_2d(1) > rel_aspect_ratio_2d(2))
       dy = (1.0 - rel_aspect_ratio_2d(2)) * pos_in_pixels(4);
       pos_in_pixels = pos_in_pixels + dy*[0.0, 0.5, 0.0, -1.0];
     endif
     pos = pos_in_pixels ./ fig_position([3, 4, 3, 4]);
   unwind_protect_cleanup
     set (axis_obj.parent, "units", orig_fig_units)
-    set (axis_obj.parent, "units", orig_fig_position)
+    set (axis_obj.parent, "position", orig_fig_position)
   end_unwind_protect
 
 endfunction
 
 function nd = __calc_dimensions__ (obj)
   kids = obj.children;
   nd = 2;
   for i = 1:length (kids)
