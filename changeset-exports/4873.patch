# HG changeset patch
# User jwe
# Date 1082613080 0
#      Thu Apr 22 05:51:20 2004 +0000
# Node ID 0358ed4394f58937d5e566c9dfff6a007842afd3
# Parent  fe71c458f438af3db9430b13e88e1185dc8a5ff4
[project @ 2004-04-22 05:51:20 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,13 @@
+2004-04-22  John W. Eaton  <jwe@octave.org>
+
+	* mkoctfile.in: Allow -Wx,option style options to be passed to the
+	compiler.  From Al Niessner <Al.Niessner@jpl.nasa.gov>.
+
 2004-04-06  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* configure.in: Delete code for --with-ieee754.
 	Use OCTAVE_IEEE754_DATA_FORMAT.
 
 	* aclocal.m4 (OCTAVE_IEEE754_DATA_FORMAT): New macro, based on
 	configure.in code for HAVE_IEEE754_COMPLIANCE.
 
diff --git a/mkoctfile.in b/mkoctfile.in
--- a/mkoctfile.in
+++ b/mkoctfile.in
@@ -69,16 +69,17 @@ f77files=
 objfiles=
 octfiles=
 octfile=
 outputfile=
 incflags=
 defs=
 ldflags=
 dbg=:
+pass_on_options=
 strip=false
 no_oct_file_strip_on_this_platform=%NO_OCT_FILE_STRIP%
 link=true
 link_stand_alone=false
 depend=false
 compile=true
 
 if [ $# -eq 0 ]; then
@@ -155,16 +156,18 @@ Options:
                             LIBS          FLIBS
 
   --link-stand-alone      Link a stand-alone executable file.
 
   -s, --strip             Strip output file.
 
   -v, --verbose           Echo commands as they are executed.
 
+  -W                      Pass flags though the compiler like -Wl,-rpath=...
+
   FILE                    Compile or link FILE.  Recognized file types are:
 
                             .c    C source
                             .cc   C++ source
                             .C    C++ source
                             .cpp  C++ source
                             .f    Fortran source
                             .F    Fortran source
@@ -212,16 +215,19 @@ EOF
       fi
     ;;
     -c | --compile)
       link=false
     ;;
     --link-stand-alone)
       link_stand_alone=true
     ;;
+    -W*)
+      pass_on_options="$pass_on_options $1"
+    ;;
     *)
       echo "mkoctfile: unrecognized argument $1" 1>&2
       exit 1
     ;;
   esac
   if [ -n "$file" ]; then
     if [ -z "$octfile" ]; then
       octfile="$file"
@@ -295,17 +301,17 @@ if [ -n "$f77files" ]; then
       ;;
       *.F)
         b=`echo $f | $SED 's,\.F$,,'`
       ;;
     esac
     if [ -n "$F77" ]; then
       o=$b.o
       objfiles="$objfiles $o"
-      cmd="$F77 -c $FPICFLAG $ALL_FFLAGS $f -o $o"
+      cmd="$F77 -c $FPICFLAG $ALL_FFLAGS $pass_on_options $f -o $o"
       $dbg $cmd
       eval $cmd
     elif [ -n "$F2C" ]; then
       c=$b.c
       cfiles="$cfiles $c"
       cmd="$F2C $F2CFLAGS < $f > $c"
       $dbg $cmd
       eval $cmd
@@ -316,17 +322,17 @@ if [ -n "$f77files" ]; then
 fi
 
 if [ -n "$cfiles" ]; then
   for f in $cfiles; do
     if [ -n  "$CC" ]; then
       b=`echo $f | $SED 's,\.c$,,'`
       o=$b.o
       objfiles="$objfiles $o"
-      cmd="$CC -c $CPPFLAGS $CPICFLAG $ALL_CFLAGS $incflags $defs $f -o $o"
+      cmd="$CC -c $CPPFLAGS $CPICFLAG $ALL_CFLAGS $pass_on_options $incflags $defs $f -o $o"
       $dbg $cmd
       eval $cmd
     else
       echo "mkoctfile: no way to compile C++ file $f" 1>&2
     fi
   done
 fi
 
@@ -341,17 +347,17 @@ if [ -n "$ccfiles" ]; then
 	  b=`echo $f | $SED 's,\.C$,,'`
 	;;
 	*.cpp)
 	  b=`echo $f | $SED 's,\.cpp$,,'`
 	;;
       esac
       o=$b.o
       objfiles="$objfiles $o"
-      cmd="$CXX -c $CPPFLAGS $CXXPICFLAG $ALL_CXXFLAGS $incflags $defs $f -o $o"
+      cmd="$CXX -c $CPPFLAGS $CXXPICFLAG $ALL_CXXFLAGS $pass_on_options $incflags $defs $f -o $o"
       $dbg $cmd
       eval $cmd
     else
       echo "mkoctfile: no way to compile C++ file $f" 1>&2
     fi
   done
 fi
 
@@ -370,26 +376,26 @@ fi
 ##   eval $cmd
 ## fi
 
 # Link all the object files.
 
 if $link; then
   if $link_stand_alone; then
     if [ -n "$LD_CXX" ]; then
-      cmd="$LD_CXX $CPPFLAGS $ALL_CXXFLAGS $RDYNAMIC_FLAG $ALL_LDFLAGS $output_option $objfiles $ldflags $LFLAGS $RLD_FLAG $OCTAVE_LIBS $BLAS_LIBS $FFTW_LIBS $LIBREADLINE $LIBS $FLIBS"
+      cmd="$LD_CXX $CPPFLAGS $ALL_CXXFLAGS $RDYNAMIC_FLAG $ALL_LDFLAGS $pass_on_options $output_option $objfiles $ldflags $LFLAGS $RLD_FLAG $OCTAVE_LIBS $BLAS_LIBS $FFTW_LIBS $LIBREADLINE $LIBS $FLIBS"
       $dbg $cmd
       eval $cmd
     else
       echo "mkoctfile: no way to link stand-alone executable file" 1>&2
       exit 1
     fi
   else
     LINK_DEPS="$LFLAGS $OCTAVE_LIBS $LDFLAGS $BLAS_LIBS $FFTW_LIBS $LIBS $FLIBS"
-    cmd="$DL_LD $DL_LDFLAGS -o $octfile $objfiles $ldflags $LINK_DEPS"
+    cmd="$DL_LD $DL_LDFLAGS $pass_on_options -o $octfile $objfiles $ldflags $LINK_DEPS"
     $dbg $cmd
     eval $cmd
   fi
 
 # Maybe strip it.
 
   if $strip; then
     cmd="strip $octfile"
diff --git a/scripts/plot/hist.m b/scripts/plot/hist.m
--- a/scripts/plot/hist.m
+++ b/scripts/plot/hist.m
@@ -53,29 +53,27 @@ function [nn, xx] = hist (y, x, norm)
     max_val = max (y);
     min_val = min (y);
   else
     error ("hist: first argument must be a vector");
   endif
 
   if (nargin == 1)
     n = 10;
-    delta = (max_val - min_val) / n / 2;
-    x = linspace (min_val+delta, max_val-delta, n);
-    cutoff = x + delta;
+    delta = (max_val - min_val) / (n-1) / 2;
+    cutoff = linspace (min_val+delta, max_val-delta, n-1);
   else
     ## nargin is either 2 or 3
     if (isscalar (x))
       n = x;
       if (n <= 0)
         error ("hist: number of bins must be positive");
       endif
-      delta = (max_val - min_val) / n / 2;
-      x = linspace (min_val+delta, max_val-delta, n);
-      cutoff = x + delta;
+      delta = (max_val - min_val) / (n-1) / 2;
+      cutoff = linspace (min_val+delta, max_val-delta, n-1);
     elseif (isvector (x))
       tmp = sort (x);
       if (any (tmp != x))
         warning ("hist: bin values not sorted on input");
         x = tmp;
       endif
       cutoff = (x(1:end-1) + x(2:end)) / 2;
       n = length (x);
