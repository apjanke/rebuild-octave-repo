# HG changeset patch
# User jwe
# Date 867291095 0
#      Thu Jun 26 02:11:35 1997 +0000
# Node ID 7310b801f8c2776c1340dbf079aa868a2c32407a
# Parent  1a5fe3010f09efcf57f2e34fe5f019e208d790b3
[project @ 1997-06-26 02:11:29 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+Wed Jun 25 21:06:10 1997  Rick Niles <niles@axp745.gsfc.nasa.gov>
+
+	* plot/__pltopt__.m: Handle key/legend names.
+	Correctly set colors, line styles, and point styles.
+
 Wed Jun 25 13:34:06 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* polynomial/polyfit.m: Return fit y values as second output.
 	Don't use QR factorization to solve least squares problem.
 
 Wed Jun 18 10:24:00 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* control/dlqr.m: Use ao, not a, to compute k.
diff --git a/scripts/plot/__pltopt__.m b/scripts/plot/__pltopt__.m
--- a/scripts/plot/__pltopt__.m
+++ b/scripts/plot/__pltopt__.m
@@ -34,77 +34,84 @@
 ##   "^"   for impulses plot style.
 ##   "L"   for steps plot style.
 ##   "#"   for boxes plot style.
 ##   "~"   for errorbars plot style.
 ##   "#~"  for boxerrorbars plot style.
 ##   "n"   with n in 1-6 (wraps at 8), plot color
 ##   "nm"  with m in 1-6 (wraps at 6), point style (only valid for "@" or "-@")
 ##   "c"   where c is one of ["r", "g", "b", "m", "c", "w"] colors.
+##   ";title;" where "title" is the label for the key.
 ##
 ##   Special points formats:
 ##
-##      "+", "*", "o", "x" will display points in that style.
+##      "+", "*", "o", "x" will display points in that style for term x11.
 ##
 ##   The legend may be fixed to include the name of the variable
 ##   plotted in some future version of Octave.
 ##
-##   The color line styles have the following meanings on terminals
-##   that support color.
+##   The colors, line styles, and point styles have the following
+##   meanings for X11 and Postscript terminals under Gnuplot 3.6.
 ##
-##     Number  Gnuplot colors     (lines)points style
-##       1       red                 "*"
-##       2       green               "+"
-##       3       blue                "o"
-##       4       magenta             "x"
-##       5       cyan                house
-##       6       brown               there exists
+##   Number ------ Color -------  Line Style      ---- Points Style ----   
+##          x11       postscript  postscript      x11         postscript   
+##   =====================================================================
+##     1    red       green       solid           "o"         "+"         
+##     2    green     blue        long dash       "+"         "x"         
+##     3    blue      red         short dash     square       "*"         
+##     4    magenta   magenta     dotted          "x"        open square  
+##     5    cyan      cyan        dot long dash  triangle    filled square
+##     6    brown     yellow      dot short dash  "*"         "o"         
 
 ## Author: Rick Niles <niles@axp745.gsfc.nasa.gov>
 ## Adapted-By: jwe
 ## Maintainer: jwe
 
 function fmt = __pltopt__ (caller, opt)
 
   set_color = 0;
   set_symbol = 0;
   set_lines = 0;
   set_dots = 0;
   set_points = 0;
   set_impulses = 0;
   set_steps = 0;
   set_boxes = 0;
   set_errbars = 0;
+  set_key = 0;
   more_opts = 1;
 
   WITH = "w";
   LINES = "l";
   LINESPOINTS = "linesp";
   BOXERRORBARS = "boxer";
   BOXES = "boxes";
   POINTS = "p";
   DOTS = "d";
   IMPULSES = "i";
   STEPS = "s";
   ERRORBARS = "e";
+  TITLE = "title";
 
   if (nargin != 2)
     usage ("__pltopt__ (opt)");
   endif
 
   if (! isstr (opt))
     error ("__pltopt__: argument must be a string");
   endif
 
   while (more_opts)
 
     ## First get next char.
 
     if (max (size (opt)) > 1)
-      [char, opt] = sscanf (opt, "%c %s", "C");
+#      [char, opt] = sscanf (opt, "%c %s", "C");
+       char = opt(1);
+       opt = opt(2:length(opt));
     else
       char = opt;
       more_opts = 0;
     endif
 
     ## Now set flags based on char.
 
     if (strcmp (char, "-"))
@@ -150,31 +157,59 @@ function fmt = __pltopt__ (caller, opt)
       set_color = 1;
       color = "5";
     elseif (strcmp (char, "w"))
       set_color = 1;
       color = "6";
     elseif (strcmp (char, "*"))
       set_points = 1;
       set_symbol = 1;
-      symbol = "1";
+      symbol = "6";
     elseif (strcmp (char, "+"))
       set_points = 1;
       set_symbol = 1;
       symbol = "2";
     elseif (strcmp (char, "o"))
       set_points = 1;
       set_symbol = 1;
-      symbol = "3";
+      symbol = "1";
     elseif (strcmp (char, "x"))
       set_points = 1;
       set_symbol = 1;
       symbol = "4";
+    elseif (strcmp (char, ";"))  # title mode.
+      set_key = 1;
+      working = 1;
+      key_title = ""; 
+      while (working)
+        if (max (size (opt)) > 1)
+	  char = opt(1);
+	  opt = opt(2:length(opt))
+        else
+	  char = opt;
+	  if (! strcmp (char, ";"))
+            error ("%s: unfinished key label", caller);
+          end
+          more_opts = 0;
+          working = 0;
+        endif
+        if strcmp (char, ";")
+          working = 0;
+        else
+	  if (isempty (key_title))  # needs this to avoid empty matrix warning.
+            key_title = char;
+	  else
+            key_title = strcat (key_title, char);
+	  endif
+        endif
+      endwhile
+    elseif (strcmp (char, " ")) 
+      ## whitespace -- do nothing.
     else
-      error (sprintf ("%s: unrecognized format character %s", caller, char));
+      error ("%s: unrecognized format character: '%s'", caller, char);
     endif
   endwhile
 
   ## Now create format string.
 
   fmt = WITH;
 
   if (set_lines)
@@ -209,9 +244,12 @@ function fmt = __pltopt__ (caller, opt)
     fmt = strcat (fmt, " ", color);
     if (set_symbol)
       fmt = strcat (fmt, " ", symbol);
     endif
   elseif (set_symbol)
     fmt = strcat (fmt, " 1 ", symbol);
   endif
 
+  if (set_key)
+    fmt = strcat (fmt, " ", TITLE, ' "', key_title, '" ');
+  endif
 endfunction
