# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1530120591 14400
#      Wed Jun 27 13:29:51 2018 -0400
# Node ID 2710440ea566c423ee5e831708280ba11386dfd6
# Parent  e00aa6a75edd4513c00f6a082d81a4c9ad58b655
mkoctfile: fix logic error with handling of -c option (bug #54182)

* mkoctfile.in.cc (main): Fix logic error with handling of -c option.
Don't exit early if compile_only.  We could exit early if both -c and
-o are given, but there is really no need to do that either, so just
allow processing to continue.

diff --git a/src/mkoctfile.in.cc b/src/mkoctfile.in.cc
--- a/src/mkoctfile.in.cc
+++ b/src/mkoctfile.in.cc
@@ -875,20 +875,16 @@ main (int argc, char **argv)
 
   for (const auto& f : f77files)
     {
       if (! vars["F77"].empty ())
         {
           std::string o;
           if (compile_only)
             {
-              // There will be only one source file, so we are done
-              // after executing the command below and we don't need to
-              // keep track of the object file name.
-
               if (! outputfile.empty ())
                 o = outputfile;
               else
                 o = basename (f, true) + ".o";
             }
           else
             {
               o = tmp_objfile_name ();
@@ -900,17 +896,17 @@ main (int argc, char **argv)
 
           std::string cmd
             = (vars["F77"] + " -c " + vars["FPICFLAG"] + ' '
                + vars["ALL_FFLAGS"] + ' ' + incflags + ' ' + defs + ' '
                + pass_on_options + ' ' + f + " -o " + o);
 
           int status = run_command (cmd, printonly);
 
-          if (compile_only || status)
+          if (status)
             return status;
         }
       else
         {
           std::cerr << "mkoctfile: no way to compile Fortran file " << f
                     << std::endl;
           return 1;
         }
@@ -918,20 +914,16 @@ main (int argc, char **argv)
 
   for (const auto& f : cfiles)
     {
       if (! vars["CC"].empty ())
         {
           std::string o;
           if (compile_only)
             {
-              // There will be only one source file, so we are done
-              // after executing the command below and we don't need to
-              // keep track of the object file name.
-
               if (! outputfile.empty ())
                 o = outputfile;
               else
                 o = basename (f, true) + ".o";
             }
           else
             {
               o = tmp_objfile_name ();
@@ -944,17 +936,17 @@ main (int argc, char **argv)
           std::string cmd
             = (vars["CC"] + " -c " + vars["CPPFLAGS"] + ' '
                + vars["CPICFLAG"] + ' ' + vars["ALL_CFLAGS"] + ' '
                + pass_on_options + ' ' + incflags + ' ' + defs + ' '
                + quote_path (f) + " -o " + quote_path (o));
 
           int status = run_command (cmd, printonly);
 
-          if (compile_only || status)
+          if (status)
             return status;
         }
       else
         {
           std::cerr << "mkoctfile: no way to compile C file " << f
                     << std::endl;
           return 1;
         }
@@ -962,20 +954,16 @@ main (int argc, char **argv)
 
   for (const auto& f : ccfiles)
     {
       if (! vars["CXX"].empty ())
         {
           std::string o;
           if (compile_only)
             {
-              // There will be only one source file, so we are done
-              // after executing the command below and we don't need to
-              // keep track of the object file name.
-
               if (! outputfile.empty ())
                 o = outputfile;
               else
                 o = basename (f, true) + ".o";
             }
           else
             {
               o = tmp_objfile_name ();
@@ -988,17 +976,17 @@ main (int argc, char **argv)
           std::string cmd
             = (vars["CXX"] + " -c " + vars["CPPFLAGS"] + ' '
                + vars["CXXPICFLAG"] + ' ' + vars["ALL_CXXFLAGS"] + ' '
                + pass_on_options + ' ' + incflags + ' ' + defs + ' '
                + quote_path (f) + " -o " + quote_path (o));
 
           int status = run_command (cmd, printonly);
 
-          if (compile_only || status)
+          if (status)
             return status;
         }
       else
         {
           std::cerr << "mkoctfile: no way to compile C++ file " << f
                     << std::endl;
           return 1;
         }
