# HG changeset patch
# User jwe
# Date 776300637 0
#      Sun Aug 07 23:03:57 1994 +0000
# Node ID 9b02a14aaaeaeb58eaa1ad2e64d203f5c2b50ee9
# Parent  68ef35f2157f2339468c84a87833ad8535b3174c
[project @ 1994-08-07 23:03:57 by jwe]

diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -16,17 +16,17 @@ dnl Octave is distributed in the hope th
 dnl ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 dnl FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 dnl for more details.
 dnl 
 dnl You should have received a copy of the GNU General Public License
 dnl along with Octave; see the file COPYING.  If not, write to the Free
 dnl Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
 dnl
-AC_REVISION($Revision: 1.35 $)dnl
+AC_REVISION($Revision: 1.36 $)dnl
 AC_PREREQ(1.8)dnl
 AC_INIT(src/octave.cc)
 AC_CONFIG_HEADER(config.h)
 dnl
 AC_DEFINE(OCTAVE_SOURCE, 1)dnl
 dnl
 dnl See if we were given the target host type.  If not, use
 dnl config.guess to try to guess the target host type.
@@ -237,16 +237,39 @@ dnl
 AC_ISC_POSIX
 AC_MINIX
 AC_AIX
 AC_DYNIX_SEQ
 AC_IRIX_SUN
 AC_SCO_INTL
 AC_XENIX_DIR
 dnl
+dnl Try to determine the floating point format.
+dnl
+AC_CHECKING([floating point format])
+${CC-cc} -DDP $CFLAGS $LDFLAGS $srcdir/float-type.c -o conftest >/dev/null 2>&1
+FLOAT_FORMAT=`./conftest`
+case "$FLOAT_FORMAT" in
+  IEEE_BIG_ENDIAN)
+    AC_DEFINE(IEEE_BIG_ENDIAN, 1)dnl
+  ;;
+  IEEE_LITTLE_ENDIAN)
+    AC_DEFINE(IEEE_LITTLE_ENDIAN, 1)dnl
+  ;;
+  VAX_D_FLOAT)
+    AC_DEFINE(VAX_D_FLOAT, 1)dnl
+  ;;
+  VAX_G_FLOAT)
+    AC_DEFINE(VAX_G_FLOAT, 1)dnl
+  ;;
+  *)
+    AC_WARN("unrecognized floating point format!")
+  ;;
+esac
+dnl
 dnl Does the C compiler handle alloca() and const correctly?
 dnl
 AC_ALLOCA
 AC_CONST
 dnl
 dnl If we haven't been forced to use f2c, try to find a Fortran compiler
 dnl under any one of several common Un*x Fortran compiler names. 
 dnl Put fc last to avoid confusion with some vendor's /bin/sh fc
