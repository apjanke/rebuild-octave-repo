# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1285134058 -7200
#      Wed Sep 22 07:40:58 2010 +0200
# Node ID a046d03e2417ab0bc2c68eae54d029b3da76e254
# Parent  9478b216752e3bd3c6e3a57682ba748fb0cb5b72
slight simplifications in xpow.cc

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2010-09-22  Jaroslav Hajek  <highegg@gmail.com>
+
+	* xpow.cc (elem_xpow (float, const NDArray&),
+	elem_xpow (float, const FloatNDArray&)): Use simpler tests.
+
 2010-09-21  John W. Eaton  <jwe@octave.org>
 
 	* oct-stream.h (octave_base_stream::file_number): Return 0, 1,
 	and 2 for named stdin, stdout, and stderr streams; -1 otherwise.
 
 2010-09-21  John W. Eaton  <jwe@octave.org>
 
 	* syscalls.cc (Fgethostname): New function.
diff --git a/src/xpow.cc b/src/xpow.cc
--- a/src/xpow.cc
+++ b/src/xpow.cc
@@ -1112,19 +1112,17 @@ elem_xpow (const ComplexMatrix& a, const
 // library...
 
 // -*- 1 -*-
 octave_value
 elem_xpow (double a, const NDArray& b)
 {
   octave_value retval;
 
-  double d1, d2;
-
-  if (a < 0.0 && ! b.all_integers (d1, d2))
+  if (a < 0.0 && ! b.all_integers ())
     {
       Complex atmp (a);
       ComplexNDArray result (b.dims ());
       for (octave_idx_type i = 0; i < b.length (); i++)
         {
           octave_quit ();
           result(i) = std::pow (atmp, b(i));
         }
@@ -2428,19 +2426,17 @@ elem_xpow (const FloatComplexMatrix& a, 
 // library...
 
 // -*- 1 -*-
 octave_value
 elem_xpow (float a, const FloatNDArray& b)
 {
   octave_value retval;
 
-  float d1, d2;
-
-  if (a < 0.0 && ! b.all_integers (d1, d2))
+  if (a < 0.0 && ! b.all_integers ())
     {
       FloatComplex atmp (a);
       FloatComplexNDArray result (b.dims ());
       for (octave_idx_type i = 0; i < b.length (); i++)
         {
           octave_quit ();
           result(i) = std::pow (atmp, b(i));
         }
