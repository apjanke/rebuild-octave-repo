# HG changeset patch
# User jwe
# Date 1115314131 0
#      Thu May 05 17:28:51 2005 +0000
# Node ID c4b55d47122e9591160dc1d711a06150640a2086
# Parent  7ffada2604ea9011f2f37aa6504da2440f220a4d
[project @ 2005-05-05 17:28:51 by jwe]

diff --git a/liboctave/Array.cc b/liboctave/Array.cc
--- a/liboctave/Array.cc
+++ b/liboctave/Array.cc
@@ -491,16 +491,18 @@ Array<T>::permute (const Array<octave_id
       // Get the idx of permuted array.
       Array<octave_idx_type> new_idx = calc_permutated_idx (old_idx, perm_vec, inv);
 
       retval.elem (new_idx) = tmp.elem (old_idx);
 
       increment_index (old_idx, dv);
     }
 
+  chop_trailing_singletons ();
+
   return retval;
 }
 
 template <class T>
 void
 Array<T>::resize_no_fill (octave_idx_type n)
 {
   if (n < 0)
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+2005-05-05  John W. Eaton  <jwe@octave.org>
+
+	* Array.cc (Array<T>::permute): Call chop_trailing_singletons on
+	retval before return.
+
 2005-05-04  John W. Eaton  <jwe@octave.org>
 
 	* cmd-edit.cc (gnu_readline::do_readline): Extract const char*
 	from prompt outside of INTERRUPT_IMMEDIATELY_IN_FOREIGN_CODE block.
 
 2005-05-02  John W. Eaton  <jwe@octave.org>
 
 	* Makefile.in (LINK_DEPS): List $(UMFPACK_LIBS) ahead of $(BLAS_LIBS).
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2005-05-05  John W. Eaton  <jwe@octave.org>
+
+	* oct-stream.cc (BEGIN_S_CONVERSION): Correctly handle width
+	specifiers.
+
 2005-05-04  John W. Eaton  <jwe@octave.org>
 
 	* ls-mat5.cc (read_mat5_binary_element): Implement reading of N-d
 	structure arrays.
 
 	* ov-struct.cc (octave_struct::load_hdf5,
 	octave_struct::load_binary, octave_struct::load_ascii): Assign
 	cell_value to map slot, not octave_value containing the cell.
diff --git a/src/oct-stream.cc b/src/oct-stream.cc
--- a/src/oct-stream.cc
+++ b/src/oct-stream.cc
@@ -1464,38 +1464,65 @@ do_scanf_conv (std::istream&, const scan
   if (n > 0 && c == EOF) \
     is.clear (); \
  \
   std::string tmp = tbuf; \
  \
   delete [] tbuf
 
 // For a `%s' format, skip initial whitespace and then read until the
-// next whitespace character.
+// next whitespace character or until WIDTH characters have been read.
 #define BEGIN_S_CONVERSION() \
   int width = elt->width; \
  \
   std::string tmp; \
  \
   do \
     { \
       if (width) \
-	{ \
-	  char *tbuf = new char [width+1]; \
+        { \
+          char *tbuf = new char [width+1]; \
+ \
+          int c = EOF; \
+ \
+          int n = 0; \
+ \
+          while (is && (c = is.get ()) != EOF) \
+            { \
+              if (! isspace (c)) \
+                { \
+                  tbuf[n++] = static_cast<char> (c); \
+                  break; \
+                } \
+            } \
  \
-	  OCTAVE_SCAN (is, *elt, tbuf); \
+          while (is && n < width && (c = is.get ()) != EOF) \
+            { \
+              if (isspace (c)) \
+                { \
+                  is.putback (c); \
+                  break; \
+                } \
+              else \
+                tbuf[n++] = static_cast<char> (c); \
+            } \
  \
-	  tbuf[width] = '\0'; \
+          tbuf[n] = '\0'; \
+ \
+          if (n > 0 && c == EOF) \
+            is.clear (); \
+ \
           tmp = tbuf; \
+ \
           delete [] tbuf; \
-	} \
+        } \
       else \
-	{ \
-	  is >> std::ws >> tmp; \
-	} \
+        { \
+          is >> std::ws >> tmp; \
+        } \
     } \
   while (0)
 
 // This format must match a nonempty sequence of characters.
 #define BEGIN_CHAR_CLASS_CONVERSION() \
   int width = elt->width; \
  \
   std::string tmp; \
