# HG changeset patch
# User jwe
# Date 1106079473 0
#      Tue Jan 18 20:17:53 2005 +0000
# Node ID 1e36493572a0eaa432c0314d7670f91d9343f483
# Parent  10004c9625c379f87c647a9f0a6efd78da7eb7a4
[project @ 2005-01-18 20:17:53 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2005-01-18  John W. Eaton  <jwe@octave.org>
+
+	* file-io.cc (Fmkstemp): Fix doc string.  Error message belongs in
+	third output value.  From Mats Jansson <mats.e.jansson@home.se>.
+
 2005-01-12  John W. Eaton  <jwe@octave.org>
 
 	* DLD-FUNCTIONS/find.cc (Ffind): Make it work for character strings.
 
 2005-01-11  John W. Eaton  <jwe@octave.org>
 
 	* DLD-FUNCTIONS/gplot.l (UNOP): Avoid trailing comment.
 
diff --git a/src/file-io.cc b/src/file-io.cc
--- a/src/file-io.cc
+++ b/src/file-io.cc
@@ -1792,17 +1792,17 @@ system-dependent error message.\n\
   else
     print_usage ("tmpfile");
 
   return retval;
 }
 
 DEFUN (mkstemp, args, ,
   "-*- texinfo -*-\n\
-@deftypefn {Built-in Function} {[@var{fid}, @var{name}, @var{msg}] =} tmpfile (@var{template}, @var{delete})\n\
+@deftypefn {Built-in Function} {[@var{fid}, @var{name}, @var{msg}] =} mkstemp (@var{template}, @var{delete})\n\
 Return the file ID corresponding to a new temporary file with a unique\n\
 name created from @var{template}.  The last six characters of @var{template}\n\
 must be @code{XXXXXX} and these are replaced with a string that makes the\n\
 filename unique.  The file is then created with mode read/write and\n\
 permissions that are system dependent (on GNU/Linux systems, the permissions\n\
 will be 0600 for versions of glibc 2.0.7 and later).  The file is opened\n\
 with the @code{O_EXCL} flag.\n\
 \n\
@@ -1836,17 +1836,17 @@ error message.\n\
 	  OCTAVE_LOCAL_BUFFER (char, tmp, tmpl8.size () + 1);
 	  strcpy (tmp, tmpl8.c_str ());
 
 	  int fd = mkstemp (tmp);
 
 	  if (fd < 0)
 	    {
 	      using namespace std;
-	      retval(1) = ::strerror (errno);
+	      retval(2) = ::strerror (errno);
 	      retval(0) = fd;
 	    }
 	  else
 	    {
 	      const char *fopen_mode = "w+";
 
 	      FILE *fid = fdopen (fd, fopen_mode);
 
@@ -1867,17 +1867,17 @@ error message.\n\
 			mark_for_deletion (nm);
 		    }
 		  else
 		    error ("mkstemp: failed to create octave_stdiostream object");
 		}
 	      else
 		{
 		  using namespace std;
-		  retval(1) = ::strerror (errno);
+		  retval(2) = ::strerror (errno);
 		  retval(0) = -1;
 		}
 	    }
 	}
       else
 	error ("mkstemp: expecting string as first argument");
     }
   else
