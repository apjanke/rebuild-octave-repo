# HG changeset patch
# User jwe
# Date 1076948563 0
#      Mon Feb 16 16:22:43 2004 +0000
# Node ID ef5e598f099b67e91b91b6f4190ef20d84260e94
# Parent  aef1e2d570550063f832dce04cf355a87e089100
[project @ 2004-02-16 16:22:43 by jwe]

diff --git a/liboctave/CNDArray.cc b/liboctave/CNDArray.cc
--- a/liboctave/CNDArray.cc
+++ b/liboctave/CNDArray.cc
@@ -322,17 +322,17 @@ ComplexNDArray::matrix_value (void) cons
 
     case 2:
       retval = ComplexMatrix (Array2<Complex> (*this, dimensions(0),
 					       dimensions(1)));
       break;
 
     default:
       (*current_liboctave_error_handler)
-	("invalid converstion of ComplexNDArray to ComplexMatrix");
+	("invalid conversion of ComplexNDArray to ComplexMatrix");
       break;
     }
 
   return retval;
 }
 
 void
 ComplexNDArray::increment_index (Array<int>& ra_idx,
diff --git a/liboctave/boolNDArray.cc b/liboctave/boolNDArray.cc
--- a/liboctave/boolNDArray.cc
+++ b/liboctave/boolNDArray.cc
@@ -76,17 +76,17 @@ boolNDArray::matrix_value (void) const
 
     case 2:
       retval = boolMatrix (Array2<bool> (*this, dimensions(0),
 					 dimensions(1)));
       break;
 
     default:
       (*current_liboctave_error_handler)
-	("invalid converstion of boolNDArray to boolMatrix");
+	("invalid conversion of boolNDArray to boolMatrix");
       break;
     }
 
   return retval;
 }
 
 void
 boolNDArray::increment_index (Array<int>& ra_idx,
diff --git a/liboctave/chNDArray.cc b/liboctave/chNDArray.cc
--- a/liboctave/chNDArray.cc
+++ b/liboctave/chNDArray.cc
@@ -69,17 +69,17 @@ charNDArray::matrix_value (void) const
 
     case 2:
       retval = charMatrix (Array2<char> (*this, dimensions(0),
 					       dimensions(1)));
       break;
 
     default:
       (*current_liboctave_error_handler)
-	("invalid converstion of charNDArray to charMatrix");
+	("invalid conversion of charNDArray to charMatrix");
       break;
     }
 
   return retval;
 }
 
 void
 charNDArray::increment_index (Array<int>& ra_idx,
diff --git a/liboctave/dNDArray.cc b/liboctave/dNDArray.cc
--- a/liboctave/dNDArray.cc
+++ b/liboctave/dNDArray.cc
@@ -266,17 +266,17 @@ NDArray::matrix_value (void) const
       break;
 
     case 2:
       retval = Matrix (Array2<double> (*this, dimensions(0), dimensions(1)));
       break;
 
     default:
       (*current_liboctave_error_handler)
-	("invalid converstion of NDArray to Matrix");
+	("invalid conversion of NDArray to Matrix");
       break;
     }
 
   return retval;
 }
 
 void
 NDArray::increment_index (Array<int>& ra_idx,
