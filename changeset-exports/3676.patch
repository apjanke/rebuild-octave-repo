# HG changeset patch
# User jwe
# Date 960475557 0
#      Thu Jun 08 14:45:57 2000 +0000
# Node ID b937a6953b5e4a73187b28c45026ee7b77613ec6
# Parent  59123cd0be83961774c56e4d0bba75c6bda5ae86
[project @ 2000-06-08 14:45:55 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,12 @@
+2000-06-08  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* sysdep.cc (Fkbhit): Also ask for input if forced_interactive.
+
 2000-06-07  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* Makefile.in (oct-gperf.h): Use $(GPERF) instead of gperf.
 
 2000-05-31  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* DLD-FUNCTIONS/qz.cc (Fqz): When computing finite generalized
 	eigenvalues, don't write past the end of the array.
diff --git a/src/sysdep.cc b/src/sysdep.cc
--- a/src/sysdep.cc
+++ b/src/sysdep.cc
@@ -425,17 +425,17 @@ x = kbhit (1);\n\
 identical to the above example, but don't wait for a keypress,\n\
 returning the empty string if no key is available.\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
   // XXX FIXME XXX -- add timeout and default value args?
 
-  if (interactive)
+  if (interactive || forced_interactive)
     {
       int c = kbhit (args.length () == 0);
 
       if (c == -1)
 	c = 0;
 
       char *s = new char [2];
       s[0] = c;
diff --git a/test/ChangeLog b/test/ChangeLog
--- a/test/ChangeLog
+++ b/test/ChangeLog
@@ -1,15 +1,23 @@
 2000-06-07  Ben Sapp <bsapp@nua.lampf.lanl.gov>
 
 	* octave.test/quad/quad-1.m: Use absolute value of difference
 	from expected value when comparing with sqrt (eps).  Potential
 	problems like this were noticed by Przemek Klosowski
 	<przemek@rrdjazz.nist.gov>.
 	* octave.test/quad/quad-2.m: Likewise.
+	* octave.test/arith/exp-1.m: Likewise.
+	* octave.test/linalg/cond-1.m: Likewise.
+	* octave.test/linalg/eig-1.m: Likewise.
+	* octave.test/linalg/eig-2.m: Likewise.
+	* octave.test/linalg/inv-1.m: Likewise.
+	* octave.test/linalg/lu-2.m: Likewise.
+	* octave.test/linalg/svd-2.m: Likewise.
+	* octave.test/linalg/svd-10.m: Likewise.
 
 1999-10-29  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* octave.test/system/mktime-1.m (t): Compare whole seconds only.
 
 Fri Dec  4 20:55:47 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* octave.test/system/clock-1.m: Use standard format specifiers %d
diff --git a/test/octave.test/arith/exp-1.m b/test/octave.test/arith/exp-1.m
--- a/test/octave.test/arith/exp-1.m
+++ b/test/octave.test/arith/exp-1.m
@@ -1,1 +1,1 @@
-all (exp ([0, 1, -1, -1000]) - [1, e, 1/e, 0] < sqrt (eps))
+all (abs (exp ([0, 1, -1, -1000]) - [1, e, 1/e, 0]) < sqrt (eps))
diff --git a/test/octave.test/linalg/cond-1.m b/test/octave.test/linalg/cond-1.m
--- a/test/octave.test/linalg/cond-1.m
+++ b/test/octave.test/linalg/cond-1.m
@@ -1,1 +1,1 @@
-cond ([1, 2; 2, 1]) - 3 < sqrt (eps)
+abs (cond ([1, 2; 2, 1]) - 3) < sqrt (eps)
diff --git a/test/octave.test/linalg/eig-1.m b/test/octave.test/linalg/eig-1.m
--- a/test/octave.test/linalg/eig-1.m
+++ b/test/octave.test/linalg/eig-1.m
@@ -1,1 +1,1 @@
-all (eig ([1, 2; 2, 1]) - [-1; 3] < sqrt (eps))
+all (abs (eig ([1, 2; 2, 1]) - [-1; 3]) < sqrt (eps))
diff --git a/test/octave.test/linalg/eig-2.m b/test/octave.test/linalg/eig-2.m
--- a/test/octave.test/linalg/eig-2.m
+++ b/test/octave.test/linalg/eig-2.m
@@ -1,4 +1,4 @@
 [v, d] = eig ([1, 2; 2, 1]);
 x = 1 / sqrt (2);
-(abs (d - [-1, 0; 0, 3] < sqrt (eps))
- && abs (v - [-x, x; x, x] < sqrt (eps)))
+((abs (d - [-1, 0; 0, 3]) < sqrt (eps))
+ && (abs (v - [-x, x; x, x]) < sqrt (eps)))
diff --git a/test/octave.test/linalg/inv-1.m b/test/octave.test/linalg/inv-1.m
--- a/test/octave.test/linalg/inv-1.m
+++ b/test/octave.test/linalg/inv-1.m
@@ -1,1 +1,1 @@
-all (all (inv ([1, 2; 3, 4]) - [-2, 1; 1.5, -0.5] < sqrt (eps)))
+all (all (abs (inv ([1, 2; 3, 4]) - [-2, 1; 1.5, -0.5]) < sqrt (eps)))
diff --git a/test/octave.test/linalg/lu-2.m b/test/octave.test/linalg/lu-2.m
--- a/test/octave.test/linalg/lu-2.m
+++ b/test/octave.test/linalg/lu-2.m
@@ -1,3 +1,3 @@
 [l, u] = lu ([1, 2; 3, 4])
-(abs (l - [1/3, 1; 1, 0] < sqrt (eps))
- && abs (u - [3, 4; 0, 2/3] < sqrt (eps)))
+((abs (l - [1/3, 1; 1, 0]) < sqrt (eps))
+ && abs (u - [3, 4; 0, 2/3]) < sqrt (eps))
diff --git a/test/octave.test/linalg/svd-10.m b/test/octave.test/linalg/svd-10.m
--- a/test/octave.test/linalg/svd-10.m
+++ b/test/octave.test/linalg/svd-10.m
@@ -1,1 +1,1 @@
-all (svd ([eye(3), eye(3)]) - [rt2; rt2; rt2] < sqrt (eps))
+all (abs (svd ([eye(3), eye(3)]) - [rt2; rt2; rt2]) < sqrt (eps))
diff --git a/test/octave.test/linalg/svd-2.m b/test/octave.test/linalg/svd-2.m
--- a/test/octave.test/linalg/svd-2.m
+++ b/test/octave.test/linalg/svd-2.m
@@ -1,5 +1,5 @@
 [u, s, v] = svd ([1, 2; 2, 1]);
 x = 1 / sqrt (2);
-(abs (u - [-x, -x; -x, x] < sqrt (eps))
- && abs (s - [3, 0; 0, 1] < sqrt (eps))
- && abs (v - [-x, x; -x, -x] < sqrt (eps)))
+((abs (u - [-x, -x; -x, x]) < sqrt (eps))
+ && (abs (s - [3, 0; 0, 1]) < sqrt (eps))
+ && (abs (v - [-x, x; -x, -x]) < sqrt (eps)))
