# HG changeset patch
# User Rik <rik@octave.org>
# Date 1481239378 28800
#      Thu Dec 08 15:22:58 2016 -0800
# Node ID 2830a770405b8bb6321c713242df9f8f77135621
# Parent  551ac93c984c19d89c0601d22871d1d075ac75e5
maint: Fix up more for loops with range operators in liboctave.

* cmd-edit.cc, oct-shlib.cc, singleton-cleanup.cc:
Use better declarations of range operators in for loops for clarity.

diff --git a/liboctave/util/cmd-edit.cc b/liboctave/util/cmd-edit.cc
--- a/liboctave/util/cmd-edit.cc
+++ b/liboctave/util/cmd-edit.cc
@@ -1103,54 +1103,48 @@ namespace octave
   command_editor::insert_initial_input (void)
   {
     return instance_ok () ? instance->do_insert_initial_input () : 0;
   }
 
   int
   command_editor::startup_handler (void)
   {
-    for (auto& fcnptr : startup_hook_set)
+    for (startup_hook_fcn f : startup_hook_set)
       {
-        startup_hook_fcn f = *fcnptr;
-
         if (f)
           f ();
       }
 
     return 0;
   }
 
   int
   command_editor::pre_input_handler (void)
   {
-    for (auto& fcnptr : pre_input_hook_set)
+    for (pre_input_hook_fcn f : pre_input_hook_set)
       {
-        pre_input_hook_fcn f = *fcnptr;
-
         if (f)
           f ();
       }
 
     return 0;
   }
 
   int
   command_editor::event_handler (void)
   {
     event_hook_lock.lock ();
 
     std::set<event_hook_fcn> hook_set (event_hook_set);
 
     event_hook_lock.unlock ();
 
-    for (auto& fcnptr : hook_set)
+    for (event_hook_fcn f : hook_set)
       {
-        event_hook_fcn f = *fcnptr;
-
         if (f)
           f ();
       }
 
     return 0;
   }
 
   void
diff --git a/liboctave/util/oct-shlib.cc b/liboctave/util/oct-shlib.cc
--- a/liboctave/util/oct-shlib.cc
+++ b/liboctave/util/oct-shlib.cc
@@ -139,18 +139,18 @@ namespace octave
       }
 
     return retval;
   }
 
   void
   dynamic_library::dynlib_rep::do_close_hook (dynamic_library::close_hook cl_hook)
   {
-    for (auto& fcn_sz_p : fcn_names)
-      cl_hook (fcn_sz_p.first);
+    for (auto& fcn_sz : fcn_names)
+      cl_hook (fcn_sz.first);
 
     fcn_names.clear ();
   }
 
   std::map<std::string, dynamic_library::dynlib_rep *>
     dynamic_library::dynlib_rep::instances;
 
   dynamic_library::dynlib_rep dynamic_library::nil_rep;
diff --git a/liboctave/util/singleton-cleanup.cc b/liboctave/util/singleton-cleanup.cc
--- a/liboctave/util/singleton-cleanup.cc
+++ b/liboctave/util/singleton-cleanup.cc
@@ -26,20 +26,18 @@ along with Octave; see the file COPYING.
 
 #include <lo-error.h>
 #include <singleton-cleanup.h>
 
 singleton_cleanup_list *singleton_cleanup_list::instance = 0;
 
 singleton_cleanup_list::~singleton_cleanup_list (void)
 {
-  for (auto fcnptr : fcn_list)
+  for (fptr fcn : fcn_list)
     {
-      fptr fcn = *fcnptr;
-
       fcn ();
     }
 }
 
 bool
 singleton_cleanup_list::instance_ok (void)
 {
   bool retval = true;
