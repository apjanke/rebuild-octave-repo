# HG changeset patch
# User jwe
# Date 1020222114 0
#      Wed May 01 03:01:54 2002 +0000
# Node ID cdfbc6678c2383c2697db0a79aa8fac0957f14c5
# Parent  fe7cbb23cb83f4406a9c650f246a536a8f886d45
[project @ 2002-05-01 03:01:54 by jwe]

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+2002-04-30  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* DASSL.h (DASSL_options::init): Undo previous change.
+	(DASSL_options::set_absolute_tolerance): Likewise.
+
 2002-04-27  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* DASPK.h, DASPK.cc: New files.
 	* Makefile.in: Add them to the appropriate lists.
 
 2002-04-23  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* Array2-idx.h (Array2<T>::index (idx_vector&, idx_vector&) const):
diff --git a/liboctave/DASSL.h b/liboctave/DASSL.h
--- a/liboctave/DASSL.h
+++ b/liboctave/DASSL.h
@@ -48,17 +48,17 @@ public:
 
       return *this;
     }
 
   ~DASSL_options (void) { }
 
   void init (void)
     {
-      x_absolute_tolerance = DBL_EPSILON * DBL_EPSILON;
+      x_absolute_tolerance = sqrt (DBL_EPSILON);
       x_initial_step_size = -1.0;
       x_maximum_step_size = -1.0;
       x_minimum_step_size = 0.0;
       x_relative_tolerance = sqrt (DBL_EPSILON);
     }
 
   void copy (const DASSL_options& opt)
     {
@@ -67,17 +67,17 @@ public:
       x_maximum_step_size = opt.x_maximum_step_size;
       x_minimum_step_size = opt.x_minimum_step_size;
       x_relative_tolerance = opt.x_relative_tolerance;
     }
 
   void set_default_options (void) { init (); }
 
   void set_absolute_tolerance (double val)
-    { x_absolute_tolerance = (val > 0.0) ? val : DBL_EPSILON * DBL_EPSILON; }
+    { x_absolute_tolerance = (val > 0.0) ? val : ::sqrt (DBL_EPSILON); }
 
   void set_initial_step_size (double val)
     { x_initial_step_size = (val >= 0.0) ? val : -1.0; }
 
   void set_maximum_step_size (double val)
     { x_maximum_step_size = (val >= 0.0) ? val : -1.0; }
 
   void set_minimum_step_size (double val)
