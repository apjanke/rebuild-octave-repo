# HG changeset patch
# User jwe
# Date 1035578175 0
#      Fri Oct 25 20:36:15 2002 +0000
# Node ID 919b2f6573ee927109d7f7a85584a33d4874b6e8
# Parent  e07466fb2458c3a6a750e1197533dbbb243c92ce
[project @ 2002-10-25 20:36:14 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,10 +1,19 @@
 2002-10-25  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* configure.in (ENABLE_DYNAMIC_LINKING): Rename from
+	WITH_DYNAMIC_LINKING.
+	* Makeconf.in: Likewise.
+	* toplev.cc 
+	* examples/hello.cc: Likewise.  Improve comments.
+
+	* configure.in: Revive --enable-dl to set default value for
+	WITH_DYNAMIC_LINKING.
+
 	* configure.in: Also set SHLEXT_VER, SHLLIB_VER, SHLBIN_VER.
 	* Makeconf.in: Substitute them here.
 	Also substitute SHLLINKEXT.
 
 2002-10-25  Per Persson <persquare@mac.com>
 
 	* aclocal.m4 (OCTAVE_CXX_PRAGMA_INTERFACE_IMPLEMENTATION): Fix
 	first test to properly fail on OS X.  Fix typo in final test to
diff --git a/Makeconf.in b/Makeconf.in
--- a/Makeconf.in
+++ b/Makeconf.in
@@ -49,17 +49,17 @@ RUNTEST = @RUNTEST@
 TEXI2DVI = $(top_srcdir)/texi2dvi
 
 DEFAULT_PAGER = @DEFAULT_PAGER@
 
 HAVE_DLOPEN_API = @HAVE_DLOPEN_API@
 HAVE_SHL_LOAD_API = @HAVE_SHL_LOAD_API@
 HAVE_LOADLIBRARY_API = @HAVE_LOADLIBRARY_API@
 
-WITH_DYNAMIC_LINKING = @WITH_DYNAMIC_LINKING@
+ENABLE_DYNAMIC_LINKING = @ENABLE_DYNAMIC_LINKING@
 
 STATIC_LIBS = @STATIC_LIBS@
 
 SHARED_LIBS = @SHARED_LIBS@
 SHLEXT = @SHLEXT@
 SHLEXT_VER = @SHLEXT_VER@
 SHLLIB = @SHLLIB@
 SHLLIB_VER = @SHLLIB_VER@
@@ -425,17 +425,17 @@ echo "making $@ from $<"
   -e "s;%OCTAVE_CONF_SHLLINKEXT%;\"${SHLLINKEXT}\";" \
   -e "s;%OCTAVE_CONF_SHLEXT_VER%;\"${SHLEXT_VER}\";" \
   -e "s;%OCTAVE_CONF_SH_LD%;\"${SH_LD}\";" \
   -e "s;%OCTAVE_CONF_SH_LDFLAGS%;\"${SH_LDFLAGS}\";" \
   -e "s;%OCTAVE_CONF_SONAME_FLAGS%;\"${SONAME_FLAGS}\";" \
   -e "s;%OCTAVE_CONF_STATIC_LIBS%;\"${STATIC_LIBS}\";" \
   -e "s;%OCTAVE_CONF_UGLY_DEFS%;\"${UGLY_DEFS}\";" \
   -e "s;%OCTAVE_CONF_VERSION%;\"${version}\";" \
-  -e "s;%OCTAVE_CONF_WITH_DYNAMIC_LINKING%;\"${WITH_DYNAMIC_LINKING}\";" \
+  -e "s;%OCTAVE_CONF_ENABLE_DYNAMIC_LINKING%;\"${ENABLE_DYNAMIC_LINKING}\";" \
   -e "s;%OCTAVE_CONF_XTRA_CFLAGS%;\"${XTRA_CFLAGS}\";" \
   -e "s;%OCTAVE_CONF_XTRA_CXXFLAGS%;\"${XTRA_CXXFLAGS}\";" \
   -e "s;%OCTAVE_CONF_YACC%;\"${YACC}\";" \
   -e "s;%OCTAVE_CONF_YFLAGS%;\"${YFLAGS}\";" \
   -e "s;%OCTAVE_CONF_config_opts%;\"${config_opts}\";" | \
   $(SED)  -e "s;%OCTAVE_CONF_DEFS%;\"${UGLY_DEFS}\";" > $@-t
 $(top_srcdir)/move-if-change $@-t $@
 endef
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -17,17 +17,17 @@ dnl Copyright (C) 1996, 1997 John W. Eat
 ### for more details.
 ### 
 ### You should have received a copy of the GNU General Public License
 ### along with Octave; see the file COPYING.  If not, write to the Free
 ### Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ### 02111-1307, USA. 
 
 AC_INIT
-AC_REVISION($Revision: 1.382 $)
+AC_REVISION($Revision: 1.383 $)
 AC_PREREQ(2.52)
 AC_CONFIG_SRCDIR([src/octave.cc])
 AC_CONFIG_HEADER(config.h)
 
 AC_DEFINE(OCTAVE_SOURCE, 1, [Define if this is Octave.])
   
 OCTAVE_HOST_TYPE
 
@@ -591,16 +591,27 @@ AC_SUBST(STATIC_LIBS)
 
 AC_ARG_ENABLE(shared,
   [  --enable-shared         create shared libraries (not all systems)],
   [if test "$enableval" = no; then SHARED_LIBS=false;
    else SHARED_LIBS=true; fi],
   SHARED_LIBS=false)
 AC_SUBST(SHARED_LIBS)
 
+### Enable dynamic linking.  --enable-shared implies this, so
+### --enable-dl is only need if you are only building static libraries
+### and want to try dynamic linking too (works on some systems, for
+### example, OS X and Windows).
+
+AC_ARG_ENABLE(dl,
+  [  --enable-dl             create shared libraries (not all systems)],
+  [if test "$enableval" = no; then ENABLE_DYNAMIC_LINKING=false;
+   else ENABLE_DYNAMIC_LINKING=true; fi],
+  ENABLE_DYNAMIC_LINKING=false)
+
 if $STATIC_LIBS || $SHARED_LIBS; then
   true
 else
   AC_MSG_ERROR([You can't disable building static AND shared libraries!])
 fi
 
 use_rpath=true
 AC_ARG_ENABLE(rpath,
@@ -892,17 +903,16 @@ OCTAVE_SMART_PUTENV
 
 ### Dynamic linking is now enabled only if we are building shared
 ### libs and some API for dynamic linking is detected.
 
 LD_CXX='$(CXX)'
 LIBDLFCN=
 DLFCN_INCFLAGS=
 RDYNAMIC_FLAG=
-WITH_DYNAMIC_LINKING=false
 DL_API_MSG=""
 dlopen_api=false
 shl_load_api=false
 loadlibrary_api=false
 if $SHARED_LIBS; then
 
   LIBOCTINTERP=-loctinterp$SHLLINKEXT
   LIBOCTAVE=-loctave$SHLLINKEXT
@@ -948,29 +958,29 @@ if $SHARED_LIBS; then
     DL_API_MSG="(shl_load)"
     AC_DEFINE(HAVE_SHL_LOAD_API, 1, [Define if your system has shl_load and shl_findsym for dynamic linking])
   elif $loadlibrary_api; then
     DL_API_MSG="(LoadLibrary)"
     AC_DEFINE(HAVE_LOADLIBRARY_API, 1, [Define if your system has LoadLibrary for dynamic linking])
   fi
 
   if $dlopen_api || $shl_load_api || $loadlibrary_api; then
-    WITH_DYNAMIC_LINKING=true
-    AC_DEFINE(WITH_DYNAMIC_LINKING, 1, [Define if using dynamic linking])
+    ENABLE_DYNAMIC_LINKING=true
+    AC_DEFINE(ENABLE_DYNAMIC_LINKING, 1, [Define if using dynamic linking])
   fi
 else
   LIBOCTINTERP='$(TOPDIR)/src/liboctinterp.$(LIBEXT)'
   LIBOCTAVE='$(TOPDIR)/liboctave/liboctave.$(LIBEXT)'
   LIBCRUFT='$(TOPDIR)/libcruft/libcruft.$(LIBEXT)'
 fi
 AC_SUBST(LD_CXX)
 AC_SUBST(LIBDLFCN)
 AC_SUBST(DLFCN_INCFLAGS)
 AC_SUBST(RDYNAMIC_FLAG)
-AC_SUBST(WITH_DYNAMIC_LINKING)
+AC_SUBST(ENABLE_DYNAMIC_LINKING)
 AC_SUBST(LIBOCTINTERP)
 AC_SUBST(LIBOCTAVE)
 AC_SUBST(LIBCRUFT)
 
 ### There is more than one possible prototype for gettimeofday.  See
 ### which one (if any) appears in sys/time.h.  These tests are from
 ### Emacs 19.
 
@@ -1346,17 +1356,17 @@ Octave is now configured for $canonical_
   HDF5 libraries:       $HDF5_LIBS
   LIBS:                 $LIBS
   Default pager:        $DEFAULT_PAGER
   gnuplot:              $GNUPLOT_BINARY
 
   Do internal array bounds checking:  $BOUNDS_CHECKING
   Build static libraries:             $STATIC_LIBS
   Build shared libraries:             $SHARED_LIBS
-  Dynamic Linking:                    $WITH_DYNAMIC_LINKING $DL_API_MSG
+  Dynamic Linking:                    $ENABLE_DYNAMIC_LINKING $DL_API_MSG
   Include support for GNU readline:   $USE_READLINE
 ])
 
 warn_msg_printed=false
 
 if test -n "$warn_f77_and_g77"; then
   AC_MSG_WARN($warn_f77_and_g77)
   warn_msg_printed=true
diff --git a/examples/hello.cc b/examples/hello.cc
--- a/examples/hello.cc
+++ b/examples/hello.cc
@@ -1,17 +1,17 @@
 // hello.cc -- example of a dynamically linked function for Octave.
 
 // To use this file, your version of Octave must support dynamic
 // linking.  To find out if it does, type the command
 //
-//   x = octave_config_info; x.DEFS
+//   octave_config_info ("ENABLE_DYNAMIC_LINKING")
 //
 // at the Octave prompt.  Support for dynamic linking is included if
-// the output contains the string -DWITH_DYNAMIC_LINKING=1.
+// this expression returns the string "true".
 //
 // To compile this file, type the command
 //
 //   mkoctfile hello.cc
 //
 // at the shell prompt.  The script mkoctfile should have been
 // installed along with Octave.  Running it will create a file called
 // hello.oct that can be loaded by Octave.  To test the hello.oct
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,17 @@
+2002-10-25  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* toplev.cc (octave_config_info): Rename WITH_DYNAMIC_LINKING to
+	ENABLE_DYNAMIC_LINKING.
+	* oct-conf.h.in: Likewise.
+	* mkbuiltins: Likewise.
+	* fn-cache.cc (file_name_cache_elt::update): Likewise.
+	* Makefile.in: Likewise.
+
 2002-10-24  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* cutils.c (octave_vsnprintf): Buffer and buffer size now static.
 	* utils.cc (octave_vformat): Don't free buffer returned from
 	octave_vsnprintf here.
 
 	* ov-usr-fcn.cc (va_arg, va_start, vr_val): Only print warning
 	once per session.
diff --git a/src/Makefile.in b/src/Makefile.in
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -24,17 +24,17 @@ CXXFLAGS_NO_PT_FLAGS = $(filter-out $(PT
 %.df : %.cc
 	@echo making $@ from $<
 	@$(CXXCPP) $(CPPFLAGS) $(CXXFLAGS_NO_PT_FLAGS) -DMAKE_BUILTINS $< \
 	  | $(srcdir)/mkdefs > $@-t
 	@mv $@-t $@
 
 # How to make a .oct file from a .o file:
 
-ifeq ($(WITH_DYNAMIC_LINKING), true)
+ifeq ($(ENABLE_DYNAMIC_LINKING), true)
   ifdef CXXPICFLAG
     %.oct : pic/%.o
 	  $(SH_LD) $(SH_LDFLAGS) -o $@ $< $(OCT_LINK_DEPS)
   else
     %.oct : %.o
 	  $(SH_LD) $(SH_LDFLAGS) -o $@ $< $(OCT_LINK_DEPS)
   endif
 endif
@@ -50,17 +50,17 @@ DLD_XSRC := balance.cc besselj.cc betain
 	inv.cc kron.cc log.cc lpsolve.cc lsode.cc lu.cc minmax.cc \
 	odessa.cc pinv.cc qr.cc quad.cc qz.cc rand.cc schur.cc \
 	sort.cc svd.cc syl.cc time.cc
 
 DLD_SRC := $(addprefix DLD-FUNCTIONS/, $(DLD_XSRC))
 
 DLD_OBJ := $(patsubst %.cc, %.o, $(DLD_XSRC))
 
-ifeq ($(WITH_DYNAMIC_LINKING), true)
+ifeq ($(ENABLE_DYNAMIC_LINKING), true)
   OCT_FILES := $(patsubst %.o, %.oct, $(DLD_OBJ))
   ifdef CXXPICFLAG
     DLD_PICOBJ := $(addprefix pic/, $(DLD_OBJ))
   else
     DLD_PICOBJ := $(DLD_OBJ)
   endif
 else
   DLD_STATIC_OBJ := $(DLD_OBJ)
diff --git a/src/fn-cache.cc b/src/fn-cache.cc
--- a/src/fn-cache.cc
+++ b/src/fn-cache.cc
@@ -199,17 +199,17 @@ file_name_cache_elt::update (const std::
 	      int k = 0;
 	      int i;
 	      for (i = 0; i < max_len; i++)
 		{
 		  std::string entry = tmp[i];
 
 		  int len = entry.length ();
 
-#if defined (WITH_DYNAMIC_LINKING)
+#if defined (ENABLE_DYNAMIC_LINKING)
 		  if ((len > 2
 		       && entry[len-2] == '.' && entry[len-1] == 'm')
 		      || (len > 4
 			  && entry[len-4] == '.' && entry[len-3] == 'o'
 			  && entry[len-2] == 'c' && entry[len-1] == 't'))
 #else
 		  if (len > 2
 		      && entry[len-2] == '.' && entry[len-1] == 'm')
diff --git a/src/mkbuiltins b/src/mkbuiltins
--- a/src/mkbuiltins
+++ b/src/mkbuiltins
@@ -28,17 +28,17 @@ cat << \EOF
 #include "defun.h"
 #include "oct-obj.h"
 #include "variables.h"
 
 #if defined (quad)
 #undef quad
 #endif
 
-#if defined (WITH_DYNAMIC_LINKING)
+#if defined (ENABLE_DYNAMIC_LINKING)
 #define XDEFUN_DLD_INTERNAL(name, args_name, nargout_name, is_text_fcn, doc)
 #else
 #define XDEFUN_DLD_INTERNAL(name, args_name, nargout_name, is_text_fcn, doc) \
   XDEFUN_INTERNAL(name, args_name, nargout_name, is_text_fcn, doc)
 #endif
 
 #define XDEFUN_INTERNAL(name, args_name, nargout_name, is_text_fcn, doc) \
   extern DECLARE_FUN (name, args_name, nargout_name); \
diff --git a/src/oct-conf.h.in b/src/oct-conf.h.in
--- a/src/oct-conf.h.in
+++ b/src/oct-conf.h.in
@@ -287,18 +287,18 @@ Software Foundation, 59 Temple Place - S
 #ifndef OCTAVE_CONF_STATIC_LIBS
 #define OCTAVE_CONF_STATIC_LIBS %OCTAVE_CONF_STATIC_LIBS%
 #endif
 
 #ifndef OCTAVE_CONF_UGLY_DEFS
 #define OCTAVE_CONF_UGLY_DEFS %OCTAVE_CONF_UGLY_DEFS%
 #endif
 
-#ifndef OCTAVE_CONF_WITH_DYNAMIC_LINKING
-#define OCTAVE_CONF_WITH_DYNAMIC_LINKING %OCTAVE_CONF_WITH_DYNAMIC_LINKING%
+#ifndef OCTAVE_CONF_ENABLE_DYNAMIC_LINKING
+#define OCTAVE_CONF_ENABLE_DYNAMIC_LINKING %OCTAVE_CONF_ENABLE_DYNAMIC_LINKING%
 #endif
 
 #ifndef OCTAVE_CONF_XTRA_CFLAGS
 #define OCTAVE_CONF_XTRA_CFLAGS %OCTAVE_CONF_XTRA_CFLAGS%
 #endif
 
 #ifndef OCTAVE_CONF_XTRA_CXXFLAGS
 #define OCTAVE_CONF_XTRA_CXXFLAGS %OCTAVE_CONF_XTRA_CXXFLAGS%
diff --git a/src/toplev.cc b/src/toplev.cc
--- a/src/toplev.cc
+++ b/src/toplev.cc
@@ -637,17 +637,17 @@ information for Octave.\n\
 \n\
 if @var{option} is a string, return the configuration information for the\n\
 specified option.\n\
 \n\
 @end deftypefn")
 {
   octave_value retval;
 
-#if defined (WITH_DYNAMIC_LINKING)
+#if defined (ENABLE_DYNAMIC_LINKING)
   bool octave_supports_dynamic_linking = true;
 #else
   bool octave_supports_dynamic_linking = false;
 #endif
 
   Octave_map m;
 
   m ["ALL_CFLAGS"] = OCTAVE_CONF_ALL_CFLAGS;
@@ -712,17 +712,17 @@ specified option.\n\
   m ["SHLEXT"] = OCTAVE_CONF_SHLEXT;
   m ["SHLEXT_VER"] = OCTAVE_CONF_SHLEXT_VER;
   m ["SH_LD"] = OCTAVE_CONF_SH_LD;
   m ["SH_LDFLAGS"] = OCTAVE_CONF_SH_LDFLAGS;
   m ["SONAME_FLAGS"] = OCTAVE_CONF_SONAME_FLAGS;
   m ["STATIC_LIBS"] = OCTAVE_CONF_STATIC_LIBS;
   m ["UGLY_DEFS"] = OCTAVE_CONF_DEFS;
   m ["UGLY_DEFS"] = OCTAVE_CONF_UGLY_DEFS;
-  m ["WITH_DYNAMIC_LINKING"] = OCTAVE_CONF_WITH_DYNAMIC_LINKING;
+  m ["ENABLE_DYNAMIC_LINKING"] = OCTAVE_CONF_ENABLE_DYNAMIC_LINKING;
   m ["XTRA_CFLAGS"] = OCTAVE_CONF_XTRA_CFLAGS;
   m ["XTRA_CXXFLAGS"] = OCTAVE_CONF_XTRA_CXXFLAGS;
   m ["YACC"] = OCTAVE_CONF_YACC;
   m ["YFLAGS"] = OCTAVE_CONF_YFLAGS;
   m ["archlibdir"] = OCTAVE_ARCHLIBDIR;
   m ["bindir"] = OCTAVE_BINDIR;
   m ["canonical_host_type"] = OCTAVE_CANONICAL_HOST_TYPE;
   m ["config_opts"] = OCTAVE_CONF_config_opts;
