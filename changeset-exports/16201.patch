# HG changeset patch
# User Rik <rik@octave.org>
# Date 1362596172 28800
#      Wed Mar 06 10:56:12 2013 -0800
# Node ID 2338a92e97826da02ecdc5a677f83129821e7890
# Parent  743b895259e06cdf802a31e8d4aab0001084d938
Fix spacing between ylabel and y-axis (bug #38461)

* libinterp/interp-core/txt-eng-ft.cc: Add comment about
how get_extent calculates the x and y extents differently.

* libinterp/interpfcn/graphics.cc(update_ylabel_position):
Add padding to x-extent because it is caluclated differently than y-extent
which already includes some padding.

diff --git a/libinterp/interp-core/txt-eng-ft.cc b/libinterp/interp-core/txt-eng-ft.cc
--- a/libinterp/interp-core/txt-eng-ft.cc
+++ b/libinterp/interp-core/txt-eng-ft.cc
@@ -559,16 +559,21 @@ ft_render::render (text_element* elt, Ma
             }
           break;
         }
     }
 
   return pixels;
 }
 
+// Note:
+// x-extent accurately measures width of glyphs.
+// y-extent is overly large because it is measured from baseline-to-baseline.
+// Calling routines, such as ylabel, may need to account for this mismatch.
+
 Matrix
 ft_render::get_extent (text_element *elt, double rotation)
 {
   set_mode (MODE_BBOX);
   elt->accept (*this);
 
   Matrix extent (1, 2, 0.0);
 
diff --git a/libinterp/interpfcn/graphics.cc b/libinterp/interpfcn/graphics.cc
--- a/libinterp/interpfcn/graphics.cc
+++ b/libinterp/interpfcn/graphics.cc
@@ -5189,21 +5189,30 @@ axes::properties::update_ylabel_position
     }
 
   if (ylabel_props.positionmode_is ("auto")
       || ylabel_props.rotationmode_is ("auto"))
     {
       graphics_xform xform = get_transform ();
 
       Matrix ext (1, 2, 0.0);
+
+      // The underlying get_extents() from FreeType produces mismatched values.
+      // x-extent accurately measures the width of the glyphs.
+      // y-extent instead measures from baseline-to-baseline.
+      // Pad x-extent (+4) so that it approximately matches y-extent.
+      // This keeps ylabels about the same distance from y-axis as
+      // xlabels are from x-axis.
+      // ALWAYS use an even number for padding or horizontal alignment
+      // will be off.
       ext = get_ticklabel_extents (get_ytick ().matrix_value (),
                                    get_yticklabel ().all_strings (),
                                    get_ylim ().matrix_value ());
 
-      double wmax = ext(0), hmax = ext(1), angle = 0;
+      double wmax = ext(0)+4, hmax = ext(1), angle = 0;
       ColumnVector p =
         graphics_xform::xform_vector (xpTick, (ypTickN+ypTick)/2, zpTick);
 
       bool tick_along_z = nearhoriz || xisinf (fx);
       if (tick_along_z)
         p(2) += (signum (zpTick-zpTickN)*fz*ytickoffset);
       else
         p(0) += (signum (xpTick-xpTickN)*fx*ytickoffset);
