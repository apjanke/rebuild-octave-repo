# HG changeset patch
# User jwe
# Date 1187987372 0
#      Fri Aug 24 20:29:32 2007 +0000
# Node ID abe21f30e1fe0937f17a97edba5ca283fdb6a6ea
# Parent  6c85f7d37e6154775c055e65985d25e1630c70af
[project @ 2007-08-24 20:29:32 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -11,19 +11,19 @@ 2007-08-24  David Bateman  <dbateman@fre
 	* graphics.h (class text): Add property color.
 	* graphics.cc (text::text_properties::text_properties) ditto.
 	(text::text_properties::set): ditto.
 	(text::text_properties::get): ditto.
 	(text::text_properties::factory_defaults): ditto.
 
 2007-08-24  John W. Eaton  <jwe@octave.org>
 
-	* mappers.cc (octave_is_NA (int), xisnan (int)): New functions.
-	(install_mapper_functions): Use them to handle character data in
-	isna and isnan functions.
+	* mappers.cc (dummyp): New function.
+	(install_mapper_functions): Use it to handle character data in
+	finite, isinf, isna, and isnan functions.
 
 	* load-path.cc (load_path::do_remove): Call remove_hook function
 	before removing directory from list.
 
 2007-08-24  David Bateman  <dbateman@free.fr>
 
         * ov-bool-sparse.cc (DEFINE_OV_TYPEID_FUNCTIONS_AND_DATA): Class
         is now logical.
diff --git a/src/mappers.cc b/src/mappers.cc
--- a/src/mappers.cc
+++ b/src/mappers.cc
@@ -162,23 +162,17 @@ ximag (const Complex& x)
 
 static double
 xreal (const Complex& x)
 {
   return x.real ();
 }
 
 static int
-octave_is_NA (int)
-{
-  return 0;
-}
-
-static int
-xisnan (int)
+xdummyp (int)
 {
   return 0;
 }
 
 void
 install_mapper_functions (void)
 {
   DEFUN_MAPPER (abs, xabs, 0, 0, fabs, xabs, 0, 0.0, 0.0, 1, 0,
@@ -347,17 +341,17 @@ Computes the complementary error functio
 
   DEFUN_MAPPER (exp, 0, 0, 0, exp, 0, std::exp, 0.0, 0.0, 0, 0,
     "-*- texinfo -*-\n\
 @deftypefn {Mapping Function} {} exp (@var{x})\n\
 Compute the exponential of @var{x}.  To compute the matrix exponential,\n\
 see @ref{Linear Algebra}.\n\
 @end deftypefn");
 
-  DEFUN_MAPPER (finite, 0, xfinite, xfinite, 0, 0, 0, 0.0, 0.0, 0, 0,
+  DEFUN_MAPPER (finite, dummyp, xfinite, xfinite, 0, 0, 0, 0.0, 0.0, 0, 0,
     "-*- texinfo -*-\n\
 @deftypefn {Mapping Function} {} finite (@var{x})\n\
 Return 1 for elements of @var{x} that are finite values and zero\n\
 otherwise. For example,\n\
 \n\
 @example\n\
 @group\n\
 finite ([13, Inf, NA, NaN])\n\
@@ -443,17 +437,17 @@ Return 1 for control characters.\n\
 @end deftypefn");
 
   DEFUN_MAPPER (isdigit, xisdigit, 0, 0, 0, 0, 0, 0.0, 0.0, 0, 0,
     "-*- texinfo -*-\n\
 @deftypefn {Mapping Function} {} isdigit (@var{s})\n\
 Return 1 for characters that are decimal digits.\n\
 @end deftypefn");
 
-  DEFUN_MAPPER (isinf, 0, xisinf, xisinf, 0, 0, 0, 0.0, 0.0, 0, 0,
+  DEFUN_MAPPER (isinf, dummyp, xisinf, xisinf, 0, 0, 0, 0.0, 0.0, 0, 0,
     "-*- texinfo -*-\n\
 @deftypefn {Mapping Function} {} isinf (@var{x})\n\
 Return 1 for elements of @var{x} that are infinite and zero\n\
 otherwise. For example,\n\
 \n\
 @example\n\
 @group\n\
 isinf ([13, Inf, NA, NaN])\n\
@@ -469,31 +463,31 @@ Return 1 for printable characters (but n
 @end deftypefn");
 
   DEFUN_MAPPER (islower, xislower, 0, 0, 0, 0, 0, 0.0, 0.0, 0, 0,
     "-*- texinfo -*-\n\
 @deftypefn {Mapping Function} {} islower (@var{s})\n\
 Return 1 for characters that are lower case letters.\n\
 @end deftypefn");
 
-  DEFUN_MAPPER (isna, octave_is_NA, octave_is_NA, octave_is_NA, 0, 0, 0, 0.0, 0.0, 0, 0,
+  DEFUN_MAPPER (isna, dummyp, octave_is_NA, octave_is_NA, 0, 0, 0, 0.0, 0.0, 0, 0,
     "-*- texinfo -*-\n\
 @deftypefn {Mapping Function} {} isna (@var{x})\n\
 Return 1 for elements of @var{x} that are NA (missing) values and zero\n\
 otherwise.  For example,\n\
 \n\
 @example\n\
 @group\n\
 isna ([13, Inf, NA, NaN])\n\
      @result{} [ 0, 0, 1, 0 ]\n\
 @end group\n\
 @end example\n\
 @end deftypefn");
 
-  DEFUN_MAPPER (isnan, xisnan, xisnan, xisnan, 0, 0, 0, 0.0, 0.0, 0, 0,
+  DEFUN_MAPPER (isnan, dummyp, xisnan, xisnan, 0, 0, 0, 0.0, 0.0, 0, 0,
     "-*- texinfo -*-\n\
 @deftypefn {Mapping Function} {} isnan (@var{x})\n\
 Return 1 for elements of @var{x} that are NaN values and zero\n\
 otherwise.  NA values are also considered NaN values.  For example,\n\
 \n\
 @example\n\
 @group\n\
 isnan ([13, Inf, NA, NaN])\n\
