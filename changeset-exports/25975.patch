# HG changeset patch
# User Rik <rik@octave.org>
# Date 1540832972 25200
#      Mon Oct 29 10:09:32 2018 -0700
# Node ID 9fdc4c435a1523ef1b444bcee8a12a5364bcadd6
# Parent  c3cd63006870b7d83a1288ca7f9b7c3529507195
Touchups to cset c9ae077dedd1.

* open.m: Use @itemx for second item in Texinfo table.
Use 'any' in input validation to test for ".fig" or ".ofig" extension.

* hgload.m: Align @deftypefn statements in Texinfo for readability.
Capitalize input variable names used in error() messages.

diff --git a/scripts/miscellaneous/open.m b/scripts/miscellaneous/open.m
--- a/scripts/miscellaneous/open.m
+++ b/scripts/miscellaneous/open.m
@@ -24,17 +24,17 @@
 ##
 ## By default, recognized file types are
 ##
 ## @table @code
 ## @item .m
 ## Open file in the editor. No @var{output} value is returned.
 ##
 ## @item .mat
-## @item octave-workspace
+## @itemx octave-workspace
 ## Open the data file with @code{load}. If no return value @var{output}
 ## is requested, variables are loaded in the base workspace. Otherwise
 ## @var{output} will be a structure containing loaded data.
 ## @xref{XREFload, , load function}.
 ##
 ## @item .ofig
 ## Open the figure with hgload.  @xref{XREFhgload, , hgload function}.
 ##
@@ -86,17 +86,17 @@ function output = open (file)
   elseif (strcmpi (ext, ".m"))
     edit (file);
   elseif (strcmpi (ext, ".mat") || strcmp (fname, "octave-workspace"))
     if (nargout > 0)
       output = load (file);
     else
       evalin ("base", sprintf ("load ('%s');", file));
     endif
-  elseif (strcmpi (ext, {".fig", ".ofig"}))
+  elseif (any (strcmpi (ext, {".fig", ".ofig"})))
     output = openfig (file);
     drawnow ();
   elseif (any (strcmpi (ext, {".mdl", ".slx", ".prj"})))
     error ("open: opening file type '%s' is not supported", ext);
   elseif (strcmpi (ext, ".exe"))
     if (ispc ())
       dos (file);
     else
diff --git a/scripts/plot/util/hgload.m b/scripts/plot/util/hgload.m
--- a/scripts/plot/util/hgload.m
+++ b/scripts/plot/util/hgload.m
@@ -12,44 +12,44 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 ## GNU General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <https://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn {} {@var{h} =} hgload (@var{filename})
+## @deftypefn  {} {@var{h} =} hgload (@var{filename})
 ## @deftypefnx {} {[@var{h}, @var{old_prop}] =} hgload (@var{filename}, @var{prop_struct})
 ## Load the graphics object in @var{filename} into the graphics handle @var{h}.
 ##
 ## If @var{filename} has no extension, Octave will try to find the file with
 ## and without the standard extension of @file{.ofig}.
 ##
 ## If provided, the elements of structure @var{prop_struct} will be used to
-## override the properties of top-level object stored in @var{filename} and the
-## old values will be stored in @var{old_prop}.  @var{old_prop} is a cell array
-## matching the size of @var{h}; each cell contains a structure of the existing
-## property names and values before being overriden.
+## override the properties of top-level objects stored in @var{filename} and
+## the old values will be stored in @var{old_prop}.  @var{old_prop} is a cell
+## array matching the size of @var{h}; each cell contains a structure of the
+## existing property names and values before being overridden.
 ##
 ## @seealso{openfig, hgsave, struct2hdl}
 ## @end deftypefn
 
 ## Author: Massimiliano Fasi
 
 function [h, old_prop] = hgload (filename, prop_struct = struct ())
 
   ## Check input arguments
   if (nargin == 0 || nargin > 2)
     print_usage ();
   endif
 
   ## Check second input argument
   if (! isstruct(prop_struct))
-    error ("hgload: 'prop_struct' must be a struct");
+    error ("hgload: PROP_STRUCT must be a struct");
   endif
 
   ## Check file existence
   [~, ~, ext] = fileparts (filename);
   if (isempty (ext))
     if (! isempty (file_in_loadpath ([filename ".ofig"])))
       filename = [filename ".ofig"];
     elseif (isempty (file_in_loadpath (filename)))
