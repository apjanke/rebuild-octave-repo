# HG changeset patch
# User jwe
# Date 824346529 0
#      Thu Feb 15 01:08:49 1996 +0000
# Node ID 0e6a0a271998fc50f33d73303def89f122288928
# Parent  3496ec9bee35e124aaff639e89630631869ebb2b
[project @ 1996-02-15 01:08:15 by jwe]

diff --git a/src/balance.cc b/src/balance.cc
--- a/src/balance.cc
+++ b/src/balance.cc
@@ -38,17 +38,17 @@ Software Foundation, 59 Temple Place - S
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "help.h"
 #include "oct-obj.h"
 #include "user-prefs.h"
 #include "utils.h"
 
-DEFUN_DLD_BUILTIN ("balance", Fbalance, Sbalance, FSbalance, 11,
+DEFUN_DLD_BUILTIN (balance, args, nargout,
   "AA = balance (A [, OPT]) or [[DD,] AA] =  balance (A [, OPT])\n\
 \n\
 generalized eigenvalue problem:\n\
 \n\
   [cc, dd, aa, bb] = balance (a, b [, opt])\n\
 \n\
 where OPT is an optional single character argument as follows: \n\
 \n\
diff --git a/src/chol.cc b/src/chol.cc
--- a/src/chol.cc
+++ b/src/chol.cc
@@ -31,17 +31,17 @@ Software Foundation, 59 Temple Place - S
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "help.h"
 #include "oct-obj.h"
 #include "user-prefs.h"
 #include "utils.h"
 
-DEFUN_DLD_BUILTIN ("chol", Fchol, Schol, FSchol, 11,
+DEFUN_DLD_BUILTIN (chol, args, nargout,
   "R = chol (X): cholesky factorization")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   if (nargin != 1 || nargout > 1)
     {
diff --git a/src/colloc.cc b/src/colloc.cc
--- a/src/colloc.cc
+++ b/src/colloc.cc
@@ -31,17 +31,17 @@ Software Foundation, 59 Temple Place - S
 
 #include "defun-dld.h"
 #include "error.h"
 #include "help.h"
 #include "mappers.h"
 #include "oct-obj.h"
 #include "utils.h"
 
-DEFUN_DLD_BUILTIN ("colloc", Fcolloc, Scolloc, FScolloc, 10,
+DEFUN_DLD_BUILTIN (colloc, args, ,
   "[R, A, B, Q] = colloc (N [, \"left\"] [, \"right\"]): collocation weights")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   if (nargin < 1 || nargin > 3)
     {
diff --git a/src/dassl.cc b/src/dassl.cc
--- a/src/dassl.cc
+++ b/src/dassl.cc
@@ -100,17 +100,17 @@ dassl_user_function (const ColumnVector&
 	}
       else
 	gripe_user_supplied_eval ("dassl");
     }
 
   return retval;
 }
 
-DEFUN_DLD_BUILTIN ("dassl", Fdassl, Sdassl, FSdassl, 10,
+DEFUN_DLD_BUILTIN (dassl, args, ,
   "dassl (\"function_name\", x_0, xdot_0, t_out)\n\
 dassl (F, X_0, XDOT_0, T_OUT, T_CRIT)\n\
 \n\
 The first argument is the name of the function to call to\n\
 compute the vector of residuals.  It must have the form\n\
 \n\
   res = f (x, xdot, t)\n\
 \n\
@@ -312,18 +312,17 @@ show_dassl_option (const string& keyword
       list++;
     }
 
   warning ("dassl_options: no match for `%s'", keyword.c_str ());
 
   return retval;
 }
 
-DEFUN_DLD_BUILTIN ("dassl_options", Fdassl_options, Sdassl_options,
-		   FSdassl_options, 10,
+DEFUN_DLD_BUILTIN (dassl_options, args, ,
   "dassl_options (KEYWORD, VALUE)\n\
 \n\
 Set or show options for dassl.  Keywords may be abbreviated\n\
 to the shortest match.")
 {
   Octave_object retval;
 
   int nargin = args.length ();
diff --git a/src/data.cc b/src/data.cc
--- a/src/data.cc
+++ b/src/data.cc
@@ -50,32 +50,32 @@ Software Foundation, Inc.
 #ifndef MIN
 #define MIN(a,b) ((a) < (b) ? (a) : (b))
 #endif
 
 #ifndef ABS
 #define ABS(x) (((x) < 0) ? (-x) : (x))
 #endif
 
-DEFUN ("all", Fall, Sall, 10,
+DEFUN (all, args, ,
   "all (X): are all elements of X nonzero?")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   if (nargin == 1 && args(0).is_defined ())
     retval = args(0).all ();
   else
     print_usage ("all");
 
   return retval;
 }
 
-DEFUN ("any", Fany, Sany, 10,
+DEFUN (any, args, ,
   "any (X): are any elements of X nonzero?")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   if (nargin == 1 && args(0).is_defined ())
     retval = args(0).any ();
@@ -134,17 +134,17 @@ map (d_dd_fcn f, const Matrix& x, const 
 
   for (int j = 0; j < x_nc; j++)
     for (int i = 0; i < x_nr; i++)
       retval.elem (i, j) = f (x.elem (i, j), y.elem (i, j));
 
   return retval;
 }
 
-DEFUN ("atan2", Fatan2, Satan2, 10,
+DEFUN (atan2, args, ,
   "atan2 (Y, X): atan (Y / X) in range -pi to pi")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   if (nargin == 2 && args(0).is_defined () && args(1).is_defined ())
     {
@@ -220,17 +220,17 @@ DEFUN ("atan2", Fatan2, Satan2, 10,
 	error ("atan2: nonconformant matrices");
     }
   else
     print_usage ("atan2");
 
   return retval;
 }
 
-DEFUN ("cumprod", Fcumprod, Scumprod, 10,
+DEFUN (cumprod, args, ,
   "cumprod (X): cumulative products")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   if (nargin == 1)
     {
@@ -257,17 +257,17 @@ DEFUN ("cumprod", Fcumprod, Scumprod, 10
 	}
     }
   else
     print_usage ("cumprod");
 
   return retval;
 }
 
-DEFUN ("cumsum", Fcumsum, Scumsum, 10,
+DEFUN (cumsum, args, ,
   "cumsum (X): cumulative sums")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   if (nargin == 1)
     {
@@ -539,34 +539,34 @@ make_diag (const tree_constant& a, const
 	gripe_wrong_type_arg ("diag", a);
     }
   else
     gripe_wrong_type_arg ("diag", a);
 
   return retval;
 }
 
-DEFUN ("diag", Fdiag, Sdiag, 10,
+DEFUN (diag, args, ,
   "diag (X [,k]): form/extract diagonals")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   if (nargin == 1 && args(0).is_defined ())
     retval = make_diag (args(0));
   else if (nargin == 2 && args(0).is_defined () && args(1).is_defined ())
     retval = make_diag (args(0), args(1));
   else
     print_usage ("diag");
 
   return retval;
 }
 
-DEFUN ("prod", Fprod, Sprod, 10,
+DEFUN (prod, args, ,
   "prod (X): products")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   if (nargin == 1)
     {
@@ -593,17 +593,17 @@ DEFUN ("prod", Fprod, Sprod, 10,
 	}
     }
   else
     print_usage ("prod");
 
   return retval;
 }
 
-DEFUN ("size", Fsize, Ssize, 11,
+DEFUN (size, args, nargout,
   "[m, n] = size (x): return rows and columns of X\n\
 \n\
 d = size (x): return number of rows and columns of x as a row vector\n\
 \n\
 m = size (x, 1): return number of rows in x\n\
 m = size (x, 2): return number of columns in x")
 {
   Octave_object retval;
@@ -645,17 +645,17 @@ m = size (x, 2): return number of column
 	}
     }
   else
     print_usage ("size");
 
   return retval;
 }
 
-DEFUN ("sum", Fsum, Ssum, 10,
+DEFUN (sum, args, ,
   "sum (X): sum of elements")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   if (nargin == 1)
     {
@@ -682,17 +682,17 @@ DEFUN ("sum", Fsum, Ssum, 10,
 	}
     }
   else
     print_usage ("sum");
 
   return retval;
 }
 
-DEFUN ("sumsq", Fsumsq, Ssumsq, 10,
+DEFUN (sumsq, args, ,
   "sumsq (X): sum of squares of elements")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   if (nargin == 1)
     {
@@ -719,17 +719,17 @@ DEFUN ("sumsq", Fsumsq, Ssumsq, 10,
 	}
     }
   else
     print_usage ("sumsq");
 
   return retval;
 }
 
-DEFUN ("is_struct", Fis_struct, Sis_struct, 10,
+DEFUN (is_struct, args, ,
   "is_struct (x): return nonzero if x is a structure")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   if (nargin == 1)
     {
@@ -741,17 +741,17 @@ DEFUN ("is_struct", Fis_struct, Sis_stru
 	retval = 0.0;
     }
   else
     print_usage ("is_struct");
 
   return retval;
 }
 
-DEFUN ("struct_elements", Fstruct_elements, Sstruct_elements, 10,
+DEFUN (struct_elements, args, ,
   "struct_elements (S)\n\
 \n\
 Return a list of the names of the elements of the structure S.")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
@@ -766,17 +766,17 @@ Return a list of the names of the elemen
 	gripe_wrong_type_arg ("struct_elements", args (0));
     }
   else
     print_usage ("struct_elements");
 
   return retval;
 }
 
-DEFUN ("struct_contains", Fstruct_contains, Sstruct_contains, 10,
+DEFUN (struct_contains, args, ,
   "struct_contains (S, NAME)\n\
 \n\
 return nonzero if S is a structure with element NAME")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
@@ -884,17 +884,17 @@ fill_matrix (const tree_constant& a, con
   if (error_state)
     return tree_constant ();
 
   Matrix m (nr, nc, val);
 
   return m;
 }
 
-DEFUN ("ones", Fones, Sones, 10,
+DEFUN (ones, args, ,
   "ones (N), ones (N, M), ones (X): create a matrix of all ones")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   switch (nargin)
     {
@@ -913,17 +913,17 @@ DEFUN ("ones", Fones, Sones, 10,
     default:
       print_usage ("ones");
       break;
     }
 
   return retval;
 }
 
-DEFUN ("zeros", Fzeros, Szeros, 10,
+DEFUN (zeros, args, ,
   "zeros (N), zeros (N, M), zeros (X): create a matrix of all zeros")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   switch (nargin)
     {
@@ -984,17 +984,17 @@ identity_matrix (const tree_constant& a,
       int n = MIN (nr, nc);
       for (int i = 0; i < n; i++)
 	m.elem (i, i) = 1.0;
     }
 
   return m;
 }
 
-DEFUN ("eye", Feye, Seye, 10,
+DEFUN (eye, args, ,
   "eye (N), eye (N, M), eye (X): create an identity matrix")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   switch (nargin)
     {
@@ -1013,17 +1013,17 @@ DEFUN ("eye", Feye, Seye, 10,
     default:
       print_usage ("eye");
       break;
     }
 
   return retval;
 }
 
-DEFUN ("linspace", Flinspace, Slinspace, 10,
+DEFUN (linspace, args, ,
   "usage: linspace (x1, x2, n)\n\
 \n\
 Return a vector of n equally spaced points between x1 and x2\n\
 inclusive.\n\
 \n\
 If the final argument is omitted, n = 100 is assumed.\n\
 \n\
 All three arguments must be scalars.\n\
diff --git a/src/defun-dld.h b/src/defun-dld.h
--- a/src/defun-dld.h
+++ b/src/defun-dld.h
@@ -33,38 +33,38 @@ Software Foundation, 59 Temple Place - S
 // Define a builtin function that may be loaded dynamically at run
 // time.
 //
 // If Octave is not configured for dynamic linking of builtin
 // functions, this is exactly like DEFUN.
 
 #if defined (OCTAVE_LITE) && defined (WITH_DYNAMIC_LINKING)
 #if ! defined (MAKE_BUILTINS)
-#define DEFUN_DLD_BUILTIN(name, fname, sname, fsname, unused_arg_flags, doc) \
-  DEFUN_DLD(name, fname, sname, fsname, unused_arg_flags, doc)
+#define DEFUN_DLD_BUILTIN(name, args_name, nargout_name, doc) \
+  DEFUN_DLD (name, args_name, nargout_name, doc)
 #endif
 #else
-#define DEFUN_DLD_BUILTIN(name, fname, fsname, sname, unused_arg_flags, doc) \
-  DEFUN_INTERNAL (name, fname, sname, unused_arg_flags, 0, doc)
+#define DEFUN_DLD_BUILTIN(name, args_name, nargout_name, doc) \
+  DEFUN_INTERNAL (name, args_name, nargout_name, 0, doc)
 #endif
 
 // Define a function that may be loaded dynamically at run time.
 //
 // If Octave is not configured for dynamic linking of builtin
 // functions, this won't do anything useful.
 //
 // The forward declaration is for the struct, the second is for the
 // definition of the function.
 
 #if ! defined (MAKE_BUILTINS)
-#define DEFUN_DLD(name, fname, sname, fsname, unused_arg_flags, doc) \
-  DECLARE_FUN_ ## unused_arg_flags(fname); \
-  DEFINE_FUN_STRUCT (name, fname, sname, 0, doc); \
-  DEFINE_FUN_STRUCT_FUN (sname, fsname) \
-  DECLARE_FUN_ ## unused_arg_flags (fname)
+#define DEFUN_DLD(name, args_name, nargout_name, doc) \
+  DECLARE_FUN (name, args_name, nargout_name); \
+  DEFINE_FUN_STRUCT (name, 0, doc); \
+  DEFINE_FUN_STRUCT_FUN (name) \
+  DECLARE_FUN (name, args_name, nargout_name)
 #endif
 
 #endif
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; page-delimiter: "^/\\*" ***
diff --git a/src/defun-int.h b/src/defun-int.h
--- a/src/defun-int.h
+++ b/src/defun-int.h
@@ -29,77 +29,59 @@ Software Foundation, 59 Temple Place - S
 // create the buitlins.cc file.
 
 #ifdef MAKE_BUILTINS
 
 // Generate code to install name in the symbol table.  The script
 // mkdefs will create a .def file for every .cc file that uses DEFUN,
 // DEFUN_TEXT, or DEFUN_DLD.
 
-#define DEFUN_INTERNAL(name, fname, sname, unused_arg_flags, \
-		       is_text_fcn, doc) \
+#define DEFUN_INTERNAL(name, args_name, nargout_name, is_text_fcn, doc) \
   BEGIN_INSTALL_BUILTIN \
-    extern DECLARE_FUN_ ## unused_arg_flags (fname); \
-    DEFINE_FUN_STRUCT (name, fname, sname, is_text_fcn, doc); \
-    install_builtin_function (sname); \
+    extern DECLARE_FUN (name, args_name, nargout_name); \
+    DEFINE_FUN_STRUCT (name, is_text_fcn, doc); \
+    install_builtin_function (S ## name); \
   END_INSTALL_BUILTIN
 
 // Generate code for making another name for an existing function.
 
 #define DEFALIAS_INTERNAL(alias, name) \
   BEGIN_INSTALL_BUILTIN \
   alias_builtin (#alias, #name); \
   END_INSTALL_BUILTIN
 
 #else /* ! MAKE_BUILTINS */
 
 // Generate the first line of the function definition.  This ensures
 // that the internal functions all have the same signature.
 
-#define DEFUN_INTERNAL(name, fname, sname, unused_arg_flags, \
-		       is_text_fcn, doc) \
-  DECLARE_FUN_ ## unused_arg_flags (fname)
+#define DEFUN_INTERNAL(name, args_name, nargout_name, is_text_fcn, doc) \
+  DECLARE_FUN (name, args_name, nargout_name)
 
 // No definition is required for an alias.
 
 #define DEFALIAS_INTERNAL(name, alias)
 
 #endif /* ! MAKE_BUILTINS */
 
 // Define the structure that will be used to insert this function into
 // the symbol table.
 
-#define DEFINE_FUN_STRUCT(name, fname, sname, is_text_fcn, doc) \
-  static builtin_function sname (name, is_text_fcn, fname, doc)
+#define DEFINE_FUN_STRUCT(name, is_text_fcn, doc) \
+  static builtin_function S ## name (#name, is_text_fcn, F ## name, doc)
 
-#define DEFINE_FUN_STRUCT_FUN(sname, fsname) \
+#define DEFINE_FUN_STRUCT_FUN(name) \
   builtin_function& \
-  fsname (void) \
+  FS ## name (void) \
   { \
-    return sname; \
+    return S ## name; \
   }
 
-// Declare an internal function named fname.  This is the interface
-// used by all internal functions in Octave that are also callable
-// from the Octave language.  The funny suffixes are used to help us
-// avoid warnings from g++ about unused arguments.
-
-#define DECLARE_FUN_00(fname) \
-  Octave_object fname (const Octave_object&, int)
-
-#define DECLARE_FUN_01(fname) \
-  Octave_object fname (const Octave_object&, int nargout)
-
-#define DECLARE_FUN_10(fname) \
-  Octave_object fname (const Octave_object& args, int)
-
-#define DECLARE_FUN_11(fname) \
-  Octave_object fname (const Octave_object& args, int nargout)
-
-#define DECLARE_FUN_(fname) DECLARE_FUN_11 (fname)
+#define DECLARE_FUN(name, args_name, nargout_name) \
+  Octave_object F ## name (const Octave_object& args_name, int nargout_name)
 
 #endif
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; page-delimiter: "^/\\*" ***
 ;;; End: ***
diff --git a/src/defun.h b/src/defun.h
--- a/src/defun.h
+++ b/src/defun.h
@@ -27,23 +27,17 @@ Software Foundation, 59 Temple Place - S
 #if defined (octave_defun_dld_h)
 #error defun.h and defun-dld.h both included in same file!
 #endif
 
 #include "defun-int.h"
 
 // Define a builtin variable.
 //
-//   name is the name of the variable, as a string.
-//
-//   sname is the name of the structure that is used to hold
-//     information about the variable, and that is passed to
-//     install_builtin_variable to register it in the symbol table.
-//     By convention, it is constructed by prefixing name with the
-//     character SBV.
+//   name is the name of the variable, unquoted.
 //
 //   defn is the initial value for the variable.
 //
 //   ins_as_fcn is a flag that says whether to install the variable as
 //     if it were a function (allowing the name to also be used as a
 //     variable by users, but recover its original definition if cleared).
 //
 //   protect is a flag that says whether it should be possible to give
@@ -54,84 +48,75 @@ Software Foundation, 59 Temple Place - S
 //     cannot be cleared.
 //
 //   sv_fcn is a pointer to a function that should be called whenever
 //     this variable is given a new value.  It can be 0 if there is no
 //     function to call.  See also the code in user-prefs.cc.
 //
 //   doc is the simple help text for this variable.
 
-#define DEFVAR_INT(name, sname, defn, inst_as_fcn, protect, \
-		   sv_fcn, doc) \
+#define DEFVAR(name, defn, inst_as_fcn, sv_fcn, doc) \
+  DEFVAR_INT (#name, SBV_ ## name, defn, inst_as_fcn, 0, sv_fcn, doc)
+
+// Define a builtin-constant, and a corresponding variable that can be
+// redefined.  This is just the same as DEFVAR, except that it defines
+// `name' as a variable, and `__name__' as a constant that cannot be
+// redefined.
+
+#define DEFCONST(name, defn, inst_as_fcn, sv_fcn, doc) \
+  DEFVAR_INT (#name, SBV_ ## name, defn, inst_as_fcn, 0, sv_fcn, doc); \
+  DEFVAR_INT ("__" ## #name ## "__", XSBV_ ## name, defn, 0, 1, sv_fcn, doc)
+
+// This one can be used when `name' cannot be used directly (if it is
+// already defined as a macro).  In that case, name is already a
+// quoted string, and the name of the structure has to be passed too.
+
+#define DEFCONSTX(name, sname, defn, inst_as_fcn, sv_fcn, doc) \
+  DEFVAR_INT (#name, sname, defn, inst_as_fcn, 0, sv_fcn, doc); \
+  DEFVAR_INT ("__" ## name ## "__", X ## sname, defn, 0, 1, sv_fcn, doc)
+
+// How builtin variables are actually installed.
+
+#define DEFVAR_INT(name, sname, defn, inst_as_fcn, protect, sv_fcn, doc) \
   do \
     { \
       builtin_variable sname (name, new tree_constant (defn), \
 			      inst_as_fcn, protect, (sv_fcn ? 1 : 0), \
 			      sv_fcn, doc); \
       install_builtin_variable (sname); \
     } \
   while (0)
 
-#define DEFVAR(name, sname, defn, inst_as_fcn, sv_fcn, doc) \
-  DEFVAR_INT (name, sname, defn, inst_as_fcn, 0, sv_fcn, doc)
-
-// Define a builtin-constant, and a corresponding variable that can be
-// redefined.  This is just the same as DEFVAR, except that it defines
-// `name' as a variable, and `__name__' as a constant that cannot be
-// redefined.
-
-#define DEFCONST(name, sname, defn, inst_as_fcn, sv_fcn, doc) \
-  DEFVAR_INT (name, sname, defn, inst_as_fcn, 0, sv_fcn, doc); \
-  DEFVAR_INT ("__" ## name ## "__", sname, defn, 0, 1, sv_fcn, doc)
-
 // Define a builtin function.
 //
-//   name is the name of the function, as a string.
-//
-//   fname is the name of the C++ function.  By convention, it is
-//     constructed by prefixing name with the character F.
+//   name is the name of the function, unqouted.
 //
-//   sname is the name of the structure that is used to hold
-//     information about the function, and that is passed to
-//     install_builtin_function to register the function in the symbol
-//     table.  By convention, it is constructed by prefixing name with
-//     the character S.
+//   args_name is the name of the Octave_object variable used to pass
+//     the argument list to this function.
 //
-//   unused_arg_flags is used to decide how to declare the function so
-//     that g++ doesn't complain about unused arguments.  It can be
-//     one of:
-//
-//     00:            Both of the arguments args and nargout are unused.
-//     10:            The argument args is unused.
-//     01:            The argument nargout is unused.
-//     11 or missing: Both of the arguments args and nargout are used.
+//   nargout_name is the name of the int variable used to pass the
+//     number of output arguments this function is expected to produce.
 //
 //   doc is the simple help text for the function.
 
-#define DEFUN(name, fname, sname, unused_arg_flags, doc) \
-  DEFUN_INTERNAL (name, fname, sname, unused_arg_flags, 0, doc)
+#define DEFUN(name, args_name, nargout_name, doc) \
+  DEFUN_INTERNAL (name, args_name, nargout_name, 0, doc)
 
 // Define a builtin text-style function.
 //
 // This is like DEFUN, except that it defines a function that can be
 // called from the Octave language without using parenthesis to
 // surround the arguments). 
 
-#define DEFUN_TEXT(name, fname, sname, unused_arg_flags, doc) \
-  DEFUN_INTERNAL (name, fname, sname, unused_arg_flags, 1, doc)
+#define DEFUN_TEXT(name, args_name, nargout_name, doc) \
+  DEFUN_INTERNAL (name, args_name, nargout_name, 1, doc)
 
 // Define a mapper function.
 //
-//   name is the name of the function as a string
-//
-//   sname is the name of the structure that is used to hold
-//     information about the function, and that is passed to
-//     install_builtin_mapper to register the function in the symbol
-//     table.  By convention, it is constructed by prefixing name with
-//     the character S.
+//   name is the name of the function, unquoqted.
 //
 //   can_ret_cmplx_for_real is a flag that says whether this function
 //     can create a complex number given a real-valued  argument
 //     (e.g., sqrt (-1)).
 //
 //   lo is the lower bound of the range for which real arguments can
 //     become complex.  (e.g., lo == -Inf for sqrt).
 //
@@ -144,24 +129,24 @@ Software Foundation, 59 Temple Place - S
 //   d_c_map is a pointer to a function that should be called for real
 //     arguments that are expected to create complex results.
 //
 //   c_c_map is a pointer to a function that should be called for
 //     complex arguments that are expected to create complex results.
 //
 //   doc is the simple help text for the function.
 
-#define DEFUN_MAPPER(name, sname, can_ret_cmplx_for_real, lo, hi, \
+#define DEFUN_MAPPER(name, can_ret_cmplx_for_real, lo, hi, \
 		     d_d_map, d_c_map, c_c_map, doc) \
   do \
     { \
-      builtin_mapper_function sname (name, can_ret_cmplx_for_real, \
+      builtin_mapper_function S ## name (#name, can_ret_cmplx_for_real, \
 				     lo, hi, d_d_map, d_c_map, \
 				     c_c_map, doc); \
-      install_builtin_mapper (sname); \
+      install_builtin_mapper (S ## name); \
     } \
   while (0)
 
 // Make alias another name for the existing function name.  This macro
 // must be used in the same file where name is defined, after the
 // definition for name.
 
 #define DEFALIAS(name, alias) DEFALIAS_INTERNAL (name, alias)
diff --git a/src/det.cc b/src/det.cc
--- a/src/det.cc
+++ b/src/det.cc
@@ -31,17 +31,17 @@ Software Foundation, 59 Temple Place - S
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "help.h"
 #include "oct-obj.h"
 #include "user-prefs.h"
 #include "utils.h"
 
-DEFUN_DLD_BUILTIN ("det", Fdet, Sdet, FSdet, 10,
+DEFUN_DLD_BUILTIN (det, args, ,
   "det (X): determinant of a square matrix")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   if (nargin != 1)
     {
diff --git a/src/dirfns.cc b/src/dirfns.cc
--- a/src/dirfns.cc
+++ b/src/dirfns.cc
@@ -302,17 +302,17 @@ octave_change_to_directory (const string
   if (cd_ok)
     do_external_plotter_cd (newdir);
   else
     error ("%s: %s", newdir.c_str (), strerror (errno));
 
   return cd_ok;
 }
 
-DEFUN_TEXT ("cd", Fcd, Scd, 10,
+DEFUN_TEXT (cd, args, ,
   "cd [dir]\n\
 \n\
 change current working directory\n\
 if no arguments are given, the current directory is changed to the\n\
 users home directory")
 {
   Octave_object retval;
 
@@ -348,17 +348,17 @@ users home directory")
 
   return retval;
 }
 
 DEFALIAS (chdir, cd);
 
 // Get a directory listing.
 
-DEFUN_TEXT ("ls", Fls, Sls, 10,
+DEFUN_TEXT (ls, args, ,
   "ls [options]\n\
 \n\
 print a directory listing")
 {
   Octave_object retval;
 
   int argc = args.length () + 1;
 
@@ -397,17 +397,17 @@ print a directory listing")
 
   run_unwind_protect ();
 
   return retval;
 }
 
 DEFALIAS (dir, ls);
 
-DEFUN ("pwd", Fpwd, Spwd, 01,
+DEFUN (pwd, , nargout,
   "pwd (): print current working directory")
 {
   Octave_object retval;
   string directory;
 
   if (verbatim_pwd)
     {
       directory = octave_getcwd ();
@@ -428,17 +428,17 @@ DEFUN ("pwd", Fpwd, Spwd, 01,
 	}
       else
 	retval = directory;
     }
 
   return retval;
 }
 
-DEFUN ("readdir", Freaddir, Sreaddir, 10,
+DEFUN (readdir, args, ,
   "readdir (NAME)\n\
 \n\
 Return an array of strings containing the list of all files in the
 named directory.  If sucessful, returns 0; otherwise an error message
 is printed.")
 {
   Octave_object retval;
 
@@ -468,17 +468,17 @@ is printed.")
     print_usage ("readdir");
 
   return retval;
 }
 
 // XXX FIXME XXX -- should probably also allow second arg to specify
 // mode.
 
-DEFUN ("mkdir", Fmkdir, Smkdir, 10,
+DEFUN (mkdir, args, ,
   "mkdir (NAME)\n\
 \n\
 Create the directory named by NAME.  If successful, returns 0;\n\
 otherwise prints an error message.")
 {
   Octave_object retval;
 
   int status = 0;
@@ -504,17 +504,17 @@ otherwise prints an error message.")
     print_usage ("mkdir");
 
   if (status == 0)
     retval (0) = (double) status;
 
   return retval;
 }
 
-DEFUN ("rmdir", Frmdir, Srmdir, 10,
+DEFUN (rmdir, args, ,
   "rmdir (NAME)\n\
 \n\
 Remove the directory named by NAME.  If successful, returns 0;\n\
 otherwise prints an error message.")
 {
   Octave_object retval;
 
   int status = 0;
@@ -540,17 +540,17 @@ otherwise prints an error message.")
     print_usage ("rmdir");
 
   if (status == 0)
     retval (0) = (double) status;
 
   return retval;
 }
 
-DEFUN ("rename", Frename, Srename, 10,
+DEFUN (rename, args, ,
   "rename (FROM, TO)\n\
 \n\
 Rename a file.  If successful, returns 0;\n\
 otherwise prints an error message and returns -1.")
 {
   Octave_object retval;
 
   int status = 0;
diff --git a/src/eig.cc b/src/eig.cc
--- a/src/eig.cc
+++ b/src/eig.cc
@@ -30,17 +30,17 @@ Software Foundation, 59 Temple Place - S
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "help.h"
 #include "oct-obj.h"
 #include "user-prefs.h"
 #include "utils.h"
 
-DEFUN_DLD_BUILTIN ("eig", Feig, Seig, FSeig, 11,
+DEFUN_DLD_BUILTIN (eig, args, nargout,
   "eig (X) or [V, D] = eig (X): compute eigenvalues and eigenvectors of X")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   if (nargin != 1 || nargout > 2)
     {
diff --git a/src/error.cc b/src/error.cc
--- a/src/error.cc
+++ b/src/error.cc
@@ -238,39 +238,39 @@ handle_message (error_fun f, const char 
 	}
     }
   else
     f ("%s", msg);
 
   return retval;
 }
 
-DEFUN ("error", Ferror, Serror, 10,
+DEFUN (error, args, ,
   "error (FMT, ...): print message according to FMT and set error state.\n\
 \n\
 This should eventually take us up to the top level, possibly\n\
 printing traceback messages as we go.\n\
 \n\
 If MESSAGE ends in a newline character, traceback messages are not\n\
 printed.\n\
 \n\
 See also: printf") 
 {
   return handle_message (error, "unspecified error", args);
 }
 
-DEFUN ("warning", Fwarning, Swarning, 10,
+DEFUN (warning, args, ,
   "warning (FMT, ...): print a warning message according to FMT.\n\
 \n\
 See also: error, printf")
 {
   return handle_message (warning, "unspecified warning", args);
 }
 
-DEFUN ("usage", Fusage, Susage, 10,
+DEFUN (usage, args, ,
   "usage (FMT, ...): print a usage message according to FMT.\n\
 \n\
 See also: error, printf")
 {
   return handle_message (usage, "unknown", args);
 }
 
 /*
diff --git a/src/expm.cc b/src/expm.cc
--- a/src/expm.cc
+++ b/src/expm.cc
@@ -29,17 +29,17 @@ Software Foundation, 59 Temple Place - S
 
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "help.h"
 #include "oct-obj.h"
 #include "utils.h"
 
-DEFUN_DLD_BUILTIN ("expm", Fexpm, Sexpm, FSexpm, 10,
+DEFUN_DLD_BUILTIN (expm, args, ,
   "expm (X): matrix exponential, e^A")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   if (nargin != 1)
     {
diff --git a/src/fft.cc b/src/fft.cc
--- a/src/fft.cc
+++ b/src/fft.cc
@@ -31,17 +31,17 @@ Software Foundation, 59 Temple Place - S
 #include "help.h"
 #include "mappers.h"
 #include "oct-obj.h"
 #include "user-prefs.h"
 #include "utils.h"
 
 // This function should be merged with Fifft.
 
-DEFUN_DLD_BUILTIN ("fft", Ffft, Sfft, FSfft, 10,
+DEFUN_DLD_BUILTIN (fft, args, ,
   "fft (X [, N]): fast fourier transform of a vector")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   if (nargin < 1 || nargin > 2)
     {
diff --git a/src/fft2.cc b/src/fft2.cc
--- a/src/fft2.cc
+++ b/src/fft2.cc
@@ -31,17 +31,17 @@ Software Foundation, 59 Temple Place - S
 #include "help.h"
 #include "mappers.h"
 #include "oct-obj.h"
 #include "user-prefs.h"
 #include "utils.h"
 
 // This function should be merged with Fifft2.
 
-DEFUN_DLD_BUILTIN ("fft2", Ffft2, Sfft2, FSfft2, 10,
+DEFUN_DLD_BUILTIN (fft2, args, ,
   "fft2 (X [, N] [, M])\n\
 \n\
 two dimensional fast fourier transform of a vector")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
diff --git a/src/file-io.cc b/src/file-io.cc
--- a/src/file-io.cc
+++ b/src/file-io.cc
@@ -245,17 +245,17 @@ fclose_internal (const Octave_object& ar
     {
       error ("fclose: error on closing file");
       retval(0) = 0.0; // failed
     }
 
   return retval;
 }
 
-DEFUN ("fclose", Ffclose, Sfclose, 10,
+DEFUN (fclose, args, ,
   "fclose (FILENAME or FILENUM):  close a file")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   if (nargin != 1)
     print_usage ("fclose");
@@ -296,17 +296,17 @@ fflush_internal (const Octave_object& ar
     {
       error ("fflush: write error");
       retval(0) = 0.0; // failed
     }
 
   return retval;
 }
 
-DEFUN ("fflush", Ffflush, Sfflush, 10,
+DEFUN (fflush, args, ,
   "fflush (FILENAME or FILENUM): flush buffered data to output file")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   if (nargin != 1)
     print_usage ("fflush");
@@ -412,34 +412,34 @@ fgets_internal (const Octave_object& arg
   else
     retval(0) = -1.0;
 
   delete [] string;
 
   return retval;
 }
 
-DEFUN ("fgetl", Ffgetl, Sfgetl, 11,
+DEFUN (fgetl, args, nargout,
   "[STRING, LENGTH] = fgetl (FILENAME or FILENUM [, LENGTH])\n\
 \n\
 read a string from a file")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   if (nargin == 1 || nargin == 2)
     retval = fgets_internal (args, nargin, nargout, 1);
   else
     print_usage ("fgetl");
 
   return retval;
 }
 
-DEFUN ("fgets", Ffgets, Sfgets, 11,
+DEFUN (fgets, args, nargout,
   "[STRING, LENGTH] = fgets (FILENAME or FILENUM [, LENGTH])\n\
 \n\
 read a string from a file")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
@@ -510,17 +510,17 @@ fopen_internal (const Octave_object& arg
   file_info file (file_number, name, file_ptr, mode);
   file_list.append (file);
 
   retval(0) = (double) file_number;
 
   return retval;
 }
 
-DEFUN ("fopen", Ffopen, Sfopen, 10,
+DEFUN (fopen, args, ,
   "FILENUM = fopen (FILENAME, MODE): open a file\n\
 \n\
   Valid values for mode include:\n\
 \n\
    r  : open text file for reading\n\
    w  : open text file for writing; discard previous contents if any\n\
    a  : append; open or create text file for writing at end of file\n\
    r+ : open text file for update (i.e., reading and writing)\n\
@@ -560,17 +560,17 @@ freport_internal (void)
     }
 
   output_buf << "\n" << ends;
   maybe_page_output (output_buf);
 
   return retval;
 }
 
-DEFUN ("freport", Ffreport, Sfreport, 10,
+DEFUN (freport, args, ,
   "freport (): list open files and their status")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   if (nargin > 0)
     warning ("freport: ignoring extra arguments");
@@ -591,17 +591,17 @@ frewind_internal (const Octave_object& a
     {
       file_info file = file_list (p);
       rewind (file.fptr ());
     }
 
   return retval;
 }
 
-DEFUN ("frewind", Ffrewind, Sfrewind, 10,
+DEFUN (frewind, args, ,
   "frewind (FILENAME or FILENUM): set file position at beginning of file")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   if (nargin != 1)
     print_usage ("frewind");
@@ -687,17 +687,17 @@ fseek_internal (const Octave_object& arg
     {
       error ("fseek: file error");
       retval(0) = 0.0; // failed
     }
 
   return retval;
 }
 
-DEFUN ("fseek", Ffseek, Sfseek, 10,
+DEFUN (fseek, args, ,
   "fseek (FILENAME or FILENUM, OFFSET [, ORIGIN])\n\
 \n\
 set file position for reading or writing")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
@@ -727,17 +727,17 @@ ftell_internal (const Octave_object& arg
 
       if (offset == -1L)
 	error ("ftell: write error");
     }
 
   return retval;
 }
 
-DEFUN ("ftell", Fftell, Sftell, 10,
+DEFUN (ftell, args, ,
   "POSITION = ftell (FILENAME or FILENUM): returns the current file position")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   if (nargin != 1)
     print_usage ("ftell");
@@ -1083,51 +1083,51 @@ do_printf (const char *type, const Octav
       char *msg = output_buf.str ();
       retval(0) = msg;
       delete [] msg;
     }
 
   return retval;
 }
 
-DEFUN ("fprintf", Ffprintf, Sfprintf, 10,
+DEFUN (fprintf, args, ,
   "fprintf (FILENAME or FILENUM, FORMAT, ...)")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   if (nargin < 2)
     print_usage ("fprintf");
   else
     retval = do_printf ("fprintf", args);
 
   return retval;
 }
 
 // Formatted printing.
 
-DEFUN ("printf", Fprintf, Sprintf, 10,
+DEFUN (printf, args, ,
   "printf (FORMAT, ...)")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   if (nargin < 1)
     print_usage ("printf");
   else
     retval = do_printf ("printf", args);
 
   return retval;
 }
 
 // Formatted printing to a string.
 
-DEFUN ("sprintf", Fsprintf, Ssprintf, 10,
+DEFUN (sprintf, args, ,
   "s = sprintf (FORMAT, ...)")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   if (nargin < 1)
     print_usage ("sprintf");
@@ -1458,51 +1458,51 @@ do_scanf (const char *type, const Octave
     }
 
   if (tmp_file_open)
     fclose (fptr);
 
   return retval;
 }
 
-DEFUN ("fscanf", Ffscanf, Sfscanf, 11,
+DEFUN (fscanf, args, nargout,
   "[A, B, C, ...] = fscanf (FILENAME or FILENUM, FORMAT)")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   if (nargin != 1 && nargin != 2)
     print_usage ("fscanf");
   else
     retval = do_scanf ("fscanf", args, nargout);
 
   return retval;
 }
 
 // Formatted reading.
 
-DEFUN ("scanf", Fscanf, Sscanf, 11,
+DEFUN (scanf, args, nargout,
   "[A, B, C, ...] = scanf (FORMAT)")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   if (nargin != 1)
     print_usage ("scanf");
   else
     retval = do_scanf ("scanf", args, nargout);
 
   return retval;
 }
 
 // Formatted reading from a string.
 
-DEFUN ("sscanf", Fsscanf, Ssscanf, 11,
+DEFUN (sscanf, args, nargout,
   "[A, B, C, ...] = sscanf (STRING, FORMAT)")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   if (nargin != 2)
     print_usage ("sscanf");
@@ -1718,17 +1718,17 @@ fread_internal (const Octave_object& arg
   if (nargout > 1)
     retval(1) = (double) count;
 
   retval(0) = m;
 
   return retval;
 }
 
-DEFUN ("fread", Ffread, Sfread, 11,
+DEFUN (fread, args, nargout,
   "[DATA, COUNT] = fread (FILENUM, SIZE, PRECISION)\n\
 \n\
  Reads data in binary form of type PRECISION from a file.\n\
 \n\
  FILENUM   : file number from fopen\n\
  SIZE      : size specification for the Data matrix\n\
  PRECISION : type of data to read, valid types are\n\
 \n\
@@ -1802,17 +1802,17 @@ fwrite_internal (const Octave_object& ar
       int count = m.write (file.fptr (), prec);
 
       retval(0) = (double) count;
     }
 
   return retval;
 }
 
-DEFUN ("fwrite", Ffwrite, Sfwrite, 10,
+DEFUN (fwrite, args, ,
   "COUNT = fwrite (FILENUM, DATA, PRECISION)\n\
 \n\
  Writes data to a file in binary form of size PRECISION\n\
 \n\
  FILENUM   : file number from fopen\n\
  DATA      : matrix of elements to be written\n\
  PRECISION : type of data to read, valid types are\n\
 \n\
@@ -1852,17 +1852,17 @@ feof_internal (const Octave_object& args
 
   file_info file = file_list (p);
 
   retval(0) = (double) feof (file.fptr ());
 
   return retval;
 }
 
-DEFUN ("feof", Ffeof, Sfeof, 10,
+DEFUN (feof, args, ,
   "ERROR = feof (FILENAME or FILENUM)\n\
 \n\
  Returns a non zero value for an end of file condition for the\n\
  file specified by FILENAME or FILENUM from fopen")
 {
   Octave_object retval;
 
   int nargin = args.length ();
@@ -1900,17 +1900,17 @@ ferror_internal (const Octave_object& ar
   if (nargout > 1)
     retval(1) = (double) ierr;
 
   retval(0) = strerror (ierr);
 
   return retval;
 }
 
-DEFUN ("ferror", Fferror, Sferror, 11,
+DEFUN (ferror, args, nargout,
   "ERROR = ferror (FILENAME or FILENUM)\n\
 \n\
  Returns a non zero value for an error condition on the\n\
  file specified by FILENAME or FILENUM from fopen")
 {
   Octave_object retval;
 
   int nargin = args.length ();
@@ -1981,17 +1981,17 @@ popen_internal (const Octave_object& arg
   file_info file (number, name, file_ptr, mode);
   file_list.append (file);
 
   retval(0) = (double) number;
 
   return retval;
 }
 
-DEFUN ("popen", Fpopen, Spopen, 10,
+DEFUN (popen, args, ,
   "FILENUM = popen (FILENAME, MODE)\n\
 \n\
   start a process and create a pipe.  Valid values for mode are:\n\
 \n\
   \"r\" : connect stdout of process to pipe\n\
   \"w\" : connect stdin of process to pipe")
 {
   Octave_object retval;
@@ -2034,17 +2034,17 @@ pclose_internal (const Octave_object& ar
     {
       error ("pclose: error on closing file");
       retval(0) = 0.0; // failed
     }
 
   return retval;
 }
 
-DEFUN ("pclose", Fpclose, Spclose, 10,
+DEFUN (pclose, args, ,
   "pclose (FILENAME or FILENUM)\n\
 \n\
   Close a pipe and terminate the associated process")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
@@ -2134,17 +2134,17 @@ execute_internal (const Octave_object& a
   
   retval(2) = (double) pid;
   retval(1) = (double) new_stdout;
   retval(0) = (double) new_stdin;
 
   return retval;
 }
 
-DEFUN ("execute", Fexecute, Sexecute, 10,
+DEFUN (execute, args, ,
   "[STDIN, STDOUT, PID] = execute (COMMAND)\n\
 \n\
   Start a program and redirect its stdin to STDIN and its stdout to STDOUT")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
@@ -2168,17 +2168,17 @@ sync_system_internal (const Octave_objec
     }
 
   string name = args(0).string_value ();
 
   retval (0) = (double) system (name.c_str ());
   return retval;
 }
 
-DEFUN ("sync_system", Fsync_system, Ssync_system, 10,
+DEFUN (sync_system, args, ,
   "RETCODE = sync_system (FILENAME)\n\
 \n\
   Start a program and wait until it terminates")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
@@ -2221,17 +2221,17 @@ async_system_internal (const Octave_obje
     } 
   else
     {
       retval (0) = (double) pid;
       return retval;
     }
 }
 
-DEFUN ("async_system", Fasync_system, Sasync_system, 10,
+DEFUN (async_system, args, ,
   "PID = async_system (FILENAME)\n\
 \n\
   Create a new process and start FILENAME")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
@@ -2280,17 +2280,17 @@ waitpid_internal (const Octave_object& a
 	  if (! error_state)
 	    retval (0) = (double) waitpid (pid, 0, options);
 	}
     }
 
   return retval;
 }
 
-DEFUN ("waitpid", Fwaitpid, Swaitpid, 10,
+DEFUN (waitpid, args, ,
   "STATUS = waitpid (PID, OPTIONS)\n\
 \n\
   wait for process PID to terminate\n\
 \n\
   PID can be:\n\
 \n\
      -1 : wait for any child process\n\
       0 : wait for any child process whose process group ID is equal to\n\
@@ -2345,17 +2345,17 @@ mkfifo_internal (const Octave_object& ar
 
   long mode = (long) args(1).double_value ();
 
   retval (0) = (double) oct_mkfifo (name, mode);
 
   return retval;
 }
 
-DEFUN ("mkfifo", Fmkfifo, Smkfifo, 10,
+DEFUN (mkfifo, args, ,
   "STATUS = mkfifo (NAME, MODE)\n\
 \n\
   Create a FIFO special file named NAME with file mode MODE\n\
 \n\
   STATUS is:\n\
 \n\
     != 0 : if mkfifo failed\n\
        0 : if the FIFO special file could be created")
@@ -2386,17 +2386,17 @@ unlink_internal (const Octave_object& ar
 
   string name = args(0).string_value ();
 
   retval (0) = (double) oct_unlink (name);
 
   return retval;
 }
 
-DEFUN ("unlink", Funlink, Sunlink, 10,
+DEFUN (unlink, args, ,
   "STATUS = unlink (NAME)\n\
 \n\
   Delete the file NAME\n\
 \n\
   STATUS is:\n\
 \n\
     != 0 : if unlink failed\n\
        0 : if the file could be successfully deleted")
@@ -2436,17 +2436,17 @@ mk_stat_map (const file_stat& fs)
 #endif
 #if defined (HAVE_ST_BLOCKS)
   m["blocks"] = (double) fs.blocks ();
 #endif
 
   return m;
 }
 
-DEFUN ("stat", Fstat, Sstat, 10,
+DEFUN (stat, args, ,
   "stat (NAME)\n\
 \n\
   Given the name of a file, return a structure with the following
   elements:\n\
 \n\
     dev     : id of device containing a directory entry for this file\n\
     ino     : file number of the file\n\
     modestr : file mode, as a string of ten letters or dashes as in ls -l\n\
@@ -2480,17 +2480,17 @@ DEFUN ("stat", Fstat, Sstat, 10,
 	}
     }
   else
     print_usage ("stat");
 
   return retval;
 }
 
-DEFUN ("lstat", Flstat, Slstat, 10,
+DEFUN (lstat, args, ,
   "lstat (NAME)\n\
 \n\
   Like stat (NAME), but if NAME refers to a symbolic link, returns\n\
   information about the link itself, not the file that it points to.")
 {
   Octave_object retval;
 
   if (args.length () == 1)
@@ -2508,18 +2508,17 @@ DEFUN ("lstat", Flstat, Slstat, 10,
 	}
     }
   else
     print_usage ("stat");
 
   return retval;
 }
 
-DEFUN ("octave_tmp_file_name", Foctave_tmp_file_name,
-       Soctave_tmp_file_name, 10,
+DEFUN (octave_tmp_file_name, args, ,
  "octave_tmp_file_name ()")
 {
   tree_constant retval;
 
   if (args.length () == 0)
     retval = oct_tempnam ();
   else
     print_usage ("octave_tmp_file_name");
@@ -2551,17 +2550,17 @@ convert (int x, int ibase, int obase)
 	  retval += mult * tmp;
 	  mult *= ibase;
 	}
     }
 
   return retval;
 }
 
-DEFUN ("umask", Fumask, Sumask, 10,
+DEFUN (umask, args, ,
   "umask (MASK)\n\
 \n\
 Change the file permission mask for file creation for the current
 process.  MASK is an integer, interpreted as an octal number.  If
 successful, returns the previous value of the mask (as an integer to
 be interpreted as an octal number); otherwise an error message is
 printed.")
 {
diff --git a/src/filter.cc b/src/filter.cc
--- a/src/filter.cc
+++ b/src/filter.cc
@@ -142,17 +142,17 @@ filter (Array<T>& b, Array<T>& a, Array<
 
   int si_len = (a_len > b_len ? a_len : b_len) - 1;
 
   Array<T> si (si_len, 0.0);
 
   return filter (b, a, x, si);
 }
 
-DEFUN_DLD_BUILTIN ("filter", Ffilter, Sfilter, FSfilter, 10,
+DEFUN_DLD_BUILTIN (filter, args, ,
   "usage: [y [, sf]] = filter (b, a, x [, si])\n\
 \n\
 y = filter (b, a, x) returns the solution to the following linear,\n\
 time-invariant difference equation:\n\
 \n\
   a[1] y[n] + ... + a[la] y[n-la+1] = b[1] x[n] + ... + b[lb] x[n-lb+1],\n\
 where la = length (a) and lb = length (b).\n\
 \n\
diff --git a/src/find.cc b/src/find.cc
--- a/src/find.cc
+++ b/src/find.cc
@@ -153,17 +153,17 @@ find_nonzero_elem_idx (const ComplexMatr
 	    count++;
 	  }
       }
 
   tree_constant tmp (v, 1);
   return find_to_fortran_idx (i_idx, j_idx, tmp, m_nr, nargout);
 }
 
-DEFUN_DLD_BUILTIN ("find", Ffind, Sfind, FSfind, 11,
+DEFUN_DLD_BUILTIN (find, args, nargout,
   "find (X) or [I, J, V] = find (X): Return indices of nonzero elements")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   if (nargin != 1 || nargout > 3)
     {
diff --git a/src/fsolve.cc b/src/fsolve.cc
--- a/src/fsolve.cc
+++ b/src/fsolve.cc
@@ -116,17 +116,17 @@ fsolve_user_function (const ColumnVector
 	}
       else
 	gripe_user_supplied_eval ("fsolve");
     }
 
   return retval;
 }
 
-DEFUN_DLD_BUILTIN ("fsolve", Ffsolve, Sfsolve, FSfsolve, 11,
+DEFUN_DLD_BUILTIN (fsolve, args, nargout,
   "Solve nonlinear equations using Minpack.  Usage:\n\
 \n\
   [X, INFO] = fsolve (F, X0)\n\
 \n\
 Where the first argument is the name of the  function to call to\n\
 compute the vector of function values.  It must have the form\n\
 \n\
   y = f (x)
@@ -278,18 +278,17 @@ show_fsolve_option (const string& keywor
       list++;
     }
 
   warning ("fsolve_options: no match for `%s'", keyword.c_str ());
 
   return retval;
 }
 
-DEFUN_DLD_BUILTIN ("fsolve_options", Ffsolve_options, Sfsolve_options,
-		   FSfsolve_options, 10,
+DEFUN_DLD_BUILTIN (fsolve_options, args, nargout,
   "fsolve_options (KEYWORD, VALUE)\n\
 \n\
 Set or show options for fsolve.  Keywords may be abbreviated\n\
 to the shortest match.")
 {
   Octave_object retval;
 
   int nargin = args.length ();
diff --git a/src/fsqp.cc b/src/fsqp.cc
--- a/src/fsqp.cc
+++ b/src/fsqp.cc
@@ -49,22 +49,22 @@ fsqp_constraint_function (const ColumnVe
 {
   ColumnVector retval;
   return retval;
 }
 
 #endif
 
 #if defined (FSQP_MISSING)
-DEFUN_DLD_BUILTIN ("fsqp", Ffsqp, Sfsqp, FSfsqp, 00,
+DEFUN_DLD_BUILTIN (fsqp, , ,
   "This function requires FSQP, which is not freely\n\
 redistributable.  For more information, read the file\n\
 libcruft/fsqp/README.MISSING in the source distribution.")
 #else
-DEFUN_DLD_BUILTIN ("fsqp", Ffsqp, Sfsqp, FSfsqp, 00,
+DEFUN_DLD_BUILTIN (fsqp, , ,
   "[X, PHI] = fsqp (X, PHI [, LB, UB] [, LB, A, UB] [, LB, G, UB])\n\
 \n\
 Groups of arguments surrounded in `[]' are optional, but\n\
 must appear in the same relative order shown above.")
 #endif
 {
 /*
 
@@ -84,24 +84,22 @@ Handle all of the following:
   Octave_object retval;
 
   error ("fsqp: not implemented yet");
 
   return retval;
 }
 
 #if defined (FSQP_MISSING)
-DEFUN_DLD_BUILTIN ("fsqp_options", Ffsqp_options, Sfsqp_options,
-		   FSfsqp_options, 00,
+DEFUN_DLD_BUILTIN (fsqp_options, , ,
   "This function requires FSQP, which is not freely\n\
 redistributable.  For more information, read the file\n\
 libcruft/fsqp/README.MISSING in the source distribution.")
 #else
-DEFUN_DLD_BUILTIN ("fsqp_options", Ffsqp_options, Sfsqp_options,
-		   FSfsqp_options, 00,
+DEFUN_DLD_BUILTIN (fsqp_options, , ,
   "fsqp_options (KEYWORD, VALUE)\n\
 \n\
 Set or show options for fsqp.  Keywords may be abbreviated\n\
 to the shortest match.")
 #endif
 {
   Octave_object retval;
 
diff --git a/src/givens.cc b/src/givens.cc
--- a/src/givens.cc
+++ b/src/givens.cc
@@ -27,17 +27,17 @@ Software Foundation, 59 Temple Place - S
 #include <config.h>
 #endif
 
 #include "defun-dld.h"
 #include "error.h"
 #include "help.h"
 #include "oct-obj.h"
 
-DEFUN_DLD_BUILTIN ("givens", Fgivens, Sgivens, FSgivens, 11,
+DEFUN_DLD_BUILTIN (givens, args, nargout,
   "G = givens (X, Y)\n\
 \n\
 compute orthogonal matrix G = [c s; -conj (s) c]\n\
 such that G [x; y] = [*; 0]  (x, y scalars)\n\
 \n\
 [c, s] = givens (x, y) returns the (c, s) values themselves.")
 {
   Octave_object retval;
diff --git a/src/help.cc b/src/help.cc
--- a/src/help.cc
+++ b/src/help.cc
@@ -662,22 +662,22 @@ builtin_help (int argc, const string_vec
     }
 
   additional_help_message (output_buf);
   output_buf << ends;
   maybe_page_output (output_buf);
 }
 
 #ifdef USE_GNU_INFO
-DEFUN_TEXT ("help", Fhelp, Shelp, 10,
+DEFUN_TEXT (help, args, ,
   "help [-i] [topic ...]\n\
 \n\
 print cryptic yet witty messages")
 #else
-DEFUN_TEXT ("help", Fhelp, Shelp, 10,
+DEFUN_TEXT (help, args, ,
   "help [topic ...]\n\
 \n\
 print cryptic yet witty messages")
 #endif
 {
   Octave_object retval;
 
   int argc = args.length () + 1;
@@ -701,17 +701,17 @@ print cryptic yet witty messages")
 	{
 	  builtin_help (argc, argv);
 	}
     }
 
   return retval;
 }
 
-DEFUN_TEXT ("type", Ftype, Stype, 11,
+DEFUN_TEXT (type, args, nargout,
   "type NAME ...]\n\
 \n\
 display the definition of each NAME that refers to a function")
 {
   Octave_object retval;
 
   begin_unwind_frame ("Ftype");
 
@@ -847,17 +847,17 @@ display the definition of each NAME that
   else
     print_usage ("type");
 
   run_unwind_frame ("Ftype");
 
   return retval;
 }
 
-DEFUN_TEXT ("which", Fwhich, Swhich, 11,
+DEFUN_TEXT (which, args, nargout,
   "which NAME ...\n\
 \n\
 display the type of each NAME.  If NAME is defined from an function\n\
 file, print the full name of the file.")
 {
   Octave_object retval;
 
   int argc = args.length () + 1;
diff --git a/src/hess.cc b/src/hess.cc
--- a/src/hess.cc
+++ b/src/hess.cc
@@ -31,17 +31,17 @@ Software Foundation, 59 Temple Place - S
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "help.h"
 #include "oct-obj.h"
 #include "user-prefs.h"
 #include "utils.h"
 
-DEFUN_DLD_BUILTIN ("hess", Fhess, Shess, FShess, 11,
+DEFUN_DLD_BUILTIN (hess, args, nargout,
   "[P, H] = hess (A) or H = hess (A): Hessenberg decomposition")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   if (nargin != 1 || nargout > 2)
     {
diff --git a/src/ifft.cc b/src/ifft.cc
--- a/src/ifft.cc
+++ b/src/ifft.cc
@@ -31,17 +31,17 @@ Software Foundation, 59 Temple Place - S
 #include "help.h"
 #include "mappers.h"
 #include "oct-obj.h"
 #include "user-prefs.h"
 #include "utils.h"
 
 // This function should be merged with Ffft.
 
-DEFUN_DLD_BUILTIN ("ifft", Fifft, Sifft, FSifft, 10,
+DEFUN_DLD_BUILTIN (ifft, args, ,
   "ifft (X [, N]): inverse fast fourier transform of a vector")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   if (nargin < 1 || nargin > 2)
     {
diff --git a/src/ifft2.cc b/src/ifft2.cc
--- a/src/ifft2.cc
+++ b/src/ifft2.cc
@@ -31,17 +31,17 @@ Software Foundation, 59 Temple Place - S
 #include "help.h"
 #include "mappers.h"
 #include "oct-obj.h"
 #include "user-prefs.h"
 #include "utils.h"
 
 // This function should be merged with Ffft2.
 
-DEFUN_DLD_BUILTIN ("ifft2", Fifft2, Sifft2, FSifft2, 10,
+DEFUN_DLD_BUILTIN (ifft2, args, ,
   "ifft2 (X [, N] [, M])\n\
 \n\
 two dimensional inverse fast fourier transform of a vector") 
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
diff --git a/src/input.cc b/src/input.cc
--- a/src/input.cc
+++ b/src/input.cc
@@ -1082,17 +1082,17 @@ get_user_input (const Octave_object& arg
     error ("input: reading user-input failed!");
 
   if (debug)
     goto again;
 
   return retval;
 }
 
-DEFUN ("input", Finput, Sinput, 10,
+DEFUN (input, args, ,
   "input (PROMPT [, S])\n\
 \n\
 Prompt user for input.  If the second argument is present, return
 value as a string.")
 {
   Octave_object retval;
 
   int nargin = args.length ();
@@ -1100,34 +1100,34 @@ value as a string.")
   if (nargin == 1 || nargin == 2)
     retval = get_user_input (args);
   else
     print_usage ("input");
 
   return retval;
 }
 
-DEFUN ("keyboard", Fkeyboard, Skeyboard, 10,
+DEFUN (keyboard, args, ,
   "keyboard (PROMPT)\n\
 \n\
 maybe help in debugging function files")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   if (nargin == 0 || nargin == 1)
     retval = get_user_input (args, 1);
   else
     print_usage ("keyboard");
 
   return retval;
 }
 
-DEFUN_TEXT("echo", Fecho, Secho, 10,
+DEFUN_TEXT(echo, args, ,
   "echo [options]\n\
 \n\
   echo [on|off]         -- enable or disable echoing of commands as\n\
                            they are executed in script files\n\
 \n\
   echo [on all|off all] -- enable or disable echoing of commands as they\n\
                            are executed in script files and functions\n\
 \n\
diff --git a/src/inv.cc b/src/inv.cc
--- a/src/inv.cc
+++ b/src/inv.cc
@@ -28,17 +28,17 @@ Software Foundation, 59 Temple Place - S
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "help.h"
 #include "oct-obj.h"
 #include "user-prefs.h"
 #include "utils.h"
 
-DEFUN_DLD_BUILTIN ("inv", Finv, Sinv, FSinv, 10,
+DEFUN_DLD_BUILTIN (inv, args, ,
   "inv (X): inverse of a square matrix")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   if (nargin != 1)
     {
@@ -103,17 +103,17 @@ DEFUN_DLD_BUILTIN ("inv", Finv, Sinv, FS
 
   return retval;
 }
 
 // XXX FIXME XXX -- this should really be done with an alias, but
 // alias_builtin() won't do the right thing if we are actually using
 // dynamic linking.
 
-DEFUN_DLD_BUILTIN ("inverse", Finverse, Sinverse, FSinverse, 11,
+DEFUN_DLD_BUILTIN (inverse, args, nargout,
   "inverse (X): inverse of a square matrix")
 {
   return Finv (args, nargout);
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
diff --git a/src/load-save.cc b/src/load-save.cc
--- a/src/load-save.cc
+++ b/src/load-save.cc
@@ -2181,17 +2181,17 @@ do_load (istream& stream, const string& 
 	}
       else
 	maybe_page_output (output_buf);
     }
 
   return retval;
 }
 
-DEFUN_TEXT ("load", Fload, Sload, 11,
+DEFUN_TEXT (load, args, nargout,
   "load [-force] [-ascii] [-binary] [-mat-binary] file [pattern ...]\n\
 \n\
 Load variables from a file.\n\
 \n\
 If no argument is supplied to select a format, load tries to read the
 named file as an Octave binary, then as a .mat file, and then as an
 Octave text file.\n\
 \n\
@@ -2994,17 +2994,17 @@ save_user_variables (void)
     {
       save_vars (string_vector (), 0, 0, file, 0, format, 0);
       message (0, "save to `%s' complete", fname);
     }
   else
     warning ("unable to open `%s' for writing...", fname);
 }
 
-DEFUN_TEXT ("save", Fsave, Ssave, 10,
+DEFUN_TEXT (save, args, ,
   "save [-ascii] [-binary] [-float-binary] [-mat-binary] \n\
      [-save-builtins] file [pattern ...]\n\
 \n\
 save variables in a file")
 {
   Octave_object retval;
 
   int argc = args.length () + 1;
diff --git a/src/log.cc b/src/log.cc
--- a/src/log.cc
+++ b/src/log.cc
@@ -33,17 +33,17 @@ Software Foundation, 59 Temple Place - S
 #include "help.h"
 #include "oct-obj.h"
 #include "user-prefs.h"
 #include "utils.h"
 
 // XXX FIXME XXX -- the next two functions should really be just
 // one...
 
-DEFUN_DLD_BUILTIN ("logm", Flogm, Slogm, FSlogm, 10,
+DEFUN_DLD_BUILTIN (logm, args, ,
   "logm (X): matrix logarithm")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   if (nargin != 1)
     {
@@ -145,17 +145,17 @@ DEFUN_DLD_BUILTIN ("logm", Flogm, Slogm,
   else
     {
       gripe_wrong_type_arg ("logm", arg);
     }
 
   return retval;
 }
 
-DEFUN_DLD_BUILTIN ("sqrtm", Fsqrtm, Ssqrtm, FSsqrtm, 10,
+DEFUN_DLD_BUILTIN (sqrtm, args, ,
  "sqrtm (X): matrix sqrt")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   if (nargin != 1)
     {
diff --git a/src/lpsolve.cc b/src/lpsolve.cc
--- a/src/lpsolve.cc
+++ b/src/lpsolve.cc
@@ -27,35 +27,34 @@ Software Foundation, 59 Temple Place - S
 
 #include "LPsolve.h"
 
 #include "defun-dld.h"
 #include "error.h"
 #include "help.h"
 #include "oct-obj.h"
 
-DEFUN_DLD_BUILTIN ("lp_solve", Flp_solve, Slp_solve, FSlp_solve, 00,
+DEFUN_DLD_BUILTIN (lp_solve, , ,
   "lp_solve (): solve linear programs using lp_solve.")
 {
   Octave_object retval;
 
   // Force a bad value of inform, and empty matrices for x and phi.
 
   Matrix m;
   retval(2) = -1.0;
   retval(1) = m;
   retval(0) = m;
 
   error ("lp_solve: not implemented yet");
 
   return retval;
 }
 
-DEFUN_DLD_BUILTIN ("lp_solve_options", Flp_solve_options,
-		   Slp_solve_options, FSlp_solve_options, 00,  
+DEFUN_DLD_BUILTIN (lp_solve_options, , ,
   "lp_solve_options (KEYWORD, VALUE)\n\
 \n\
 Set or show options for lp_solve.  Keywords may be abbreviated\n\
 to the shortest match.")
 {
   Octave_object retval;
 
   error ("lp_solve_options: not implemented yet");
diff --git a/src/lsode.cc b/src/lsode.cc
--- a/src/lsode.cc
+++ b/src/lsode.cc
@@ -89,17 +89,17 @@ lsode_user_function (const ColumnVector&
 	}
       else
 	gripe_user_supplied_eval ("lsode");
     }
 
   return retval;
 }
 
-DEFUN_DLD_BUILTIN ("lsode", Flsode, Slsode, FSlsode, 11,
+DEFUN_DLD_BUILTIN (lsode, args, nargout,
   "lsode (F, X0, T_OUT, T_CRIT)\n\
 \n\
 The first argument is the name of the function to call to\n\
 compute the vector of right hand sides.  It must have the form\n\
 \n\
   xdot = f (x, t)\n\
 \n\
 where xdot and x are vectors and t is a scalar.\n")
@@ -293,18 +293,17 @@ show_lsode_option (const string& keyword
       list++;
     }
 
   warning ("lsode_options: no match for `%s'", keyword.c_str ());
 
   return retval;
 }
 
-DEFUN_DLD_BUILTIN ("lsode_options", Flsode_options, Slsode_options,
-		   FSlsode_options, 10,
+DEFUN_DLD_BUILTIN (lsode_options, args, ,
   "lsode_options (KEYWORD, VALUE)\n\
 \n\
 Set or show options for lsode.  Keywords may be abbreviated\n\
 to the shortest match.")
 {
   Octave_object retval;
 
   int nargin = args.length ();
diff --git a/src/lu.cc b/src/lu.cc
--- a/src/lu.cc
+++ b/src/lu.cc
@@ -31,17 +31,17 @@ Software Foundation, 59 Temple Place - S
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "help.h"
 #include "oct-obj.h"
 #include "user-prefs.h"
 #include "utils.h"
 
-DEFUN_DLD_BUILTIN ("lu", Flu, Slu, FSlu, 11,
+DEFUN_DLD_BUILTIN (lu, args, nargout,
   "[L, U, P] = lu (A): LU factorization")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   if (nargin != 1 || nargout > 3)
     {
diff --git a/src/mappers.cc b/src/mappers.cc
--- a/src/mappers.cc
+++ b/src/mappers.cc
@@ -331,116 +331,116 @@ tanh (const Complex& x)
 {
   Complex retval = sinh (x) / cosh (x);
   return retval;
 }
 
 void
 install_mapper_functions (void)
 {
-  DEFUN_MAPPER ("abs", Sabs, 0, 0.0, 0.0, fabs, abs, 0,
+  DEFUN_MAPPER (abs, 0, 0.0, 0.0, fabs, abs, 0,
     "abs (X): compute abs (X) for each element of X");
 
-  DEFUN_MAPPER ("acos", Sacos, 1, -1.0, 1.0, acos, 0, acos,
+  DEFUN_MAPPER (acos, 1, -1.0, 1.0, acos, 0, acos,
     "acos (X): compute acos (X) for each element of X");
 
-  DEFUN_MAPPER ("acosh", Sacosh, 1, 1.0, DBL_MAX, acosh, 0, acosh,
+  DEFUN_MAPPER (acosh, 1, 1.0, DBL_MAX, acosh, 0, acosh,
     "acosh (X): compute acosh (X) for each element of X");
 
-  DEFUN_MAPPER ("angle", Sangle, 0, 0.0, 0.0, arg, arg, 0,
+  DEFUN_MAPPER (angle, 0, 0.0, 0.0, arg, arg, 0,
     "angle (X): compute arg (X) for each element of X");
 
-  DEFUN_MAPPER ("arg", Sarg, 0, 0.0, 0.0, arg, arg, 0,
+  DEFUN_MAPPER (arg, 0, 0.0, 0.0, arg, arg, 0,
     "arg (X): compute arg (X) for each element of X");
 
-  DEFUN_MAPPER ("asin", Sasin, 1, -1.0, 1.0, asin, 0, asin,
+  DEFUN_MAPPER (asin, 1, -1.0, 1.0, asin, 0, asin,
     "asin (X): compute asin (X) for each element of X");
 
-  DEFUN_MAPPER ("asinh", Sasinh, 0, 0.0, 0.0, asinh, 0, asinh,
+  DEFUN_MAPPER (asinh, 0, 0.0, 0.0, asinh, 0, asinh,
     "asinh (X): compute asinh (X) for each element of X");
 
-  DEFUN_MAPPER ("atan", Satan, 0, 0.0, 0.0, atan, 0, atan,
+  DEFUN_MAPPER (atan, 0, 0.0, 0.0, atan, 0, atan,
     "atan (X): compute atan (X) for each element of X");
 
-  DEFUN_MAPPER ("atanh", Satanh, 1, -1.0, 1.0, atanh, 0, atanh,
+  DEFUN_MAPPER (atanh, 1, -1.0, 1.0, atanh, 0, atanh,
     "atanh (X): compute atanh (X) for each element of X");
 
-  DEFUN_MAPPER ("ceil", Sceil, 0, 0.0, 0.0, ceil, 0, ceil,
+  DEFUN_MAPPER (ceil, 0, 0.0, 0.0, ceil, 0, ceil,
     "ceil (X): round elements of X toward +Inf");
 
-  DEFUN_MAPPER ("conj", Sconj, 0, 0.0, 0.0, conj, 0, conj,
+  DEFUN_MAPPER (conj, 0, 0.0, 0.0, conj, 0, conj,
     "conj (X): compute complex conjugate for each element of X");
 
-  DEFUN_MAPPER ("cos", Scos, 0, 0.0, 0.0, cos, 0, cos,
+  DEFUN_MAPPER (cos, 0, 0.0, 0.0, cos, 0, cos,
     "cos (X): compute cos (X) for each element of X");
 
-  DEFUN_MAPPER ("cosh", Scosh, 0, 0.0, 0.0, cosh, 0, cosh,
+  DEFUN_MAPPER (cosh, 0, 0.0, 0.0, cosh, 0, cosh,
     "cosh (X): compute cosh (X) for each element of X");
 
-  DEFUN_MAPPER ("erf", Serf, 0, 0.0, 0.0, xerf, 0, 0,
+  DEFUN_MAPPER (erf, 0, 0.0, 0.0, xerf, 0, 0,
     "erf (X): compute erf (X) for each element of X");
 
-  DEFUN_MAPPER ("erfc", Serfc, 0, 0.0, 0.0, xerfc, 0, 0,
+  DEFUN_MAPPER (erfc, 0, 0.0, 0.0, xerfc, 0, 0,
     "erfc (X): compute erfc (X) for each element of X");
 
-  DEFUN_MAPPER ("exp", Sexp, 0, 0.0, 0.0, exp, 0, exp,
+  DEFUN_MAPPER (exp, 0, 0.0, 0.0, exp, 0, exp,
     "exp (X): compute exp (X) for each element of X");
 
-  DEFUN_MAPPER ("finite", Sfinite, 0, 0.0, 0.0, xfinite, xfinite, 0,
+  DEFUN_MAPPER (finite, 0, 0.0, 0.0, xfinite, xfinite, 0,
     "finite (X): return 1 for finite elements of X");
 
-  DEFUN_MAPPER ("fix", Sfix, 0, 0.0, 0.0, fix, 0, fix,
+  DEFUN_MAPPER (fix, 0, 0.0, 0.0, fix, 0, fix,
     "fix (X): round elements of X toward zero");
 
-  DEFUN_MAPPER ("floor", Sfloor, 0, 0.0, 0.0, floor, 0, floor,
+  DEFUN_MAPPER (floor, 0, 0.0, 0.0, floor, 0, floor,
     "floor (X): round elements of X toward -Inf");
 
-  DEFUN_MAPPER ("gamma", Sgamma, 0, 0.0, 0.0, xgamma, 0, 0,
+  DEFUN_MAPPER (gamma, 0, 0.0, 0.0, xgamma, 0, 0,
     "gamma (X): compute gamma (X) for each element of X");
 
-  DEFUN_MAPPER ("isinf", Sisinf, 0, 0.0, 0.0, xisinf, xisinf, 0,
+  DEFUN_MAPPER (isinf, 0, 0.0, 0.0, xisinf, xisinf, 0,
     "isinf (X): return 1 for elements of X infinite");
 
-  DEFUN_MAPPER ("imag", Simag, 0, 0.0, 0.0, imag, imag, 0,
+  DEFUN_MAPPER (imag, 0, 0.0, 0.0, imag, imag, 0,
     "imag (X): return imaginary part for each elements of X");
 
-  DEFUN_MAPPER ("isnan", Sisnan, 0, 0.0, 0.0, xisnan, xisnan, 0,
+  DEFUN_MAPPER (isnan, 0, 0.0, 0.0, xisnan, xisnan, 0,
     "isnan (X): return 1 where elements of X are NaNs");
 
-  DEFUN_MAPPER ("lgamma", Slgamma, 0, 0.0, 0.0, xlgamma, 0, 0,
+  DEFUN_MAPPER (lgamma, 0, 0.0, 0.0, xlgamma, 0, 0,
     "lgamma (X): compute log gamma (X) for each element of X");
 
-  DEFUN_MAPPER ("log", Slog, 1, 0.0, DBL_MAX, log, 0, log,
+  DEFUN_MAPPER (log, 1, 0.0, DBL_MAX, log, 0, log,
     "log (X): compute log (X) for each element of X");
 
-  DEFUN_MAPPER ("log10", Slog10, 1, 0.0, DBL_MAX, log10, 0, log10,
+  DEFUN_MAPPER (log10, 1, 0.0, DBL_MAX, log10, 0, log10,
     "log10 (X): compute log10 (X) for each element of X");
 
-  DEFUN_MAPPER ("real", Sreal, 0, 0.0, 0.0, real, real, 0,
+  DEFUN_MAPPER (real, 0, 0.0, 0.0, real, real, 0,
     "real (X): return real part for each element of X");
 
-  DEFUN_MAPPER ("round", Sround, 0, 0.0, 0.0, round, 0, round,
+  DEFUN_MAPPER (round, 0, 0.0, 0.0, round, 0, round,
     "round (X): round elements of X to nearest integer");
 
-  DEFUN_MAPPER ("sign", Ssign, 0, 0.0, 0.0, signum, 0, signum,
+  DEFUN_MAPPER (sign, 0, 0.0, 0.0, signum, 0, signum,
     "sign (X): apply signum function to elements of X");
 
-  DEFUN_MAPPER ("sin", Ssin, 0, 0.0, 0.0, sin, 0, sin,
+  DEFUN_MAPPER (sin, 0, 0.0, 0.0, sin, 0, sin,
     "sin (X): compute sin (X) for each element of X");
 
-  DEFUN_MAPPER ("sinh", Ssinh, 0, 0.0, 0.0, sinh, 0, sinh,
+  DEFUN_MAPPER (sinh, 0, 0.0, 0.0, sinh, 0, sinh,
     "sinh (X): compute sinh (X) for each element of X");
 
-  DEFUN_MAPPER ("sqrt", Ssqrt, 1, 0.0, DBL_MAX, sqrt, 0, sqrt,
+  DEFUN_MAPPER (sqrt, 1, 0.0, DBL_MAX, sqrt, 0, sqrt,
     "sqrt (X): compute sqrt (X) for each element of X");
 
-  DEFUN_MAPPER ("tan", Stan, 0, 0.0, 0.0, tan, 0, tan,
+  DEFUN_MAPPER (tan, 0, 0.0, 0.0, tan, 0, tan,
     "tan (X): compute tan (X) for each element of X");
 
-  DEFUN_MAPPER ("tanh", Stanh, 0, 0.0, 0.0, tanh, 0, tanh,
+  DEFUN_MAPPER (tanh, 0, 0.0, 0.0, tanh, 0, tanh,
     "tanh (X): compute tanh (X) for each element of X");
 
   DEFALIAS (gammaln, lgamma);
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
diff --git a/src/minmax.cc b/src/minmax.cc
--- a/src/minmax.cc
+++ b/src/minmax.cc
@@ -357,17 +357,17 @@ max (const ComplexMatrix& a, const Compl
 		result.elem (i, j) = b.elem (i, j);
 	    }
 	}
     }
 
   return result;
 }
 
-DEFUN_DLD_BUILTIN ("min", Fmin, Smin, FSmin, 11,
+DEFUN_DLD_BUILTIN (min, args, nargout,
   "min (X): minimum value(s) of a vector (matrix)")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   if (nargin < 1 || nargin > 2 || nargout > 2)
     {
@@ -585,17 +585,17 @@ DEFUN_DLD_BUILTIN ("min", Fmin, Smin, FS
 	}
     }
   else
     panic_impossible ();
 
   return retval;
 }
 
-DEFUN_DLD_BUILTIN ("max", Fmax, Smax, FSmax, 11,
+DEFUN_DLD_BUILTIN (max, args, nargout,
   "max (X): maximum value(s) of a vector (matrix)")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   if (nargin < 1 || nargin > 2 || nargout > 2)
     {
diff --git a/src/npsol.cc b/src/npsol.cc
--- a/src/npsol.cc
+++ b/src/npsol.cc
@@ -226,22 +226,22 @@ nonlinear_constraints_ok (const ColumnVe
 	}
     }
   return ok;
 }
 
 #endif
 
 #if defined (NPSOL_MISSING)
-DEFUN_DLD_BUILTIN ("npsol", Fnpsol, Snpsol, FSnpsol, 00,
+DEFUN_DLD_BUILTIN (npsol, , ,
   "This function requires NPSOL, which is not freely\n\
 redistributable.  For more information, read the file\n\
 libcruft/npsol/README.MISSING in the source distribution.")
 #else
-DEFUN_DLD_BUILTIN ("npsol", Fnpsol, Snpsol, FSnpsol, 11,
+DEFUN_DLD_BUILTIN (npsol, args, nargout,
   "[X, OBJ, INFO, LAMBDA] = npsol (X, PHI [, LB, UB] [, A_LB, A, A_UB]\n\
                                 [, G_LB, G, G_UB])\n\
 \n\
 Groups of arguments surrounded in `[]' are optional, but\n\
 must appear in the same relative order shown above.\n\
 \n\
 The second argument is a string containing the name of the objective\n\
 function to call.  The objective function must be of the form\n\
@@ -768,24 +768,22 @@ show_npsol_option (const string& keyword
   warning ("npsol_options: no match for `%s'", keyword.c_str ());
 
   return retval;
 }
 
 #endif
 
 #if defined (NPSOL_MISSING)
-DEFUN_DLD_BUILTIN ("npsol_options", Fnpsol_options, Snpsol_options,
-		   FSnpsol_options, 00,
+DEFUN_DLD_BUILTIN (npsol_options, , ,
   "This function requires NPSOL, which is not freely\n\
 redistributable.  For more information, read the file\n\
 libcruft/npsol/README.MISSING in the source distribution.")
 #else
-DEFUN_DLD_BUILTIN ("npsol_options", Fnpsol_options, Snpsol_options,
-		   FSnpsol_options, 10,
+DEFUN_DLD_BUILTIN (npsol_options, args, ,
   "npsol_options (KEYWORD, VALUE)\n\
 \n\
 Set or show options for npsol.  Keywords may be abbreviated\n\
 to the shortest match.")
 #endif
 {
   Octave_object retval;
 
diff --git a/src/oct-hist.cc b/src/oct-hist.cc
--- a/src/oct-hist.cc
+++ b/src/oct-hist.cc
@@ -509,17 +509,17 @@ do_run_history (int argc, const string_v
 
   // Delete the temporary file.
 
   // XXX FIXME XXX -- should probably be done using an unwind_protect.
 
   unlink (name.c_str ());
 }
 
-DEFUN_TEXT ("edit_history", Fedit_history, Sedit_history, 10,
+DEFUN_TEXT (edit_history, args, ,
   "edit_history [first] [last]\n\
 \n\
 edit commands from the history list")
 {
   Octave_object retval;
 
   int argc = args.length () + 1;
 
@@ -528,17 +528,17 @@ edit commands from the history list")
   if (error_state)
     return retval;
 
   do_edit_history (argc, argv);
 
   return retval;
 }
 
-DEFUN_TEXT ("history", Fhistory, Shistory, 10,
+DEFUN_TEXT (history, args, ,
   "history [N] [-w file] [-r file] [-q]\n\
 \n\
 display, save, or load command history")
 {
   Octave_object retval;
 
   int argc = args.length () + 1;
 
@@ -547,17 +547,17 @@ display, save, or load command history")
   if (error_state)
     return retval;
 
   do_history (argc, argv);
 
   return retval;
 }
 
-DEFUN_TEXT ("run_history", Frun_history, Srun_history, 10,
+DEFUN_TEXT (run_history, args, ,
   "run_history [first] [last]\n\
 \n\
 run commands from the history list")
 {
   Octave_object retval;
 
   int argc = args.length () + 1;
 
diff --git a/src/pager.cc b/src/pager.cc
--- a/src/pager.cc
+++ b/src/pager.cc
@@ -188,17 +188,17 @@ close_diary_file (void)
 
 void
 maybe_write_to_diary_file (const string& s)
 {
   if (write_to_diary_file && diary_stream)
     diary_stream << s;
 }
 
-DEFUN_TEXT ("diary", Fdiary, Sdiary, 10,
+DEFUN_TEXT (diary, args, ,
   "diary [on|off]\n\
 diary [file]\n\
 \n\
 redirect all input and screen output to a file.")
 {
   Octave_object retval;
 
   int argc = args.length () + 1;
@@ -240,17 +240,17 @@ redirect all input and screen output to 
     default:
       print_usage ("diary");
       break;
     }
 
   return retval;
 }
 
-DEFUN_TEXT ("more", Fmore, Smore, 10,
+DEFUN_TEXT (more, args, ,
   "more on\n\
 more off\n\
 \n\
 Turn output pagination on or off.")
 {
   Octave_object retval;
 
   int argc = args.length () + 1;
diff --git a/src/pinv.cc b/src/pinv.cc
--- a/src/pinv.cc
+++ b/src/pinv.cc
@@ -28,17 +28,17 @@ Software Foundation, 59 Temple Place - S
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "help.h"
 #include "oct-obj.h"
 #include "user-prefs.h"
 #include "utils.h"
 
-DEFUN_DLD_BUILTIN ("pinv", Fpinv, Spinv, FSpinv, 10,
+DEFUN_DLD_BUILTIN (pinv, args, ,
   "pinv ( [, tol])\n\
 Returns the pseudoinverse of X; singular values less than tol are ignored.")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   if (nargin < 1 || nargin > 2)
diff --git a/src/pr-output.cc b/src/pr-output.cc
--- a/src/pr-output.cc
+++ b/src/pr-output.cc
@@ -1537,17 +1537,17 @@ octave_print_internal (ostream& os, cons
 	os << " ]";
     }
   else
     {
       os << "sorry, printing char matrices not implemented yet\n";
     }
 }
 
-DEFUN ("disp", Fdisp, Sdisp, 10,
+DEFUN (disp, args, ,
   "disp (X): display value without name tag")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   if (nargin == 1)
     args(0).eval (1);
@@ -1700,17 +1700,17 @@ set_format_style (int argc, const string
     }
   else
     {
       init_format_state ();
       set_output_prec_and_fw (5, 10);
     }
 }
 
-DEFUN_TEXT ("format", Fformat, Sformat, 10,
+DEFUN_TEXT (format, args, ,
   "format [style]\n\
 \n\
 set output formatting style")
 {
   Octave_object retval;
 
   int argc = args.length () + 1;
 
diff --git a/src/pt-fcn.cc b/src/pt-fcn.cc
--- a/src/pt-fcn.cc
+++ b/src/pt-fcn.cc
@@ -482,17 +482,17 @@ tree_function::print_code_function_trail
 {
   print_code_indent (os);
 
   os << "endfunction";
 
   print_code_new_line (os);
 }
 
-DEFUN ("va_arg", Fva_arg, Sva_arg, 10,
+DEFUN (va_arg, args, ,
   "va_arg (): return next argument in a function that takes a\n\
 variable number of parameters")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   if (nargin == 0)
@@ -511,17 +511,17 @@ variable number of parameters")
 	::error ("va_arg only valid within function body");
     }
   else
     print_usage ("va_arg");
 
   return retval;
 }
 
-DEFUN ("va_start", Fva_start, Sva_start, 10,
+DEFUN (va_start, args, ,
   "va_start (): reset the pointer to the list of optional arguments\n\
 to the beginning")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   if (nargin == 0)
@@ -540,17 +540,17 @@ to the beginning")
 	::error ("va_start only valid within function body");
     }
   else
     print_usage ("va_start");
 
   return retval;
 }
 
-DEFUN ("vr_val", Fvr_val, Svr_val, 10,
+DEFUN (vr_val, args, ,
   "vr_val (X): append X to the list of optional return values for a
 function that allows a variable number of return values")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   if (nargin == 1)
diff --git a/src/pt-plot.cc b/src/pt-plot.cc
--- a/src/pt-plot.cc
+++ b/src/pt-plot.cc
@@ -984,17 +984,17 @@ do_external_plotter_cd (const string& ne
       ostrstream plot_buf;
       plot_buf << "cd \"" << newdir << "\"\n" << ends;
       char *message = plot_buf.str ();
       send_to_plot_stream (message);
       delete [] message;
     }
 }
 
-DEFUN ("clearplot", Fclearplot, Sclearplot, 00,
+DEFUN (clearplot, , ,
   "clearplot (): clear the plot window")
 {
   Octave_object retval;
   send_to_plot_stream ("clear\n");
 
   // XXX FIXME XXX -- instead of just clearing these things, it would
   // be nice if we could reset things to a user-specified default
   // state.
@@ -1010,25 +1010,25 @@ DEFUN ("clearplot", Fclearplot, Sclearpl
 
   plot_line_count = 0;
 
   return retval;
 }
 
 DEFALIAS (clg, clearplot);
 
-DEFUN ("closeplot", Fcloseplot, Scloseplot, 00,
+DEFUN (closeplot, , ,
   "closeplot (): close the stream to plotter")
 {
   Octave_object retval;
   close_plot_stream ();
   return retval;
 }
 
-DEFUN_TEXT ("hold", Fhold, Shold, 10,
+DEFUN_TEXT (hold, args, ,
   "hold [on|off]\n\
 \n\
 determine whether the plot window is cleared before the next line is\n\
 drawn.  With no argument, toggle the current state.") 
 {
   Octave_object retval;
 
   int argc = args.length () + 1;
@@ -1056,33 +1056,33 @@ drawn.  With no argument, toggle the cur
     default:
       print_usage ("hold");
       break;
     }
 
   return retval;
 }
 
-DEFUN ("ishold", Fishold, Sishold, 00,
+DEFUN (ishold, , ,
   "ishold\n\
 \n\
 Return 1 if hold is on, otherwise return 0.")
 {
   return (double) (! clear_before_plotting);
 }
 
-DEFUN ("purge_tmp_files", Fpurge_tmp_files, Spurge_tmp_files, 00,
+DEFUN (purge_tmp_files, , ,
   "delete temporary data files used for plotting")
 {
   Octave_object retval;
   cleanup_tmp_files ();
   return retval;
 }
 
-DEFUN_TEXT ("set", Fset, Sset, 10,
+DEFUN_TEXT (set, args, ,
   "set [options]\n\
 \n\
 set plotting options")
 {
   Octave_object retval;
 
   int argc = args.length () + 1;
 
@@ -1118,17 +1118,17 @@ set plotting options")
   char *plot_command = plot_buf.str ();
   send_to_plot_stream (plot_command);
 
   delete [] plot_command;
 
   return retval;
 }
 
-DEFUN_TEXT ("show", Fshow, Sshow, 10,
+DEFUN_TEXT (show, args, ,
   "show [options]\n\
 \n\
 show plotting options")
 {
   Octave_object retval;
 
   int argc = args.length () + 1;
 
diff --git a/src/qpsol.cc b/src/qpsol.cc
--- a/src/qpsol.cc
+++ b/src/qpsol.cc
@@ -76,22 +76,22 @@ linear_constraints_ok (const ColumnVecto
   return ok;
 }
 
 static QPSOL_options qpsol_opts;
 
 #endif
 
 #if defined (QPSOL_MISSING)
-DEFUN_DLD_BUILTIN ("qpsol", Fqpsol, Sqpsol, FSqpsol, 00,
+DEFUN_DLD_BUILTIN (qpsol, , ,
   "This function requires QPSOL, which is not freely\n\
 redistributable.  For more information, read the file\n\
 libcruft/qpsol/README.MISSING in the source distribution.")
 #else
-DEFUN_DLD_BUILTIN ("qpsol", Fqpsol, Sqpsol, FSqpsol, 11,
+DEFUN_DLD_BUILTIN (qpsol, args, nargout,
   "[X, OBJ, INFO, LAMBDA] = qpsol (X, H, C [, LB, UB] [, A_LB, A, A_UB])\n\
 \n\
 Groups of arguments surrounded in `[]' are optional, but\n\
 must appear in the same relative order shown above.")
 #endif
 {
 /*
 
@@ -409,24 +409,22 @@ show_qpsol_option (const string& keyword
   warning ("qpsol_options: no match for `%s'", keyword.c_str ());
 
   return retval;
 }
 
 #endif
 
 #if defined (QPSOL_MISSING)
-DEFUN_DLD_BUILTIN ("qpsol_options", Fqpsol_options, Sqpsol_options,
-		   FSqpsol_options, 00,
+DEFUN_DLD_BUILTIN (qpsol_options, , ,
   "This function requires QPSOL, which is not freely\n\
 redistributable.  For more information, read the file\n\
 libcruft/qpsol/README.MISSING in the source distribution.")
 #else
-DEFUN_DLD_BUILTIN ("qpsol_options", Fqpsol_options, Sqpsol_options,
-		   FSqpsol_options, 10,
+DEFUN_DLD_BUILTIN (qpsol_options, args, ,
   "qpsol_options (KEYWORD, VALUE)\n
 \n\
 Set or show options for qpsol.  Keywords may be abbreviated\n\
 to the shortest match.")
 #endif
 {
   Octave_object retval;
 
diff --git a/src/qr.cc b/src/qr.cc
--- a/src/qr.cc
+++ b/src/qr.cc
@@ -33,17 +33,17 @@ Software Foundation, 59 Temple Place - S
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "help.h"
 #include "oct-obj.h"
 #include "user-prefs.h"
 #include "utils.h"
 
-DEFUN_DLD_BUILTIN ("qr", Fqr, Sqr, FSqr, 11,
+DEFUN_DLD_BUILTIN (qr, args, nargout,
   "[Q, R] = qr (X):      form Q unitary and R upper triangular such\n\
                        that Q * R = X\n\
 \n\
 [Q, R] = qr (X, 0):    form the economy decomposition such that if X is\n\
                        if X is m by n then only the first n columns of Q\n\
                        are computed.\n\
 \n\
 [Q, R, P] = qr (X):    form QRP factorization of X where\n\
diff --git a/src/quad.cc b/src/quad.cc
--- a/src/quad.cc
+++ b/src/quad.cc
@@ -80,17 +80,17 @@ quad_user_function (double x)
 	  quad_integration_error = 1;  // XXX FIXME XXX
 	  gripe_user_supplied_eval ("quad");
 	}
     }
 
   return retval;
 }
 
-DEFUN_DLD_BUILTIN ("quad", Fquad, Squad, FSquad, 11,
+DEFUN_DLD_BUILTIN (quad, args, nargout,
   "[V, IER, NFUN] = quad (F, A, B [, TOL] [, SING])\n\
 \n\
 Where the first argument is the name of the  function to call to\n\
 compute the value of the integrand.  It must have the form\n\
 \n\
   y = f (x)
 \n\
 where y and x are scalars.\n\
@@ -350,18 +350,17 @@ show_quad_option (const string& keyword)
       list++;
     }
 
   warning ("quad_options: no match for `%s'", keyword.c_str ());
 
   return retval;
 }
 
-DEFUN_DLD_BUILTIN ("quad_options", Fquad_options, Squad_options,
-		   FSquad_options, 10,
+DEFUN_DLD_BUILTIN (quad_options, args, ,
   "quad_options (KEYWORD, VALUE)\n\
 \n\
 Set or show options for quad.  Keywords may be abbreviated\n\
 to the shortest match.")
 {
   Octave_object retval;
 
   int nargin = args.length ();
diff --git a/src/qzval.cc b/src/qzval.cc
--- a/src/qzval.cc
+++ b/src/qzval.cc
@@ -30,17 +30,17 @@ Software Foundation, 59 Temple Place - S
 #include <cfloat>
 
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "help.h"
 #include "oct-obj.h"
 
-DEFUN_DLD_BUILTIN ("qzval", Fqzval, Sqzval, FSqzval, 10,
+DEFUN_DLD_BUILTIN (qzval, args, ,
   "X = qzval (A, B)\n\
 \n\
 compute generalized eigenvalues of the matrix pencil (A - lambda B).\n\
 A and B must be real matrices.")
 {
   tree_constant retval;
 
   int nargin = args.length ();
diff --git a/src/rand.cc b/src/rand.cc
--- a/src/rand.cc
+++ b/src/rand.cc
@@ -326,17 +326,17 @@ do_rand (const Octave_object& args, int 
       retval(0) = rand_mat;
     }
   else
     error ("rand: invalid negative argument");
 
   return retval;
 }
 
-DEFUN_DLD_BUILTIN ("rand", Frand, Srand, FSrand, 11,
+DEFUN_DLD_BUILTIN (rand, args, nargout,
   "rand            -- generate a random value from a uniform distribution\n\
 \n\
 rand (N)        -- generate N x N matrix\n\
 rand (size (A)) -- generate matrix the size of A\n\
 rand (N, M)     -- generate N x M matrix\n\
 rand (SEED)     -- get current seed\n\
 rand (SEED, N)  -- set seed\n\
 \n\
@@ -360,17 +360,17 @@ See also: randn")
 }
 
 static void
 reset_rand_generator (void *)
 {
   F77_FCN (setcgn, SETCGN) (current_distribution);
 }
 
-DEFUN_DLD_BUILTIN ("randn", Frandn, Srandn, FSrandn, 11,
+DEFUN_DLD_BUILTIN (randn, args, nargout,
   "randn            -- generate a random value from a normal distribution\n\
 \n\
 randn (N)        -- generate N x N matrix\n\
 randn (size (A)) -- generate matrix the size of A\n\
 randn (N, M)     -- generate N x M matrix\n\
 randn (SEED)     -- get current seed\n\
 randn (SEED, N)  -- set seed\n\
 \n\
diff --git a/src/resource.cc b/src/resource.cc
--- a/src/resource.cc
+++ b/src/resource.cc
@@ -97,17 +97,17 @@ mk_ru_map (struct rusage *ru)
   m ["nsignals"] = octave_NaN;
   m ["nvcsw"] = octave_NaN;
   m ["nivcsw"] = octave_NaN;
 #endif
 
   return m;
 }
 
-DEFUN ("getrusage", Fgetrusage, Sgetrusage, 00,
+DEFUN (getrusage, , ,
   "getrusage ()\n\
 \n\
 Return system resource statistics.")
 {
   Octave_object retval;
 
 #if defined (HAVE_GETRUSAGE)
 
diff --git a/src/schur.cc b/src/schur.cc
--- a/src/schur.cc
+++ b/src/schur.cc
@@ -33,17 +33,17 @@ Software Foundation, 59 Temple Place - S
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "help.h"
 #include "oct-obj.h"
 #include "user-prefs.h"
 #include "utils.h"
 
-DEFUN_DLD_BUILTIN ("schur", Fschur, Sschur, FSschur, 11,
+DEFUN_DLD_BUILTIN (schur, args, nargout,
   "[U, S] = schur (A) or S = schur (A)\n\
 \n\
 or, for ordered Schur:\n\
 \n\
   [U, S] = schur (A, TYPE) or S = schur (A, TYPE)\n\
 where TYPE is a string that begins with one of the following\n\
 characters:\n\
 \n\
diff --git a/src/sort.cc b/src/sort.cc
--- a/src/sort.cc
+++ b/src/sort.cc
@@ -304,17 +304,17 @@ mx_sort (ComplexRowVector& cv)
     }
 
   retval (1) = tree_constant (idx, 0);
   retval (0) = tree_constant (cvs, 0);
 
   return retval;
 }
 
-DEFUN_DLD_BUILTIN ("sort", Fsort, Ssort, FSsort, 11,
+DEFUN_DLD_BUILTIN (sort, args, nargout,
   "[S, I] = sort (X)\n\
 \n\
 sort the columns of X, optionally return sort index")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
diff --git a/src/strfns.cc b/src/strfns.cc
--- a/src/strfns.cc
+++ b/src/strfns.cc
@@ -32,47 +32,47 @@ Software Foundation, 59 Temple Place - S
 #include "defun.h"
 #include "error.h"
 #include "gripes.h"
 #include "help.h"
 #include "pt-const.h"
 #include "oct-obj.h"
 #include "utils.h"
 
-DEFUN ("isstr", Fisstr, Sisstr, 10,
+DEFUN (isstr, args, ,
   "isstr (X): return 1 if X is a string, 0 otherwise")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   if (nargin == 1 && args(0).is_defined ())
     retval = (double) args(0).is_string ();
   else
     print_usage ("isstr");
 
   return retval;
 }
 
-DEFUN ("setstr", Fsetstr, Ssetstr, 10,
+DEFUN (setstr, args, ,
   "setstr (V): convert a vector to a string")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   if (nargin == 1 && args(0).is_defined ())
     retval = args(0).convert_to_str ();
   else
     print_usage ("setstr");
 
   return retval;
 }
 
-DEFUN ("toascii", Ftoascii, Stoascii, 10,
+DEFUN (toascii, args, ,
   "toascii (STRING): return ASCII representation of STRING in a matrix")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   if (nargin == 1)
     {
diff --git a/src/svd.cc b/src/svd.cc
--- a/src/svd.cc
+++ b/src/svd.cc
@@ -33,17 +33,17 @@ Software Foundation, 59 Temple Place - S
 #include "gripes.h"
 #include "help.h"
 #include "mappers.h"
 #include "oct-obj.h"
 #include "pr-output.h"
 #include "user-prefs.h"
 #include "utils.h"
 
-DEFUN_DLD_BUILTIN ("svd", Fsvd, Ssvd, FSsvd, 11,
+DEFUN_DLD_BUILTIN (svd, args, nargout,
   "S = svd (X) or [U, S, V] = svd (X [, 0])\n\
 \n\
 Compute the singular value decomposition of X.  Given a second input\n\
 argument, an `economy' sized factorization is computed that omits\n\
 unnecessary rows and columns of U and V.\n\
 \n\
 X may not contain any Inf or NaN values.")
 {
diff --git a/src/syl.cc b/src/syl.cc
--- a/src/syl.cc
+++ b/src/syl.cc
@@ -29,17 +29,17 @@ Software Foundation, 59 Temple Place - S
 
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "help.h"
 #include "oct-obj.h"
 #include "utils.h"
 
-DEFUN_DLD_BUILTIN ("syl", Fsyl, Ssyl, FSsyl, 11,
+DEFUN_DLD_BUILTIN (syl, args, nargout,
   "X = syl (A, B, C): solve the Sylvester equation A X + X B + C = 0")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   if (nargin != 3 || nargout > 1)
     {
diff --git a/src/sysdep.cc b/src/sysdep.cc
--- a/src/sysdep.cc
+++ b/src/sysdep.cc
@@ -519,17 +519,17 @@ octave_chdir (const string& path)
     retval = _chdir2 (path.c_str ());
 
   return retval;
 #else
   return chdir (path.c_str ());
 #endif
 }
 
-DEFUN ("clc", Fclc, Sclc, 00,
+DEFUN (clc, , ,
   "clc (): clear screen")
 {
   Octave_object retval;
 
   rl_beg_of_line ();
   rl_kill_line (1);
 
 #if ! defined (_GO32_)
@@ -543,17 +543,17 @@ DEFUN ("clc", Fclc, Sclc, 00,
 
   fflush (rl_outstream);
 
   return retval;
 }
 
 DEFALIAS (home, clc);
 
-DEFUN ("getenv", Fgetenv, Sgetenv, 10,
+DEFUN (getenv, args, ,
   "getenv (STRING): get environment variable values")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   if (nargin == 1)
     {
@@ -570,17 +570,17 @@ DEFUN ("getenv", Fgetenv, Sgetenv, 10,
 	}
     }
   else
     print_usage ("getenv");
 
   return retval;
 }
 
-DEFUN ("putenv", Fputenv, Sputenv, 10,
+DEFUN (putenv, args, ,
   "putenv (VAR, VALUE): define environment variable VAR=VALUE")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   if (nargin == 2)
     {
@@ -599,17 +599,17 @@ DEFUN ("putenv", Fputenv, Sputenv, 10,
 	error ("putenv: first argument should be a string");
     }
   else
     print_usage ("putenv");
 
   return retval;
 }
 
-DEFUN ("kbhit", Fkbhit, Skbhit, 00,
+DEFUN (kbhit, , ,
   "kbhit: get a single character from the terminal")
 {
   Octave_object retval;
 
   // XXX FIXME XXX -- add timeout and default value args?
 
   if (interactive)
     {
@@ -618,17 +618,17 @@ DEFUN ("kbhit", Fkbhit, Skbhit, 00,
       s[0] = c;
       s[1] = '\0';
       retval = s;
     }
 
   return retval;
 }
 
-DEFUN ("pause", Fpause, Spause, 10,
+DEFUN (pause, args, ,
   "pause (seconds): suspend program execution")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   if (! (nargin == 0 || nargin == 1))
     {
@@ -659,17 +659,17 @@ DEFUN ("pause", Fpause, Spause, 10,
     }
 
   return retval;
 }
 
 // XXX FIXME XXX -- maybe this should only return 1 if IEEE floating
 // point functions really work.
 
-DEFUN ("isieee", Fisieee, Sisieee, 00,
+DEFUN (isieee, , ,
   "isieee (): return 1 if host uses IEEE floating point")
 {
   return (double) (native_float_format == OCTAVE_IEEE_LITTLE
 		   || native_float_format == OCTAVE_IEEE_BIG);
 }
 
 #if !defined (HAVE_GETHOSTNAME) && defined (HAVE_SYS_UTSNAME_H)
 int
@@ -706,17 +706,17 @@ oct_tilde_expand (const string& name)
       char *tmp = tilde_expand (name.c_str ());
       retval = tmp;
       delete [] tmp;
     }
 
   return retval;
 }
 
-DEFUN ("tilde_expand", Ftilde_expand, Stilde_expand, 10,
+DEFUN (tilde_expand, args, ,
   "tilde_expand (STRING): perform tilde expansion on STRING")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   if (nargin == 1)
     retval = oct_tilde_expand (args(0).string_value ());
diff --git a/src/timefns.cc b/src/timefns.cc
--- a/src/timefns.cc
+++ b/src/timefns.cc
@@ -85,17 +85,17 @@ extract_tm (Octave_map &m, double& fract
 #ifdef HAVE_TMZONE
   string tstr = m ["zone"] . string_value ();
   tm.tm_zone = tstr.c_str ();
 #endif
 
   return &tm;
 }
 
-DEFUN ("time", Ftime, Stime, 00,
+DEFUN (time, , ,
   "time ()\n\
 \n\
   Return current time.  On Unix systems, this is the number of\n\
   seconds since the epoch.")
 {
   time_t now;
   double fraction = 0.0;
 
@@ -117,17 +117,17 @@ DEFUN ("time", Ftime, Stime, 00,
 
   now = time (0);
 
 #endif
  
   return (double) now + fraction;
 }
 
-DEFUN ("gmtime", Fgmtime, Sgmtime, 10,
+DEFUN (gmtime, args, ,
   "gmtime (TIME)\n\
 \n\
   Given a value returned from time(), return a structure like that\n\
   returned from localtime() but with values corresponding to\n\
   Coordinated Universal Time (UTC).")
 {
   Octave_object retval;
 
@@ -145,17 +145,17 @@ DEFUN ("gmtime", Fgmtime, Sgmtime, 10,
 	}
     }
   else
     print_usage ("gmtime");
 
   return retval;
 }
 
-DEFUN ("localtime", Flocaltime, Slocaltime, 10,
+DEFUN (localtime, args, ,
   "localtime (TIME)\n\
 \n\
   Given a value returned from time(), return a structure with\n\
   the following elements:\n\
 \n\
     usec  : microseconds after the second (0, 999999)\n\
     sec   : seconds after the minute (0, 61)\n\
     min   : minutes after the hour (0, 59)\n\
@@ -184,17 +184,17 @@ DEFUN ("localtime", Flocaltime, Slocalti
 	}
     }
   else
     print_usage ("localtime");
 
   return retval;
 }
 
-DEFUN ("mktime", Fmktime, Smktime, 10,
+DEFUN (mktime, args, ,
   "mktime (TMSTRUCT)")
 {
   Octave_object retval;
 
   if (args.length () == 1 && args(0).is_map ()) 
     {
       Octave_map map = args(0).map_value ();
 
@@ -206,17 +206,17 @@ DEFUN ("mktime", Fmktime, Smktime, 10,
 	retval = (double) mktime (tm) + fraction;
     }
   else
     print_usage ("mktime");
 
   return retval;
 }
 
-DEFUN ("strftime", Fstrftime, Sstrftime, 10,
+DEFUN (strftime, args, ,
   "strftime (FMT, TMSTRUCT)\n\
 \n\
   Performs `%' substitutions similar to those in printf.  Except where\n\
   noted, substituted fields have a fixed size; numeric fields are\n\
   padded if necessary.  Padding is with zeros by default; for fields\n\
   that display a single number, padding can be changed or inhibited by\n\
   following the `%' with one of the modifiers described below.\n\
   Unknown field specifiers are copied as normal characters.  All other\n\
diff --git a/src/toplev.cc b/src/toplev.cc
--- a/src/toplev.cc
+++ b/src/toplev.cc
@@ -257,17 +257,17 @@ main_loop (void)
 	  current_command_number++;
 	}
     }
   while (retval == 0);
 
   return retval;
 }
 
-DEFUN ("source", Fsource, Ssource, 10,
+DEFUN (source, args, ,
   "source (FILE)\n\
 \n\
 Parse and execute the contents of FILE.  Like executing commands in a\n\
 script file but without requiring the file to be named `FILE.m'.")
 {
   Octave_object retval;
 
   int nargin = args.length ();
@@ -320,17 +320,17 @@ clean_up_and_exit (int retval)
   exit (retval);
 
   // This is bogus but should prevent g++ from giving a warning saying
   // that this volatile function does return.
 
   panic_impossible ();
 }
 
-DEFUN_TEXT ("casesen", Fcasesen, Scasesen, 10,
+DEFUN_TEXT (casesen, args, ,
   "casesen [on|off]")
 {
   Octave_object retval;
 
   int argc = args.length () + 1;
 
   string_vector argv = make_argv (args, "casesen");
 
@@ -342,17 +342,17 @@ DEFUN_TEXT ("casesen", Fcasesen, Scasese
   else if (argc > 1 && argv[1] == "on")
     ; // ok.
   else
     print_usage ("casesen");
 
   return retval;
 }
 
-DEFUN ("computer", Fcomputer, Scomputer, 11,
+DEFUN (computer, args, nargout,
   "computer ():\n\
 \n\
 Have Octave ask the system, \"What kind of computer are you?\"")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
@@ -377,41 +377,41 @@ Have Octave ask the system, \"What kind 
       char *msg = output_buf.str ();
       retval = msg;
       delete [] msg;
     }
 
   return retval;
 }
 
-DEFUN ("flops", Fflops, Sflops, 10,
+DEFUN (flops, args, ,
   "flops (): count floating point operations")
 {
   int nargin = args.length ();
 
   if (nargin > 0)
     print_usage ("flops");
 
   warning ("flops is a flop, always returning zero");
 
   return 0.0;
 }
 
-DEFUN ("quit", Fquit, Squit, 00,
+DEFUN (quit, , ,
   "quit (): exit Octave gracefully")
 {
   Octave_object retval;
   quitting_gracefully = 1;
   clean_up_and_exit (0);
   return retval;
 }
 
 DEFALIAS (exit, quit);
 
-DEFUN ("warranty", Fwarranty, Swarranty, 00,
+DEFUN (warranty, , ,
   "warranty (): describe copying conditions")
 {
   Octave_object retval;
 
   ostrstream output_buf;
   output_buf << "\n" OCTAVE_NAME_VERSION_AND_COPYRIGHT "\n\n\
 This program is free software; you can redistribute it and/or modify\n\
 it under the terms of the GNU General Public License as published by\n\
@@ -450,17 +450,17 @@ feval (const Octave_object& args, int na
       for (int i = 0; i < tmp_nargin; i++)
 	tmp_args(i) = args(i+1);
       retval = fcn->eval (0, nargout, tmp_args);
     }
 
   return retval;
 }
 
-DEFUN ("feval", Ffeval, Sfeval, 11,
+DEFUN (feval, args, nargout,
   "feval (NAME, ARGS, ...)\n\
 \n\
 evaluate NAME as a function, passing ARGS as its arguments")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
@@ -543,17 +543,17 @@ eval_string (const tree_constant& arg, i
       return -1.0;
     }
 
   // Yes Virginia, we always print here...
 
   return eval_string (s, 1, parse_status, nargout);
 }
 
-DEFUN ("eval", Feval, Seval, 11,
+DEFUN (eval, args, nargout,
   "eval (TRY, CATCH)\n\
 \n\
 Evaluate the string TRY as octave code.  If that fails, evaluate the\n\
 string CATCH.")
 {
   Octave_object retval;
 
   int nargin = args.length ();
@@ -593,17 +593,17 @@ string CATCH.")
   else
     print_usage ("eval");
 
   return retval;
 }
 
 // Execute a shell command.
 
-DEFUN ("system", Fsystem, Ssystem, 11,
+DEFUN (system, args, nargout,
   "system (string [, return_output]): execute shell commands")
 {
   Octave_object retval;
 
   int nargin = args.length ();
 
   if (nargin < 1 || nargin > 2)
     {
diff --git a/src/utils.cc b/src/utils.cc
--- a/src/utils.cc
+++ b/src/utils.cc
@@ -385,17 +385,17 @@ empty_arg (const char *name, int nr, int
 string
 search_path_for_file (const string& path, const string& name)
 {
   dir_path p (path);
 
   return make_absolute (p.find (name), the_current_working_directory);
 }
 
-DEFUN ("file_in_path", Ffile_in_path, Sfile_in_path, 10,
+DEFUN (file_in_path, args, ,
   "file_in_path (PATH, NAME)")
 {
   Octave_object retval;
 
   int argc = args.length () + 1;
 
   string_vector argv = make_argv (args, "file_in_path");
 
@@ -525,18 +525,17 @@ undo_string_escapes (const string& s)
   string retval;
 
   for (size_t i = 0; i < s.length (); i++)
     retval.append (undo_string_escape (s[i]));
 
   return retval;
 }
 
-DEFUN ("undo_string_escapes", Fundo_string_escapes,
-       Sundo_string_escapes, 10,
+DEFUN (undo_string_escapes, args, ,
   "undo_string_escapes (STRING)")
 {
   tree_constant retval;
 
   int nargin = args.length ();
 
   if (nargin == 1 && args(0).is_string ())
     retval = undo_string_escapes (args(0).string_value ());
diff --git a/src/variables.cc b/src/variables.cc
--- a/src/variables.cc
+++ b/src/variables.cc
@@ -158,17 +158,17 @@ is_valid_function (const tree_constant& 
 	error ("%s: the symbol `%s' is not valid as a function",
 	       warn_for.c_str (), fcn_name.c_str ());
       ans = 0;
     }
 
   return ans;
 }
 
-DEFUN ("is_global", Fis_global, Sis_global, 10,
+DEFUN (is_global, args, ,
   "is_global (X): return 1 if the string X names a global variable\n\
 otherwise, return 0.")
 {
   Octave_object retval = 0.0;
 
   int nargin = args.length ();
 
   if (nargin != 1)
@@ -187,17 +187,17 @@ otherwise, return 0.")
 
   symbol_record *sr = curr_sym_tab->lookup (name, 0, 0);
 
   retval = (double) (sr && sr->is_linked_to_global ());
 
   return retval;
 }
 
-DEFUN ("exist", Fexist, Sexist, 10,
+DEFUN (exist, args, ,
   "exist (NAME): check if variable or file exists\n\
 \n\
 returns:\n\
 \n\
    0 : NAME is undefined\n\
    1 : NAME is a variable\n\
    2 : NAME is a function\n\
    3 : NAME is a .oct file in the current LOADPATH\n\
@@ -1185,17 +1185,17 @@ maybe_list (const char *header, const st
 	  output_buf << "\n" << header << "\n\n";
 	  symbols.list_in_columns (output_buf);
 	  status = 1;
 	}
     }
   return status;
 }
 
-DEFUN_TEXT ("document", Fdocument, Sdocument, 10,
+DEFUN_TEXT (document, args, ,
   "document symbol string ...\n\
 \n\
 Associate a cryptic message with a variable name.")
 {
   Octave_object retval;
 
   int argc = args.length () + 1;
 
@@ -1327,17 +1327,17 @@ do_who (int argc, const string_vector& a
     output_buf << "\n";
 
   output_buf << ends;
   maybe_page_output (output_buf);
 
   return retval;
 }
 
-DEFUN_TEXT ("who", Fwho, Swho, 10,
+DEFUN_TEXT (who, args, ,
   "who [-all] [-builtins] [-functions] [-long] [-variables]\n\
 \n\
 List currently defined symbol(s).  Options may be shortened to one\n\
 character, but may not be combined.")
 {
   Octave_object retval;
 
   int argc = args.length () + 1;
@@ -1347,17 +1347,17 @@ character, but may not be combined.")
   if (error_state)
     return retval;
 
   retval = do_who (argc, argv);
 
   return retval;
 }
 
-DEFUN_TEXT ("whos", Fwhos, Swhos, 10,
+DEFUN_TEXT (whos, args, ,
   "whos [-all] [-builtins] [-functions] [-long] [-variables]\n\
 \n\
 List currently defined symbol(s).  Options may be shortened to one\n\
 character, but may not be combined.")
 {
   Octave_object retval;
 
   int nargin = args.length ();
@@ -1581,320 +1581,274 @@ bind_builtin_variable (const string& var
 }
 
 void
 install_builtin_variables (void)
 {
   // XXX FIXME XX -- these should probably be moved to where they
   // logically belong instead of being all grouped here.
 
-  DEFVAR ("EDITOR", SBV_EDITOR, editor, 0, sv_editor,
+  DEFVAR (EDITOR, editor, 0, sv_editor,
     "name of the editor to be invoked by the edit_history command");
 
-  DEFVAR ("EXEC_PATH", SBV_EXEC_PATH, exec_path, 0, sv_exec_path,
+  DEFVAR (EXEC_PATH, exec_path, 0, sv_exec_path,
     "colon separated list of directories to search for programs to run");
 
-  DEFCONST ("I", SBV_I, Complex (0.0, 1.0), 0, 0,
+  DEFCONST (I, Complex (0.0, 1.0), 0, 0,
     "sqrt (-1)");
 
-  DEFCONST ("Inf", SBV_Inf, octave_Inf, 0, 0,
+  DEFCONST (Inf, octave_Inf, 0, 0,
     "infinity");
 
-  DEFVAR ("INFO_FILE", SBV_INFO_FILE, info_file, 0, sv_info_file,
+  DEFVAR (INFO_FILE, info_file, 0, sv_info_file,
     "name of the Octave info file");
 
-  DEFVAR ("INFO_PROGRAM", SBV_INFO_PROGRAM, info_prog, 0, sv_info_prog,
+  DEFVAR (INFO_PROGRAM, info_prog, 0, sv_info_prog,
     "name of the Octave info reader");
 
-  DEFCONST ("J", SBV_J, Complex (0.0, 1.0), 0, 0,
+  DEFCONST (J, Complex (0.0, 1.0), 0, 0,
     "sqrt (-1)");
 
-  DEFCONST ("NaN", SBV_NaN, octave_NaN, 0, 0,
+  DEFCONST (NaN, octave_NaN, 0, 0,
     "not a number");
 
-  DEFVAR ("LOADPATH", SBV_LOADPATH, load_path, 0, sv_loadpath,
+  DEFVAR (LOADPATH, load_path, 0, sv_loadpath,
     "colon separated list of directories to search for scripts");
 
-  DEFVAR ("IMAGEPATH", SBV_IMAGEPATH, OCTAVE_IMAGEPATH, 0,
+  DEFVAR (IMAGEPATH, OCTAVE_IMAGEPATH, 0,
 	  sv_imagepath,
     "colon separated list of directories to search for image files");
 
-  DEFCONST ("OCTAVE_VERSION", SBV_version, OCTAVE_VERSION, 0, 0,
+  DEFCONSTX ("OCTAVE_VERSION", SBV_OCTAVE_VERSION, OCTAVE_VERSION, 0, 0,
     "Octave version");
 
-  DEFVAR ("PAGER", SBV_PAGER, default_pager (), 0, sv_pager_binary,
+  DEFVAR (PAGER, default_pager (), 0, sv_pager_binary,
     "path to pager binary");
 
-  DEFVAR ("PS1", SBV_PS1, "\\s:\\#> ", 0, sv_ps1,
+  DEFVAR (PS1, "\\s:\\#> ", 0, sv_ps1,
     "primary prompt string");
 
-  DEFVAR ("PS2", SBV_PS2, "> ", 0, sv_ps2,
+  DEFVAR (PS2, "> ", 0, sv_ps2,
     "secondary prompt string");
 
-  DEFVAR ("PS4", SBV_PS4, "+ ", 0, sv_ps4,
+  DEFVAR (PS4, "+ ", 0, sv_ps4,
     "string printed before echoed input (enabled by --echo-input)");
 
-  DEFCONST ("PWD", SBV_PWD,
-	    get_working_directory ("initialize_globals"), 0, sv_pwd,
+  DEFCONST (PWD, get_working_directory ("initialize_globals"), 0, sv_pwd,
     "current working directory");
 
-  DEFCONST ("SEEK_SET", SBV_SEEK_SET, 0.0, 0, 0,
+  DEFCONST (SEEK_SET, 0.0, 0, 0,
     "used with fseek to position file relative to the beginning");
 
-  DEFCONST ("SEEK_CUR", SBV_SEEK_CUR, 1.0, 0, 0,
+  DEFCONST (SEEK_CUR, 1.0, 0, 0,
     "used with fseek to position file relative to the current position");
 
-  DEFCONST ("SEEK_END", SBV_SEEK_END, 2.0, 0, 0,
+  DEFCONST (SEEK_END, 2.0, 0, 0,
     "used with fseek to position file relative to the end");
 
-  DEFVAR ("ans", SBV_ans, , 0, 0,
+  DEFVAR (ans, , 0, 0,
     "");
 
-  DEFCONST ("argv", SBV_argv, , 0, 0,
+  DEFCONST (argv, , 0, 0,
     "the command line arguments this program was invoked with");
 
-  DEFVAR ("automatic_replot", SBV_automatic_replot, 0.0,
-	  0, automatic_replot,
+  DEFVAR (automatic_replot, 0.0, 0, automatic_replot,
     "if true, auto-insert a replot command when a plot changes");
 
-  DEFVAR ("beep_on_error", SBV_beep_on_error, 0.0, 0,
-	  beep_on_error,
+  DEFVAR (beep_on_error, 0.0, 0, beep_on_error,
     "if true, beep before printing error messages");
 
-  DEFVAR ("completion_append_char", SBV_completion_append_char, " ",
-	  0, sv_completion_append_char,
+  DEFVAR (completion_append_char, " ", 0, sv_completion_append_char,
     "the string to append after successful command-line completion\n\
 attempts");
 
-  DEFCONST ("error_text", SBV_current_error_text, "", 0, 0,
+  DEFCONST (error_text, "", 0, 0,
     "the text of error messages that would have been printed in the
 body of the most recent unwind_protect statement or the TRY part of\n\
 the most recent eval() command.  Outside of unwind_protect and\n\
 eval(), or if no error has ocurred within them, the value of\n\
 __error_text__ is guaranteed to be the empty string.");
 
-  DEFVAR ("default_return_value", SBV_default_return_value, Matrix (),
-	  0, 0,
+  DEFVAR (default_return_value, Matrix (), 0, 0,
     "the default for value for unitialized variables returned from\n\
 functions.  Only used if the variable initialize_return_values is\n\
 set to \"true\".");
 
-  DEFVAR ("default_save_format", SBV_default_save_format, "ascii",
-	  0, sv_default_save_format,
+  DEFVAR (default_save_format, "ascii", 0, sv_default_save_format,
     "default format for files created with save, may be one of\n\
 \"binary\", \"text\", or \"mat-binary\"");
 
-  DEFVAR ("define_all_return_values", SBV_define_all_return_values,
-	  0.0, 0, define_all_return_values,
+  DEFVAR (define_all_return_values, 0.0, 0, define_all_return_values,
     "control whether values returned from functions should have a\n\
 value even if one has not been explicitly assigned.  See also\n\
 default_return_value");
 
-  DEFVAR ("do_fortran_indexing", SBV_do_fortran_indexing, 0.0, 0,
-	  do_fortran_indexing,
+  DEFVAR (do_fortran_indexing, 0.0, 0, do_fortran_indexing,
     "allow single indices for matrices");
 
-  DEFVAR ("echo_executing_commands", SBV_echo_executing_commands, 0.0, 0, 
-	  echo_executing_commands,
+  DEFVAR (echo_executing_commands, 0.0, 0, echo_executing_commands,
     "echo commands as they are executed");
 
-  DEFCONST ("e", SBV_e, exp (1.0), 0, 0,
+  DEFCONST (e, exp (1.0), 0, 0,
     "exp (1)");
 
-  DEFVAR ("empty_list_elements_ok", SBV_empty_list_elements_ok,
-	  "warn", 0, empty_list_elements_ok,
+  DEFVAR (empty_list_elements_ok, "warn", 0, empty_list_elements_ok,
     "ignore the empty element in expressions like `a = [[], 1]'");
 
-  DEFCONST ("eps", SBV_eps, DBL_EPSILON, 0, 0,
+  DEFCONST (eps, DBL_EPSILON, 0, 0,
     "machine precision");
 
-  DEFVAR ("gnuplot_binary", SBV_gnuplot_binary, "gnuplot", 0,
-	  sv_gnuplot_binary,
+  DEFVAR (gnuplot_binary, "gnuplot", 0, sv_gnuplot_binary,
     "path to gnuplot binary");
 
 #ifdef GNUPLOT_HAS_MULTIPLOT
   double with_multiplot = 1.0;
 #else
   double with_multiplot = 0.0;
 #endif
 
-  DEFVAR ("gnuplot_has_multiplot", SBV_gnuplot_has_multiplot,
-	  with_multiplot, 0, gnuplot_has_multiplot,
+  DEFVAR (gnuplot_has_multiplot, with_multiplot, 0, gnuplot_has_multiplot,
     "true if gnuplot supports multiplot, false otherwise");
 
-  DEFVAR ("history_file", SBV_history_file,
-	  default_history_file (), 0, sv_history_file,
+  DEFVAR (history_file, default_history_file (), 0, sv_history_file,
     "name of command history file");
 
-  DEFVAR ("history_size", SBV_history_size,
-	  default_history_size (), 0, history_size,
+  DEFVAR (history_size, default_history_size (), 0, history_size,
     "number of commands to save in the history list");
 
-  DEFCONST ("i", SBV_i, Complex (0.0, 1.0), 1, 0,
+  DEFCONST (i, Complex (0.0, 1.0), 1, 0,
     "sqrt (-1)");
 
-  DEFVAR ("ignore_function_time_stamp",
-	  SBV_ignore_function_time_stamp, "system", 0,
-	  ignore_function_time_stamp,
+  DEFVAR (ignore_function_time_stamp, "system", 0, ignore_function_time_stamp,
     "don't check to see if function files have changed since they were\n\
   last compiled.  Possible values are \"system\" and \"all\"");
 
-  DEFVAR ("implicit_str_to_num_ok", SBV_implicit_str_to_num_ok,
-	  0.0, 0, implicit_str_to_num_ok,
+  DEFVAR (implicit_str_to_num_ok, 0.0, 0, implicit_str_to_num_ok,
     "allow implicit string to number conversion");
 
-  DEFCONST ("inf", SBV_inf, octave_Inf, 0, 0,
+  DEFCONST (inf, octave_Inf, 0, 0,
     "infinity");
 
-  DEFCONST ("j", SBV_j, Complex (0.0, 1.0), 1, 0,
+  DEFCONST (j, Complex (0.0, 1.0), 1, 0,
     "sqrt (-1)");
 
-  DEFCONST ("nan", SBV_nan, octave_NaN, 0, 0,
+  DEFCONST (nan, octave_NaN, 0, 0,
     "not a number");
 
-  DEFVAR ("ok_to_lose_imaginary_part", SBV_ok_to_lose_imaginary_part,
-	  "warn", 0, ok_to_lose_imaginary_part,
+  DEFVAR (ok_to_lose_imaginary_part, "warn", 0, ok_to_lose_imaginary_part,
     "silently convert from complex to real by dropping imaginary part");
 
-  DEFVAR ("output_max_field_width", SBV_output_max_field_width, 10.0,
-	  0, set_output_max_field_width,
+  DEFVAR (output_max_field_width, 10.0, 0, set_output_max_field_width,
     "maximum width of an output field for numeric output");
 
-  DEFVAR ("output_precision", SBV_output_precision, 5.0, 0,
-	  set_output_precision,
+  DEFVAR (output_precision, 5.0, 0, set_output_precision,
     "number of significant figures to display for numeric output");
 
-  DEFVAR ("page_screen_output", SBV_page_screen_output, 1.0, 0,
-	  page_screen_output,
+  DEFVAR (page_screen_output, 1.0, 0, page_screen_output,
     "if possible, send output intended for the screen through the pager");
 
-  DEFCONST ("pi", SBV_pi, 4.0 * atan (1.0), 0, 0,
+  DEFCONST (pi, 4.0 * atan (1.0), 0, 0,
     "ratio of the circumference of a circle to its diameter");
 
-  DEFVAR ("prefer_column_vectors", SBV_prefer_column_vectors, 1.0,
-	  0, prefer_column_vectors,
+  DEFVAR (prefer_column_vectors, 1.0, 0, prefer_column_vectors,
     "prefer column/row vectors");
 
-  DEFVAR ("prefer_zero_one_indexing", SBV_prefer_zero_one_indexing,
-	  0.0, 0, prefer_zero_one_indexing,
+  DEFVAR (prefer_zero_one_indexing, 0.0, 0, prefer_zero_one_indexing,
     "when there is a conflict, prefer zero-one style indexing");
 
-  DEFVAR ("print_answer_id_name", SBV_print_answer_id_name, 1.0, 0,
-	  print_answer_id_name,
+  DEFVAR (print_answer_id_name, 1.0, 0, print_answer_id_name,
     "set output style to print `var_name = ...'");
 
-  DEFVAR ("print_empty_dimensions", SBV_print_empty_dimensions,
-	  1.0, 0, print_empty_dimensions,
+  DEFVAR (print_empty_dimensions, 1.0, 0, print_empty_dimensions,
     "also print dimensions of empty matrices");
 
-  DEFCONST ("program_invocation_name", SBV_program_invocation_name,
-	    raw_prog_name, 0, 0,
+  DEFCONST (program_invocation_name, raw_prog_name, 0, 0,
     "the full name of the current program or script, including the\n\
 directory specification");
 
-  DEFCONST ("program_name", SBV_program_name, prog_name, 0, 0,
+  DEFCONST (program_name, prog_name, 0, 0,
     "the name of the current program or script");
 
-  DEFVAR ("propagate_empty_matrices", SBV_propagate_empty_matrices,
-	  1.0, 0, propagate_empty_matrices,
+  DEFVAR (propagate_empty_matrices, 1.0, 0, propagate_empty_matrices,
     "operations on empty matrices return an empty matrix, not an error");
 
 #if 0
-  DEFVAR ("read_only_constants", SBV_read_only_constants, 1.0, 0,
-	  read_only_constants,
+  DEFVAR (read_only_constants, 1.0, 0, read_only_constants,
     "allow built-in constants to be modified");
 #endif
 
-  DEFCONST ("realmax", SBV_realmax, DBL_MAX, 0, 0,
+  DEFCONST (realmax, DBL_MAX, 0, 0,
     "realmax (): return largest representable floating point number");
 
-  DEFCONST ("realmin", SBV_realmin, DBL_MIN, 0, 0,
+  DEFCONST (realmin, DBL_MIN, 0, 0,
     "realmin (): return smallest representable floating point number");
 
-  DEFVAR ("resize_on_range_error", SBV_resize_on_range_error, 1.0,
-	  0, resize_on_range_error,
+  DEFVAR (resize_on_range_error, 1.0, 0, resize_on_range_error,
     "enlarge matrices on assignment");
 
-  DEFVAR ("return_last_computed_value",
-	  SBV_return_last_computed_value, 0.0, 0,
-	  return_last_computed_value,
+  DEFVAR (return_last_computed_value, 0.0, 0, return_last_computed_value,
     "if a function does not return any values explicitly, return the\n\
   last computed value");
 
-  DEFVAR ("save_precision", SBV_save_precision, 15.0, 0,
-	  set_save_precision,
+  DEFVAR (save_precision, 15.0, 0, set_save_precision,
     "number of significant figures kept by the ASCII save command");
 
-  DEFVAR ("saving_history", SBV_saving_history, 1.0, 0, saving_history,
+  DEFVAR (saving_history, 1.0, 0, saving_history,
     "save command history");
 
-  DEFVAR ("silent_functions", SBV_silent_functions, 0.0, 0,
-	  silent_functions,
+  DEFVAR (silent_functions, 0.0, 0, silent_functions,
     "suppress printing results in called functions");
 
-  DEFVAR ("split_long_rows", SBV_split_long_rows, 1.0, 0,
-	  split_long_rows,
+  DEFVAR (split_long_rows, 1.0, 0, split_long_rows,
     "split long matrix rows instead of wrapping");
 
-  DEFVAR ("struct_levels_to_print", SBV_struct_levels_to_print, 2.0,
-	  0, struct_levels_to_print,
+  DEFVAR (struct_levels_to_print, 2.0, 0, struct_levels_to_print,
     "number of levels of structure elements to print");
 
 #ifdef USE_GNU_INFO
-  DEFVAR ("suppress_verbose_help_message",
-	  SBV_suppress_verbose_help_message, 0.0, 0,
-	  suppress_verbose_help_message,
+  DEFVAR (suppress_verbose_help_message, 0.0, 0, suppress_verbose_help_message,
     "suppress printing of message pointing to additional help in the\n\
 help and usage functions");
 #endif
 
-  DEFCONST ("stdin", SBV_stdin, 0.0, 0, 0,
+  DEFCONSTX ("stdin", SBV_stdin, 0.0, 0, 0,
     "file number of the standard input stream");
 
-  DEFCONST ("stdout", SBV_stdout, 1.0, 0, 0,
+  DEFCONSTX ("stdout", SBV_stderr, 1.0, 0, 0,
     "file number of the standard output stream");
 
-  DEFCONST ("stderr", SBV_stderr, 2.0, 0, 0,
+  DEFCONSTX ("stderr", SBV_stderr, 2.0, 0, 0,
     "file number of the standard error stream");
 
-  DEFVAR ("treat_neg_dim_as_zero", SBV_treat_neg_dim_as_zero, 0.0, 0,
-	  treat_neg_dim_as_zero,
+  DEFVAR (treat_neg_dim_as_zero, 0.0, 0, treat_neg_dim_as_zero,
     "convert negative dimensions to zero");
 
-  DEFVAR ("warn_assign_as_truth_value",
-	  SBV_warn_assign_as_truth_value, 1.0, 0,
-	  warn_assign_as_truth_value,
+  DEFVAR (warn_assign_as_truth_value, 1.0, 0, warn_assign_as_truth_value,
     "produce warning for assignments used as truth values");
 
-  DEFVAR ("warn_comma_in_global_decl", SBV_warn_comma_in_global_decl,
-	  1.0, 0, warn_comma_in_global_decl,
+  DEFVAR (warn_comma_in_global_decl, 1.0, 0, warn_comma_in_global_decl,
     "produce warning for commas in global declarations");
 
-  DEFVAR ("warn_divide_by_zero", SBV_warn_divide_by_zero, 1.0, 0,
-	  warn_divide_by_zero,
+  DEFVAR (warn_divide_by_zero, 1.0, 0, warn_divide_by_zero,
     "on IEEE machines, allow divide by zero errors to be suppressed");
 
-  DEFVAR ("warn_function_name_clash", SBV_warn_function_name_clash,
-	  1.0, 0, warn_function_name_clash,
+  DEFVAR (warn_function_name_clash, 1.0, 0, warn_function_name_clash,
     "produce warning if function name conflicts with file name");
 
-  DEFVAR ("warn_missing_semicolon", SBV_warn_missing_semicolon,
-	  0.0, 0, warn_missing_semicolon,
+  DEFVAR (warn_missing_semicolon, 0.0, 0, warn_missing_semicolon,
     "produce a warning if a statement in a function file is not
 terminated with a semicolon");
 
-  DEFVAR ("whitespace_in_literal_matrix",
-	  SBV_whitespace_in_literal_matrix, "", 0,
-	  whitespace_in_literal_matrix,
+  DEFVAR (whitespace_in_literal_matrix, "", 0, whitespace_in_literal_matrix,
     "control auto-insertion of commas and semicolons in literal matrices");
 }
 
 // Deleting names from the symbol tables.
 
-DEFUN_TEXT ("clear", Fclear, Sclear, 10,
+DEFUN_TEXT (clear, args, ,
   "clear [-x] [name ...]\n\
 \n\
 Clear symbol(s) matching a list of globbing patterns.\n\
 \n\
 If no arguments are given, clear all user-defined variables and
 functions.\n\
 \n\
 With -x, exclude the named variables")
