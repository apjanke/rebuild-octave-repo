# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1296348854 28800
#      Sat Jan 29 16:54:14 2011 -0800
# Branch release-3-4-x
# Node ID f07e6b4d34c72f0707c978130359da2da6c20f5b
# Parent  0566e6fef0c091dedd59439ba787210f61b1e669
Add function compare_versions to documentation.
Update docstrings for surrounding functions in manual.

diff --git a/doc/ChangeLog b/doc/ChangeLog
--- a/doc/ChangeLog
+++ b/doc/ChangeLog
@@ -1,8 +1,13 @@
+2011-01-29  Rik  <octave@nomad.inbox5.com>
+
+	* interpreter/system.txi: Add compare_versions function to 
+	documentation.
+
 2011-01-27  Rik  <octave@nomad.inbox5.com>
 
 	* interpreter/numbers.txi: Add sizemax function to documentation.
 	* interpreter/doccheck/mk_undocumented_list: Add ifelse to functions
 	not requiring documentation.
 
 2011-01-27  Rik  <octave@nomad.inbox5.com>
 
diff --git a/doc/interpreter/system.txi b/doc/interpreter/system.txi
--- a/doc/interpreter/system.txi
+++ b/doc/interpreter/system.txi
@@ -460,28 +460,30 @@ referred to as a @var{grp_struct}.
 @DOCSTRING(ispc)
 
 @DOCSTRING(isunix)
 
 @DOCSTRING(ismac)
 
 @DOCSTRING(isieee)
 
-@DOCSTRING(matlabroot)
-
 @DOCSTRING(OCTAVE_HOME)
 
-@DOCSTRING(OCTAVE_VERSION)
+@DOCSTRING(matlabroot)
 
-@DOCSTRING(license)
+@DOCSTRING(OCTAVE_VERSION)
 
 @DOCSTRING(version)
 
 @DOCSTRING(ver)
 
+@DOCSTRING(compare_versions)
+
+@DOCSTRING(license)
+
 @DOCSTRING(octave_config_info)
 
 @DOCSTRING(getrusage)
 
 @node Hashing Functions
 @section Hashing Functions
 
 It is often necessary to find if two strings or files are
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,16 @@
+2011-01-29  Rik  <octave@nomad.inbox5.com>
+
+	* miscellaneous/compare_versions.m: Allow only "==" equality operator.
+	Add input validation tests.  Improve docstring.
+
+	* miscellaneous/ver.m, miscellaneous/version.m, path/matlabroot.m:
+	Improve docstring.
+
 2011-01-29  Ben Abbott  <bpabbott@mac.com>
 
 	* miscellaneous/edit.m: As most editors open their own window, change
 	mode to "async".
 
 2011-01-28  Ben Abbott  <bpabbott@mac.com>
 
 	* plot/__fltk_print__.m, plot/print.m: Fix {eps,ps,pdf}latexstandalone
diff --git a/scripts/miscellaneous/compare_versions.m b/scripts/miscellaneous/compare_versions.m
--- a/scripts/miscellaneous/compare_versions.m
+++ b/scripts/miscellaneous/compare_versions.m
@@ -61,42 +61,40 @@
 ## @item
 ## "~="
 ## not equal
 ## @end itemize
 ##
 ## Note that version "1.1-test2" will compare as greater than
 ## "1.1-test10".  Also, since the numeric part is compared first, "a"
 ## compares less than "1a" because the second string starts with a
-## numeric part even though double("a") is greater than double("1").
+## numeric part even though @code{double("a")} is greater than 
+## @code{double("1").}
 ## @end deftypefn
 
 ## Author: Bill Denney <denney@seas.upenn.edu>
 
-## FIXME?: This allows a single equal sign "=" to indicate equality, do
-## we want to require a double equal since that is the boolean operator?
-
 function out = compare_versions (v1, v2, operator)
 
   if (nargin != 3)
     print_usage ();
   endif
 
   ## Make sure that the version numbers are valid.
   if (! (ischar (v1) && ischar (v2)))
     error ("compare_versions: both version numbers must be strings");
-  elseif (size (v1, 1) != 1 || size (v2, 1) != 1)
+  elseif (rows (v1) != 1 || rows (v2) != 1)
     error ("compare_versions: version numbers must be a single row");
   endif
 
   ## check and make sure that the operator is valid
   if (! ischar (operator))
     error ("compare_versions: OPERATOR must be a character string");
   elseif (numel (operator) > 2)
-    error("compare_versions: OPERATOR cannot be more than 2 characters long");
+    error("compare_versions: OPERATOR must be 1 or 2 characters long");
   endif
 
   ## trim off any character data that is not part of a normal version
   ## number
   numbers = "0123456789.";
 
   v1firstchar = find (! ismember (v1, numbers), 1);
   v2firstchar = find (! ismember (v2, numbers), 1);
@@ -164,16 +162,20 @@ function out = compare_versions (v1, v2,
     gt_op = false;
   endif
 
   ## Make sure that we don't have conflicting operators.
   if (gt_op && lt_op)
     error ("compare_versions: OPERATOR cannot contain both greater and less than symbols");
   elseif ((gt_op || lt_op) && not_op)
     error ("compare_versions: OPERATOR cannot contain not and greater than or less than symbols");
+  elseif (strcmp (operator, "="))
+    error ("compare_versions: equality OPERATOR is \"==\", not \"=\"");
+  elseif (! (equal_op || not_op || lt_op || gt_op))
+    error ("compare_versions: No valid OPERATOR specified");
   endif
 
   ## Compare the versions (making sure that they're the same shape)
   vcmp = v1n(:) - v2n(:);
   vcmp = [vcmp; (v1c - v2c)(:)];
   if (lt_op)
     ## so that we only need to check for the output being greater than 1
     vcmp = -vcmp;
@@ -182,29 +184,29 @@ function out = compare_versions (v1, v2,
 
   if (isempty (firstdiff))
     ## They're equal.
     out = equal_op;
   elseif (lt_op || gt_op)
     ## They're correctly less than or greater than.
     out = (vcmp(firstdiff) > 0);
   else
-    ## They're not correctly less than or greater than, and they're not
-    ## equal.
+    ## They're not correctly less than or greater than, and they're not equal.
     out = false;
   endif
 
   ## Reverse the output if not is given.
-  out = xor (not_op, out);
+  if (not_op)
+    out = !out;
+  endif
 
 endfunction
 
 ## tests
 ## test both equality symbols
-%!assert(compare_versions("1", "1", "="), true)
 ## test arbitrarily long equality
 %!assert(compare_versions("1.1.0.0.0", "1.1", "=="), true)
 %!assert(compare_versions("1", "1.1", "<"), true)
 %!assert(compare_versions("1.1", "1.1", "<="), true)
 %!assert(compare_versions("1.1", "1.1.1", "<="), true)
 %!assert(compare_versions("1.23", "1.24", "=<"), true)
 ## test different length numbers
 %!assert(compare_versions("23.2000", "23.1", ">"), true)
@@ -219,24 +221,33 @@ endfunction
 %!assert(compare_versions("1a", "1b", ">"), false)
 %!assert(compare_versions("a", "1", ">"), false)
 %!assert(compare_versions("1.1.0a", "1.1.0b", "=="), false)
 %!assert(compare_versions("1.1.0a", "1.1.0b", "!="), true)
 %!assert(compare_versions("1.1.0test", "1.1.0b", "=="), false)
 %!assert(compare_versions("1.1.0test", "1.1.0test", "=="), true)
 
 ## make sure that it won't just give true output
-%!assert(compare_versions("1", "0", "="), false)
+%!assert(compare_versions("1", "0", "=="), false)
 ## test arbitrarily long equality
 %!assert(compare_versions("1.1.1.0.0", "1.1", "=="), false)
 %!assert(compare_versions("1.1", "1", "<"), false)
 %!assert(compare_versions("2", "1.1", "<="), false)
 %!assert(compare_versions("1.1.1", "1.1", "<="), false)
 %!assert(compare_versions("1.25", "1.24", "=<"), false)
 ## test different length numbers
 %!assert(compare_versions("23.2", "23.100", ">"), false)
 %!assert(compare_versions("0.0.0.2", "0.0.1", ">="), false)
 %!assert(compare_versions("0.0.20", "0.10.2", "=>"), false)
 %!assert(compare_versions("0.1", "0.1", "!="), false)
 %!assert(compare_versions("0.1", "0.1", "~="), false)
 
-## FIXME: how do we check to make sure that it gives errors when it
-## should
+%% Test input validation
+%!error(compare_versions(0.1, "0.1", "=="))
+%!error(compare_versions("0.1", 0.1, "=="))
+%!error(compare_versions(["0";".";"1"], "0.1", "=="))
+%!error(compare_versions("0.1", ["0";".";"1"], "=="))
+%!error(compare_versions("0.1", "0.1", "<>"))
+%!error(compare_versions("0.1", "0.1", "!>"))
+%!error(compare_versions("0.1", "0.1", "="))
+%!error(compare_versions("0.1", "0.1", "aa"))
+
+
diff --git a/scripts/miscellaneous/ver.m b/scripts/miscellaneous/ver.m
--- a/scripts/miscellaneous/ver.m
+++ b/scripts/miscellaneous/ver.m
@@ -13,42 +13,45 @@
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} ver ()
-## Display a header containing the current Octave version
-## number, license string and operating system, followed by
-## the installed package names, versions, and installation
-## directories.
+## Display a header containing the current Octave version number, license
+## string and operating system, followed by the installed package names,
+## versions, and installation directories.
+##
 ## @deftypefnx {Function File} {v =} ver ()
 ## Return a vector of structures, respecting Octave and each installed package.
 ## The structure includes the following fields.
 ##
 ## @table @code
-##   @item Name
-##   Package name.
+## @item Name
+## Package name.
 ##
-##   @item Version
-##   Version of the package.
+## @item Version
+## Version of the package.
 ##
-##   @item Revision
-##   Revision of the package.
+## @item Revision
+## Revision of the package.
 ##
-##   @item Date
-##   Date respecting the version/revision.
+## @item Date
+## Date respecting the version/revision.
 ## @end table
+##
 ## @deftypefnx {Function File} {v =} ver (@code{"Octave"})
 ## Return version information for Octave only.
+## 
 ## @deftypefnx {Function File} {v =} ver (@var{package})
 ## Return version information for @var{package}.
-## @seealso{license, version}
+##
+## @seealso{version, octave_config_info}
 ## @end deftypefn
 
 ## Author: William Poetra Yoga Hadisoeseno <williampoetra@gmail.com>
 
 function varargout = ver (package = "")
 
   if (nargin > 1)
     print_usage ();
diff --git a/scripts/miscellaneous/version.m b/scripts/miscellaneous/version.m
--- a/scripts/miscellaneous/version.m
+++ b/scripts/miscellaneous/version.m
@@ -13,18 +13,21 @@
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} version ()
-## Return Octave's version number as a string.  This is also the value of
-## the built-in variable @w{@env{OCTAVE_VERSION}}.
+## Return the version number of Octave, as a string.
+##
+## This is an alias for the function @code{OCTAVE_VERSION} provided for
+## compatability
+## @seealso{OCTAVE_VERSION}.
 ## @end deftypefn
 
 ## Author: jwe
 
 function vs = version ()
 
   if (nargin != 0)
     warning ("version: ignoring extra arguments");
diff --git a/scripts/path/matlabroot.m b/scripts/path/matlabroot.m
--- a/scripts/path/matlabroot.m
+++ b/scripts/path/matlabroot.m
@@ -12,18 +12,21 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{val} =} matlabroot ()
-## Return the location of Octave's home directory.
+## @deftypefn {Function File} {} matlabroot ()
+## Return the name of the top-level Octave installation directory.
+##
+## This is an alias for the function @code{OCTAVE_HOME} provided
+## for compatability.
 ## @seealso{OCTAVE_HOME}
 ## @end deftypefn
 
 function val = matlabroot ()
 
   val = OCTAVE_HOME;
 
 endfunction
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,12 @@
+2011-01-29  Rik  <octave@nomad.inbox5.com>
+
+	* DLD-FUNCTIONS/getrusage.cc, toplev.cc: Improve docstring
+
 2011-01-29  John W. Eaton  <jwe@octave.org>
 
 	* DLD-FUNCTIONS/__fltk_uigetfile__.cc (__fltk_uigetfile__):
 	Don't allocate Fl_File_Chooser object with new.  Delete unused
 	variable fargs.  Allocate default retval values in initial
 	declaration.
 
 2011-01-29  John W. Eaton  <jwe@octave.org>
diff --git a/src/DLD-FUNCTIONS/getrusage.cc b/src/DLD-FUNCTIONS/getrusage.cc
--- a/src/DLD-FUNCTIONS/getrusage.cc
+++ b/src/DLD-FUNCTIONS/getrusage.cc
@@ -60,19 +60,18 @@ along with Octave; see the file COPYING.
 // System resource functions.
 
 DEFUN_DLD (getrusage, , ,
   "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {} getrusage ()\n\
 Return a structure containing a number of statistics about the current\n\
 Octave process.  Not all fields are available on all systems.  If it is\n\
 not possible to get CPU time statistics, the CPU time slots are set to\n\
-zero.  Other missing data are replaced by NaN@.  Here is a list of all\n\
-the possible fields that can be present in the structure returned by\n\
-@code{getrusage}:\n\
+zero.  Other missing data are replaced by NaN@.  The list of possible\n\
+fields is:\n\
 \n\
 @table @code\n\
 @item idrss\n\
 Unshared data size.\n\
 \n\
 @item inblock\n\
 Number of block input operations.\n\
 \n\
diff --git a/src/toplev.cc b/src/toplev.cc
--- a/src/toplev.cc
+++ b/src/toplev.cc
@@ -1163,21 +1163,22 @@ multiple times.\n\
   else
     print_usage ();
 
   return retval;
 }
 
 DEFUN (octave_config_info, args, ,
   "-*- texinfo -*-\n\
-@deftypefn {Built-in Function} {} octave_config_info (@var{option})\n\
+@deftypefn  {Built-in Function} {} octave_config_info ()\n\
+@deftypefnx {Built-in Function} {} octave_config_info (@var{option})\n\
 Return a structure containing configuration and installation\n\
 information for Octave.\n\
 \n\
-if @var{option} is a string, return the configuration information for the\n\
+If @var{option} is a string, return the configuration information for the\n\
 specified option.\n\
 \n\
 @end deftypefn")
 {
   octave_value retval;
 
 #if defined (ENABLE_DYNAMIC_LINKING)
   bool octave_supports_dynamic_linking = true;
