# HG changeset patch
# User dbateman
# Date 1181509981 0
#      Sun Jun 10 21:13:01 2007 +0000
# Node ID 6d366791e1325f0f5c8d405cb08e9eb20799e0ae
# Parent  851c4afa8aa76a133b8b2626e421ebe5e90a5625
[project @ 2007-06-10 21:13:01 by dbateman]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2007-06-10  David Bateman  <dbateman@free.fr>
+
+	* pkg/pkg.m (pkg:installed_packages): truncate start of package
+	directory if need to, so that it fits on a line.
+	
 2007-06-07  David Bateman  <dbateman@free.fr>
 
 	* pkg/pkg.m (pkg): For rebuild target, force package order in
 	saved file so that dependent packages are loaded first, and if
 	nargout==0 don't return any arguments.
 	(pkg:install): Only load packages that are marked autoload after
 	install. Various fixes. Save in order.
 	(pkg:uninstall): Save in order
diff --git a/scripts/pkg/pkg.m b/scripts/pkg/pkg.m
--- a/scripts/pkg/pkg.m
+++ b/scripts/pkg/pkg.m
@@ -1618,16 +1618,22 @@ function [out1, out2] = installed_packag
   names = cell (num_packages, 1); 
   for i = 1:num_packages
     max_name_length = max (max_name_length,
 			   length (installed_packages{i}.name));
     max_version_length = max (max_version_length,
 			      length (installed_packages{i}.version));
     names{i} = installed_packages{i}.name;
   endfor
+  max_dir_length = terminal_size()(2) - max_name_length - ...
+					     max_version_length - 7;
+  if (max_dir_length < 20)
+     max_dir_length = Inf;
+  endif
+
   h1 = postpad (h1, max_name_length + 1, " ");
   h2 = postpad (h2, max_version_length, " ");;
 
   ## Print a header
   header = sprintf("%s | %s | %s\n", h1, h2, h3);
   printf (header);
   tmp = sprintf (repmat ("-", 1, length(header)-1));
   tmp(length(h1)+2) = "+";
@@ -1637,16 +1643,26 @@ function [out1, out2] = installed_packag
   ## Print the packages
   format = sprintf ("%%%ds %%1s| %%%ds | %%s\n", max_name_length,
 		    max_version_length);
   [dummy, idx] = sort (names);
   for i = 1:num_packages
     cur_name = installed_packages{idx(i)}.name;
     cur_version = installed_packages{idx(i)}.version;
     cur_dir = installed_packages{idx(i)}.dir;
+    if (length (cur_dir) > max_dir_length)
+      first_char = length (cur_dir) - max_dir_length + 4;
+      first_filesep = strfind (cur_dir(first_char:end), filesep());
+      if (! isempty (first_filesep))
+        cur_dir = strcat ("...", 
+			  cur_dir((first_char + first_filesep(1) - 1):end));
+      else
+        cur_dir = strcat ("...", cur_dir(first_char:end));
+      endif
+    endif
     if (installed_packages{idx(i)}.loaded)
       cur_loaded = "*";
     else
       cur_loaded = " ";
     endif
     printf (format, cur_name, cur_loaded, cur_version, cur_dir);
   endfor
 endfunction
