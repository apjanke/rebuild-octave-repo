# HG changeset patch
# User Rik <rik@octave.org>
# Date 1447041513 28800
#      Sun Nov 08 19:58:33 2015 -0800
# Node ID 8b9da91cde328d82c3f5b4550c12d16e891c4777
# Parent  5f04bfc7c17ab3f05026cff5e0dd42c18a9b7c9c
quadv.m: Miscellaneous cleanup.

* quadv.m: Re-phrase sentences in docstring.  Change warning messages to
indicate that a singular integral is the probable cause for the warning.
Wrap long line to < 80 characters.

diff --git a/scripts/general/quadv.m b/scripts/general/quadv.m
--- a/scripts/general/quadv.m
+++ b/scripts/general/quadv.m
@@ -44,19 +44,20 @@
 ## integrals display: (1) the total number of function evaluations,
 ## (2) the left end of the subinterval, (3) the length of the subinterval,
 ## (4) the approximation of the integral over the subinterval.
 ##
 ## Additional arguments @var{p1}, etc., are passed directly to the function
 ## @var{f}.  To use default values for @var{tol} and @var{trace}, one may pass
 ## empty matrices ([]).
 ##
-## The result of the integration is returned in @var{q}
+## The result of the integration is returned in @var{q}.
 ##
-## @var{nfun} indicates the number of function evaluations that were made.
+## The optional output @var{nfun} indicates the total number of function
+## evaluations performed.
 ##
 ## Note: @code{quadv} is written in Octave's scripting language and can be
 ## used recursively in @code{dblquad} and @code{triplequad}, unlike the
 ## @code{quad} function.
 ## @seealso{quad, quadl, quadgk, quadcc, trapz, dblquad, triplequad}
 ## @end deftypefn
 
 function [q, nfun] = quadv (f, a, b, tol = [], trace = [], varargin)
@@ -97,27 +98,27 @@ function [q, nfun] = quadv (f, a, b, tol
 
   h = (b - a);
   q = h / 6 * (fa + 4 * fc + fb);
 
   [q, nfun, hmin] = simpsonstp (f, a, b, c, fa, fb, fc, q, nfun, abs (h),
                                 tol, trace, varargin{:});
 
   if (nfun > 10_000)
-    warning ("quadv: maximum iteration count reached");
+    warning ("quadv: maximum iteration count reached -- possible singular integral");
   elseif (any (! isfinite (q(:))))
     warning ("quadv: infinite or NaN function evaluations were returned");
   elseif (hmin < (b - a) * eps)
-    warning ("quadv: minimum step size reached -- possibly singular integral");
+    warning ("quadv: minimum step size reached -- possible singular integral");
   endif
 
 endfunction
 
-function [q, nfun, hmin] = simpsonstp (f, a, b, c, fa, fb, fc, q0,
-                                       nfun, hmin, tol, trace, varargin)
+function [q, nfun, hmin] = simpsonstp (f, a, b, c, fa, fb, fc, q0, nfun, hmin,
+                                       tol, trace, varargin)
   if (nfun > 10_000)
     q = q0;
   else
     d = (a + c) / 2;
     e = (c + b) / 2;
     fd = feval (f, d, varargin{:});
     fe = feval (f, e, varargin{:});
     nfun += 2;
