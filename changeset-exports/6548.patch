# HG changeset patch
# User jwe
# Date 1177047101 0
#      Fri Apr 20 05:31:41 2007 +0000
# Node ID ecc8d30fa28833ebf23b4993fb1ad7697fbee8bf
# Parent  4fb053f24fd6a78b831b7e1101664bf18609d94e
[project @ 2007-04-20 05:31:41 by jwe]

diff --git a/doc/refcard/refcard.tex b/doc/refcard/refcard.tex
--- a/doc/refcard/refcard.tex
+++ b/doc/refcard/refcard.tex
@@ -550,57 +550,26 @@ system ({\it cmd})&execute arbitrary she
 \sec Global Variables;
 global {\it var1} ...&Declare variables global.\cr
 \omit\hfill\vbox{\hsize=\idnwid\rm\vskip0.25ex
   Global variables may be accessed inside the body of a function
   without having to be passed in the function parameter list provided
   they are also declared global within the function.}\span\cr
 \endsec
 
-\sec Selected Built-in Variables;
+\sec Selected Built-in Functions;
 EDITOR&editor to use with {\tt edit\_history}\cr
 Inf, NaN&IEEE infinity, NaN\cr
 PAGER&program to use to paginate output\cr
 ans&last result not explicitly assigned\cr
 eps&machine precision\cr
 pi&$\pi$\cr
 realmax&maximum representable value\cr
 realmin&minimum representable value\cr
 \endsec
-\vskip -\secskip
-\vskip -2\lskip
-\altsec \null;
-automatic\_replot&automatically redraw plots\cr
-do\_fortran\_indexing&Fortran-style indexing of matrices\cr
-implicit\_str\_to\_num\_ok&allow strings to become numbers\cr
-output\_max\_field\_width&maximum numeric field width\cr
-output\_precision&min significant figures displayed\cr
-page\_screen\_output&control whether output is paged\cr
-prefer\_column\_vectors&create column vectors by default\cr
-resize\_on\_range\_error&automatic resizing of matrices\cr
-save\_precision&digits stored by {\tt save} command\cr
-silent\_functions&suppress output from functions\cr
-warn\_divide\_by\_zero&suppress divide by zero errors\cr
-\endsec
-\vskip -\secskip
-\vskip -2\lskip
-\widesec \null;
-commas\_in\_literal\_matrix\vskip\lskip\cr
-\omit\hfill\vbox{\hsize=\idnwid\rm
-  control handling of spaces in matrices\vskip3\lskip}\cr
-ignore\_function\_time\_stamp\cr
-\omit\hfill\vbox{\hsize=\idnwid\rm
-  ignore changes in function files during session\vskip3\lskip}\cr
-ok\_to\_lose\_imaginary\_part\cr
-\omit\hfill\vbox{\hsize=\idnwid\rm
-  allow complex to real conversion\vskip3\lskip}\cr
-prefer\_zero\_one\_indexing\cr
-\omit\hfill\vbox{\hsize=\idnwid\rm
-  if ambiguous, prefer 0-1 style indexing\vskip3\lskip}\cr
-\endsec
 
 \vfill\eject
 
 \sec Arithmetic and Increment Operators;
 {\it x} + {\it y}&addition\cr
 {\it x} - {\it y}&subtraction\cr
 {\it x} * {\it y}&matrix multiplication\cr
 {\it x} .* {\it y}&element by element multiplication\cr
@@ -875,70 +844,46 @@ cov ({\it x}, {\it y})&covariance\cr
 mean ({\it a})&mean value\cr
 median ({\it a})&median value\cr
 std ({\it a})&standard deviation\cr
 var ({\it a})&variance\cr
 \endsec
 
 \vfill\eject
 
-\sec Basic Plotting;
-\omit \vbox{\tt
-gplot \opt{{\it ranges}} {\it expr} \opt{{\it using}}
-  \opt{{\it title}} \opt{{\it style}}\hfill{\rm 2D plotting}
-  \par\vskip \lskip}\span\cr
-\omit \vbox{\tt
-gsplot \opt{{\it ranges}} {\it expr} \opt{{\it using}}
-  \opt{{\it title}} \opt{{\it style}}\hfill{\rm 3D plotting}
-  \par\vskip \lskip}\span\cr
-\quad{\it ranges}&specify data ranges\cr
-\quad{\it expr}&expression to plot\cr
-\quad{\it using}&specify columns to plot\cr
-\quad{\it title}&specify line title for legend\cr
-\quad{\it style}&specify line style\cr
-\omit \vbox{\rm\vskip0.85ex 
-  If {\it ranges\/} are supplied, they must come before the expression
-  to plot.  The {\it using\/}, {\it title\/}, and {\it style\/}
-  options may appear in any order after {\it expr\/}.  Multiple
-  expressions may be plotted with a single command by separating them
-  with commas.\vskip1ex}\span\cr
-set {\it options}&set plotting options\cr
-show {\it options}&show plotting options\cr
-replot&redisplay current plot\cr
-closeplot&close stream to {\tt gnuplot} process\cr
-purge\_tmp\_files&clean up temporary plotting files\cr
-automatic\_replot&built-in variable\cr
-\endsec
-
-\sec Other Plotting Functions;
+\sec Plotting Functions;
 plot ({\it args})&2D plot with linear axes\cr
+plot3 ({\it args})&3D plot with linear axes\cr
+line ({\it args})&2D or 3D line\cr
 semilogx ({\it args})&2D plot with logarithmic x-axis\cr
 semilogy ({\it args})&2D plot with logarithmic y-axis\cr
 loglog ({\it args})&2D plot with logarithmic axes\cr
 bar ({\it args})&plot bar charts\cr
 stairs ({\it x}, {\it y})&plot stairsteps\cr
 hist ({\it y}, {\it x})&plot histograms\cr\cr
 title ({\it string})&set plot title\cr\cr
 axis ({\it limits})&set axis ranges\cr
 xlabel ({\it string})&set x-axis label\cr
 ylabel ({\it string})&set y-axis label\cr
+zlabel ({\it string})&set z-axis label\cr
+legend ({\it string})&set label in plot key\cr
 grid \opt{on$|$off}&set grid state\cr
 hold \opt{on$|$off}&set hold state\cr
 ishold&return 1 if hold is on, 0 otherwise\cr\cr
 mesh ({\it x}, {\it y}, {\it z})&plot 3D surface\cr
 meshdom ({\it x}, {\it y})&create mesh coordinate matrices\cr
 \endsec
 
 \vskip 0pt plus 2fill
 \hrule width \hsize
 \par\vskip10pt
 {\smrm\parskip=6pt
 Edition \refcardedition for Octave Version \octaveversion.  Copyright
-1996, John W. Eaton
-(jwe@che.utexas.edu).  The author assumes no responsibility for any
+1996, 2007, John W. Eaton
+(jwe@bevo.che.wisc.edu).  The author assumes no responsibility for any
 errors on this card.
 
 This card may be freely distributed under the terms of the GNU
 General Public License.
 
 \TeX{} Macros for this card by Roland Pesch (pesch@cygnus.com),
 originally for the GDB reference card
 
diff --git a/emacs/octave-mod.el b/emacs/octave-mod.el
--- a/emacs/octave-mod.el
+++ b/emacs/octave-mod.el
@@ -73,21 +73,18 @@ All Octave abbrevs start with a grave ac
     (define-abbrev octave-abbrev-table "`ef" "endfor" nil)
     (define-abbrev octave-abbrev-table "`efu" "endfunction" nil)
     (define-abbrev octave-abbrev-table "`ei" "endif" nil)
     (define-abbrev octave-abbrev-table "`es" "endswitch" nil)
     (define-abbrev octave-abbrev-table "`ew" "endwhile" nil)
     (define-abbrev octave-abbrev-table "`f" "for" nil)
     (define-abbrev octave-abbrev-table "`fu" "function" nil)
     (define-abbrev octave-abbrev-table "`gl" "global" nil)
-    (define-abbrev octave-abbrev-table "`gp" "gplot" nil)
-    (define-abbrev octave-abbrev-table "`gs" "gsplot" nil)
     (define-abbrev octave-abbrev-table "`if" "if ()" nil)
     (define-abbrev octave-abbrev-table "`o" "otherwise" nil)
-    (define-abbrev octave-abbrev-table "`rp" "replot" nil)
     (define-abbrev octave-abbrev-table "`r" "return" nil)
     (define-abbrev octave-abbrev-table "`s" "switch" nil)
     (define-abbrev octave-abbrev-table "`t" "try" nil)
     (define-abbrev octave-abbrev-table "`u" "until ()" nil)
     (define-abbrev octave-abbrev-table "`up" "unwind_protect" nil)
     (define-abbrev octave-abbrev-table "`upc" "unwind_protect_cleanup" nil)
     (define-abbrev octave-abbrev-table "`w" "while ()" nil)
     (setq abbrevs-changed ac)))
@@ -110,24 +107,23 @@ All Octave abbrevs start with a grave ac
 (defvar octave-end-keywords
   '("endfor" "endfunction" "endif" "endswitch" "end_try_catch"
     "end_unwind_protect" "endwhile" "until"))
 
 (defvar octave-reserved-words
   (append octave-begin-keywords
 	  octave-else-keywords
 	  octave-end-keywords
-	  '("all_va_args" "break" "continue" "end" "global" "gplot" "gsplot"
-	    "replot" "return"))
+	  '("all_va_args" "break" "continue" "end" "global" "return"))
   "Reserved words in Octave.")
 
 (defvar octave-text-functions
   '("casesen" "cd" "chdir" "clear" "diary" "dir" "document" "echo"
-    "edit_history" "format" "graw" "gset" "gshow" "help" "history" "hold"
-    "load" "ls" "more" "run_history" "save" "set" "show" "type"
+    "edit_history" "format" "help" "history" "hold"
+    "load" "ls" "more" "run_history" "save" "type"
     "which" "who" "whos")
   "Text functions in Octave (these names are also reserved).")
 
 (defvar octave-variables
   '("DEFAULT_EXEC_PATH" "DEFAULT_LOADPATH"
     "EDITOR" "EXEC_PATH" "F_DUPFD" "F_GETFD" "F_GETFL" "F_SETFD"
     "F_SETFL" "I" "IMAGE_PATH" "Inf" "J"
     "NaN" "OCTAVE_VERSION" "O_APPEND" "O_CREAT" "O_EXCL"
@@ -136,38 +132,30 @@ All Octave abbrevs start with a grave ac
     "__F_GETFD__" "__F_GETFL__" "__F_SETFD__" "__F_SETFL__" "__I__"
     "__Inf__" "__J__" "__NaN__" "__OCTAVE_VERSION__" "__O_APPEND__"
     "__O_CREAT__" "__O_EXCL__" "__O_NONBLOCK__" "__O_RDONLY__"
     "__O_RDWR__" "__O_TRUNC__" "__O_WRONLY__" "__PWD__" "__SEEK_CUR__"
     "__SEEK_END__" "__SEEK_SET__" "__argv__" "__e__" "__eps__"
     "__i__" "__inf__" "__j__" "__nan__" "__pi__"
     "__program_invocation_name__" "__program_name__" "__realmax__"
     "__realmin__" "__stderr__" "__stdin__" "__stdout__" "ans" "argv"
-    "automatic_replot" "beep_on_error" "completion_append_char"
+    "beep_on_error" "completion_append_char"
     "crash_dumps_octave_core" "default_save_format"
     "e" "echo_executing_commands" "eps"
     "error_text" "gnuplot_binary" "history_file"
     "history_size" "ignore_function_time_stamp"
     "inf" "nan" "nargin" "output_max_field_width" "output_precision"
     "page_output_immediately" "page_screen_output" "pi"
     "print_answer_id_name" "print_empty_dimensions"
     "program_invocation_name" "program_name"
     "realmax" "realmin" "return_last_computed_value" "save_precision"
     "saving_history" "sighup_dumps_octave_core" "sigterm_dumps_octave_core"
     "silent_functions" "split_long_rows" "stderr" "stdin" "stdout"
     "string_fill_char" "struct_levels_to_print"
-    "suppress_verbose_help_message" "warn_assign_as_truth_value"
-    "warn_divide_by_zero" "warn_empty_list_elements"
-    "warn_fortran_indexing" "warn_function_name_clash"
-    "warn_future_time_stamp" "warn_imag_to_real"
-    "warn_matlab_incompatible" "warn_missing_semicolon"
-    "warn_neg_dim_as_zero" "warn_num_to_str" "warn_precedence_change"
-    "warn_reload_forces_clear" "warn_separator_insert"
-    "warn_single_quote_string" "warn_str_to_num"
-    "warn_undefined_return_values" "warn_variable_switch_label")
+    "suppress_verbose_help_message")
   "Builtin variables in Octave.")
 
 (defvar octave-function-header-regexp
   (concat "^\\s-*\\<\\(function\\)\\>"
 	  "\\([^=;\n]*=[ \t]*\\|[ \t]*\\)\\(\\w+\\)\\>")
   "Regexp to match an Octave function header.
 The string `function' and its name are given by the first and third
 parenthetical grouping.")
diff --git a/run-octave.in b/run-octave.in
--- a/run-octave.in
+++ b/run-octave.in
@@ -26,17 +26,17 @@ d1_path=$(echo "$d1_list" | $AWK '{ s = 
 d2_path=$(echo "$d2_list" | $AWK '{ s = sprintf ("%s%s", s, $0); } END { sub (/:$/, "", s); print s; }')
 d3_path=$(echo "$d3_list" | $AWK '{ s = sprintf ("%s%s", s, $0); } END { sub (/:$/, "", s); print s; }')
 d4_path=$(echo "$d4_list" | $AWK '{ s = sprintf ("%s%s", s, $0); } END { sub (/:$/, "", s); print s; }')
 
 LOADPATH="$d1_path:$d2_path:$d3_path:$d4_path"
 IMAGEPATH="$top_srcdir/scripts/image"
 INFOFILE="$builddir/doc/interperter/octave.info"
 
-args="--no-initial-path --path=\"$LOADPATH\" --image-path=\"$IMAGEPATH\" --info=file=\"$INFOFILE\""
+args="--no-initial-path --path=\"$LOADPATH\" --image-path=\"$IMAGEPATH\" --info-file=\"$INFOFILE\""
 
 if [ $# -gt 0 ]; then
   if [ "x$1" = "x-g" ]; then
     driver="gdb"
     if [ $(/bin/pwd) = "$builddir" ]; then
       sed "s|^set args.*$|set args $args|" .gdbinit > .gdbinit-tmp
       mv .gdbinit-tmp .gdbinit
     fi
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2007-04-20  John W. Eaton  <jwe@octave.org>
+
+	* DLD-FUNCTIONS/__gnuplot_raw__.l (gnuplot::makeplot): Check
+	whether caller is "splot", not "gsplot".
+
 2007-04-19  John W. Eaton  <jwe@octave.org>
 
 	* lex.l (is_keyword_token): Delete all_va_args_kw switch case.
 	* octave.gperf: Remove all_va_args_kw from the list.
 
 2007-04-19  Daniel J. Sebald  <daniel.sebald@ieee.org>
 
 	* syscalls.cc: Fix popen2 test to stop trying after 100 times
diff --git a/src/DLD-FUNCTIONS/__gnuplot_raw__.l b/src/DLD-FUNCTIONS/__gnuplot_raw__.l
--- a/src/DLD-FUNCTIONS/__gnuplot_raw__.l
+++ b/src/DLD-FUNCTIONS/__gnuplot_raw__.l
@@ -1337,17 +1337,17 @@ gnuplot::makeplot (std::string caller, s
 	  outstr += printrange (xrange_start_str, xrange_end_str) + " ";
 	  tok = gptlex ();
 	  if (tok == START_BRACKET)
 	    {
 	      std::string yrange_start_str = read_until (colonp, tok);
 	      std::string yrange_end_str = read_until (endbracketp, tok);
 	      outstr += printrange (yrange_start_str, yrange_end_str) + " ";
 	      tok = gptlex ();
-	      if (tok == START_BRACKET && caller == "gsplot")
+	      if (tok == START_BRACKET && caller == "splot")
 		{
 		  std::string zrange_start_str = read_until (colonp, tok);
 		  std::string zrange_end_str = read_until (endbracketp, tok);
 		  outstr += printrange (zrange_start_str, zrange_end_str) + " ";
 		  tok = gptlex ();
                 }
             }
         }
