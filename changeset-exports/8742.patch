# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1234592854 -3600
#      Sat Feb 14 07:27:34 2009 +0100
# Node ID d2b06871aface3efbe565bc02c5ae33d2473fd96
# Parent  008f3985c8c0daac25699016dc78a303d26bed73
add missing return statement

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,12 +1,13 @@
 2009-02-14  Jaroslav Hajek  <highegg@gmail.com>
 
 	* intNDArray.cc: include mx-inlines.cc.
 	(intNDArray::sum): Use mx_do_red_op (..., mx_inline_sum).
+	* Range.cc (Range::is_sorted): Add missing return statement.
 
 2009-02-13  Jaroslav Hajek  <highegg@gmail.com>
 
 	* mx-inlines.cc (OP_RED_SUM, OP_RED_PROD, OP_RED_SUMSQ, OP_RED_SUMSQC,
 	OP_RED_FCN, OP_RED_FCN2, OP_RED_FCNN, OP_CUM_FCN, OP_CUM_FCN2,
 	OP_CUM_FCNN): New macros.
 	(mx_inline_sum, mx_inline_prod, mx_inline_sumsq, mx_inline_cumsum,
 	mx_inline_cumprod, get_extent_triplet, do_mx_red_op, do_mx_cum_op):
diff --git a/liboctave/Range.cc b/liboctave/Range.cc
--- a/liboctave/Range.cc
+++ b/liboctave/Range.cc
@@ -253,16 +253,18 @@ sortmode
 Range::is_sorted (sortmode mode) const
 {
   if (rng_nelem > 1 && rng_inc < 0)
     mode = (mode == ASCENDING) ? UNSORTED : DESCENDING;
   else if (rng_nelem > 1 && rng_inc > 0)
     mode = (mode == DESCENDING) ? UNSORTED : ASCENDING;
   else
     mode = mode ? mode : ASCENDING;
+
+  return mode;
 }
 
 std::ostream&
 operator << (std::ostream& os, const Range& a)
 {
   double b = a.base ();
   double increment = a.inc ();
   octave_idx_type num_elem = a.nelem ();
