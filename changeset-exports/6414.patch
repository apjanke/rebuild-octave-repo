# HG changeset patch
# User jwe
# Date 1173974692 0
#      Thu Mar 15 16:04:52 2007 +0000
# Node ID 250eebbd7cccdf43b0ae0337d6b498cfc0c6303f
# Parent  cf8e671beada393ac9e171ff2b5588b29b1a15c8
[project @ 2007-03-15 16:04:52 by jwe]

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+2007-03-15  John W. Eaton  <jwe@octave.org>
+
+	* lo-mappers.cc (acos): Use formula similar to what we use for asin.
+	From Alexander Barth <abarth@marine.usf.edu>.
+
 2007-03-12  John W. Eaton  <jwe@octave.org>
 
 	* oct-inttypes.h (octave_int::octave_int (double)):
 	New Specialization.  Round arg.
 	(operator / (const octave_int<T1>&, const octave_int<T2>&)):
 	Round result before converting type.
 
 2007-03-07  John W. Eaton  <jwe@octave.org>
diff --git a/liboctave/lo-mappers.cc b/liboctave/lo-mappers.cc
--- a/liboctave/lo-mappers.cc
+++ b/liboctave/lo-mappers.cc
@@ -204,17 +204,17 @@ xmax (double x, double y)
 
 // complex -> complex mappers.
 
 Complex
 acos (const Complex& x)
 {
   static Complex i (0, 1);
 
-  return (real (x) * imag (x) < 0.0) ? i * acosh (x) : -i * acosh (x);
+  return -i * (log (x + i * (sqrt (1.0 - x*x))));
 }
 
 Complex
 acosh (const Complex& x)
 {
   return log (x + sqrt (x*x - 1.0));
 }
 
