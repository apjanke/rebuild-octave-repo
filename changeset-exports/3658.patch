# HG changeset patch
# User jwe
# Date 955482344 0
#      Tue Apr 11 19:45:44 2000 +0000
# Node ID 808f399398c951cb3dff6afc6dfb92c6631ba1c4
# Parent  a908150a3a323eac7866c24834e18d84c13f9809
[project @ 2000-04-11 19:45:44 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,12 @@
+2000-04-11  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* sysdep.cc (kbhit): Also clear cin if at EOF.
+
 2000-04-11  Joao Cardoso <jcardoso@inescn.pt>
 
 	* sysdep.cc (kbhit): New arg, wait.
 	(raw_mode): Ditto.
 	(Fkbhit): If given an arg, call kbhit with wait = false.
 
 	* DLD-FUNCTIONS/minmax.cc (Fmax, Fmin): Fix doc string.
 
diff --git a/src/sysdep.cc b/src/sysdep.cc
--- a/src/sysdep.cc
+++ b/src/sysdep.cc
@@ -210,28 +210,26 @@ raw_mode (bool on, bool wait)
 	s.c_oflag &= ~(OCRNL);
 #endif
 #if defined (ONOCR)
 	s.c_oflag &= ~(ONOCR);
 #endif
 #if defined (ONLRET)
 	s.c_oflag &= ~(ONLRET);
 #endif
-	if (wait)
-	  s.c_cc[VMIN] = 1;
-	else
-	  s.c_cc[VMIN] = 0;		
+	s.c_cc[VMIN] = wait ? 1 : 0;
 	s.c_cc[VTIME] = 0;
       }      
     else
       {
 	// Restore saved modes.
 
 	s = save_term;
       }
+
     tcsetattr (tty_fd, TCSAFLUSH, &s);
   }
 #elif defined (HAVE_TERMIO_H)
   {
     struct termio s;
     static struct termio save_term;
 
     if (on)
@@ -255,28 +253,25 @@ raw_mode (bool on, bool wait)
 	s.c_oflag &= ~(OCRNL);
 #endif
 #if defined (ONOCR)
 	s.c_oflag &= ~(ONOCR);
 #endif
 #if defined (ONLRET)
 	s.c_oflag &= ~(ONLRET);
 #endif
-	if (wait)
-	  s.c_cc[VMIN] = 1;
-	else
-	  s.c_cc[VMIN] = 0;		
-	s.c_cc[VTIME] = 0;
+	s.c_cc[VMIN] = wait ? 1 : 0;
       }      
     else
       {
 	// Restore saved modes.
 
 	s = save_term;
       }
+
     ioctl (tty_fd, TCSETAW, &s);
   }
 #elif defined (HAVE_SGTTY_H)
   {
     struct sgttyb s;
     static struct sgttyb save_term;
 
     if (on)
@@ -298,36 +293,40 @@ raw_mode (bool on, bool wait)
 	s.sg_flags &= ~(ECHO);
       } 
     else
       {
 	// Restore saved modes.
 
 	s = save_term;
       }
+
     ioctl (tty_fd, TIOCSETN, &s);
   }
 #else
 LOSE! LOSE!
 #endif
 
   curr_on = on;
 }
 
 // Read one character from the terminal.
 
 int
 kbhit (bool wait)
 {
-  int c;
-  raw_mode (1, wait);
-  c = std::cin.get ();
-  if (std::cin.fail())
-	  std::cin.clear ();
-  raw_mode (0, 1);
+  raw_mode (true, wait);
+
+  int c = std::cin.get ();
+
+  if (std::cin.fail () || std::cin.eof ())
+    std::cin.clear ();
+
+  raw_mode (false, true);
+
   return c;
 }
 
 DEFUN (clc, , ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} clc ()\n\
 @deftypefnx {Built-in Function} {} home ()\n\
 Clear the terminal screen and move the cursor to the upper left corner.\n\
@@ -426,29 +425,22 @@ x = kbhit (1);\n\
 identical to the above example, but don't wait for a keypress,\n\
 returning the empty string if no key is available.\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
   // XXX FIXME XXX -- add timeout and default value args?
 
-  int nargin = args.length ();
-	
   if (interactive)
     {
-    	int c;
+      int c = kbhit (args.length () == 0);
 
-	if (nargin == 1)
-	  c = kbhit (false);
-      	else
-	  c = kbhit (true);
-
-	if (c == -1)
-	  c = 0;
+      if (c == -1)
+	c = 0;
 
       char *s = new char [2];
       s[0] = c;
       s[1] = '\0';
       retval = s;
     }
 
   return retval;
