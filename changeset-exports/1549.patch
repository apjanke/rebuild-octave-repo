# HG changeset patch
# User jwe
# Date 813111112 0
#      Sun Oct 08 00:11:52 1995 +0000
# Node ID d1fe5918e16b3fbe7a45d9d1978f9d3d47495295
# Parent  3c89376f951f0c171b357d6f9260b0c3b60bf6e4
[project @ 1995-10-08 00:11:52 by jwe]

diff --git a/liboctave/CMatrix.cc b/liboctave/CMatrix.cc
--- a/liboctave/CMatrix.cc
+++ b/liboctave/CMatrix.cc
@@ -812,16 +812,18 @@ ComplexMatrix::inverse (int& info, doubl
   delete [] z;
 
   return ComplexMatrix (tmp_data, nr, nc);
 }
 
 ComplexMatrix
 ComplexMatrix::pseudo_inverse (double tol)
 {
+  ComplexMatrix retval;
+
   ComplexSVD result (*this);
 
   DiagMatrix S = result.singular_values ();
   ComplexMatrix U = result.left_singular_matrix ();
   ComplexMatrix V = result.right_singular_matrix ();
 
   ColumnVector sigma = S.diag ();
 
@@ -836,24 +838,26 @@ ComplexMatrix::pseudo_inverse (double to
       else
 	tol = nc * sigma.elem (0) * DBL_EPSILON;
     }
 
   while (r >= 0 && sigma.elem (r) < tol)
     r--;
 
   if (r < 0)
-    return ComplexMatrix (nc, nr, 0.0);
+    retval = ComplexMatrix (nc, nr, 0.0);
   else
     {
       ComplexMatrix Ur = U.extract (0, 0, nr-1, r);
       DiagMatrix D = DiagMatrix (sigma.extract (0, r)) . inverse ();
       ComplexMatrix Vr = V.extract (0, 0, nc-1, r);
-      return Vr * D * Ur.hermitian ();
+      retval = Vr * D * Ur.hermitian ();
     }
+
+  return retval;
 }
 
 ComplexMatrix
 ComplexMatrix::fourier (void) const
 {
   int nr = rows ();
   int nc = cols ();
   int npts, nsamples;
