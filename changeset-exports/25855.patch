# HG changeset patch
# User John Donoghue
# Date 1536246074 14400
#      Thu Sep 06 11:01:14 2018 -0400
# Node ID f7ef179096eecf44e1b07f439bcd25d0dac93bcf
# Parent  d19dfcc862d47b4ea02615f2b82b1ca09e92c3a8
Set/restore pkg global_list during pkg test (Bug #54623)

* test/pkg/pkg.tst: Set/restore pkg global_list during pkg test

diff --git a/test/pkg/pkg.tst b/test/pkg/pkg.tst
--- a/test/pkg/pkg.tst
+++ b/test/pkg/pkg.tst
@@ -17,31 +17,34 @@
 ## <https://www.gnu.org/licenses/>.
 
 ############################################################
 ## Test suite for pkg.m
 ## Tests are organized first by action, and then by options.
 ## All actions should be tested, and ideally all options are tested.
 ############################################################
 
-%!shared old_prefix, old_archprefix, old_local_list, prefix, restorecfg, restorecache, rmtmpdir, mfile_pkg_name, mfile_pkg_zip
+%!shared old_prefix, old_archprefix, old_local_list, old_global_list, prefix, restorecfg, restorecache, restoreglobalcache, rmtmpdir, mfile_pkg_name, mfile_pkg_zip
 %!
 %! ## Do all tests in a temporary directory
 %! [old_prefix, old_archprefix] = pkg ("prefix");
 %! restorecfg = onCleanup (@() pkg ("prefix", old_prefix, old_archprefix));
 %! old_local_list = pkg ("local_list");
 %! restorecache = onCleanup (@() pkg ("local_list", old_local_list));
+%! old_global_list = pkg ("global_list");
+%! restoreglobalcache = onCleanup (@() pkg ("global_list", old_global_list));
 %! prefix = tempname ();
 %! [status] = mkdir (prefix);
 %! if (! status)
 %!   error ("pkg.tst: Could not create temporary directory for pkg testing");
 %!   return;  # abort further testing
 %! endif
 %! pkg ("prefix", prefix, prefix);
 %! pkg ("local_list", fullfile (prefix, "octave_packages"));
+%! pkg ("global_list", fullfile (prefix, "octave_packages"));
 %! rmtmpdir = @onCleanup (@() confirm_recursive_rmdir (0, "local") && rmdir (prefix, "s"));
 %!
 %! ## Create zip file packages of testing directories in prefix directory
 %! mfile_pkg_name = {"mfile_basic_test", "mfile_minimal_test"};
 %! mfile_pkg_zip = fullfile (prefix, strcat (mfile_pkg_name, ".zip"));
 %! for i = 1:numel (mfile_pkg_name)
 %!   zip (mfile_pkg_zip{i}, mfile_pkg_name{i});
 %! endfor
