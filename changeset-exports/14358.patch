# HG changeset patch
# User Ben Abbott  <bpabbott@mac.com>
# Date 1329080546 18000
#      Sun Feb 12 16:02:26 2012 -0500
# Node ID adb352685deda43b90030f513342fef36db329a7
# Parent  e7c74f56cd03e4e92179c442bf0ab6ea8cbb8b45
fltk toolkit: figure position should have its origin at LL not UL.

* __init__fltk__.cc: Do not shift the boundingbox origin from LL to UL.

diff --git a/src/DLD-FUNCTIONS/__init_fltk__.cc b/src/DLD-FUNCTIONS/__init_fltk__.cc
--- a/src/DLD-FUNCTIONS/__init_fltk__.cc
+++ b/src/DLD-FUNCTIONS/__init_fltk__.cc
@@ -1163,40 +1163,22 @@ private:
     Fl_Window::resize (xx, yy, ww, hh);
 
     Matrix pos (1,4,0);
     pos(0) = xx;
     pos(1) = yy;
     pos(2) = ww;
     pos(3) = hh - status_h - menu_h;
 
-    graphics_object obj = gh_manager::get_object (0);
-    base_properties& rp = obj.get_properties ();
-    Matrix screen_size = rp.get_boundingbox (true);
-    pos(0)--;
-    pos(1)--;
-    pos(1) = screen_size(3) - pos(1) - pos(3);
     fp.set_boundingbox (pos, true);
   }
 
-  Matrix get_figure_position (void)
-  {
-    graphics_object obj = gh_manager::get_object (0);
-    base_properties& rp = obj.get_properties ();
-    Matrix screen_size = rp.get_boundingbox (true);
-    Matrix pos = fp.get_boundingbox (true);
-    pos(1) = screen_size(3) - pos(1) - pos(3);
-    pos(0)++;
-    pos(1)++;
-    return pos;
-  }
-
   void draw (void)
   {
-    Matrix pos = get_figure_position ();
+    Matrix pos = fp.get_boundingbox (true);
     Fl_Window::resize (pos(0), pos(1), pos(2), pos(3) + status_h + menu_h);
 
     return Fl_Window::draw ();
   }
 
   int handle (int event)
   {
     graphics_handle gh;
@@ -1309,17 +1291,17 @@ private:
                       pixel2status (ax_obj, pos_x, pos_y,
                                     Fl::event_x (), Fl::event_y ());
                     else
                       view2status (ax_obj);
                     axes::properties& ap =
                       dynamic_cast<axes::properties&> (ax_obj.get_properties ());
 
                     double x0, y0, x1, y1;
-                    Matrix pos = get_figure_position ();
+                    Matrix pos = fp.get_boundingbox (true);
                     pixel2pos (ax_obj, pos_x, pos_y, x0, y0);
                     pixel2pos (ax_obj, Fl::event_x (), Fl::event_y (), x1, y1);
 
                     if (gui_mode == pan_zoom)
                       ap.translate_view (x0, x1, y0, y1);
                     else if (gui_mode == rotate_zoom)
                       {
                         double daz, del;
