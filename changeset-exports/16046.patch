# HG changeset patch
# User Stefan Mahr <dac922@gmx.de>
# Date 1360607204 18000
#      Mon Feb 11 13:26:44 2013 -0500
# Branch stable
# Node ID 1678d0fca14607bad8117587df9a33321a0055ff
# Parent  8cf7db67c1a26ac53e4ef652443dd6e43dc5d573
fix ErrorHandler in cellfun (bug #38256)

* cellfun.cc: The ErrorHandler was not executed on some errors that
  throw an expection. Test added.

diff --git a/src/DLD-FUNCTIONS/cellfun.cc b/src/DLD-FUNCTIONS/cellfun.cc
--- a/src/DLD-FUNCTIONS/cellfun.cc
+++ b/src/DLD-FUNCTIONS/cellfun.cc
@@ -64,17 +64,24 @@ along with Octave; see the file COPYING.
 #include "ov-fcn-handle.h"
 
 static octave_value_list
 get_output_list (octave_idx_type count, octave_idx_type nargout,
                  const octave_value_list& inputlist,
                  octave_value& func,
                  octave_value& error_handler)
 {
-  octave_value_list tmp = func.do_multi_index_op (nargout, inputlist);
+  octave_value_list tmp;
+  try {
+    tmp = func.do_multi_index_op (nargout, inputlist);
+  }
+  catch (octave_execution_exception) {
+    if (error_handler.is_defined ())
+      error_state = 1;
+  }
 
   if (error_state)
     {
       if (error_handler.is_defined ())
         {
           octave_scalar_map msg;
           msg.assign ("identifier", last_error_id ());
           msg.assign ("message", last_error_message ());
@@ -996,16 +1003,17 @@ v = cellfun (@@det, a); # faster\n\
 %!assert(cellfun('size',{zeros([1,2,3]),1},2),[2,1])
 %!assert(cellfun('size',{zeros([1,2,3]),1},3),[3,1])
 %!assert(cellfun(@atan2,{1,1},{1,2}),[atan2(1,1),atan2(1,2)])
 %!assert(cellfun(@atan2,{1,1},{1,2},'UniformOutput',false),{atan2(1,1),atan2(1,2)})
 %!assert(cellfun(@sin,{1,2;3,4}),sin([1,2;3,4]))
 %!assert(cellfun(@atan2,{1,1;1,1},{1,2;1,2}),atan2([1,1;1,1],[1,2;1,2]))
 %!error(cellfun(@factorial,{-1,3}))
 %!assert(cellfun(@factorial,{-1,3},'ErrorHandler',@(x,y) NaN),[NaN,6])
+%!assert (cellfun (@(x) x(2),{[1],[1,2]},"ErrorHandler",@(x,y) NaN), [NaN,2])
 %!test
 %! [a,b,c]=cellfun(@fileparts,{fullfile("a","b","c.d"),fullfile("e","f","g.h")},'UniformOutput',false);
 %! assert(a,{fullfile("a","b"),fullfile("e","f")})
 %! assert(b,{'c','g'})
 %! assert(c,{'.d','.h'})
 
 */
 
