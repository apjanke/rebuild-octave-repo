# HG changeset patch
# User CarnÃ« Draug <carandraug@octave.org>
# Date 1470453307 -3600
#      Sat Aug 06 04:15:07 2016 +0100
# Node ID 2b487dbe419d00f76274328cf0e688e5bafcc21b
# Parent  6065bd58db2be0a849d9bcec621dccf64ac6fdd1
dim-vector.h (ndims): do not return a reference to the rep.

* dim-vector.h (ndims): this methods was only made public recently
with dcee67d28570 and is not used anywhere else.  It would expose
the rep for no gain, so always return the int by copy.
* dim-vector.cc: access the ndims on rep directly.

diff --git a/liboctave/array/dim-vector.cc b/liboctave/array/dim-vector.cc
--- a/liboctave/array/dim-vector.cc
+++ b/liboctave/array/dim-vector.cc
@@ -58,17 +58,17 @@ dim_vector::chop_all_singletons (void)
     {
       if (rep[i] != 1)
         rep[j++] = rep[i];
     }
 
   if (j == 1)
     rep[1] = 1;
 
-  ndims () = j > 2 ? j : 2;
+  rep[-1] = j > 2 ? j : 2;
 }
 
 std::string
 dim_vector::str (char sep) const
 {
   std::ostringstream buf;
 
   for (int i = 0; i < ndims (); i++)
diff --git a/liboctave/array/dim-vector.h b/liboctave/array/dim-vector.h
--- a/liboctave/array/dim-vector.h
+++ b/liboctave/array/dim-vector.h
@@ -238,17 +238,17 @@ public:
   {
     int l = ndims ();
     if (l > 2 && rep[l-1] == 1)
       {
         make_unique ();
         do
           l--;
         while (l > 2 && rep[l-1] == 1);
-        ndims () = l;
+        rep[-1] = l;
       }
   }
 
   void chop_all_singletons (void);
 
   // WARNING: Only call by jit
   octave_idx_type *to_jit (void) const
   {
@@ -298,17 +298,17 @@ public:
   }
 
   //! Number of dimensions.
   /*!
       Returns the number of dimensions of the dim_vector.  This is number of
       elements in the dim_vector including trailing singetons.  It is also
       the number of dimensions an Array with this dim_vector would have.
   */
-  octave_idx_type& ndims (void) const { return rep[-1]; }
+  octave_idx_type ndims (void) const { return rep[-1]; }
 
   //! Number of dimensions.
   //! Synonymous with ndims().
   /*!
     While this method is not officially deprecated, consider using ndims()
     instead to avoid confusion.  Array does not have length because of its
     odd definition as length of the longest dimension.
   */
