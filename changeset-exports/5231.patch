# HG changeset patch
# User jwe
# Date 1111504439 0
#      Tue Mar 22 15:13:59 2005 +0000
# Node ID f19646530e62462beaf202ba7109c4000a3c9436
# Parent  9ecae85335fa6626ad35fcd4fbd87dc959748928
[project @ 2005-03-22 15:13:58 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,14 @@
+2005-03-22  John W. Eaton  <jwe@octave.org>
+
+	* emacs/octave-mod.el (octave-abbrev-table): Omit fifth and sixth
+	arguments from define-abbrev for compatibility with some older
+	versions of Emacs.
+
 2005-03-21  John W. Eaton  <jwe@octave.org>
 
 	* octave-bug.in: Try harder to find default pager (use code
 	similar to that used for finding default editor).
 
 2005-03-17  Shan G. Smith  <shan@cybertrails.com>
 
 	* configure.in: Move check for -lumfpack to after check for blas.
diff --git a/emacs/octave-mod.el b/emacs/octave-mod.el
--- a/emacs/octave-mod.el
+++ b/emacs/octave-mod.el
@@ -56,45 +56,45 @@
 
 (defvar octave-abbrev-table nil
   "Abbrev table for Octave's reserved words.
 Used in `octave-mode' and inferior-octave-mode buffers.
 All Octave abbrevs start with a grave accent (`).")
 (unless octave-abbrev-table
   (let ((ac abbrevs-changed))
     (define-abbrev-table 'octave-abbrev-table ())
-    (define-abbrev octave-abbrev-table "`a" "all_va_args" nil 0 t)
-    (define-abbrev octave-abbrev-table "`b" "break" nil 0 t)
-    (define-abbrev octave-abbrev-table "`cs" "case" nil 0 t)
-    (define-abbrev octave-abbrev-table "`ca" "catch" nil 0 t)
-    (define-abbrev octave-abbrev-table "`c" "continue" nil 0 t)
-    (define-abbrev octave-abbrev-table "`el" "else" nil 0 t)
-    (define-abbrev octave-abbrev-table "`eli" "elseif" nil 0 t)
-    (define-abbrev octave-abbrev-table "`et" "end_try_catch" nil 0 t)
-    (define-abbrev octave-abbrev-table "`eu" "end_unwind_protect" nil 0 t)
-    (define-abbrev octave-abbrev-table "`ef" "endfor" nil 0 t)
-    (define-abbrev octave-abbrev-table "`efu" "endfunction" nil 0 t)
-    (define-abbrev octave-abbrev-table "`ei" "endif" nil 0 t)
-    (define-abbrev octave-abbrev-table "`es" "endswitch" nil 0 t)
-    (define-abbrev octave-abbrev-table "`ew" "endwhile" nil 0 t)
-    (define-abbrev octave-abbrev-table "`f" "for" nil 0 t)
-    (define-abbrev octave-abbrev-table "`fu" "function" nil 0 t)
-    (define-abbrev octave-abbrev-table "`gl" "global" nil 0 t)
-    (define-abbrev octave-abbrev-table "`gp" "gplot" nil 0 t)
-    (define-abbrev octave-abbrev-table "`gs" "gsplot" nil 0 t)
-    (define-abbrev octave-abbrev-table "`if" "if ()" nil 0 t)
-    (define-abbrev octave-abbrev-table "`o" "otherwise" nil 0 t)
-    (define-abbrev octave-abbrev-table "`rp" "replot" nil 0 t)
-    (define-abbrev octave-abbrev-table "`r" "return" nil 0 t)
-    (define-abbrev octave-abbrev-table "`s" "switch" nil 0 t)
-    (define-abbrev octave-abbrev-table "`t" "try" nil 0 t)
-    (define-abbrev octave-abbrev-table "`u" "until ()" nil 0 t)
-    (define-abbrev octave-abbrev-table "`up" "unwind_protect" nil 0 t)
-    (define-abbrev octave-abbrev-table "`upc" "unwind_protect_cleanup" nil 0 t)
-    (define-abbrev octave-abbrev-table "`w" "while ()" nil 0 t)
+    (define-abbrev octave-abbrev-table "`a" "all_va_args" nil)
+    (define-abbrev octave-abbrev-table "`b" "break" nil)
+    (define-abbrev octave-abbrev-table "`cs" "case" nil)
+    (define-abbrev octave-abbrev-table "`ca" "catch" nil)
+    (define-abbrev octave-abbrev-table "`c" "continue" nil)
+    (define-abbrev octave-abbrev-table "`el" "else" nil)
+    (define-abbrev octave-abbrev-table "`eli" "elseif" nil)
+    (define-abbrev octave-abbrev-table "`et" "end_try_catch" nil)
+    (define-abbrev octave-abbrev-table "`eu" "end_unwind_protect" nil)
+    (define-abbrev octave-abbrev-table "`ef" "endfor" nil)
+    (define-abbrev octave-abbrev-table "`efu" "endfunction" nil)
+    (define-abbrev octave-abbrev-table "`ei" "endif" nil)
+    (define-abbrev octave-abbrev-table "`es" "endswitch" nil)
+    (define-abbrev octave-abbrev-table "`ew" "endwhile" nil)
+    (define-abbrev octave-abbrev-table "`f" "for" nil)
+    (define-abbrev octave-abbrev-table "`fu" "function" nil)
+    (define-abbrev octave-abbrev-table "`gl" "global" nil)
+    (define-abbrev octave-abbrev-table "`gp" "gplot" nil)
+    (define-abbrev octave-abbrev-table "`gs" "gsplot" nil)
+    (define-abbrev octave-abbrev-table "`if" "if ()" nil)
+    (define-abbrev octave-abbrev-table "`o" "otherwise" nil)
+    (define-abbrev octave-abbrev-table "`rp" "replot" nil)
+    (define-abbrev octave-abbrev-table "`r" "return" nil)
+    (define-abbrev octave-abbrev-table "`s" "switch" nil)
+    (define-abbrev octave-abbrev-table "`t" "try" nil)
+    (define-abbrev octave-abbrev-table "`u" "until ()" nil)
+    (define-abbrev octave-abbrev-table "`up" "unwind_protect" nil)
+    (define-abbrev octave-abbrev-table "`upc" "unwind_protect_cleanup" nil)
+    (define-abbrev octave-abbrev-table "`w" "while ()" nil)
     (setq abbrevs-changed ac)))
 
 (defvar octave-comment-char ?#
   "Character to start an Octave comment.")
 (defvar octave-comment-start
   (string octave-comment-char ?\ )
   "String to insert to start a new Octave in-line comment.")
 (defvar octave-comment-start-skip "\\s<+\\s-*"
