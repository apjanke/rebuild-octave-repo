# HG changeset patch
# User Torsten <mttl@mailbox.org>
# Date 1488041821 -3600
#      Sat Feb 25 17:57:01 2017 +0100
# Node ID aaf20024db6f3a10041656c9031a9157c36b700a
# Parent  eb6059699e3b178c3d99a96caf8eab1eb8636ca0
function providing comment strings uses lexer number and not lexer names

* file-editor-tab.cc (comment_string): move function to octave-qscintilla.cc;
  (do_comment_selected_text): update the call to the function

* file-editor-tab.h: remove declaration of comment_string

* octave-qscintilla.cc (comment_string): this funtion moved here from
  file_editor_tab.cc, the current lexer is detected and not given by the
  caller via the name of the lexer

* octave-qscintilla.h: new function comment_string

diff --git a/libgui/src/m-editor/file-editor-tab.cc b/libgui/src/m-editor/file-editor-tab.cc
--- a/libgui/src/m-editor/file-editor-tab.cc
+++ b/libgui/src/m-editor/file-editor-tab.cc
@@ -792,40 +792,16 @@ file_editor_tab::add_octave_apis (octave
 }
 
 void
 file_editor_tab::save_apis_info ()
 {
   _lexer_apis->savePrepared (_prep_apis_file);
 }
 
-QString
-file_editor_tab::comment_string (const QString& lexer)
-{
-  if (lexer == "octave" || lexer == "matlab")
-    {
-      QSettings *settings = resource_manager::get_settings ();
-      int comment_index = settings->value ("editor/octave_comment_string", 0).toInt ();
-      if (comment_index == 1)
-      	return QString ("#");
-      else if (comment_index == 2)
-        return QString ("%");
-      else
-        return QString ("##");  // default and for index 0
-    }
-  else if (lexer == "perl" || lexer == "bash" || lexer == "diff")
-    return QString ("#");
-  else if (lexer == "cpp")
-    return ("//");
-  else if (lexer == "batch")
-    return ("REM ");
-  else
-    return ("%");  // should never happen
-}
-
 // slot for fetab_set_focus: sets the focus to the current edit area
 void
 file_editor_tab::set_focus (const QWidget *ID)
 {
   if (ID != this)
     return;
   _edit_area->setFocus ();
 }
@@ -1400,17 +1376,17 @@ file_editor_tab::do_indent_selected_text
     }
 
   _edit_area->endUndoAction ();
 }
 
 void
 file_editor_tab::do_comment_selected_text (bool comment)
 {
-  QString comment_str = comment_string (_edit_area->lexer ()->lexer ());
+  QString comment_str = _edit_area->comment_string ();
   _edit_area->beginUndoAction ();
 
   if (_edit_area->hasSelectedText ())
     {
       int lineFrom, lineTo, colFrom, colTo;
       _edit_area->getSelection (&lineFrom, &colFrom, &lineTo, &colTo);
 
       if (colTo == 0)  // the beginning of last line is not selected
diff --git a/libgui/src/m-editor/file-editor-tab.h b/libgui/src/m-editor/file-editor-tab.h
--- a/libgui/src/m-editor/file-editor-tab.h
+++ b/libgui/src/m-editor/file-editor-tab.h
@@ -243,17 +243,16 @@ private:
 
   bool unchanged_or_saved (void);
 
   void update_lexer ();
 
   void show_dialog (QDialog *dlg, bool modal);
   int check_file_modified ();
   void do_comment_selected_text (bool comment);
-  QString comment_string (const QString&);
   void do_indent_selected_text (bool indent);
 
   void add_breakpoint_callback (const bp_info& info);
   void remove_breakpoint_callback (const bp_info& info);
   void remove_all_breakpoints_callback (const bp_info& info);
   void check_restore_breakpoints (void);
   void center_current_line (bool always=true);
 
diff --git a/libgui/src/m-editor/octave-qscintilla.cc b/libgui/src/m-editor/octave-qscintilla.cc
--- a/libgui/src/m-editor/octave-qscintilla.cc
+++ b/libgui/src/m-editor/octave-qscintilla.cc
@@ -23,24 +23,31 @@ along with Octave; see the file COPYING.
 // Author: Torsten <ttl@justmail.de>
 
 #if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #if defined (HAVE_QSCINTILLA)
 
+#if defined (HAVE_QSCI_QSCILEXEROCTAVE_H)
+#  define HAVE_LEXER_OCTAVE 1
+#elif defined (HAVE_QSCI_QSCILEXERMATLAB_H)
+#  define HAVE_LEXER_MATLAB 1
+#endif
+
 #include <Qsci/qscilexer.h>
 #include <Qsci/qscicommandset.h>
 #include <QShortcut>
 #include <QMessageBox>
 
 #include "octave-qscintilla.h"
 #include "file-editor-tab.h"
 #include "shortcut-manager.h"
+#include "resource-manager.h"
 
 octave_qscintilla::octave_qscintilla (QWidget *p)
   : QsciScintilla (p)
 {
   connect (this, SIGNAL (textChanged ()), this, SLOT (text_changed ()));
 
   // clear scintilla edit shortcuts that are handled by the editor
   QsciCommandSet *cmd_set = standardCommands ();
@@ -337,16 +344,57 @@ octave_qscintilla::text_changed ()
 // when edit area gets focus update information on undo/redo actions
 void octave_qscintilla::focusInEvent (QFocusEvent *focusEvent)
 {
   emit status_update (isUndoAvailable (), isRedoAvailable ());
 
   QsciScintilla::focusInEvent (focusEvent);
 }
 
+// Function returning the comment string of the current lexer
+QString
+octave_qscintilla::comment_string ()
+{
+  int lexer = SendScintilla (SCI_GETLEXER);
+
+  switch (lexer)
+    {
+#if defined (HAVE_LEXER_MATLAB)
+      case SCLEX_MATLAB:
+#if defined (HAVE_LEXER_OCTAVE)
+      case SCLEX_OCTAVE:
+#endif
+       {
+          QSettings *settings = resource_manager::get_settings ();
+          int comment_index
+                = settings->value ("editor/octave_comment_string", 0).toInt ();
+          if (comment_index == 1)
+            return QString ("#");
+          else if (comment_index == 2)
+            return QString ("%");
+          else
+            return QString ("##");  // default and for index 0
+        }
+#endif
+
+      case SCLEX_PERL:
+      case SCLEX_BASH:
+      case SCLEX_DIFF:
+        return QString ("#");
+
+      case SCLEX_CPP:
+        return QString ("//");
+
+      case SCLEX_BATCH:
+        return QString ("REM ");
+    }
+
+    return QString ("%");  // should never happen
+}
+
 // helper function for clearing all indicators of a specific style
 void
 octave_qscintilla::clear_indicator (int indicator_style)
 {
   int end_pos = text ().length ();
   int end_line, end_col;
   lineIndexFromPosition (end_pos, &end_line, &end_col);
   clearIndicatorRange (0, 0, end_line, end_col, indicator_style);
diff --git a/libgui/src/m-editor/octave-qscintilla.h b/libgui/src/m-editor/octave-qscintilla.h
--- a/libgui/src/m-editor/octave-qscintilla.h
+++ b/libgui/src/m-editor/octave-qscintilla.h
@@ -42,16 +42,17 @@ public:
 
   void context_help_doc (bool);
   void context_edit ();
   void context_run ();
   void get_global_textcursor_pos (QPoint *global_pos, QPoint *local_pos);
   bool get_actual_word ();
   void clear_indicator (int indicator_style);
   void get_current_position (int *pos, int *line, int *col);
+  QString comment_string ();
 
 signals:
 
   void execute_command_in_terminal_signal (const QString&);
   void create_context_menu_signal (QMenu*);
   void context_menu_edit_signal (const QString&);
   void qsci_has_focus_signal (bool);
   void status_update (bool,bool);
