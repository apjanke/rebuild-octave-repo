# HG changeset patch
# User jwe
# Date 1074827753 0
#      Fri Jan 23 03:15:53 2004 +0000
# Node ID 7fa16e369904bec7d2bfc2ae7b1df4fb9d15a277
# Parent  fe25e290fafb93d788fb33e7728dd8d69fe01f6f
[project @ 2004-01-23 03:15:53 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,10 +1,15 @@
 2004-01-22  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* plot/__errcomm__.m: Cope with nargin now being a function.
+	* plot/__errplot__.m: Likewise.
+	* plot/__plt__.m: Likewise.
+	* plot/plot_border.m: Likewise.
+
 	* Makefile.in (distclean, maintainer-clean): Remove DOCSTRINGS,
 	not $(DOCSTRINGS).
 
 2004-01-21  Quentin Spencer  <qspencer@ieee.org>
 
 	* linear-algebra/rank.m: Allow rank ([]) to return 0, same as
 	rank ([], tol).
 
diff --git a/scripts/plot/__errcomm__.m b/scripts/plot/__errcomm__.m
--- a/scripts/plot/__errcomm__.m
+++ b/scripts/plot/__errcomm__.m
@@ -26,43 +26,44 @@
 ## @seealso{errorbar, semilogxerr, semilogyerr, loglogerr, __pltopt__}
 
 ## Created: 20.02.2001
 ## Author: Teemu Ikonen <tpikonen@pcu.helsinki.fi>
 ## Keywords: errorbar, plotting
 
 function __errcomm__ (caller, varargin)
 
-  if (nargin < 3)
+  nargs = nargin ();
+
+  if (nargs < 3)
     usage ("%s (...)", caller);
   endif
 
-  nargin--;
+  nargs--;
   save_hold = ishold;
   unwind_protect
     if (! ishold)
       clg
     endif
     hold on;
     k = 1;
-    while (nargin)
+    while (nargs)
       a = varargin{k++};
-      nargin--;
+      nargs--;
       if (isvector (a))
         a = a(:);
       elseif (ismatrix (a))
         ;
       else
         usage ("%s (...)", caller);
       endif
       sz = size (a);
       ndata = 1;
       arg1 = a;
-      while (nargin)
-	nargin--;
+      while (nargs--)
 	a = varargin{k++};
 	if (isstr (a))
 	  fmt = a;
 	  cmd = "__errplot__ (arg1";
 	  for i = 2:ndata,
 	    cmd = sprintf ("%s, arg%d", cmd, i);
 	  endfor
 	  eval (sprintf ("%s, fmt);", cmd));
diff --git a/scripts/plot/__errplot__.m b/scripts/plot/__errplot__.m
--- a/scripts/plot/__errplot__.m
+++ b/scripts/plot/__errplot__.m
@@ -30,25 +30,27 @@
 ## bar, stairs, errorbar, gplot, gsplot, replot, xlabel, ylabel, and title}
 
 ## Created: 18.7.2000
 ## Author: Teemu Ikonen <tpikonen@pcu.helsinki.fi>
 ## Keywords: errorbar, plotting
 
 function __errplot__ (varargin)
 
-  if (nargin < 3) # atleast two data arguments needed
+  nargs = nargin ();
+
+  if (nargs < 3) # atleast two data arguments needed
     usage ("__errplot__ (arg1, ..., fmt)");
   endif
 
   fstr = " ";
   ndata = 0;
   k = 1;
 
-  while (nargin--)
+  while (nargs--)
     a = varargin{k++};
     if (! isstr (a))
       ndata++;
       eval (sprintf ("arg%d = a;", ndata));
     else
       fstr = a;
     endif
   endwhile
diff --git a/scripts/plot/__plt__.m b/scripts/plot/__plt__.m
--- a/scripts/plot/__plt__.m
+++ b/scripts/plot/__plt__.m
@@ -20,36 +20,38 @@
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} __plt__ (@code{caller}, @dots{})
 ## @end deftypefn
 
 ## Author: jwe
 
 function __plt__ (caller, varargin)
 
-  if (nargin == 2)
+  nargs = nargin ();
+
+  if (nargs == 2)
 
     __plt1__ (varargin{1}, "");
 
-  elseif (nargin > 2)
+  elseif (nargs > 2)
 
     first_plot = 1;
     hold_state = ishold ();
 
     unwind_protect
 
       k = 1;
       x = varargin{k++};
-      nargin = nargin - 2;
+      nargs -= 2;
       x_set = 1;
       y_set = 0;
 
       ## Gather arguments, decode format, and plot lines.
 
-      while (nargin-- > 0)
+      while (nargs-- > 0)
 
         fmt = "";
         new = varargin{k++};
 
         if (isstr (new))
           if (! x_set)
             error ("plot: no data to plot");
           endif
diff --git a/scripts/plot/plot_border.m b/scripts/plot/plot_border.m
--- a/scripts/plot/plot_border.m
+++ b/scripts/plot/plot_border.m
@@ -57,17 +57,19 @@ function plot_border (varargin)
   west = 0;
   north = 0;
   east = 0;
   all = 0;
   none = 1;
 
   k = 1;
 
-  while (nargin--)
+  nargs = nargin ();
+
+  while (nargs--)
 
     arg = varargin{k++};
 
     if (! isstr (arg))
       error ("plot_border: input not a string");
     endif
 
     ## The effect of the arguments in cumulative.  If something is found
