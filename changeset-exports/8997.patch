# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1237449296 -3600
#      Thu Mar 19 08:54:56 2009 +0100
# Node ID 187a9d9c2f04f6b8ec2cc9b9372e52cb55471704
# Parent  af43309a59f40209aaa58c1e5a6901acc4b3845d
simplifications to fsolve

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2009-03-19  Jaroslav Hajek <highegg@gmail.com>
+
+	* optimization/fsolve.m (guarded_eval): Simplify & fix missing
+	semicolon.
+
 2009-03-17  Jaroslav Hajek  <highegg@gmail.com>
 
 	* optimization/__fdjac__.m: Pass in fvec to save one evaluation.
 	* optimization/fsolve.m: Avoid redundant reevaluation when using
 	FD jacobians. Document how it can be done with user jacobians.  Make
 	first iteration special and call outputfcn after it. Skip updates
 	unless two successful iterations have occured.
 	* optimization/__dogleg__.m: Add missing alpha in the zero-gradient
diff --git a/scripts/optimization/fsolve.m b/scripts/optimization/fsolve.m
--- a/scripts/optimization/fsolve.m
+++ b/scripts/optimization/fsolve.m
@@ -401,22 +401,22 @@ endfunction
 
 ## An assistant function that evaluates a function handle and checks for
 ## bad results.
 function [fx, jx] = guarded_eval (fun, x, complexeqn)
   if (nargout > 1)
     [fx, jx] = fun (x);
   else
     fx = fun (x);
-    jx = []
+    jx = [];
   endif
 
-  if (! complexeqn && ! (all (isreal (fx(:))) && all (isreal (jx(:)))))
+  if (! complexeqn && ! (isreal (fx) && isreal (jx)))
     error ("fsolve:notreal", "fsolve: non-real value encountered"); 
-  elseif (complexeqn && ! (all (isnumeric (fx(:))) && all (isnumeric(jx(:)))))
+  elseif (complexeqn && ! (isnumeric (fx) && isnumeric(jx)))
     error ("fsolve:notnum", "fsolve: non-numeric value encountered");
   elseif (any (isnan (fx(:))))
     error ("fsolve:isnan", "fsolve: NaN value encountered"); 
   endif
 endfunction
 
 %!function retval = f (p) 
 %!  x = p(1);
