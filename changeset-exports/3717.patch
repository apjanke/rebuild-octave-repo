# HG changeset patch
# User jwe
# Date 968394465 0
#      Fri Sep 08 06:27:45 2000 +0000
# Node ID e3501697c9954c51f5a5e55c4eb43c476f119bd8
# Parent  08fe5f74c7d42435d0207fb57c3772d8df782abe
[project @ 2000-09-08 06:27:44 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,16 @@
+2000-09-08  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+2000-09-08  Teemu Ikonen  <tpikonen@pcu.helsinki.fi>
+
+	* plot/mesh.m: Also set nologscale before plotting.
+	* plot/__pltopt1__.m: Handle xerrorbars, yerrorbars, and
+	xyerrorbars instead of just errorbars.
+
 2000-08-25  Thomas Walter  <walter@pctc.chemie.uni-erlangen.de>
 
 	* image/image.m: Try display (from ImageMagick) first.
 
 2000-08-01  Rolf Fabian  <fabian@tu-cottbus.de>
 
 	* plot/meshgrid.m: Use transpose to reorient vectors, not complex
 	conjugate transpose.
diff --git a/scripts/plot/__pltopt1__.m b/scripts/plot/__pltopt1__.m
--- a/scripts/plot/__pltopt1__.m
+++ b/scripts/plot/__pltopt1__.m
@@ -32,32 +32,35 @@ function fmt = __pltopt1__ (caller, opt)
   set_color = 0;
   set_symbol = 0;
   set_lines = 0;
   set_dots = 0;
   set_points = 0;
   set_impulses = 0;
   set_steps = 0;
   set_boxes = 0;
-  set_errbars = 0;
+  set_yerrbars = 0;
+  set_xerrbars = 0;
   set_key = 0;
   set_linestyle = "solid";
 
   more_opts = 1;
 
   WITH = "w";
   LINES = "l";
   LINESPOINTS = "linesp";
   BOXERRORBARS = "boxer";
   BOXES = "boxes";
   POINTS = "p";
   DOTS = "d";
   IMPULSES = "i";
   STEPS = "s";
-  ERRORBARS = "e";
+  YERRORBARS = "yerr";
+  XERRORBARS = "xerr";
+  XYERRORBARS = "xyerr";
   TITLE = "title";
 
   if (nargin != 2)
     usage ("__pltopt1__ (opt)");
   endif
 
   if (! isstr (opt))
     error ("__pltopt1__: argument must be a string");
@@ -95,17 +98,19 @@ function fmt = __pltopt1__ (caller, opt)
       set_linestyle = "dot";
     elseif (strcmp (char, "@"))
       set_points = 1;
     elseif (strcmp (char, "^"))
       set_impulses = 1;
     elseif (strcmp (char, "L"))
       set_steps = 1;
     elseif (strcmp (char, "~"))
-      set_errbars = 1;
+      set_yerrbars = 1;
+    elseif (strcmp (char, ">"))
+      set_xerrbars = 1;  
     elseif (strcmp (char, "#"))
       set_boxes = 1;
     elseif (strcmp (char, "0") || strcmp (char, "1") ...
             || strcmp (char, "2") || strcmp (char, "3") ...
             || strcmp (char, "4") || strcmp (char, "5") ...
             || strcmp (char, "6") || strcmp (char, "7") ...
             || strcmp (char, "8") || strcmp (char, "9"))
       if (set_color)
@@ -189,31 +194,37 @@ function fmt = __pltopt1__ (caller, opt)
 
   if (set_lines)
     if (set_points)
       fmt = strcat (fmt, " ", LINESPOINTS);
     else
       fmt = strcat (fmt, " ", LINES);
     endif
   elseif (set_boxes)
-    if (set_errbars)
+    if (set_yerrbars)
       fmt = strcat (fmt, " ", BOXERRORBARS);
     else
       fmt = strcat (fmt, " ", BOXES);
     endif
   elseif (set_points)
     fmt = strcat (fmt, " ", POINTS);
   elseif (set_dots)
     fmt = strcat (fmt, " ", DOTS);
   elseif (set_impulses)
     fmt = strcat (fmt, " ", IMPULSES);
   elseif (set_steps)
     fmt = strcat (fmt, " ", STEPS);
-  elseif (set_errbars)
-    fmt = strcat (fmt, " ", ERRORBARS);
+  elseif (set_yerrbars)
+    if(set_xerrbars)
+        fmt = strcat (fmt, " ", XYERRORBARS);
+    else
+        fmt = strcat (fmt, " ", YERRORBARS);
+    endif
+  elseif (set_xerrbars)
+    fmt = strcat (fmt, " ", XERRORBARS);
   endif
 
   if (strcmp (fmt, WITH))
     fmt = strcat (fmt, " ", LINES);
   endif
 
   if (set_color)
     fmt = strcat (fmt, " ", color);
diff --git a/scripts/plot/__pltopt__.m b/scripts/plot/__pltopt__.m
--- a/scripts/plot/__pltopt__.m
+++ b/scripts/plot/__pltopt__.m
@@ -25,47 +25,69 @@
 ## @code{"w l 2"} ("with lines 2").  Uses abbreviations for the options
 ## to avoid overrunning gnuplot's command line buffer unnecessarily.
 ##
 ## @var{opt} can currently be some combination of the following:
 ##
 ## @table @code
 ## @item "-"
 ## For lines plot style (default).
+##
 ## @item "."
 ## For dots plot style.
+##
 ## @item "@"
 ## For points plot style.
+##
 ## @item "-@"
-##For linespoints plot style.
+## For linespoints plot style.
+##
 ## @item "^"
 ## For impulses plot style.
+##
 ## @item "L"
 ## For steps plot style.
+##
 ## @item "#"
 ## For boxes plot style.
+##
 ## @item "~"
-## For errorbars plot style.
+## For yerrorbars plot style.
+##
+## @item ">"
+## For xerrorbars plot style.
+##
+## @item "~>"
+## For xyerrorbars plot style.
+##
 ## @item "#~"
 ## For boxerrorbars plot style.
+##
 ## @item "n"
 ## With @code{n} in 1-6 (wraps at 8), plot color
+##
 ## @item "nm"
 ## With @code{m} in 1-6 (wraps at 6), point style (only valid for @code{"@"} or
 ## @code{"-@"})
+##
 ## @item @var{c}
 ## Where @var{c} is one of @code{"r"}, @code{"g"}, @code{"b"}, @code{"m"},
 ## @code{"c"}, or @code{"w"} colors.
+##
 ## @item ";title;"
 ## Here @code{"title"} is the label for the key.
+##
+## @item +
+## @itemx *
+## @itemx o
+## @itemx x
+## Used in combination with the points or linespoints styles, set the point
+## style.
 ## @end table
 ##
-## Special points formats:  @code{"+"}, @code{"*"}, @code{"o"}, or
-## @code{"x"} will display points in that style for term x11.
-##
 ## The legend may be fixed to include the name of the variable
 ## plotted in some future version of Octave.
 ##
 ## The colors, line styles, and point styles have the following
 ## meanings for X11 and Postscript terminals under Gnuplot 3.6.
 ##
 ## @example
 ## Number ------ Color -------  Line Style      ---- Points Style ----
diff --git a/scripts/plot/mesh.m b/scripts/plot/mesh.m
--- a/scripts/plot/mesh.m
+++ b/scripts/plot/mesh.m
@@ -40,16 +40,17 @@ function mesh (x, y, z)
   if (nargin == 1)
     z = x;
     if (is_matrix (z))
       gset hidden3d;
       gset data style lines;
       gset surface;
       gset nocontour;
       gset noparametric;
+      gset nologscale;
       gset view 60, 30, 1, 1
       gsplot (z');
     else
       error ("mesh: argument must be a matrix");
     endif
   elseif (nargin == 3)
     if (is_vector (x) && is_vector (y) && is_matrix (z))
       xlen = length (x);
@@ -66,16 +67,17 @@ function mesh (x, y, z)
           zz(:,i+1) = y;
           zz(:,i+2) = z(:,k);
           k++;
         endfor
         gset hidden3d;
         gset data style lines;
         gset surface;
         gset nocontour;
+        gset nologscale;
         gset parametric;
         gset view 60, 30, 1, 1
         gsplot (zz);
         gset noparametric;
       else
         msg = "mesh: rows (z) must be the same as length (y) and";
         msg = sprintf ("%s\ncolumns (z) must be the same as length (x)", msg);
         error (msg);
@@ -93,16 +95,17 @@ function mesh (x, y, z)
           zz(:,i+1) = y(:,k);
           zz(:,i+2) = z(:,k);
           k++;
         endfor
         gset hidden3d;
         gset data style lines;
         gset surface;
         gset nocontour;
+        gset nologscale;
         gset parametric;
         gset view 60, 30, 1, 1
         gsplot (zz);
         gset noparametric;
       else
         error ("mesh: x, y, and z must have same dimensions");
       endif
     else
diff --git a/scripts/plot/plot.m b/scripts/plot/plot.m
--- a/scripts/plot/plot.m
+++ b/scripts/plot/plot.m
@@ -89,39 +89,48 @@
 ## Set linespoints plot style.
 ##
 ## @item ^
 ## Set impulses plot style.
 ##
 ## @item L
 ## Set steps plot style.
 ##
-## @item #
-## Set boxes plot style.
+## @item "#"
+## For boxes plot style.
+##
+## @item "~"
+## For yerrorbars plot style.
 ##
-## @item ~
-## Set errorbars plot style.
+## @item ">"
+## For xerrorbars plot style.
 ##
-## @item #~
-## Set boxerrorbars plot style.
+## @item "~>"
+## For xyerrorbars plot style.
+##
+## @item "#~"
+## For boxerrorbars plot style.
 ##
 ## @item @var{n}
 ## Interpreted as the plot color if @var{n} is an integer in the range 1 to
 ## 6.
 ##
 ## @item @var{nm}
 ## If @var{nm} is a two digit integer and @var{m} is an integer in the
 ## range 1 to 6, @var{m} is interpreted as the point style.  This is only
 ## valid in combination with the @code{@@} or @code{-@@} specifiers.
 ##
 ## @item @var{c}
 ## If @var{c} is one of @code{"r"}, @code{"g"}, @code{"b"}, @code{"m"},
 ## @code{"c"}, or @code{"w"}, it is interpreted as the plot color (red,
 ## green, blue, magenta, cyan, or white).
 ##
+## @item ";title;"
+## Here @code{"title"} is the label for the key.
+##
 ## @item +
 ## @itemx *
 ## @itemx o
 ## @itemx x
 ## Used in combination with the points or linespoints styles, set the point
 ## style.
 ## @end table
 ##
@@ -165,17 +174,17 @@
 ## t = 0:0.1:6.3;
 ## plot (t, cos(t), "-;cos(t);", t, sin(t), "+3;sin(t);");
 ## @end example
 ##
 ## This will plot the cosine and sine functions and label them accordingly
 ## in the key.
 ## @end deftypefn
 ## @seealso{semilogx, semilogy, loglog, polar, mesh, contour, __pltopt__
-## bar, stairs, gplot, gsplot, replot, xlabel, ylabel, and title}
+## bar, stairs, errorbar, gplot, gsplot, replot, xlabel, ylabel, and title}
 
 ## Author: jwe
 
 function plot (...)
 
   ## XXX FIXME XXX -- these plot states should really just be set
   ## temporarily, probably inside an unwind_protect block, but there is
   ## no way to determine their current values.
