# HG changeset patch
# User David Bateman <dbateman@free.fr>
# Date 1210693535 -7200
#      Tue May 13 17:45:35 2008 +0200
# Node ID ce52af0e4a10028397e8c8931ae95fa6a2ef76cd
# Parent  f83be206eca1f27420746e1675deb3b1271e98df
all false logical indexing fix

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,14 @@
+2008-05-13  David Bateman  <dbateman@free.fr>
+
+	* idx-vector.cc (IDX_VEC_REP::idx_vector_rep (const boolNDArray&)):
+	If len is zero size the index vector in the same manner as if len
+	is not zero.
+
 2008-05-05  John W. Eaton  <jwe@octave.org>
 
 	* cmd-edit.cc (command_editor::re_read_init_file,
 	gnu_readline::do_re_read_init_file): New functions.
 	* cmd-edit.h (command_editor::re_read_init_file): Provide decl.
 	(command_editor::do_re_read_init_file): New function.
 	* oct-rl-edit.c (octave_rl_re_read_init_file): New function.
 	* oct-rl-edit.h: Provide decl.
diff --git a/liboctave/idx-vector.cc b/liboctave/idx-vector.cc
--- a/liboctave/idx-vector.cc
+++ b/liboctave/idx-vector.cc
@@ -265,36 +265,33 @@ IDX_VEC_REP::idx_vector_rep (bool b)
 
 IDX_VEC_REP::idx_vector_rep (const boolNDArray& bnda)
   : data (0), len (bnda.nnz ()), num_zeros (0), num_ones (0),
     range_base (0), range_step (0), max_val (0), min_val (0),
     count (1), frozen_at_z_len (0), frozen_len (0), colon (0),
     range(0), initialized (0), frozen (0),
     colon_equiv_checked (0), colon_equiv (0), orig_dims ()
 {
+  dim_vector dv = bnda.dims ();
+
+  orig_dims = ((dv.length () == 2 && dv(0) == 1)
+	       ? dim_vector (1, len) : orig_dims = dim_vector (len, 1));
+
   if (len == 0)
-    {
-      orig_dims = dim_vector (0, 0);
-      initialized = 1;
-    }
+    initialized = 1;
   else
     {
       data = new octave_idx_type [len];
 
       octave_idx_type ntot = bnda.length ();
 
       for (octave_idx_type i = 0, k = 0; i < ntot && k < len; i++)
 	if (bnda.elem (i))
 	  data[k++] = i;
 
-      dim_vector dv = bnda.dims ();
-
-      orig_dims = ((dv.length () == 2 && dv(0) == 1)
-		   ? dim_vector (1, len) : orig_dims = dim_vector (len, 1));
-
       init_state ();
     }
 }
 
 IDX_VEC_REP&
 IDX_VEC_REP::operator = (const IDX_VEC_REP& a)
 {
   if (this != &a)
