# HG changeset patch
# User jwe
# Date 745103159 0
#      Wed Aug 11 21:05:59 1993 +0000
# Node ID 9eda1009cf95a4d85efaf410cf9d59790714e27d
# Parent  7806354a10d35116a56038e030b9c981b6ef239b
[project @ 1993-08-11 21:05:59 by jwe]

diff --git a/src/expm.cc b/src/expm.cc
--- a/src/expm.cc
+++ b/src/expm.cc
@@ -55,17 +55,17 @@ extern "C"
   double F77_FCN (zlange) (const char*, const int*, const int*,
 			   const Complex*, const int*, double*);
 }
 
 // XXX FIXME XXX
 extern int empty_arg (tree_constant&);
 
 tree_constant
-matrix_exp (const tree_constant& a)
+matrix_exp (tree_constant& a)
 {
   tree_constant retval;
   tree_constant tmp = a.make_numeric ();
 
 // Constants for matrix exponential calculation.
 
   static double padec[] =
     {
@@ -127,22 +127,22 @@ matrix_exp (const tree_constant& a)
 
 // Preconditioning step 3: scaling.
 
 	    ColumnVector work (n_cols);
 	    inf_norm = F77_FCN (zlange) ("I", &n_cols, &n_cols, m.
 					 fortran_vec (), &n_cols,
 					 work.fortran_vec ());
 
-	    sqpow = 1.0 + log (inf_norm) / log (2.0);
+	    sqpow = (int) (1.0 + log (inf_norm) / log (2.0));
 
 // Check whether we need to square at all.
 
-	    if (sqpow <= 0.0)
-	      sqpow = 0.0;
+	    if (sqpow < 0)
+	      sqpow = 0;
 	    else
 	      {
 		for (inf_norm = 1.0, i = 0; i < sqpow; i++)
 		  inf_norm *= 2.0;
 
 		m = m / inf_norm;
 	      }
 
@@ -230,22 +230,22 @@ matrix_exp (const tree_constant& a)
 
 // Preconditioning step 3: scaling.
 
 	    ColumnVector work(n_cols);
 	    inf_norm = F77_FCN (dlange) ("I", &n_cols, &n_cols,
 					 m.fortran_vec (), &n_cols,
 					 work.fortran_vec ());
 
-	    sqpow = 1.0 + log (inf_norm) / log (2.0);
+	    sqpow = (int) (1.0 + log (inf_norm) / log (2.0));
 
 // Check whether we need to square at all.
 
-	    if (sqpow <= 0.0)
-	      sqpow = 0.0;
+	    if (sqpow < 0)
+	      sqpow = 0;
 	    else
 	      {
 		for (inf_norm = 1.0, i = 0; i < sqpow; i++)
 		  inf_norm *= 2.0;
 
 		m = m / inf_norm;
 	      }
 
