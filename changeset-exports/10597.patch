# HG changeset patch
# User Ben Abbott <bpabbott@mac.com>
# Date 1272729632 14400
#      Sat May 01 12:00:32 2010 -0400
# Node ID ba346313bdc1143a1ee20aa515a761f06bb048c3
# Parent  24e915c602e7e67e8e8a58751effd7a7ba42c0f1
__go_draw_axes__.m: Remove gnuplot errorbar code.

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2010-05-01  Ben Abbott <bpabbott@mac.com>
+
+	* plot/__go_draw_axes__.m: Remove gnuplot errorbar code.
+
 2010-04-30  Ben Abbott <bpabbott@mac.com>
 
 	* plot/loglogerr.m, plot/semilogxerr.m, plot/semilogyerr.m:
 	Add demos.
 	* plot/private/__errplot__.m: Fix bug parsing errorbar style.
 	* plot/private/__errplot__.m: Implement errorbars in the Matlab style.
 
 2010-04-29  Ben Abbott <bpabbott@mac.com>
diff --git a/scripts/plot/__go_draw_axes__.m b/scripts/plot/__go_draw_axes__.m
--- a/scripts/plot/__go_draw_axes__.m
+++ b/scripts/plot/__go_draw_axes__.m
@@ -441,84 +441,19 @@ function __go_draw_axes__ (h, plot_strea
               zdat = zeros (size (xdat));
             endif
             data{data_idx} = [xdat, ydat, zdat]';
             usingclause{data_idx} = sprintf ("record=%d using ($1):($2):($3)", numel (xdat));
             ## fputs (plot_stream, "set parametric;\n");
           else
             xdat = obj.xdata(:);
             ydat = obj.ydata(:);
-            ldat = obj.ldata;
-            yerr = xerr = false;
-            if (! isempty (ldat))
-              yerr = true;
-              ldat = ldat(:);
-            endif
-            udat = obj.udata;
-            if (! isempty (udat))
-              udat = udat(:);
-            endif
-            xldat = obj.xldata;
-            if (! isempty (xldat))
-              xerr = true;
-              xldat = xldat(:);
-            endif
-            xudat = obj.xudata;
-            if (! isempty (xudat))
-              xudat = xudat(:);
-            endif
-            if (yerr)
-              if (isempty (ldat))
-                ylo = ydat;
-              else
-                ylo = ydat-ldat;
-              endif
-              if (isempty (udat))
-                yhi = ydat;
-              else
-                yhi = ydat+udat;
-              endif
-              if (xerr)
-                if (isempty (xldat))
-                  xlo = xdat;
-                else
-                  xlo = xdat-xldat;
-                endif
-                if (isempty (xudat))
-                  xhi = xdat;
-                else
-                  xhi = xdat+xudat;
-                endif
-                data{data_idx} = [xdat, ydat, xlo, xhi, ylo, yhi]';
-                usingclause{data_idx} = sprintf ("record=%d using ($1):($2):($3):($4):($5):($6)", numel (xdat));
-                errbars = "xyerrorbars";
-              else
-                data{data_idx} = [xdat, ydat, ylo, yhi]';
-                usingclause{data_idx} = sprintf ("record=%d using ($1):($2):($3):($4)", numel (xdat));
-                errbars = "yerrorbars";
-              endif
-            elseif (xerr)
-              if (isempty (xldat))
-                xlo = xdat;
-              else
-                xlo = xdat-xldat;
-              endif
-              if (isempty (xudat))
-                xhi = xdat;
-              else
-                xhi = xdat+xudat;
-              endif
-              data{data_idx} = [xdat, ydat, xlo, xhi]';
-              usingclause{data_idx} = sprintf ("record=%d using ($1):($2):($3):($4)", numel (xdat));
-              errbars = "xerrorbars";
-            else
-              data{data_idx} = [xdat, ydat]';
-              usingclause{data_idx} = sprintf ("record=%d using ($1):($2) axes %s%s",
-                                              rows(xdat), xaxisloc_using, yaxisloc_using);
-            endif
+            data{data_idx} = [xdat, ydat]';
+            usingclause{data_idx} = sprintf ("record=%d using ($1):($2) axes %s%s",
+                                            rows(xdat), xaxisloc_using, yaxisloc_using);
           endif
 
           style = do_linestyle_command (obj, obj.color, data_idx, mono, 
                                         plot_stream, errbars);
 
           withclause{data_idx} = sprintf ("with %s linestyle %d",
                                           style{1}, data_idx);
 
