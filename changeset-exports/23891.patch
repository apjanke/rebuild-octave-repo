# HG changeset patch
# User Rik <rik@octave.org>
# Date 1502476780 25200
#      Fri Aug 11 11:39:40 2017 -0700
# Node ID 142a9c7e403abeac7dca1b488f1c3b1072d1f355
# Parent  89a1ed157a2a41128384d7beb79852ac77970549
Avoid CamelCase in variables names in mxGetProperty cset (bd9e719f04cc).

* mex.cc, mexproto.h: Use property_name for argument name in mxGetProperty
prototype.

* mxarray.in.h (get_property): Add space between declaration of "const char *"
and /*name*/ to stop syntax highlighter freaking out.

diff --git a/libinterp/corefcn/mex.cc b/libinterp/corefcn/mex.cc
--- a/libinterp/corefcn/mex.cc
+++ b/libinterp/corefcn/mex.cc
@@ -2970,19 +2970,20 @@ mxGetClassName (const mxArray *ptr)
 }
 
 void
 mxSetClassName (mxArray *ptr, const char *name)
 {
   ptr->set_class_name (name);
 }
 
-mxArray *mxGetProperty (const mxArray *ptr, mwIndex idx, const char *propertyName)
+mxArray *
+mxGetProperty (const mxArray *ptr, mwIndex idx, const char *property_name)
 {
-  return ptr->get_property (idx, propertyName);
+  return ptr->get_property (idx, property_name);
 }
 
 // Cell support.
 mxArray *
 mxGetCell (const mxArray *ptr, mwIndex idx)
 {
   return ptr->get_cell (idx);
 }
diff --git a/libinterp/corefcn/mexproto.h b/libinterp/corefcn/mexproto.h
--- a/libinterp/corefcn/mexproto.h
+++ b/libinterp/corefcn/mexproto.h
@@ -238,18 +238,18 @@ extern OCTINTERP_API void mxSetPr (mxArr
 extern OCTINTERP_API void mxSetPi (mxArray *ptr, double *pi);
 extern OCTINTERP_API void mxSetData (mxArray *ptr, void *data);
 extern OCTINTERP_API void mxSetImagData (mxArray *ptr, void *pi);
 
 /* Classes.  */
 extern OCTINTERP_API mxClassID mxGetClassID (const mxArray *ptr);
 extern OCTINTERP_API const char * mxGetClassName (const mxArray *ptr);
 extern OCTINTERP_API void mxSetClassName (mxArray *ptr, const char *name);
-extern OCTINTERP_API mxArray * mxGetProperty(const mxArray *ptr, mwIndex idx,
-                                             const char *propertName);
+extern OCTINTERP_API mxArray * mxGetProperty (const mxArray *ptr, mwIndex idx,
+                                              const char *property_name);
 
 /* Cell support.  */
 extern OCTINTERP_API mxArray * mxGetCell (const mxArray *ptr, mwIndex idx);
 
 extern OCTINTERP_API void mxSetCell (mxArray *ptr, mwIndex idx, mxArray *val);
 
 /* Sparse support.  */
 extern OCTINTERP_API mwIndex * mxGetIr (const mxArray *ptr);
diff --git a/libinterp/corefcn/mxarray.in.h b/libinterp/corefcn/mxarray.in.h
--- a/libinterp/corefcn/mxarray.in.h
+++ b/libinterp/corefcn/mxarray.in.h
@@ -219,17 +219,17 @@ public:
   virtual bool is_scalar (void) const = 0;
 
   virtual mxClassID get_class_id (void) const = 0;
 
   virtual const char * get_class_name (void) const = 0;
 
   virtual void set_class_name (const char *name_arg) = 0;
 
-  virtual mxArray * get_property (mwIndex /*idx*/, const char */*name*/) const
+  virtual mxArray * get_property (mwIndex /*idx*/, const char * /*name*/) const
   {
     return nullptr;
   }
 
   // FIXME: Why not just have this '= 0' as the others?
   // Could then eliminate err_invalid_type function and #include "error.h".
   virtual mxArray * get_cell (mwIndex /*idx*/) const
   {
