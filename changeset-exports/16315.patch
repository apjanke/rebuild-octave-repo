# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1363335450 14400
#      Fri Mar 15 04:17:30 2013 -0400
# Node ID 62791b1f06cb31f985cc5e9443e2a2811d0e5290
# Parent  0723ea02dcdbffa958de813dec978f024340eea5
* ax_blas_f77_func.m4: Correct expression to generate 2^32.

diff --git a/m4/ax_blas_f77_func.m4 b/m4/ax_blas_f77_func.m4
--- a/m4/ax_blas_f77_func.m4
+++ b/m4/ax_blas_f77_func.m4
@@ -145,19 +145,19 @@ elif test x"$ax_blas_ok" = xyes; then
 # Check for correct integer size
 # FIXME: this may fail with things like -ftrapping-math.
         AC_MSG_CHECKING([whether the integer size is correct])
         AC_RUN_IFELSE(AC_LANG_PROGRAM(,[[
       integer n,nn(3)
       real s,a(1),b(1),sdot
       a(1) = 1.0
       b(1) = 1.0
-c Generate -2**33 + 1, if possible
+c Generate -2**32 + 1, if possible
       n = 2
-      n = -4 * (n ** 30)
+      n = -4 ** (n ** 30)
       n = n + 1
       if (n >= 0) goto 1
 c This means we're on 64-bit integers. Check whether the BLAS is, too.
       s = sdot(n,a,1,b,1)
       if (s .ne. 0.0) stop 1
     1 continue
 c We may be on 32-bit integers, and the BLAS on 64 bits. This is almost bound
 c to have already failed, but just in case, we'll check.
