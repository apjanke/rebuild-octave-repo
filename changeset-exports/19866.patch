# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1424976851 18000
#      Thu Feb 26 13:54:11 2015 -0500
# Node ID 726df008104d350202bdbd098e72a6a637b4af3a
# Parent  e9f89866074ca4c6737caea1972aa8cb18c7f5ab
maint: More cleanup of C++ code to follow Octave coding conventions.

* ListBoxControl.cc, graphics.cc, ls-mat5.cc: Break long lines before
comparison ops.

diff --git a/libgui/graphics/ListBoxControl.cc b/libgui/graphics/ListBoxControl.cc
--- a/libgui/graphics/ListBoxControl.cc
+++ b/libgui/graphics/ListBoxControl.cc
@@ -93,19 +93,18 @@ ListBoxControl::ListBoxControl (const gr
 
       for (octave_idx_type i = 0; i < n; i++)
         {
           int idx = xround (value(i));
 
           if (1 <= idx && idx <= lc)
             {
               list->item (idx-1)->setSelected (true);
-              if (i == 0
-                  && list->selectionMode () ==
-                        QAbstractItemView::SingleSelection)
+              if (i == 0 && (list->selectionMode ()
+                             == QAbstractItemView::SingleSelection))
                 break;
             }
         }
     }
 
   list->removeEventFilter (this);
   list->viewport ()->installEventFilter (this);
 
diff --git a/libinterp/corefcn/graphics.cc b/libinterp/corefcn/graphics.cc
--- a/libinterp/corefcn/graphics.cc
+++ b/libinterp/corefcn/graphics.cc
@@ -6140,18 +6140,18 @@ max_axes_scale (double& s, Matrix& limit
     s = xmax(s, (limits(1) - limits(0)) / (pbfactor * dafactor));
 }
 
 static std::set<double> updating_aspectratios;
 
 void
 axes::properties::update_aspectratios (void)
 {
-  if (updating_aspectratios.find (get___myhandle__ ().value ()) !=
-      updating_aspectratios.end ())
+  if (updating_aspectratios.find (get___myhandle__ ().value ())
+      != updating_aspectratios.end ())
     return;
 
   Matrix xlimits = get_xlim ().matrix_value ();
   Matrix ylimits = get_ylim ().matrix_value ();
   Matrix zlimits = get_zlim ().matrix_value ();
 
   double dx = (xlimits(1)-xlimits(0));
   double dy = (ylimits(1)-ylimits(0));
@@ -7167,18 +7167,18 @@ get_children_limits (double& min_val, do
 }
 
 static std::set<double> updating_axis_limits;
 
 void
 axes::update_axis_limits (const std::string& axis_type,
                           const graphics_handle& h)
 {
-  if (updating_axis_limits.find (get_handle ().value ()) !=
-      updating_axis_limits.end ())
+  if (updating_axis_limits.find (get_handle ().value ())
+      != updating_axis_limits.end ())
     return;
 
   Matrix kids = Matrix (1, 1, h.value ());
 
   double min_val = octave_Inf;
   double max_val = -octave_Inf;
   double min_pos = octave_Inf;
   double max_neg = -octave_Inf;
diff --git a/libinterp/corefcn/ls-mat5.cc b/libinterp/corefcn/ls-mat5.cc
--- a/libinterp/corefcn/ls-mat5.cc
+++ b/libinterp/corefcn/ls-mat5.cc
@@ -1274,18 +1274,18 @@ read_mat5_binary_element (std::istream& 
 
                 if (cls->reconstruct_exemplar ())
                   {
 
                     if (! cls->reconstruct_parents ())
                       warning ("load: unable to reconstruct object inheritance");
 
                     tc = cls;
-                    if (load_path::find_method (classname, "loadobj") !=
-                        std::string ())
+                    if (load_path::find_method (classname, "loadobj")
+                        != std::string ())
                       {
                         octave_value_list tmp = feval ("loadobj", tc, 1);
 
                         if (! error_state)
                           tc = tmp(0);
                         else
                           goto data_read_error;
                       }
