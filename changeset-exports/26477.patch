# HG changeset patch
# User Rik <rik@octave.org>
# Date 1546840760 28800
#      Sun Jan 06 21:59:20 2019 -0800
# Branch stable
# Node ID 310143b2c2c437f3397ddd68e75d116504fa68bb
# Parent  54ad1294ed704da37a0a4cb941891936da4a0567
Array-d.cc, Array-f.cc: Fix static analyzer detected issues (bug #55347).

* Array-d.cc, Array-f.cc (issorted): Replace final
"else if (mode == ASCENDING)" with just "else" in if/else if tree.

diff --git a/liboctave/array/Array-d.cc b/liboctave/array/Array-d.cc
--- a/liboctave/array/Array-d.cc
+++ b/liboctave/array/Array-d.cc
@@ -130,17 +130,17 @@ Array<double>::issorted (sortmode mode) 
           else
             {
               mode = UNSORTED;
               break;
             }
         }
 
     }
-  else if (mode == ASCENDING)
+  else  // mode == ASCENDING
     {
       // Sort out NaNs.
       while (n > 0 && octave::math::isnan (el[n-1]))
         n--;
 
       if (n > 0)
         {
           // Orient the test so that NaN will not pass through.
diff --git a/liboctave/array/Array-f.cc b/liboctave/array/Array-f.cc
--- a/liboctave/array/Array-f.cc
+++ b/liboctave/array/Array-f.cc
@@ -130,17 +130,17 @@ Array<float>::issorted (sortmode mode) c
           else
             {
               mode = UNSORTED;
               break;
             }
         }
 
     }
-  else if (mode == ASCENDING)
+  else  // mode == ASCENDING
     {
       // Sort out NaNs.
       while (n > 0 && octave::math::isnan (el[n-1]))
         n--;
 
       if (n > 0)
         {
           // Orient the test so that NaN will not pass through.
