# HG changeset patch
# User Mike Miller <mtmiller@octave.org>
# Date 1492743743 25200
#      Thu Apr 20 20:02:23 2017 -0700
# Node ID 75a4b9a34999cb2a69da3da37f29215a97b572c1
# Parent  0412433f016f7155076d15cf367530b52c13c7da
Ensure generated source files are deterministic and reproducible

* mk-builtins.pl: Sort the list of dispatch types for built-in functions to
ensure that the contents of libinterp/builtins.cc are reproducible.

* mk-errno-list: Sort the list of system error codes in the embedded perl and
python scripts to ensure that the contents of libinterp/corefcn/oct-errno.cc
are reproducible.  Update the python script to be Python 3 compatible.

diff --git a/build-aux/mk-builtins.pl b/build-aux/mk-builtins.pl
--- a/build-aux/mk-builtins.pl
+++ b/build-aux/mk-builtins.pl
@@ -269,17 +269,17 @@ static void
         }
 
         $type = "";
         $name = "";
         $alias = "";
       }
     }
 
-    foreach $fcn (keys %dispatch_map)
+    foreach $fcn (sort (keys (%dispatch_map)))
     {
       print "\n";
 
       @classes =  @{$dispatch_map{$fcn}};
 
       foreach $class (@classes)
       {
         print "  install_builtin_dispatch (\"$fcn\", \"$class\");\n";
diff --git a/libinterp/mk-errno-list b/libinterp/mk-errno-list
--- a/libinterp/mk-errno-list
+++ b/libinterp/mk-errno-list
@@ -20,33 +20,33 @@
 
 if [ $# -ne 2 ]; then
   echo "usage: get-errno-list [--perl PERL|--python PYTHON]" 1>&2
   exit 1
 fi
 
 if [ $1 = "--perl" ]; then
   PERL="$2"
-  $PERL -e 'foreach $key (keys(%!)) {
+  $PERL -e 'foreach $key (sort (keys (%!))) {
     $x .= "#if defined ($key)\n    { \"$key\", $key, },\n#endif\n";
   }
   while (<>) {
     s/^ *\@SYSDEP_ERRNO_LIST\@/$ x/;
     print;
   }'
 
 elif [ $1 = "--python" ]; then
   PYTHON="$2"
   $PYTHON -c '
 from errno import errorcode
-from sys import stdin
+from sys import stdin, stdout
 
 t = "#if defined (%s)\n    { \"%s\", %s, },\n#endif\n"
 errstr = ""
-for k in errorcode.keys ():
-    errstr += t % tuple(3*[errorcode[k]])
+for v in sorted (errorcode.values ()):
+    errstr += t % tuple (3 * [v])
 
 for l in stdin:
-    print l.replace("@SYSDEP_ERRNO_LIST@", errstr),
+    stdout.write (l.replace ("@SYSDEP_ERRNO_LIST@", errstr))
 '
 fi
 
 exit $?
