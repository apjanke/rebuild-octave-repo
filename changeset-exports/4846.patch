# HG changeset patch
# User jwe
# Date 1080939132 0
#      Fri Apr 02 20:52:12 2004 +0000
# Node ID 7a3eb3cc292b47c6f856915e0821c4c3404cae86
# Parent  a9cfb8b37759ff7db2a766de1adac7b7bedc0592
[project @ 2004-04-02 20:52:12 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,13 @@
 2004-04-02  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* ov-base-mat.cc (octave_base_matrix<MT>::subsasgn): Don't allow
+	expressions like x(i)(j) or x(i){j} when x is empty.
+
 	* load-save.cc (get_file_format): Error if file does not exist.
 	(Fload): Also complain here if specific file type is specified and
 	file does not exist.
 
 2004-04-02  Quentin Spencer  <qspencer@ieee.org>
 
 	* parse.y: Use persistent instead of static in warnings messages.
 
diff --git a/src/ov-base-mat.cc b/src/ov-base-mat.cc
--- a/src/ov-base-mat.cc
+++ b/src/ov-base-mat.cc
@@ -81,19 +81,24 @@ octave_base_matrix<MT>::subsasgn (const 
 	  retval = numeric_assign (type, idx, rhs);
 	else if (is_empty ())
 	  {
 	    // Allow conversion of empty matrix to some other type in
 	    // cases like
 	    //
 	    //  x = []; x(i).f = rhs
 
-	    octave_value tmp = octave_value::empty_conv (type, rhs);
+	    if (type[1] == '.')
+	      {
+		octave_value tmp = octave_value::empty_conv (type, rhs);
 
-	    retval = tmp.subsasgn (type, idx, rhs);
+		retval = tmp.subsasgn (type, idx, rhs);
+	      }
+	    else
+	      error ("invalid assignment expression");
 	  }
 	else
 	  {
 	    std::string nm = type_name ();
 	    error ("in indexed assignment of %s, last lhs index must be ()",
 		   nm.c_str ());
 	  }
       }
diff --git a/src/pt-decl.cc b/src/pt-decl.cc
--- a/src/pt-decl.cc
+++ b/src/pt-decl.cc
@@ -144,17 +144,17 @@ tree_static_command::do_init (tree_decl_
   tree_identifier *id = elt.ident ();
 
   if (id)
     {
       id->mark_as_static ();
 
       octave_lvalue ult = id->lvalue ();
 
-      if (ult.is_defined ())
+      if (ult.is_undefined ())
 	{
 	  tree_expression *expr = elt.expression ();
 
 	  octave_value init_val;
 
 	  if (expr)
 	    init_val = expr->rvalue ();
 	  else
