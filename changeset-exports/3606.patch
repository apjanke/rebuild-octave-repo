# HG changeset patch
# User jwe
# Date 952507807 0
#      Wed Mar 08 09:30:07 2000 +0000
# Node ID 89f958b5358fd2da66f1fe777b99be6963979d7b
# Parent  bebbcd4694a8a84a73298c487da221b7d51d9fc3
[project @ 2000-03-08 09:30:05 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,13 @@
+2000-03-08  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* configure.in: For building shared libaries, handle
+	i386-pc-solaris2* the same as sparc-sun-solaris2*.
+
 2000-02-29  Ben Sapp <bsapp@nua.lampf.lanl.gov>
 
 	* examples/make_int.cc (make_int): Handle new operator names.
 
 2000-02-23  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* octMakefile.in (maintainer-clean distclean): Don't delete Makefile.
 	(dist): Delete stamp-auto.
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -16,17 +16,17 @@ dnl Copyright (C) 1996, 1997 John W. Eat
 ### FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ### for more details.
 ### 
 ### You should have received a copy of the GNU General Public License
 ### along with Octave; see the file COPYING.  If not, write to the Free
 ### Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ### 02111-1307, USA. 
 
-AC_REVISION($Revision: 1.323 $)
+AC_REVISION($Revision: 1.324 $)
 AC_PREREQ(2.9)
 AC_INIT(src/octave.cc)
 AC_CONFIG_HEADER(config.h)
 
 AC_DEFINE(OCTAVE_SOURCE, 1)
 
 OCTAVE_HOST_TYPE
 
@@ -619,17 +619,17 @@ changequote([,])dnl
       FPICFLAG=-fPIC
     else
       FPICFLAG=-PIC
     fi
     SH_LD=ld
     SH_LDFLAGS="-assert nodefinitions"
     RLD_FLAG='-L$(octlibdir)'
   ;;
-  sparc-sun-solaris2*)
+  sparc-sun-solaris2* | i386-pc-solaris2*)
     if test "$octave_cv_f77_is_g77" = yes; then
       FPICFLAG=-fPIC
     else
       FPICFLAG=-PIC
     fi
     RLD_FLAG='-Xlinker -R -Xlinker $(octlibdir)'
   ;;
 esac
diff --git a/doc/conf.texi b/doc/conf.texi
--- a/doc/conf.texi
+++ b/doc/conf.texi
@@ -1,7 +1,7 @@
 @c Copyright (C) 1996, 1997 John W. Eaton
 @c This is part of the Octave manual.
 @c For copying conditions, see the file gpl.texi.
 
-@set VERSION 2.0.5
+@set VERSION 2.1.x
 @set OCTAVEHOME /usr/local
 @set TARGETHOSTTYPE i586-pc-linux-gnu
diff --git a/doc/interpreter/octave.texi b/doc/interpreter/octave.texi
--- a/doc/interpreter/octave.texi
+++ b/doc/interpreter/octave.texi
@@ -99,16 +99,18 @@ Permission is granted to copy and distri
 into another language, under the same conditions as for modified versions.
 
 Portions of this document have been adapted from the @code{gawk},
 @code{readline}, @code{gcc}, and C library manuals, published by the Free
 Software Foundation, 59 Temple Place---Suite 330, Boston, MA
 02111--1307, USA.
 @end titlepage
 
+@contents
+
 @ifinfo
 @node Top, Preface, (dir), (dir)
 @top
 
 This manual documents how to run, install and port GNU Octave, as well
 as its new features and incompatibilities, and how to report bugs.
 It corresponds to GNU Octave version @value{VERSION}.
 @end ifinfo
@@ -154,19 +156,16 @@ It corresponds to GNU Octave version @va
 * Emacs::                       
 * Grammar::                     
 * Copying::                     The GNU General Public License.
 * Concept Index::               An item for each concept.
 * Variable Index::              An item for each documented variable.
 * Function Index::              An item for each documented function.
 * Operator Index::              An item for each documented operator.
 
-
-
-
 @detailmenu
  --- The Detailed Node Listing ---
 
 Preface
 
 * Acknowledgements::            
 * How You Can Contribute to Octave::  
 * Distribution::                
@@ -539,11 +538,9 @@ Grammar
 @include grammar.texi
 @include gpl.texi
 
 @include cp-idx.texi
 @include vr-idx.texi
 @include fn-idx.texi
 @include op-idx.texi
 
-@contents
-
 @bye
diff --git a/doc/liboctave/liboctave.texi b/doc/liboctave/liboctave.texi
--- a/doc/liboctave/liboctave.texi
+++ b/doc/liboctave/liboctave.texi
@@ -77,16 +77,18 @@ Permission is granted to copy and distri
 manual under the conditions for verbatim copying, provided that the entire
 resulting derived work is distributed under the terms of a permission
 notice identical to this one.
 
 Permission is granted to copy and distribute translations of this manual
 into another language, under the same conditions as for modified versions.
 @end titlepage
 
+@contents
+
 @ifinfo
 @node Top, Acknowledgements, (dir), (dir)
 @top
 
 This manual documents how to use, install and port Octave's C++ class
 library, and how to report bugs.  It corresponds to Octave version
 @value{VERSION}.
 @end ifinfo
@@ -151,11 +153,9 @@ Quadrature
 @include diffeq.texi
 @include dae.texi
 @include error.texi
 @include install.texi
 @include bugs.texi
 @include cp-idx.texi
 @include fn-idx.texi
 
-@contents
-
 @bye
diff --git a/src/defun.cc b/src/defun.cc
--- a/src/defun.cc
+++ b/src/defun.cc
@@ -22,24 +22,25 @@ Software Foundation, 59 Temple Place - S
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <iostream>
 #include <string>
 
-#include "defun-int.h"
+#include "defun.h"
 #include "dynamic-ld.h"
 #include "error.h"
 #include "help.h"
 #include "ov.h"
 #include "ov-builtin.h"
 #include "ov-dld-fcn.h"
 #include "ov-mapper.h"
+#include "oct-obj.h"
 #include "pager.h"
 #include "symtab.h"
 #include "variables.h"
 
 void
 print_usage (const std::string& nm, bool just_usage)
 {
   symbol_record *sym_rec = global_sym_tab->lookup (nm);
@@ -154,13 +155,54 @@ alias_builtin (const std::string& alias,
 
   if (sr_alias)
     sr_alias->alias (sr_name);
   else
     panic ("can't find symbol record for builtin function `%s'",
 	   alias.c_str ());
 }
 
+#if 0
+// This is insufficient to really make it possible to define an alias
+// for function.  There are a number of subtle problems related to
+// automatically reloading functions.
+DEFUN (alias, args, ,
+  "alias (alias, name)")
+{
+  octave_value retval;
+
+  int nargin = args.length ();
+
+  if (nargin == 2)
+    {
+      string alias = args(0).string_value ();
+      string name = args(1).string_value ();
+
+      if (! error_state)
+	{
+	  symbol_record *sr_name = lookup_by_name (name, false);
+
+	  if (sr_name && sr_name->is_function ())
+	    {
+	      symbol_record *sr_alias = global_sym_tab->lookup (alias, true);
+
+	      if (sr_alias)
+		sr_alias->alias (sr_name);
+	      else
+		error ("alias: unable to insert `%s' in symbol table",
+		       alias.c_str ());
+	    }
+	  else
+	    error ("alias: function `%s' does not exist", name.c_str ());
+	}
+    }
+  else
+    print_usage ("alias");
+
+  return retval;
+}
+#endif
+
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
