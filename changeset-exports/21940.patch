# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1466160703 14400
#      Fri Jun 17 06:51:43 2016 -0400
# Node ID 70824a0dd009f4a3549f4bf5f4df2179f43cf055
# Parent  034b15e9c262bbc7ff8988b61a8ce40cf96ecb2f
provide wrapper for kill

* signal-wrappers.c, signal-wrappers.h (octave_kill_wrapper,
octave_have_kill): New functions.

* oct-syscalls.cc: Include signal-wrappers.h instead of signal.h.
(octave::sys::kill): Use new wrapper functions.

diff --git a/liboctave/system/oct-syscalls.cc b/liboctave/system/oct-syscalls.cc
--- a/liboctave/system/oct-syscalls.cc
+++ b/liboctave/system/oct-syscalls.cc
@@ -23,26 +23,22 @@ along with Octave; see the file COPYING.
 #if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cerrno>
 #include <cstdlib>
 #include <cstring>
 
-// We can't use csignal as kill is not in the std namespace, and picky
-// compiler runtimes will also exclude it from global scope as well.
-
-#include <signal.h>
-
 #include "fcntl-wrappers.h"
 #include "lo-utils.h"
 #include "lo-sysdep.h"
 #include "oct-syscalls.h"
 #include "octave-popen2.h"
+#include "signal-wrappers.h"
 #include "str-vec.h"
 #include "unistd-wrappers.h"
 #include "wait-wrappers.h"
 
 #define NOT_SUPPORTED(nm) \
   nm ": not supported on this system"
 
 namespace octave
@@ -301,24 +297,25 @@ namespace octave
 
     int
     kill (pid_t pid, int sig, std::string& msg)
     {
       msg = "";
 
       int status = -1;
 
-#if defined (HAVE_KILL)
-      status = ::kill (pid, sig);
+      if (octave_have_kill ())
+        {
+          status = octave_kill_wrapper (pid, sig);
 
-      if (status < 0)
-        msg = gnulib::strerror (errno);
-#else
-      msg = NOT_SUPPORTED ("kill");
-#endif
+          if (status < 0)
+            msg = gnulib::strerror (errno);
+        }
+      else
+        msg = NOT_SUPPORTED ("kill");
 
       return status;
     }
 
     pid_t
     popen2 (const std::string& cmd, const string_vector& args,
             bool sync_mode, int *fildes)
     {
diff --git a/liboctave/wrappers/signal-wrappers.c b/liboctave/wrappers/signal-wrappers.c
--- a/liboctave/wrappers/signal-wrappers.c
+++ b/liboctave/wrappers/signal-wrappers.c
@@ -30,13 +30,29 @@ along with Octave; see the file COPYING.
 #endif
 
 #include <sys/types.h>
 #include <signal.h>
 #include <string.h>
 
 #include "signal-wrappers.h"
 
+int
+octave_kill_wrapper (pid_t pid, int signum)
+{
+  return kill (pid, signum);
+}
+
 char *
 octave_strsignal_wrapper (int signum)
 {
   return strsignal (signum);
 }
+
+bool
+octave_have_kill (void)
+{
+#if defined (HAVE_KILL)
+  return true;
+#else
+  return false;
+#endif
+}
diff --git a/liboctave/wrappers/signal-wrappers.h b/liboctave/wrappers/signal-wrappers.h
--- a/liboctave/wrappers/signal-wrappers.h
+++ b/liboctave/wrappers/signal-wrappers.h
@@ -18,19 +18,29 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #if ! defined (octave_signal_wrappers_h)
 #define octave_signal_wrappers_h 1
 
+#include <sys/types.h>
+
+#if ! defined (__cplusplus)
+#  include <stdbool.h>
+#endif
+
 #if defined __cplusplus
 extern "C" {
 #endif
 
+extern int octave_kill_wrapper (pid_t pid, int signum);
+
 extern char *octave_strsignal_wrapper (int signum);
 
+extern bool octave_have_kill (void);
+  
 #if defined __cplusplus
 }
 #endif
 
 #endif
