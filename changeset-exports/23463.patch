# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1493818376 14400
#      Wed May 03 09:32:56 2017 -0400
# Node ID 5296657cde44682765b75ec680f2afb7da42265a
# Parent  314d980bee931b04049ca39be784d01d3bb126b1
use lgamma if lgamma_r is not available (bug #50919)

* lo-specfun.cc (rc_lgamma): Use lgamma (or lgammaf) if lgamma_r
(or lgammaf_r) is not available.  Only fall back to DLGAMS and ALGAMS
from SLATEC if both are missing.

diff --git a/liboctave/numeric/lo-specfun.cc b/liboctave/numeric/lo-specfun.cc
--- a/liboctave/numeric/lo-specfun.cc
+++ b/liboctave/numeric/lo-specfun.cc
@@ -372,16 +372,19 @@ namespace octave
     Complex
     rc_lgamma (double x)
     {
       double result;
 
 #if defined (HAVE_LGAMMA_R)
       int sgngam;
       result = lgamma_r (x, &sgngam);
+#elif defined (HAVE_LGAMMA)
+      result = lgamma (x);
+      int sgngam = signgam;
 #else
       double sgngam = 0.0;
 
       if (octave::math::isnan (x))
         result = x;
       else if ((x <= 0 && octave::math::x_nint (x) == x) || octave::math::isinf (x))
         result = octave::numeric_limits<double>::Inf ();
       else
@@ -446,16 +449,19 @@ namespace octave
     FloatComplex
     rc_lgamma (float x)
     {
       float result;
 
 #if defined (HAVE_LGAMMAF_R)
       int sgngam;
       result = lgammaf_r (x, &sgngam);
+#elif defined (HAVE_LGAMMAF)
+      result = lgammaf (x);
+      int sgngam = signgam;
 #else
       float sgngam = 0.0f;
 
       if (octave::math::isnan (x))
         result = x;
       else if ((x <= 0 && octave::math::x_nint (x) == x) || octave::math::isinf (x))
         result = octave::numeric_limits<float>::Inf ();
       else
