# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1376995374 14400
#      Tue Aug 20 06:42:54 2013 -0400
# Node ID e6c0ac8ce5b67c0f18a695ff29bd48a93572c641
# Parent  a69dd4b0e5713e714cad7984175763f90de392d0
eliminate parse conflicts introduced by changeset 923ce8b42db2

* oct-parse.in.yy (opt_identifier): Delete.
(TRY): Simplify grammar.
(octave_base_parser::make_try_command): Pass separator token instead
of exception identifier.  Handle exception identifier here based on
context instead of in grammar rules.
* parse.h (octave_base_parser::make_try_command): Fix decl.
* try.tst: New tests.

diff --git a/libinterp/parse-tree/oct-parse.in.yy b/libinterp/parse-tree/oct-parse.in.yy
--- a/libinterp/parse-tree/oct-parse.in.yy
+++ b/libinterp/parse-tree/oct-parse.in.yy
@@ -235,17 +235,17 @@ make_statement (T *arg)
 %type <tree_constant_type> string constant magic_colon
 %type <tree_anon_fcn_handle_type> anon_fcn_handle
 %type <tree_fcn_handle_type> fcn_handle
 %type <tree_matrix_type> matrix_rows
 %type <tree_cell_type> cell_rows
 %type <tree_expression_type> matrix cell
 %type <tree_expression_type> primary_expr oper_expr
 %type <tree_expression_type> simple_expr colon_expr assign_expr expression
-%type <tree_identifier_type> identifier fcn_name magic_tilde opt_identifier
+%type <tree_identifier_type> identifier fcn_name magic_tilde
 %type <tree_identifier_type> superclass_identifier meta_identifier
 %type <octave_user_function_type> function1 function2 classdef1
 %type <tree_index_expression_type> word_list_cmd
 %type <tree_colon_expression_type> colon_expr1
 %type <tree_argument_list_type> arg_list word_list assign_lhs
 %type <tree_argument_list_type> cell_or_matrix_row
 %type <tree_parameter_list_type> param_list param_list1 param_list2
 %type <tree_parameter_list_type> return_list return_list1
@@ -970,40 +970,29 @@ jump_command    : BREAK
 // ==========
 
 except_command  : UNWIND stash_comment opt_sep opt_list CLEANUP
                   stash_comment opt_sep opt_list END
                   {
                     if (! ($$ = parser.make_unwind_command ($1, $4, $8, $9, $2, $6)))
                       ABORT_PARSE;
                   }
-                | TRY stash_comment opt_sep opt_list CATCH list END
+                | TRY stash_comment opt_sep opt_list CATCH stash_comment
+                  opt_sep opt_list END
                   {
-                    if (! ($$ = parser.make_try_command ($1, $4, $6, 0, $7, $2, 0)))
-                      ABORT_PARSE;
-                  }
-                | TRY stash_comment opt_sep opt_list CATCH opt_identifier
-                  stash_comment opt_sep opt_list END
-                  {
-                    if (! ($$ = parser.make_try_command ($1, $4, $9, $6, $10, $2, $7)))
+                    if (! ($$ = parser.make_try_command ($1, $4, $7, $8, $9, $2, $6)))
                       ABORT_PARSE;
                   }
                 | TRY stash_comment opt_sep opt_list END
                   {
                     if (! ($$ = parser.make_try_command ($1, $4, 0, 0, $5, $2, 0)))
                       ABORT_PARSE;
                   }
                 ;
 
-opt_identifier: // empty
-                  { $$ = 0; }
-                | identifier sep
-                  { $$ = $1; }
-                ;
-
 // ===========================================
 // Some 'subroutines' for function definitions
 // ===========================================
 
 push_fcn_symtab : // empty
                   {
                     parser.curr_fcn_depth++;
 
@@ -2196,31 +2185,50 @@ octave_base_parser::make_unwind_command 
   return retval;
 }
 
 // Build a try-catch command.
 
 tree_command *
 octave_base_parser::make_try_command (token *try_tok,
                                       tree_statement_list *body,
+                                      char catch_sep,
                                       tree_statement_list *cleanup_stmts,
-                                      tree_identifier *id,
                                       token *end_tok,
                                       octave_comment_list *lc,
                                       octave_comment_list *mc)
 {
   tree_command *retval = 0;
 
   if (end_token_ok (end_tok, token::try_catch_end))
     {
       octave_comment_list *tc = octave_comment_buffer::get_comment ();
 
       int l = try_tok->line ();
       int c = try_tok->column ();
 
+      tree_identifier *id = 0;
+
+      if (! catch_sep && cleanup_stmts && ! cleanup_stmts->empty ())
+        {
+          tree_statement *stmt = cleanup_stmts->front ();
+
+          if (stmt)
+            {
+              tree_expression *expr = stmt->expression ();
+
+              if (expr && expr->is_identifier ())
+                {
+                  id = dynamic_cast<tree_identifier *> (expr);
+
+                  cleanup_stmts->pop_front ();
+                }
+            }
+        }
+
       retval = new tree_try_catch_command (body, cleanup_stmts, id,
                                            lc, mc, tc, l, c);
     }
 
   return retval;
 }
 
 // Build a while command.
diff --git a/libinterp/parse-tree/parse.h b/libinterp/parse-tree/parse.h
--- a/libinterp/parse-tree/parse.h
+++ b/libinterp/parse-tree/parse.h
@@ -196,18 +196,19 @@ public:
   tree_command *
   make_unwind_command (token *unwind_tok, tree_statement_list *body,
                        tree_statement_list *cleanup, token *end_tok,
                        octave_comment_list *lc, octave_comment_list *mc);
 
   // Build a try-catch command.
   tree_command *
   make_try_command (token *try_tok, tree_statement_list *body,
-                    tree_statement_list *cleanup, tree_identifier *id, token *end_tok,
-                    octave_comment_list *lc, octave_comment_list *mc);
+                    char catch_sep, tree_statement_list *cleanup,
+                    token *end_tok, octave_comment_list *lc,
+                    octave_comment_list *mc);
 
   // Build a while command.
   tree_command *
   make_while_command (token *while_tok, tree_expression *expr,
                       tree_statement_list *body, token *end_tok,
                       octave_comment_list *lc);
 
   // Build a do-until command.
diff --git a/test/try.tst b/test/try.tst
--- a/test/try.tst
+++ b/test/try.tst
@@ -153,8 +153,30 @@
 %!     a;
 %!   catch myerr1
 %!     error (myerr1);
 %!   end_try_catch
 %! catch myerr2
 %!   assert (myerr1.message, myerr2.message);
 %!   assert (myerr1.identifier, myerr2.identifier);
 %! end_try_catch
+
+%!test
+%! x = 1;
+%! try error ("foo"); catch x; assert (x.message, "foo"); end_try_catch
+
+%!test
+%! x = 1;
+%! try error ("foo"); catch x end_try_catch
+%! assert (x.message, "foo");
+
+%!test
+%! x = 1;
+%! try error ("foo"); catch, x; assert (x, 1); end_try_catch
+
+%!test
+%! x = 1;
+%! try error ("foo"); catch; x; assert (x, 1); end_try_catch
+
+%!test
+%! x = 1;
+%! try error ("foo"); catch
+%!   x; assert (x, 1); end_try_catch
