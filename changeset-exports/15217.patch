# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1345679420 14400
#      Wed Aug 22 19:50:20 2012 -0400
# Node ID d2220c3def3fda7372166c96a32389142409b8e7
# Parent  dd7c37ceb800910853e7e1ba2b2125bc7691f647
avoid C-style cast warning

* lo-specfun.cc (betain): Use C++ static cast.

diff --git a/liboctave/lo-specfun.cc b/liboctave/lo-specfun.cc
--- a/liboctave/lo-specfun.cc
+++ b/liboctave/lo-specfun.cc
@@ -3190,17 +3190,17 @@ betain (double x, double p, double q, do
       pp = p;
       qq = q;
       indx = false;
     }
 
   term = 1.0;
   ai = 1.0;
   value = 1.0;
-  ns = (int) (qq + cx * psq);
+  ns = static_cast<int> (qq + cx * psq);
 
   //  Use the Soper reduction formula.
 
   rx = xx / cx;
   temp = qq - ai;
   if (ns == 0)
     {
       rx = xx;
@@ -3258,17 +3258,18 @@ betain (double x, double p, double q, do
 //    GW Cran, KJ Martin, GE Thomas,
 //    Remark AS R19 and Algorithm AS 109:
 //    A Remark on Algorithms AS 63: The Incomplete Beta Integral
 //    and AS 64: Inverse of the Incomplete Beta Integeral,
 //    Applied Statistics,
 //    Volume 26, Number 1, 1977, pages 111-114.
 //
 double
-betaincinv (double y, double p, double q) {
+betaincinv (double y, double p, double q)
+{
   double a, acu, adj, fpu, g, h;
   int iex;
   bool indx;
   double pp, prev, qq, r, s, sae = -37.0, sq, t, tx, value, w, xin, ycur, yprev;
 
   double beta = xlgamma (p) + xlgamma (q) - xlgamma (p + q);
   bool err = false;
   fpu = pow (10.0, sae);
