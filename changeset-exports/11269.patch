# HG changeset patch
# User Christos Dimitrakakis <christos.dimitrakakis@gmail.com>
# Date 1290109109 18000
#      Thu Nov 18 14:38:29 2010 -0500
# Node ID 628b0332876555b556b62340e47bdb09d80c219e
# Parent  1ddf64be9cbd341d3891ba70f0f476fc144d8064
improve range of betapdf function

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,14 @@
+2010-11-18  Christos Dimitrakakis  <christos.dimitrakakis@gmail.com>
+
+	* statistics/distributions/betapdf.m: Use lgamma to compute
+	normalising constant in log space in order to handle large
+	parameters a and b.  Ensure correct values at x == 0 or x == 1.
+
 2010-11-18  Ben Abbott <bpabbott@mac.com>
 
 	* plot/__print_parse_opts__.m: For tests, allow __print_parse_opts__
 	to run with no inputs.
 
 2010-11-17  Ben Abbott <bpabbott@mac.com>
 
 	* general/subsindex.m: Fix typo in doc-string.
diff --git a/scripts/statistics/distributions/betapdf.m b/scripts/statistics/distributions/betapdf.m
--- a/scripts/statistics/distributions/betapdf.m
+++ b/scripts/statistics/distributions/betapdf.m
@@ -1,9 +1,10 @@
 ## Copyright (C) 1995, 1996, 1997, 2005, 2006, 2007 Kurt Hornik
+## Copyright (C) 2010 Christos Dimitrakakis
 ##
 ## This file is part of Octave.
 ##
 ## Octave is free software; you can redistribute it and/or modify it
 ## under the terms of the GNU General Public License as published by
 ## the Free Software Foundation; either version 3 of the License, or (at
 ## your option) any later version.
 ##
@@ -17,17 +18,17 @@
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} betapdf (@var{x}, @var{a}, @var{b})
 ## For each element of @var{x}, returns the PDF at @var{x} of the beta
 ## distribution with parameters @var{a} and @var{b}.
 ## @end deftypefn
 
-## Author: KH <Kurt.Hornik@wu-wien.ac.at>
+## Author: KH <Kurt.Hornik@wu-wien.ac.at>, CD <christos.dimitrakakis@gmail.com>
 ## Description: PDF of the Beta distribution
 
 function pdf = betapdf (x, a, b)
 
   if (nargin != 3)
     print_usage ();
   endif
   
@@ -41,20 +42,57 @@ function pdf = betapdf (x, a, b)
   sz = size (x);
   pdf = zeros (sz);
 
   k = find (!(a > 0) | !(b > 0) | isnan (x));
   if (any (k))
     pdf (k) = NaN;
   endif
 
-  k = find ((x > 0) & (x < 1) & (a > 0) & (b > 0));
+  k = find ((x > 0) & (x < 1) & (a > 0) & (b > 0) & ((a != 1) | (b != 1)));
   if (any (k))
     if (isscalar(a) && isscalar(b))
       pdf(k) = exp ((a - 1) .* log (x(k))
-                    + (b - 1) .* log (1 - x(k))) ./ beta (a, b);
+		            + (b - 1) .* log (1 - x(k))
+                    + lgamma(a + b) - lgamma(a) - lgamma(b));
     else
       pdf(k) = exp ((a(k) - 1) .* log (x(k))
-                    + (b(k) - 1) .* log (1 - x(k))) ./ beta (a(k), b(k));
+		            + (b(k) - 1) .* log (1 - x(k))
+                    + lgamma(a(k) + b(k)) - lgamma(a(k)) - lgamma(b(k)));
+    endif
+  endif
+
+  ## Most important special cases when the density is finite.
+  k = find ((x == 0) & (a == 1) & (b > 0) & (b != 1));
+  if (any (k))
+    if (isscalar(a) && isscalar(b))
+      pdf(k) = exp(lgamma(a + b) - lgamma(a) - lgamma(b));
+    else
+      pdf(k) = exp(lgamma(a(k) + b(k)) - lgamma(a(k)) - lgamma(b(k)));
     endif
   endif
 
+  k = find ((x == 1) & (b == 1) & (a > 0) & (a != 1));
+  if (any (k))
+    if (isscalar(a) && isscalar(b))
+      pdf(k) = exp(lgamma(a + b) - lgamma(a) - lgamma(b));
+    else
+      pdf(k) = exp(lgamma(a(k) + b(k)) - lgamma(a(k)) - lgamma(b(k)));
+    endif
+  endif
+
+  k = find ((x >= 0) & (x <= 1) & (a == 1) & (b == 1));
+  if (any (k))
+    pdf(k) = 1;
+  endif
+
+  ## Other special case when the density at the boundary is infinite.
+  k = find ((x == 0) & (a < 1));
+  if (any (k))
+    pdf(k) = Inf;
+  endif
+
+  k = find ((x == 1) & (b < 1));
+  if (any (k))
+    pdf(k) = Inf;
+  endif
+
 endfunction
