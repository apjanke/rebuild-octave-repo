# HG changeset patch
# User Rik <rik@octave.org>
# Date 1549670459 28800
#      Fri Feb 08 16:00:59 2019 -0800
# Node ID 63b5a17ba30fd683b8f02bdd7979c352ad0596a7
# Parent  8e97a2e5ab665e3c1c8b01ec2c4bcd16d77d9a29
Use save_default_options() to make BIST test suite robust against user configurations.

* call-stack.cc, addpref.m, getpref.m, ispref.m, rmpref.m, bug-45969.tst,
io.tst, pkg.tst: Use save_default_options() to make BIST test suite robust
against user configurations.

diff --git a/libinterp/corefcn/call-stack.cc b/libinterp/corefcn/call-stack.cc
--- a/libinterp/corefcn/call-stack.cc
+++ b/libinterp/corefcn/call-stack.cc
@@ -1174,16 +1174,17 @@ matching the given patterns.
 
   return do_who (interp, argc, argv, nargout == 1);
 }
 
 /*
 %!test
 %! avar = magic (4);
 %! ftmp = [tempname() ".mat"];
+%! save_default_options ("-binary", "local");
 %! unwind_protect
 %!   save (ftmp, "avar");
 %!   vars = whos ("-file", ftmp);
 %!   assert (numel (vars), 1);
 %!   assert (isstruct (vars));
 %!   assert (vars.name, "avar");
 %!   assert (vars.size, [4, 4]);
 %!   assert (vars.class, "double");
diff --git a/scripts/prefs/addpref.m b/scripts/prefs/addpref.m
--- a/scripts/prefs/addpref.m
+++ b/scripts/prefs/addpref.m
@@ -72,16 +72,17 @@ function addpref (group, pref, val)
 
   saveprefs (prefs);
 
 endfunction
 
 
 %!test
 %! HOME = getenv ("HOME");
+%! save_default_options ("-binary", "local");
 %! unwind_protect
 %!   setenv ("HOME", P_tmpdir ());
 %!
 %!   addpref ("group1", "pref1", [1 2 3]);
 %!   assert (getpref ("group1", "pref1"), [1 2 3]);
 %!
 %!   addpref ("group2", {"prefA", "prefB"}, {"StringA", {"StringB"}});
 %!   assert (getpref ("group2", "prefA"), "StringA");
diff --git a/scripts/prefs/getpref.m b/scripts/prefs/getpref.m
--- a/scripts/prefs/getpref.m
+++ b/scripts/prefs/getpref.m
@@ -104,16 +104,17 @@ function retval = getpref (group, pref, 
   endif
 
 endfunction
 
 
 %!test
 %! HOME = getenv ("HOME");
 %! tmp_home = tempname ();
+%! save_default_options ("-binary", "local");
 %! unwind_protect
 %!   mkdir (tmp_home);
 %!   setenv ("HOME", tmp_home);
 %!
 %!   addpref ("group1", "pref1", [1 2 3]);
 %!   addpref ("group2", {"prefA", "prefB"}, {"StringA", {"StringB"}});
 %!
 %!   exp.group1.pref1 = [1 2 3];
diff --git a/scripts/prefs/ispref.m b/scripts/prefs/ispref.m
--- a/scripts/prefs/ispref.m
+++ b/scripts/prefs/ispref.m
@@ -62,16 +62,17 @@ function retval = ispref (group, pref = 
     endif
   endif
 
 endfunction
 
 
 %!test
 %! HOME = getenv ("HOME");
+%! save_default_options ("-binary", "local");
 %! unwind_protect
 %!   setenv ("HOME", P_tmpdir ());
 %!   addpref ("group1", "pref1", [1 2 3]);
 %!   addpref ("group2", {"prefA", "prefB"}, {"StringA", {"StringB"}});
 %!
 %!   assert (ispref ("group1"));
 %!   assert (! ispref ("group3"));
 %!
diff --git a/scripts/prefs/rmpref.m b/scripts/prefs/rmpref.m
--- a/scripts/prefs/rmpref.m
+++ b/scripts/prefs/rmpref.m
@@ -70,16 +70,17 @@ function rmpref (group, pref)
     endif
   endif
 
 endfunction
 
 
 %!test
 %! HOME = getenv ("HOME");
+%! save_default_options ("-binary", "local");
 %! unwind_protect
 %!   setenv ("HOME", P_tmpdir ());
 %!   addpref ("group1", "pref1", [1 2 3]);
 %!   addpref ("group2", {"prefA", "prefB", "prefC"}, {"strA", "strB", "strC"});
 %!
 %!   assert (ispref ("group1"));
 %!   rmpref ("group1");
 %!   assert (! ispref ("group1"));
diff --git a/test/bug-45969.tst b/test/bug-45969.tst
--- a/test/bug-45969.tst
+++ b/test/bug-45969.tst
@@ -1,27 +1,27 @@
 %!test
-%! ascii_filename = tempname ();
+%! text_filename = tempname ();
 %! binary_filename = tempname ();
 %! a = 2;
 %! b = 10;
 %! c = 20;
 %! f1 = @ (f, x) f (x) + a;
 %! f2 = @ (y) f1 (@ (z) z^2 + b * y, y) + c;
 %! f2_arg = 5;
 %! save_default_options ("-text", "local");
 %! unwind_protect
-%!   save (ascii_filename, "f2");
+%!   save (text_filename, "f2");
 %!   save ("-binary", binary_filename, "f2");
-%!   ascii = load (ascii_filename);
+%!   text = load (text_filename);
 %!   binary = load (binary_filename);
-%!   assert (f2 (f2_arg), ascii.f2 (f2_arg));
+%!   assert (f2 (f2_arg), text.f2 (f2_arg));
 %!   assert (f2 (f2_arg), binary.f2 (f2_arg));
 %! unwind_protect_cleanup
-%!   unlink (ascii_filename);
+%!   unlink (text_filename);
 %!   unlink (binary_filename);
 %! end_unwind_protect
 
 %!testif HAVE_HDF5
 %! hdf5_filename = tempname ();
 %! a = 2;
 %! b = 10;
 %! c = 20;
diff --git a/test/io.tst b/test/io.tst
--- a/test/io.tst
+++ b/test/io.tst
@@ -228,16 +228,17 @@
 %!
 %! STR.scalar_fld = 1;
 %! STR.matrix_fld = [1.1,2;3,4];
 %! STR.string_fld = "Octave";
 %! STR.struct_fld.x = 0;
 %! STR.struct_fld.y = 1;
 %!
 %! struct_dat = fullfile (P_tmpdir, "struct.dat");
+%! save_default_options ("-text", "local");
 %! save (struct_dat, "-struct", "STR");
 %! STR = load (struct_dat);
 %!
 %! assert (STR.scalar_fld == 1 && ...
 %!         STR.matrix_fld == [1.1,2;3,4] && ...
 %!         STR.string_fld == "Octave" && ...
 %!         STR.struct_fld.x == 0 && ...
 %!         STR.struct_fld.y == 1 );
diff --git a/test/pkg/pkg.tst b/test/pkg/pkg.tst
--- a/test/pkg/pkg.tst
+++ b/test/pkg/pkg.tst
@@ -86,16 +86,17 @@
 # -nodeps
 ## FIXME: Need test
 
 # -verbose
 ## FIXME: Need test
 
 ## Action load/unload (within install/uninstall)
 %!testif HAVE_Z
+%! save_default_options ("-binary", "local");
 %! for i = 1:numel (mfile_pkg_name)
 %!   name = mfile_pkg_name{i};
 %!   silent_pkg_install ("-local", mfile_pkg_tgz{i});
 %!   unwind_protect
 %!     pkg ("load", name);
 %!     pkg ("unload", name);
 %!   unwind_protect_cleanup
 %!     system (["chmod -Rf u+w '" prefix "'"]); ## FIXME: Work around bug #53578
