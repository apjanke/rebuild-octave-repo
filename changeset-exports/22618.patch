# HG changeset patch
# User Rik <rik@octave.org>
# Date 1476321848 25200
#      Wed Oct 12 18:24:08 2016 -0700
# Node ID 5fdfde2a873d8e88ec41778afdf9b9f67596c56c
# Parent  68e9bdb7cde34d4c148dcad9373d6efed039ca58
# Parent  51b7d8456ce309abbe80d4f4f9a651aed83e9f3b
maint: merge stable to default.

diff --git a/libgui/graphics/BaseControl.cc b/libgui/graphics/BaseControl.cc
--- a/libgui/graphics/BaseControl.cc
+++ b/libgui/graphics/BaseControl.cc
@@ -37,28 +37,45 @@ namespace QtHandles
 {
 
   static void
   updatePalette (const uicontrol::properties& props, QWidget* w)
   {
     QPalette p = w->palette ();
 
     if (props.style_is ("edit")
-        || props.style_is ("listbox")
-        || props.style_is ("popupmenu"))
+        || props.style_is ("listbox"))
       {
         p.setColor (QPalette::Base,
                     Utils::fromRgb (props.get_backgroundcolor_rgb ()));
         p.setColor (QPalette::Text,
                     Utils::fromRgb (props.get_foregroundcolor_rgb ()));
       }
+    else if (props.style_is ("popupmenu"))
+      {
+        // popumenu (QComboBox) is a listbox with a button, so needs set colors for both
+        p.setColor (QPalette::Base,
+                    Utils::fromRgb (props.get_backgroundcolor_rgb ()));
+        p.setColor (QPalette::Text,
+                    Utils::fromRgb (props.get_foregroundcolor_rgb ()));
+        p.setColor (QPalette::Button,
+                    Utils::fromRgb (props.get_backgroundcolor_rgb ()));
+        p.setColor (QPalette::ButtonText,
+                    Utils::fromRgb (props.get_foregroundcolor_rgb ()));
+      }
+    else if (props.style_is ("radiobutton")
+             || props.style_is ("checkbox"))
+      {
+        p.setColor (QPalette::Button,
+                    Utils::fromRgb (props.get_backgroundcolor_rgb ()));
+        p.setColor (QPalette::WindowText,
+                    Utils::fromRgb (props.get_foregroundcolor_rgb ()));
+      }
     else if (props.style_is ("pushbutton")
-             || props.style_is ("togglebutton")
-             || props.style_is ("radiobutton")
-             || props.style_is ("checkbox"))
+             || props.style_is ("togglebutton"))
       {
         p.setColor (QPalette::Button,
                     Utils::fromRgb (props.get_backgroundcolor_rgb ()));
         p.setColor (QPalette::ButtonText,
                     Utils::fromRgb (props.get_foregroundcolor_rgb ()));
       }
     else
       {
diff --git a/libinterp/module.mk b/libinterp/module.mk
--- a/libinterp/module.mk
+++ b/libinterp/module.mk
@@ -281,17 +281,18 @@ DOCSTRING_FILES += libinterp/DOCSTRINGS
 
 libinterp/DOCSTRINGS: $(LIBINTERP_DEFUN_FILES) libinterp/op-kw-docs | libinterp/$(octave_dirstamp)
 	$(AM_V_GEN)rm -f libinterp/DOCSTRINGS-t && \
 	( $(PERL) $(srcdir)/libinterp/gendoc.pl "$(srcdir)" $(LIBINTERP_DEFUN_FILES); $(SED) -ne '/^\x1d/,$$p' $(srcdir)/libinterp/op-kw-docs ) > libinterp/DOCSTRINGS-t && \
 	$(call move_if_change_rule,libinterp/DOCSTRINGS-t,$@)
 
 OCTAVE_INTERPRETER_TARGETS += \
   $(OCT_FILES) \
-  $(DLDFCN_PKG_ADD_FILE)
+  $(DLDFCN_PKG_ADD_FILE) \
+  $(LIBINTERP_TST_FILES)
 
 DIRSTAMP_FILES += libinterp/$(octave_dirstamp)
 
 install-data-hook: install-oct install-built-in-docstrings install-deprecated-config-h
 
 uninstall-local: uninstall-oct uninstall-built-in-docstrings uninstall-deprecated-config-h
 
 if AMCOND_ENABLE_DYNAMIC_LINKING
diff --git a/liboctave/module.mk b/liboctave/module.mk
--- a/liboctave/module.mk
+++ b/liboctave/module.mk
@@ -112,16 +112,19 @@ nobase_liboctavetests_DATA = $(LIBOCTAVE
 
 liboctave/liboctave-build-info.cc: liboctave/liboctave-build-info.in.cc HG-ID | liboctave/$(octave_dirstamp)
 	$(AM_V_GEN)rm -f $@-t && \
 	$(SED) \
 	  -e "s|%NO_EDIT_WARNING%|DO NOT EDIT!  Generated automatically by Makefile|" \
 	  -e "s|%OCTAVE_HG_ID%|$(HG_ID_VAR)|" $< > $@-t && \
 	$(simple_move_if_change_rule)
 
+OCTAVE_INTERPRETER_TARGETS += \
+  $(LIBOCTAVE_TST_FILES)
+
 DIRSTAMP_FILES += liboctave/$(octave_dirstamp)
 
 EXTRA_DIST += $(liboctave_EXTRA_DIST)
 
 liboctave_CLEANFILES += \
   $(LIBOCTAVE_BUILT_NODISTFILES) \
   $(LIBOCTAVE_TST_FILES)
 
diff --git a/scripts/startup/version-rcfile b/scripts/startup/version-rcfile
--- a/scripts/startup/version-rcfile
+++ b/scripts/startup/version-rcfile
@@ -6,16 +6,26 @@
 ## This file contains commands that should be executed each time Octave starts
 ## for every user at this site.
 
 ## Configure readline using the file inputrc in the Octave startup directory.
 readline_read_init_file (sprintf ("%s%s%s",
                                   __octave_config_info__ ("startupfiledir"),
                                   filesep, "inputrc"));
 
+## Re-read user's personal inputrc to give precedence over Octave's default.
+inputrc = getenv ("INPUTRC");
+if (isempty (inputrc) && exist ("~/.inputrc", "file"))
+  inputrc = "~/.inputrc";
+endif
+if (! isempty (inputrc))
+  readline_read_init_file (inputrc);
+endif
+clear ("inputrc");
+
 ## Configure LESS pager if present
 if (strcmp (PAGER (), "less") && isempty (getenv ("LESS")))
   PAGER_FLAGS ('-e -X -P"-- less ?pB(%pB\\%):--. (f)orward, (b)ack, (q)uit$"');
 endif
 
 ## For Matlab compatibility, run startup.m when starting Octave.
 if (exist ("startup", "file"))
   startup;  # No arg list here since startup might be a script.
