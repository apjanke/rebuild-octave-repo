# HG changeset patch
# User Rik <rik@octave.org>
# Date 1533312227 25200
#      Fri Aug 03 09:03:47 2018 -0700
# Node ID 799dcddaf158de152b41060c402ed56b5746f261
# Parent  138f91fb2883036eab994ce74846ee5d6805f6c5
strmatch.m: Accept a single cellstr as first input for Matlab compatibility (bug #54432)

* strmatch.m: Check for a cellstr as first input and convert to a string with
char().  Add BIST test for bug #54432.  Add BIST for new input validation test
that an input cellstr contains just one string.

diff --git a/scripts/strings/strmatch.m b/scripts/strings/strmatch.m
--- a/scripts/strings/strmatch.m
+++ b/scripts/strings/strmatch.m
@@ -55,17 +55,22 @@
 ## Adapted-by: jwe
 
 function idx = strmatch (s, A, exact)
 
   if (nargin < 2 || nargin > 3)
     print_usage ();
   endif
 
-  if (! ischar (s) || (! isempty (s) && ! isvector (s)))
+  if (iscellstr (s))
+    if (! isscalar (s))
+      error ("strmatch: a cell array S must contain only one string");
+    endif
+    s = char (s);
+  elseif (! ischar (s) || (! isempty (s) && ! isrow (s)))
     error ("strmatch: S must be a string");
   elseif (! (ischar (A) || iscellstr (A)))
     error ("strmatch: A must be a string or cell array of strings");
   endif
 
   ## Trim blanks and nulls from search string
   if (any (s != " " & s != "\0"))
     s = regexprep (s, "[ \\0]+$", '');
@@ -114,17 +119,20 @@ endfunction
 %!assert (strmatch ('', { '', '% comment', 'var a = 5', ''}, "exact"), [1,4])
 
 ## Weird Matlab corner cases
 %!test <*49601>
 %! assert (strmatch (" ", " "), 1);
 %! assert (strmatch (" ", "   "), 1);
 %! assert (strmatch ("  ", " "), []);
 %! assert (strmatch ("  ", "  "), 1);
+%!test <*54432>
+%! assert (strmatch ({"a"}, {"aaa", "bab", "bbb"}), 1);
 
 ## Test input validation
 %!error <Invalid call to strmatch> strmatch ()
 %!error <Invalid call to strmatch> strmatch ("a")
 %!error <Invalid call to strmatch> strmatch ("a", "aaa", "exact", 1)
+%!error <S must contain only one string> strmatch ({"a", "b"}, "aaa")
 %!error <S must be a string> strmatch (1, "aaa")
 %!error <S must be a string> strmatch (char ("a", "bb"), "aaa")
 %!error <A must be a string> strmatch ("a", 1)
 %!error <A must be a string> strmatch ("a", {"hello", [1]})
