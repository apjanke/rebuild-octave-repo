# HG changeset patch
# User jwe
# Date 1115055727 0
#      Mon May 02 17:42:07 2005 +0000
# Node ID f88f21827fe5f35e9367325e4aed0e42e80e8d0e
# Parent  f087ea85c24b2c11990200564b9af0cf7183e8a9
[project @ 2005-05-02 17:41:00 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,13 @@
+2005-05-02  John W. Eaton  <jwe@octave.org>
+
+	* configure.in (AC_ARG_WITH(umfpack)): List -lumfpack ahead of -lamd.
+	From Dmitri A. Sergatskov <dasergatskov@gmail.com>.
+
 2005-04-29  David Bateman  <dbateman@free.fr>
 
 	* configure.in: Add UMFPACK_LONG_IDX
 
 2005-04-21  John W. Eaton  <jwe@octave.org>
 
 	* configure.in (AC_CONFIG_FILES): Remove install-octave from the list.
 	(AH_BOTTOM): Define SIZEOF_OCTAVE_IDX_TYPE.
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -24,17 +24,17 @@ dnl Copyright (C) 1996, 1997 John W. Eat
 ### Preserve CFLAGS and CXXFLAGS from the environment before doing
 ### anything else because we don't know which macros might call
 ### AC_PROG_CC or AC_PROG_CXX.
 
 EXTERN_CFLAGS="$CFLAGS"
 EXTERN_CXXFLAGS="$CXXFLAGS"
 
 AC_INIT
-AC_REVISION($Revision: 1.475 $)
+AC_REVISION($Revision: 1.476 $)
 AC_PREREQ(2.57)
 AC_CONFIG_SRCDIR([src/octave.cc])
 AC_CONFIG_HEADER(config.h)
 
 AC_DEFINE(OCTAVE_SOURCE, 1, [Define if this is Octave.])
   
 OCTAVE_HOST_TYPE
 
@@ -708,26 +708,26 @@ AC_ARG_WITH(umfpack,
 
 if test "$with_umfpack" = "yes"; then
   have_umfpack_header=no
   with_umfpack=no
   AC_CHECK_HEADER(umfpack/umfpack.h, [have_umfpack_header=yes; break])
   if test "$have_umfpack_header" = yes; then
     AC_CHECK_LIB(amd, amd_postorder, [
       AC_CHECK_LIB(umfpack, umfpack_zi_get_determinant, [
-        UMFPACK_LIBS="-lamd -lumfpack"; with_umfpack=yes], [
+        UMFPACK_LIBS="-lumfpack -lamd"; with_umfpack=yes], [
 	  ## Invalidate the cache.
 	  $as_unset ac_cv_lib_umfpack_umfpack_zi_get_determinant
 	  AC_CHECK_LIB(umfpack, umfpack_zi_get_determinant, [
-            UMFPACK_LIBS="-lamd -lumfpack"; with_umfpack=yes], [
+            UMFPACK_LIBS="-lumfpack -lamd"; with_umfpack=yes], [
 
 	    ## Invalidate the cache.
 	    $as_unset ac_cv_lib_umfpack_umfpack_zi_get_determinant
 	    AC_CHECK_LIB(umfpack, umfpack_zi_get_determinant, [
-              UMFPACK_LIBS="-lamd -lumfpack -lcblas"; with_umfpack=yes], [], -lamd -lcblas $BLAS_LIBS)], -lamd $BLAS_LIBS $FLIBS)]), -lamd])
+              UMFPACK_LIBS="-lumfpack -lamd -lcblas"; with_umfpack=yes], [], -lamd -lcblas $BLAS_LIBS)], -lamd $BLAS_LIBS $FLIBS)]), -lamd])
     if test "$with_umfpack" = yes; then
       # For now the code needed for this is not in umfpack, will add
       # a test later that will probably have to be based on version
       # numbers as there is no interface changes that are visible at
       # compile time.
       with_umfpack_split=no
     fi
   fi
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,41 +1,48 @@
+2005-05-02  John W. Eaton  <jwe@octave.org>
+
+	* Makefile.in (LINK_DEPS): List $(UMFPACK_LIBS) ahead of $(BLAS_LIBS).
+	From Dmitri A. Sergatskov <dasergatskov@gmail.com>.
+
 2005-04-29  David Bateman  <dbateman@free.fr>
 
-	* dSparse.cc (trisolve): Diagonal passed to lapack zptsv is type double.
-	Correct indexing for upper diagonal elements for sparse tridiagonal.
+	* dSparse.cc (trisolve): Diagonal passed to lapack zptsv is type
+	double.  Correct indexing for upper diagonal elements for sparse
+	tridiagonal.
 	* CSparse.cc (trisolve): ditto.
 
-	* CSparse.h (UMFPACK_ZNAME): Define macro to pick version of UMFPACK for
-	64-bit.
+	* CSparse.h (UMFPACK_ZNAME): Define macro to pick version of
+	UMFPACK for 64-bit.
 	* CSparse.cc (UMFPACK_ZNAME): Replace all umfpack_zi_* with 
 	UMFPACK_ZNAME(*).
 	* SparseCmplxLU.cc (UMFPACK_ZNAME): ditto
 
-	* dSparse.h (UMFPACK_DNAME): Define macro to pick version of UMFPACK for
-	64-bit.
+	* dSparse.h (UMFPACK_DNAME): Define macro to pick version of
+	UMFPACK for 64-bit.
 	* dSparse.cc (UMFPACK_DNAME): Replace all umfpack_di_* with 
 	UMFPACK_DNAME(*).
 	* SparsedbleLU.cc (UMFPACK_DNAME): ditto
 
-	* dSparse.cc (ltsolve, utsolve): Correct permuted upper/lower triangular
-	back/forward substitution code.
+	* dSparse.cc (ltsolve, utsolve): Correct permuted upper/lower
+	triangular back/forward substitution code.
 	* CSparse.cc (ltsolve, utsolve): ditto.
 
-	* dSparse.cc (solve): Use mattype.type (false) to force messaging from
-	spparms("spumoni",1).
+	* dSparse.cc (solve): Use mattype.type (false) to force messaging
+	from spparms("spumoni",1).
 	* CSparse.cc (solve): ditto
 
-	* SparseType.cc (SparseType(void)): Print info for spparms("spumoni",1).
+	* SparseType.cc (SparseType(void)): Print info for
+	spparms("spumoni",1).
 	(SparseType(const matrix_type), SparseType(const matrix_type, const
 	octave_idx_type, const octave_idx_type*), SparseType(const matrix_type,
 	const octave_idx_type, const octave_idx_type)): New constructors.
 	(SparseType (const SparseMatrix&), SparseType (SparseComplexMatrix&)):
-	Detect row permuted lower triangular and column permuted upper triangular
-	matrices. Remove one of the permutation vectors..
+	Detect row permuted lower triangular and column permuted upper
+	triangular matrices. Remove one of the permutation vectors..
 
 	* SparseType.h: Simplify the permutation code.
 	(SparseType(const matrix_type), SparseType
 	(const matrix_type, const octave_idx_type, const octave_idx_type*), 
 	SparseType(const matrix_type, const octave_idx_type, 
 	const octave_idx_type)): Declarations.
 	
 2005-04-25  John W. Eaton  <jwe@octave.org>
diff --git a/liboctave/Makefile.in b/liboctave/Makefile.in
--- a/liboctave/Makefile.in
+++ b/liboctave/Makefile.in
@@ -15,17 +15,17 @@ VPATH = @srcdir@:@srcdir@/COLAMD
 include $(TOPDIR)/Makeconf
 
 INSTALL = @INSTALL@
 INSTALL_PROGRAM = @INSTALL_PROGRAM@
 INSTALL_DATA = @INSTALL_DATA@
 
 LINK_DEPS = \
   -L../libcruft -L../glob -L. $(RLD_FLAG) \
-  $(LIBCRUFT) $(BLAS_LIBS) $(FFTW_LIBS) $(UMFPACK_LIBS) $(LIBREADLINE) \
+  $(LIBCRUFT) $(UMFPACK_LIBS) $(BLAS_LIBS) $(FFTW_LIBS) $(LIBREADLINE) \
   $(LIBS) $(FLIBS)
 
 include $(srcdir)/COLAMD.files
 
 MATRIX_INC := Array.h Array2.h Array3.h ArrayN.h DiagArray2.h \
 	Array-flags.h Array-util.h ArrayN-idx.h MArray-defs.h \
 	MArray.h MArray2.h MDiagArray2.h Matrix.h MArrayN.h \
 	base-lu.h dim-vector.h mx-base.h mx-op-defs.h mx-ops.h \
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,16 @@
+2005-05-02  John W. Eaton  <jwe@octave.org>
+
+	* Makefile.in (octave$(EXEEXT)): List $(UMFPACK_LIBS) ahead of
+	$(BLAS_LIBS).
+	(OCTAVE_LIBS): Include $(GLPK_LIBS) in the list if dynamic linking
+	is not enabled.
+	From Dmitri A. Sergatskov <dasergatskov@gmail.com>.
+
 2005-05-02  John W. Eaton  <jwe@octave.org>
 
 	* oct-map.h, oct-map.cc (Octave_map::seek, Octave_map::contents):
 	New non-const versions.
 	(Octave_map::assign (const octave_value_list&,
 	const std::string&, const Cell&)): Allow both tmp RHS and LHS to
 	be resized.  For clarity, always resize to new_dims.
 
diff --git a/src/Makefile.in b/src/Makefile.in
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -230,26 +230,32 @@ VAR_2 := $(patsubst %.y, %.df, $(VAR_3))
 VAR_1 := $(patsubst %.l, %.df, $(VAR_2))
 VAR_FILES := $(patsubst %.cc, %.df, $(VAR_1))
 
 DOC_FILES := $(sort $(DEF_FILES) $(VAR_FILES))
 
 OCTAVE_LFLAGS = -L$(TOPDIR)/liboctave -L$(TOPDIR)/libcruft \
   -L$(TOPDIR)/src $(RLD_FLAG)
 
-OCTAVE_LIBS = $(LIBOCTINTERP) $(LIBOCTAVE) \
-  $(SPECIAL_MATH_LIB) $(LIBCRUFT) \
-  $(LIBPLPLOT) $(LIBDLFCN)
+if ($(ENABLE_DYNAMIC_LINKING), true)
+  OCTAVE_LIBS = $(LIBOCTINTERP) $(LIBOCTAVE) \
+    $(SPECIAL_MATH_LIB) $(LIBCRUFT) \
+    $(LIBPLPLOT) $(LIBDLFCN)
+else
+  OCTAVE_LIBS = $(LIBOCTINTERP) $(LIBOCTAVE) \
+    $(GLPK_LIBS) $(SPECIAL_MATH_LIB) $(LIBCRUFT) \
+    $(LIBPLPLOT) $(LIBDLFCN)
+endif
 
 OCTINTERP_LINK_DEPS = \
   -L../liboctave $(LIBOCTAVE) -L../libcruft $(LIBCRUFT) $(LIBS) $(FLIBS)
 
 OCT_LINK_DEPS = \
   -L../libcruft $(LIBCRUFT) -L../liboctave $(LIBOCTAVE) \
-  -L. $(LIBOCTINTERP) $(BLAS_LIBS) $(FFTW_LIBS) $(UMFPACK_LIBS) $(LIBS) $(FLIBS)
+  -L. $(LIBOCTINTERP) $(UMFPACK_LIBS) $(BLAS_LIBS) $(FFTW_LIBS) $(LIBS) $(FLIBS)
 
 DISTFILES = Makefile.in ChangeLog mkdefs mkops mkgendoc \
 	DOCSTRINGS mkbuiltins mk-oct-links \
 	defaults.h.in oct-conf.h.in octave.gperf oct-gperf.h \
 	octave.cc parse.cc lex.cc y.tab.h gplot.cc \
 	$(INCLUDES) $(DIST_SRC) $(OPT_HANDLERS) $(EXTRAS)
 
 all: octave$(EXEEXT) stamp-oct-links PKG_ADD DOCSTRINGS
@@ -305,17 +311,17 @@ stamp-prereq: defaults.h oct-conf.h oct-
 	touch stamp-prereq
 
 octave$(EXEEXT): stamp-prereq $(LIBRARIES) main.o $(DLD_STATIC_OBJ)
 	$(LD_CXX) $(CPPFLAGS) $(ALL_CXXFLAGS) $(RDYNAMIC_FLAG) \
 	$(ALL_LDFLAGS) -o $@ \
 	main.o $(DLD_STATIC_OBJ) \
 	$(OCTAVE_LFLAGS) \
 	$(OCTAVE_LIBS) \
-	$(LEXLIB) $(BLAS_LIBS) $(FFTW_LIBS) $(UMFPACK_LIBS) $(LIBS) $(FLIBS)
+	$(LEXLIB) $(UMFPACK_LIBS) $(BLAS_LIBS) $(FFTW_LIBS) $(LIBS) $(FLIBS)
 
 stmp-pic: pic
 	@if [ -f stmp-pic ]; then \
 	  true; \
 	else \
 	  echo "touch stmp-pic"; \
 	  touch stmp-pic; \
 	fi
