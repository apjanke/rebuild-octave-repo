# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1219951861 14400
#      Thu Aug 28 15:31:01 2008 -0400
# Node ID 595028fcf65d29758f9763bf6791ad19002a6218
# Parent  8468140fd997a3382ef2d539eeec3f31d6166030
doc fix

diff --git a/doc/interpreter/func.txi b/doc/interpreter/func.txi
--- a/doc/interpreter/func.txi
+++ b/doc/interpreter/func.txi
@@ -333,17 +333,17 @@ along with a warning.
 
 @DOCSTRING(nargchk)
 
 @DOCSTRING(nargoutchk)
 
 @node Variable-length Argument Lists
 @section Variable-length Argument Lists
 @cindex variable-length argument lists
-@cindex @code{varargin}
+@vrindex @code{varargin}
 
 Sometimes the number of input arguments is not known when the function
 is defined.  As an example think of a function that returns the smallest
 of all its input arguments.  For example,
 
 @example
 a = smallest (1, 2, 3);
 b = smallest (1, 2, 3, 4);
@@ -417,17 +417,17 @@ print_arguments (1, "two", 3);
 @end group
 @end example
 
 @DOCSTRING(parseparams)
 
 @node Variable-length Return Lists
 @section Variable-length Return Lists
 @cindex variable-length return lists
-@cindex @code{varargout}
+@vrindex @code{varargout}
 
 It is possible to return a variable number of output arguments from a
 function using a syntax that's similar to the one used with the
 special @code{varargin} parameter name.  To let a function return a
 variable number of output arguments the special output parameter name
 @code{varargout} is used.  As with @code{varargin}, @code{varargout} is
 a cell array that will contain the requested output arguments.
 
