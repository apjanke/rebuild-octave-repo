# HG changeset patch
# User Rik <rik@octave.org>
# Date 1466201938 25200
#      Fri Jun 17 15:18:58 2016 -0700
# Node ID 241d39c66e8fd92985ba6f3efb585baca43602ac
# Parent  835d070ede9c90687d255d6d2a362a1b23f71e67
Update graphics properties for figure object.

* NEWS: Announce addition of GraphicsSmoothing property.

* graphics.in.h: Deprecate, by making hidden, the following properties:
doublebuffer, mincolormap, wvisual, wvisualmode, xdisplay, xvisual,
xvisualmode.  Replace hidden __enhanced__ property with GraphicsSmoothing.

* genpropdoc.m: Update documentation for figure properties.

* gl-render.cc (draw_figure, draw_uipanel, draw_uibuttongroup): Test
GraphicsSmoothing property, not __enhanced__, to decide about anti-aliasing.

diff --git a/NEWS b/NEWS
--- a/NEWS
+++ b/NEWS
@@ -77,16 +77,19 @@ Summary of important user-visible change
  ** Dialog boxes--errordlg, helpdlg, inputdlg, listdlg, msgbox,
     questdlg, and warndlg--now exclusively use Qt for rendering.
     Java based versions have been removed.
 
  ** The graphics property 'erasemode' has been hidden, and will
     eventually be removed.  This property has also been removed
     from Matlab, and was never implemented in Octave.
 
+ ** The graphics property 'graphicssmothing' for figures now controls whether
+    anti-aliasing will be use for lines.  The default is "on".
+
  ** Other new functions added in 4.2:
 
       audioformats
       deg2rad
       dialog
       evalc
       hash
       im2double
diff --git a/doc/interpreter/genpropdoc.m b/doc/interpreter/genpropdoc.m
--- a/doc/interpreter/genpropdoc.m
+++ b/doc/interpreter/genpropdoc.m
@@ -323,29 +323,29 @@ only if the figure's callback @code{wind
 @item The pointer was moved while pressing the mouse button (drag)\n\
 only if the figure's callback @code{windowbuttonmotionfcn} is defined\n\
 @end table";
         s.valid = valid_2elvec;
 
       case "dockcontrols"
         s.doc = doc_unused;
 
-      case "doublebuffer"
-
       case "filename"
         s.doc = "The filename used when saving the plot figure.";
         s.valid = valid_string;
 
       case "graphicssmoothing"
-        s.doc = doc_unused;
+        s.doc = "Use smoothing techniques to reduce the appearance of jagged lines.";
 
       case "integerhandle"
         s.doc = "Assign the next lowest unused integer as the Figure number.";
 
       case "inverthardcopy"
+        s.doc = "Replace the figure and axes background color with white when printing.";
+
       case "keypressfcn"
         s.valid = valid_fcn;
 
       case "keyreleasefcn"
         s.doc = "With @code{keypressfcn}, the keyboard callback functions.  \
 These callback functions are called when a key is pressed/released \
 respectively.  The functions are called with two input arguments.  The first \
 argument holds the handle of the calling figure.  The second argument holds \
@@ -383,26 +383,27 @@ value in the figure title bar.";
 
       case "outerposition"
         s.valid = valid_4elvec;
 
       case "paperorientation"
         s.doc = "The value for the @code{papersize}, and @code{paperposition} \
 properties depends upon __prop__.  The horizontal and vertical values for \
 @code{papersize} and @code{paperposition} reverse order \
-when __prop__ is switched between @code{\"portrait\"} and either \
-@code{\"landscape\"} or @code{\"rotated\"}."
+when __prop__ is switched between @code{\"portrait\"} and \
+@code{\"landscape\"}."
 
       case "paperposition"
         s.doc = "Vector @code{[left bottom width height]} defining the \
 position and size of the figure (in @code{paperunits} units) on the printed \
 page.  The position @code{[left bottom]} defines the lower left corner of the \
 figure on the page, and the size is defined by @code{[width height]}.  For \
-output formats not implicity rendered on paper, @code{width} and @code{height} \
-define the size of the image and the position information is ignored.  \
+output formats not implicitly rendered on paper, @code{width} and \
+@code{height} define the size of the image and the position information is \
+ignored.  \
 __modemsg__.";
         s.valid = valid_4elvec;
 
       case "paperpositionmode"
         s.doc = "If __prop__ is set to @qcode{\"auto\"}, the \
 @code{paperposition} property is automatically computed: the printed \
 figure will have the same size as the on-screen figure and will be centered \
 on the output page.  Setting the __prop__ to @code{\"auto\"} does not modify \
@@ -441,22 +442,24 @@ units (ex: @code{\"inches\"}) and @code{
 
       case "renderer"
       case "renderermode"
 
       case "resize"
         s.doc = doc_unused;
 
       case "resizefcn"
+        s.doc = "__prop__ is deprecated.  Use @code{sizechangedfcn} instead."
         s.valid = valid_fcn;
 
       case "selectiontype"
         ## FIXME: docstring explaining what "{normal}|open|alt|extend" mean.
 
       case "sizechangedfcn"
+        s.doc = "Callback triggered when the figure window size is changed."
         s.valid = valid_fcn;
 
       case "toolbar"
         s.doc = "Control the display of the toolbar along the bottom of the \
 figure window.  When set to @qcode{\"auto\"}, the display is based on the \
 value of the @code{menubar} property.";
 
       case "units"
@@ -488,23 +491,16 @@ released respectively.  When these callb
         s.valid = valid_fcn;
 
       case "windowscrollwheelfcn"
         s.valid = valid_fcn;
 
       case "windowstyle"
         s.doc = doc_unused;
 
-      ## FIXME: Need to deprecate these for 4.2
-      case "wvisual"
-      case "wvisualmode"
-      case "xdisplay"
-      case "xvisual"
-      case "xvisualmode"
-
     endswitch
 
   ## Axes properties
   elseif (strcmp (objname, "axes"))
     switch (field)
       ## Overridden shared properties
       case "clipping"
         s.doc = doc_unused;
diff --git a/libinterp/corefcn/gl-render.cc b/libinterp/corefcn/gl-render.cc
--- a/libinterp/corefcn/gl-render.cc
+++ b/libinterp/corefcn/gl-render.cc
@@ -679,17 +679,17 @@ gl_get_string (GLenum id)
 
 #endif
 
 void
 opengl_renderer::draw_figure (const figure::properties& props)
 {
   // Initialize OpenGL context
 
-  init_gl_context (props.is___enhanced__ (), props.get_color_rgb ());
+  init_gl_context (props.is_graphicssmoothing (), props.get_color_rgb ());
 
 #if defined (HAVE_OPENGL)
 
   props.set___gl_extensions__ (gl_get_string (GL_EXTENSIONS));
   props.set___gl_renderer__ (gl_get_string (GL_RENDERER));
   props.set___gl_vendor__ (gl_get_string (GL_VENDOR));
   props.set___gl_version__ (gl_get_string (GL_VERSION));
 
@@ -705,17 +705,17 @@ opengl_renderer::draw_uipanel (const uip
                                const graphics_object& go)
 {
   graphics_object fig = go.get_ancestor ("figure");
   const figure::properties& figProps =
     dynamic_cast<const figure::properties&> (fig.get_properties ());
 
   // Initialize OpenGL context
 
-  init_gl_context (figProps.is___enhanced__ (),
+  init_gl_context (figProps.is_graphicssmoothing (),
                    props.get_backgroundcolor_rgb ());
 
   // Draw children
 
   draw (props.get_all_children (), false);
 }
 
 void
@@ -723,17 +723,17 @@ opengl_renderer::draw_uibuttongroup (con
                                      const graphics_object& go)
 {
   graphics_object fig = go.get_ancestor ("figure");
   const figure::properties& figProps =
     dynamic_cast<const figure::properties&> (fig.get_properties ());
 
   // Initialize OpenGL context
 
-  init_gl_context (figProps.is___enhanced__ (),
+  init_gl_context (figProps.is_graphicssmoothing (),
                    props.get_backgroundcolor_rgb ());
 
   // Draw children
 
   draw (props.get_all_children (), false);
 }
 
 void
diff --git a/libinterp/corefcn/graphics.in.h b/libinterp/corefcn/graphics.in.h
--- a/libinterp/corefcn/graphics.in.h
+++ b/libinterp/corefcn/graphics.in.h
@@ -3377,76 +3377,81 @@ public:
       callback_property closerequestfcn , "closereq"
       color_property color , color_property (color_values (1, 1, 1), radio_values ("none"))
       array_property colormap , viridis_colormap ()
       handle_property currentaxes S , graphics_handle ()
       string_property currentcharacter r , ""
       handle_property currentobject r , graphics_handle ()
       array_property currentpoint r , Matrix (2, 1, 0)
       bool_property dockcontrols , "off"
-      bool_property doublebuffer , "on"
       string_property filename , ""
       bool_property graphicssmoothing , "on"
       bool_property integerhandle S , "on"
       bool_property inverthardcopy , "on"
       callback_property keypressfcn , Matrix ()
       callback_property keyreleasefcn , Matrix ()
-      radio_property menubar , "none|{figure}"
-      double_property mincolormap , 64
+      radio_property menubar , "{figure}|none"
       string_property name , ""
       // FIXME: Need RO property which returns current figure number.
       // double_property number r ,
-      radio_property nextplot , "new|{add}|replacechildren|replace"
+      radio_property nextplot , "{add}|new|replace|replacechildren"
       bool_property numbertitle , "on"
       array_property outerposition s , Matrix (1, 4, -1.0)
-      radio_property paperorientation U , "{portrait}|landscape|rotated"
+      radio_property paperorientation U , "{portrait}|landscape"
       array_property paperposition m , default_figure_paperposition ()
+      // FIXME: Matlab default is "auto", but this messes up hgsave BIST test.
       radio_property paperpositionmode au , "auto|{manual}"
       array_property papersize U , default_figure_papersize ()
       radio_property papertype SU , "{usletter}|uslegal|a0|a1|a2|a3|a4|a5|b0|b1|b2|b3|b4|b5|arch-a|arch-b|arch-c|arch-d|arch-e|a|b|c|d|e|tabloid|<custom>"
       radio_property paperunits Su , "{inches}|centimeters|normalized|points"
       radio_property pointer , "crosshair|fullcrosshair|{arrow}|ibeam|watch|topl|topr|botl|botr|left|top|right|bottom|circle|cross|fleur|custom|hand"
       array_property pointershapecdata , Matrix (16, 16, 0)
       array_property pointershapehotspot , Matrix (1, 2, 0)
       array_property position s , default_figure_position ()
       radio_property renderer m , "{opengl}|painters"
       radio_property renderermode , "{auto}|manual"
       bool_property resize , "on"
+      // FIXME: resizefcn has been deprecated by Matlab, and 
+      //        replaced with sizechangedfcn
+      //        Eventually this will need to be hidden, and then removed.
       callback_property resizefcn , Matrix ()
-      radio_property selectiontype , "{normal}|open|alt|extend"
-      // FIXME: This is the new name for the resizefcn from Matlab.
-      //        Need to try supporting both for some amount of time.
+      radio_property selectiontype , "{normal}|extend|alt|open"
       callback_property sizechangedfcn , Matrix ()
-      radio_property toolbar , "none|{auto}|figure"
-      radio_property units Su , "inches|centimeters|normalized|points|{pixels}|characters"
+      radio_property toolbar , "{auto}|figure|none"
+      radio_property units Su , "{pixels}|normalized|inches|centimeters|points|characters"
       callback_property windowbuttondownfcn , Matrix ()
       callback_property windowbuttonmotionfcn , Matrix ()
       callback_property windowbuttonupfcn , Matrix ()
       callback_property windowkeypressfcn , Matrix ()
       callback_property windowkeyreleasefcn , Matrix ()
       callback_property windowscrollwheelfcn , Matrix ()
       radio_property windowstyle , "{normal}|modal|docked"
-      string_property wvisual m , ""
-      radio_property wvisualmode , "{auto}|manual"
-      string_property xdisplay , ""
-      string_property xvisual m , ""
-      radio_property xvisualmode , "{auto}|manual"
       // Octave-specific properties
-      bool_property __enhanced__ h , "on"
       mutable string_property __gl_extensions__ hr , ""
       mutable string_property __gl_renderer__ hr , ""
       mutable string_property __gl_vendor__ hr , ""
       mutable string_property __gl_version__ hr , ""
       string_property __graphics_toolkit__ hs , gtk_manager::default_toolkit ()
       any_property __guidata__ h , Matrix ()
       radio_property __mouse_mode__ hS , "{none}|pan|rotate|select|text|zoom"
       any_property __pan_mode__ h , Matrix ()
       any_property __plot_stream__ h , Matrix ()
       any_property __rotate_mode__ h , Matrix ()
       any_property __zoom_mode__ h , Matrix ()
+
+      // Obsolete properties: doublebuffer, mincolormap, wvisual, wvisualmode,
+      //                      xdisplay, xvisual, xvisualmode
+      // FIXME: Remove in version 4.6 
+      bool_property doublebuffer h , "on"
+      double_property mincolormap h , 64
+      string_property wvisual hm , ""
+      radio_property wvisualmode h , "{auto}|manual"
+      string_property xdisplay h , ""
+      string_property xvisual hm , ""
+      radio_property xvisualmode h , "{auto}|manual"
     END_PROPERTIES
 
   protected:
     void init (void)
     {
       alphamap.add_constraint (dim_vector (-1, 1));
       colormap.add_constraint (dim_vector (-1, 3));
       outerposition.add_constraint (dim_vector (1, 4));
diff --git a/libinterp/dldfcn/__init_gnuplot__.cc b/libinterp/dldfcn/__init_gnuplot__.cc
--- a/libinterp/dldfcn/__init_gnuplot__.cc
+++ b/libinterp/dldfcn/__init_gnuplot__.cc
@@ -85,17 +85,17 @@ public:
 
         switch (id)
           {
           case base_properties::ID_VISIBLE:
             if (! props.is_visible ())
               {
                 send_quit (props.get___plot_stream__ ());
                 props.set___plot_stream__ (Matrix ());
-                props.set___enhanced__ (false);
+                props.set_graphicssmoothing (false);
               }
             break;
           }
       }
   }
 
   void redraw_figure (const graphics_object& go) const
   {
