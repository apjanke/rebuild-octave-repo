# HG changeset patch
# User Stefan Miereis <stefan.miereis@gmx.de>
# Date 1441407747 -7200
#      Sat Sep 05 01:02:27 2015 +0200
# Node ID 9502e0142c198534d78f250e61731b30d63f7e8c
# Parent  315b7d51d6c86e14e407913aaacb73bea1d81324
Simplify error output if max_recursion_depth is exceeded (Bug #45843).

* error.cc (pr_where): Call unique on std::list frames.

* toplev.h (operator==): Declare equality operator for
octave_call_stack::stack_frame.

* toplev.cc (operator==): Implement equality operator for
octave_call_stack::stack_frame.

diff --git a/libinterp/corefcn/error.cc b/libinterp/corefcn/error.cc
--- a/libinterp/corefcn/error.cc
+++ b/libinterp/corefcn/error.cc
@@ -309,16 +309,20 @@ pr_where (const char *who)
   std::list<octave_call_stack::stack_frame> frames
     = octave_call_stack::backtrace_frames ();
 
   size_t nframes = frames.size ();
 
   if (nframes > 0)
     pr_where_1 ("%s: called from\n", who);
 
+  // Print the error message only if it is different from the previous one;
+  // Makes the output more concise and readable.
+  frames.unique ();
+
   for (std::list<octave_call_stack::stack_frame>::const_iterator p = frames.begin ();
        p != frames.end (); p++)
     {
       const octave_call_stack::stack_frame& elt = *p;
 
       std::string fcn_name = elt.fcn_name ();
       int line = elt.line ();
       int column = elt.column ();
diff --git a/libinterp/corefcn/toplev.cc b/libinterp/corefcn/toplev.cc
--- a/libinterp/corefcn/toplev.cc
+++ b/libinterp/corefcn/toplev.cc
@@ -125,16 +125,31 @@ octave_call_stack::stack_frame::fcn_name
       retval += m_fcn->name ();
     }
   else
     retval = "<unknown>";
 
   return retval;
 }
 
+bool
+octave_call_stack::stack_frame::operator== (const octave_call_stack::stack_frame &rhs) const
+{
+  if (this->line () != rhs.line ())
+    return false;
+  else if (this->column () != rhs.column ())
+    return false;
+  else if (this->fcn_file_name () != rhs.fcn_file_name ())
+    return false;
+  else if (this->fcn_name () != rhs.fcn_name ())
+    return false;
+  else
+    return true;
+}
+
 void
 octave_call_stack::create_instance (void)
 {
   instance = new octave_call_stack ();
 
   if (instance)
     {
       instance->do_push (0, symbol_table::top_scope (), 0);
diff --git a/libinterp/corefcn/toplev.h b/libinterp/corefcn/toplev.h
--- a/libinterp/corefcn/toplev.h
+++ b/libinterp/corefcn/toplev.h
@@ -102,16 +102,18 @@ public:
     int line (void) const { return m_line; }
 
     int column (void) const { return m_column; }
 
     std::string fcn_file_name (void) const;
 
     std::string fcn_name (bool print_subfn = true) const;
 
+    bool operator== (const stack_frame &rhs) const;
+
   private:
 
     octave_function *m_fcn;
     int m_line;
     int m_column;
     symbol_table::scope_id m_scope;
     symbol_table::context_id m_context;
     size_t m_prev;
