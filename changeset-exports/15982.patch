# HG changeset patch
# User Torsten <ttl@justmail.de>
# Date 1359321739 -3600
#      Sun Jan 27 22:22:19 2013 +0100
# Node ID 131d40cd805b758632323cdfa0b1faf0315dfd53
# Parent  e3873531dd7c63a66cb2e07a2652bf3132b412dd
gui: cleanup some string constants for translations

* file-editor.h: deleted constants for file filters and name for new files
* file-editor.cc (request_open_file): translate file filter in open dialog
* file-editor.cc (request_new_file): create new edit tab with empty title
  because the title is updated later
* file-editor-tab.cc (update_window_title): translate unnamed title
* file-editor-tab.cc (save_file_as): translate file filter, shorter warning
  message when new file name is the same as the current one

diff --git a/libgui/src/m-editor/file-editor-tab.cc b/libgui/src/m-editor/file-editor-tab.cc
--- a/libgui/src/m-editor/file-editor-tab.cc
+++ b/libgui/src/m-editor/file-editor-tab.cc
@@ -654,17 +654,17 @@ file_editor_tab::do_comment_selected_tex
     }
 }
 
 void
 file_editor_tab::update_window_title (bool modified)
 {
   QString title ("");
   if (_file_name.isEmpty () || _file_name.at (_file_name.count () - 1) == '/')
-    title = UNNAMED_FILE;
+    title = tr("<unnamed>");
   else
     {
       if ( _long_title )
         title = _file_name;
       else
         {
           QFileInfo file(_file_name);
           title = file.fileName();
@@ -861,17 +861,17 @@ file_editor_tab::save_file_as (bool remo
         }
       else
         {
           // The file name is actually the directory name from the
           // constructor argument.
           fileDialog->setDirectory (_file_name);
         }
     }
-  fileDialog->setNameFilter (SAVE_FILE_FILTER);
+  fileDialog->setNameFilter (tr("Octave Files (*.m);;All Files (*.*)"));
   fileDialog->setDefaultSuffix ("m");
   fileDialog->setAcceptMode (QFileDialog::AcceptSave);
   fileDialog->setViewMode (QFileDialog::Detail);
   if (remove_on_success)
     {
       connect (fileDialog, SIGNAL (fileSelected (const QString&)),
                this, SLOT (handle_save_file_as_answer_close (const QString&)));
       connect (fileDialog, SIGNAL (rejected ()),
@@ -892,17 +892,18 @@ file_editor_tab::message_duplicate_file_
 {
   // Could overwrite the file here (and tell user the file was
   // overwritten), but the user could have unintentionally
   // selected the same name not intending to overwrite.
 
   // Create a NonModal message about error.
   QMessageBox* msgBox = new QMessageBox (
           QMessageBox::Critical, tr ("Octave Editor"),
-          tr ("File not saved!  You've selected a file name\n\n     %1\n\nwhich is the same as the current file name.  Use ""Save"" to overwrite.  (Could allow overwriting, with message, if that is what folks want.)").
+          tr ("File not saved! The selected file name\n%1\n"
+              "is the same as the current file name").
           arg (saveFileName),
           QMessageBox::Ok, 0);
   msgBox->setWindowModality (Qt::NonModal);
   msgBox->setAttribute (Qt::WA_DeleteOnClose);
   msgBox->show ();
 }
 
 void
diff --git a/libgui/src/m-editor/file-editor.cc b/libgui/src/m-editor/file-editor.cc
--- a/libgui/src/m-editor/file-editor.cc
+++ b/libgui/src/m-editor/file-editor.cc
@@ -105,31 +105,31 @@ file_editor::request_new_file ()
 {
   // New file isn't a file_editor_tab function since the file
   // editor tab has yet to be created and there is no object to
   // pass a signal to.  Hence, functionality is here.
 
   file_editor_tab *fileEditorTab = new file_editor_tab (ced);
   if (fileEditorTab)
     {
-      add_file_editor_tab (fileEditorTab, UNNAMED_FILE);
-      fileEditorTab->new_file ();
+      add_file_editor_tab (fileEditorTab, "");  // new tab with empty title
+      fileEditorTab->new_file ();               // title is updated here
     }
 }
 
 void
 file_editor::request_open_file ()
 {
   // Open file isn't a file_editor_tab function since the file
   // editor tab has yet to be created and there is no object to
   // pass a signal to.  Hence, functionality is here.
 
   // Create a NonModal message.
   QFileDialog* fileDialog = new QFileDialog (this);
-  fileDialog->setNameFilter (SAVE_FILE_FILTER);
+  fileDialog->setNameFilter (tr("Octave Files (*.m);;All Files (*.*)"));
   fileDialog->setAcceptMode (QFileDialog::AcceptOpen);
   fileDialog->setViewMode (QFileDialog::Detail);
   fileDialog->setDirectory (ced);
   connect (fileDialog, SIGNAL (fileSelected (const QString&)),
            this, SLOT (request_open_file (const QString&)));
   fileDialog->setWindowModality (Qt::NonModal);
   fileDialog->setAttribute (Qt::WA_DeleteOnClose);
   fileDialog->show ();
diff --git a/libgui/src/m-editor/file-editor.h b/libgui/src/m-editor/file-editor.h
--- a/libgui/src/m-editor/file-editor.h
+++ b/libgui/src/m-editor/file-editor.h
@@ -28,18 +28,16 @@ along with Octave; see the file COPYING.
 #include <QMenuBar>
 #include <QStatusBar>
 #include <QCloseEvent>
 #include <QTabWidget>
 
 #include "file-editor-interface.h"
 #include "file-editor-tab.h"
 
-const char UNNAMED_FILE[]     = "<unnamed>";
-const char SAVE_FILE_FILTER[] = "Octave Files (*.m);;All Files (*.*)";
 enum editor_markers
   {
     bookmark,
     breakpoint,
     debugger_position
   };
 
 class file_editor : public file_editor_interface
