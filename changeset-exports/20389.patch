# HG changeset patch
# User Mike Miller <mtmiller@octave.org>
# Date 1437748805 14400
#      Fri Jul 24 10:40:05 2015 -0400
# Node ID 6bc09e953927d8a9052e88ba71ad7cd5ce54ae8b
# Parent  c16c446204e5564d26051f8884f39ba5e55ed9d0
Use octave_gmtime to write timestamp to mat-file format

* load-save.cc (write_header): Use octave_gmtime to write file header
timestamp rather than call nstrftime directly.

diff --git a/libinterp/corefcn/load-save.cc b/libinterp/corefcn/load-save.cc
--- a/libinterp/corefcn/load-save.cc
+++ b/libinterp/corefcn/load-save.cc
@@ -1199,26 +1199,27 @@ write_header (std::ostream& os, load_sav
       }
       break;
 
     case LS_MAT5_BINARY:
     case LS_MAT7_BINARY:
       {
         char const * versionmagic;
         int16_t number = *(reinterpret_cast<const int16_t *>("\x00\x01"));
-        struct tm bdt;
-        time_t now;
         char headertext[128];
+        octave_gmtime now;
 
-        time (&now);
-        bdt = *gnulib::gmtime (&now);
+        // ISO 8601 format date
+        const char *matlab_format = "MATLAB 5.0 MAT-file, written by Octave "
+            OCTAVE_VERSION ", %Y-%m-%d %T UTC";
+        std::string comment_string = now.strftime (matlab_format);
+
+        size_t len = std::min (comment_string.length (), static_cast<size_t> (124));
         memset (headertext, ' ', 124);
-        // ISO 8601 format date
-        nstrftime (headertext, 124, "MATLAB 5.0 MAT-file, written by Octave "
-                   OCTAVE_VERSION ", %Y-%m-%d %T UTC", &bdt, 1, 0);
+        memcpy (headertext, comment_string.data (), len);
 
         // The first pair of bytes give the version of the MAT file
         // format.  The second pair of bytes form a magic number which
         // signals a MAT file.  MAT file data are always written in
         // native byte order.  The order of the bytes in the second
         // pair indicates whether the file was written by a big- or
         // little-endian machine.  However, the version number is
         // written in the *opposite* byte order from everything else!
