# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1500486993 14400
#      Wed Jul 19 13:56:33 2017 -0400
# Node ID 99a9e19bae41e76e3c037d1d070bc5bf9075dc98
# Parent  2387ce42760169a200ea80ae7f95caf0effc1ce6
* regexp.cc (octregexp): Correctly size and index tmp buffer.

diff --git a/libinterp/corefcn/regexp.cc b/libinterp/corefcn/regexp.cc
--- a/libinterp/corefcn/regexp.cc
+++ b/libinterp/corefcn/regexp.cc
@@ -450,18 +450,18 @@ octregexp (const octave_value_list& args
   // Alter the order of the output arguments
 
   if (extra_options)
     {
       int n = 0;
       octave_value_list new_retval;
       new_retval.resize (nargout);
 
-      OCTAVE_LOCAL_BUFFER (int, arg_used, 6);
-      for (int j = 0; j < 6; j++)
+      OCTAVE_LOCAL_BUFFER (int, arg_used, 7);
+      for (int j = 0; j < 7; j++)
         arg_used[j] = false;
 
       for (int j = 2; j < nargin; j++)
         {
           int k = 0;
           std::string str = args(j).string_value ();
           std::transform (str.begin (), str.end (), str.begin (), tolower);
 
@@ -497,17 +497,17 @@ octregexp (const octave_value_list& args
 
           if (n == nargout)
             break;
         }
 
       // Fill in the rest of the arguments
       if (n < nargout)
         {
-          for (int j = 0; j < 6; j++)
+          for (int j = 0; j < 7; j++)
             {
               if (! arg_used[j])
                 new_retval(n++) = retval(j);
             }
         }
 
       retval = new_retval;
     }
