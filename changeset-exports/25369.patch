# HG changeset patch
# User Torsten <mttl@mailbox.org>
# Date 1526144878 -7200
#      Sat May 12 19:07:58 2018 +0200
# Node ID c89fa0989e7bbcc9d552b5ffbc90f8ad64c5738b
# Parent  2dad85fe6b8bc79c9d66a31c106eb628004061de
prevent notifications on externally changed editor files (bug 53539)

* file-editor-tab.h: new private class variable for storing the last
  modification time of the current file

* file-editor-tab.cc (file_editor_tab): initialize new class variable;
  (set_file_name): store last modification time of the current file;
  (file_has_changed): do nothing if the last modification time of the
  file has not changed;

diff --git a/libgui/src/m-editor/file-editor-tab.cc b/libgui/src/m-editor/file-editor-tab.cc
--- a/libgui/src/m-editor/file-editor-tab.cc
+++ b/libgui/src/m-editor/file-editor-tab.cc
@@ -107,16 +107,19 @@ namespace octave
     _edit_area = new octave_qscintilla (this);
     _line = 0;
     _col  = 0;
 
     _bp_lines.clear ();      // start with empty lists of breakpoints
     _bp_conditions.clear ();
     m_bp_restore_count = 0;
 
+    // Initialize last modification date to now
+    m_last_modified = QDateTime::currentDateTimeUtc();
+
     // disable editor drag & drop so parent can handle
     _edit_area->setAcceptDrops (false);
 
     connect (_edit_area, SIGNAL (cursorPositionChanged (int, int)),
              this, SLOT (handle_cursor_moved (int,int)));
 
     connect (_edit_area, SIGNAL (SCN_CHARADDED (int)),
              this, SLOT (handle_char_added (int)));
@@ -429,18 +432,21 @@ namespace octave
   }
 
   void file_editor_tab::set_file_name (const QString& fileName)
   {
     // update tracked file if we really have a file on disk
     QStringList trackedFiles = _file_system_watcher.files ();
     if (! trackedFiles.isEmpty ())
       _file_system_watcher.removePath (_file_name);
-    if (! fileName.isEmpty ())
+    if (! fileName.isEmpty () && QFile::exists (fileName))
+    {
       _file_system_watcher.addPath (fileName);
+      m_last_modified =  QFileInfo (fileName).lastModified ().toUTC ();
+    }
 
     // update lexer and file name variable if file name changes
     if (_file_name != fileName)
       {
         _file_name = fileName;
         update_lexer ();
       }
 
@@ -2304,28 +2310,42 @@ namespace octave
   void file_editor_tab::handle_save_file_as_answer_cancel (void)
   {
     // User canceled, allow editing again.
     _edit_area->setReadOnly (false);
   }
 
   void file_editor_tab::file_has_changed (const QString&, bool do_close)
   {
+    bool file_exists = QFile::exists (_file_name);
+
+    if (file_exists)
+      {
+        // Test if file is really modified or if just the timezone has
+        // changed. In the latter, just return without doing anything
+        QDateTime modified = QFileInfo (_file_name).lastModified ().toUTC ();
+
+        if (modified <= m_last_modified)
+          return;
+
+        m_last_modified = modified;
+      }
+
     // Prevent popping up multiple message boxes when the file has
     // been changed multiple times by temporarily removing from the
     // file watcher.
     QStringList trackedFiles = _file_system_watcher.files ();
     if (! trackedFiles.isEmpty ())
       _file_system_watcher.removePath (_file_name);
 
-    if (QFile::exists (_file_name) && ! do_close)
+    if (file_exists && ! do_close)
       {
+
         // The file is modified
         if (_always_reload_changed_files)
-
           load_file (_file_name);
 
         else
           {
             // give editor and this tab the focus,
             // possibly making the editor visible if it is hidden
             emit set_focus_editor_signal (this);
             _edit_area->setFocus ();
diff --git a/libgui/src/m-editor/file-editor-tab.h b/libgui/src/m-editor/file-editor-tab.h
--- a/libgui/src/m-editor/file-editor-tab.h
+++ b/libgui/src/m-editor/file-editor-tab.h
@@ -20,16 +20,17 @@ along with Octave; see the file COPYING.
 
 */
 
 #if ! defined (octave_file_editor_tab_h)
 #define octave_file_editor_tab_h 1
 
 #include <QWidget>
 #include <QCloseEvent>
+#include <QDateTime>
 #include <QFileSystemWatcher>
 #include <QSettings>
 #include <QFileInfo>
 #include <Qsci/qsciapis.h>
 #include <QStatusBar>
 #include <QLabel>
 #include <QComboBox>
 
@@ -279,16 +280,17 @@ namespace octave
 
     QsciScintilla::EolMode _save_as_desired_eol;
 
     QString _file_name;
     QString _file_name_short;
     QString _ced;
     QString _encoding;
     QString _new_encoding;
+    QDateTime m_last_modified;
 
     bool _long_title;
     bool _copy_available;
     bool _is_octave_file;
     bool _always_reload_changed_files;
     bool _smart_indent;
     int _auto_endif;
 
