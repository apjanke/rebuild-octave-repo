# HG changeset patch
# User jwe
# Date 847779381 0
#      Tue Nov 12 06:16:21 1996 +0000
# Node ID 20db7604d5c6e745b48564c4a1e2911ddbe558d3
# Parent  bdd3a3eda1235e4e747219bffceed089f7f27026
[project @ 1996-11-12 06:16:21 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,15 @@
+Tue Nov 12 00:14:56 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* load-save.cc (read_binary_data): When reading string arrays, be
+	sure to create an octave_char_matrix_str object, not just an
+	octave_char_matrix object.
+	(read_ascii_data): Likewise.
+
 Mon Nov 11 22:52:58 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* load-save.cc (read_binary_data): Don't forget teminating NUL for
 	string that we plan to insert.
 	(read_ascii_data): Likewise.
 
 Sun Nov 10 16:58:07 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
diff --git a/src/load-save.cc b/src/load-save.cc
--- a/src/load-save.cc
+++ b/src/load-save.cc
@@ -580,17 +580,17 @@ read_ascii_data (istream& is, const stri
 			}
 		      delete [] tmp;
 		    }
 		  else
 		    error ("load: failed to extract string length for element %d", i+1);
 		}
 
 	      if (! error_state)
-		tc = chm;
+		tc = octave_value (chm, true);
 	    }
 	  else
 	    error ("load: failed to extract number of string elements");
 	}
       else if (strncmp (ptr, "string", 6) == 0)
 	{
 	  int len;
 	  if (extract_keyword (is, "length", len) && len > 0)
@@ -889,17 +889,17 @@ read_binary_data (istream& is, int swap,
 	      {
 		max_len = len;
 		chm.resize (elements, max_len, 0);
 	      }
 	    tmp [len] = '\0';
 	    chm.insert (tmp, i, 0);
 	    delete [] tmp;
 	  }
-	tc = chm;
+	tc = octave_value (chm, true);
       }
       break;
 
     default:
     data_read_error:
       error ("load: trouble reading binary file `%s'", filename.c_str ());
       delete [] name;
       name = 0;
