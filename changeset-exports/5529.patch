# HG changeset patch
# User jwe
# Date 1130941885 0
#      Wed Nov 02 14:31:25 2005 +0000
# Node ID 29d855ffcfadd2d12937a80c5b7ba48942e5f728
# Parent  480035e1c2b03e9b997c7ee3cbd5d74619658fe4
[project @ 2005-11-02 14:31:25 by jwe]

diff --git a/libcruft/ranlib/ignbin.f b/libcruft/ranlib/ignbin.f
--- a/libcruft/ranlib/ignbin.f
+++ b/libcruft/ranlib/ignbin.f
@@ -173,17 +173,17 @@ C     ..
 C     .. Data statements ..
 C     JJV made these ridiculous starting values - the hope is that
 C     JJV no one will call this the first time with them as args
       DATA psave,nsave/-1.0E37,-214748365/
 C     ..
 C     .. Executable Statements ..
       IF (pp.NE.psave) GO TO 10
       IF (n.NE.nsave) GO TO 20
-      IF (xnp-30.0.LT.0.0) GOTO 150
+      IF (xnp-30.0.LT.0.0) GO TO 150
       GO TO 30
 C
 C*****SETUP, PERFORM ONLY WHEN PARAMETERS CHANGE
 C
 
 C     JJV added the argument checker - involved only renaming 10
 C     JJV and 20 to the checkers and adding checkers
 C     JJV Only remaining problem - if called initially with the
@@ -268,17 +268,17 @@ C
           f = f* (g/i-r)
    90 CONTINUE
       GO TO 120
 
   100 ix1 = ix + 1
       DO 110 i = ix1,m
           f = f/ (g/i-r)
   110 CONTINUE
-  120 IF (v-f.LE.0) GOTO 170
+  120 IF (v-f.LE.0) GO TO 170
       GO TO 30
 C
 C     SQUEEZING USING UPPER AND LOWER BOUNDS ON ALOG(F(X))
 C
   130 amaxp = (k/xnpq)* ((k* (k/3.+.625)+.1666666666666)/xnpq+.5)
       ynorm = -k*k/ (2.*xnpq)
       alv = alog(v)
       IF (alv.LT.ynorm-amaxp) GO TO 170
@@ -295,17 +295,17 @@ C
       x2 = x1*x1
       f2 = f1*f1
       w2 = w*w
       IF (alv- (xm*alog(f1/x1)+ (n-m+.5)*alog(z/w)+ (ix-
      +    m)*alog(w*p/ (x1*q))+ (13860.- (462.- (132.- (99.-
      +    140./f2)/f2)/f2)/f2)/f1/166320.+ (13860.- (462.- (132.- (99.-
      +    140./z2)/z2)/z2)/z2)/z/166320.+ (13860.- (462.- (132.- (99.-
      +    140./x2)/x2)/x2)/x2)/x1/166320.+ (13860.- (462.- (132.- (99.-
-     +    140./w2)/w2)/w2)/w2)/w/166320. .LE. 0.)) GO TO 170
+     +    140./w2)/w2)/w2)/w2)/w/166320.) .LE. 0.) GO TO 170
       GO TO 30
 C
 C     INVERSE CDF LOGIC FOR MEAN LESS THAN 30
 C
   140 qn = q**n
       r = p/q
       g = r* (n+1)
   150 ix = 0
