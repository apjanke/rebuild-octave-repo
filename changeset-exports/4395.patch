# HG changeset patch
# User jwe
# Date 1051553696 0
#      Mon Apr 28 18:14:56 2003 +0000
# Node ID cc6d369355ec5cb210098d63841d1d500501b3a4
# Parent  13619163e1597366b06db6edd4553c0df2effa10
[project @ 2003-04-28 18:14:56 by jwe]

diff --git a/liboctave/kpse.cc b/liboctave/kpse.cc
--- a/liboctave/kpse.cc
+++ b/liboctave/kpse.cc
@@ -1298,19 +1298,18 @@ kpse_expand_kpse_dot (const std::string&
 	ret += kpse_dot + ENV_SEP_STRING;
       else if (elt_len > 1 && elt[0] == '.' && IS_DIR_SEP (elt[1]))
 	ret += kpse_dot + elt.substr (1) + ENV_SEP_STRING;
       else
 	ret += kpse_dot + DIR_SEP_STRING + elt + ENV_SEP_STRING;
     }
 
   int len = ret.length ();
-
   if (len > 0)
-    ret.resize (len - 1);
+    ret.resize (len-1);
 
   return ret;
 }
 
 /* Do brace expansion on ELT; then do variable and ~ expansion on each
    element of the result; then do brace expansion again, in case a
    variable definition contained braces (e.g., $TEXMF).  Return a
    string comprising all of the results separated by ENV_SEP_STRING.  */
@@ -1367,21 +1366,19 @@ kpse_brace_expand (const std::string& pa
     {
       std::string elt = *pi;
 
       /* Do brace expansion first, so tilde expansion happens in {~ka,~kb}.  */
       std::string expansion = kpse_brace_expand_element (elt);
       ret += expansion + ENV_SEP_STRING;
     }
 
-  /* Waste the last byte by overwriting the trailing env_sep with a null.  */
   size_t len = ret.length ();
-
   if (len > 0)
-    ret.resize (len - 1);
+    ret.resize (len-1);
 
   return kpse_expand_kpse_dot (ret);
 }
 
 /* Expand all special constructs in a path, and include only the actually
    existing directories in the result. */
 std::string
 kpse_path_expand (const std::string& path_arg)
@@ -1434,38 +1431,35 @@ kpse_path_expand (const std::string& pat
 	{
 	  str_llist_elt_type *dir;
 
 	  for (dir = *dirs; dir; dir = STR_LLIST_NEXT (*dir))
 	    {
 	      const std::string thedir = STR_LLIST (*dir);
 	      unsigned dirlen = thedir.length ();
 
+	      ret += thedir;
+	      len += dirlen;
+
 	      /* Retain trailing slash if that's the root directory.  */
 	      if (dirlen == 1
 		  || (dirlen == 3 && NAME_BEGINS_WITH_DEVICE (thedir)
 		      && IS_DIR_SEP (thedir[2])))
 		{
-		  ret += thedir + ENV_SEP_STRING;
-		  len += dirlen + 1;
-		  ret[len - 1] = ENV_SEP;
+		  ret += ENV_SEP_STRING;
+		  len++;
 		}
-	      else
-		{
-		  ret += thedir;
-		  len += dirlen;
-		  ret [len - 1] = ENV_SEP;
-		}
+
+	      ret[len-1] = ENV_SEP;
 	    }
 	}
     }
 
-  /* Get rid of trailing ':', if any. */
-  if (len != 0)
-    ret[len - 1] = 0;
+  if (len > 0)
+    ret.resize (len-1);
 
   return ret;
 }
 
 /* braces.c -- code for doing word expansion in curly braces. Taken from
    bash 1.14.5.  [Ans subsequently modified for kpatshea.]
 
    Copyright (C) 1987,1991 Free Software Foundation, Inc.
diff --git a/liboctave/pathsearch.cc b/liboctave/pathsearch.cc
--- a/liboctave/pathsearch.cc
+++ b/liboctave/pathsearch.cc
@@ -123,38 +123,29 @@ dir_path::init (void)
       std::string val = octave_env::getenv ("KPATHSEA_DEBUG");
 
       if (! val.empty ())
 	kpathsea_debug |= atoi (val.c_str ());
 
       octave_kpathsea_initialized = true;
     }
 
-  if (p_default.empty ())
-    p = kpse_path_expand (p_orig);
-  else
-    {
-      std::string s = kpse_expand_default (p_orig, p_default);
-
-      p = kpse_path_expand (s);
-    }
+  p = kpse_path_expand (p_default.empty ()
+			? p_orig : kpse_expand_default (p_orig, p_default));
 
   int count = 0;
   for (kpse_path_iterator pi (p); pi != NPOS; pi++)
     count++;
 
   pv.resize (count);
 
   kpse_path_iterator pi (p);
 
   for (int i = 0; i < count; i++)
-    {
-      pv[i] = *pi++;
-      std::cerr << pv[i] << std::endl;
-    }
+    pv[i] = *pi++;
 
   initialized = true;
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
