# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1553531085 0
#      Mon Mar 25 16:24:45 2019 +0000
# Node ID 392b14b0c085e5c560028a8fc84f15a59cef9ab9
# Parent  4ba3658176527e7ad3ca450470e4955bd0310f8a
override dispatch class for function handles (bug #45351)

* cdef-utils.cc (get_class_context): If dispatch class is set in call
stack, use it instead of looking at the dispatch class that is stored
in the current function.

diff --git a/libinterp/octave-value/cdef-utils.cc b/libinterp/octave-value/cdef-utils.cc
--- a/libinterp/octave-value/cdef-utils.cc
+++ b/libinterp/octave-value/cdef-utils.cc
@@ -236,23 +236,35 @@ namespace octave
     cdef_manager& cdm = __get_cdef_manager__ ("lookup_package");
 
     return cdm.find_package (name, error_if_not_found, load_if_not_found);
   }
 
   cdef_class
   get_class_context (std::string& name, bool& in_constructor)
   {
+    name = "";
+    in_constructor = false;
+
     cdef_class cls;
 
+    // If the dispatch class is set in the current stack frame it
+    // overrides whatever dispatch class there is for the currently
+    // executing function so that function handles returned from class
+    // methods will use the dispatch class of the class in which they
+    // are defined instead of the class in which they are executing.
+
     call_stack& cs = __get_call_stack__ ("get_class_context");
 
-    octave_function *fcn = cs.current ();
+    std::string dispatch_class = cs.get_dispatch_class ();
 
-    in_constructor = false;
+    if (! dispatch_class.empty ())
+      return lookup_class (dispatch_class);
+
+    octave_function *fcn = cs.current ();
 
     if (fcn && (fcn->is_class_method ()
                 || fcn->is_classdef_constructor ()
                 || fcn->is_anonymous_function_of_class ()
                 || (fcn->is_private_function ()
                     && ! fcn->dispatch_class ().empty ())))
       {
         cls = lookup_class (fcn->dispatch_class ());
