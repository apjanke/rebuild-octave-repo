# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1255604808 -7200
#      Thu Oct 15 13:06:48 2009 +0200
# Node ID 04386b72d3dfe46650d15dda48c1f9a4d8212244
# Parent  b7b89061bd0e5164d36c2cd951e797d077e1c51d
fix extract_function & add obsoleteness warning

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2009-10-15  Jaroslav Hajek  <highegg@gmail.com>
+
+	* variables.cc (extract_function): Pass 0 to eval_string to avoid
+	error.
+
 2009-10-14  Jaroslav Hajek  <highegg@gmail.com>
 
 	* ov.cc (octave_value::octave_value (const Array<std::string>&)): New
 	constructor.
 	* ov.h: Declare it.
 	* data.cc (Fnth_element): New DEFUN.
 
 2009-10-13  Jaroslav Hajek  <highegg@gmail.com>
diff --git a/src/variables.cc b/src/variables.cc
--- a/src/variables.cc
+++ b/src/variables.cc
@@ -154,28 +154,31 @@ extract_function (const octave_value& ar
       std::string cmd = header;
       cmd.append (s);
       cmd.append (trailer);
 
       if (! error_state)
 	{
 	  int parse_status;
 
-	  eval_string (cmd, true, parse_status);
+	  eval_string (cmd, true, parse_status, 0);
 
 	  if (parse_status == 0)
 	    {
 	      retval = is_valid_function (fname, warn_for, 0);
       
 	      if (! retval)
 		{
 		  error ("%s: `%s' is not valid as a function",
 			 warn_for.c_str (), fname.c_str ());
 		  return retval;
 		}
+
+              warning ("%s: passing function body as a string is obsolete."
+                       " Please use anonymous functions.", warn_for.c_str ());
 	    }
 	  else
 	    error ("%s: `%s' is not valid as a function",
 		   warn_for.c_str (), fname.c_str ());
 	}
       else
 	error ("%s: expecting first argument to be a string",
 	       warn_for.c_str ());
