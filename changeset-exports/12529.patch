# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1300565210 25200
#      Sat Mar 19 13:06:50 2011 -0700
# Node ID 0579a13f29a1c3fceb347b8fae04793273a087f7
# Parent  2ac5028e5cb7d32760ce86a618aff332feaf6ca1
Add isocolors, isonormals, isosurface functions to documentation.

diff --git a/doc/ChangeLog b/doc/ChangeLog
--- a/doc/ChangeLog
+++ b/doc/ChangeLog
@@ -1,8 +1,13 @@
+2010-03-19  Rik  <octave@nomad.inbox5.com>
+
+	* interpreter/plot.txi: Add isocolors, isonormals, isosurface functions
+	to documentation.
+
 2010-03-19  Rik  <octave@nomad.inbox5.com>
 
 	* interpreter/basics.txi: Add dump_prefs to documentation.
 
 2010-03-19  Rik  <octave@nomad.inbox5.com>
 
 	* interpreter/octave.texi, interpreter/plot.txi: Add daspect, pbaspect
 	functions to documentation.
diff --git a/doc/interpreter/plot.txi b/doc/interpreter/plot.txi
--- a/doc/interpreter/plot.txi
+++ b/doc/interpreter/plot.txi
@@ -342,16 +342,22 @@ three-dimensional plots.
 @DOCSTRING(surf)
 
 @DOCSTRING(surfc)
 
 @DOCSTRING(surfl)
 
 @DOCSTRING(surfnorm)
 
+@DOCSTRING(isosurface)
+
+@DOCSTRING(isonormals)
+
+@DOCSTRING(isocolors)
+
 @DOCSTRING(diffuse)
 
 @DOCSTRING(specular)
 
 @DOCSTRING(meshgrid)
 
 @DOCSTRING(ndgrid)
 
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2010-03-19  Rik  <octave@nomad.inbox5.com>
+
+	* plot/isocolors.m, plot/isonormals.m, plot/isosurface.m: Improve
+	docstrings.
+
 2010-03-19  Rik  <octave@nomad.inbox5.com>
 
 	* miscellaneous/dump_prefs.m: Close @deftypefn macro left open.
 
 2010-03-19  Rik  <octave@nomad.inbox5.com>
 
 	* miscellaneous/dump_prefs.m: Improve docstring.
 
diff --git a/scripts/plot/isocolors.m b/scripts/plot/isocolors.m
--- a/scripts/plot/isocolors.m
+++ b/scripts/plot/isocolors.m
@@ -20,17 +20,17 @@
 ## @deftypefn  {Function File} {[@var{cd}] =} isocolors (@var{c}, @var{v})
 ## @deftypefnx {Function File} {[@var{cd}] =} isocolors (@var{x}, @var{y}, @var{z}, @var{c}, @var{v})
 ## @deftypefnx {Function File} {[@var{cd}] =} isocolors (@var{x}, @var{y}, @var{z}, @var{r}, @var{g}, @var{b}, @var{v})
 ## @deftypefnx {Function File} {[@var{cd}] =} isocolors (@var{r}, @var{g}, @var{b}, @var{v})
 ## @deftypefnx {Function File} {[@var{cd}] =} isocolors (@dots{}, @var{p})
 ## @deftypefnx {Function File} isocolors (@dots{})
 ##
 ## If called with one output argument and the first input argument
-## @var{c} is a three--dimensional array that contains color values and
+## @var{c} is a three-dimensional array that contains color values and
 ## the second input argument @var{v} keeps the vertices of a geometry
 ## then return a matrix @var{cd} with color data information for the
 ## geometry at computed points
 ## @command{[x, y, z] = meshgrid (1:l, 1:m, 1:n)}.  The output argument
 ## @var{cd} can be taken to manually set FaceVertexCData of a patch.
 ##
 ## If called with further input arguments @var{x}, @var{y} and @var{z}
 ## which are three--dimensional arrays of the same size than @var{c}
@@ -87,17 +87,17 @@
 ## subplot (2, 2, 4); view (-38, 20);
 ## p = patch ("Faces", f, "Vertices", v, "EdgeColor", "none");
 ## r = g = b = repmat ([1:N] / N, [N, 1, N]); ## Black to white
 ## cdat = isocolors (x, y, z, r, g, b, v);
 ## set (p, "FaceVertexCData", cdat);
 ## isofinish (p);
 ## @end example
 ##
-## @seealso{isosurface, isonormals, isocaps}
+## @seealso{isosurface, isonormals}
 ##
 ## @end deftypefn
 
 ## Author: Martin Helm <martin@mhelm.de>
 
 function varargout = isocolors(varargin)
   calc_rgb = false;
   switch (nargin)
diff --git a/scripts/plot/isonormals.m b/scripts/plot/isonormals.m
--- a/scripts/plot/isonormals.m
+++ b/scripts/plot/isonormals.m
@@ -20,17 +20,17 @@
 ## @deftypefn  {Function File} {[@var{n}] =} isonormals (@var{val}, @var{v})
 ## @deftypefnx {Function File} {[@var{n}] =} isonormals (@var{val}, @var{p})
 ## @deftypefnx {Function File} {[@var{n}] =} isonormals (@var{x}, @var{y}, @var{z}, @var{val}, @var{v})
 ## @deftypefnx {Function File} {[@var{n}] =} isonormals (@var{x}, @var{y}, @var{z}, @var{val}, @var{p})
 ## @deftypefnx {Function File} {[@var{n}] =} isonormals (@dots{}, "negate")
 ## @deftypefnx {Function File} isonormals (@dots{}, @var{p})
 ##
 ## If called with one output argument and the first input argument
-## @var{val} is a three--dimensional array that contains the data for an
+## @var{val} is a three-dimensional array that contains the data for an
 ## isosurface geometry and the second input argument @var{v} keeps the
 ## vertices of an isosurface then return the normals @var{n} in form of
 ## a matrix with the same size than @var{v} at computed points
 ## @command{[x, y, z] = meshgrid (1:l, 1:m, 1:n)}.  The output argument
 ## @var{n} can be taken to manually set @var{VertexNormals} of a patch.
 ##
 ## If called with further input arguments @var{x}, @var{y} and @var{z}
 ## which are three--dimensional arrays with the same size than @var{val}
@@ -83,18 +83,17 @@
 ##
 ## subplot (2, 2, 4); view (-38, 20);
 ## p = patch ("Faces", f, "Vertices", v, "FaceVertexCData", cdat, \
 ##         "FaceColor", "interp", "EdgeColor", "none");
 ## isonormals (x, y, z, c, v, "negate"); ## Use reverse directly
 ## isofinish (p);
 ## @end example
 ##
-## @seealso {isosurface, isocolors, isocaps, marching_cube}
-##
+## @seealso{isosurface, isocolors}
 ## @end deftypefn
 
 ## Author: Martin Helm <martin@mhelm.de>
 
 function varargout = isonormals(varargin)
   na = nargin;
   negate = false;
   if (ischar (varargin{nargin}))
diff --git a/scripts/plot/isosurface.m b/scripts/plot/isosurface.m
--- a/scripts/plot/isosurface.m
+++ b/scripts/plot/isosurface.m
@@ -21,17 +21,17 @@
 ## @deftypefnx {Function File} {[@var{fv}] =} isosurface (@var{x}, @var{y}, @var{z}, @var{val}, @var{iso})
 ## @deftypefnx {Function File} {[@var{fv}] =} isosurface (@dots{}, "noshare", "verbose")
 ## @deftypefnx {Function File} {[@var{fvc}] =} isosurface (@dots{}, @var{col})
 ## @deftypefnx {Function File} {[@var{f}, @var{v}] =} isosurface (@var{x}, @var{y}, @var{z}, @var{val}, @var{iso})
 ## @deftypefnx {Function File} {[@var{f}, @var{v}, @var{c}] =} isosurface (@var{x}, @var{y}, @var{z}, @var{val}, @var{iso}, @var{col})
 ## @deftypefnx {Function File} {} isosurface (@var{x}, @var{y}, @var{z}, @var{val}, @var{iso}, @var{col}, @var{opt})
 ##
 ## If called with one output argument and the first input argument
-## @var{val} is a three--dimensional array that contains the data of an
+## @var{val} is a three-dimensional array that contains the data of an
 ## isosurface geometry and the second input argument @var{iso} keeps the
 ## isovalue as a scalar value then return a structure array @var{fv}
 ## that contains the fields @var{Faces} and @var{Vertices} at computed
 ## points @command{[x, y, z] = meshgrid (1:l, 1:m, 1:n)}.  The output
 ## argument @var{fv} can directly be taken as an input argument for the
 ## @command{patch} function.
 ##
 ## If called with further input arguments @var{x}, @var{y} and @var{z}
@@ -103,18 +103,17 @@
 ## subplot (2, 2, 4); view (-38, 20);
 ## p = patch ("Faces", f, "Vertices", v, "FaceVertexCData", c, \
 ##            "FaceColor", "interp", "EdgeColor", "blue");
 ## set (gca, "PlotBoxAspectRatioMode","manual", "PlotBoxAspectRatio", [1 1 1]);
 ## # set (p, "FaceLighting", "phong");
 ## # light ("Position", [1 1 5]);
 ## @end example
 ##
-## @seealso{isocolors, isonormals, isocaps}
-##
+## @seealso{isonormals, isocolors}
 ## @end deftypefn
 
 ## Author: Martin Helm <martin@mhelm.de>
 
 function varargout = isosurface(varargin)
 
   if (nargin < 2 || nargin > 8 || nargout > 3)
     print_usage ();
