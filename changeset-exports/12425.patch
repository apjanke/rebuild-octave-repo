# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1297210231 28800
#      Tue Feb 08 16:10:31 2011 -0800
# Branch release-3-4-x
# Node ID ecc90fe7c83868a381e6257ac09a6d0955cbb499
# Parent  4677298c00c2617d72594979086fbe06f1f118ca
NEWS: Use indent of 2 spaces rather than occasional 3 spaces.

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -21,16 +21,20 @@ 2011-01-31  John W. Eaton  <jwe@octave.o
 	* configure.ac (AC_INIT): Version is now 3.3.91.
 	(OCTAVE_API_VERSION_NUMBER): Now 45.
 	(OCTAVE_RELEASE_DATE): Now 2011-01-31.
 
 2011-02-08  Ben Abbott  <bpabbott@mac.com>
 
 	* README.MacOS: Add detail.
 
+2010-02-08  Rik  <octave@nomad.inbox5.com>
+
+	* NEWS: Use indentation of 2 spaces rather than 3 in code examples.
+
 2011-02-08  John W. Eaton  <jwe@octave.org>
 
 	* NEWS: Add note about subfunctions.
 
 2011-02-06  John W. Eaton  <jwe@octave.org>
 
 	* PROJECTS, README.devel: Use maintainers@octave.org instead of
 	octave-maintainers@octave.org.
diff --git a/NEWS b/NEWS
--- a/NEWS
+++ b/NEWS
@@ -1,14 +1,18 @@
 Summary of important user-visible changes for version 3.4:
 ---------------------------------------------------------
 
  ** BLAS and LAPACK libraries are now required to build Octave.  The
     subset of the reference BLAS and LAPACK libraries has been removed
     from the Octave sources.
+  
+ ** The ARPACK library is now distributed with Octave so it no longer
+    needs to be available as an external dependency when building
+    Octave.
 
  ** The `lookup' function was extended to be more useful for
     general-purpose binary searching.  Using this improvement, the
     ismember function was rewritten for significantly better
     performance.
 
  ** Real, integer and logical matrices, when used in indexing, will now
     cache the internal index_vector value (zero-based indices) when
@@ -147,19 +151,19 @@ Summary of important user-visible change
     optimizations and are thus significantly faster.
 
  ** Octave now allows user-defined `subsasgn' methods to optimize out
     redundant copies.  For more information, see the manual.
 
  ** More efficient matrix division handling.  Octave is now able to
     handle the expressions
     
-       M' \ V
-       M.' \ V
-       V / M 
+      M' \ V
+      M.' \ V
+      V / M 
 
     (M is a matrix and V is a vector) more efficiently in certain cases.
     In particular, if M is triangular, all three expressions will be
     handled by a single call to xTRTRS (from LAPACK), with appropriate
     flags.  Previously, all three expressions required a physical
     transpose of M.
 
  ** More efficient handling of certain mixed real-complex matrix
@@ -286,78 +290,78 @@ Summary of important user-visible change
     will automatically download the latest release of the general
     package and attempt to install it. No automatic resolving of
     dependencies is provided.  Further,
 
       pkg list -forge
     
     can be used to list all available packages.
 
-  ** The internal data representation of structs has been completely
-     rewritten to make certain optimizations feasible.  The field data
-     can now be shared between structs with equal keys but different
-     dimensions or values, making operations that preserve the fields
-     faster.  Economized storage is now used for scalar structs (just
-     like most other scalars), making their usage more
-     memory-efficient.  Certain array-like operations on structs
-     (concatenation, uniform cellfun, num2cell) have gained a
-     significant speed-up.  Additionally, the octave_scalar_map class
-     now provides a simpler interface to work with scalar structs within
-     a C++ DLD function.
+ ** The internal data representation of structs has been completely
+    rewritten to make certain optimizations feasible.  The field data
+    can now be shared between structs with equal keys but different
+    dimensions or values, making operations that preserve the fields
+    faster.  Economized storage is now used for scalar structs (just
+    like most other scalars), making their usage more
+    memory-efficient.  Certain array-like operations on structs
+    (concatenation, uniform cellfun, num2cell) have gained a
+    significant speed-up.  Additionally, the octave_scalar_map class
+    now provides a simpler interface to work with scalar structs within
+    a C++ DLD function.
 
-  ** Two new formats are available for displaying numbers:
+ ** Two new formats are available for displaying numbers:
 
-       format short eng
-       format long eng
+      format short eng
+      format long eng
 
-     Both display numbers in engineering notation, i.e., mantissa +
-     exponent where the exponent is a multiple of 3.
+    Both display numbers in engineering notation, i.e., mantissa +
+    exponent where the exponent is a multiple of 3.
 
-  ** The following functions are new in Octave 3.4:
+ ** The following functions are new in Octave 3.4:
 
-       accumdim    erfcx        nfields      pqpnonneg  uigetdir 
-       bitpack     fileread     nth_element  quadcc     uigetfile  
-       bitunpack   fminbnd      onCleanup    randi      uiputfile    
-       blkmm       fskipl       pbaspect     repelems   uimenu  
-       cbrt        ifelse       pie3         reset      whitebg
-       curl        ishermitian  powerset     rsf2csf    
-       chop        isindex      ppder        saveas          
-       daspect     luupdate     ppint        strread          
-       divergence  merge        ppjumps      textread 
+      accumdim    erfcx        nfields      pqpnonneg  uigetdir 
+      bitpack     fileread     nth_element  quadcc     uigetfile  
+      bitunpack   fminbnd      onCleanup    randi      uiputfile    
+      blkmm       fskipl       pbaspect     repelems   uimenu  
+      cbrt        ifelse       pie3         reset      whitebg
+      curl        ishermitian  powerset     rsf2csf    
+      chop        isindex      ppder        saveas          
+      daspect     luupdate     ppint        strread          
+      divergence  merge        ppjumps      textread 
 
-  ** Using the image function to view images with external programs such
-     as display, xv, and xloadimage is no longer supported.  The
-     image_viewer function has also been removed.
+ ** Using the image function to view images with external programs such
+    as display, xv, and xloadimage is no longer supported.  The
+    image_viewer function has also been removed.
+
+ ** The behavior of struct assignments to non-struct values has been
+    changed.  Previously, it was possible to overwrite an arbitrary
+    value:
 
-  ** The behavior of struct assignments to non-struct values has been
-     changed.  Previously, it was possible to overwrite an arbitrary
-     value:
-      
-        a = 1;
-        a.x = 2;
+      a = 1;
+      a.x = 2;
 
-     This is no longer possible unless a is an empty matrix or cell
-     array.
-  
-  ** The dlmread function has been extended to allow specifying a custom
-     value for empty fields.
+    This is no longer possible unless a is an empty matrix or cell
+    array.
+ 
+ ** The dlmread function has been extended to allow specifying a custom
+    value for empty fields.
 
-  ** The dlmread and dlmwrite functions have been modified to accept
-     file IDs (as returned by fopen) in addition to file names.
+ ** The dlmread and dlmwrite functions have been modified to accept
+    file IDs (as returned by fopen) in addition to file names.
 
-  ** Octave can now optimize away the interpreter overhead of an
-     anonymous function handle, if the function simply calls another
-     function or handle with some of its parameters bound to certain
-     values.  Example:
-     
-       f = @(x) sum (x, 1);
+ ** Octave can now optimize away the interpreter overhead of an
+    anonymous function handle, if the function simply calls another
+    function or handle with some of its parameters bound to certain
+    values.  Example:
+    
+      f = @(x) sum (x, 1);
 
-     When f is called, the call is forwarded to @sum with the constant 1
-     appended, and the anonymous function call does not occur on the
-     call stack.
+    When f is called, the call is forwarded to @sum with the constant 1
+    appended, and the anonymous function call does not occur on the
+    call stack.
 
  ** Deprecated functions.
 
     The following functions were deprecated in Octave 3.0 and have been
     removed from Octave 3.4.
                                            
       beta_cdf         geometric_pdf        pascal_pdf      
       beta_inv         geometric_rnd        pascal_rnd      
@@ -408,23 +412,19 @@ Summary of important user-visible change
     The following functions have been deprecated in Octave 3.4 and will
     be removed from Octave 3.8 (or whatever version is the second major
     release after 3.4):
 
       autocor  cellidx   gammai     krylovb    values
       autocov  dispatch  glpkmex    replot
       betai    fstat     is_global  saveimage
 
-  * For compatibility with Matlab, mu2lin (x) is now equivalent to
+ ** For compatibility with Matlab, mu2lin (x) is now equivalent to
     mu2lin (x, 0).
 
-  * The ARPACK library is now distributed with Octave so it no longer
-    needs to be available as an external dependency when building
-    Octave.
-
 Summary of important user-visible changes for version 3.2:
 ---------------------------------------------------------
 
  ** Compatibility with Matlab graphics has been improved.
 
     The hggroup object and associated listener callback functions have
     been added allowing the inclusion of group objects.  Data sources
     have been added to these group objects such that
