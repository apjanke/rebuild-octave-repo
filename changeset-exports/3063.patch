# HG changeset patch
# User jwe
# Date 867292574 0
#      Thu Jun 26 02:36:14 1997 +0000
# Node ID 4287b8c06fbfe6968d93840beb69a81844a777e6
# Parent  7310b801f8c2776c1340dbf079aa868a2c32407a
[project @ 1997-06-26 02:36:05 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+Wed Jun 25 21:26:24 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* plot/mesh.m: Set noparametric plot mode after plotting.
+
 Wed Jun 25 21:06:10 1997  Rick Niles <niles@axp745.gsfc.nasa.gov>
 
 	* plot/__pltopt__.m: Handle key/legend names.
 	Correctly set colors, line styles, and point styles.
 
 Wed Jun 25 13:34:06 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* polynomial/polyfit.m: Return fit y values as second output.
diff --git a/scripts/plot/contour.m b/scripts/plot/contour.m
--- a/scripts/plot/contour.m
+++ b/scripts/plot/contour.m
@@ -21,33 +21,36 @@
 ##
 ## See also: plot, semilogx, semilogy, loglog, polar, mesh, contour,
 ##           bar, stairs, gplot, gsplot, replot, xlabel, ylabel, title
 
 ## Author: jwe
 
 function contour (z, n, x, y)
 
-
   if (nargin == 1)
     n = 10;
   endif
 
+  ## XXX FIXME XXX -- these plot states should really just be set
+  ## temporarily, probably inside an unwind_protect block, but there is
+  ## no way to determine their current values.
+
   if (nargin == 1 || nargin == 2)
     if (is_matrix (z))
       gset nosurface;
       gset contour;
       gset cntrparam bspline;
       command = sprintf ("gset cntrparam levels %d", n);
       eval (command);
       gset noparametric;
       gset view 0, 0, 1, 1;
       gsplot z w l 1;
     else
-      error ("mesh: argument must be a matrix");
+      error ("contour: argument must be a matrix");
     endif
   elseif (nargin == 4)
     if (is_vector (x) && is_vector (y) && is_matrix (z))
       xlen = length (x);
       ylen = length (y);
       if (xlen == rows (z) && ylen == columns (z))
         if (rows (x) == 1)
           x = x';
@@ -65,20 +68,20 @@ function contour (z, n, x, y)
         gset contour;
         gset cntrparam bspline;
         command = sprintf ("gset cntrparam levels %d", n);
         eval (command);
 	gset parametric;
         gset view 0, 0, 1, 1;
 	gsplot zz w l 1;
       else
-        msg = "mesh: rows (z) must be the same as length (x) and";
+        msg = "contour: rows (z) must be the same as length (x) and";
         msg = sprintf ("%s\ncolumns (z) must be the same as length (y)", msg);
         error (msg);
       endif
     else
-      error ("mesh: x and y must be vectors and z must be a matrix");
+      error ("contour: x and y must be vectors and z must be a matrix");
     endif
   else
-    usage ("mesh (z, levels, x, y)");
+    usage ("contour (z, levels, x, y)");
   endif
 
 endfunction
diff --git a/scripts/plot/loglog.m b/scripts/plot/loglog.m
--- a/scripts/plot/loglog.m
+++ b/scripts/plot/loglog.m
@@ -28,15 +28,19 @@
 ##
 ## See also: plot, semilogy, loglog, polar, mesh, contour, bar, stairs,
 ##           gplot, gsplot, replot, xlabel, ylabel, title
 
 ## Author: jwe
 
 function loglog (...)
 
+  ## XXX FIXME XXX -- these plot states should really just be set
+  ## temporarily, probably inside an unwind_protect block, but there is
+  ## no way to determine their current values.
+
   gset logscale x;
   gset logscale y;
   gset nopolar;
 
   __plt__ ("loglog", all_va_args);
 
 endfunction
diff --git a/scripts/plot/mesh.m b/scripts/plot/mesh.m
--- a/scripts/plot/mesh.m
+++ b/scripts/plot/mesh.m
@@ -27,16 +27,20 @@
 ##
 ## See also: plot, semilogx, semilogy, loglog, polar, meshgrid, meshdom,
 ##           contour, bar, stairs, gplot, gsplot, replot, xlabel, ylabel, title
 
 ## Author: jwe
 
 function mesh (x, y, z)
 
+  ## XXX FIXME XXX -- the plot states should really just be set
+  ## temporarily, probably inside an unwind_protect block, but there is
+  ## no way to determine their current values.
+
   if (nargin == 1)
     z = x;
     if (is_matrix (z))
       gset hidden3d;
       gset data style lines;
       gset surface;
       gset nocontour;
       gset noparametric;
@@ -64,16 +68,17 @@ function mesh (x, y, z)
         endfor
 	gset hidden3d;
 	gset data style lines;
         gset surface;
         gset nocontour;
 	gset parametric;
         gset view 60, 30, 1, 1
 	gsplot (zz);
+	gset noparametric;
       else
         msg = "mesh: rows (z) must be the same as length (x) and";
         msg = sprintf ("%s\ncolumns (z) must be the same as length (y)", msg);
         error (msg);
       endif
     elseif (is_matrix (x) && is_matrix (y) && is_matrix (z))
       xlen = columns (z);
       ylen = rows (z);
@@ -90,16 +95,17 @@ function mesh (x, y, z)
         endfor
 	gset hidden3d;
 	gset data style lines;
         gset surface;
         gset nocontour;
 	gset parametric;
         gset view 60, 30, 1, 1
 	gsplot (zz);
+	gset noparametric;
       else
         error ("mesh: x, y, and z must have same dimensions");
       endif
     else
       error ("mesh: x and y must be vectors and z must be a matrix");
     endif
   else
     usage ("mesh (z)");
diff --git a/scripts/plot/plot.m b/scripts/plot/plot.m
--- a/scripts/plot/plot.m
+++ b/scripts/plot/plot.m
@@ -60,14 +60,18 @@
 ##
 ## See also: semilogx, semilogy, loglog, polar, mesh, contour, __pltopt__
 ##           bar, stairs, gplot, gsplot, replot, xlabel, ylabel, title
 
 ## Author: jwe
 
 function plot (...)
 
+  ## XXX FIXME XXX -- these plot states should really just be set
+  ## temporarily, probably inside an unwind_protect block, but there is
+  ## no way to determine their current values.
+
   gset nologscale;
   gset nopolar;
 
   __plt__ ("plot", all_va_args);
 
 endfunction
diff --git a/scripts/plot/polar.m b/scripts/plot/polar.m
--- a/scripts/plot/polar.m
+++ b/scripts/plot/polar.m
@@ -25,16 +25,20 @@
 ##
 ## See also: plot, semilogx, semilogy, loglog, mesh, contour, bar,
 ##           stairs, gplot, gsplot, replot, xlabel, ylabel, title
 
 ## Author: jwe
 
 function polar (x1, x2, fmt)
 
+  ## XXX FIXME XXX -- these plot states should really just be set
+  ## temporarily, probably inside an unwind_protect block, but there is
+  ## no way to determine their current values.
+
   gset nologscale;
   gset nopolar;
 
   if (nargin == 3)
     if (isstr (fmt))
       fmt = __pltopt__ ("polar", fmt);
     else
       error ("polar: third argument must be a string");
diff --git a/scripts/plot/semilogx.m b/scripts/plot/semilogx.m
--- a/scripts/plot/semilogx.m
+++ b/scripts/plot/semilogx.m
@@ -28,15 +28,19 @@
 ##
 ## See also: plot, semilogy, loglog, polar, mesh, contour, bar, stairs,
 ##           gplot, gsplot, replot, xlabel, ylabel, title
 
 ## Author: jwe
 
 function semilogx (...)
 
+  ## XXX FIXME XXX -- these plot states should really just be set
+  ## temporarily, probably inside an unwind_protect block, but there is
+  ## no way to determine their current values.
+
   gset logscale x;
   gset nologscale y;
   gset nopolar;
 
   __plt__ ("semilogx", all_va_args);
 
 endfunction
diff --git a/scripts/plot/semilogy.m b/scripts/plot/semilogy.m
--- a/scripts/plot/semilogy.m
+++ b/scripts/plot/semilogy.m
@@ -28,15 +28,19 @@
 ##
 ## See also: plot, semilogx, loglog, polar, mesh, contour, bar, stairs,
 ##           gplot, gsplot, replot, xlabel, ylabel, title
 
 ## Author: jwe
 
 function semilogy (...)
 
+  ## XXX FIXME XXX -- these plot states should really just be set
+  ## temporarily, probably inside an unwind_protect block, but there is
+  ## no way to determine their current values.
+
   gset nologscale x;
   gset logscale y;
   gset nopolar;
 
   __plt__ ("semilogy", all_va_args);
 
 endfunction
