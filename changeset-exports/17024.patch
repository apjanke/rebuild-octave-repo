# HG changeset patch
# User Ben Abbott  <bpabbott@mac.com>
# Date 1374343934 14400
#      Sat Jul 20 14:12:14 2013 -0400
# Node ID c358c6e7416bde5926851c14c9de7b22dae0e6ca
# Parent  13a12d01aca5e399daecbe3cdf2951995ebb0278
Add test to graphics.cc for initial tightinset value.

libinterp/corefcn/graphics.cc: Add test for the initial values of tightinset.

diff --git a/libinterp/corefcn/graphics.cc b/libinterp/corefcn/graphics.cc
--- a/libinterp/corefcn/graphics.cc
+++ b/libinterp/corefcn/graphics.cc
@@ -4023,16 +4023,38 @@ axes::properties::sync_positions (void)
   // Changes to tightinset may result in changes to the inactive
   // position property
   if (activepositionproperty.is ("position"))
     update_position ();
   else
     update_outerposition ();
 }
 
+/*
+%!xtest
+%! unwind_protect
+%!   hf = figure (gcf (), "__graphics_toolkit__", "fltk", "visible", "off");
+%!   clf;
+%!   subplot(2,1,1); plot(rand(10,1)); subplot(2,1,2); plot(rand(10,1))
+%!   hax = findall (gcf (), "type", "axes");
+%!   positions = cell2mat (get (hax, "position"));
+%!   outerpositions = cell2mat (get (hax, "outerposition"));
+%!   looseinsets = cell2mat (get (hax, "looseinset"));
+%!   tightinsets = cell2mat (get (hax, "tightinset"));
+%!   subplot(2,1,1); plot(rand(10,1)); subplot(2,1,2); plot(rand(10,1))
+%!   hax = findall (gcf (), "type", "axes");
+%!   assert (cell2mat (get (hax, "position")), positions)
+%!   assert (cell2mat (get (hax, "outerposition")), outerpositions)
+%!   assert (cell2mat (get (hax, "looseinset")), looseinsets)
+%!   assert (cell2mat (get (hax, "tightinset")), tightinsets)
+%! unwind_protect_cleanup
+%!   close (hf);
+%! end_unwind_protect
+*/
+
 void
 axes::properties::set_text_child (handle_property& hp,
                                   const std::string& who,
                                   const octave_value& v)
 {
   graphics_handle val;
 
   if (v.is_string ())
