# HG changeset patch
# User jwe
# Date 1179329529 0
#      Wed May 16 15:32:09 2007 +0000
# Node ID 0fcc8d65b571c2d8b396ed2f1ec5fa201c1f68cd
# Parent  7e2b5d0cf7add3c6591ea99d205b1f73f7f085a2
[project @ 2007-05-16 15:32:09 by jwe]

diff --git a/liboctave/CRowVector.cc b/liboctave/CRowVector.cc
--- a/liboctave/CRowVector.cc
+++ b/liboctave/CRowVector.cc
@@ -519,24 +519,21 @@ linspace (const Complex& x1, const Compl
     {
       retval.resize (n);
       Complex delta = (x2 - x1) / (n - 1.0);
       retval.elem (0) = x1;
       for (octave_idx_type i = 1; i < n-1; i++)
 	retval.elem (i) = x1 + 1.0 * i * delta;
       retval.elem (n-1) = x2;
     }
-  else if (n == 1)
+  else
     {
       retval.resize (1);
       retval.elem (0) = x2;
     }
-  else
-    (*current_liboctave_error_handler)
-      ("linspace: npoints must be greater than 0");
 
   return retval;
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
diff --git a/liboctave/dRowVector.cc b/liboctave/dRowVector.cc
--- a/liboctave/dRowVector.cc
+++ b/liboctave/dRowVector.cc
@@ -328,24 +328,21 @@ linspace (double x1, double x2, octave_i
     {
       retval.resize (n);
       double delta = (x2 - x1) / (n - 1);
       retval.elem (0) = x1;
       for (octave_idx_type i = 1; i < n-1; i++)
 	retval.elem (i) = x1 + i * delta;
       retval.elem (n-1) = x2;
     }
-  else if (n == 1)
+  else
     {
       retval.resize (1);
       retval.elem (0) = x2;
     }
-  else
-    (*current_liboctave_error_handler)
-      ("linspace: npoints must be greater than 0");
 
   return retval;
 }
 
 // row vector by column vector -> scalar
 
 double
 operator * (const RowVector& v, const ColumnVector& a)
diff --git a/scripts/general/logspace.m b/scripts/general/logspace.m
--- a/scripts/general/logspace.m
+++ b/scripts/general/logspace.m
@@ -52,17 +52,21 @@
 ## @iftex
 ## @tex
 ## $10^{base}$ and $10^{\pi}$,
 ## @end tex
 ## @end iftex
 ## @ifinfo
 ## 10^base and 10^pi,
 ## @end ifinfo
-## in order to  be compatible with the corresponding @sc{Matlab} function.
+## in order to  be compatible with the corresponding @sc{Matlab}
+## function.
+##
+## Also for compatibility, return the second argument if fewer than two
+## values are requested.
 ## @seealso{linspace}
 ## @end deftypefn
 
 ## Author: jwe
 
 function retval = logspace (x1, x2, n)
 
   if (nargin == 2)
diff --git a/src/data.cc b/src/data.cc
--- a/src/data.cc
+++ b/src/data.cc
@@ -2320,23 +2320,26 @@ with @sc{Matlab}.\n\
 
   return retval;
 }
 
 DEFUN (linspace, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} linspace (@var{base}, @var{limit}, @var{n})\n\
 Return a row vector with @var{n} linearly spaced elements between\n\
-@var{base} and @var{limit}.  The number of elements, @var{n}, must be\n\
-greater than 1.  The @var{base} and @var{limit} are always included in\n\
+@var{base} and @var{limit}.  If the number of elements is greater than one,\n\
+then the @var{base} and @var{limit} are always included in\n\
 the range.  If @var{base} is greater than @var{limit}, the elements are\n\
 stored in decreasing order.  If the number of points is not specified, a\n\
 value of 100 is used.\n\
 \n\
 The @code{linspace} function always returns a row vector.\n\
+\n\
+For compatibility with @sc{Matlab}, return the second argument if\n\
+fewer than two values are requested.\n\
 @end deftypefn")
 {
   octave_value retval;
 
   int nargin = args.length ();
 
   octave_idx_type npoints = 100;
 
diff --git a/src/load-path.cc b/src/load-path.cc
--- a/src/load-path.cc
+++ b/src/load-path.cc
@@ -42,16 +42,17 @@ 02110-1301, USA.
 #include "toplev.h"
 #include "unwind-prot.h"
 #include "utils.h"
 
 load_path *load_path::instance = 0;
 load_path::hook_function_ptr load_path::add_hook = execute_pkg_add;
 load_path::hook_function_ptr load_path::remove_hook = execute_pkg_del;
 std::string load_path::command_line_path;
+std::string load_path::sys_path;
 
 void
 load_path::dir_info::update (void)
 {
   if (is_relative)
     initialize ();
   else
     {
@@ -1282,17 +1283,17 @@ Reinitialize Octave's @code{LOADPATH} di
 DEFUN (pathdef, , ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {@var{val} =} pathdef ()\n\
 Return the default list of directories in which to search for function\n\
 files.\n\
 @seealso{path, addpath, rmpath, genpath, savepath, pathsep}\n\
 @end deftypefn")
 {
-  return load_path::system_path ();
+  return octave_value (load_path::system_path ());
 }
 
 DEFUN (path, args, nargout,
     "-*- texinfo -*-\n\
 @deftypefn {Function File} {} path (@dots{})\n\
 Modify or display Octave's @code{LOADPATH}.\n\
 \n\
 If @var{nargin} and @var{nargout} are zero, display the elements of\n\
diff --git a/src/load-path.h b/src/load-path.h
--- a/src/load-path.h
+++ b/src/load-path.h
@@ -170,17 +170,17 @@ public:
     if (command_line_path.empty ())
       command_line_path = p;
     else
       command_line_path += dir_path::path_sep_str + p;
   }
 
   static std::string system_path (void)
   {
-    return instance_ok () ? do_system_path () : std::string ();
+    return instance_ok () ? instance->do_system_path () : std::string ();
   }
 
 private:
 
   static const int M_FILE = 1;
   static const int OCT_FILE = 2;
   static const int MEX_FILE = 4;
 
