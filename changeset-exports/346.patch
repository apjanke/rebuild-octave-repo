# HG changeset patch
# User jwe
# Date 760689338 0
#      Tue Feb 08 06:35:38 1994 +0000
# Node ID c39c7680209b7f1c5ad833bdfe6661a0e29f1a66
# Parent  4f9072d00bec11ffe8cebe69d2165b17b3e5d3ff
[project @ 1994-02-08 06:35:38 by jwe]

diff --git a/liboctave/mx-kludge.cc b/liboctave/mx-kludge.cc
--- a/liboctave/mx-kludge.cc
+++ b/liboctave/mx-kludge.cc
@@ -321,17 +321,17 @@ operator - (const KL_MAT_TYPE& a, const 
   if (r != b.rows () || c != b.cols ())
     {
       (*current_liboctave_error_handler)
 	("nonconformant array subtraction attempted");
       return KL_MAT_TYPE ();
     }
 
   if (r == 0 || c == 0)
-    return KL_MAT_TYPE ();
+    return KL_MAT_TYPE (r, c);
 
   int l = a.length ();
   DO_VV_OP (-);
   return KL_MAT_TYPE (result, r, c);
 }
 
 KL_MAT_TYPE
 product (const KL_MAT_TYPE& a, const KL_MAT_TYPE& b)
@@ -341,17 +341,17 @@ product (const KL_MAT_TYPE& a, const KL_
   if (r != b.rows () || c != b.cols ())
     {
       (*current_liboctave_error_handler)
 	("nonconformant array product attempted");
       return KL_MAT_TYPE ();
     }
 
   if (r == 0 || c == 0)
-    return KL_MAT_TYPE ();
+    return KL_MAT_TYPE (r, c);
 
   int l = a.length ();
   DO_VV_OP (*);
   return KL_MAT_TYPE (result, r, c);
 }
 
 KL_MAT_TYPE
 quotient (const KL_MAT_TYPE& a, const KL_MAT_TYPE& b)
@@ -361,17 +361,17 @@ quotient (const KL_MAT_TYPE& a, const KL
   if (r != b.rows () || c != b.cols ())
     {
       (*current_liboctave_error_handler)
 	("nonconformant array quotient attempted");
       return KL_MAT_TYPE ();
     }
 
   if (r == 0 || c == 0)
-    return KL_MAT_TYPE ();
+    return KL_MAT_TYPE (r, c);
 
   int l = a.length ();
   DO_VV_OP (/);
   return KL_MAT_TYPE (result, r, c);
 }
 
 // Unary matrix ops.
 
