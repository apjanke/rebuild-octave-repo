# HG changeset patch
# User Rik <rik@octave.org>
# Date 1346808277 25200
#      Tue Sep 04 18:24:37 2012 -0700
# Node ID 43e484fa7e424d32ea1bb9ebffa83f248c40aff7
# Parent  d1751eee9a42c5d745130e8c9ee567bdf3172ee9
build: Clean up configure macros for building GUI.

* configure.ac: Don't bother to define HAVE_QSCINTILLA.

* m4/acinclude.m4: use #error function of CPP rather than relying on malformed
C code.

diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -2226,20 +2226,17 @@ if test $build_gui = yes; then
       ]])],
       octave_cv_lib_qscintilla=yes,
       octave_cv_lib_qscintilla=no)
     CPPFLAGS="$save_CPPFLAGS"
     LDFLAGS="$save_LDFLAGS"
     LIBS="$save_LIBS"
     AC_LANG_POP([C++])
   ])
-  if test $octave_cv_lib_qscintilla = "yes"; then
-    AC_DEFINE(HAVE_QSCINTILLA, 1, 
-      [Define to 1 if you the Qscintilla library is available.])
-  else
+  if test $octave_cv_lib_qscintilla = "no"; then
     AC_MSG_ERROR([Qscintilla library is required to build the GUI])
   fi
 
   ## Check for Qt functions which have changed their API over time
   OCTAVE_CHECK_FUNC_FINDFIRST_MODERN
   OCTAVE_CHECK_FUNC_SETPLACEHOLDERTEXT
 
   case "$canonical_host_type" in
diff --git a/m4/acinclude.m4 b/m4/acinclude.m4
--- a/m4/acinclude.m4
+++ b/m4/acinclude.m4
@@ -153,17 +153,17 @@ AC_DEFUN([OCTAVE_CHECK_FUNC_FINDFIRST_MO
     [octave_cv_func_findfirst_modern],
     [AC_LANG_PUSH(C++)
     save_CPPFLAGS="$CPPFLAGS"
     CPPFLAGS="-I$QT_INCDIR -I$QT_INCDIR/Qt $CPPFLAGS"
     AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
         #include <Qsci/qsciglobal.h>
         ]], [[
         #if QSCINTILLA_VERSION < 0x020600
-          Old Form Found;
+        #error Old FindFirst function found.
         #endif
         ]])],
       octave_cv_func_findfirst_modern=yes,
       octave_cv_func_findfirst_modern=no)
     CPPFLAGS="$save_CPPFLAGS"
     AC_LANG_POP(C++)
   ])
   if test $octave_cv_func_findfirst_modern = "yes"; then
@@ -231,17 +231,17 @@ AC_DEFUN([OCTAVE_CHECK_FUNC_SETPLACEHOLD
     [octave_cv_func_setplaceholdertext],
     [AC_LANG_PUSH(C++)
     save_CPPFLAGS="$CPPFLAGS"
     CPPFLAGS="-I$QT_INCDIR $CPPFLAGS"
     AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
         #include <Qt/qglobal.h>
         ]], [[
         #if QT_VERSION < 0x040700
-          No SetPlacholderText function available;
+        #error No SetPlacholderText function available.
         #endif
         ]])],
       octave_cv_func_setplaceholdertext=yes,
       octave_cv_func_setplaceholdertext=no)
     CPPFLAGS="$save_CPPFLAGS"
     AC_LANG_POP(C++)
   ])
   if test $octave_cv_func_setplaceholdertext = "yes"; then
