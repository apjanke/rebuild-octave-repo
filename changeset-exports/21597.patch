# HG changeset patch
# User mmuetzel <markus.muetzel@gmx.de>
# Date 1460144478 -7200
#      Fri Apr 08 21:41:18 2016 +0200
# Node ID fe1447ae68cf965bd3e5f74d0220884487ded452
# Parent  07d30e6fcfdee01d9146d580d3500b9c14351863
Add more info to version.m and store build info in the binary (bug #45659)

* build-info.in.cc, build-info.h: New files.
* mk-build-info-h.in.sh: New script.
* configure.ac, Makefile.am: Update.
* module.mk (update_hg_id, libinterp/build-info.cc): New rules.
* version.m: Also return release date. Add input argument.
* toplev.cc (F__octave_config_info__): New fields, builddate, buildtime,
hgid, releasedate.

diff --git a/Makefile.am b/Makefile.am
--- a/Makefile.am
+++ b/Makefile.am
@@ -47,16 +47,17 @@ EXTRA_DIST += \
   README \
   build-aux/OctJavaQry.class \
   build-aux/check-subst-vars.in.sh \
   build-aux/find-files-with-tests.sh \
   build-aux/mk-default-qt-settings.in.sh \
   build-aux/mk-f77-def.in.sh \
   build-aux/mk-mxarray-h.in.sh \
   build-aux/mk-version-h.in.sh \
+  build-aux/mk-build-info-cc.in.sh \
   build-aux/mk-octave-config-h.sh \
   build-aux/mk-opts.pl \
   build-aux/move-if-change \
   build-aux/stl_algo.h-fixed \
   build-aux/subst-config-vals.in.sh \
   build-aux/subst-cross-config-vals.in.sh \
   build-aux/subst-default-vals.in.sh \
   build-aux/subst-f77-isnan-macro.in.sh \
@@ -64,16 +65,17 @@ EXTRA_DIST += \
   run-octave.in \
   $(BUILT_DISTFILES)
 
 GEN_CONFIG_SHELL = \
   build-aux/mk-default-qt-settings.sh \
   build-aux/mk-f77-def.sh \
   build-aux/mk-mxarray-h.sh \
   build-aux/mk-version-h.sh \
+  build-aux/mk-build-info-cc.sh \
   build-aux/subst-config-vals.sh \
   build-aux/subst-cross-config-vals.sh \
   build-aux/subst-default-vals.sh \
   build-aux/subst-f77-isnan-macro.sh \
   build-aux/subst-script-vals.sh
 
 $(GEN_CONFIG_SHELL) : %.sh : %.in.sh config.status
 	$(AM_V_GEN)$(SHELL) config.status $@-tmp $@
diff --git a/build-aux/mk-build-info-cc.in.sh b/build-aux/mk-build-info-cc.in.sh
new file mode 100644
--- /dev/null
+++ b/build-aux/mk-build-info-cc.in.sh
@@ -0,0 +1,27 @@
+#! /bin/sh
+#
+# Copyright (C) 2016 M. Muetzel
+#
+# This file is part of Octave.
+#
+# Octave is free software; you can redistribute it and/or modify it
+# under the terms of the GNU General Public License as published by the
+# Free Software Foundation; either version 3 of the License, or (at
+# your option) any later version.
+#
+# Octave is distributed in the hope that it will be useful, but WITHOUT
+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+# for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with Octave; see the file COPYING.  If not, see
+# <http://www.gnu.org/licenses/>.
+
+: ${SED=@SED@}
+
+OCTAVE_HG_ID=$(hg identify --id)
+
+$SED \
+  -e "s|%NO_EDIT_WARNING%|DO NOT EDIT!  Generated automatically by mk-build-info-cc.|" \
+  -e "s|%OCTAVE_HG_ID%|${OCTAVE_HG_ID}|"
diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -3394,16 +3394,17 @@ AC_CONFIG_FILES([oct-conf-post.h-tmp:oct
 AC_CONFIG_COMMANDS([oct-conf-post.h],
   [$SHELL $srcdir/build-aux/move-if-change oct-conf-post.h-tmp oct-conf-post.h])
 
 OCTAVE_CONFIG_MOVE_IF_CHANGE_FILES([
   build-aux/mk-default-qt-settings.sh
   build-aux/mk-f77-def.sh
   build-aux/mk-mxarray-h.sh
   build-aux/mk-version-h.sh
+  build-aux/mk-build-info-cc.sh
   build-aux/subst-config-vals.sh
   build-aux/subst-cross-config-vals.sh
   build-aux/subst-default-vals.sh
   build-aux/subst-f77-isnan-macro.sh
   build-aux/subst-script-vals.sh])
 
 AC_OUTPUT
 
diff --git a/libinterp/build-info.h b/libinterp/build-info.h
new file mode 100644
--- /dev/null
+++ b/libinterp/build-info.h
@@ -0,0 +1,34 @@
+// %NO_EDIT_WARNING%
+/*
+
+Copyright (C) 2016 M. Muetzel
+
+This file is part of Octave.
+
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
+
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
+
+You should have received a copy of the GNU General Public License
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
+
+*/
+
+#ifdef HAVE_CONFIG_H
+#  include "config.h"
+#endif
+
+#include <string>
+
+OCTAVE_API std::string oct_hg_id (void);
+
+OCTAVE_API std::string oct_build_date (void);
+
+OCTAVE_API std::string oct_build_time (void);
diff --git a/libinterp/build-info.in.cc b/libinterp/build-info.in.cc
new file mode 100644
--- /dev/null
+++ b/libinterp/build-info.in.cc
@@ -0,0 +1,39 @@
+// %NO_EDIT_WARNING%
+/*
+
+Copyright (C) 2016 M. Muetzel
+
+This file is part of Octave.
+
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
+
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
+
+You should have received a copy of the GNU General Public License
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
+
+*/
+
+#include "build-info.h"
+
+std::string oct_hg_id (void)
+{
+  return "%OCTAVE_HG_ID%";
+}
+
+std::string oct_build_date (void)
+{
+  return __DATE__;
+}
+
+std::string oct_build_time (void)
+{
+  return __TIME__;
+}
diff --git a/libinterp/corefcn/toplev.cc b/libinterp/corefcn/toplev.cc
--- a/libinterp/corefcn/toplev.cc
+++ b/libinterp/corefcn/toplev.cc
@@ -46,16 +46,17 @@ along with Octave; see the file COPYING.
 #include "lo-mappers.h"
 #include "oct-env.h"
 #include "oct-locbuf.h"
 #include "quit.h"
 #include "singleton-cleanup.h"
 #include "str-vec.h"
 
 #include "build-env.h"
+#include "build-info.h"
 #include "defaults.h"
 #include "defun.h"
 #include "error.h"
 #include "file-io.h"
 #include "graphics.h"
 #include "input.h"
 #include "lex.h"
 #include "load-save.h"
@@ -1417,21 +1418,24 @@ specified option.\n\
       { "ENABLE_OPENMP", true },
 #else
       { "ENABLE_OPENMP", false },
 #endif
 
       { "api_version", OCTAVE_API_VERSION },
       { "archlibdir", subst_octave_home (OCTAVE_ARCHLIBDIR) },
       { "bindir", subst_octave_home (OCTAVE_BINDIR) },
+      { "builddate", oct_build_date () },
+      { "buildtime", oct_build_time () },
       { "canonical_host_type", OCTAVE_CANONICAL_HOST_TYPE },
       { "datadir", subst_octave_home (OCTAVE_DATADIR) },
       { "datarootdir", subst_octave_home (OCTAVE_DATAROOTDIR) },
       { "exec_prefix", subst_octave_home (OCTAVE_EXEC_PREFIX) },
       { "fcnfiledir", subst_octave_home (OCTAVE_FCNFILEDIR) },
+      { "hgid", oct_hg_id () },
       { "imagedir", subst_octave_home (OCTAVE_IMAGEDIR) },
       { "includedir", subst_octave_home (OCTAVE_INCLUDEDIR) },
       { "infodir", subst_octave_home (OCTAVE_INFODIR) },
       { "infofile", subst_octave_home (OCTAVE_INFOFILE) },
       { "libdir", subst_octave_home (OCTAVE_LIBDIR) },
       { "libexecdir", subst_octave_home (OCTAVE_LIBEXECDIR) },
       { "localapiarchlibdir", subst_octave_home (OCTAVE_LOCALAPIARCHLIBDIR) },
       { "localapifcnfiledir", subst_octave_home (OCTAVE_LOCALAPIFCNFILEDIR) },
@@ -1448,16 +1452,17 @@ specified option.\n\
       { "mandir", subst_octave_home (OCTAVE_MANDIR) },
       { "octdatadir", subst_octave_home (OCTAVE_OCTDATADIR) },
       { "octfiledir", subst_octave_home (OCTAVE_OCTFILEDIR) },
       { "octetcdir", subst_octave_home (OCTAVE_OCTETCDIR) },
       { "octincludedir", subst_octave_home (OCTAVE_OCTINCLUDEDIR) },
       { "octlibdir", subst_octave_home (OCTAVE_OCTLIBDIR) },
       { "octtestsdir", subst_octave_home (OCTAVE_OCTTESTSDIR) },
       { "prefix", subst_octave_home (OCTAVE_PREFIX) },
+      { "releasedate", OCTAVE_RELEASE_DATE },
       { "startupfiledir", subst_octave_home (OCTAVE_STARTUPFILEDIR) },
       { "version", OCTAVE_VERSION },
       { 0, octave_value () }
     };
 
   struct build_info_struct
   {
     const char *key;
diff --git a/libinterp/module.mk b/libinterp/module.mk
--- a/libinterp/module.mk
+++ b/libinterp/module.mk
@@ -38,16 +38,18 @@ GENERATED_MAKE_BUILTINS_INCS = \
   libinterp/corefcn/mxarray.h \
   libinterp/parse-tree/oct-gperf.h \
   libinterp/parse-tree/oct-parse.h \
   libinterp/version.h
 
 BUILT_SOURCES += \
   $(GENERATED_MAKE_BUILTINS_INCS) \
   libinterp/build-env.cc \
+  update_hg_id \
+  libinterp/build-info.cc \
   libinterp/builtin-defun-decls.h \
   libinterp/builtins.cc \
   libinterp/corefcn/oct-errno.cc \
   libinterp/corefcn/oct-tex-lexer.cc \
   libinterp/corefcn/oct-tex-parser.cc \
   libinterp/corefcn/oct-tex-symbols.cc \
   libinterp/operators/ops.cc \
   libinterp/parse-tree/lex.cc \
@@ -71,31 +73,33 @@ LIBINTERP_BUILT_DISTFILES = \
   libinterp/parse-tree/oct-gperf.h \
   libinterp/parse-tree/oct-parse.h
 
 ## Files that are created during build process and installed,
 ## BUT not distributed in tarball.
 LIBINTERP_BUILT_NODISTFILES = \
   libinterp/build-env.cc \
   libinterp/build-env-features.cc \
+  libinterp/build-info.cc \
   libinterp/corefcn/mxarray.h \
   libinterp/corefcn/oct-errno.cc \
   libinterp/corefcn/defaults.h \
   libinterp/corefcn/graphics.h \
   libinterp/builtin-defun-decls.h \
   libinterp/operators/ops.cc \
   libinterp/version.h \
   $(OPT_HANDLERS) \
   $(ALL_DEF_FILES) \
   libinterp/builtins.cc
 
 libinterp_EXTRA_DIST += \
   libinterp/DOCSTRINGS \
   libinterp/build-env.in.cc \
   libinterp/build-env-features.sh \
+  libinterp/build-info.in.cc \
   libinterp/find-defun-files.sh \
   libinterp/gendoc.pl \
   libinterp/genprops.awk \
   libinterp/mk-errno-list \
   libinterp/mk-pkg-add \
   libinterp/mkbuiltins \
   libinterp/mkdefs \
   libinterp/mkops \
@@ -159,16 +163,17 @@ nodist_libinterp_liboctinterp_la_SOURCES
   libinterp/corefcn/oct-errno.cc \
   libinterp/corefcn/defaults.h \
   libinterp/corefcn/graphics.h \
   libinterp/operators/ops.cc \
   libinterp/builtin-defun-decls.h \
   libinterp/builtins.cc \
   libinterp/build-env.cc \
   libinterp/build-env-features.cc \
+  libinterp/build-info.cc \
   libinterp/version.h
 
 libinterp_liboctinterp_la_LIBADD = \
   libinterp/octave-value/liboctave-value.la \
   libinterp/parse-tree/libparse-tree.la \
   libinterp/corefcn/libcorefcn.la \
   liboctave/liboctave.la \
   $(LIBOCTINTERP_LINK_DEPS)
@@ -253,16 +258,25 @@ libinterp/build-env.cc: libinterp/build-
 libinterp/build-env-features.cc: config.h libinterp/build-env-features.sh | libinterp/$(octave-dirstamp)
 	$(AM_V_GEN)rm -f $@-t && \
 	$(SHELL) $(srcdir)/libinterp/build-env-features.sh $< > $@-t && \
 	$(simple_move_if_change_rule)
 
 libinterp/version.h: libinterp/version.in.h build-aux/mk-version-h.sh | libinterp/$(octave-dirstamp)
 	$(AM_V_GEN)$(call simple-filter-rule,build-aux/mk-version-h.sh)
 
+update_hg_id:
+	@if [ "x$(shell cat libinterp/hg.id)" != "x$(shell hg identify --id)" ]; then \
+		hg identify --id > libinterp/hg.id; \
+	fi
+.PHONY: update_hg_id
+
+libinterp/build-info.cc: libinterp/build-info.in.cc build-aux/mk-build-info-cc.sh libinterp/hg.id | libinterp/$(octave-dirstamp)
+	$(AM_V_GEN)$(call simple-filter-rule,build-aux/mk-build-info.sh)
+
 libinterp/builtins.cc: $(DEF_FILES) libinterp/mkbuiltins | libinterp/$(octave-dirstamp)
 	$(AM_V_GEN)rm -f $@-t && \
 	$(SHELL) $(srcdir)/libinterp/mkbuiltins --source $(DEF_FILES) > $@-t && \
 	$(simple_move_if_change_rule)
 
 libinterp/builtin-defun-decls.h: $(SRC_DEF_FILES) libinterp/mkbuiltins | libinterp/$(octave-dirstamp)
 	$(AM_V_GEN)rm -f $@-t && \
 	$(SHELL) $(srcdir)/libinterp/mkbuiltins --header $(SRC_DEF_FILES) > $@-t && \
diff --git a/scripts/miscellaneous/version.m b/scripts/miscellaneous/version.m
--- a/scripts/miscellaneous/version.m
+++ b/scripts/miscellaneous/version.m
@@ -12,34 +12,105 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn {} {} version ()
-## Return the version number of Octave as a string.
+## @deftypefn  {} {@var{v} =} version ()
+## @deftypefnx {} {[@var{v}, @var{d}] =} version ()
+## @deftypefnx {} {@var{v} =} version (@var{feature})
+## Get version information for Octave
+##
+## If called without input argument, the first return value @var{v} gives the
+## version number of Octave as a string. The second return value @var{d} holds
+## the release date as a string.
+##
+## The following options can be passed for @var{feature}:
+## @table @asis
+## @item @qcode{"-date"}
+## for the release date of the running build,
 ##
-## This is an alias for the function @w{@env{OCTAVE_VERSION}} provided for
-## compatibility.
+## @item @qcode{"-description"}
+## for a description of the release (empty string),
+##
+## @item @qcode{"-release"}
+## for the name of the running build,
+##
+## @item @qcode{"-java"}
+## for version information of the Java VM,
+##
+## @item @qcode{"-blas"}
+## for version information for the linked BLAS (not implemented),
+##
+## @item @qcode{"-lapack"}
+## for version information for the linked LAPACK (not implemented).
+## @end table
+##
+## The variant with no input and output argument is an alias for the function
+## @w{@env{OCTAVE_VERSION}} provided for compatibility.
 ## @seealso{OCTAVE_VERSION, ver}
 ## @end deftypefn
 
 ## Author: jwe
 
-function vs = version ()
+function [vs, d] = version (feature)
 
-  if (nargin != 0)
-    warning ("version: ignoring extra arguments");
+  if (nargin > 1 || ((nargin != 0) && ((nargout > 1) || ! ischar (feature))))
+    print_usage ();
   endif
 
-  vs = OCTAVE_VERSION;
+  if (nargin == 0)
+    vs = OCTAVE_VERSION;
+
+    if (nargout > 1)
+      d = __octave_config_info__.releasedate;
+    end
+  else
+    switch (feature)
+      case "-date"
+        vs = __octave_config_info__.releasedate;
+      case "-description"
+        vs = "";
+      case "-release"
+        vs = "";
+      case "-java"
+        try
+          jversion = javaMethod ("getProperty", "java.lang.System", ...
+                                 "java.runtime.version");
+          jvendor = javaMethod ("getProperty", "java.lang.System", ...
+                                "java.vendor");
+          jname = javaMethod ("getProperty", "java.lang.System", ...
+                                "java.vm.name");
+          jjitmode = javaMethod ("getProperty", "java.lang.System", ...
+                                "java.vm.info");
+          vs = ["Java " jversion " with " jvendor " " jname " " jjitmode];
+        catch
+          vs = "no java available";
+        end_try_catch
+      case "-blas"
+        vs = "";
+        warning(["version: option '" feature "' not implemented"])
+      case "-lapack"
+        vs = "";
+        warning(["version: option '" feature "' not implemented"])
+      otherwise
+        error ("version: Invalid input argument");
+    endswitch
+  endif
+
 
 endfunction
 
 
 %!assert (ischar (version ()))
-%!assert (version (), OCTAVE_VERSION)
 
-%!warning version (1);
+%!test
+%! [v, d] = version ();
+%! assert (v, OCTAVE_VERSION)
+%! assert (d, __octave_config_info__.releasedate)
 
+%!assert (version ("-date"), __octave_config_info__.releasedate)
+
+%!error version (1);
+
