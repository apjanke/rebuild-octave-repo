# HG changeset patch
# User jwe
# Date 1193206540 0
#      Wed Oct 24 06:15:40 2007 +0000
# Node ID ad2aaf824128a46410a1989fe58943795f99c656
# Parent  c344920f9e9d5d3b4999994796f2d56d0ebfbad6
[project @ 2007-10-24 06:15:39 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,13 @@
+2007-10-24  John W. Eaton  <jwe@octave.org>
+
+	* aclocal.m4 (OCTAVE_STRPTIME_BROKEN): New macro.
+	* configure.in: Use it.
+
 2007-10-23  John W. Eaton  <jwe@octave.org>
 
 	* configure.in: When checking for -lf2c, set F2CLIBS instad of
 	FLIBS, then set FLIBS to $F2CLIBS just before printing the summary.
 	Check for BLAS library calling convention compatibility.
 
 2007-10-17  John W. Eaton  <jwe@octave.org>
 
diff --git a/aclocal.m4 b/aclocal.m4
--- a/aclocal.m4
+++ b/aclocal.m4
@@ -112,16 +112,43 @@ AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[]],
 [[void test(char *); int length(); char x[length()]; test(x);]])],
 octave_cv_dynamic_auto_arrays=yes, octave_cv_dynamic_auto_arrays=no)])
 if test $octave_cv_dynamic_auto_arrays = yes; then
 AC_DEFINE(HAVE_DYNAMIC_AUTO_ARRAYS,1,[Define if C++ supports dynamic auto arrays])
 fi
 AC_LANG_POP(C++)
 ])
 dnl
+dnl Check for broken strptime
+dnl
+AC_DEFUN(OCTAVE_STRPTIME_BROKEN,
+[AC_CACHE_CHECK([whether strptime is broken],
+octave_cv_strptime_broken,
+[AC_LANG_PUSH(C)
+AC_RUN_IFELSE([AC_LANG_PROGRAM([[
+#define _XOPEN_SOURCE
+#if defined (HAVE_SYS_TYPES_H)
+#include <sys/types.h>
+#if defined (HAVE_UNISTD_H)
+#include <unistd.h>
+#endif
+#endif
+#include <stdio.h>
+#include <time.h>
+]], [[
+struct tm t;
+char *q = strptime ("09/13", "%m/%d/%y", &t);
+return q ? 1 : 0;
+]])], [octave_cv_strptime_broken=no], [octave_cv_strptime_broken=yes])])
+if test $octave_cv_strptime_broken = yes; then
+AC_DEFINE(OCTAVE_HAVE_BROKEN_STRPTIME, 1, [Define if strptime is broken on your system])
+fi
+AC_LANG_POP(C)
+])
+dnl
 dnl The following test is from Karl Berry's Kpathseach library.  I'm
 dnl including it here in case we someday want to make the use of
 dnl kpathsea optional.
 dnl
 dnl Some BSD putenv's, e.g., FreeBSD, do malloc/free's on the environment.
 dnl This test program is due to Mike Hibler <mike@cs.utah.edu>.
 dnl We don't actually need to run this if we don't have putenv, but it
 dnl doesn't hurt.
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -24,17 +24,17 @@ dnl               2002, 2003, 2004, 2005
 ### Preserve CFLAGS and CXXFLAGS from the environment before doing
 ### anything else because we don't know which macros might call
 ### AC_PROG_CC or AC_PROG_CXX.
 
 EXTERN_CFLAGS="$CFLAGS"
 EXTERN_CXXFLAGS="$CXXFLAGS"
 
 AC_INIT
-AC_REVISION($Revision: 1.584 $)
+AC_REVISION($Revision: 1.585 $)
 AC_PREREQ(2.57)
 AC_CONFIG_SRCDIR([src/octave.cc])
 AC_CONFIG_HEADER(config.h)
 
 OCTAVE_HOST_TYPE
 
 AC_DEFINE(OCTAVE_SOURCE, 1, [Define if this is Octave.])
   
@@ -1488,16 +1488,17 @@ case "$canonical_host_type" in
     ## so use our version.  We could use an actual configure test
     ## for this.
   ;;
   *)
     AC_CHECK_FUNCS(strftime)
   ;;
 esac
 
+OCTAVE_STRPTIME_BROKEN
 OCTAVE_SMART_PUTENV
 
 case "$canonical_host_type" in
   *-*-msdosmsvc | *-*-mingw*)
     AC_MSG_CHECKING([for required _WIN32_WINNT])
     AC_COMPILE_IFELSE(AC_LANG_PROGRAM([[
 #include <windows.h>
 #if _WIN32_WINNT < 0x0403
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,12 @@
+2007-10-24  John W. Eaton  <jwe@octave.org>
+
+	* strptime.c: Also compile if OCTAVE_HAVE_BROKEN_STRPTIME is defined.
+
 2007-10-23  John W. Eaton  <jwe@octave.org>
 
 	* CRowVector.cc (operator * const ComplexRowVector&, const
 	ComplexColumnVector&)): Delete spurious code left from patch.
 
 2007-10-22  Kim Hansen  <kimhanse@gmail.com>
 
 	* chMatrix.cc, lo-utils.cc, oct-env.cc, oct-uname.cc,
diff --git a/liboctave/oct-time.cc b/liboctave/oct-time.cc
--- a/liboctave/oct-time.cc
+++ b/liboctave/oct-time.cc
@@ -374,17 +374,17 @@ octave_strptime::init (const std::string
   else
     nchars = 0;
 
   delete [] p;
 
   octave_base_tm::init (&t);
 
 #if defined (HAVE_STRUCT_TM_TM_ZONE)
-  delete ps;
+  delete [] ps;
 #endif
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
diff --git a/liboctave/strptime.c b/liboctave/strptime.c
--- a/liboctave/strptime.c
+++ b/liboctave/strptime.c
@@ -22,17 +22,17 @@
    Some of the fields cannot add information alone.  But if seeing
    some of them in the same format (such as year, week and weekday)
    this is enough information for determining the date.  */
 
 #ifdef HAVE_CONFIG_H
 # include <config.h>
 #endif
 
-#ifndef HAVE_STRPTIME
+#if ! defined (HAVE_STRPTIME) || defined (OCTAVE_HAVE_BROKEN_STRPTIME)
 
 #include <ctype.h>
 #ifdef _LIBC
 #  include <langinfo.h>
 #endif
 #include <limits.h>
 #include <string.h>
 #include <time.h>
