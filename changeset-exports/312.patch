# HG changeset patch
# User jwe
# Date 759015654 0
#      Wed Jan 19 21:40:54 1994 +0000
# Node ID 069ae2896cf74669ba435ee61fb6b0329d1c49f3
# Parent  c6e0544967831e4e1ab684ce89d78f299b9b5774
[project @ 1994-01-19 21:40:41 by jwe]

diff --git a/src/pt-const.cc b/src/pt-const.cc
--- a/src/pt-const.cc
+++ b/src/pt-const.cc
@@ -1428,16 +1428,18 @@ tree_constant_rep::load (istream& is)
       else if (strncmp (ptr, "range", 5) == 0)
 	type_tag = load (is, range_constant);
       else
 	::error ("unknown constant type `%s'", tag);
     }
   else
     ::error ("failed to extract keyword specifying value type");
 
+  delete [] tag;
+
   return is_global;
 }
 
 tree_constant_rep::constant_type
 tree_constant_rep::load (istream& is, tree_constant_rep::constant_type t)
 {
   tree_constant_rep::constant_type status = unknown_constant;
 
diff --git a/src/t-builtins.cc b/src/t-builtins.cc
--- a/src/t-builtins.cc
+++ b/src/t-builtins.cc
@@ -730,20 +730,22 @@ builtin_load (int argc, char **argv)
 	{
 	  error ("load: couldn't open input file `%s'", *argv);
 	  return retval;
 	}
       stream = file;
     }
 
   int count = 0;
+  char *nm = (char *) NULL;
   for (;;)
     {
 // Read name for this entry or break on EOF.
-      char *nm = extract_keyword (stream, "name");
+      delete [] nm;
+      nm = extract_keyword (stream, "name");
       if (nm == (char *) NULL)
 	{
 	  if (count == 0)
 	    {
 	      error ("load: no name keywords found in file `%s'", *argv);
 	      error ("Are you sure this is an octave data file?");
 	    }
 	  break;
@@ -927,17 +929,19 @@ builtin_save (int argc, char **argv)
 	  char **lvars = curr_sym_tab->list (count, 0,
 					     symbol_def::USER_VARIABLE);
 
 	  int saved_or_error = 0;
 	  int i;
 	  for (i = 0; i < count; i++)
 	    {
 	      if (fnmatch (*argv, lvars[i], __FNM_FLAGS) == 0
-		  && curr_sym_tab->save (stream, lvars[i], 0, prec) != 0)
+		  && curr_sym_tab->save (stream, lvars[i],
+					 is_globally_visible (lvars[i]),
+					 prec) != 0)
 		saved_or_error++;
 	    }
 
 	  char **bvars = global_sym_tab->list (count, 0,
 					       symbol_def::BUILTIN_VARIABLE);
 
 	  for (i = 0; i < count; i++)
 	    {
diff --git a/src/variables.cc b/src/variables.cc
--- a/src/variables.cc
+++ b/src/variables.cc
@@ -444,28 +444,25 @@ is_globally_visible (const char *name)
 }
 
 /*
  * Extract a keyword and its value from a file.  Input should look
  * something like:
  *
  *  #[ \t]*keyword[ \t]*:[ \t]*string-value\n
  *
- * Returns a pointer to a static variable which is only valid until
- * the next time this function is called.
+ * Returns a pointer to new storage.  The caller is responsible for
+ * deleting it.
  */
 char *
 extract_keyword (istream& is, char *keyword)
 {
   ostrstream buf;
 
-  static char *retval = (char *) NULL;
-
-  delete [] retval;
-  retval = (char *) NULL;
+  char *retval = (char *) NULL;
 
   char c;
   while (is.get (c))
     {
       if (c == '#')
 	{
 	  while (is.get (c) && (c == ' ' || c == '\t' || c == '#'))
 	    ; // Skip whitespace and comment characters.
