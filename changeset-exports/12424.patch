# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1297286795 18000
#      Wed Feb 09 16:26:35 2011 -0500
# Node ID afb65a7bc065d9d1a7019d0ed71f531437beeb6a
# Parent  bbd7b1d4b2681cd843263214729e88c13c368ef2
update NEWS

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,12 @@
+2011-02-09  John W. Eaton  <jwe@octave.org>
+
+	* NEWS: Update.
+
 2011-02-09  Ben Abbott  <bpabbott@mac.com>
 
 	* README.MacOS: Spelling corrections.
 
 2011-02-08  Ben Abbott  <bpabbott@mac.com>
 
 	* README.MacOS: Fix FFTW CCFLAGS.
 
diff --git a/NEWS b/NEWS
--- a/NEWS
+++ b/NEWS
@@ -373,16 +373,30 @@ Summary of important user-visible change
     values.  Example:
     
       f = @(x) sum (x, 1);
 
     When f is called, the call is forwarded to @sum with the constant 1
     appended, and the anonymous function call does not occur on the
     call stack.
 
+ ** For compatibility with Matlab, mu2lin (x) is now equivalent to
+    mu2lin (x, 0).
+
+ ** The new function `history_control' may be used to control the way
+    command lines are added to the history list when Octave is using
+    readline for command-line editing.  For example
+
+      history_control ("ignoredups")
+
+    tells Octave to avoid adding duplicate lines to the history list.
+
+ ** Octave now uses the gnulib library for improved portability and to
+    avoid bugs in operating system functions.
+
  ** Deprecated functions.
 
     The following functions were deprecated in Octave 3.0 and have been
     removed from Octave 3.4.
                                            
       beta_cdf         geometric_pdf        pascal_pdf      
       beta_inv         geometric_rnd        pascal_rnd      
       beta_pdf         hypergeometric_cdf   poisson_cdf     
@@ -432,19 +446,16 @@ Summary of important user-visible change
     The following functions have been deprecated in Octave 3.4 and will
     be removed from Octave 3.8 (or whatever version is the second major
     release after 3.4):
 
       autocor  cellidx   gammai     krylovb    values
       autocov  dispatch  glpkmex    replot
       betai    fstat     is_global  saveimage
 
- ** For compatibility with Matlab, mu2lin (x) is now equivalent to
-    mu2lin (x, 0).
-
 Summary of important user-visible changes for version 3.2:
 ---------------------------------------------------------
 
  ** Compatibility with Matlab graphics has been improved.
 
     The hggroup object and associated listener callback functions have
     been added allowing the inclusion of group objects.  Data sources
     have been added to these group objects such that
diff --git a/liboctave/Sparse-perm-op-defs.h b/liboctave/Sparse-perm-op-defs.h
--- a/liboctave/Sparse-perm-op-defs.h
+++ b/liboctave/Sparse-perm-op-defs.h
@@ -29,26 +29,36 @@ template <typename SM>
 SM octinternal_do_mul_colpm_sm (const octave_idx_type *pcol, const SM& a)
 // Relabel the rows according to pcol.
 {
   const octave_idx_type nr = a.rows ();
   const octave_idx_type nc = a.cols ();
   const octave_idx_type nent = a.nnz ();
   SM r (nr, nc, nent);
 
-  for (octave_idx_type k = 0; k < nent; ++k)
-    {
-      octave_quit ();
-      r.xridx (k) = pcol[a.ridx (k)];
-      r.xdata (k) = a.data (k);
-    }
+  octave_sort<octave_idx_type> sort;
+
   for (octave_idx_type j = 0; j <= nc; ++j)
     r.xcidx (j) = a.cidx (j);
 
-  r.maybe_compress (false);
+  for (octave_idx_type j = 0; j < nc; j++)
+    {
+      octave_quit ();
+      
+      OCTAVE_LOCAL_BUFFER (octave_idx_type, sidx, r.xcidx(j+1) - r.xcidx(j));
+      for (octave_idx_type i = r.xcidx(j), ii = 0; i < r.xcidx(j+1); i++)
+        {
+          sidx[ii++]=i;
+          r.xridx (i) = pcol[a.ridx (i)];
+        }
+      sort.sort (r.xridx() + r.xcidx(j), sidx, r.xcidx(j+1) - r.xcidx(j)); 
+      for (octave_idx_type i = r.xcidx(j), ii = 0; i < r.xcidx(j+1); i++)
+        r.xdata(i) = a.data (sidx[ii++]);
+    }
+
   return r;
 }
 
 template <typename SM>
 SM octinternal_do_mul_pm_sm (const PermMatrix& p, const SM& a)
 {
   const octave_idx_type nr = a.rows ();
   if (p.cols () != nr)
@@ -100,17 +110,16 @@ SM octinternal_do_mul_sm_rowpm (const SM
       for (k = r.xcidx (j); k_src < kend_src; ++k, ++k_src)
         {
           r.xridx (k) = a.ridx (k_src);
           r.xdata (k) = a.data (k_src);
         }
     }
   assert (k_src == nent);
 
-  r.maybe_compress (false);
   return r;
 }
 
 template <typename SM>
 SM octinternal_do_mul_sm_colpm (const SM& a, const octave_idx_type *pcol)
 // For a column permutation, iterate across the destination r and pull
 // data from the correct column of a.
 {
@@ -136,17 +145,16 @@ SM octinternal_do_mul_sm_colpm (const SM
       for (k_src = a.cidx (j_src); k_src < kend_src; ++k_src, ++k)
         {
           r.xridx (k) = a.ridx (k_src);
           r.xdata (k) = a.data (k_src);
         }
     }
   assert (k == nent);
 
-  r.maybe_compress (false);
   return r;
 }
 
 template <typename SM>
 SM octinternal_do_mul_sm_pm (const SM& a, const PermMatrix& p)
 {
   const octave_idx_type nc = a.cols ();
   if (p.rows () != nc)
