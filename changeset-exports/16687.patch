# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1368982721 14400
#      Sun May 19 12:58:41 2013 -0400
# Node ID f4d18d3f7fd75bd025229ddc5a9961f64aa8889a
# Parent  c6c4847aaf67228f1437189c5b16c9b7ef16b84d
* oct-hist.cc: Style fixes.  Remove unused code.

diff --git a/libinterp/interpfcn/oct-hist.cc b/libinterp/interpfcn/oct-hist.cc
--- a/libinterp/interpfcn/oct-hist.cc
+++ b/libinterp/interpfcn/oct-hist.cc
@@ -169,24 +169,24 @@ do_history (const octave_value_list& arg
       if (option == "-r" || option == "-w" || option == "-a"
           || option == "-n")
         {
           if (i < nargin - 1)
             { 
               if (args(i+1).is_string ())
                 command_history::set_file (args(++i).string_value ());
               else
-              {
-                error ("history: expecting file name for %s option",
-                     option.c_str ());
-                return hlist;
-              }
+                {
+                  error ("history: expecting file name for %s option",
+                         option.c_str ());
+                  return hlist;
+                }
             }
           else
-            command_history::set_file ( default_history_file ());
+            command_history::set_file (default_history_file ());
 
           if (option == "-a")
             // Append 'new' lines to file.
             command_history::append ();
 
           else if (option == "-w")
             // Write entire history.
             command_history::write ();
@@ -310,59 +310,16 @@ edit_history_readline (std::fstream& str
 
   // Finish with newline if none in file.
 
   line[lindex++] = '\n';
   line[lindex++] = '\0';
   return line;
 }
 
-// Use 'command' to replace the last entry in the history list, which,
-// by this time, is 'run_history blah...'.  The intent is that the
-// new command becomes the history entry, and that 'fc' should never
-// appear in the history list.  This way you can do 'run_history' to
-// your heart's content.
-
-// FIXME: Don't delete this block of code until memory
-//        leak in edit_history has been plugged and
-//        it is clear that this code can be removed.
-//        See additional FIXME in do_edit_history.
-/*
-static void
-edit_history_repl_hist (const std::string& command)
-{
-  if (! command.empty ())
-    {
-      string_vector hlist = command_history::list ();
-
-      int len = hlist.length ();
-
-      if (len > 0)
-        {
-          int i = len - 1;
-
-          std::string histent = command_history::get_entry (i);
-
-          if (! histent.empty ())
-            {
-              std::string cmd = command;
-
-              int cmd_len = cmd.length ();
-
-              if (cmd[cmd_len - 1] == '\n')
-                cmd.resize (cmd_len - 1);
-
-              if (! cmd.empty ())
-                command_history::replace_entry (i, cmd);
-            }
-        }
-    }
-}
-*/
-
 static void
 edit_history_add_hist (const std::string& line)
 {
   if (! line.empty ())
     {
       std::string tmp = line;
 
       int len = tmp.length ();
@@ -555,26 +512,16 @@ do_edit_history (const octave_value_list
       // Skip blank lines.
 
       if (line[0] == '\n')
         {
           delete [] line;
           continue;
         }
 
-      // FIXME: Don't delete this block of code until memory
-      //        leak in edit_history has been plugged and
-      //        it is clear that this code can be removed.
-      // Command 'edit history' has already been removed in mk_tmp_hist_file ()
-      //if (first)
-      //  {
-      //    first = 0;
-      //    edit_history_repl_hist (line);
-      //  }
-      //else
       edit_history_add_hist (line);
 
       delete [] line;
     }
 
   file.close ();
 
   // Turn on command echo, so the output from this will make better
