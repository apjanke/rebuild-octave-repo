# HG changeset patch
# User Marco Caliari <marco.caliari@univr.it>
# Date 1551882978 -3600
#      Wed Mar 06 15:36:18 2019 +0100
# Branch stable
# Node ID a018fca707cad5e954a0bbd0bb28868e6f350cc2
# Parent  b0f359a5ad350cb8d71511a1ab06815eb1de2cd8
poly.m: fix the fix for input of complex conjugate pairs (bug #53897).

* poly.m: Calculate positive imaginary parts, and negative imaginary parts
separately.  When comparing for complex conjugation, first check that the
positive and negative parts match in number and location, before checking that
they are equal in magnitude.  Add BIST test for bug #53897.

diff --git a/scripts/polynomial/poly.m b/scripts/polynomial/poly.m
--- a/scripts/polynomial/poly.m
+++ b/scripts/polynomial/poly.m
@@ -76,30 +76,39 @@ function y = poly (x)
   for j = 1:n
     y(2:(j+1)) -= v(j) .* y(1:j);
   endfor
 
   ## Real, or complex conjugate inputs, should result in real output
   if (isreal (x))
     y = real (y);
   else
-    tmp = sort (v(imag (v) > 0)) == sort (conj (v(imag (v) < 0)));
-    if (! isempty (tmp) && all (tmp))
-      y = real (y);
+    pos_imag = sort (v(imag (v) > 0));
+    neg_imag = sort (conj (v(imag (v) < 0)));
+    if (size_equal (pos_imag, neg_imag))
+      is_equal = (pos_imag == neg_imag);
+      if (! isempty (is_equal) && all (is_equal))
+        y = real (y);
+      endif
     endif
   endif
 
 endfunction
 
 
 %!assert (poly ([]), 1)
 %!assert (poly ([1, 2, 3]), [1, -6, 11, -6])
 %!assert (poly ([1, 2; 3, 4]), [1, -5, -2], sqrt (eps))
 
 %!test <*53897>
 %! x = [1, sqrt(2)/2+sqrt(2)/2*i, 1i, -sqrt(2)/2+sqrt(2)/2*i, -1, ...
 %!      -sqrt(2)/2-sqrt(2)/2*i, -1i, sqrt(2)/2-sqrt(2)/2*i];
 %! y = poly (x);
 %! assert (isreal (y), true);
 
+%!test <53897>
+%! x = [1 + 1i, 1 + 2i, 3, 4];
+%! y = poly (x);
+%! assert (y, [1 + 0i, -9 - 3i, 25 + 24i, -17 - 57i, -12 + 36i]);
+
 %!error poly ()
 %!error poly (1,2)
 %!error poly ([1, 2, 3; 4, 5, 6])
