# HG changeset patch
# User jwe
# Date 1196228819 0
#      Wed Nov 28 05:46:59 2007 +0000
# Node ID f06b8150fe56b288055fac8b2bb3be206ce55967
# Parent  a730e47fda4de105a529be53f0e7d2292dd96285
[project @ 2007-11-28 05:46:58 by jwe]

diff --git a/src/Cell.cc b/src/Cell.cc
--- a/src/Cell.cc
+++ b/src/Cell.cc
@@ -52,18 +52,19 @@ Cell::Cell (const string_vector& sv, boo
 
 	  elem(i,0) = s;
 	}
     }
 }
 
 // Set size to DV, filling with [].  Then fill with as many elements of
 // SV as possible.
+
 Cell::Cell (const dim_vector& dv, const string_vector& sv, bool trim)
-  : ArrayN<octave_value> (dv)
+  : ArrayN<octave_value> (dv, resize_fill_value ())
 {
   octave_idx_type n = sv.length ();
 
   if (n > 0)
     {
       octave_idx_type m = numel ();
 
       octave_idx_type len = n > m ? m : n;
diff --git a/src/Cell.h b/src/Cell.h
--- a/src/Cell.h
+++ b/src/Cell.h
@@ -45,17 +45,18 @@ public:
 
   Cell (const octave_value_list& ovl)
     : ArrayN<octave_value> (dim_vector (1, ovl.length ()))
     {
       for (octave_idx_type i = 0; i < ovl.length (); i++)
 	elem (i) = ovl (i);
     }
 
-  Cell (octave_idx_type n, octave_idx_type m, const octave_value& val = resize_fill_value ())
+  Cell (octave_idx_type n, octave_idx_type m,
+	const octave_value& val = resize_fill_value ())
     : ArrayN<octave_value> (dim_vector (n, m), val) { }
 
   Cell (const dim_vector& dv, const octave_value& val = resize_fill_value ())
     : ArrayN<octave_value> (dv, val) { }
 
   Cell (const ArrayN<octave_value>& c)
     : ArrayN<octave_value> (c) { }
 
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,21 @@
+2007-11-28  John W. Eaton  <jwe@octave.org>
+
+	* TEMPLATE-INST/Array-tc.cc (resize_fill_value<octave_value>):
+	Delete.
+
+	* Cell.cc (Cell::Cell (const dim_vector&, const string_vector&, bool)):
+	Initialize undefined values to resize_fill_value ().
+
 2007-11-27  John W. Eaton  <jwe@octave.org>
 
+	* TEMPLATE-INST/Array-tc.cc (resize_fill_value<octave_value>):
+	Tag inline.  From Moritz Borgmann <octave@moriborg.de>.
+
 	* pt-bp.cc (tree_breakpoint::visit_decl_command): Also check line
 	number of cmd.
 	* pt-decl.cc (tree_global_command::eval, tree_static_command::eval):
 	Insert MAYBE_DO_BREAKPOINT here.
 
 	* error.cc (Fwarning): If setting state "all" to "error", leave
 	Octave:matlab-incompatible and Octave:single-quote-string warning
 	states unchanged.
diff --git a/src/TEMPLATE-INST/Array-tc.cc b/src/TEMPLATE-INST/Array-tc.cc
--- a/src/TEMPLATE-INST/Array-tc.cc
+++ b/src/TEMPLATE-INST/Array-tc.cc
@@ -35,24 +35,16 @@ along with Octave; see the file COPYING.
 #include "ArrayN.h"
 #include "ArrayN.cc"
 
 #include "DiagArray2.h"
 #include "DiagArray2.cc"
 
 #include "oct-obj.h"
 
-template<> OCTINTERP_API
-octave_value
-resize_fill_value<octave_value> (const octave_value&)
-{
-  static octave_value retval = octave_value (Matrix ());
-  return retval;
-}
-
 template class OCTINTERP_API Array<octave_value>;
 
 INSTANTIATE_ARRAY_ASSIGN (octave_value, octave_value, OCTINTERP_API);
 
 template class OCTINTERP_API Array2<octave_value>;
 
 template class OCTINTERP_API ArrayN<octave_value>;
 
