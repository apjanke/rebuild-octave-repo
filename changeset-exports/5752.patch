# HG changeset patch
# User jwe
# Date 1144861337 0
#      Wed Apr 12 17:02:17 2006 +0000
# Node ID d43a097e13d7a0d116d0423bc13a60b078b57ecf
# Parent  02c7e288f5811528c2267e37a6a216b88eefa159
[project @ 2006-04-12 17:02:17 by jwe]

diff --git a/liboctave/ArrayN.h b/liboctave/ArrayN.h
--- a/liboctave/ArrayN.h
+++ b/liboctave/ArrayN.h
@@ -54,17 +54,17 @@ public:
   // future, so don't depend on them being here!), but they can't be
   // until template friends work correctly in g++.
 
   ArrayN (void) : Array<T> () { }
 
   ArrayN (const dim_vector& dv) : Array<T> (dv) { }
 
   ArrayN (const dim_vector& dv, const T& val)
-    : Array<T> (dv) { fill (val); }
+    : Array<T> (dv) { Array<T>::fill (val); }
 
   template <class U>
   explicit ArrayN (const Array2<U>& a) : Array<T> (a, a.dims ()) { }
 
   template <class U>
   ArrayN (const ArrayN<U>& a) : Array<T> (a, a.dims ()) { }
 
   template <class U>
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+2006-04-12  Rafael Laboissiere  <rafael@debian.org>
+
+	* ArrayN.h (ArrayN::ArrayN): Qualify fill with Array<T> base class.
+	* DiagArray2.h (DiagArray2::DiagArray2): Likewise.
+
 2006-04-03  David Bateman  <dbateman@free.fr>
 
 	* Sparse.cc (Sparse<T>::resize): Use xcidx rather than cdix, etc
 	to avoid copy of original matrix.
 
 	* Makefile.in (INCLUDES): Add randgamma.h, randpoisson.h and
         randmtzig.h to the list.
 	(LIBOCTAVE_C_SOURCES): Add randgamma.c, randpoisson.c and
diff --git a/liboctave/DiagArray2.h b/liboctave/DiagArray2.h
--- a/liboctave/DiagArray2.h
+++ b/liboctave/DiagArray2.h
@@ -116,17 +116,17 @@ public:
 
   DiagArray2 (octave_idx_type r, octave_idx_type c) : Array<T> (r < c ? r : c)
     { this->dimensions = dim_vector (r, c); }
 
   DiagArray2 (octave_idx_type r, octave_idx_type c, const T& val) : Array<T> (r < c ? r : c)
     {
       this->dimensions = dim_vector (r, c);
 
-      fill (val);
+      Array<T>::fill (val);
     }
 
   DiagArray2 (const Array<T>& a) : Array<T> (a)
     { this->dimensions = dim_vector (a.length (), a.length ()); }
 
   DiagArray2 (const DiagArray2<T>& a) : Array<T> (a)
     { this->dimensions = a.dims (); }
 
