# HG changeset patch
# User jwe
# Date 780159202 0
#      Wed Sep 21 14:53:22 1994 +0000
# Node ID b14a2dda50e76a59063ee1e4bae4ef6514f5f0cf
# Parent  893c1893398fec7ce348aec2b9651e72ccec851f
[project @ 1994-09-21 14:51:52 by jwe]

diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -16,17 +16,17 @@ dnl Octave is distributed in the hope th
 dnl ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 dnl FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 dnl for more details.
 dnl 
 dnl You should have received a copy of the GNU General Public License
 dnl along with Octave; see the file COPYING.  If not, write to the Free
 dnl Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
 dnl
-AC_REVISION($Revision: 1.47 $)dnl
+AC_REVISION($Revision: 1.48 $)dnl
 AC_PREREQ(1.8)dnl
 AC_INIT(src/octave.cc)
 AC_CONFIG_HEADER(config.h kpathsea/c-auto.h)
 dnl
 AC_DEFINE(OCTAVE_SOURCE, 1)dnl
 dnl
 dnl See if we were given the target host type.  If not, use
 dnl config.guess to try to guess the target host type.
@@ -165,49 +165,43 @@ AC_SUBST(infodir)
 AC_SUBST(fcnfiledir)
 AC_SUBST(localfcnfilepath)
 AC_SUBST(archlibdir)
 AC_SUBST(octfiledir)
 AC_SUBST(localoctfilepath)
 AC_SUBST(fcnfilepath)
 AC_SUBST(imagepath)
 dnl
-DYNAMIC_LD_OBJ=
 DLD_DIR=
 LIBDLD=
 LIBOCTDLD='../liboctdld.a'
 LD_STATIC_FLAG=
 if $use_dld; then
-  DYNAMIC_LD_OBJ='dynamic-ld.o'
   DLD_DIR=dld
   LIBDLD='../libdld.a'
 # don't link them in only if doing dynamic linking and small kernel
 # requested.
   if $lite_kernel; then
     LIBOCTDLD=
   fi
   LD_STATIC_FLAG=-static
   AC_DEFINE(WITH_DLD, 1)dnl
 fi
-if test -n "$DYNAMIC_LD_OBJ"; then
-  AC_VERBOSE([defining DYNAMIC_LD_OBJ to be $DYNAMIC_LD_OBJ])
-fi
 if test -n "$DLD_DIR"; then
   AC_VERBOSE([defining DLD_DIR to be $DLD_DIR])
 fi
 if test -n "$LIBDLD"; then
   AC_VERBOSE([defining LIBDLD to be $LIBDLD])
 fi
 if test -n "$LIBOCTDLD"; then
   AC_VERBOSE([defining LIBOCTDLD to be $LIBOCTDLD])
 fi
 if test -n "$LD_STATIC_FLAG"; then
   AC_VERBOSE([defining LD_STATIC_FLAG to be $LD_STATIC_FLAG])
 fi
-AC_SUBST(DYNAMIC_LD_OBJ)dnl
 AC_SUBST(DLD_DIR)dnl
 AC_SUBST(LIBDLD)dnl
 AC_SUBST(LIBOCTDLD)dnl
 AC_SUBST(LD_STATIC_FLAG)dnl
 dnl
 dnl See if the optional nonlinear programming code is present.
 dnl
 AC_CHECKING([for npsol])
@@ -796,11 +790,12 @@ dnl
 define([cruftdirs], [tmpa tmpb tmpc tmpd tmpe tmpf tmpg tmph])dnl
 define([tmpSA], [scripts/Makefile scripts/control/Makefile])dnl
 define([tmpSB], [scripts/general/Makefile scripts/image/Makefile])dnl
 define([tmpSC], [scripts/linear-algebra/Makefile])dnl
 define([tmpSD], [scripts/miscellaneous/Makefile scripts/plot/Makefile])dnl
 define([tmpSE], [scripts/polynomial/Makefile scripts/set/Makefile])dnl
 define([tmpSF], [scripts/signal/Makefile scripts/special-matrix/Makefile])dnl
 define([tmpSG], [scripts/statistics/Makefile])dnl
-define([scriptdirs], [tmpSA tmpSB tmpSC tmpSD tmpSE tmpSF tmpSG])dnl
+define([tmpSH], [scripts/elfun/Makefile scripts/specfun/Makefile])dnl
+define([scriptdirs], [tmpSA tmpSB tmpSC tmpSD tmpSE tmpSF tmpSG tmpSH])dnl
 dnl
 AC_OUTPUT([srcdirs cruftdirs scriptdirs])dnl
diff --git a/octMakefile.in b/octMakefile.in
--- a/octMakefile.in
+++ b/octMakefile.in
@@ -17,17 +17,17 @@ include $(TOPDIR)/Makeconf
 DISTFILES = BUGS COPYING INSTALL INSTALL.OCTAVE Makefile.in \
 	Makeconf.in NEWS PROJECTS README README.NLP SENDING-PATCHES \
 	THANKS f2c-compat.sh flibs.sh cxxlibs.sh configure configure.in \
 	config.guess config.sub float-type.c move-if-change octave.sh \
 	octave-mode.el install.sh doinstall.sh mkpath.c config.h.in \
 	acconfig.h MAKEINFO.PATCH ChangeLog ChangeLog.[0-9]
 
 # Complete directory trees to distribute.
-DISTDIRS = bsd-math dld kpathsea
+DISTDIRS = bsd-math kpathsea
 
 # Subdirectories to run make in for the primary targets.
 SUBDIRS = libcruft liboctave @DLD_DIR@ info readline kpathsea src doc scripts 
 
 # Subdirectories to run `make dist' in
 DISTSUBDIRS = $(SUBDIRS) test
 
 BINDISTFILES = COPYING ChangeLog NEWS README THANKS INSTALL.OCTAVE \
diff --git a/src/Makefile.in b/src/Makefile.in
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -96,25 +96,24 @@ DEF_FILES_4 = $(addprefix $(srcdir)/, $(
 DEF_FILES_3 = $(notdir $(shell grep -l "^DEFUN" $(DEF_FILES_4)))
 DEF_FILES_2 = $(patsubst %.y, %.def, $(DEF_FILES_3))
 DEF_FILES_1 = $(patsubst %.l, %.def, $(DEF_FILES_2))
 DEF_FILES = $(patsubst %.cc, %.def, $(DEF_FILES_1))
 
 # XXX FIXME XXX -- Should these be generated automatically from the
 # list of source files?
 
-OBJECTS = arith-ops.o builtins.o data.o dirfns.o error.o \
+OBJECTS = arith-ops.o builtins.o data.o dirfns.o dynamic-ld.o error.o \
 	file-io.o fnmatch.o getopt.o getopt1.o gripes.o help.o \
 	idx-vector.o input.o lex.o load-save.o mappers.o octave.o \
 	octave-hist.o oct-obj.o pager.o parse.o pr-output.o \
 	procstream.o sighandlers.o strcasecmp.o strncase.o symtab.o \
 	sysdep.o tc-rep.o timefns.o token.o tree-base.o tree-cmd.o \
 	tree-const.o tree-expr.o tree-plot.o tree-misc.o unwind-prot.o \
-	user-prefs.o utils.o variables.o xdiv.o xpow.o SLStack.o \
-	@DYNAMIC_LD_OBJ@
+	user-prefs.o utils.o variables.o xdiv.o xpow.o SLStack.o
 
 OCTAVE_LIBS = @LIBOCTDLD@ ../liboctave.a ../libcruft.a ../libinfo.a \
 	../libreadline.a ../libkpathsea.a @LIBDLD@
 
 DISTFILES = Makefile.in mkdefs mkbuiltins \
 	parse.cc lex.cc y.tab.h $(INCLUDES) $(SOURCES)
 
 all: defaults.h octave
@@ -185,17 +184,17 @@ local-dist: parse.cc lex.cc
 	ln $(DISTFILES) ../`cat ../.fname`/src
 	rm -f parse.cc lex.cc y.tab.h y.output yy.lex.c
 	rm -f lex.cc parse.cc defaults.h *.d *.def
 .PHONY: local-dist
 
 dist: parse.cc lex.cc
 	ln $(DISTFILES) ../`cat ../.fname`/src
 	rm -f parse.cc lex.cc y.tab.h y.output yy.lex.c
-	rm -f lex.cc parse.cc defaults.h *.d *.def
+	rm -f lex.cc parse.cc defaults.h *.d *.def builtins.cc
 .PHONY: dist
 
 # Special rules -- these files need special things to be defined.
 
 defaults.h: defaults.h.in ../Makeconf Makefile
 	@echo "making defaults.h from defaults.h.in"
 	@(sed < $< > $@.tmp \
 	  -e "s;%DEFAULT_PAGER%;\"${DEFAULT_PAGER}\";" \
