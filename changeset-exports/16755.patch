# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1371048629 14400
#      Wed Jun 12 10:50:29 2013 -0400
# Node ID 787168f5f858b52492ee8e3e987482db015c1ada
# Parent  022dba56de1e78b660f036efda6fdfdd3cc34234
tag symbols in indexed assignments as variables (bug #39240)

* pt-arg-list.cc (tree_argument_list::variable_names): Also return the
symbol names from index expressions.
* parser.tst: New test.

diff --git a/libinterp/parse-tree/pt-arg-list.cc b/libinterp/parse-tree/pt-arg-list.cc
--- a/libinterp/parse-tree/pt-arg-list.cc
+++ b/libinterp/parse-tree/pt-arg-list.cc
@@ -293,16 +293,23 @@ tree_argument_list::variable_names (void
       tree_expression *elt = *p;
 
       if (elt->is_identifier ())
         {
           tree_identifier *id = dynamic_cast<tree_identifier *> (elt);
       
           retval.push_back (id->name ());
         }
+      else if (elt->is_index_expression ())
+        {
+          tree_index_expression *idx_expr
+            = dynamic_cast<tree_index_expression *> (elt);
+
+          retval.push_back (idx_expr->name ());
+        }
     }
 
   return retval;
 }
 
 tree_argument_list *
 tree_argument_list::dup (symbol_table::scope_id scope,
                          symbol_table::context_id context) const
diff --git a/test/parser.tst b/test/parser.tst
--- a/test/parser.tst
+++ b/test/parser.tst
@@ -252,8 +252,14 @@
 %!test
 %! af_in_cell = {@(x) [1 2]};
 %! assert (af_in_cell{1}(), [1, 2]);
 
 %!test
 %! R = @(rot) [cos(rot) -sin(rot); sin(rot) cos(rot)];
 %! assert (R(pi/2), [cos(pi/2), -sin(pi/2); sin(pi/2),cos(pi/2)]);
 
+## Check that xyz is tagged as a variable in the parser.  Both
+## expressions must remain on one line for this test to work as
+## intended.
+%!test
+%! xyz(1) = 1; xyz /= 1;
+%! assert (xyz, 1);
