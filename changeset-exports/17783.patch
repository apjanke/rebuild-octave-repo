# HG changeset patch
# User Andreas Weber <andy.weber.aw@gmail.com>
# Date 1382991105 -3600
#      Mon Oct 28 21:11:45 2013 +0100
# Node ID eca761671f1613904573f6f00b075e8ec350395c
# Parent  136a9e27256ed54fe554e8953be03fe5205c8288
SparseCmplxCHOL.cc, SparsedbleCHOL.cc: removed spchol2inv from error msg

diff --git a/liboctave/numeric/SparseCmplxCHOL.cc b/liboctave/numeric/SparseCmplxCHOL.cc
--- a/liboctave/numeric/SparseCmplxCHOL.cc
+++ b/liboctave/numeric/SparseCmplxCHOL.cc
@@ -56,15 +56,15 @@ chol2inv (const SparseComplexMatrix& r)
         }
       else if (typ == MatrixType::Lower)
         {
           rinv = r.transpose ().inverse (mattype, info, rcond, true, false);
           retval = rinv.transpose () * rinv;
         }
       else
         (*current_liboctave_error_handler)
-          ("spchol2inv requires triangular matrix");
+          ("U must be a triangular matrix");
     }
   else
-    (*current_liboctave_error_handler) ("spchol2inv requires square matrix");
+    (*current_liboctave_error_handler) ("U must be a square matrix");
 
   return retval;
 }
diff --git a/liboctave/numeric/SparsedbleCHOL.cc b/liboctave/numeric/SparsedbleCHOL.cc
--- a/liboctave/numeric/SparsedbleCHOL.cc
+++ b/liboctave/numeric/SparsedbleCHOL.cc
@@ -56,15 +56,15 @@ chol2inv (const SparseMatrix& r)
         }
       else if (typ == MatrixType::Lower)
         {
           rinv = r.transpose ().inverse (mattype, info, rcond, true, false);
           retval = rinv.transpose () * rinv;
         }
       else
         (*current_liboctave_error_handler)
-          ("spchol2inv requires triangular matrix");
+          ("U must be a triangular matrix");
     }
   else
-    (*current_liboctave_error_handler) ("spchol2inv requires square matrix");
+    (*current_liboctave_error_handler) ("U must be a square matrix");
 
   return retval;
 }
