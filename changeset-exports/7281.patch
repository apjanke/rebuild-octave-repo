# HG changeset patch
# User jwe
# Date 1197322275 0
#      Mon Dec 10 21:31:15 2007 +0000
# Node ID add731f4024dbc51947a57262d8ecb045028ff48
# Parent  96f86c256ca019471992d5b9af68860ee79fbc76
[project @ 2007-12-10 21:31:14 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,10 +1,14 @@
 2007-12-10  John W. Eaton  <jwe@octave.org>
 
+	* general/issymmetric.m: Use ' instead of .' for compatibility
+	with previous versions of Octave.
+	* general/ishermitian.m: Delete.
+
 	* plot/fplot.m: In N is not specified, increase initial number of
 	points from 3 and 5 to 5 and 8.
 
 	* signal/detrend.m: Move tests here from test/test_signal.m.
 	Loosen tolerance on first test from 10*eps to 20*eps.
 
 	* finance/rate.m: Don't request info from fsolve.
 
diff --git a/scripts/general/ishermitian.m b/scripts/general/ishermitian.m
deleted file mode 100644
--- a/scripts/general/ishermitian.m
+++ /dev/null
@@ -1,56 +0,0 @@
-## Copyright (C) 1996, 1997, 2002, 2003, 2004, 2005, 2006, 2007
-##               John W. Eaton
-##
-## This file is part of Octave.
-##
-## Octave is free software; you can redistribute it and/or modify it
-## under the terms of the GNU General Public License as published by
-## the Free Software Foundation; either version 3 of the License, or (at
-## your option) any later version.
-##
-## Octave is distributed in the hope that it will be useful, but
-## WITHOUT ANY WARRANTY; without even the implied warranty of
-## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-## General Public License for more details.
-##
-## You should have received a copy of the GNU General Public License
-## along with Octave; see the file COPYING.  If not, see
-## <http://www.gnu.org/licenses/>.
-
-## -*- texinfo -*-
-## @deftypefn {Function File} {} ishermitian (@var{x}, @var{tol})
-## If @var{x} is Hermitian within the tolerance specified by @var{tol},
-## then return the dimension of @var{x}.  Otherwise, return 0.  If
-## @var{tol} is omitted, use a tolerance equal to the machine precision.
-## Matrix @var{x} is considered symmetric if
-## @code{norm (@var{x} - @var{x}', inf) / norm (@var{x}, inf) < @var{tol}}.
-## @seealso{size, rows, columns, length, ismatrix, isscalar,
-## issquare, issymmetric, isvector}
-## @end deftypefn
-
-## Author: A. S. Hodel <scotte@eng.auburn.edu>
-## Created: August 1993
-## Adapted-By: jwe
-
-function retval = ishermitian (x, tol)
-
-  if (nargin == 1 || nargin == 2)
-    retval = issquare (x);
-    if (retval != 0)
-      if (nargin == 1)
-        tol = eps;
-      endif
-      norm_x = norm (x, inf);
-      if (norm_x != 0 && norm (x - x', inf) / norm_x > tol)
-        retval = 0;
-      endif
-    endif
-  else
-    print_usage ();
-  endif
-
-endfunction
-
-%!assert(ishermitian ([1, 2i; -2i, 1]) == 2);
-%!assert(!ishermitian ([1, 2i; 2i, 1]));
-%!assert(ishermitian ([1, 2.1i; -2i, 1.1], 0.2) == 2);
diff --git a/scripts/general/issymmetric.m b/scripts/general/issymmetric.m
--- a/scripts/general/issymmetric.m
+++ b/scripts/general/issymmetric.m
@@ -36,33 +36,33 @@ function retval = issymmetric (x, tol)
 
   if (nargin == 1 || nargin == 2)
     retval = issquare (x);
     if (retval != 0)
       if (nargin == 1)
         tol = eps;
       endif
       norm_x = norm (x, inf);
-      if (norm_x != 0 && norm (x - x.', inf) / norm_x > tol)
+      if (norm_x != 0 && norm (x - x', inf) / norm_x > tol)
         retval = 0;
       endif
     endif
   else
     print_usage ();
   endif
 
 endfunction
 
 %!assert(issymmetric (1));
 %!assert(!(issymmetric ([1, 2])));
 %!assert(!(issymmetric ([])));
 %!assert(issymmetric ([1, 2; 2, 1]) == 2);
 %!assert(!(issymmetric ("test")));
 %!assert(issymmetric ([1, 2.1; 2, 1.1], 0.2) == 2);
-%!assert(!issymmetric ([1, 2i; -2i, 1]));
+%!assert(issymmetric ([1, 2i; -2i, 1]));
 %!assert(!(issymmetric ("t")));
 %!assert(!(issymmetric (["te"; "et"])));
 %!error issymmetric ([1, 2; 2, 1], 0, 0);
 %!error issymmetric ();
 
 %!test
 %! s.a = 1;
 %! assert(!(issymmetric (s)));
