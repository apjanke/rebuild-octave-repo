# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1222734342 14400
#      Mon Sep 29 20:25:42 2008 -0400
# Node ID 0d37c99fc06faa560de017f367ff4ffa92b97a2f
# Parent  7d6e659acc1abf3626c69dd8be22c540bec1c466
__go_draw_axes__.m: eliminate have_newer_gnuplot variable

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,10 +1,12 @@
 2008-09-29  John W. Eaton  <jwe@octave.org>
 
+	* plot/__go_draw_axes__.m: Eliminate have_newer_gnuplot variable.
+
 	* plot/__gnuplot_version__.m: Also include patchlevel.
 
 2008-09-29  Ben Abbott <bpabbott@mac.com>
 
 	* polynomial/deconv.m: Fix row/col orientation & length of output.
 
 	* polynomial/conv.m: Correct row/col orientation of output.
 
diff --git a/scripts/plot/__go_draw_axes__.m b/scripts/plot/__go_draw_axes__.m
--- a/scripts/plot/__go_draw_axes__.m
+++ b/scripts/plot/__go_draw_axes__.m
@@ -23,19 +23,16 @@
 function __go_draw_axes__ (h, plot_stream, enhanced, mono)
 
   if (nargin == 4)
 
     axis_obj = __get__ (h);
 
     parent_figure_obj = get (axis_obj.parent);
 
-    persistent have_newer_gnuplot ...
-      = compare_versions (__gnuplot_version__ (), "4.0", ">");
-
     ## Set axis properties here?
     pos = [0, 0, 1, 1];
     if (strcmpi (axis_obj.activepositionproperty, "outerposition"))
       ymirror = true;
       if (! isempty (axis_obj.outerposition))
 	pos = axis_obj.outerposition;
       endif
     else
@@ -66,18 +63,17 @@ function __go_draw_axes__ (h, plot_strea
 
     fputs (plot_stream, "unset label;\n");
 
     if (! isempty (axis_obj.title))
       t = get (axis_obj.title);
       if (isempty (t.string))
 	fputs (plot_stream, "unset title;\n");
       else
-	[tt, f, s] = __maybe_munge_text__ (enhanced, t, "string", 
-					   have_newer_gnuplot);
+	[tt, f, s] = __maybe_munge_text__ (enhanced, t, "string");
 	if (strcmp (f, "*"))
 	  fontspec = "";
 	else
 	  fontspec = sprintf ("font \"%s,%d\"", f, s);
 	endif
 	fprintf (plot_stream, "set title \"%s\" %s %s;\n",
 		 undo_string_escapes (tt), fontspec,
 		 __do_enhanced_option__ (enhanced, t));
@@ -87,105 +83,89 @@ function __go_draw_axes__ (h, plot_strea
     if (! isempty (axis_obj.xlabel))
       t = get (axis_obj.xlabel);
       angle = t.rotation;
       colorspec = get_text_colorspec (axis_obj.xcolor, mono);
       if (isempty (t.string))
 	fprintf (plot_stream, "unset xlabel;\n");
 	fprintf (plot_stream, "unset x2label;\n");
       else
-	[tt, f, s] = __maybe_munge_text__ (enhanced, t, "string",
-					   have_newer_gnuplot);
+	[tt, f, s] = __maybe_munge_text__ (enhanced, t, "string");
 	if (strcmp (f, "*"))
 	  fontspec = "";
 	else
 	  fontspec = sprintf ("font \"%s,%d\"", f, s);
 	endif
 	if (strcmpi (axis_obj.xaxislocation, "top"))
 	  fprintf (plot_stream, "set x2label \"%s\" %s %s %s",
 		   undo_string_escapes (tt), colorspec, fontspec,
 		   __do_enhanced_option__ (enhanced, t));
 	else
 	  fprintf (plot_stream, "set xlabel \"%s\" %s %s %s",
 		   undo_string_escapes (tt), colorspec, fontspec,
 		   __do_enhanced_option__ (enhanced, t));
 	endif
-	if (have_newer_gnuplot)
-	  ## Rotation of xlabel not yet support by gnuplot as of 4.2, but
-	  ## there is no message about it.
-	  fprintf (plot_stream, " rotate by %f", angle);
-	endif
-	fputs (plot_stream, ";\n");
+	fprintf (plot_stream, " rotate by %f;\n", angle);
 	if (strcmpi (axis_obj.xaxislocation, "top"))
 	  fprintf (plot_stream, "unset xlabel;\n");
 	else
 	  fprintf (plot_stream, "unset x2label;\n");
 	endif
       endif
     endif
 
     if (! isempty (axis_obj.ylabel))
       t = get (axis_obj.ylabel);
       angle = t.rotation;
       colorspec = get_text_colorspec (axis_obj.ycolor, mono);
       if (isempty (t.string))
 	fprintf (plot_stream, "unset ylabel;\n");
 	fprintf (plot_stream, "unset y2label;\n");
       else
-	[tt, f, s] = __maybe_munge_text__ (enhanced, t, "string",
-					   have_newer_gnuplot);
+	[tt, f, s] = __maybe_munge_text__ (enhanced, t, "string");
 	if (strcmp (f, "*"))
 	  fontspec = "";
 	else
 	  fontspec = sprintf ("font \"%s,%d\"", f, s);
 	endif
 	if (strcmpi (axis_obj.yaxislocation, "right"))
 	  fprintf (plot_stream, "set y2label \"%s\" %s %s %s",
 		   undo_string_escapes (tt), colorspec, fontspec,
 		   __do_enhanced_option__ (enhanced, t));
 	else
 	  fprintf (plot_stream, "set ylabel \"%s\" %s %s %s",
 		   undo_string_escapes (tt), colorspec, fontspec,
 		   __do_enhanced_option__ (enhanced, t));
 	endif
-	if (have_newer_gnuplot)
-	  fprintf (plot_stream, " rotate by %f;\n", angle);
-	endif
-	fputs (plot_stream, ";\n");
+	fprintf (plot_stream, " rotate by %f;\n", angle);
 	if (strcmpi (axis_obj.yaxislocation, "right"))
 	  fprintf (plot_stream, "unset ylabel;\n");
 	else
 	  fprintf (plot_stream, "unset y2label;\n");
 	endif
       endif
     endif
 
     if (! isempty (axis_obj.zlabel))
       t = get (axis_obj.zlabel);
       angle = t.rotation;
       colorspec = get_text_colorspec (axis_obj.zcolor, mono);
       if (isempty (t.string))
 	fputs (plot_stream, "unset zlabel;\n");
       else
-	[tt, f, s] = __maybe_munge_text__ (enhanced, t, "string",
-					   have_newer_gnuplot);
+	[tt, f, s] = __maybe_munge_text__ (enhanced, t, "string");
 	if (strcmp (f, "*"))
 	  fontspec = "";
 	else
 	  fontspec = sprintf ("font \"%s,%d\"", f, s);
 	endif
 	fprintf (plot_stream, "set zlabel \"%s\" %s %s %s",
 		 undo_string_escapes (tt), colorspec, fontspec,
 		 __do_enhanced_option__ (enhanced, t));
-	if (have_newer_gnuplot)
-	  ## Rotation of zlabel not yet support by gnuplot as of 4.2, but
-	  ## there is no message about it.
-	  fprintf (plot_stream, " rotate by %f;\n", angle);
-	endif
-	fputs (plot_stream, ";\n");
+	fprintf (plot_stream, " rotate by %f;\n", angle);
       endif
     endif
 
     if (strcmpi (axis_obj.xaxislocation, "top"))
       xaxisloc = "x2";
       xaxisloc_using = "x2";
     else
       xaxisloc = "x";
@@ -396,17 +376,17 @@ function __go_draw_axes__ (h, plot_strea
 	  endif
 	  data_idx++;
 	  is_image_data(data_idx) = false;
 	  parametric(data_idx) = true;
 	  have_cdata(data_idx) = false;
 	  if (isempty (obj.keylabel))
 	    titlespec{data_idx} = "title \"\"";
 	  else
-	    tmp = undo_string_escapes (__maybe_munge_text__ (enhanced, obj, "keylabel", have_newer_gnuplot));
+	    tmp = undo_string_escapes (__maybe_munge_text__ (enhanced, obj, "keylabel"));
 	    titlespec{data_idx} = cstrcat ("title \"", tmp, "\"");
 	  endif
 	  usingclause{data_idx} = "";
 	  errbars = "";
 	  if (nd == 3)
 	    xdat = obj.xdata(:);
 	    ydat = obj.ydata(:);
 	    if (! isempty (obj.zdata))
@@ -488,32 +468,18 @@ function __go_draw_axes__ (h, plot_strea
 	      usingclause{data_idx} = sprintf ("using ($1):($2) axes %s%s",
 					      xaxisloc_using, yaxisloc_using);
 	    endif
 	  endif
 
 	  [style, typ, with] = do_linestyle_command (obj, data_idx, mono,
 						     plot_stream, errbars);
 
-	  if (have_newer_gnuplot || isnan (typ))
-	    withclause{data_idx} = sprintf ("with %s linestyle %d",
-					    style, data_idx);
-	  else
-	    withclause{data_idx} = sprintf ("with %s linetype %d",
-					    style, typ);
-	  endif
-
-	  if (! (have_newer_gnuplot || isempty (with)))
-	    if (isempty (withclause{data_idx}))
-	      withclause{data_idx} = sprintf ("with %s", with);
-	    else
-	      withclause{data_idx} = sprintf ("%s %s", withclause{data_idx},
-					      with);
-	    endif
-	  endif
+	  withclause{data_idx} = sprintf ("with %s linestyle %d",
+					  style, data_idx);
 
        case "patch"
          cmap = parent_figure_obj.colormap;
 	 [nr, nc] = size (obj.xdata);
 
 	 if (! isempty (obj.cdata))
 	   cdat = obj.cdata;
 	   if (strcmpi (obj.cdatamapping, "direct"))
@@ -548,17 +514,17 @@ function __go_draw_axes__ (h, plot_strea
 
 	       data_idx++;
 	       is_image_data(data_idx) = false;
 	       parametric(data_idx) = false;
 	       have_cdata(data_idx) = false;
 	       if (i > 1 || isempty (obj.keylabel))
 		 titlespec{data_idx} = "title \"\"";
 	       else
-		 tmp = undo_string_escapes (__maybe_munge_text__ (enhanced, obj, "keylabel", have_newer_gnuplot));
+		 tmp = undo_string_escapes (__maybe_munge_text__ (enhanced, obj, "keylabel"));
 		 titlespec{data_idx} = cstrcat ("title \"", tmp, "\"");
 	       endif
 	       usingclause{data_idx} = "";
                if (isfield (obj, "facecolor"))
 		 if ((strncmp (obj.facecolor, "flat", 4)
 		     || strncmp (obj.facecolor, "interp", 6))
 		     && isfield (obj, "cdata"))
 		   if (ndims (obj.cdata) == 2
@@ -595,29 +561,24 @@ function __go_draw_axes__ (h, plot_strea
 		   color = obj.facecolor;
 		 else
 		   color = [0, 1, 0];
 		 endif
                else
 		 color = [0, 1, 0];
                endif
 
-	       if (have_newer_gnuplot)
-		 if (mono)
-		   colorspec = "";
-		 else
-		   colorspec = sprintf ("lc rgb \"#%02x%02x%02x\"",
-					round (255*color));
-		 endif
-		 withclause{data_idx} = sprintf ("with filledcurve %s",
-						 colorspec);
+	       if (mono)
+		 colorspec = "";
 	       else
-		 typ = get_old_gnuplot_color (color);
-		 withclause{data_idx} = sprintf ("with filledcurve lt %d", typ);
+		 colorspec = sprintf ("lc rgb \"#%02x%02x%02x\"",
+				      round (255*color));
 	       endif
+	       withclause{data_idx} = sprintf ("with filledcurve %s",
+					       colorspec);
 	       data{data_idx} = [xcol, ycol]';
 	       usingclause{data_idx} = "using ($1):($2)";
 	     endif
 	   endif
 
            ## patch outline
 	   if (! strncmp (obj.edgecolor, "none", 4))
 
@@ -690,21 +651,17 @@ function __go_draw_axes__ (h, plot_strea
 		 otherwise
 		   lt = "";
 	       endswitch
 	     else
 	       lt = "";
 	     endif
 
 	     if (isfield (obj, "linewidth"))
-	       if (have_newer_gnuplot)
-		 lw = sprintf("linewidth %f", obj.linewidth);
-	       else
-		 lw = sprintf("lw %f", obj.linewidth);
-	       endif
+	       lw = sprintf("linewidth %f", obj.linewidth);
 	     else
 	       lw  = "";
 	     endif
 
 	     if (isfield (obj, "marker"))
 	       if (isfield (obj, "marker"))
 		 switch (obj.marker)
 		   case "+"
@@ -754,43 +711,33 @@ function __go_draw_axes__ (h, plot_strea
 
 	     if (isfield (obj, "markersize"))
 	       if (length (mdat) == nc)
 		 m = mdat(i);
 	       else
 		 m = mdat;
 	       endif
 	       if (! strcmpi (style, "lines"))
-		 if (have_newer_gnuplot)
-		   ps = sprintf("pointsize %f", m);
-		 else
-		   ps = sprintf("ps %f", m);
-		 endif
+		 ps = sprintf("pointsize %f", m);
 	       else
 		 ps = "";
 	       endif
 	     else
 	       ps = "";
 	     endif
 
-	     if (have_newer_gnuplot)
-	       if (mono)
-		 colorspec = "";
-	       else
-		 colorspec = sprintf ("lc rgb \"#%02x%02x%02x\"",
-				      round (255*color));
-	       endif
-	       withclause{data_idx} = sprintf ("with %s %s %s %s %s %s",
-					       style, lw, pt, lt, ps, 
-					       colorspec);
+	     if (mono)
+	       colorspec = "";
 	     else
-	       typ = get_old_gnuplot_color (color);
-	       withclause{data_idx} = sprintf ("with %s %s %s %s lt %d", 
-					       style, lw, pt, ps, typ);
+	       colorspec = sprintf ("lc rgb \"#%02x%02x%02x\"",
+				    round (255*color));
 	     endif
+	     withclause{data_idx} = sprintf ("with %s %s %s %s %s %s",
+					     style, lw, pt, lt, ps, 
+					     colorspec);
 
 	     if (nd == 3)
 	       if (! isnan (xcol) && ! isnan (ycol) && ! isnan (zcol))
 		 data{data_idx} = [[xcol; xcol(1)], [ycol; ycol(1)], ...
 				   [zcol; zcol(1)]]';
 	       else
 		 data{data_idx} = [xcol, ycol, zcol]';
 	       endif
@@ -814,27 +761,22 @@ function __go_draw_axes__ (h, plot_strea
 	    is_image_data(data_idx) = false;
 	    parametric(data_idx) = false;
 	    have_cdata(data_idx) = true;
 	    [style, typ, with] = do_linestyle_command (obj, data_idx,
 						       mono, plot_stream);
 	    if (isempty (obj.keylabel))
 	      titlespec{data_idx} = "title \"\"";
 	    else
-	      tmp = undo_string_escapes (__maybe_munge_text__ (enhanced, obj, "keylabel", have_newer_gnuplot));
+	      tmp = undo_string_escapes (__maybe_munge_text__ (enhanced, obj, "keylabel"));
 	      titlespec{data_idx} = cstrcat ("title \"", tmp, "\"");
 	    endif
 	    usingclause{data_idx} = "";
-	    if (have_newer_gnuplot || isnan (typ))
-	      withclause{data_idx} = sprintf ("with pm3d linestyle %d",
-		           		      data_idx);
-	    else
-	      withclause{data_idx} = sprintf ("with pm3d linetype %d %s",
-		 			      typ, with);
-	    endif
+	    withclause{data_idx} = sprintf ("with pm3d linestyle %d",
+		           		    data_idx);
 
 	    xdat = obj.xdata;
 	    ydat = obj.ydata;
 	    zdat = obj.zdata;
 	    cdat = obj.cdata;
 
   	    err = false;
             if (! size_equal(zdat, cdat))
@@ -892,85 +834,66 @@ function __go_draw_axes__ (h, plot_strea
             if (flat_interp_edge && facecolor_none_or_white)
 	      withclause{data_idx} = "with line palette";
 	      fputs (plot_stream, "unset pm3d\n");
 	      if (all (obj.facecolor == 1))
                 hidden_removal = true;
               endif
 	    elseif (facecolor_none_or_white)
 	      edgecol = obj.edgecolor;
-	      if (have_newer_gnuplot)
-		if (mono)
-		  colorspec = "";
-		else
-		  colorspec = sprintf ("linecolor rgb \"#%02x%02x%02x\"",
-				 round (255*edgecol));
-		endif
-		if (all (obj.facecolor == 1))
-                  hidden_removal = true;
-                endif
-		fputs(plot_stream,"unset pm3d;\n");
-                fprintf (plot_stream,
-                         "set style line %d %s lw %f;\n",
-                         data_idx, colorspec, obj.linewidth);
-		fputs(plot_stream,"set style increment user;\n");
-              else
-		typ = get_old_gnuplot_color (edgecol);
-                fprintf (plot_stream,
-                         "set style line %d lt %d lw %f;\n",
-                         data_idx, typ, obj.linewidth);
+	      if (mono)
+		colorspec = "";
+	      else
+		colorspec = sprintf ("linecolor rgb \"#%02x%02x%02x\"",
+				     round (255*edgecol));
 	      endif
+	      if (all (obj.facecolor == 1))
+                hidden_removal = true;
+              endif
+	      fputs(plot_stream,"unset pm3d;\n");
+              fprintf (plot_stream,
+                       "set style line %d %s lw %f;\n",
+                       data_idx, colorspec, obj.linewidth);
+	      fputs(plot_stream,"set style increment user;\n");
 	      withclause{data_idx} = sprintf("with line linestyle %d", data_idx);
 	      fputs (plot_stream, "unset pm3d\n");
             endif
 
-	    if (have_newer_gnuplot)
-	      dord = "depthorder";
-	    else
-	      dord = "";
-	    endif
+	    dord = "depthorder";
 
 	    if (flat_interp_face && strncmp (obj.edgecolor, "flat", 4))
               fprintf (plot_stream, "set pm3d explicit at s %s %s corners2color c3;\n", 
 		       interp_str, dord);
             elseif (!facecolor_none_or_white)
               if (strncmp (obj.edgecolor, "none", 4))
                 fprintf (plot_stream, "set pm3d explicit at s %s corners2color c3;\n", 
 			 interp_str, dord);
               else
                 edgecol = obj.edgecolor;
                 if (ischar (obj.edgecolor))
                   edgecol = [0, 0, 0];
                 endif
                 fprintf (plot_stream, "set pm3d explicit at s hidden3d %d %s %s corners2color c3;\n", 
 			 data_idx, interp_str, dord);
 
-		if (have_newer_gnuplot)
-		  if (mono)
-		    colorspec = "";
-		  else
-		    colorspec = sprintf ("linecolor rgb \"#%02x%02x%02x\"",
-					 round (255*edgecol));
-		  endif
-                  fprintf (plot_stream,
-                           "set style line %d %s lw %f;\n",
-                           data_idx, colorspec, obj.linewidth);
+		if (mono)
+		  colorspec = "";
 		else
-		  typ = get_old_gnuplot_color (edgecol);
-                  fprintf (plot_stream,
-                           "set style line %d lt %d lw %f;\n",
-                           data_idx, typ, obj.linewidth);
+		  colorspec = sprintf ("linecolor rgb \"#%02x%02x%02x\"",
+				       round (255*edgecol));
 		endif
+                fprintf (plot_stream,
+                         "set style line %d %s lw %f;\n",
+                         data_idx, colorspec, obj.linewidth);
               endif
             endif
 	  endif
 
 	case "text"
-	  [label, f, s] = __maybe_munge_text__ (enhanced, obj, "string",
-						have_newer_gnuplot);
+	  [label, f, s] = __maybe_munge_text__ (enhanced, obj, "string");
 	  if (strcmp (f, "*"))
 	    fontspec = "";
 	  else
 	    fontspec = sprintf ("font \"%s,%d\"", f, s);
 	  endif
 	  lpos = obj.position;
 	  halign = obj.horizontalalignment;
 	  angle = obj.rotation;
@@ -1163,56 +1086,38 @@ function __go_draw_axes__ (h, plot_strea
 	case "best" 
 	  pos = "";
 	  warning ("legend: 'Best' not yet implemented for location specifier.\n");
 	  ## least conflict with data in plot
 	  ## least unused space outside plot
 	otherwise
 	  pos = "";
       endswitch
-      if (! have_newer_gnuplot)
-	inout = "";
-      endif
       fprintf (plot_stream, "set key %s %s %s;\n", inout, pos, box);
     else
       fputs (plot_stream, "unset key;\n");
     endif
 
     fputs (plot_stream, "set style data lines;\n");
 
     if (! use_gnuplot_for_images)
       for i = 1:ximg_data_idx
 	view_fcn (xlim, ylim, ximg_data{i}, view_zoom, view_cmd);
       endfor
     endif
 
     if (length(cmap) > 0)
-      if (have_newer_gnuplot)
-        fprintf (plot_stream,
-		 "set palette positive color model RGB maxcolors %i;\n",
-	         cmap_sz);
-	fprintf (plot_stream,
-	         "set palette file \"-\" binary record=%d using 1:2:3:4;\n",
-	         cmap_sz);
-	fwrite (plot_stream, [1:cmap_sz; cmap.'], "float32");
-	fwrite (plot_stream, "\n");
-      else
-	fputs (plot_stream, "set palette defined (");
-	for i = 1: cmap_sz
-	  col = floor(cmap(i, :) * 255);
-          if (i == 1)
-	    fputs (plot_stream, sprintf("%d \"#%02X%02X%02X\"", i - 1, 
-					col(1), col(2), col(3)));
-	  else
-	    fputs (plot_stream, sprintf(", %d \"#%02X%02X%02X\"", i - 1, 
-					col(1), col(2), col(3)));
-	  endif
-	endfor
-	fputs (plot_stream, ");\n");
-      endif
+      fprintf (plot_stream,
+	       "set palette positive color model RGB maxcolors %i;\n",
+	       cmap_sz);
+      fprintf (plot_stream,
+	       "set palette file \"-\" binary record=%d using 1:2:3:4;\n",
+	       cmap_sz);
+      fwrite (plot_stream, [1:cmap_sz; cmap.'], "float32");
+      fwrite (plot_stream, "\n");
     endif
 	    
     if (strcmpi (get (h, "__colorbar__"), "none"))
       fputs (plot_stream, "unset colorbox;\n");
     else
       ## FIXME If cbox_mirror is true we want to invert the tic labels
       ## but gnuplot doesn't allow that
       fputs (plot_stream, 
@@ -1267,38 +1172,29 @@ function __go_draw_axes__ (h, plot_strea
     print_usage ();
   endif
 
 endfunction
 
 function [style, typ, with] = do_linestyle_command (obj, idx, mono,
 						    plot_stream, errbars = "")
 
-  persistent have_newer_gnuplot ...
-    = compare_versions (__gnuplot_version__ (), "4.0", ">");
-
-  if (have_newer_gnuplot)
-    fprintf (plot_stream, "set style line %d default;\n", idx);
-  endif
+  fprintf (plot_stream, "set style line %d default;\n", idx);
   fprintf (plot_stream, "set style line %d", idx);
 
   found_style = false;
   typ = NaN;
   with = "";
 
   if (isfield (obj, "color"))
     color = obj.color;
     if (isnumeric (color))
-      if (have_newer_gnuplot)
-	if (! mono)
-	  fprintf (plot_stream, " linecolor rgb \"#%02x%02x%02x\"",
-		   round (255*color));
-	endif
-      else
-	typ = get_old_gnuplot_color (color);
+      if (! mono)
+	fprintf (plot_stream, " linecolor rgb \"#%02x%02x%02x\"",
+		 round (255*color));
       endif
     endif
     found_style = true;
   endif
 
   if (isfield (obj, "linestyle"))
     switch (obj.linestyle)
       case "-"
@@ -1329,21 +1225,17 @@ function [style, typ, with] = do_linesty
     ##      found_style = true;
     ##    endif
 
   else
     lt = "";
   endif
 
   if (isfield (obj, "linewidth"))
-    if (have_newer_gnuplot)
-      fprintf (plot_stream, " linewidth %f", obj.linewidth);
-    else
-      with = sprintf ("%s lw %f", with, obj.linewidth);
-    endif
+    fprintf (plot_stream, " linewidth %f", obj.linewidth);
     found_style = true;
   endif
 
   if (isfield (obj, "marker"))
     switch (obj.marker)
       case "+"
 	pt = "1";
       case "o"
@@ -1371,21 +1263,17 @@ function [style, typ, with] = do_linesty
       case {"hexagram", "h"}
 	pt = "12";
       case "none"
 	pt = "";
       otherwise
 	pt = "";
     endswitch
     if (! isempty (pt))
-      if (have_newer_gnuplot)
-	fprintf (plot_stream, " pointtype %s", pt);
-      else
-	with = sprintf ("%s pt %s", with, pt);
-      endif
+      fprintf (plot_stream, " pointtype %s", pt);
       found_style = true;
     endif
   else
     pt = "";
   endif
 
   if (isempty (errbars))
     style = "lines";
@@ -1393,31 +1281,25 @@ function [style, typ, with] = do_linesty
       if (! isempty (pt))
 	style = "points";
       endif
     elseif (! isempty (pt))
       style = "linespoints";
     endif
 
     if (isfield (obj, "markersize"))
-      if (have_newer_gnuplot)
-	fprintf (plot_stream, " pointsize %f", obj.markersize / 6);
-      else
-	if (! strcmpi (style, "lines"))
-	  with = sprintf ("%s ps %f", with, obj.markersize / 6);
-	endif
-      endif
+      fprintf (plot_stream, " pointsize %f", obj.markersize / 6);
       found_style = true;
     endif
   else
     style = errbars;
     found_style = true;
   endif
 
-  if (have_newer_gnuplot && ! found_style)
+  if (! found_style)
     fputs (plot_stream, " default");
   endif
 
   fputs (plot_stream, ";\n");
 
 endfunction
 
 function nd = __calc_dimensions__ (obj)
@@ -1602,29 +1484,21 @@ function do_tics_1 (ticmode, tics, label
     else
       fprintf (plot_stream, "set %stics %s %s nomirror %s;\n", ax, 
 	       tickdir, axispos, colorspec);
     endif
   endif
 endfunction
 
 function colorspec = get_text_colorspec (color, mono)
-  persistent have_newer_gnuplot ...
-      = compare_versions (__gnuplot_version__ (), "4.0", ">");
-
-  if (have_newer_gnuplot)
-    if (mono)
-      colorspec = "";
-    else
-      colorspec = sprintf ("textcolor rgb \"#%02x%02x%02x\"",
-			   round (255*color));
-    endif
+  if (mono)
+    colorspec = "";
   else
-    typ = get_old_gnuplot_color (color);
-    colorspec = sprintf ("textcolor lt %d", typ);
+    colorspec = sprintf ("textcolor rgb \"#%02x%02x%02x\"",
+			 round (255*color));
   endif
 endfunction
 
 function [f, s, fnt, it, bld] = get_fontname_and_size (t)
   if (isempty (t.fontname))
     fnt = "Helvetica";
   else
     fnt = t.fontname;
@@ -1651,38 +1525,34 @@ function [f, s, fnt, it, bld] = get_font
   endif
   if (isempty (t.fontsize))
     s = 10;
   else
     s = t.fontsize;
   endif
 endfunction
 
-function [str, f, s] = __maybe_munge_text__ (enhanced, obj, fld, 
-					     have_newer_gnuplot)
+function [str, f, s] = __maybe_munge_text__ (enhanced, obj, fld)
+
   persistent warned_latex = false;
 
   if (strcmp (fld, "string"))
     [f, s, fnt, it, bld] = get_fontname_and_size (obj);
   else
     f = "Helvetica";
     s = 10;
     fnt = f;
     it = false;
     bld = false;
   endif
 
   str = getfield (obj, fld);
   if (enhanced)
     if (strcmp (obj.interpreter, "tex"))
       str = __tex2enhanced__ (str, fnt, it, bld);
-      if (! have_newer_gnuplot)
-	## Set the font to work around gnuplot 4.0 X11 enhanced terminal bug
-	str = cstrcat ('{/', f, ' ', str, ' }'); 
-      endif
     elseif (strcmp (obj.interpreter, "latex"))
       if (! warned_latex)
 	warning ("latex text objects not supported");
 	warned_latex = true;
       endif
     endif
   endif
 endfunction
