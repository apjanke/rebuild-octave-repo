# HG changeset patch
# User Daniel J Sebald <daniel.sebald@ieee.org>
# Date 1523168595 18000
#      Sun Apr 08 01:23:15 2018 -0500
# Branch stable
# Node ID 8c38361718a973e96c49a0bc3cec4f80e2b95cd4
# Parent  f83c2015cbc7fb4d50de89d9481957ac205723aa
When Variable Editor is tabbed, activate that tab via openvar (bug #53443).

* variable_editor.cc (variable_dock_widget::toplevel_change): Move setFocus()
  after activateWindow().
  (variable_editor::edit_variable): Call tab_to_front() and
  setFocus() after raising and activating.
  (variable_editor::tab_to_front): Added.  New routine that looks through
  the QTabBar list on the QMainWindow searching for the Variable Editor and
  if found set as the current tab.

* variable_editor.h (variable_editor): Declare new function tab_to_front().

diff --git a/libgui/src/variable-editor.cc b/libgui/src/variable-editor.cc
--- a/libgui/src/variable-editor.cc
+++ b/libgui/src/variable-editor.cc
@@ -171,18 +171,18 @@ namespace octave
   void
   variable_dock_widget::toplevel_change (bool toplevel)
   {
     if (toplevel)
       {
         m_dock_action->setIcon (QIcon (":/actions/icons/widget-dock.png"));
         m_dock_action->setToolTip (tr ("Dock widget"));
 
+        activateWindow();
         setFocus (Qt::OtherFocusReason);
-        activateWindow();
       }
     else
       {
         m_dock_action->setIcon (QIcon (":/actions/icons/widget-undock.png"));
         m_dock_action->setToolTip (tr ("Undock widget"));
 
         setFocus (Qt::OtherFocusReason);
       }
@@ -1074,21 +1074,21 @@ namespace octave
         // Put current focused variable out of focus
         if (m_main->focusWidget () != nullptr)
           {
             QFocusEvent event (QEvent::FocusOut, Qt::OtherFocusReason);
             QApplication::sendEvent (m_main->focusWidget (), &event);
           }
 
         // Put existing variable in focus and raise
-        QFocusEvent event (QEvent::FocusIn, Qt::OtherFocusReason);
-        QApplication::sendEvent (existing_qdw, &event);
         existing_qdw->show ();
         existing_qdw->raise ();
         existing_qdw->activateWindow ();
+        tab_to_front ();
+        existing_qdw->setFocus ();
 
         return;
       }
 
     variable_dock_widget *page = new variable_dock_widget (this);
     page->setObjectName (name);
     m_main->addDockWidget (Qt::LeftDockWidgetArea, page);
 
@@ -1179,16 +1179,39 @@ namespace octave
 
     QList<QTableView *> viewlist = findChildren<QTableView *> ();
     if (viewlist.size () == 1)
       m_tool_bar->setEnabled (true);
 
     page->show ();
     page->raise ();
     page->activateWindow ();
+    tab_to_front ();
+    page->setFocus ();
+  }
+
+  void
+  variable_editor::tab_to_front (void)
+  {
+    if (parent () != nullptr)
+      {
+        QList<QTabBar *> barlist = main_win ()->findChildren<QTabBar *> ();
+
+        foreach (QTabBar *tbar, barlist)
+          {
+            for (int i=0; i < tbar->count (); i++)
+              {
+                  if ((QWidget *) tbar->tabData (i).toULongLong () == this)
+                  {
+                    tbar->setCurrentIndex (i);
+                    return;
+                  }
+              }
+          }
+      }
   }
 
   void
   variable_editor::refresh (void)
   {
     emit refresh_signal ();
   }
 
diff --git a/libgui/src/variable-editor.h b/libgui/src/variable-editor.h
--- a/libgui/src/variable-editor.h
+++ b/libgui/src/variable-editor.h
@@ -265,16 +265,18 @@ namespace octave
     variable_editor& operator = (const variable_editor&) = delete;
 
     void refresh (void);
 
     static QList<QColor> default_colors (void);
 
     static QStringList color_names (void);
 
+    void tab_to_front (void);
+
   public slots:
 
     void callUpdate (const QModelIndex&, const QModelIndex&);
 
     void notice_settings (const QSettings *);
 
     void edit_variable (const QString& name, const octave_value& val);
 
