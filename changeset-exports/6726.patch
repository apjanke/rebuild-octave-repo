# HG changeset patch
# User jwe
# Date 1181852205 0
#      Thu Jun 14 20:16:45 2007 +0000
# Node ID 6b7ba4a31876d43a9715f8d28631a167239d58ae
# Parent  dd930ff7f754c2d20e4b65168a2244f1215d8255
[project @ 2007-06-14 20:16:44 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,12 +1,17 @@
 2007-06-14  John W. Eaton  <jwe@octave.org>
 
-	* oct-procbuf.cc (procbuf::open): Open pipe in binary mode for
-	Windows.
+	* sysdep.cc (octave_popen, octave_pclose): New functions.
+	* sysdep.h: Provide decls.
+
+	* oct-procbuf.cc (procbuf::open): Use octave_popen.
+	(procbuf::close): Use octave_pclose.
+	* oct-prcstrm.cc (octave_oprocstream::octave_oprocstream, 
+	octave_iprocstream::ictave_oprocstream): Likewise.
 
 	* graphics.h (text::text_properties::rotation): New data member.
 	* graphics.cc (text::text_properties::text_properties, 
 	text::text_properties::set, text::text_properties::get, 
 	text::text_properties::factory_defaults): Handle rotation property.
 
 2007-06-14  David Bateman  <dbateman@free.fr>
 
diff --git a/src/oct-prcstrm.cc b/src/oct-prcstrm.cc
--- a/src/oct-prcstrm.cc
+++ b/src/oct-prcstrm.cc
@@ -23,43 +23,30 @@ 02110-1301, USA.
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <cstdio>
 
 #include "oct-prcstrm.h"
-
-// FIXME -- perhaps this should be handled more globally.  See also
-// oct-procbuf.cc.
-
-#if defined (_MSC_VER)
-#define popen _popen
-#define pclose _pclose
-#endif
-
-static int
-cxx_pclose (FILE *f)
-{
-  return ::pclose (f);
-}
+#include "sysdep.h"
 
 octave_stream
 octave_iprocstream::create (const std::string& n, std::ios::openmode arg_md,
 			    oct_mach_info::float_format ff)
 {
   return octave_stream (new octave_iprocstream (n, arg_md, ff));
 }
 
 octave_iprocstream::octave_iprocstream (const std::string& n,
 					std::ios::openmode arg_md,
 					oct_mach_info::float_format ff)
-  : octave_stdiostream (n, ::popen (n.c_str (), "r"),
-			arg_md, ff, cxx_pclose)
+  : octave_stdiostream (n, octave_popen (n.c_str (), "r"),
+			arg_md, ff, octave_pclose)
 {
 }
 
 octave_iprocstream::~octave_iprocstream (void)
 {
   do_close ();
 }
 
@@ -68,18 +55,18 @@ octave_oprocstream::create (const std::s
 			    oct_mach_info::float_format ff)
 {
   return octave_stream (new octave_oprocstream (n, arg_md, ff));
 }
 
 octave_oprocstream::octave_oprocstream (const std::string& n,
 					std::ios::openmode arg_md,
 					oct_mach_info::float_format ff)
-  : octave_stdiostream (n, ::popen (n.c_str (), "w"),
-			arg_md, ff, cxx_pclose)
+  : octave_stdiostream (n, octave_popen (n.c_str (), "w"),
+			arg_md, ff, octave_pclose)
 {
 }
 
 octave_oprocstream::~octave_oprocstream (void)
 {
   do_close ();
 }
 
diff --git a/src/oct-procbuf.cc b/src/oct-procbuf.cc
--- a/src/oct-procbuf.cc
+++ b/src/oct-procbuf.cc
@@ -35,51 +35,41 @@ 02110-1301, USA.
 #endif
 #include <unistd.h>
 #endif
 
 #include "lo-mappers.h"
 #include "lo-utils.h"
 #include "oct-procbuf.h"
 #include "oct-syscalls.h"
+#include "sysdep.h"
 #include "variables.h"
 
 #include "defun.h"
 #include "gripes.h"
 #include "utils.h"
 
 // This class is based on the procbuf class from libg++, written by
 // Per Bothner, Copyright (C) 1993 Free Software Foundation.
 
 static octave_procbuf *octave_procbuf_list = 0;
 
-// FIXME -- perhaps this should be handled more globally.  See also
-// oct-prcstrm.cc.
-
-#if defined (__CYGWIN__)
-#define W32POPEN popen
-#define W32PCLOSE pclose
-#elif defined (__MINGW32__) || defined (_MSC_VER)
-#define W32POPEN _popen
-#define W32PCLOSE _pclose
-#endif
-
 #ifndef BUFSIZ
 #define BUFSIZ 1024
 #endif
 
 octave_procbuf *
 octave_procbuf::open (const char *command, int mode)
 {
 #if defined (__CYGWIN__) || defined (__MINGW32__) || defined (_MSC_VER)
 
   if (is_open ()) 
     return 0;
 
-  f = ::W32POPEN (command, (mode & std::ios::in) ? "rb" : "wb");
+  f = octave_popen (command, (mode & std::ios::in) ? "r" : "w");
 
   if (! f)
     return 0;
 
   // Oops... popen doesn't return the associated pid, so fake it for now
 
   proc_pid = 1;
 
@@ -174,17 +164,17 @@ octave_procbuf::open (const char *comman
 
 octave_procbuf *
 octave_procbuf::close (void)
 {
 #if defined (__CYGWIN__) || defined (__MINGW32__) || defined (_MSC_VER)
 
   if (f)
     {
-      wstatus = ::W32PCLOSE (f);
+      wstatus = octave_pclose (f);
       f = 0;
     }
 
   open_p = false;
 
   return this;
   
 #elif defined (HAVE_SYS_WAIT_H)
diff --git a/src/sysdep.cc b/src/sysdep.cc
--- a/src/sysdep.cc
+++ b/src/sysdep.cc
@@ -511,16 +511,46 @@ raw_mode (bool on, bool wait)
 
   // Make sure the current mode doesn't toggle.
   on = curr_on;
 #endif
 
   curr_on = on;
 }
 
+FILE *
+octave_popen (const char *command, const char *mode)
+{
+#if defined (__MINGW32__) || defined (_MSC_VER)
+  if (mode && mode[0] && ! mode[1])
+    {
+      char tmode[3];
+      tmode[0] = mode[0];
+      tmode[1] = 'b';
+      tmode[2] = 0;
+
+      return _popen (command, tmode);
+    }
+  else
+    return _popen (command, mode);
+#else
+  return popen (command, mode);
+#endif
+}
+
+int
+octave_pclose (FILE *f)
+{
+#if defined (__MINGW32__) || defined (_MSC_VER)
+  return _pclose (f);
+#else
+  return pclose (f);
+#endif
+}
+
 // Read one character from the terminal.
 
 int
 octave_kbhit (bool wait)
 {
 #ifdef HAVE__KBHIT
   int c = (! wait && ! _kbhit ()) ? 0 : std::cin.get ();
 #else
diff --git a/src/sysdep.h b/src/sysdep.h
--- a/src/sysdep.h
+++ b/src/sysdep.h
@@ -19,27 +19,32 @@ along with Octave; see the file COPYING.
 Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
 02110-1301, USA.
 
 */
 
 #if !defined (octave_sysdep_h)
 #define octave_sysdep_h 1
 
+#include <cstdio>
+
 #include <string>
 
 #include "lo-ieee.h"
 #include "lo-sysdep.h"
 
 extern void sysdep_init (void);
 
 extern void sysdep_cleanup (void);
 
 extern void raw_mode (bool, bool wait = true);
 
+extern FILE *octave_popen (const char *command, const char *mode);
+extern int octave_pclose (FILE *f);
+
 extern OCTINTERP_API int octave_kbhit (bool wait = true);
 
 extern void w32_set_quiet_shutdown (void);
 
 #if defined (__WIN32__) && ! defined (_POSIX_VERSION)
 extern void MINGW_signal_cleanup (void);
 #define USE_W32_SIGINT 1
 #define MINGW_SIGNAL_CLEANUP() MINGW_signal_cleanup ()
