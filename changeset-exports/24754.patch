# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1518627198 18000
#      Wed Feb 14 11:53:18 2018 -0500
# Node ID 2cb75eac8fe6be457f049b5953969d539700e88a
# Parent  ca6a73be15da5827b1f0ea3e8c6f9ae48074196c
make initial display of un-editable objects in variable editor work

* variable-editor-model.h, variable-editor-model.cc
(variable_editor_model::maybe_resize_columns_signal):
Delete unused signal.
(variable_editor_model::update_data): Don't emit
maybe_resize_columns_signal.
(variable_editor_model::variable_editor_model): Always connect
signals, not just when variable can be edited.


diff --git a/libgui/src/variable-editor-model.cc b/libgui/src/variable-editor-model.cc
--- a/libgui/src/variable-editor-model.cc
+++ b/libgui/src/variable-editor-model.cc
@@ -905,17 +905,17 @@ variable_editor_model::variable_editor_m
 {
   update_description ();

+  connect (this, SIGNAL (user_error_signal (const QString&, const QString&)),
+           this, SLOT (user_error (const QString&, const QString&)));
+
+  connect (this, SIGNAL (update_data_signal (const octave_value&)),
+           this, SLOT (update_data (const octave_value&)));
+
+  connect (this, SIGNAL (data_error_signal (const QString&)),
+           this, SLOT (data_error (const QString&)));
+
   if (is_editable ())
     {
-      connect (this, SIGNAL (user_error_signal (const QString&, const QString&)),
-               this, SLOT (user_error (const QString&, const QString&)));
-
-      connect (this, SIGNAL (update_data_signal (const octave_value&)),
-               this, SLOT (update_data (const octave_value&)));
-
-      connect (this, SIGNAL (data_error_signal (const QString&)),
-               this, SLOT (data_error (const QString&)));
-
       beginInsertRows (QModelIndex (), 0, display_rows () - 1);
       endInsertRows ();

@@ -1233,8 +1233,6 @@ variable_editor_model::update_data (cons

   emit dataChanged (QAbstractTableModel::index (0, 0),
                     QAbstractTableModel::index (new_display_rows-1, new_display_cols-1));
-
-  emit maybe_resize_columns_signal ();
 }

 void
diff --git a/libgui/src/variable-editor-model.h b/libgui/src/variable-editor-model.h
--- a/libgui/src/variable-editor-model.h
+++ b/libgui/src/variable-editor-model.h
@@ -261,8 +261,6 @@ signals: // private

   void user_error_signal (const QString& title, const QString& msg) const;

-  void maybe_resize_columns_signal (void);
-
   void set_editable_signal (bool);

   void description_changed (const QString& description);

diff --git a/libgui/src/variable-editor-model.cc b/libgui/src/variable-editor-model.cc
--- a/libgui/src/variable-editor-model.cc
+++ b/libgui/src/variable-editor-model.cc
@@ -900,27 +900,27 @@ variable_editor_model::create (const QSt
 
 variable_editor_model::variable_editor_model (const QString& expr,
                                               const octave_value& val,
                                               QObject *parent)
   : QAbstractTableModel (parent), rep (create (expr, val))
 {
   update_description ();
 
+  connect (this, SIGNAL (user_error_signal (const QString&, const QString&)),
+           this, SLOT (user_error (const QString&, const QString&)));
+
+  connect (this, SIGNAL (update_data_signal (const octave_value&)),
+           this, SLOT (update_data (const octave_value&)));
+
+  connect (this, SIGNAL (data_error_signal (const QString&)),
+           this, SLOT (data_error (const QString&)));
+
   if (is_editable ())
     {
-      connect (this, SIGNAL (user_error_signal (const QString&, const QString&)),
-               this, SLOT (user_error (const QString&, const QString&)));
-
-      connect (this, SIGNAL (update_data_signal (const octave_value&)),
-               this, SLOT (update_data (const octave_value&)));
-
-      connect (this, SIGNAL (data_error_signal (const QString&)),
-               this, SLOT (data_error (const QString&)));
-
       beginInsertRows (QModelIndex (), 0, display_rows () - 1);
       endInsertRows ();
 
       beginInsertColumns (QModelIndex (), 0, display_columns () - 1);
       endInsertColumns ();
     }
 }
 
@@ -1228,18 +1228,16 @@ variable_editor_model::update_data (cons
       beginInsertColumns (QModelIndex (), old_display_cols, new_display_cols-1);
       endInsertColumns ();
     }
 
   clear_update_pending ();
 
   emit dataChanged (QAbstractTableModel::index (0, 0),
                     QAbstractTableModel::index (new_display_rows-1, new_display_cols-1));
-
-  emit maybe_resize_columns_signal ();
 }
 
 void
 variable_editor_model::data_error (const QString& msg)
 {
   invalidate ();
 
   update_description (msg);
diff --git a/libgui/src/variable-editor-model.h b/libgui/src/variable-editor-model.h
--- a/libgui/src/variable-editor-model.h
+++ b/libgui/src/variable-editor-model.h
@@ -256,18 +256,16 @@ public:
 signals: // private
 
   void update_data_signal (const octave_value& val);
 
   void data_error_signal (const QString& name) const;
 
   void user_error_signal (const QString& title, const QString& msg) const;
 
-  void maybe_resize_columns_signal (void);
-
   void set_editable_signal (bool);
 
   void description_changed (const QString& description);
 
 private slots:
 
   void data_error (const QString& msg);
 
