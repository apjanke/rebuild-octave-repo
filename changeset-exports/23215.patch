# HG changeset patch
# User Pantxo Diribarne <pantxo.diribarne@gmail.com>
# Date 1487533478 -3600
#      Sun Feb 19 20:44:38 2017 +0100
# Branch stable
# Node ID 0842b119dc1bf1bc5f7bb711446c0556d4d4f099
# Parent  76a894168fe5e6b1676ba9713017c5014b368e89
Fix opengl "invalid operation" when zooming (bug #50317)

* GLCanvas.cc (drawZoomBox): push and pop matrix for both MODELVIEW and
   PROJECTION. Call glLineWidth outside glBegin/End block.
* __init_fltk__.cc (OpenGL_fltk::overlay): same as above

diff --git a/libgui/graphics/GLCanvas.cc b/libgui/graphics/GLCanvas.cc
--- a/libgui/graphics/GLCanvas.cc
+++ b/libgui/graphics/GLCanvas.cc
@@ -109,40 +109,45 @@ namespace QtHandles
     glVertex2d (p2.x (), p2.y ());
     glVertex2d (p1.x (), p2.y ());
     glVertex2d (p1.x (), p1.y ());
   }
 
   void
   GLCanvas::drawZoomBox (const QPoint& p1, const QPoint& p2)
   {
+    glMatrixMode (GL_MODELVIEW);
     glPushMatrix ();
-
-    glMatrixMode (GL_MODELVIEW);
     glLoadIdentity ();
 
     glMatrixMode (GL_PROJECTION);
+    glPushMatrix ();
     glLoadIdentity ();
     glOrtho (0, width (), height (), 0, 1, -1);
 
     glPushAttrib (GL_DEPTH_BUFFER_BIT | GL_CURRENT_BIT);
     glDisable (GL_DEPTH_TEST);
 
     glBegin (GL_POLYGON);
     glColor4f (0.45, 0.62, 0.81, 0.1);
     glDrawZoomBox (p1, p2);
     glEnd ();
 
+    glLineWidth (1.5);
     glBegin (GL_LINE_STRIP);
-    glLineWidth (1.5);
     glColor4f (0.45, 0.62, 0.81, 0.9);
     glDrawZoomBox (p1, p2);
     glEnd ();
 
     glPopAttrib ();
+
+    glMatrixMode (GL_MODELVIEW);
+    glPopMatrix ();
+
+    glMatrixMode (GL_PROJECTION);
     glPopMatrix ();
   }
 
   void
   GLCanvas::paintGL (void)
   {
     canvasPaintEvent ();
   }
diff --git a/libinterp/dldfcn/__init_fltk__.cc b/libinterp/dldfcn/__init_fltk__.cc
--- a/libinterp/dldfcn/__init_fltk__.cc
+++ b/libinterp/dldfcn/__init_fltk__.cc
@@ -217,40 +217,43 @@ private:
     panic_impossible ();
 #endif
   }
 
   void overlay (void)
   {
 #if defined (HAVE_OPENGL)
 
+    glMatrixMode (GL_MODELVIEW);
     glPushMatrix ();
-
-    glMatrixMode (GL_MODELVIEW);
     glLoadIdentity ();
 
     glMatrixMode (GL_PROJECTION);
+    glPushMatrix ();
     glLoadIdentity ();
     gluOrtho2D (0.0, w (), 0.0, h ());
 
     glPushAttrib (GL_DEPTH_BUFFER_BIT | GL_CURRENT_BIT);
     glDisable (GL_DEPTH_TEST);
 
     glBegin (GL_POLYGON);
     glColor4f (0.45, 0.62, 0.81, 0.1);
     zoom_box_vertex ();
     glEnd ();
 
+    glLineWidth (1.5);
     glBegin (GL_LINE_STRIP);
-    glLineWidth (1.5);
     glColor4f (0.45, 0.62, 0.81, 0.9);
     zoom_box_vertex ();
     glEnd ();
 
     glPopAttrib ();
+    glMatrixMode (GL_MODELVIEW);
+    glPopMatrix ();
+    glMatrixMode (GL_PROJECTION);
     glPopMatrix ();
 
 #else
     // This shouldn't happen because construction of Opengl_fltk
     // objects is supposed to be impossible if OpenGL is not available.
 
     panic_impossible ();
 #endif
