# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1241732859 14400
#      Thu May 07 17:47:39 2009 -0400
# Node ID 9646be3a59c4d90de042869ee6e4b873b5f47650
# Parent  a3237ae32c0d1b6133b8188abc37dbfcd2ae7e8f
make changeset 1e5c11890f85 work

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,16 @@
 2009-05-07  John W. Eaton  <jwe@octave.org>
 
+	* graphics.h.in (base_graphics_object::set): Undo previous change.
+	(base_properties::set (const caseless_str&, const octave_value&):
+	New virtual function.
+	(base_properties::set (const caseless_str&, const std::string&,
+	const octave_value&)): No longer virtual.
+
 	* toplev.cc (octave_config_info): Remove F2C and F2CFLAGS from the
 	config infor struct.
 	* oct-conf.h.in (OCTAVE_CONF_F2CFLAGS, OCTAVE_CONF_F2C):
 	Delete definitions.
 
 2009-05-07  Marco Atzeri  <marco_atzeri@yahoo.it>
 
         * Makefile.in: (SHLPRE): Rename from SHLLIBPRE.
diff --git a/src/graphics.h.in b/src/graphics.h.in
--- a/src/graphics.h.in
+++ b/src/graphics.h.in
@@ -1637,18 +1637,23 @@ public:
 
   void insert_property (const std::string& name, property p)
     {
       p.set_name (name);
       p.set_parent (__myhandle__);
       all_props[name] = p;
     }
 
-  virtual void set (const caseless_str& pname, const std::string& cname,
-		    const octave_value& val);
+  virtual void set (const caseless_str&, const octave_value&)
+  {
+    panic_impossible ();
+  }
+
+  void set (const caseless_str& pname, const std::string& cname,
+	    const octave_value& val);
 
   virtual octave_value get (const caseless_str& pname) const;
 
   virtual octave_value get (bool all = false) const;
 
   virtual property get_property (const caseless_str& pname);
 
   bool has_property (const caseless_str& pname);
@@ -1823,17 +1828,17 @@ public:
       get_properties ().set_from_list (*this, plist);
     else
       error ("base_graphics_object::set_from_list: invalid graphics object");
   }
 
   virtual void set (const caseless_str& pname, const octave_value& pval)
   {
     if (valid_object ())
-      get_properties ().set (pname, type (), pval);
+      get_properties ().set (pname, pval);
     else
       error ("base_graphics_object::set: invalid graphics object");
   }
 
   virtual void set_defaults (const std::string&)
   {
     error ("base_graphics_object::set_defaults: invalid graphics object");
   }
