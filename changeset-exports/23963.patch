# HG changeset patch
# User Markus MÃ¼tzel <markus.muetzel@gmx.de>
# Date 1503939026 -7200
#      Mon Aug 28 18:50:26 2017 +0200
# Node ID 3dd89a7b92c89d28d69053e92d0dc6676f903a4d
# Parent  882dd1c0017f7c370bf453f34aa2d99e92a0d6c6
display message from libsndfile if opening files fails (bug #51859)

* audioread.cc (Faudioread, Faudiowrite):  Display error message from
libsndfileif opening file fails.

diff --git a/libinterp/dldfcn/audioread.cc b/libinterp/dldfcn/audioread.cc
--- a/libinterp/dldfcn/audioread.cc
+++ b/libinterp/dldfcn/audioread.cc
@@ -86,17 +86,18 @@ is stored in the audio file.
 
   std::string filename = args(0).xstring_value ("audioread: FILENAME must be a string");
 
   SF_INFO info;
   info.format = 0;
   SNDFILE *file = sf_open (filename.c_str (), SFM_READ, &info);
 
   if (! file)
-    error ("audioread: failed to open input file %s", filename.c_str ());
+    error ("audioread: failed to open input file '%s': %s",
+           filename.c_str (), sf_strerror (file));
 
   octave::unwind_protect frame;
 
   frame.add_fcn (safe_close, file);
 
   OCTAVE_LOCAL_BUFFER (float, data, info.frames * info.channels);
 
   sf_read_float (file, data, info.frames * info.channels);
@@ -398,17 +399,18 @@ Comment.
         comment = value_arg.string_value ();
       else
         error ("audiowrite: unrecognized option: '%s'", keyword_orig.c_str ());
     }
 
   SNDFILE *file = sf_open (filename.c_str (), SFM_WRITE, &info);
 
   if (! file)
-    error ("audiowrite: failed to open output file %s", filename.c_str ());
+    error ("audiowrite: failed to open output file '%s': %s",
+           filename.c_str (), sf_strerror (file));
 
   octave::unwind_protect frame;
 
   frame.add_fcn (safe_close, file);
 
   sf_command (file, SFC_SET_VBR_ENCODING_QUALITY, &quality, sizeof (quality));
 
   if (title != "")
@@ -511,17 +513,18 @@ Audio bitrate.  Unused, only present for
   if (! fs.exists ())
     error ("audioinfo: FILENAME '%s' not found", filename.c_str ());
 
   SF_INFO info;
   info.format = 0;
   SNDFILE *file = sf_open (filename.c_str (), SFM_READ, &info);
 
   if (! file)
-    error ("audioinfo: failed to open file '%s'", filename.c_str ());
+    error ("audioinfo: failed to open input file '%s': %s",
+           filename.c_str (), sf_strerror (file));
 
   octave::unwind_protect frame;
 
   frame.add_fcn (safe_close, file);
 
   octave_scalar_map result;
 
   std::string full_name = octave::sys::canonicalize_file_name (filename);
