# HG changeset patch
# User jwe
# Date 1151691582 0
#      Fri Jun 30 18:19:42 2006 +0000
# Node ID 44f24cf66b959ff961307e0485e56b4dbf5a5e4c
# Parent  b9fd54407c8d7d96049c505f2a3e9ad28f7a4bee
[project @ 2006-06-30 18:19:20 by jwe]

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,12 +1,15 @@
 2006-06-30  John W. Eaton  <jwe@octave.org>
 
-	* dir-ops.cc (dir_entry::open): Perform tilde expansion here.
+	* lo-sysdep.cc (octave_chdir): Perform tilde expansion here.
+	* cmd-edit.cc (editor::read_init_file): Ditto.
+	* dir-ops.cc (dir_entry::open): Ditto.
 	* file-stat.cc (stat::update_internal): Ditto.
+	* cmd-hist.cc (command_history::set_file): Ditto.
 
 	* data-conv.cc (data_conv::string_to_data_type):
 	Correctly handle leading "*".
 
 2006-06-29  Atsushi Kajita  <a-kajita@mizar.freemail.ne.jp>
 
 	* Sparse.cc (Sparse<T>::SparseRep::elem): Avoid out of bounds
 	array access.
diff --git a/liboctave/cmd-edit.cc b/liboctave/cmd-edit.cc
--- a/liboctave/cmd-edit.cc
+++ b/liboctave/cmd-edit.cc
@@ -36,16 +36,17 @@ 02110-1301, USA.
 #endif
 #include <unistd.h>
 #endif
 
 #include "quit.h"
 
 #include "cmd-edit.h"
 #include "cmd-hist.h"
+#include "file-ops.h"
 #include "lo-error.h"
 #include "lo-utils.h"
 #include "oct-env.h"
 #include "oct-time.h"
 
 command_editor *command_editor::instance = 0;
 
 #if defined (USE_READLINE)
@@ -828,20 +829,24 @@ command_editor::set_event_hook (event_ho
 void
 command_editor::restore_event_hook (void)
 {
   if (instance_ok ())
     instance->do_restore_event_hook ();
 }
 
 void
-command_editor::read_init_file (const std::string& file)
+command_editor::read_init_file (const std::string& file_arg)
 {
   if (instance_ok ())
-    instance->do_read_init_file (file);
+    {
+      std::string file = file_ops::tilde_expand (file_arg);
+
+      instance->do_read_init_file (file);
+    }
 }
 
 bool
 command_editor::filename_completion_desired (bool arg)
 {
   return (instance_ok ())
     ? instance->do_filename_completion_desired (arg) : false;
 }
diff --git a/liboctave/cmd-hist.cc b/liboctave/cmd-hist.cc
--- a/liboctave/cmd-hist.cc
+++ b/liboctave/cmd-hist.cc
@@ -27,16 +27,17 @@ 02110-1301, USA.
 
 #include <cstring>
 
 #include <iostream>
 #include <string>
 
 #include "cmd-edit.h"
 #include "cmd-hist.h"
+#include "file-ops.h"
 #include "lo-error.h"
 #include "str-vec.h"
 
 command_history *command_history::instance = 0;
 
 #if defined (USE_READLINE)
 
 #include <cstdlib>
@@ -408,20 +409,24 @@ command_history::make_command_history (v
 #if defined (USE_READLINE)
   instance = new gnu_history ();
 #else
   instance = new command_history ();
 #endif
 }
 
 void
-command_history::set_file (const std::string& f)
+command_history::set_file (const std::string& f_arg)
 {
   if (instance_ok ())
-    instance->do_set_file (f);
+    {
+      std::string f = file_ops::tilde_expand (f_arg);
+
+      instance->do_set_file (f);
+    }
 }
 
 std::string
 command_history::file (void)
 {
   return (instance_ok ())
     ? instance->do_file () : std::string ();
 }
diff --git a/liboctave/lo-sysdep.cc b/liboctave/lo-sysdep.cc
--- a/liboctave/lo-sysdep.cc
+++ b/liboctave/lo-sysdep.cc
@@ -30,16 +30,17 @@ 02110-1301, USA.
 
 #ifdef HAVE_UNISTD_H
 #ifdef HAVE_SYS_TYPES_H
 #include <sys/types.h>
 #endif
 #include <unistd.h>
 #endif
 
+#include "file-ops.h"
 #include "lo-error.h"
 #include "pathlen.h"
 
 std::string
 octave_getcwd (void)
 {
   std::string retval;
 
@@ -59,18 +60,20 @@ octave_getcwd (void)
     retval = tmp;
   else
     (*current_liboctave_error_handler) ("unable to find current directory");
 
   return retval;
 }
 
 int
-octave_chdir (const std::string& path)
+octave_chdir (const std::string& path_arg)
 {
+  std::string path = file_ops::tilde_expand (path_arg);
+
 #if defined (__EMX__)
   int retval = -1;
 
   char *tmp_path = strsave (path.c_str ());
 
   if (path.length () == 2 && path[1] == ':')
     {
       char *upper_case_dir_name = strupr (tmp_path);
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,17 @@
 2006-06-30  John W. Eaton  <jwe@octave.org>
 
+	* oct-hist.cc (do_history, initialize_history, Fhistory_file):
+	Don't perform tilde expansion on history file name.
+
+	* syscalls.cc (Flstat, Fstat): Don't perform tilde expansion on arg.
+	* input.cc (Fread_readline_init_file): Likewise.
+	* dirfns.cc (Fcd, Freaddir): Likewise.
+
 	* load-path.cc (genpath): Don't perform tilde expansion on name.
 	(load_path::do_add): Don't warn about moving "." to front of list.
 
 2006-06-28  John W. Eaton  <jwe@octave.org>
 
 	* load-path.cc (Faddpath): Don't treat "." specially here.
 	Don't check directory status here.
 	(Fpath): Handle all args.  Don't treat "." specially here.
diff --git a/src/dirfns.cc b/src/dirfns.cc
--- a/src/dirfns.cc
+++ b/src/dirfns.cc
@@ -116,17 +116,17 @@ directory is not changed.\n\
 
   string_vector argv = args.make_argv ("cd");
 
   if (error_state)
     return retval;
 
   if (argc > 1)
     {
-      std::string dirname = file_ops::tilde_expand (argv[1]);
+      std::string dirname = argv[1];
 
       if (dirname.length () > 0
 	  && ! octave_change_to_directory (dirname))
 	{
 	  return retval;
 	}
     }
   else
@@ -261,17 +261,17 @@ system-dependent error message.\n\
   if (args.length () == 1)
     {
       std::string dirname = args(0).string_value ();
 
       if (error_state)
 	gripe_wrong_type_arg ("readdir", args(0));
       else
 	{
-	  dir_entry dir (file_ops::tilde_expand (dirname));
+	  dir_entry dir (dirname);
 
 	  if (dir)
 	    {
 	      string_vector dirlist = dir.read ();
 	      retval(0) = Cell (dirlist.qsort ());
 	      retval(1) = 0.0;
 	    }
 	  else
diff --git a/src/input.cc b/src/input.cc
--- a/src/input.cc
+++ b/src/input.cc
@@ -1037,17 +1037,17 @@ Read the readline library initialiazatio
   octave_value_list retval;
 
   int nargin = args.length ();
 
   if (nargin == 0)
     command_editor::read_init_file ();
   else if (nargin == 1)
     {
-      std::string file = file_ops::tilde_expand (args(0).string_value ());
+      std::string file = args(0).string_value ();
 
       if (! error_state)
 	command_editor::read_init_file (file);
     }
   else
     print_usage ();
 
   return retval;
diff --git a/src/oct-hist.cc b/src/oct-hist.cc
--- a/src/oct-hist.cc
+++ b/src/oct-hist.cc
@@ -168,20 +168,17 @@ do_history (int argc, const string_vecto
   for (i = 1; i < argc; i++)
     {
       std::string option = argv[i];
 
       if (option == "-r" || option == "-w" || option == "-a"
 	  || option == "-n")
 	{
 	  if (i < argc - 1)
-	    {
-	      std::string file = file_ops::tilde_expand (argv[i+1]);
-	      command_history::set_file (file);
-	    }
+	    command_history::set_file (argv[i+1]);
 
 	  if (option == "-a")
 	    // Append `new' lines to file.
 	    command_history::append ();
 
 	  else if (option == "-w")
 	    // Write entire history.
 	    command_history::write ();
@@ -546,17 +543,17 @@ do_run_history (int argc, const string_v
   // FIXME -- should probably be done using an unwind_protect.
 
   unlink (name.c_str ());
 }
 
 void
 initialize_history (void)
 {
-  command_history::set_file (file_ops::tilde_expand (Vhistory_file));
+  command_history::set_file (Vhistory_file);
   command_history::set_size (Vhistory_size);
 
   command_history::read (false);
 }
 
 void
 octave_history_write_timestamp (void)
 {
@@ -714,17 +711,17 @@ variable @code{OCTAVE_HISTFILE}.\n\
 @seealso{history_size, saving_history, history_timestamp_format_string}\n\
 @end deftypefn")
 {
   std::string saved_history_file = Vhistory_file;
 
   octave_value retval = SET_INTERNAL_VARIABLE (history_file);
 
   if (Vhistory_file != saved_history_file)
-    command_history::set_file (file_ops::tilde_expand (Vhistory_file));
+    command_history::set_file (Vhistory_file);
 
   return retval;
 }
 
 DEFUN (history_timestamp_format_string, args, nargout,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {@var{val} =} history_timestamp_format_string ()\n\
 @deftypefnx {Built-in Function} {@var{old_val} =} history_timestamp_format_string (@var{new_val})\n\
diff --git a/src/syscalls.cc b/src/syscalls.cc
--- a/src/syscalls.cc
+++ b/src/syscalls.cc
@@ -556,17 +556,17 @@ DEFUN (lstat, args, ,
 @deftypefn {Built-in Function} {[@var{info}, @var{err}, @var{msg}] =} lstat (@var{file})\n\
 See stat.\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
   if (args.length () == 1)
     {
-      std::string fname = file_ops::tilde_expand (args(0).string_value ());
+      std::string fname = args(0).string_value ();
 
       if (! error_state)
 	{
 	  file_stat fs (fname, false);
 
 	  if (fs)
 	    {
 	      retval(2) = std::string ();
@@ -793,17 +793,17 @@ For example,\n\
 @end group\n\
 @end example\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
   if (args.length () == 1)
     {
-      std::string fname = file_ops::tilde_expand (args(0).string_value ());
+      std::string fname = args(0).string_value ();
 
       if (! error_state)
 	{
 	  file_stat fs (fname);
 
 	  if (fs)
 	    {
 	      retval(2) = std::string ();
