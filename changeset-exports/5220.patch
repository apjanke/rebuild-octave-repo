# HG changeset patch
# User jwe
# Date 1111028307 0
#      Thu Mar 17 02:58:27 2005 +0000
# Node ID 42f9a021aac191f3abdef0a62910a7031042aac7
# Parent  96661dd7929122ade55081cf75bb248ea2ac0e28
[project @ 2005-03-17 02:58:27 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,15 @@
 2005-03-16  John W. Eaton  <jwe@octave.org>
 
+	* ov-struct.cc (octave_struct::save_ascii): Don't convert Cell
+	object to cs-list.
+	(octave_struct::save_binary): Likewise
+	(octave_struct::save_hdf5): Likewise.
+
 	* DLD-FUNCTIONS/gplot.l (Fset, Fshow): Delete.
 	(F__gnuplot_plot__): Rename from Fgplot.
 	(F__gnuplot_splot__): Rename from Fgsplot.
 	(F__gnuplot_raw__): Rename from Fgraw.
 	(F__gnuplot_set__): Rename from Fgset.
 	(F__gnuplot_show__): Rename from Fgshow.
 	(F__gnuplot_replot__): Rename from Freplot.
 	(WARN_DEPRECATED, DEPRECATED_BODY): New macros.
diff --git a/src/ov-struct.cc b/src/ov-struct.cc
--- a/src/ov-struct.cc
+++ b/src/ov-struct.cc
@@ -981,18 +981,17 @@ octave_struct::save_ascii (std::ostream&
 {
   Octave_map m = map_value ();
   os << "# length: " << m.length () << "\n";
 
   Octave_map::iterator i = m.begin ();
   while (i != m.end ())
     {
       Cell val = map.contents (i);
-      octave_value tmp = (map.numel () == 1) ? val(0) : 
-	octave_value (val, true);
+      octave_value tmp = (map.numel () == 1) ? val(0) : octave_value (val);
 
       bool b = save_ascii_data (os, tmp, m.key (i), infnan_warned, 
 				strip_nan_and_inf, 0, 0);
       
       if (! b)
 	return os;
 
       i++;
@@ -1056,18 +1055,17 @@ octave_struct::save_binary (std::ostream
 
   FOUR_BYTE_INT len = m.length();
   os.write (X_CAST (char *, &len), 4);
   
   Octave_map::iterator i = m.begin ();
   while (i != m.end ())
     {
       Cell val = map.contents (i);
-      octave_value tmp = (map.numel () == 1) ? val(0) : 
-	octave_value (val, true);
+      octave_value tmp = (map.numel () == 1) ? val(0) : octave_value (val);
 
       bool b = save_binary_data (os, tmp, m.key (i), "", 0, save_as_floats);
       
       if (! b)
 	return os;
 
       i++;
     }
@@ -1133,18 +1131,17 @@ octave_struct::save_hdf5 (hid_t loc_id, 
   if (data_hid < 0) return false;
 
   // recursively add each element of the structure to this group
   Octave_map m = map_value ();
   Octave_map::iterator i = m.begin ();
   while (i != m.end ())
     {
       Cell val = map.contents (i);
-      octave_value tmp = (map.numel () == 1) ? val(0) : 
-	octave_value (val, true);
+      octave_value tmp = (map.numel () == 1) ? val(0) : octave_value (val);
 
       bool retval2 = add_hdf5_data (data_hid, tmp, m.key (i), "", false, 
 				    save_as_floats);
 
       if (! retval2)
 	break;
 
       i++;
