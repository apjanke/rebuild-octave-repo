# HG changeset patch
# User David Bateman <dbateman@free.fr>
# Date 1202850740 18000
#      Tue Feb 12 16:12:20 2008 -0500
# Node ID 86ba621332ff2a7d0eb76d15ba104264aa730487
# Parent  ada435261879e0ce135e2468ade51f3aca8e1270
Implement cdatamapping and respect to to allow correct image/imagesc rendering

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,13 +1,20 @@
+2008-02-12  David Bateman  <dbateman@free.fr>
+
+ 	* plot/__go_draw_axes__.m: Use the cdatamapping property to set
+	the cbrange.
+	* plot/__img__.m: Set cdatamapping to "direct".
+	* plot/imagesc.m: Set cdatamapping to "scaled".
+
 2008-02-08  Julien Pommier  <pommier@pianoteq.com>
 
 	* audio/wavread.m: Limit data read to end of data chunk.
 
-2008-02-08  David Bateman  <dbateman@free.fr?
+2008-02-08  David Bateman  <dbateman@free.fr>
 
 	* plot/__contour__.m: Respect the graphic handle options that are
 	passed.
 	* plot/__go_draw_axes__.m: Respect the linewidth for patch objects.
 
 2008-02-01  Dave Goel  <deego3@gmail.com>
 
 	* signal/arch_rnd.m: Correctly index E and Y vectors.
diff --git a/scripts/image/__img__.m b/scripts/image/__img__.m
--- a/scripts/image/__img__.m
+++ b/scripts/image/__img__.m
@@ -49,17 +49,17 @@ function h = __img__ (x, y, img, varargi
   endif
 
   xlim = [x(1), x(end)];
   ylim = [y(1), y(end)];
 
   ca = gca ();
 
   tmp = __go_image__ (ca, "cdata", img, "xdata", xlim, "ydata", ylim, 
-		      varargin {:});
+		      "cdatamapping", "direct", varargin {:});
 
   set (ca, "view", [0, 90]);
 
   if (strcmp (get (ca, "nextplot"), "replace"))
     set (ca, "ydir", "reverse");
   endif
 
   if (nargout > 0)
diff --git a/scripts/image/imagesc.m b/scripts/image/imagesc.m
--- a/scripts/image/imagesc.m
+++ b/scripts/image/imagesc.m
@@ -104,16 +104,17 @@ function ret = __imagesc__ (ax, x, y, A,
     A = x;
     limits = y;
     x = y = [];
   elseif (nargin == 4 && ! isscalar (x) && ! isscalar (y) && ! isscalar (A))
     limits = [];
   endif
 
   ret = image (ax, x, y, A);
+  set (ret, "cdatamapping", "scaled")
 
   ## use given limits or guess them from the matrix
   if (length (limits) == 2 && limits(2) >= limits(1))
     set (ax, "clim", limits);
   elseif (! isempty (limits))
     error ("expected data limits to be [lo, hi]");
   endif
 
diff --git a/scripts/plot/__go_draw_axes__.m b/scripts/plot/__go_draw_axes__.m
--- a/scripts/plot/__go_draw_axes__.m
+++ b/scripts/plot/__go_draw_axes__.m
@@ -286,16 +286,17 @@ function __go_draw_axes__ (h, plot_strea
     else
       fputs (plot_stream, "unset logscale z;\n");
     endif
 
     xautoscale = strcmpi (axis_obj.xlimmode, "auto");
     yautoscale = strcmpi (axis_obj.ylimmode, "auto");
     zautoscale = strcmpi (axis_obj.zlimmode, "auto");
     cautoscale = strcmpi (axis_obj.climmode, "auto");
+    cdatadirect = false;
 
     kids = axis_obj.children;
 
     nd = __calc_dimensions__ (axis_obj);
 
     if (nd == 3)
       fputs (plot_stream, "set parametric;\n");
       fputs (plot_stream, "set style data lines;\n");
@@ -332,16 +333,19 @@ function __go_draw_axes__ (h, plot_strea
       switch (obj.type)
 	case "image"
 	  img_data = obj.cdata;
 	  img_xdata = obj.xdata;
 	  img_ydata = obj.ydata;
 
 	  if (use_gnuplot_for_images)
 
+	    if (strcmp (obj.cdatamapping, "direct"))
+	      cdatadirect = true;
+	    endif
 	    fputs (plot_stream, "set border front;\n");
 	    data_idx++;
 	    is_image_data(data_idx) = true;
 	    parametric(data_idx) = false;
 	    have_cdata(data_idx) = false;
 
 	    [y_dim, x_dim] = size (img_data(:,:,1));
 	    if (x_dim > 1)
@@ -496,16 +500,19 @@ function __go_draw_axes__ (h, plot_strea
 	  endif
 
        case "patch"
          cmap = parent_figure_obj.colormap;
 	 [nr, nc] = size (obj.xdata);
 
 	 if (! isempty (obj.cdata))
 	   cdat = obj.cdata;
+	   if (strcmp (obj.cdatamapping, "direct"))
+	     cdatadirect = true;
+	   endif
 	 else
 	   cdat = [];
 	 endif
 
 	 for i = 1:nc
 	   xcol = obj.xdata(:,i);
 	   ycol = obj.ydata(:,i);
 	   if (nd == 3)
@@ -1057,18 +1064,24 @@ function __go_draw_axes__ (h, plot_strea
       if (strcmpi (axis_obj.zdir, "reverse"))
 	zdir = "reverse";
       else
 	zdir = "noreverse";
       endif
       fprintf (plot_stream, "set zrange [%.15e:%.15e] %s;\n", zlim, zdir);
     endif
 
+    cmap = parent_figure_obj.colormap;    
+    cmap_sz = rows(cmap);
     if (! any (isinf (clim)))
-      fprintf (plot_stream, "set cbrange [%g:%g];\n", clim);
+      if (cdatadirect)
+	fprintf (plot_stream, "set cbrange [1:%d];\n", cmap_sz);
+      else
+	fprintf (plot_stream, "set cbrange [%g:%g];\n", clim);
+      endif
     endif
 
     if (strcmpi (axis_obj.box, "on"))
       if (nd == 3)
 	fputs (plot_stream, "set border 4095;\n");
       else
 	fputs (plot_stream, "set border 431;\n");
       endif
@@ -1165,18 +1178,16 @@ function __go_draw_axes__ (h, plot_strea
     fputs (plot_stream, "set style data lines;\n");
 
     if (! use_gnuplot_for_images)
       for i = 1:ximg_data_idx
 	view_fcn (xlim, ylim, ximg_data{i}, view_zoom, view_cmd);
       endfor
     endif
 
-    cmap = parent_figure_obj.colormap;    
-    cmap_sz = rows(cmap);
     if (length(cmap) > 0)
       if (have_newer_gnuplot)
         fprintf (plot_stream,
 		 "set palette positive color model RGB maxcolors %i;\n",
 	         cmap_sz);
 	fprintf (plot_stream,
 	         "set palette file \"-\" binary record=%d using 1:2:3:4;\n",
 	         cmap_sz);
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2008-02-12  David Bateman  <dbateman@free.fr>
+
+	* graphics.h.in: Implement the cdatamapping property in patch and
+	image objects.
+
 2008-02-12  John W. Eaton  <jwe@octave.org>
 
 	* pt-loop.cc (tree_simple_for_command::eval): Compute range
 	element with multiplication.
 
 2008-02-11  John W. Eaton  <jwe@octave.org>
 
 	* Makefile.in ($(MAKEDEPS)): Skip dependencies if omit_deps is defined.
diff --git a/src/graphics.h.in b/src/graphics.h.in
--- a/src/graphics.h.in
+++ b/src/graphics.h.in
@@ -2693,16 +2693,17 @@ public:
   public:
     // See the genprops.awk script for an explanation of the
     // properties declarations.
 
     BEGIN_PROPERTIES(image)
       data_property xdata l , Matrix ()
       data_property ydata l , Matrix ()
       data_property cdata l , Matrix ()
+      radio_property cdatamapping a , "{scaled}|direct"
     END_PROPERTIES
 
   protected:
     void init (void)
       {
       }
   };
 
@@ -2809,16 +2810,17 @@ public:
     // See the genprops.awk script for an explanation of the
     // properties declarations.
 
     BEGIN_PROPERTIES(surface)
       data_property xdata l , Matrix ()
       data_property ydata l , Matrix ()
       data_property zdata l , Matrix ()
       data_property cdata l , Matrix ()
+      radio_property cdatamapping a , "{scaled}|direct"
       color_property facecolor , "{flat}|none|interp"
       double_property facealpha , 1.0
       color_property edgecolor , color_property (color_values (0, 0, 0), radio_values ("flat|none|interp"))
       radio_property linestyle , "{-}|--|:|-.|none"
       double_property linewidth , 0.5
       radio_property marker , "{none}|s|o|x|+|.|*|<|>|v|^|d|p|h"
       color_property markeredgecolor , "{auto}|none"
       color_property markerfacecolor , "auto|{none}"
