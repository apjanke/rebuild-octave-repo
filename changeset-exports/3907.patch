# HG changeset patch
# User jwe
# Date 1019676788 0
#      Wed Apr 24 19:33:08 2002 +0000
# Node ID 437884fae44128a5e39a539d5c1455d8a38e8f50
# Parent  a7096282a0918145f68bb184b6385422ba3a2bf2
[project @ 2002-04-24 19:33:08 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,14 @@
+2002-04-24  Paul Kienzle <pkienzle@users.sf.net>
+
+	* signal/freqz.m: If nargout is zero, plot results instead of
+	returning them.
+	* signal/freqz_plot.m: New file.
+
 2002-04-24  Bill Lash  <lash@tellabs.com>
 
 	* scripts/signal/unwrap.m: New file.
 
 2002-04-23  Paul Kienzle <pkienzle@users.sf.net>
 
 	* image/rgb2hsv.m: Faster, more accurate, remove the
 	divide by zero warning.
diff --git a/scripts/signal/freqz.m b/scripts/signal/freqz.m
--- a/scripts/signal/freqz.m
+++ b/scripts/signal/freqz.m
@@ -58,21 +58,24 @@
 ## Evaluate the response at the specific frequencies in the vector @var{w}.
 ## The values for @var{w} are measured in radians.
 ##
 ## @deftypefnx {Function File} {[@dots{}] =} freqz (@dots{}, @var{Fs})
 ## Return frequencies in Hz instead of radians assuming a sampling rate
 ## @var{Fs}.  If you are evaluating the response at specific frequencies 
 ## @var{w}, those frequencies should be requested in Hz rather than radians.
 ##
+## @deftypefnx {Function File} freqz(@dots{})
+## Plot the pass band, stop band and phase response of @var{h} rather
+## than returning them.
 ## @end deftypefn
 
 ## Author: jwe ???
 
-function [h, w] = freqz (b, a, n, region, Fs)
+function [h_r, w_r] = freqz (b, a, n, region, Fs)
 
   if (nargin < 1 || nargin > 5)
     usage ("[h, w] = freqz (b, a, n [, \"whole\"] [, Fs])");
   elseif (nargin == 1)
     ## Response of an FIR filter.
     a = n = region = Fs = [];
   elseif (nargin == 2)
     ## Response of an IIR filter
@@ -148,9 +151,16 @@ function [h, w] = freqz (b, a, n, region
     ha = fft (postpad (a, extent));
     ha = ha(1:n);
   else
     ha = polyval (postpad (a, k), exp (j*w));
   endif
   h = hb ./ ha;
   w = Fs * w / (2*pi);
 
+  if (nargout != 0), # return values and don't plot
+    h_r = h;
+    w_r = w;
+  else             # plot and don't return values
+    freqz_plot (w, h);
+  end
+
 endfunction
