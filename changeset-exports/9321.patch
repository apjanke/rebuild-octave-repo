# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1244542466 -7200
#      Tue Jun 09 12:14:26 2009 +0200
# Node ID 9b87aeb24ea94d768caefe6d835311480ebf740b
# Parent  080dc45ea68232e5e2701a63e77ff8f62021e756
avoid using readline at all when line editing suppressed or interpreter embedded

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,14 @@
+2009-06-09  Jaroslav Hajek  <highegg@gmail.com>
+
+	* cmd-edit.cc (command_editor::force_default_editor): New static
+	method.
+	* cmd-edit.h: Declare it.
+
 2009-06-09  Jaroslav Hajek  <highegg@gmail.com>
 
 	* lo-mappers.cc (xlog2 (const Complex&, int&), xlog2 (const
 	FloatComplex&, int&)): Use more robust expression.
 
 2009-06-07  Jaroslav Hajek  <highegg@gmail.com>
 
 	* Array.cc (Array<T>::find): Avoid allocating excessive memory. Fix
diff --git a/liboctave/cmd-edit.cc b/liboctave/cmd-edit.cc
--- a/liboctave/cmd-edit.cc
+++ b/liboctave/cmd-edit.cc
@@ -832,16 +832,23 @@ command_editor::make_command_editor (voi
 {
 #if defined (USE_READLINE)
   instance = new gnu_readline ();
 #else
   instance = new default_command_editor ();
 #endif
 }
 
+void 
+command_editor::force_default_editor (void)
+{
+  delete instance;
+  instance = new default_command_editor ();
+}
+
 int
 command_editor::startup_handler (void)
 {
   for (startup_hook_set_iterator p = startup_hook_set.begin ();
        p != startup_hook_set.end (); p++)
     {
       startup_hook_fcn f = *p;
 
diff --git a/liboctave/cmd-edit.h b/liboctave/cmd-edit.h
--- a/liboctave/cmd-edit.h
+++ b/liboctave/cmd-edit.h
@@ -145,16 +145,18 @@ public:
   static bool filename_quoting_desired (bool);
 
   static int current_command_number (void);
 
   static void reset_current_command_number (int n);
 
   static void increment_current_command_number (void);
 
+  static void force_default_editor (void);
+
 private:
 
   // No copying!
 
   command_editor (const command_editor&);
 
   command_editor& operator = (const command_editor&);
 
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,12 +1,13 @@
 2009-06-09  Jaroslav Hajek  <highegg@gmail.com>
 
 	* octave.cc (octave_main): Call initialize_command_input
 	conditionally. Move line_editing update in front of it.
+	Call command_editor::force_default_editor if not line_editing.
 
 2009-06-09  Jaroslav Hajek  <highegg@gmail.com>
 
 	* data.cc (Flog2): Fix tests.
 
 2009-06-08  John W. Eaton  <jwe@octave.org>
 
 	* variables.cc (symbol_exist): Returnn 1 for function handles and
diff --git a/src/octave.cc b/src/octave.cc
--- a/src/octave.cc
+++ b/src/octave.cc
@@ -781,16 +781,20 @@ octave_main (int argc, char **argv, int 
   // interactive.
 
   interactive = (! embedded
 		 && isatty (fileno (stdin)) && isatty (fileno (stdout)));
 
   if (! interactive && ! forced_line_editing)
     line_editing = false;
 
+  // Force default line editor if we don't want readline editing.
+  if (! line_editing)
+    command_editor::force_default_editor ();
+
   // These can come after command line args since none of them set any
   // defaults that might be changed by command line options.
 
   if (line_editing)
     initialize_command_input ();
 
   if (! inhibit_startup_message)
     std::cout << OCTAVE_STARTUP_MESSAGE "\n" << std::endl;
