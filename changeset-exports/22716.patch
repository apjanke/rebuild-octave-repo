# HG changeset patch
# User Rik <rik@octave.org>
# Date 1478192776 25200
#      Thu Nov 03 10:06:16 2016 -0700
# Branch stable
# Node ID c2f0e687471e6b639a9e4214d1a50b3f8281ec90
# Parent  ea09770fb556cbb6b0c438fa7abc9afad19a93e5
doc: Improve docstring for cellindexmat().

* cellfun.cc (Fcellindexmat): Improve docstring.

diff --git a/libinterp/corefcn/cellfun.cc b/libinterp/corefcn/cellfun.cc
--- a/libinterp/corefcn/cellfun.cc
+++ b/libinterp/corefcn/cellfun.cc
@@ -2357,20 +2357,24 @@ DEFUN (cellindexmat, args, ,
 Perform indexing of matrices in a cell array.
 
 Given a cell array of matrices @var{x}, this function computes
 
 @example
 @group
 Y = cell (size (X));
 for i = 1:numel (X)
-  Y@{i@} = X@{i@}(varargin@{:@});
+  Y@{i@} = X@{i@}(varargin@{1@}, varargin@{2@}, @dots{}, varargin@{N@});
 endfor
 @end group
 @end example
+
+The indexing arguments may be scalar (@code{2}), arrays (@code{[1, 3]}),
+ranges (@code{1:3}), or the colon operator (@qcode{":"}).  However, the
+indexing keyword @code{end} is not available.
 @seealso{cellslices, cellfun}
 @end deftypefn */)
 {
   if (args.length () == 0)
     print_usage ();
 
   const Cell x = args(0).xcell_value ("cellindexmat: X must be a cell");
 
