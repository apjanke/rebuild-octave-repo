# HG changeset patch
# User Rik <rik@octave.org>
# Date 1546928638 28800
#      Mon Jan 07 22:23:58 2019 -0800
# Branch stable
# Node ID bc6237a189e10a1e9b468099afc254dab642f6f3
# Parent  67724e9f6661b3b0656b34d3345f43f96bd22b99
dot.cc: Fix static analyzer detected issues (bug #55347).

* dot.cc (get_red_dims): Reverse order of assignment of z(i) and tmp_k to match
other sections of code.
* dot.cc (get_blkmm_dims): Surround expressions with parentheses for clarity.
Remove unnecessary instance of "match" in logical expression.

diff --git a/libinterp/corefcn/dot.cc b/libinterp/corefcn/dot.cc
--- a/libinterp/corefcn/dot.cc
+++ b/libinterp/corefcn/dot.cc
@@ -49,18 +49,18 @@ get_red_dims (const dim_vector& x, const
         }
       else if (i > dim)
         {
           z(i) = x(i);
           tmp_n *= x(i);
         }
       else
         {
+          z(i) = 1;
           tmp_k = x(i);
-          z(i) = 1;
         }
     }
 
   m = octave::to_f77_int (tmp_m);
   n = octave::to_f77_int (tmp_n);
   k = octave::to_f77_int (tmp_k);
 }
 
@@ -284,25 +284,25 @@ get_blkmm_dims (const dim_vector& dimx, 
   int nd = dimx.ndims ();
 
   m = octave::to_f77_int (dimx(0));
   k = octave::to_f77_int (dimx(1));
   n = octave::to_f77_int (dimy(1));
 
   octave_idx_type tmp_np = 1;
 
-  bool match = dimy(0) == k && nd == dimy.ndims ();
+  bool match = ((dimy(0) == k) && (nd == dimy.ndims ()));
 
   dimz = dim_vector::alloc (nd);
 
   dimz(0) = m;
   dimz(1) = n;
   for (int i = 2; match && i < nd; i++)
     {
-      match = match && dimx(i) == dimy(i);
+      match = (dimx(i) == dimy(i));
       dimz(i) = dimx(i);
       tmp_np *= dimz(i);
     }
 
   np = octave::to_f77_int (tmp_np);
 
   if (! match)
     error ("blkmm: A and B dimensions don't match: (%s) and (%s)",
