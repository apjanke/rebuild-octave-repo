# HG changeset patch
# User Mike Miller <mtmiller@octave.org>
# Date 1442948761 -7200
#      Tue Sep 22 21:06:01 2015 +0200
# Node ID dd327c0909b08bf4c934ee3ff9d34b60eb66c9ff
# Parent  b6ae0ef9327e76d309858ccd344fb3c17cf16172
listdlg: Make appearance and behavior more Matlab compatible (bug #46026)

* dialog.h, dialog.cc (ListDialog::ListDialog): Hide "Select All" button when
in single-selection mode. Set "Ok" button as the default button, allows
Enter/Return to accept the selection. Handle double-click on list item with
the item_double_clicked slot. (ListDialog::item_double_clicked): New slot.

diff --git a/libgui/src/dialog.cc b/libgui/src/dialog.cc
--- a/libgui/src/dialog.cc
+++ b/libgui/src/dialog.cc
@@ -260,25 +260,26 @@ ListDialog::ListDialog (const QStringLis
 #if RICH_TEXT
       plabel->setTextFormat (Qt::RichText);
 #endif
 #undef RICH_TEXT
       listLayout->addWidget (plabel);
     }
   listLayout->addWidget (view);
   QPushButton *select_all = new QPushButton (tr ("Select All"));
-  select_all->setEnabled (mode == "multiple");
+  select_all->setVisible (mode == "multiple");
   listLayout->addWidget (select_all);
 
   QPushButton *buttonOk = new QPushButton (ok_string);
   QPushButton *buttonCancel = new QPushButton (cancel_string);
   QHBoxLayout *buttonsLayout = new QHBoxLayout;
   buttonsLayout->addStretch (1);
   buttonsLayout->addWidget (buttonOk);
   buttonsLayout->addWidget (buttonCancel);
+  buttonOk->setDefault (true);
 
   QVBoxLayout *mainLayout = new QVBoxLayout;
   mainLayout->addLayout (listLayout);
   mainLayout->addSpacing (12);
   mainLayout->addLayout (buttonsLayout);
   setLayout (mainLayout);
   if (fixed_layout)
     layout ()->setSizeConstraint (QLayout::SetFixedSize);
@@ -293,16 +294,19 @@ ListDialog::ListDialog (const QStringLis
            this, SLOT (buttonOk_clicked ()));
 
   connect (buttonCancel, SIGNAL (clicked ()),
            this, SLOT (buttonCancel_clicked ()));
 
   connect (this, SIGNAL (finish_selection (const QIntList&, int)),
            &uiwidget_creator,
            SLOT (list_select_finished (const QIntList&, int)));
+
+  connect (view, SIGNAL (doubleClicked (const QModelIndex&)),
+           this, SLOT (item_double_clicked (const QModelIndex&)));
 }
 
 
 void
 ListDialog::buttonOk_clicked (void)
 {
   // Store information about what button was pressed so that builtin
   // functions can retrieve.
@@ -333,16 +337,23 @@ ListDialog::buttonCancel_clicked (void)
 
 void
 ListDialog::reject (void)
 {
   buttonCancel_clicked ();
 }
 
 
+void
+ListDialog::item_double_clicked (const QModelIndex&)
+{
+  buttonOk_clicked ();
+}
+
+
 InputDialog::InputDialog (const QStringList& prompt, const QString& title,
                           const QFloatList& nr, const QFloatList& nc,
                           const QStringList& defaults)
   : QDialog ()
 {
 
 #define LINE_EDIT_FOLLOWS_PROMPT 0
 
diff --git a/libgui/src/dialog.h b/libgui/src/dialog.h
--- a/libgui/src/dialog.h
+++ b/libgui/src/dialog.h
@@ -205,16 +205,18 @@ signals:
 
 public slots:
 
   void buttonOk_clicked (void);
 
   void buttonCancel_clicked (void);
 
   void reject (void);
+
+  void item_double_clicked (const QModelIndex&);
 };
 
 
 class InputDialog : public QDialog
 {
   Q_OBJECT
 
   QList<QLineEdit *> input_line;
