# HG changeset patch
# User Jordi Guti√©rrez Hermoso <jordigh@octave.org>
# Date 1331096561 18000
#      Wed Mar 07 00:02:41 2012 -0500
# Branch stable
# Node ID 3d4bea9accd74eeeb195fcbaa2dd00106b677e3f
# Parent  ec660526ae50c3d3e3b17630b953df4979fdae6f
Fix segfault on multidimensional median call (bug #35679).

* Array.c (Array::nth_elemnt): Readjust dim after chopping singletons.
* median.m: Add tests.

diff --git a/liboctave/Array.cc b/liboctave/Array.cc
--- a/liboctave/Array.cc
+++ b/liboctave/Array.cc
@@ -2248,16 +2248,17 @@ Array<T>::nth_element (const idx_vector&
     dv.resize (dim+1, 1);
 
   octave_idx_type ns = dv(dim);
 
   octave_idx_type nn = n.length (ns);
 
   dv(dim) = std::min (nn, ns);
   dv.chop_trailing_singletons ();
+  dim = std::min (dv.length (), dim);
 
   Array<T> m (dv);
 
   if (m.numel () == 0)
     return m;
 
   sortmode mode = UNSORTED;
   octave_idx_type lo = 0;
diff --git a/scripts/statistics/base/median.m b/scripts/statistics/base/median.m
--- a/scripts/statistics/base/median.m
+++ b/scripts/statistics/base/median.m
@@ -94,16 +94,26 @@ endfunction
 %! y = [1, 2, 3, 4, 5, 6, 7];
 %! y2 = y';
 %!
 %! assert(median (x) == median (x2) && median (x) == 3.5);
 %! assert(median (y) == median (y2) && median (y) == 4);
 %! assert(median ([x2, 2*x2]) == [3.5, 7]);
 %! assert(median ([y2, 3*y2]) == [4, 12]);
 
+%% Test multidimensional arrays (bug #35679)
+%!shared a, b, x, y
+%! rand ("seed", 2);
+%! a = rand (2,3,4,5);
+%! b = rand (3,4,6,5);
+%! x = sort (a, 4);
+%! y = sort (b, 3);
+%!assert (median (a, 4), x(:, :, :, 3));
+%!assert (median (b, 3), (y(:, :, 3, :) + y(:, :, 4, :))/2);
+
 %!assert(median (single([1,2,3])), single(2));
 %!assert(median ([1,2,NaN;4,5,6;NaN,8,9]), [NaN, 5, NaN]);
 
 %% Test input validation
 %!error median ();
 %!error median (1, 2, 3);
 %!error median ({1:5});
 %!error median (['A'; 'B']);
