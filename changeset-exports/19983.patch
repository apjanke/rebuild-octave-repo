# HG changeset patch
# User Torsten <ttl@justmail.de>
# Date 1427298612 -3600
#      Wed Mar 25 16:50:12 2015 +0100
# Node ID 643de08e524cd8c684ab7cc2491c9a0c697d46a6
# Parent  9a8be23d2c0556011b09fc1ce217f06a715c2ebd
save and restore previously active widget in a tabbed stack (bug #42980)

* main-window.cc (focus_changed): store previous widget as predecessor
  if new widget is tabbed togehter with the previous one;

* octave-dock-widget.cc (octave_dock_widget): initialize predecessor to 0;
  (set_predecessor_widget): new oublic method for setting the predecessor;
  (set_focus_predecessor): if predecessor is defined which means that this
  wigdet was tabbed with predecessor, set focus to predecessor;
  (make_window): call set_focus_predecessor;
  (closeEvent): moved here from header file, call set_focus_predecessor

* octave-dock-widget.h: new public function set_predecessor_widget,
  closeEvent moved to octave_dock_widget.cc, new private function
  set_focus_predecessor (), new variable _predecessor_widget holding the
  previously active widget in the tabbed stack

diff --git a/libgui/src/main-window.cc b/libgui/src/main-window.cc
--- a/libgui/src/main-window.cc
+++ b/libgui/src/main-window.cc
@@ -199,16 +199,20 @@ main_window::focus_changed (QWidget *, Q
                         static_cast<octave_dock_widget *> (editor_window);
   // if new dock has focus, emit signal and store active focus
   // except editor changes to a dialog (dock=0)
   if ((dock || _active_dock != edit_dock_widget) && (dock != _active_dock))
     {
       // signal to all dock widgets for updating the style
       emit active_dock_changed (_active_dock, dock);
 
+      QList<QDockWidget *> tabbed = tabifiedDockWidgets (dock);
+      if (tabbed.contains (_active_dock))
+        dock->set_predecessor_widget (_active_dock);
+
       if (edit_dock_widget == dock)
         emit editor_focus_changed (true);
       else if (edit_dock_widget == _active_dock)
         emit editor_focus_changed (false);
 
       _active_dock = dock;
     }
 }
diff --git a/libgui/src/octave-dock-widget.cc b/libgui/src/octave-dock-widget.cc
--- a/libgui/src/octave-dock-widget.cc
+++ b/libgui/src/octave-dock-widget.cc
@@ -38,16 +38,17 @@ along with Octave; see the file COPYING.
 
 
 octave_dock_widget::octave_dock_widget (QWidget *p)
   : QDockWidget (p)
 {
 
   _parent = static_cast<QMainWindow *> (p);     // store main window
   _floating = false;
+  _predecessor_widget = 0;
 
   connect (this, SIGNAL (visibilityChanged (bool)),
            this, SLOT (handle_visibility_changed (bool)));
 
   connect (p, SIGNAL (settings_changed (const QSettings*)),
            this, SLOT (handle_settings (const QSettings*)));
 
   connect (p, SIGNAL (active_dock_changed (octave_dock_widget*, octave_dock_widget*)),
@@ -150,30 +151,47 @@ void
 octave_dock_widget::connect_visibility_changed (void)
 {
   connect (this, SIGNAL (visibilityChanged (bool)),
            this, SLOT (handle_visibility (bool)));
   emit active_changed (isVisible ());  // emit once for init of window menu
 }
 
 
+// set the widget which previously had focus when tabified
+void
+octave_dock_widget::set_predecessor_widget (octave_dock_widget *prev_widget)
+{
+  _predecessor_widget = prev_widget;
+}
+
 // set the title in the dockwidgets title bar
 void
 octave_dock_widget::set_title (const QString& title)
 {
 #if defined (Q_OS_WIN32)
   QHBoxLayout* h_layout =
     static_cast<QHBoxLayout *> (titleBarWidget ()->layout ());
   QLabel *label = new QLabel (title);
   label->setStyleSheet ("background: transparent;");
   h_layout->insertWidget (0,label);
 #endif
   setWindowTitle (title);
 }
 
+// set focus to previously active widget in tabbed widget stack
+void
+octave_dock_widget::set_focus_predecessor ()
+{
+  if (_predecessor_widget)    // only != 0 if widget was tabbed
+    _predecessor_widget->focus ();
+
+  _predecessor_widget = 0;
+}
+
 // make the widget floating
 void
 octave_dock_widget::make_window ()
 {
 #if defined (Q_OS_WIN32)
 
   // windows: the widget has to be reparented (parent = 0)
 
@@ -202,18 +220,21 @@ octave_dock_widget::make_window ()
 
   QString css = styleSheet ();
   css.replace ("widget-undock","widget-dock");
   setStyleSheet (css);
 
 #endif
 
   _floating = true;
+
+  set_focus_predecessor ();  // set focus previously active widget if tabbed
 }
 
+
 // dock the widget
 void
 octave_dock_widget::make_widget (bool dock)
 {
 #if defined (Q_OS_WIN32)
 
   // windows: Since floating widget has no parent, we have to read it
 
@@ -450,8 +471,18 @@ octave_dock_widget::handle_active_dock_c
     }
 
   if (_custom_style && this == w_new)
     {
       set_style (true);
       update ();
     }
 }
+
+
+// close event
+void
+octave_dock_widget::closeEvent (QCloseEvent *e)
+{
+  emit active_changed (false);
+  set_focus_predecessor ();
+  QDockWidget::closeEvent (e);
+}
diff --git a/libgui/src/octave-dock-widget.h b/libgui/src/octave-dock-widget.h
--- a/libgui/src/octave-dock-widget.h
+++ b/libgui/src/octave-dock-widget.h
@@ -38,31 +38,27 @@ public:
 
   octave_dock_widget (QWidget *p = 0);
   virtual ~octave_dock_widget ();
 
   virtual void connect_visibility_changed (void);
   void make_window (void);
   void make_widget (bool dock=true);
   void set_title (const QString&);
-
+  void set_predecessor_widget (octave_dock_widget *prev_widget);
 signals:
 
   /** Custom signal that tells whether a user has clicked away
    *  that dock widget, i.e the active dock widget has
    *  changed. */
   void active_changed (bool active);
 
 protected:
 
-  virtual void closeEvent (QCloseEvent *e)
-  {
-    emit active_changed (false);
-    QDockWidget::closeEvent (e);
-  }
+  virtual void closeEvent (QCloseEvent *e);
 
   QWidget * focusWidget ();
 
 public slots:
 
   virtual void focus (void)
   {
     if (! isVisible ())
@@ -109,28 +105,30 @@ protected slots:
 private slots:
 
   void change_floating (bool);
   void change_visibility (bool);
 
 private:
 
   void set_style (bool active);
+  void set_focus_predecessor ();
 
   QMainWindow *_parent;  // store the parent since we are reparenting to 0
   bool _floating;
   bool _custom_style;
   int _title_3d;
   int _icon_size;
   QColor _bg_color;
   QColor _bg_color_active;
   QColor _fg_color;
   QColor _fg_color_active;
   QString _icon_color;
   QString _icon_color_active;
+  octave_dock_widget *_predecessor_widget;
 
 #if defined (Q_OS_WIN32)
   QWidget *_title_widget;
   QToolButton *_dock_button;
   QToolButton *_close_button;
   QAction *_dock_action;
   QAction *_close_action;
 #endif
