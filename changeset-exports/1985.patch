# HG changeset patch
# User jwe
# Date 825690803 0
#      Fri Mar 01 14:33:23 1996 +0000
# Node ID a9abae46d75f38d36c347813ef9790d2298ed800
# Parent  1c121da7b952fa571b83bd6f27be0ca8aef040a4
[project @ 1996-03-01 14:33:13 by jwe]

diff --git a/liboctave/MArray-C.cc b/liboctave/MArray-C.cc
--- a/liboctave/MArray-C.cc
+++ b/liboctave/MArray-C.cc
@@ -27,113 +27,18 @@ Software Foundation, 59 Temple Place - S
 #include "MArray.cc"
 
 #include "oct-cmplx.h"
 
 template class MArray<Complex>;
 template class MArray2<Complex>;
 template class MDiagArray<Complex>;
 
-template MArray<Complex>
-operator + (const MArray<Complex>& a, const Complex& s);
-
-template MArray<Complex>
-operator - (const MArray<Complex>& a, const Complex& s);
-
-template MArray<Complex>
-operator * (const MArray<Complex>& a, const Complex& s);
-
-template MArray<Complex>
-operator / (const MArray<Complex>& a, const Complex& s);
-
-template MArray<Complex>
-operator + (const Complex& s, const MArray<Complex>& a);
-
-template MArray<Complex>
-operator - (const Complex& s, const MArray<Complex>& a);
-
-template MArray<Complex>
-operator * (const Complex& s, const MArray<Complex>& a);
-
-template MArray<Complex>
-operator / (const Complex& s, const MArray<Complex>& a);
-
-template MArray<Complex>
-operator + (const MArray<Complex>& a, const MArray<Complex>& b);
-
-template MArray<Complex>
-operator - (const MArray<Complex>& a, const MArray<Complex>& b);
-
-template MArray<Complex>
-product (const MArray<Complex>& a, const MArray<Complex>& b);
-
-template MArray<Complex>
-quotient (const MArray<Complex>& a, const MArray<Complex>& b);
-
-template MArray<Complex>
-operator - (const MArray<Complex>& a);
-
-template MArray2<Complex>
-operator + (const MArray2<Complex>& a, const Complex& s);
-
-template MArray2<Complex>
-operator - (const MArray2<Complex>& a, const Complex& s);
-
-template MArray2<Complex>
-operator * (const MArray2<Complex>& a, const Complex& s);
-
-template MArray2<Complex>
-operator / (const MArray2<Complex>& a, const Complex& s);
-
-template MArray2<Complex>
-operator + (const Complex& s, const MArray2<Complex>& a);
-
-template MArray2<Complex>
-operator - (const Complex& s, const MArray2<Complex>& a);
-
-template MArray2<Complex>
-operator * (const Complex& s, const MArray2<Complex>& a);
-
-template MArray2<Complex>
-operator / (const Complex& s, const MArray2<Complex>& a);
-
-template MArray2<Complex>
-operator + (const MArray2<Complex>& a, const MArray2<Complex>& b);
-
-template MArray2<Complex>
-operator - (const MArray2<Complex>& a, const MArray2<Complex>& b);
-
-template MArray2<Complex>
-product (const MArray2<Complex>& a, const MArray2<Complex>& b);
-
-template MArray2<Complex>
-quotient (const MArray2<Complex>& a, const MArray2<Complex>& b);
-
-template MArray2<Complex>
-operator - (const MArray2<Complex>& a);
-
-template MDiagArray<Complex>
-operator * (const MDiagArray<Complex>& a, const Complex& s);
-
-template MDiagArray<Complex>
-operator / (const MDiagArray<Complex>& a, const Complex& s);
-
-template MDiagArray<Complex>
-operator * (const Complex& s, const MDiagArray<Complex>& a);
-
-template MDiagArray<Complex>
-operator + (const MDiagArray<Complex>& a, const MDiagArray<Complex>& b);
-
-template MDiagArray<Complex>
-operator - (const MDiagArray<Complex>& a, const MDiagArray<Complex>& b);
-
-template MDiagArray<Complex>
-product (const MDiagArray<Complex>& a, const MDiagArray<Complex>& b);
-
-template MDiagArray<Complex>
-operator - (const MDiagArray<Complex>& a);
+INSTANTIATE_MARRAY_FRIENDS (Complex)
+INSTANTIATE_MARRAY2_FRIENDS (Complex)
+INSTANTIATE_MDIAGARRAY_FRIENDS (Complex)
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; page-delimiter: "^/\\*" ***
 ;;; End: ***
 */
diff --git a/liboctave/MArray-ch.cc b/liboctave/MArray-ch.cc
--- a/liboctave/MArray-ch.cc
+++ b/liboctave/MArray-ch.cc
@@ -26,119 +26,23 @@ Software Foundation, 59 Temple Place - S
 #define NO_DIAG_ARRAY 1
 
 #include "MArray.h"
 #include "MArray.cc"
 
 template class MArray<char>;
 template class MArray2<char>;
 
+INSTANTIATE_MARRAY_FRIENDS (char)
+INSTANTIATE_MARRAY2_FRIENDS (char)
+
 #ifndef NO_DIAG_ARRAY
 template class MDiagArray<char>;
-#endif
 
-template MArray<char>
-operator + (const MArray<char>& a, const char& s);
-
-template MArray<char>
-operator - (const MArray<char>& a, const char& s);
-
-template MArray<char>
-operator * (const MArray<char>& a, const char& s);
-
-template MArray<char>
-operator / (const MArray<char>& a, const char& s);
-
-template MArray<char>
-operator + (const char& s, const MArray<char>& a);
-
-template MArray<char>
-operator - (const char& s, const MArray<char>& a);
-
-template MArray<char>
-operator * (const char& s, const MArray<char>& a);
-
-template MArray<char>
-operator / (const char& s, const MArray<char>& a);
-
-template MArray<char>
-operator + (const MArray<char>& a, const MArray<char>& b);
-
-template MArray<char>
-operator - (const MArray<char>& a, const MArray<char>& b);
-
-template MArray<char>
-product (const MArray<char>& a, const MArray<char>& b); 
-
-template MArray<char>
-quotient (const MArray<char>& a, const MArray<char>& b);
-
-template MArray<char>
-operator - (const MArray<char>& a);
-
-template MArray2<char>
-operator + (const MArray2<char>& a, const char& s);
-
-template MArray2<char>
-operator - (const MArray2<char>& a, const char& s);
-
-template MArray2<char>
-operator * (const MArray2<char>& a, const char& s);
-
-template MArray2<char>
-operator / (const MArray2<char>& a, const char& s);
-
-template MArray2<char>
-operator + (const char& s, const MArray2<char>& a);
-
-template MArray2<char>
-operator - (const char& s, const MArray2<char>& a);
-
-template MArray2<char>
-operator * (const char& s, const MArray2<char>& a);
-
-template MArray2<char>
-operator / (const char& s, const MArray2<char>& a);
-
-template MArray2<char>
-operator + (const MArray2<char>& a, const MArray2<char>& b);
-
-template MArray2<char>
-operator - (const MArray2<char>& a, const MArray2<char>& b);
-
-template MArray2<char>
-product (const MArray2<char>& a, const MArray2<char>& b);
-
-template MArray2<char>
-quotient (const MArray2<char>& a, const MArray2<char>& b);
-
-template MArray2<char>
-operator - (const MArray2<char>& a);
-
-#ifndef NO_DIAG_ARRAY
-template MDiagArray<char>
-operator * (const MDiagArray<char>& a, const char& s);
-
-template MDiagArray<char>
-operator / (const MDiagArray<char>& a, const char& s);
-
-template MDiagArray<char>
-operator * (const char& s, const MDiagArray<char>& a);
-
-template MDiagArray<char>
-operator + (const MDiagArray<char>& a, const MDiagArray<char>& b);
-
-template MDiagArray<char>
-operator - (const MDiagArray<char>& a, const MDiagArray<char>& b);
-
-template MDiagArray<char>
-product (const MDiagArray<char>& a, const MDiagArray<char>& b);
-
-template MDiagArray<char>
-operator - (const MDiagArray<char>& a);
+INSTANTIATE_MDIAGARRAY_FRIENDS (char)
 #endif
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; page-delimiter: "^/\\*" ***
 ;;; End: ***
 */
diff --git a/liboctave/MArray-i.cc b/liboctave/MArray-i.cc
--- a/liboctave/MArray-i.cc
+++ b/liboctave/MArray-i.cc
@@ -26,119 +26,23 @@ Software Foundation, 59 Temple Place - S
 #define NO_DIAG_ARRAY 1
 
 #include "MArray.h"
 #include "MArray.cc"
 
 template class MArray<int>;
 template class MArray2<int>;
 
+INSTANTIATE_MARRAY_FRIENDS (int)
+INSTANTIATE_MARRAY2_FRIENDS (int)
+
 #ifndef NO_DIAG_ARRAY
 template class MDiagArray<int>;
-#endif
 
-template MArray<int>
-operator + (const MArray<int>& a, const int& s);
-
-template MArray<int>
-operator - (const MArray<int>& a, const int& s);
-
-template MArray<int>
-operator * (const MArray<int>& a, const int& s);
-
-template MArray<int>
-operator / (const MArray<int>& a, const int& s);
-
-template MArray<int>
-operator + (const int& s, const MArray<int>& a);
-
-template MArray<int>
-operator - (const int& s, const MArray<int>& a);
-
-template MArray<int>
-operator * (const int& s, const MArray<int>& a);
-
-template MArray<int>
-operator / (const int& s, const MArray<int>& a);
-
-template MArray<int>
-operator + (const MArray<int>& a, const MArray<int>& b);
-
-template MArray<int>
-operator - (const MArray<int>& a, const MArray<int>& b);
-
-template MArray<int>
-product (const MArray<int>& a, const MArray<int>& b); 
-
-template MArray<int>
-quotient (const MArray<int>& a, const MArray<int>& b);
-
-template MArray<int>
-operator - (const MArray<int>& a);
-
-template MArray2<int>
-operator + (const MArray2<int>& a, const int& s);
-
-template MArray2<int>
-operator - (const MArray2<int>& a, const int& s);
-
-template MArray2<int>
-operator * (const MArray2<int>& a, const int& s);
-
-template MArray2<int>
-operator / (const MArray2<int>& a, const int& s);
-
-template MArray2<int>
-operator + (const int& s, const MArray2<int>& a);
-
-template MArray2<int>
-operator - (const int& s, const MArray2<int>& a);
-
-template MArray2<int>
-operator * (const int& s, const MArray2<int>& a);
-
-template MArray2<int>
-operator / (const int& s, const MArray2<int>& a);
-
-template MArray2<int>
-operator + (const MArray2<int>& a, const MArray2<int>& b);
-
-template MArray2<int>
-operator - (const MArray2<int>& a, const MArray2<int>& b);
-
-template MArray2<int>
-product (const MArray2<int>& a, const MArray2<int>& b);
-
-template MArray2<int>
-quotient (const MArray2<int>& a, const MArray2<int>& b);
-
-template MArray2<int>
-operator - (const MArray2<int>& a);
-
-#ifndef NO_DIAG_ARRAY
-template MDiagArray<int>
-operator * (const MDiagArray<int>& a, const int& s);
-
-template MDiagArray<int>
-operator / (const MDiagArray<int>& a, const int& s);
-
-template MDiagArray<int>
-operator * (const int& s, const MDiagArray<int>& a);
-
-template MDiagArray<int>
-operator + (const MDiagArray<int>& a, const MDiagArray<int>& b);
-
-template MDiagArray<int>
-operator - (const MDiagArray<int>& a, const MDiagArray<int>& b);
-
-template MDiagArray<int>
-product (const MDiagArray<int>& a, const MDiagArray<int>& b);
-
-template MDiagArray<int>
-operator - (const MDiagArray<int>& a);
+INSTANTIATE_MDIAGARRAY_FRIENDS (int)
 #endif
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; page-delimiter: "^/\\*" ***
 ;;; End: ***
 */
diff --git a/liboctave/MArray-s.cc b/liboctave/MArray-s.cc
--- a/liboctave/MArray-s.cc
+++ b/liboctave/MArray-s.cc
@@ -26,119 +26,23 @@ Software Foundation, 59 Temple Place - S
 #define NO_DIAG_ARRAY 1
 
 #include "MArray.h"
 #include "MArray.cc"
 
 template class MArray<short>;
 template class MArray2<short>;
 
+INSTANTIATE_MARRAY_FRIENDS (short)
+INSTANTIATE_MARRAY2_FRIENDS (short)
+
 #ifndef NO_DIAG_ARRAY
 template class MDiagArray<short>;
-#endif
 
-template MArray<short>
-operator + (const MArray<short>& a, const short& s);
-
-template MArray<short>
-operator - (const MArray<short>& a, const short& s);
-
-template MArray<short>
-operator * (const MArray<short>& a, const short& s);
-
-template MArray<short>
-operator / (const MArray<short>& a, const short& s);
-
-template MArray<short>
-operator + (const short& s, const MArray<short>& a);
-
-template MArray<short>
-operator - (const short& s, const MArray<short>& a);
-
-template MArray<short>
-operator * (const short& s, const MArray<short>& a);
-
-template MArray<short>
-operator / (const short& s, const MArray<short>& a);
-
-template MArray<short>
-operator + (const MArray<short>& a, const MArray<short>& b);
-
-template MArray<short>
-operator - (const MArray<short>& a, const MArray<short>& b);
-
-template MArray<short>
-product (const MArray<short>& a, const MArray<short>& b); 
-
-template MArray<short>
-quotient (const MArray<short>& a, const MArray<short>& b);
-
-template MArray<short>
-operator - (const MArray<short>& a);
-
-template MArray2<short>
-operator + (const MArray2<short>& a, const short& s);
-
-template MArray2<short>
-operator - (const MArray2<short>& a, const short& s);
-
-template MArray2<short>
-operator * (const MArray2<short>& a, const short& s);
-
-template MArray2<short>
-operator / (const MArray2<short>& a, const short& s);
-
-template MArray2<short>
-operator + (const short& s, const MArray2<short>& a);
-
-template MArray2<short>
-operator - (const short& s, const MArray2<short>& a);
-
-template MArray2<short>
-operator * (const short& s, const MArray2<short>& a);
-
-template MArray2<short>
-operator / (const short& s, const MArray2<short>& a);
-
-template MArray2<short>
-operator + (const MArray2<short>& a, const MArray2<short>& b);
-
-template MArray2<short>
-operator - (const MArray2<short>& a, const MArray2<short>& b);
-
-template MArray2<short>
-product (const MArray2<short>& a, const MArray2<short>& b);
-
-template MArray2<short>
-quotient (const MArray2<short>& a, const MArray2<short>& b);
-
-template MArray2<short>
-operator - (const MArray2<short>& a);
-
-#ifndef NO_DIAG_ARRAY
-template MDiagArray<short>
-operator * (const MDiagArray<short>& a, const short& s);
-
-template MDiagArray<short>
-operator / (const MDiagArray<short>& a, const short& s);
-
-template MDiagArray<short>
-operator * (const short& s, const MDiagArray<short>& a);
-
-template MDiagArray<short>
-operator + (const MDiagArray<short>& a, const MDiagArray<short>& b);
-
-template MDiagArray<short>
-operator - (const MDiagArray<short>& a, const MDiagArray<short>& b);
-
-template MDiagArray<short>
-product (const MDiagArray<short>& a, const MDiagArray<short>& b);
-
-template MDiagArray<short>
-operator - (const MDiagArray<short>& a);
+INSTANTIATE_MDIAGARRAY_FRIENDS (short)
 #endif
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; page-delimiter: "^/\\*" ***
 ;;; End: ***
 */
