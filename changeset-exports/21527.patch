# HG changeset patch
# User Rik <rik@octave.org>
# Date 1458685038 25200
#      Tue Mar 22 15:17:18 2016 -0700
# Node ID ab8760b1245dfebc543bb558d5673c21de7c74ac
# Parent  b76d1de20f9afeba137bc6a6525687f3c171e877
Raise an error if writes to pipe fail (bug #47381).

* gl2ps-print.cc: Re-order #includes.
* gl2ps-print.cc (gl2ps_renderer::draw): When copying temporary file to pipe,
check that write succeeds by comparing bytes read to bytes written.  If an
error has occured, clear the SIGPIPE signal by calling octave_signal_handler
and then raise an error.
letting SIGPIPE interrupt handler eventually deal with the problem.

diff --git a/libinterp/corefcn/gl2ps-print.cc b/libinterp/corefcn/gl2ps-print.cc
--- a/libinterp/corefcn/gl2ps-print.cc
+++ b/libinterp/corefcn/gl2ps-print.cc
@@ -20,34 +20,33 @@ along with Octave; see the file COPYING.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
-#include "gl2ps-print.h"
 
 #ifdef HAVE_GL2PS_H
 
 #include <cstdio>
-
 #include <limits>
-
 #include <unistd.h>
 
 #include <gl2ps.h>
 
 #include "lo-mappers.h"
 #include "oct-locbuf.h"
 #include "unwind-prot.h"
 
+#include "gl2ps-print.h"
 #include "gl-render.h"
 #include "oct-opengl.h"
+#include "sighandlers.h"
 #include "sysdep.h"
 #include "text-renderer.h"
 
 class
 OCTINTERP_API
 gl2ps_renderer : public opengl_renderer
 {
 public:
@@ -264,22 +263,30 @@ gl2ps_renderer::draw (const graphics_obj
           // Errors and warnings are checked after gl2psEndViewport in
           // gl2ps_renderer::draw_axes instead.
           gl2psEndPage ();
         }
 
       // Copy temporary file to pipe
       gnulib::fseek (tmpf, 0, SEEK_SET);
       char str[256];
-      int nread = 1;
+      size_t nread, nwrite;
+      nread = 1;
       while (! feof (tmpf) && nread)
         {
           nread = gnulib::fread (str, 1, 256, tmpf);
           if (nread)
-            gnulib::fwrite (str, 1, nread, fp);
+            {
+              nwrite = gnulib::fwrite (str, 1, nread, fp);
+              if (nwrite != nread)
+                {
+                  octave_signal_handler ();   // Clear SIGPIPE signal
+                  error ("gl2ps_renderer::draw: internal pipe error");
+                }
+            }
         }
     }
   else
     opengl_renderer::draw (go);
 }
 
 int
 gl2ps_renderer::alignment_to_mode (int ha, int va) const
