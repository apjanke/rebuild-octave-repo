# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1204902277 18000
#      Fri Mar 07 10:04:37 2008 -0500
# Node ID c01ff6818f4c40a0f22fa7ab7a5cad482c854dc5
# Parent  8bf1bcb0ad8fb31b97f0ce2a9d5f5d0a94e4e55b
simplify struct array printing

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2008-03-07  John W. Eaton  <jwe@octave.org>
+
+	* ov-struct.cc (octave_struct::print_raw): Don't print contents fo
+	struct arrays that have more than one element.
+
 2008-03-06  David Bateman  <dbateman@free.fr>
 
 	* DLD-FUNCTIONS/matrix_type.cc (Fmatrix_type): Document that
 	the initial interpretation of a positive definite return from
 	matrix_type is that the matrix is "probably" positive definite and
 	not certainly so.
 
 2008-03-06  John W. Eaton  <jwe@octave.org>
diff --git a/src/ov-struct.cc b/src/ov-struct.cc
--- a/src/ov-struct.cc
+++ b/src/ov-struct.cc
@@ -494,30 +494,27 @@ void
 octave_struct::print_raw (std::ostream& os, bool) const
 {
   unwind_protect::begin_frame ("octave_struct_print");
 
   unwind_protect_int (Vstruct_levels_to_print);
 
   if (Vstruct_levels_to_print >= 0)
     {
-      bool print_keys_only = (Vstruct_levels_to_print == 0
-			      || map.numel () == 0);
-
-      Vstruct_levels_to_print--;
+      bool print_keys_only = Vstruct_levels_to_print-- == 0;
 
       indent (os);
       os << "{";
       newline (os);
 
       increment_indent_level ();
 
       octave_idx_type n = map.numel ();
 
-      if (n == 0 || (n > 1 && print_keys_only))
+      if (n != 1 || print_keys_only)
 	{
 	  indent (os);
 	  dim_vector dv = dims ();
 	  os << dv.str () << " struct array containing the fields:";
 	  newline (os);
 	  newline (os);
 
 	  increment_indent_level ();
@@ -528,32 +525,32 @@ octave_struct::print_raw (std::ostream& 
       for (octave_idx_type i = 0; i < key_list.length (); i++)
 	{
 	  std::string key = key_list[i];
 
 	  Cell val = map.contents (key);
 
 	  octave_value tmp = (n == 1) ? val(0) : octave_value (val, true);
 
-	  if (print_keys_only)
+	  if (n != 1 || print_keys_only)
 	    {
 	      indent (os);
 	      os << key;
 	      if (n == 1)
 		{
 		  dim_vector dv = tmp.dims ();
 		  os << ": " << dv.str () << " " << tmp.type_name ();
 		}
 	      newline (os);
 	    }
 	  else
 	    tmp.print_with_name (os, key);
 	}
 
-      if (n == 0 || (n > 1 && print_keys_only))
+      if (n != 1 || print_keys_only)
 	decrement_indent_level ();
 
       decrement_indent_level ();
 
       indent (os);
       os << "}";
       newline (os);
     }
