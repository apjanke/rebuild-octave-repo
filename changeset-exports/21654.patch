# HG changeset patch
# User mmuetzel <markus.muetzel@gmx.de>
# Date 1461841828 -7200
#      Thu Apr 28 13:10:28 2016 +0200
# Node ID a0ebc922fd5238a5386d835c00e97d2132bfdf5f
# Parent  09c08613322849d67038988b626b6fc39194b3fa
Add "facenormals" and "*normalsmode" to "surface" and "patch" (bug #47791)

* graphics.in.h (patch and surface properties): Add properties
"facenormals", "facenormalsmode" and "vertexnormalsmode". Deprecate
property "normalmode" (use "vertexnormalsmode" instead).

* graphics.cc (surface update_normals): Rename to update_vertex_normals.

* warning_ids.m: Add description for "Octave:deprecated-function" and
"Octave:deprecated-property".

diff --git a/libinterp/corefcn/graphics.cc b/libinterp/corefcn/graphics.cc
--- a/libinterp/corefcn/graphics.cc
+++ b/libinterp/corefcn/graphics.cc
@@ -8288,19 +8288,19 @@ cross_product (double x1, double y1, dou
                double& x, double& y, double& z)
 {
   x += (y1 * z2 - z1 * y2);
   y += (z1 * x2 - x1 * z2);
   z += (x1 * y2 - y1 * x2);
 }
 
 void
-surface::properties::update_normals (void)
-{
-  if (normalmode_is ("auto"))
+surface::properties::update_vertex_normals (void)
+{
+  if (vertexnormalsmode_is ("auto"))
     {
       Matrix x = get_xdata ().matrix_value ();
       Matrix y = get_ydata ().matrix_value ();
       Matrix z = get_zdata ().matrix_value ();
 
       int p = z.columns ();
       int q = z.rows ();
 
diff --git a/libinterp/corefcn/graphics.in.h b/libinterp/corefcn/graphics.in.h
--- a/libinterp/corefcn/graphics.in.h
+++ b/libinterp/corefcn/graphics.in.h
@@ -4851,33 +4851,36 @@ public:
       string_property displayname , ""
       double_radio_property edgealpha , double_radio_property (1.0, radio_values ("flat|interp"))
       color_property edgecolor , color_property (color_values (0, 0, 0), radio_values ("none|flat|interp"))
       radio_property edgelighting , "{none}|flat|gouraud|phong"
       radio_property erasemode , "{normal}|background|xor|none"
       double_radio_property facealpha , double_radio_property (1.0, radio_values ("flat|interp"))
       color_property facecolor , color_property (color_values (0, 0, 0), radio_values ("none|flat|interp"))
       radio_property facelighting , "{none}|flat|gouraud|phong"
+      array_property facenormals m , Matrix ()
+      radio_property facenormalsmode , "{auto}|manual"
       array_property faces u , default_patch_faces ()
       array_property facevertexalphadata , Matrix ()
       array_property facevertexcdata u , Matrix ()
       // FIXME: interpreter is not a property of a Matlab patch.
       //        Octave uses this for legend() with the string displayname.
       radio_property interpreter , "{tex}|none|latex"
       radio_property linestyle , "{-}|--|:|-.|none"
       double_property linewidth , 0.5
       radio_property marker , "{none}|+|o|*|.|x|s|square|d|diamond|^|v|>|<|p|pentagram|h|hexagram"
       color_property markeredgecolor , color_property (radio_values ("none|{auto}|flat"), color_values (0, 0, 0))
       color_property markerfacecolor , color_property (radio_values ("{none}|auto|flat"), color_values (0, 0, 0))
       double_property markersize , 6
-      radio_property normalmode , "{auto}|manual"
+      radio_property normalmode hsg , "{auto}|manual"
       double_property specularcolorreflectance , 1.0
       double_property specularexponent , 10.0
       double_property specularstrength , 0.9
-      array_property vertexnormals , Matrix ()
+      array_property vertexnormals m , Matrix ()
+      radio_property vertexnormalsmode , "{auto}|manual"
       array_property vertices u , default_patch_vertices ()
       array_property xdata u , default_patch_xdata ()
       array_property ydata u , default_patch_ydata ()
       array_property zdata u , Matrix ()
 
       // hidden properties for limit computation
       row_vector_property alim hlr , Matrix ()
       row_vector_property clim hlr , Matrix ()
@@ -4900,25 +4903,28 @@ public:
       faces.add_constraint (dim_vector (-1, -1));
       vertices.add_constraint (dim_vector (-1, 2));
       vertices.add_constraint (dim_vector (-1, 3));
       cdata.add_constraint (dim_vector (-1, -1));
       cdata.add_constraint (dim_vector (-1, -1, 3));
       facevertexcdata.add_constraint (dim_vector (-1, 1));
       facevertexcdata.add_constraint (dim_vector (-1, 3));
       facevertexalphadata.add_constraint (dim_vector (-1, 1));
-      vertexnormals.add_constraint (dim_vector (-1, -1));
+      facenormals.add_constraint (dim_vector (-1, 3));
+      facenormals.add_constraint (dim_vector (0, 0));
+      vertexnormals.add_constraint (dim_vector (-1, 3));
+      vertexnormals.add_constraint (dim_vector (0, 0));
     }
 
   private:
     std::string bad_data_msg;
 
     void update_faces (void) { update_data ();}
 
-    void update_vertices (void)  {  update_data ();}
+    void update_vertices (void)  { update_data ();}
 
     void update_facevertexcdata (void) { update_data ();}
 
     void update_fvc (void);
 
     void update_xdata (void)
     {
       if (get_xdata ().is_empty ())
@@ -4963,18 +4969,33 @@ public:
       update_fvc ();
 
       if (cdatamapping_is ("scaled"))
         set_clim (cdata.get_limits ());
       else
         clim = cdata.get_limits ();
     }
 
-
     void update_data (void);
+
+    void set_normalmode (const octave_value& val)
+    {
+      warning_with_id ("Octave:deprecated-property",
+        "patch: Property 'normalmode' is deprecated and will be removed "
+        "from a future version of Octave. Use 'vertexnormalsmode' instead.");
+      set_vertexnormalsmode (val);
+    }
+
+    std::string get_normalmode (void) const
+    {
+      warning_with_id ("Octave:deprecated-property",
+        "patch: Property 'normalmode' is deprecated and will be removed "
+        "from a future version of Octave. Use 'vertexnormalsmode' instead.");
+      return vertexnormalsmode.current_value ();
+    }
   };
 
 private:
   properties xproperties;
 
 public:
   patch (const graphics_handle& mh, const graphics_handle& p)
     : base_graphics_object (), xproperties (mh, p)
@@ -5033,31 +5054,34 @@ public:
       string_property displayname , ""
       double_radio_property edgealpha , double_radio_property (1.0, radio_values ("flat|interp"))
       color_property edgecolor , color_property (color_values (0, 0, 0), radio_values ("none|flat|interp"))
       radio_property edgelighting , "{none}|flat|gouraud|phong"
       radio_property erasemode , "{normal}|none|xor|background"
       double_radio_property facealpha , double_radio_property (1.0, radio_values ("flat|interp|texturemap"))
       color_property facecolor , color_property (radio_values ("none|{flat}|interp|texturemap"), color_values (0, 0, 0))
       radio_property facelighting , "{none}|flat|gouraud|phong"
+      array_property facenormals m , Matrix ()
+      radio_property facenormalsmode , "{auto}|manual"
       // FIXME: interpreter is not a Matlab surface property
       //        Octave uses this for legend() with the string displayname.
       radio_property interpreter , "{tex}|none|latex"
       radio_property linestyle , "{-}|--|:|-.|none"
       double_property linewidth , 0.5
       radio_property marker , "{none}|+|o|*|.|x|s|square|d|diamond|^|v|>|<|p|pentagram|h|hexagram"
       color_property markeredgecolor , color_property (radio_values ("none|{auto}|flat"), color_values (0, 0, 0))
       color_property markerfacecolor , color_property (radio_values ("{none}|auto|flat"), color_values (0, 0, 0))
       double_property markersize , 6
       radio_property meshstyle , "{both}|row|column"
-      radio_property normalmode u , "{auto}|manual"
+      radio_property normalmode hsg , "{auto}|manual"
       double_property specularcolorreflectance , 1
       double_property specularexponent , 10
       double_property specularstrength , 0.9
-      array_property vertexnormals u , Matrix ()
+      array_property vertexnormals m , Matrix ()
+      radio_property vertexnormalsmode u , "{auto}|manual"
       array_property xdata u , default_surface_xdata ()
       string_property xdatasource , ""
       array_property ydata u , default_surface_ydata ()
       string_property ydatasource , ""
       array_property zdata u , default_surface_zdata ()
       string_property zdatasource , ""
 
       // hidden properties for limit computation
@@ -5081,16 +5105,18 @@ public:
       zdata.add_constraint (dim_vector (-1, -1));
       cdata.add_constraint ("double");
       cdata.add_constraint ("single");
       cdata.add_constraint (dim_vector (-1, -1));
       cdata.add_constraint (dim_vector (-1, -1, 3));
       alphadata.add_constraint ("double");
       alphadata.add_constraint ("uint8");
       alphadata.add_constraint (dim_vector (-1, -1));
+      facenormals.add_constraint (dim_vector (-1, -1, 3));
+      facenormals.add_constraint (dim_vector (0, 0));
       vertexnormals.add_constraint (dim_vector (-1, -1, 3));
       vertexnormals.add_constraint (dim_vector (0, 0));
     }
 
   private:
     void update_alphadata (void)
     {
       if (alphadatamapping_is ("scaled"))
@@ -5104,39 +5130,52 @@ public:
       if (cdatamapping_is ("scaled"))
         set_clim (cdata.get_limits ());
       else
         clim = cdata.get_limits ();
     }
 
     void update_xdata (void)
     {
-      update_normals ();
+      update_vertex_normals ();
       set_xlim (xdata.get_limits ());
     }
 
     void update_ydata (void)
     {
-      update_normals ();
+      update_vertex_normals ();
       set_ylim (ydata.get_limits ());
     }
 
     void update_zdata (void)
     {
-      update_normals ();
+      update_vertex_normals ();
       set_zlim (zdata.get_limits ());
     }
 
-    void update_normals (void);
-
-    void update_normalmode (void)
-    { update_normals (); }
-
-    void update_vertexnormals (void)
-    { set_normalmode ("manual"); }
+    void update_vertex_normals (void);
+
+    void update_vertexnormalsmode (void)
+    { update_vertex_normals (); }
+
+    void set_normalmode (const octave_value& val)
+    {
+      warning_with_id ("Octave:deprecated-property", 
+        "surface: Property 'normalmode' is deprecated and will be removed "
+        "from a future version of Octave. Use 'vertexnormalsmode' instead.");
+      set_vertexnormalsmode (val);
+    }
+
+    std::string get_normalmode (void) const
+    {
+      warning_with_id ("Octave:deprecated-property", 
+        "surface: Property 'normalmode' is deprecated and will be removed "
+        "from a future version of Octave. Use 'vertexnormalsmode' instead.");
+      return vertexnormalsmode.current_value ();
+    }
   };
 
 private:
   properties xproperties;
 
 public:
   surface (const graphics_handle& mh, const graphics_handle& p)
     : base_graphics_object (), xproperties (mh, p)
diff --git a/scripts/miscellaneous/warning_ids.m b/scripts/miscellaneous/warning_ids.m
--- a/scripts/miscellaneous/warning_ids.m
+++ b/scripts/miscellaneous/warning_ids.m
@@ -122,22 +122,34 @@
 ## directory as the .oct file referred to by the autoload() command.
 ## By default, the @code{Octave:autoload-relative-file-name} warning is
 ## enabled.
 ##
 ## @item Octave:built-in-variable-assignment
 ## By default, the @code{Octave:built-in-variable-assignment} warning is
 ## enabled.
 ##
+## @item Octave:deprecated-function
+## If the @code{Octave:deprecated-function} warning is enabled, a
+## warning is issued when Octave encounters a function that is obsolete and
+## scheduled for removal from Octave.
+## By default, the @code{Octave:deprecated-function} warning is enabled.
+##
 ## @item Octave:deprecated-keyword
 ## If the @code{Octave:deprecated-keyword} warning is enabled, a
 ## warning is issued when Octave encounters a keyword that is obsolete and
 ## scheduled for removal from Octave.
 ## By default, the @code{Octave:deprecated-keyword} warning is enabled.
 ##
+## @item Octave:deprecated-property
+## If the @code{Octave:deprecated-property} warning is enabled, a
+## warning is issued when Octave encounters a graphics property that
+## is obsolete and scheduled for removal from Octave.
+## By default, the @code{Octave:deprecated-property} warning is enabled.
+##
 ## @item Octave:divide-by-zero
 ## If the @code{Octave:divide-by-zero} warning is enabled, a
 ## warning is issued when Octave encounters a division by zero.
 ## By default, the @code{Octave:divide-by-zero} warning is enabled.
 ##
 ## @item Octave:fopen-file-in-path
 ## By default, the @code{Octave:fopen-file-in-path} warning is enabled.
 ##
