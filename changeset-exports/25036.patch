# HG changeset patch
# User Rik <rik@octave.org>
# Date 1522252631 25200
#      Wed Mar 28 08:57:11 2018 -0700
# Branch stable
# Node ID fa2f8ffd088e2b80bb3ff5af5dbcf7ca803feefd
# Parent  6e4121c399575353c58924a6ac6a2e0e184b2d30
Add note about the preferred way to call lu with sparse input (bug #53390).

* lu.cc: Add strong note to documentation that lu with sparse input should
request four outputs.

diff --git a/libinterp/corefcn/lu.cc b/libinterp/corefcn/lu.cc
--- a/libinterp/corefcn/lu.cc
+++ b/libinterp/corefcn/lu.cc
@@ -98,24 +98,24 @@ p =
   0  1
   1  0
 @end group
 @end example
 
 The matrix is not required to be square.
 
 When called with two or three output arguments and a sparse input matrix,
-@code{lu} does not attempt to perform sparsity preserving column
-permutations.  Called with a fourth output argument, the sparsity
-preserving column transformation @var{Q} is returned, such that
-@code{@var{P} * @var{A} * @var{Q} = @var{L} * @var{U}}.
+@code{lu} does not attempt to perform sparsity preserving column permutations.
+Called with a fourth output argument, the sparsity preserving column
+transformation @var{Q} is returned, such that
+@code{@var{P} * @var{A} * @var{Q} = @var{L} * @var{U}}.  This is the
+@strong{preferred} way to call @code{lu} with sparse input matrices.
 
-Called with a fifth output argument and a sparse input matrix,
-@code{lu} attempts to use a scaling factor @var{R} on the input matrix
-such that
+Called with a fifth output argument and a sparse input matrix, @code{lu}
+attempts to use a scaling factor @var{R} on the input matrix such that
 @code{@var{P} * (@var{R} \ @var{A}) * @var{Q} = @var{L} * @var{U}}.
 This typically leads to a sparser and more stable factorization.
 
 An additional input argument @var{thres}, that defines the pivoting
 threshold can be given.  @var{thres} can be a scalar, in which case
 it defines the @sc{umfpack} pivoting tolerance for both symmetric and
 unsymmetric cases.  If @var{thres} is a 2-element vector, then the first
 element defines the pivoting tolerance for the unsymmetric @sc{umfpack}
