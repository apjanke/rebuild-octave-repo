# HG changeset patch
# User Rik <rik@octave.org>
# Date 1534730491 25200
#      Sun Aug 19 19:01:31 2018 -0700
# Branch stable
# Node ID dc70b480b9c1a94034f42167f47b07f5a26c8276
# Parent  a8a72d1c21dde9d2f56f7bb69589404b8882ccbb
zscore.m: Allow an empty OPT argument to mean default (bug #54531).

* zscore.m: Set default for second argument opt to 0 in function prototype.
Check whether opt is empty and assign value of 0 if it is.  Add BIST test
for bug #54531.  Add expected error for each input validation BIST test.

diff --git a/scripts/statistics/zscore.m b/scripts/statistics/zscore.m
--- a/scripts/statistics/zscore.m
+++ b/scripts/statistics/zscore.m
@@ -38,32 +38,30 @@
 ## deviation.
 ##
 ## @seealso{mean, std, center}
 ## @end deftypefn
 
 ## Author: KH <Kurt.Hornik@wu-wien.ac.at>
 ## Description: Subtract mean and divide by standard deviation
 
-function [z, mu, sigma] = zscore (x, opt, dim)
+function [z, mu, sigma] = zscore (x, opt = 0, dim)
 
   if (nargin < 1 || nargin > 3 )
     print_usage ();
   endif
 
   if (! (isnumeric (x) || islogical (x)))
     error ("zscore: X must be a numeric vector or matrix");
   endif
 
-  if (nargin < 2)
+  if (isempty (opt))
     opt = 0;
-  else
-    if (opt != 0 && opt != 1 || ! isscalar (opt))
-      error ("zscore: OPT must be empty, 0, or 1");
-    endif
+  elseif (! isscalar (opt) || (opt != 0 && opt != 1))
+    error ("zscore: normalization OPT must be empty, 0, or 1");
   endif
 
   nd = ndims (x);
   sz = size (x);
   if (nargin < 3)
     ## Find the first non-singleton dimension.
     (dim = find (sz > 1, 1)) || (dim = 1);
   else
@@ -92,17 +90,19 @@ function [z, mu, sigma] = zscore (x, opt
 endfunction
 
 
 %!assert (zscore ([1,2,3]), [-1,0,1])
 %!assert (zscore (single ([1,2,3])), single ([-1,0,1]))
 %!assert (zscore (int8 ([1,2,3])), [-1,0,1])
 %!assert (zscore (ones (3,2,2,2)), zeros (3,2,2,2))
 %!assert (zscore ([2,0,-2;0,2,0;-2,-2,2]), [1,0,-1;0,1,0;-1,-1,1])
+%!assert <*54531> (zscore ([1,2,3], [], 2), [-1,0,1])
 
 ## Test input validation
 %!error zscore ()
 %!error zscore (1, 2, 3)
-%!error zscore (['A'; 'B'])
-%!error zscore (1, ones (2,2))
-%!error zscore (1, 1.5)
-%!error zscore (1, 1, 0)
-%!error zscore (1, 3)
+%!error <X must be a numeric> zscore (['A'; 'B'])
+%!error <OPT must be empty, 0, or 1> zscore (1, ones (2,2))
+%!error <OPT must be empty, 0, or 1> zscore (1, 1.5)
+%!error <DIM must be an integer> zscore (1, [], ones (2,2))
+%!error <DIM must be an integer> zscore (1, [], 1.5)
+%!error <DIM must be .* a valid dimension> zscore (1, [], 0)
