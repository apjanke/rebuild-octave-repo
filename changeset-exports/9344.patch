# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1244971945 -7200
#      Sun Jun 14 11:32:25 2009 +0200
# Node ID 0c4e6a3d6e3ea81ce57fa5454db101722148ff7b
# Parent  70e0d3b1f26f85bce277a3fb2d4e5b9047731fab
support char arrays in lookup

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,12 @@
+2009-06-14  Jaroslav Hajek  <highegg@gmail.com>
+
+	* DLD-FUNCTIONS/lookup.cc (Flookup): Support character array lookup.
+
 2009-06-12  John W. Eaton  <jwe@octave.org>
 
 	* ov-fcn-handle.cc (make_fcn_handle): Accept operators which have
 	corresponding functions and make function handles using the names.
 	New test.
 
 2009-06-12  Jaroslav Hajek  <highegg@gmail.com>
 
diff --git a/src/DLD-FUNCTIONS/lookup.cc b/src/DLD-FUNCTIONS/lookup.cc
--- a/src/DLD-FUNCTIONS/lookup.cc
+++ b/src/DLD-FUNCTIONS/lookup.cc
@@ -181,17 +181,18 @@ For string lookup, 'i' indicates case-in
       print_usage ();
       return retval;
     }
 
   octave_value table = args(0), y = args(1);
   if (table.ndims () > 2 || (table.columns () > 1 && table.rows () > 1))
     warning ("lookup: table is not a vector");
 
-  bool num_case = table.is_numeric_type () && y.is_numeric_type ();
+  bool num_case = ((table.is_numeric_type () && y.is_numeric_type ())
+                   || (table.is_char_matrix () && y.is_char_matrix ()));
   bool str_case = table.is_cellstr () && (y.is_string () || y.is_cellstr ());
   bool left_inf = false;
   bool right_inf = false;
   bool match_idx = false;
   bool match_bool = false;
   bool icase = false;
 
   if (nargin == 3)
@@ -234,16 +235,21 @@ For string lookup, 'i' indicates case-in
       if INT_ARRAY_LOOKUP (int8)
       else if INT_ARRAY_LOOKUP (int16)
       else if INT_ARRAY_LOOKUP (int32)
       else if INT_ARRAY_LOOKUP (int64)
       else if INT_ARRAY_LOOKUP (uint8)
       else if INT_ARRAY_LOOKUP (uint16)
       else if INT_ARRAY_LOOKUP (uint32)
       else if INT_ARRAY_LOOKUP (uint64)
+      else if (table.is_char_matrix () && y.is_char_matrix ())
+        retval = do_numeric_lookup (table.char_array_value (),
+                                    y.char_array_value (),
+                                    left_inf, right_inf,
+                                    match_idx, match_bool);
       else if (table.is_single_type () || y.is_single_type ())
         retval = do_numeric_lookup (table.float_array_value (),
                                     y.float_array_value (),
                                     left_inf, right_inf,
                                     match_idx, match_bool);
       else
         retval = do_numeric_lookup (table.array_value (),
                                     y.array_value (),
