# HG changeset patch
# User David Bateman <dbateman@free.fr>
# Date 1210069236 14400
#      Tue May 06 06:20:36 2008 -0400
# Branch release-3-0-x
# Node ID 735dfdb923843c5ed7915da9501fb2ba018b079b
# Parent  1a7ef7a48be10ffa84fbc0c0b8681d7b31c16a05
Treat bool as a scalar in the bit functions

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,12 @@
+2008-05-06  David Bateman  <dbateman@free.fr>
+
+	* bitfcns.cc (BITOP): Treat octave_bool types and octave_scalar.
+
 2008-05-06  John W. Eaton  <jwe@octave.org>
 
 	* ov-cell.cc (Fstruct2cell): Handle structure arrays properly.
 
 2008-05-05  David Bateman  <dbateman@free.fr>
 
 	* sysdep.cc (Fputenv): Allow single arg. Alias to setenv.
 
diff --git a/src/bitfcns.cc b/src/bitfcns.cc
--- a/src/bitfcns.cc
+++ b/src/bitfcns.cc
@@ -35,16 +35,17 @@ along with Octave; see the file COPYING.
 #include "ov-uint16.h"
 #include "ov-uint8.h"
 #include "ov-int64.h"
 #include "ov-int32.h"
 #include "ov-int16.h"
 #include "ov-int8.h"
 #include "ov-scalar.h"
 #include "ov-re-mat.h"
+#include "ov-bool.h"
 
 // FIXME -- could probably eliminate some code duplication by
 // clever use of templates.
 
 #define BITOPX(OP, FNAME, RET) \
       { \
 	int nelx = x.numel (); \
 	int nely = y.numel (); \
@@ -82,22 +83,28 @@ along with Octave; see the file COPYING.
  \
   octave_value retval; \
  \
   int nargin = args.length (); \
  \
   if (nargin == 2) \
     { \
       if ((args(0).class_name () == octave_scalar::static_class_name ()) \
-	  || (args(1).class_name () == octave_scalar::static_class_name ())) \
+	  || (args(0).class_name () == octave_bool::static_class_name ()) \
+	  || (args(1).class_name () == octave_scalar::static_class_name ()) \
+	  || (args(1).class_name () == octave_bool::static_class_name ())) \
 	{ \
 	  bool arg0_is_int = (args(0).class_name () !=	\
-			      octave_scalar::static_class_name ()); \
+			      octave_scalar::static_class_name () && \
+			      args(0).class_name () != \
+			      octave_bool::static_class_name ()); \
 	  bool arg1_is_int = (args(1).class_name () !=	\
-			      octave_scalar::static_class_name ()); \
+			      octave_scalar::static_class_name () && \
+			      args(1).class_name () != \
+			      octave_bool::static_class_name ()); \
 	  \
 	  if (! (arg0_is_int || arg1_is_int))	\
 	    { \
 	      uint64NDArray x (args(0).array_value ()); \
 	      uint64NDArray y (args(1).array_value ());	\
 	      if (! error_state) \
 		BITOPX (OP, FNAME, uint64NDArray); \
 	      retval = retval.array_value (); \
