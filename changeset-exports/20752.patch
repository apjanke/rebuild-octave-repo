# HG changeset patch
# User Rik <rik@octave.org>
# Date 1448470046 28800
#      Wed Nov 25 08:47:26 2015 -0800
# Node ID c5e8863858b476499f2b5fe23e66eefaa9221813
# Parent  74cc8ae4e2b076bc699e1b9760fd7664bf68f762
Fix behavior of glob() with different sized patterns (bug #46216).

* dirfns.cc (Fglob): Call xall_strings("err_msg") rather than
all_strings("err_msg") since the latter is expecting a boolean rather than
string argument.

* sysdep.cc (Ftilde_expand): Call xall_strings("err_msg") rather than
all_strings.

diff --git a/libinterp/corefcn/dirfns.cc b/libinterp/corefcn/dirfns.cc
--- a/libinterp/corefcn/dirfns.cc
+++ b/libinterp/corefcn/dirfns.cc
@@ -557,17 +557,17 @@ glob (\"file[12]\")\n\
 @end example\n\
 @seealso{ls, dir, readdir, what}\n\
 @end deftypefn")
 {
   octave_value retval;
 
   if (args.length () == 1)
     {
-      string_vector pat = args(0).all_strings ("glob: PATTERN must be a string");
+      string_vector pat = args(0).xall_strings ("glob: PATTERN must be a string");
 
       glob_match pattern (file_ops::tilde_expand (pat));
 
       retval = Cell (pattern.glob ());
     }
   else
     print_usage ();
 
diff --git a/libinterp/corefcn/sysdep.cc b/libinterp/corefcn/sysdep.cc
--- a/libinterp/corefcn/sysdep.cc
+++ b/libinterp/corefcn/sysdep.cc
@@ -967,17 +967,17 @@ tilde_expand (\"~/bin\")\n\
   octave_value retval;
 
   int nargin = args.length ();
 
   if (nargin == 1)
     {
       octave_value arg = args(0);
 
-      string_vector sv = arg.all_strings ("tilde_expand: argument must be char or cellstr object");
+      string_vector sv = arg.xall_strings ("tilde_expand: argument must be char or cellstr object");
 
       sv = file_ops::tilde_expand (sv);
 
       if (arg.is_cellstr ())
         retval = Cell (arg.dims (), sv);
       else
         retval = sv;
     }
