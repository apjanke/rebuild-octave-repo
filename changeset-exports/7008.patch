# HG changeset patch
# User jwe
# Date 1192123023 0
#      Thu Oct 11 17:17:03 2007 +0000
# Node ID 0058799917ac33a142a3d0363081c97e59baf86a
# Parent  6304d9ea0a301e19a392a6ec1340121cc877a07a
[project @ 2007-10-11 17:17:02 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,14 @@
+2007-10-11  John W. Eaton  <jwe@octave.org>
+
+	* plot/__go_draw_axes__.m (get_axis_limits):
+	Return lim = [] if logscale and no positive values.
+	(__go_draw_axes__): Skip plotting if computed axis limits are empty.
+
 2007-10-11  Brian Gough  <bjg@network-theory.co.uk>
 
 	* control/csrefcard.lt, control/system/is_detectable.m,
 	control/system/sysgroup.m, geometry/voronoin.m,
 	miscellaneous/dir.m, sparse/pcg.m, sparse/treeplot.m,
 	statistics/base/mode.m, statistics/distributions/betarnd.m,
 	statistics/distributions/binornd.m,
 	statistics/distributions/cauchy_rnd.m,
diff --git a/scripts/plot/__go_draw_axes__.m b/scripts/plot/__go_draw_axes__.m
--- a/scripts/plot/__go_draw_axes__.m
+++ b/scripts/plot/__go_draw_axes__.m
@@ -689,43 +689,52 @@ function __go_draw_axes__ (h, plot_strea
       endswitch
 
     endfor
 
     have_data = ! isempty (data);
 
     if (xautoscale && have_data)
       xlim = get_axis_limits (xmin, xmax, xminp, xlogscale);
+      if (isempty (xlim))
+	return;
+      endif
       set (h, "xlim", xlim, "xlimmode", "auto");
     else
       xlim = axis_obj.xlim;
     endif
     if (strcmpi (axis_obj.xdir, "reverse"))
       xdir = "reverse";
     else
       xdir = "noreverse";
     endif
     fprintf (plot_stream, "set %srange [%.15e:%.15e] %s;\n", xaxisloc, xlim, xdir);
 
     if (yautoscale && have_data)
       ylim = get_axis_limits (ymin, ymax, yminp, ylogscale);
+      if (isempty (ylim))
+	return;
+      endif
       set (h, "ylim", ylim, "ylimmode", "auto");
     else
       ylim = axis_obj.ylim;
     endif
     if (strcmpi (axis_obj.ydir, "reverse"))
       ydir = "reverse";
     else
       ydir = "noreverse";
     endif
     fprintf (plot_stream, "set %srange [%.15e:%.15e] %s;\n", yaxisloc, ylim, ydir);
 
     if (nd == 3)
       if (zautoscale && have_data)
 	zlim = get_axis_limits (zmin, zmax, zminp, zlogscale);
+	if (isempty (zlim))
+	  return;
+	endif
 	set (h, "zlim", zlim, "zlimmode", "auto");
       else
 	zlim = axis_obj.zlim;
       endif
       if (strcmpi (axis_obj.zdir, "reverse"))
 	zdir = "reverse";
       else
 	zdir = "noreverse";
@@ -870,25 +879,24 @@ endfunction
 
 ## Attempt to make "nice" limits from the actual max and min of the
 ## data.  For log plots, we will also use the smallest strictly positive
 ## value.
 
 function lim = get_axis_limits (min_val, max_val, min_pos, logscale)
 
   if (logscale)
-    if (isinf (min_pos))
+    if (isinf (min_pos) || isempty (min_pos))
+      lim = [];
       warning ("axis: logscale with no positive values to plot");
+      return;
     endif
     if (min_val <= 0)
+      warning ("axis: omitting nonpositive data in log plot");
       min_val = min_pos;
-      if (max_val <= 0)
-	max_val = min_pos;
-      endif
-      warning ("axis: omitting nonpositive data in log plot");
     endif
     ## FIXME -- maybe this test should also be relative?
     if (abs (min_val - max_val) < sqrt (eps))
       min_val *= 0.9;
       max_val *= 1.1;
     endif
     min_val = 10 ^ floor (log10 (min_val));
     max_val = 10 ^ ceil (log10 (max_val));
