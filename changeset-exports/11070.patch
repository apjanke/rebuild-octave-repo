# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1285922191 14400
#      Fri Oct 01 04:36:31 2010 -0400
# Node ID 686d5bd2213204ebc15a8716f816bac453965d2a
# Parent  e40e19761d0680d39cd1877d14a104dd4252a842
ov-fcn-inline.cc: use octve_scalar_map instead of Octave_map

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2010-10-01  John W. Eaton  <jwe@octave.org>
+
+	* ov-fcn-inline.cc (octave_fcn_inline::map_value):  Use
+	octave_scalar_map and octave_map instead of Octave_map.
+
 2010-10-01  John W. Eaton  <jwe@octave.org>
 
 	* variables.cc (symbol_info_list::map_value): Use
 	octave_scalar_map and octave_map instead of Octave_map.
 
 2010-09-30  Jaroslav Hajek  <highegg@gmail.com>
 
 	* oct-map.h (octave_fields::nil_rep): Make a static function.
diff --git a/src/ov-fcn-inline.cc b/src/ov-fcn-inline.cc
--- a/src/ov-fcn-inline.cc
+++ b/src/ov-fcn-inline.cc
@@ -115,27 +115,33 @@ octave_fcn_inline::octave_fcn_inline (co
     error ("inline: unable to define function");
 }
 
 // This function is supplied to allow a Matlab style class structure
 // to be returned..
 octave_map
 octave_fcn_inline::map_value (void) const
 {
-  Octave_map m;
+  octave_scalar_map m;
+
+  m.assign ("version", 1.0);
+  m.assign ("isEmpty", 0.0);
+  m.assign ("expr", fcn_text ());
+
   string_vector args = fcn_arg_names ();
-  m.assign ("version", octave_value (1.0));
-  m.assign ("isEmpty", octave_value (0.0));
-  m.assign ("expr", octave_value (fcn_text ()));
-  m.assign ("numArgs", octave_value (args.length ()));
-  m.assign ("args", octave_value (args));
+
+  m.assign ("numArgs", args.length ());
+  m.assign ("args", args);
+
   std::ostringstream buf;
+
   for (int i = 0; i < args.length (); i++)
     buf << args(i) << " = INLINE_INPUTS_{" << i + 1 << "}; ";
-  m.assign ("inputExpr", octave_value (buf.str ()));
+
+  m.assign ("inputExpr", buf.str ());
 
   return m;
 }
 
 bool
 octave_fcn_inline::save_ascii (std::ostream& os)
 {
   os << "# nargs: " <<  ifargs.length () << "\n";
