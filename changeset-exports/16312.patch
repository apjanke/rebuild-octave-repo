# HG changeset patch
# User Rik <rik@octave.org>
# Date 1363368066 25200
#      Fri Mar 15 10:21:06 2013 -0700
# Node ID d81ef5e64cf1b061663a079dd022cdfc4ad5ce0b
# Parent  9c4ac8f25a8c542cc45b5866483ee9d3a222ffe6
Accept only case-sensitive keywords 'default', 'factory', 'remove' for graphics properties.
For Matlab compatibility, change escaped versions of keywords ('\keyword') to 'keyword'.

* libinterp/interpfcn/graphics.cc(set, set_value_or_default): Switch from
caseless_str to std::string so that compare() is case sensitive.  Look for
escaped keyword ('\default', '\factory') and replace with bare keyword.

diff --git a/libinterp/interpfcn/graphics.cc b/libinterp/interpfcn/graphics.cc
--- a/libinterp/interpfcn/graphics.cc
+++ b/libinterp/interpfcn/graphics.cc
@@ -1784,19 +1784,19 @@ property_list::set (const caseless_str& 
           else if (pfx == "uipushtool")
             has_property = uipushtool::properties::has_core_property (pname);
 
           if (has_property)
             {
               bool remove = false;
               if (val.is_string ())
                 {
-                  caseless_str tval = val.string_value ();
-
-                  remove = tval.compare ("remove");
+                  std::string tval = val.string_value ();
+
+                  remove = (tval.compare ("remove") == 0);
                 }
 
               pval_map_type& pval_map = plist_map[pfx];
 
               if (remove)
                 {
                   pval_map_iterator p = pval_map.find (pname);
 
@@ -2100,40 +2100,48 @@ graphics_object::set (const octave_map& 
 // Set a property to a value or to its (factory) default value.
 
 void
 graphics_object::set_value_or_default (const caseless_str& name,
                                        const octave_value& val)
 {
   if (val.is_string ())
     {
-      caseless_str tval = val.string_value ();
+      std::string tval = val.string_value ();
 
       octave_value default_val;
 
-      if (tval.compare ("default"))
+      if (tval.compare ("default") == 0)
         {
           default_val = get_default (name);
 
           if (error_state)
             return;
 
           rep->set (name, default_val);
         }
-      else if (tval.compare ("factory"))
+      else if (tval.compare ("factory") == 0)
         {
           default_val = get_factory_default (name);
 
           if (error_state)
             return;
 
           rep->set (name, default_val);
         }
       else
-        rep->set (name, val);
+        {
+          // Matlab specifically uses "\default" to escape string setting 
+          if (tval.compare ("\\default") == 0)
+            rep->set (name, "default");
+          else if (tval.compare ("\\factory") == 0)
+            rep->set (name, "factory");
+          else
+            rep->set (name, val);
+        }
     }
   else
     rep->set (name, val);
 }
 
 /*
 ## test setting of default values
 %!test
