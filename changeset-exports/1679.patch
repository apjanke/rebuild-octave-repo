# HG changeset patch
# User jwe
# Date 820294354 0
#      Sat Dec 30 03:32:34 1995 +0000
# Node ID 7dbdf23e1d18c6eda1951676bb21d7f50b9275da
# Parent  1ef83ee3481504d62099fc5380afc979093b095c
[project @ 1995-12-30 03:32:34 by jwe]

diff --git a/Makeconf.in b/Makeconf.in
--- a/Makeconf.in
+++ b/Makeconf.in
@@ -22,23 +22,25 @@ AR = @AR@
 ARFLAGS = @ARFLAGS@ 
 
 RANLIB = @RANLIB@
 
 RUNTEST = @RUNTEST@
 
 DEFAULT_PAGER = @DEFAULT_PAGER@
 
-WITH_DL = @use_dl@
-WITH_DLD = @use_dld@
-WITH_SHL = @use_shl@
+WITH_DL = @WITH_DL@
+WITH_SHL = @WITH_SHL@
+
+WITH_DYNAMIC_LINKING = @WITH_DYNAMIC_LINKING@
 
-OCTAVE_LITE = @lite_kernel@
+OCTAVE_LITE = @OCTAVE_LITE@
 
-SHARED_LIBS = @shared_libs@
+SHARED_LIBS = @SHARED_LIBS@
+SHLEXT = @SHLEXT@
 
 # Fortran to C translator and associated flags.
 
 F2C = @F2C@
 F2CFLAGS = @F2CFLAGS@
 
 # Fortran compiler flags.
 
@@ -89,16 +91,18 @@ BUG_CXXFLAGS = $(DEFS) $(HOST_CXXFLAGS) 
 	$(GCC_IEEE_FP_FLAG) $(CXXFLAGS)
 
 CPPFLAGS = @CPPFLAGS@
 
 LDFLAGS = @LDFLAGS@
 LD_STATIC_FLAG = @LD_STATIC_FLAG@
 ALL_LDFLAGS = $(LIBFLAGS) $(GCC_IEEE_FP_FLAG) $(LD_STATIC_FLAG) $(LDFLAGS)
 
+RLD_FLAG = @RLD_FLAG@
+
 FLIBS = @FLIBS@
 FLIB_LIST = @FLIB_LIST@
 FLIB_PATH = @FLIB_PATH@
 
 CXXLIBS = @CXXLIBS@
 CXXLIB_LIST = @CXXLIB_LIST@
 CXXLIB_PATH = @CXXLIB_PATH@
 
@@ -195,37 +199,39 @@ imagedir = @imagedir@
 imagepath = @imagepath@
 
 # The type of computer we are running on.
 target_host_type = @target_host_type@
 
 # The following pattern rules and the substitution functions require
 # GNU make.  If you don't have it, get it!
 
-# Rules for making C source from Fortran source (if necessary).
+# Rules for making object files from Fortran source.
 #
 # If we are using f2c there will be a command for the `%.c : %.f'
 # pattern and no command for the `%.o : %.f' pattern, so that make
 # will not invoke the fortran compiler by mistake.
 #
 # If we are not using f2c, it should be ok to have an empty rule for
 # the pattern `%.c : %.f', but we don't want to replace make's default
 # rule for making object from Fortran source files, so there should be
 # no pattern or command for that.
 
-@fortran_rules_frag@
+@f77_rules_frag@
 
 # How to make .o files:
 
 .c.o:
-	test -z "$(CPICFLAG)" -a -f pic || $(CC) -c $(CPPFLAGS) $(CPICFLAG) $(ALL_CFLAGS) $< -o pic/$@ \
+	[ -z "$(CPICFLAG)" ] ||\
+	  $(CC) -c $(CPPFLAGS) $(CPICFLAG) $(ALL_CFLAGS) $< -o pic/$@
 	$(CC) -c $(CPPFLAGS) $(ALL_CFLAGS) $<
 
 .cc.o:
-	test -z "$(CXXPICFLAG)" -a -f pic || $(CXX) -c $(CPPFLAGS) $(CXXPICFLAG) $(ALL_CXXFLAGS) $< -o pic/$@ \
+	[ -z "$(CXXPICFLAG)" ] ||\
+	  $(CXX) -c $(CPPFLAGS) $(CXXPICFLAG) $(ALL_CXXFLAGS) $< -o pic/$@
 	$(CXX) -c $(CPPFLAGS) $(ALL_CXXFLAGS) $<
 
 # Here is a rule for generating dependencies for .cc files:
 
 %.d: %.cc
 	@echo making $@ from $<
 	@rm -f $@
 	@-if test "$(srcdir)" = "." ; then \
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -15,17 +15,17 @@ dnl Copyright (C) 1992, 1993, 1994, 1995
 ### ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 ### FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ### for more details.
 ### 
 ### You should have received a copy of the GNU General Public License
 ### along with Octave; see the file COPYING.  If not, write to the Free
 ### Software Foundation, 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-AC_REVISION($Revision: 1.145 $)
+AC_REVISION($Revision: 1.146 $)
 AC_PREREQ(2.0)
 AC_INIT(src/octave.cc)
 AC_CONFIG_HEADER(config.h)
 
 AC_DEFINE(OCTAVE_SOURCE, 1)
 
 AC_CANONICAL_HOST
 if test -z "$host"; then
@@ -95,20 +95,18 @@ AC_SUBST(octfiledir)
 AC_SUBST(localoctfiledir)
 AC_SUBST(localoctfilepath)
 AC_SUBST(fcnfilepath)
 AC_SUBST(imagedir)
 AC_SUBST(imagepath)
 
 ### Path separator.
 
-SEPCHAR=":"
-AC_MSG_RESULT([defining SEPCHAR to be $SEPCHAR])
-AC_DEFINE(SEPCHAR, [']$SEPCHAR['])
-AC_DEFINE(SEPCHAR_STR, ["]$SEPCHAR["])
+AC_DEFINE(SEPCHAR, [':'])
+AC_DEFINE(SEPCHAR_STR, [":"])
 
 ### Allow the user to force us to use f2c.
 
 AC_ARG_WITH(f2c,
   [  --with-f2c              use f2c even if Fortran compiler is available],
   [if test $withval = no; then use_f2c=false; else use_f2c=true; fi],
   use_f2c=false)
 
@@ -163,17 +161,17 @@ fi
 AC_SUBST(LIBPLPLOT)
 AC_SUBST(PLPLOT_DIR)
 
 ### Allow the user disable support for command line editing using GNU
 ### readline.
 
 READLINE_DIR=readline
 USE_READLINE=true
-LIBREADLINE=../readline/libreadline.a
+LIBREADLINE=-lreadline
 AC_ARG_ENABLE(readline,
   [  --enable-readline       use readline library (default is yes)],
   [if test "$enableval" = no; then
      USE_READLINE=false;
      LIBREADLINE="";
      READLINE_DIR="";
    fi], [])
 if $USE_READLINE; then
@@ -272,126 +270,121 @@ AC_SUBST(GCC_IEEE_FP_FLAG)
 
 ### Use -static if compiling on Alpha OSF/1 1.3 systems.
 
 case "$canonical_host_type" in
   alpha-dec-osf1.3)
     LD_STATIC_FLAG=-static
   ;;
 esac
+if test -n "$LD_STATIC_FLAG"; then
+  AC_MSG_RESULT([defining LD_STATIC_FLAG to be $LD_STATIC_FLAG])
+fi
+AC_SUBST(LD_STATIC_FLAG)
 
 ### Handle dynamic linking and shared library options.
 
-### Allow the user to experiment with dynamic linking using GNU dld.
-
-DLD_DIR=
-LIBDLD=
-LIBOCTDLD='liboctdld.a'
-LD_STATIC_FLAG=
-AC_ARG_ENABLE(dld,
-  [  --enable-dld            use DLD for dynamic linking (not all systems)],
-  [if test $enableval = no; then use_dld=false; else use_dld=true; fi],
-  use_dld=false)
-if $use_dld; then
-  DLD_DIR=dld
-  LIBDLD='../dld/libdld.a'
-  LD_STATIC_FLAG=-static
-  AC_DEFINE(WITH_DLD, 1)
-fi
-AC_SUBST(use_dld)
-
 ### Allow the user to experiment with dynamic linking using dlopen/dlsym.
 
 AC_ARG_ENABLE(dl,
   [  --enable-dl             use dlopen/dlsym for dynamic linking (not all systems)],
-  [if test $enableval = no; then use_dl=false; else use_dl=true; fi],
-  use_dl=false)
-AC_SUBST(use_dl)
+  [if test $enableval = no; then WITH_DL=false; else WITH_DL=true; fi],
+  WITH_DL=false)
+AC_SUBST(WITH_DL)
 
 ### Allow the user to experiment with dynamic linking using
 ### shl_load/shl_findsym (HP/UX only?).
 
 AC_ARG_ENABLE(shl,
   [  --enable-shl            use shl_load/shl_findsym for dynamic linking (HP only?)],
-  [if test $enableval = no; then use_shl=false; else use_shl=true; fi],
-  use_shl=false)
-AC_SUBST(use_shl)
+  [if test $enableval = no; then WITH_SHL=false; else WITH_SHL=true; fi],
+  WITH_SHL=false)
+AC_SUBST(WITH_SHL)
+
+if $WITH_DL || $WITH_SHL; then
+  AC_DEFINE(WITH_DYNAMIC_LINKING, 1)
+  WITH_DYNAMIC_LINKING=true
+else
+  WITH_DYNAMIC_LINKING=false
+fi
+AC_SUBST(WITH_DYNAMIC_LINKING)
 
 ### Enable creation of shared libraries.  Currently only works with
 ### gcc on some systems.
 
 AC_ARG_ENABLE(shared,
   [  --shared                create shared libraries (not all systems)],
-  [if test $enableval = no; then shared_libs=false; else shared_libs=true; fi],
-  shared_libs=false)
-AC_SUBST(shared_libs)
+  [if test $enableval = no; then SHARED_LIBS=false; else SHARED_LIBS=true; fi],
+  SHARED_LIBS=false)
+AC_SUBST(SHARED_LIBS)
 
-if $shared_libs; then
+if $SHARED_LIBS; then
   CPICFLAG=-fPIC
   CXXPICFLAG=-fPIC
   FPICFLAG=-fPIC
-  case "$cannonical_host_type" in
-    alpha-dec-osf* | rs6000-ibm-aix*)
+  SHLEXT=so
+  RLD_FLAG='-rpath $(libdir)'
+  case "$canonical_host_type" in
+    alpha-dec-osf*)
+      CPICFLAG=
+      CXXPICFLAG=
+      FPICFLAG=
+    ;;
+    rs6000-ibm-aix*)
       CPICFLAG=
       CXXPICFLAG=
       FPICFLAG=
     ;;
     hppa*-hp-hpux*)
       FPICFLAG=+Z
+      SHLEXT=sl
+      RLD_FLAG='-Xlinker +b -Xlinker $(libdir)'
     ;;
     *-sgi-*)
       FPICFLAG=-KPIC
     ;;
-    sparc-sun-sunos*)
+    sparc-sun-sunos4*)
       FPICFLAG=-PIC
+      RLD_FLAG='-L $(libdir)'
+    ;;
+    sparc-sun-sunos5*)
+      FPICFLAG=-PIC
+      RLD_FLAG='-Xlinker -R -Xlinker $(libdir)'
     ;;
   esac
 else
   FPICFLAG=
   CPICFLAG=
   CXXPICFLAG=
+  SHLEXT=
+  RLD_FLAG=
 fi
 AC_MSG_RESULT([defining FPICFLAG to be $FPICFLAG])
 AC_MSG_RESULT([defining CPICFLAG to be $CPICFLAG])
 AC_MSG_RESULT([defining CXXPICFLAG to be $CXXPICFLAG])
+AC_MSG_RESULT([defining SHLEXT to be $SHLEXT])
 AC_SUBST(FPICFLAG)
 AC_SUBST(CPICFLAG)
 AC_SUBST(CXXPICFLAG)
+AC_SUBST(SHLEXT)
+AC_SUBST(RLD_FLAG)
 
 ### Allow compilation of smaller kernel.  This only works if some form
 ### of dynamic linking is also supported and used.
 
 AC_ARG_ENABLE(lite-kernel,
   [  --enable-lite-kernel    compile smaller kernel (requires dynamic linking)],
-  [if test $enableval = no; then lite_kernel=false; else lite_kernel=true; fi],
-  lite_kernel=false)
-if $lite_kernel; then
-  LIBOCTDLD=
+  [if test $enableval = no; then OCTAVE_LITE=false; else OCTAVE_LITE=true; fi],
+  OCTAVE_LITE=false)
+if $OCTAVE_LITE; then
   AC_DEFINE(OCTAVE_LITE, 1)
 fi
-AC_SUBST(lite_kernel)
+AC_SUBST(OCTAVE_LITE)
 
-if test -n "$DLD_DIR"; then
-  AC_MSG_RESULT([defining DLD_DIR to be $DLD_DIR])
-fi
-if test -n "$LIBDLD"; then
-  AC_MSG_RESULT([defining LIBDLD to be $LIBDLD])
-fi
-if test -n "$LIBOCTDLD"; then
-  AC_MSG_RESULT([defining LIBOCTDLD to be $LIBOCTDLD])
-fi
-if test -n "$LD_STATIC_FLAG"; then
-  AC_MSG_RESULT([defining LD_STATIC_FLAG to be $LD_STATIC_FLAG])
-fi
-AC_SUBST(DLD_DIR)
-AC_SUBST(LIBDLD)
-AC_SUBST(LIBOCTDLD)
-AC_SUBST(LD_STATIC_FLAG)
-
-### Special checks for odd OS specific things.
+### special checks for odd OS specific things.
 
 AC_ISC_POSIX
 AC_MINIX
 AC_AIX
 AC_CHECK_LIB(sun, getpwnam)
 
 ### How big are ints and how are they oriented?  These could probably
 ### be eliminated in favor of run-time checks.
@@ -492,65 +485,67 @@ else
   else
     AC_CHECK_PROG(F2C, f2c, f2c, [])
     if test -n "$F2C"; then
       have_f2c=true
     fi
   fi
 fi
 
-fortran_rules_frag=Makerules.f77
+f77_rules_frag=Makerules.f77
 if $have_fortran_compiler; then
-  cat << \EOF > $fortran_rules_frag
+changequote(,)dnl
+  cat << \EOF > $f77_rules_frag
 
 .c.f:
 
 .f.o:
-	if [ -z "$(FPICFLAG)" ] && [ -f pic ]; then \
-	  $(FC) -c $(FPICFLAG) $(ALL_FFLAGS) $< -o pic/$@; \
-	else true; fi
-	$(FC) -c $(ALL_FFLAGS) $<'
+	[ -z "$(FPICFLAG)" ] || \
+	  $(FC) -c $(FPICFLAG) $(ALL_FFLAGS) $< -o pic/$@
+	$(FC) -c $(ALL_FFLAGS) $<
 
 EOF
+changequote([,])dnl
 elif $have_f2c; then
   AC_DEFINE(F77_APPEND_UNDERSCORE, 1)
   AC_MSG_RESULT([defining F77_APPEND_UNDERSCORE to be 1])
   AC_CHECK_LIB(f2c, main, FLIBS=-lf2c, [])
   if test -z "$FLIBS"; then
     AC_CHECK_LIB(F77, main, FLIBS=-lF77, [])
     if test -n "$FLIBS"; then
       AC_CHECK_LIB(I77, main, FLIBS="$FLIBS -lI77", [])
     fi
   fi
   if test -z "$FLIBS"; then
     AC_MSG_WARN([I found f2c but not libf2c.a, or libF77.a and libI77.a])
   fi
-  cat << \EOF > $fortran_rules_frag
+  f77_rules_frag=Makerules.f77
+  cat << \EOF > $f77_rules_frag
 
 .c.f:
 	cat $< | $(F2C) $(F2CFLAGS) > $(@F)
 
-%.o : %.f
+.o.f
 
 EOF
 else
   AC_MSG_WARN([in order to build octave, you must have a compatible])
   AC_MSG_WARN([Fortran compiler or f2c installed and in your path.])
   AC_MSG_ERROR([See the file INSTALL for more information.])
 fi
 
 FC=$F77
 AC_SUBST(FC)
 AC_SUBST(F77)
 AC_SUBST(FFLAGS)
 AC_SUBST(FUGLY)
 AC_SUBST(FLIBS)
 AC_SUBST(F2C)
 AC_SUBST(F2CFLAGS)
-AC_SUBST_FILE(fortran_rules_frag)
+AC_SUBST_FILE(f77_rules_frag)
 
 ### Extract libraries and directories from FLIBS and CXXLIBS.
 ###
 ### Leave only libraries, with -lfoo converted to libfoo.a:
 
 changequote(,)dnl
 FLIB_LIST=`echo " $FLIBS " | sed -e 's/ -Xlinker *[^ ]*/ /g' \
 	-e 's/ -[LR] *[^ ]*/ /g' \
@@ -651,36 +646,36 @@ AC_CHECK_FUNCS(sigaction sigprocmask sig
 AC_CHECK_LIB(dl, dlopen)
 AC_CHECK_FUNCS(dlopen dlsym dlerror dlclose)
 
 if test "$ac_cv_func_dlopen" = yes \
     && test "$ac_cv_func_dlopen" = yes \
     && test "$ac_cv_func_dlsym" = yes \
     && test "$ac_cv_func_dlerror" = yes \
     && test "$ac_cv_func_dlclose" = yes; then
-  use_dl=true
-elif $use_dl; then
+  WITH_DL=true
+elif $WITH_DL; then
   AC_MSG_ERROR([--enable-dl specified, but required functions are missing!])
 fi
 
-if $use_dl; then
+if $WITH_DL; then
   AC_DEFINE(WITH_DL, 1)
 fi
 
 AC_CHECK_LIB(dld, shl_load)
 AC_CHECK_FUNCS(shl_load shl_findsym)
 
 if test "$ac_cv_func_shl_load" = yes \
     && test "$ac_cv_func_shl_findsym" = yes; then
-  use_shl=true
-elif $use_shl; then
+  WITH_SHL=true
+elif $WITH_SHL; then
   AC_MSG_ERROR([--enable-shl specified, but required functions are missing!])
 fi
 
-if $use_shl; then
+if $WITH_SHL; then
   AC_DEFINE(WITH_SHL, 1)
 fi
 
 ### There is more than one possible prototype for gettimeofday.  See
 ### which one (if any) appears in sys/time.h.
 
 AC_CHECK_FUNC(gettimeofday,
   AC_TRY_COMPILE([#include <sys/time.h>],
@@ -952,14 +947,13 @@ Octave is now configured for $canonical_
   C++ compiler:         $CXX $CXX_EXTRAS $CXXFLAGS
   Fortran compiler:     $FORT
   Fortran libraries:    $FLIBS
   Use GNU readline:     $USE_READLINE
   Use GNU info reader:  $USE_GNU_INFO
   Default pager:        $DEFAULT_PAGER
   gnuplot:              $GNUPLOT_BINARY
 
-  Build shared libraries:                  $shared_libs
-  Minimal kernel option:                   $lite_kernel
-  Dynamic Linking (dld):                   $use_dld
-  Dynamic Linking (dlopen/dlsym):          $use_dl
-  Dynamic Linking (shl_load/shl_findsym):  $use_shl
+  Build shared libraries:                  $SHARED_LIBS
+  Minimal kernel option:                   $OCTAVE_LITE
+  Dynamic Linking (dlopen/dlsym):          $WITH_DL
+  Dynamic Linking (shl_load/shl_findsym):  $WITH_SHL
 ])
