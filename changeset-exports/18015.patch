# HG changeset patch
# User Rik <rik@octave.org>
# Date 1385447135 28800
#      Mon Nov 25 22:25:35 2013 -0800
# Node ID fe59ef0084a6077c81ece1f4ee996428afbd080f
# Parent  6df05f2fd354261ef592a9cc91329640c70cada2
# Parent  501cb6a90f0ff306db7023e25c0495c4aa64001f
maint: Periodic merge of stable to default.

diff --git a/doc/interpreter/images.awk b/doc/interpreter/images.awk
--- a/doc/interpreter/images.awk
+++ b/doc/interpreter/images.awk
@@ -22,12 +22,12 @@ BEGIN {
       printf (" %s.%s", $j, ext);
     printf ("\n");
 
     printf ("IMAGES_%s += $(%s_%s)\n", uext, ubasename, uext);
 
     for (j = 2; j <= NF; j++) {
       printf ("%s.%s: %s\n", $j, ext, script);
       printf ("\t$(top_builddir)/run-octave -f -q -H -p $(srcdir) --eval \"%s ('%s', '%s');\"\n",
-	      basename, $j, ext);
+              basename, $j, ext);
     }
   }
 }
diff --git a/libinterp/dldfcn/config-module.awk b/libinterp/dldfcn/config-module.awk
--- a/libinterp/dldfcn/config-module.awk
+++ b/libinterp/dldfcn/config-module.awk
@@ -56,17 +56,17 @@ BEGIN {
   print "";
   print "endif";
 
   for (i = 1; i <= nfiles; i++) {
     basename = files[i];
     sub (/\.cc$/, "", basename);
     print "";
     printf ("dldfcn_%s_la_SOURCES = dldfcn/%s\n",
-	    basename, files[i]);
+            basename, files[i]);
     if (cppflags[i])
       {
         printf ("dldfcn/%s.df: CPPFLAGS += %s\n",
                 basename, cppflags[i]);
         printf ("dldfcn_%s_la_CPPFLAGS = %s $(AM_CPPFLAGS)\n",
                 basename, cppflags[i]);
       }
     printf ("dldfcn_%s_la_LDFLAGS = -avoid-version -module $(NO_UNDEFINED_LDFLAG) %s $(OCT_LINK_OPTS)\n",
diff --git a/libinterp/octave-value/module.mk b/libinterp/octave-value/module.mk
--- a/libinterp/octave-value/module.mk
+++ b/libinterp/octave-value/module.mk
@@ -149,12 +149,12 @@ octave_value_liboctave_value_la_SOURCES 
 
 ## FIXME -- maybe it would be better to limit the JAVA flags to
 ## the compile commands for ov-java.cc?  Does JAVA_LIBS need to be
 ## added to LIBOCTINTERP_LINK_DEPS (see libinterp/link-deps.mk)?
 ## Should we have a separate set of JAVA_LDFLAGS?
 
 octave_value_liboctave_value_la_CPPFLAGS = \
   $(liboctinterp_la_CPPFLAGS) \
-	$(HDF5_CPPFLAGS) \
+  $(HDF5_CPPFLAGS) \
   $(JAVA_CPPFLAGS)
 
 octave_value_liboctave_value_la_LIBADD = $(JAVA_LIBS)
diff --git a/m4/module.mk b/m4/module.mk
--- a/m4/module.mk
+++ b/m4/module.mk
@@ -1,14 +1,14 @@
 EXTRA_DIST += \
   m4/module.mk \
   m4/ax_blas.m4 \
   m4/ax_blas_f77_func.m4 \
   m4/ax_compare_version.m4 \
-  m4/ax_lapack.m4	\
+  m4/ax_lapack.m4 \
   m4/ax_pthread.m4 \
   m4/gnulib-cache.m4 \
   m4/libtool.m4 \
   m4/ltoptions.m4 \
   m4/ltsugar.m4 \
   m4/ltversion.m4 \
   m4/lt~obsolete.m4 \
   m4/pkg.m4
diff --git a/scripts/java/org/octave/Matrix.java b/scripts/java/org/octave/Matrix.java
--- a/scripts/java/org/octave/Matrix.java
+++ b/scripts/java/org/octave/Matrix.java
@@ -42,17 +42,17 @@ public class Matrix
   }
 
   public Matrix (double[][] data)
   {
     int m = data.length;
     int n = (m > 0 ? data[0].length : 0);
     int idx = 0;
     double[] buf = new double[m*n];
-		
+
     for (int j = 0; j < n; j++)
       for (int i = 0; i < m; i++)
         buf[idx++] = data[i][j];
     this.data = DoubleBuffer.wrap(buf);
     this.dims = new int[] {m, n};
     this.cache = data;
   }
 
@@ -252,17 +252,17 @@ public class Matrix
         cache = m;
         return m;
       }
     else
       System.out.println ("Warning: invalid conversion to double matrix");
 
     return null;
   }
-	
+
   public double[][][] asDoubleMatrix3 ()
   {
     if (cache != null)
       {
         try { return (double[][][])cache; }
         catch (ClassCastException e) { }
       }
 
diff --git a/scripts/miscellaneous/edit.m b/scripts/miscellaneous/edit.m
--- a/scripts/miscellaneous/edit.m
+++ b/scripts/miscellaneous/edit.m
@@ -155,17 +155,17 @@ function ret = edit (varargin)
     ## User has supplied two arguments, these could be two file names,
     ## or a combination of editor state name and new value for that state,
     ## so first check for the various states
     statevar = varargin{1};
     stateval = varargin{2};
     switch (toupper (statevar))
       case "EDITOR"
         error ("Octave:deprecated-function",
-               "The EDITOR option of edit has been removed. Use EDITOR() directly.")
+               "The EDITOR option of edit has been removed.  Use EDITOR() directly.")
         return;
       case "HOME"
         if (! isempty (stateval) && stateval(1) == "~")
           stateval = [ default_home, stateval(2:end) ];
         endif
         FUNCTION.HOME = stateval;
         return;
       case "AUTHOR"
diff --git a/scripts/miscellaneous/module.mk b/scripts/miscellaneous/module.mk
--- a/scripts/miscellaneous/module.mk
+++ b/scripts/miscellaneous/module.mk
@@ -19,17 +19,17 @@ miscellaneous_FCN_FILES = \
   miscellaneous/debug.m \
   miscellaneous/delete.m \
   miscellaneous/desktop.m \
   miscellaneous/dir.m \
   miscellaneous/dos.m \
   miscellaneous/dump_prefs.m \
   miscellaneous/edit.m \
   miscellaneous/error_ids.m \
-	miscellaneous/fact.m \
+  miscellaneous/fact.m \
   miscellaneous/fileattrib.m \
   miscellaneous/fileparts.m \
   miscellaneous/fullfile.m \
   miscellaneous/genvarname.m \
   miscellaneous/getappdata.m \
   miscellaneous/getfield.m \
   miscellaneous/gunzip.m \
   miscellaneous/gzip.m \
diff --git a/scripts/sparse/module.mk b/scripts/sparse/module.mk
--- a/scripts/sparse/module.mk
+++ b/scripts/sparse/module.mk
@@ -1,12 +1,12 @@
 FCN_FILE_DIRS += sparse
 
 sparse_PRIVATE_FCN_FILES = \
-	sparse/private/__sprand_impl__.m
+  sparse/private/__sprand_impl__.m
 
 sparse_FCN_FILES = \
   sparse/bicg.m \
   sparse/bicgstab.m \
   sparse/cgs.m \
   sparse/colperm.m \
   sparse/eigs.m \
   sparse/etreeplot.m \
@@ -24,15 +24,15 @@ sparse_FCN_FILES = \
   sparse/sprand.m \
   sparse/sprandn.m \
   sparse/sprandsym.m \
   sparse/spstats.m \
   sparse/spy.m \
   sparse/svds.m \
   sparse/treelayout.m \
   sparse/treeplot.m \
-	$(sparse_PRIVATE_FCN_FILES)
+  $(sparse_PRIVATE_FCN_FILES)
 
 FCN_FILES += $(sparse_FCN_FILES)
 
 PKG_ADD_FILES += sparse/PKG_ADD
 
 DIRSTAMP_FILES += sparse/$(octave_dirstamp)
diff --git a/scripts/startup/main-rcfile b/scripts/startup/main-rcfile
--- a/scripts/startup/main-rcfile
+++ b/scripts/startup/main-rcfile
@@ -2,18 +2,18 @@
 ##
 ## This file should contain any commands that should be executed each
 ## time Octave starts for every user at this site.
 
 ## Configure readline using the file inputrc in the Octave startup
 ## directory.
 
 readline_read_init_file (sprintf ("%s%s%s",
-				  octave_config_info ("startupfiledir"),
-				  filesep, "inputrc"));
+                                  octave_config_info ("startupfiledir"),
+                                  filesep, "inputrc"));
 
 if (strcmp (PAGER (), "less") && isempty (getenv ("LESS")))
   PAGER_FLAGS ('-e -X -P"-- less ?pB(%pB\\%):--. (f)orward, (b)ack, (q)uit$"');
 endif
 
 ## This appears here instead of in the pkg/PKG_ADD file so that --norc
 ## will also skip automatic loading of packages.
 
diff --git a/src/main.in.cc b/src/main.in.cc
--- a/src/main.in.cc
+++ b/src/main.in.cc
@@ -690,18 +690,17 @@ main (int argc, char **argv)
 
               retval = 1;
             }
 
           retval = octave_exec (file, new_argv);
         }
       else
         {
-          // Parent.  Forward signals to the child while waiting for it
-          // to exit.
+          // Parent.  Forward signals to child while waiting for it to exit.
 
           int status;
 
           while (true)
             {
               WAITPID (gui_pid, &status, 0);
 
               if (caught_signal > 0)
diff --git a/test/build-sparse-tests.sh b/test/build-sparse-tests.sh
--- a/test/build-sparse-tests.sh
+++ b/test/build-sparse-tests.sh
@@ -226,29 +226,29 @@ EOF
 }
 
 
 # =======================================================
 # Main function definition
 
 gen_function() {
     if $preset; then
-	cat >>$TESTS <<EOF
+        cat >>$TESTS <<EOF
 ##
 ## test_sparse
 ##
 ##    run preset sparse tests.  All should pass.
 function [passes, tests] = test_sparse
   disp ("writing test output to sptest.log");
   test ("sparse.tst", "normal", "sptest.log");
 endfunction
 
 EOF
     else
-	cat >>$TESTS <<EOF
+        cat >>$TESTS <<EOF
 ##
 ## test_sprandom
 ##
 ##  total_passes=0; total_tests=0;
 ##  for i=1:10
 ##     [passes,tests] = sprandomtest;
 ##    total_passes += passes;
 ##    total_tests += tests;
diff --git a/test/ctor-vs-method/@parent/parent.m b/test/ctor-vs-method/@parent/parent.m
--- a/test/ctor-vs-method/@parent/parent.m
+++ b/test/ctor-vs-method/@parent/parent.m
@@ -1,15 +1,15 @@
 function rot = parent (a)
   __trace__ ('begin parent/parent');
   if (nargin == 0)
     rot = class (struct (), 'parent');
   else
     switch class (a)
       case 'parent'
         %% copy constructor
-	rot = a;
+        rot = a;
       otherwise
-	error ('type mismatch in parent constructor')
+        error ('type mismatch in parent constructor')
     end
   end
   __trace__ ('end parent/parent');
 end
