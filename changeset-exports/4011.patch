# HG changeset patch
# User jwe
# Date 1028232488 0
#      Thu Aug 01 20:08:08 2002 +0000
# Node ID eb377885843df849c103ac9ee844a2fd31ffbcd2
# Parent  0a30852e0249d1f1befa553c3825cd607af6126d
[project @ 2002-08-01 20:08:08 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,16 @@
+2002-08-01  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* miscellaneous/popen2.m: Use F_SETFL and O_NONBLOCK, not
+	__F_SETFL__ and __O_NONBLOCK__.
+
+	* image/saveimage.m: Use OCTAVE_VERSION, not __OCTAVE_VERSION__.
+	* miscellaneous/bug_report.m: Likewise.
+
 2002-07-25  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* general/mod.m: Use isreal (x), not any (any (imag (x))).
 	* general/rem.m: Likewise.
 
 	* plot/loglogerr.m: Use varargin instead of old style varargs.
 	* plot/semilogxerr.m: Likewise.
 	* plot/semilogyerr.m: Likewise.
diff --git a/scripts/image/saveimage.m b/scripts/image/saveimage.m
--- a/scripts/image/saveimage.m
+++ b/scripts/image/saveimage.m
@@ -153,17 +153,17 @@ function saveimage (filename, img, img_f
 
     ## Would be nice to make this consistent with the line used by the
     ## load/save functions, but we need a good way to get username and
     ## hostname information.
 
     time_string = ctime (time ());
     time_string = time_string (1:length (time_string)-1);
     tagline = sprintf ("# Created by Octave %s, %s",
-		       __OCTAVE_VERSION__, time_string);
+		       OCTAVE_VERSION, time_string);
 
     if (grey && bw)
 
       if (map(1) != 0)
         map = [0; 1];
       else
         map = [1; 0];
       endif
diff --git a/scripts/miscellaneous/bug_report.m b/scripts/miscellaneous/bug_report.m
--- a/scripts/miscellaneous/bug_report.m
+++ b/scripts/miscellaneous/bug_report.m
@@ -45,17 +45,17 @@ function bug_report ()
     if (! isempty (prefs))
       fid = fopen (prefs, "w");
       if (fid > 0)
         dump_prefs (fid);
         fclose (fid);
       endif
     endif
 
-    cmd = strcat ("octave-bug-", __OCTAVE_VERSION__);
+    cmd = strcat ("octave-bug-", OCTAVE_VERSION);
 
     if (length (subject) > 0)
       cmd = sprintf ("%s -s \"%s\"", cmd, subject);
     endif
 
     if (! isempty (prefs))
       cmd = sprintf ("%s %s", cmd, prefs);
     endif
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,20 @@
+2002-08-01  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* ov-cell.cc (octave_cell::print_raw): Print empty dimensions too.
+	(octave_cell::print_name_tag): Don't print new line if cell is empty.
+
+	* octave.cc (intern_argv): Don't install __argv__.
+
+	* defun-int.h (UNDERSCORIFY): Delete.
+	(DEFCONST_INTERNAL): Don't install double underscore versions of
+	constants since they aren't really needed.
+	(DEFCONSTX_INTERNAL): Likewise.
+
 2002-07-31  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* symtab.cc (symbol_table::clear (void)): Clear all records.
 	(symbol_table::clear (const std::string&)): Delete second arg.
 	Clear any symbol that matches, regardless of type.
 
 	* symtab.h (symbol_table::variable_name_list): New function.
 	(symbol_table::global_variable_name_list): Likewise.
diff --git a/src/defun-int.h b/src/defun-int.h
--- a/src/defun-int.h
+++ b/src/defun-int.h
@@ -175,26 +175,21 @@ typedef bool (*octave_dld_fcn_installer)
   install_builtin_variable (name, octave_value (defn), protect, \
 			    (chg_fcn != 0), chg_fcn, doc)
 
 // How builtin variables are actually installed.
 
 #define INSTALL_CONST(name, sname, defn, protect, doc) \
   install_builtin_constant (name, octave_value (defn), protect, doc)
 
-#define UNDERSCORIFY(name) \
-  "__" name "__"
-
 #define DEFCONST_INTERNAL(name, defn, doc) \
-  INSTALL_CONST (#name, SBV_ ## name, defn, false, doc); \
-  INSTALL_CONST (UNDERSCORIFY (#name), XSBV_ ## name, defn, true, doc)
+  INSTALL_CONST (#name, SBV_ ## name, defn, false, doc);
 
 #define DEFCONSTX_INTERNAL(name, sname, defn, doc) \
-  INSTALL_CONST (name, sname, defn, false, doc); \
-  INSTALL_CONST (UNDERSCORIFY (name), X ## sname, defn, true, doc)
+  INSTALL_CONST (name, sname, defn, false, doc);
 
 // How mapper functions are actually installed.
 
 // XXX FIXME XXX -- Really want to avoid the following casts, since
 // (as always with casts) it may mask some real errors...
 
 #define DEFUN_MAPPER_INTERNAL(name, ch_map, d_b_map, c_b_map, d_d_map, \
 			      d_c_map, c_c_map, lo, hi, \
diff --git a/src/octave.cc b/src/octave.cc
--- a/src/octave.cc
+++ b/src/octave.cc
@@ -170,17 +170,16 @@ intern_argv (int argc, char **argv)
       int i = argc;
       while (--i > 0)
 	tmp(i-1) = octave_value (*(argv+i));
 
       octave_argv = Cell (tmp, argc-1, 1);
     }
 
   bind_builtin_constant ("argv", octave_argv, true, true);
-  bind_builtin_constant ("__argv__", octave_argv, true, true);
 }
 
 static void
 initialize_pathsearch (void)
 {
   // This may seem odd, but doing it this way means that we don't have
   // to modify the kpathsea library...
 
diff --git a/src/ov-cell.cc b/src/ov-cell.cc
--- a/src/ov-cell.cc
+++ b/src/ov-cell.cc
@@ -282,25 +282,40 @@ octave_cell::print_raw (std::ostream& os
 
       decrement_indent_level ();
 
       indent (os);
       os << "}";
       newline (os);
     }
   else
-    os << "{}";
+    {
+      os << "{}";
+      if (nr > 0 || nc > 0)
+	os << "(" << nr << "x" << nc << ")";
+      os << "\n";
+    }
 }
 
 bool
 octave_cell::print_name_tag (std::ostream& os, const std::string& name) const
 {
   indent (os);
-  os << name << " =";
-  newline (os);
+
+  int nr = rows ();
+  int nc = columns ();
+
+  if (nr > 0 && nc > 0)
+    {
+      os << name << " =";
+      newline (os);
+    }
+  else
+    os << name << " = ";
+
   return false;
 }
 
 DEFUN (iscell, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} iscell (@var{x})\n\
 Return true if @var{x} is a cell array object.  Otherwise, return\n\
 false.\n\
