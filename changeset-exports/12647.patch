# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1304561424 14400
#      Wed May 04 22:10:24 2011 -0400
# Branch stable
# Node ID e38fb19105636e281ea2e0125bc55e69f441d46b
# Parent  eaba9d671fb7e9f5dba15fe371b246e901157036
Allow sortrows to work on arrays with one row (bug #33197)

* ov-base-scalar.h (octave_base_scalar<T>::sort_rows_idx):
Return single index, not empty index array.
From Marco Caliari <marco.caliari@univr.it>.
* sortrows.m: New test.

diff --git a/scripts/general/sortrows.m b/scripts/general/sortrows.m
--- a/scripts/general/sortrows.m
+++ b/scripts/general/sortrows.m
@@ -97,8 +97,19 @@ endfunction
 %! c = [1, -2];
 %! [x, idx] = sortrows (m, c);
 %! [sx, sidx] = sortrows (sparse (m), c);
 %! assert (x, [1, 2; 1, 1; 2, 7; 3, 6]);
 %! assert (idx, [2; 1; 4; 3]);
 %! assert (issparse (sx));
 %! assert (x, full (sx));
 %! assert (idx, sidx);
+
+%!test
+%! m = [1, 0, 0, 4];
+%! c = 1;
+%! [x, idx] = sortrows (m, c);
+%! [sx, sidx] = sortrows (sparse (m), c);
+%! assert (x, m);
+%! assert (idx, 1);
+%! assert (issparse (sx));
+%! assert (x, full (sx));
+%! assert (idx, sidx);
diff --git a/src/ov-base-scalar.h b/src/ov-base-scalar.h
--- a/src/ov-base-scalar.h
+++ b/src/ov-base-scalar.h
@@ -104,17 +104,20 @@ public:
       sidx(0) = 0;
       return octave_value (scalar);
     }
 
   sortmode is_sorted (sortmode mode = UNSORTED) const
     { return mode ? mode : ASCENDING; }
 
   Array<octave_idx_type> sort_rows_idx (sortmode) const
-    { return Array<octave_idx_type> (dim_vector (1, 0)); }
+    {
+      return Array<octave_idx_type> (dim_vector (1, 1),
+                                     static_cast<octave_idx_type> (0));
+    }
 
   sortmode is_sorted_rows (sortmode mode = UNSORTED) const
     { return mode ? mode : ASCENDING; }
 
   MatrixType matrix_type (void) const { return MatrixType::Diagonal; }
   MatrixType matrix_type (const MatrixType&) const
     { return matrix_type (); }
 
