# HG changeset patch
# User Petr Mikulik <mikulik@physics.muni.cz>
# Date 1296375629 18000
#      Sun Jan 30 03:20:29 2011 -0500
# Node ID 17d7834df7b481cb59e921d0adb94faed212772a
# Parent  e3048d7fb131dbe0409b01e16b0d3e12cfc99271
__fltk_ginput__.m: return keypress info

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,14 @@
+2011-01-30  Petr Mikulik  <mikulik@physics.muni.cz>
+
+	* plot/__fltk_ginput__.m (ginput_aggregator): New arg, button.
+	Change all uses.
+	(ginput_keypressfcn): Save keypress info.
+
 2010-01-29  Rik  <octave@nomad.inbox5.com>
 
 	* plot/gnuplot_binary.in: Improve docstring
 
 2010-01-29  Rik  <octave@nomad.inbox5.com>
 
 	* general/accumarray.m: Add seealso reference to accumdim.
 
diff --git a/scripts/plot/__fltk_ginput__.m b/scripts/plot/__fltk_ginput__.m
--- a/scripts/plot/__fltk_ginput__.m
+++ b/scripts/plot/__fltk_ginput__.m
@@ -18,73 +18,90 @@
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {[@var{x}, @var{y}, @var{buttons}] =} __fltk_ginput__ (@var{f}, @var{n})
 ## Undocumented internal function.
 ## @end deftypefn
 
 ## This is ginput.m implementation for fltk.
 
+## FIXME -- Key presses cannot toggle menu items nor hotkey functionality
+## (grid, autoscale) during ginput!
+
 function [x, y, button] = __fltk_ginput__ (f, n = -1)
 
   if (isempty (get (f, "currentaxes")))
     error ("ginput: must have at least one axes");
   endif
 
   x = y = button = [];
-  ginput_aggregator (0, 0, 0);
+  ginput_aggregator (0, 0, 0, 0);
 
   unwind_protect
 
     orig_windowbuttondownfcn = get (f, "windowbuttondownfcn");
     set (f, "windowbuttondownfcn", @ginput_windowbuttondownfcn);
 
     orig_ginput_keypressfcn = get (f, "keypressfcn");
     set (f, "keypressfcn", @ginput_keypressfcn);
 
     while (true)
       __fltk_redraw__ ();
 
-      ## release CPU
+      ## Release CPU.
       sleep (0.01);
 
-      [x, y, n0] = ginput_aggregator (-1, 0, 0);
+      [x, y, n0, button] = ginput_aggregator (-1, 0, 0, 0);
       if (n0 == n || n0 < 0)
         break;
       endif
     endwhile
 
     ## FIXME -- got to get the buttons somehow
     button = ones (size (x));
   unwind_protect_cleanup
     set (f, "windowbuttondownfcn", orig_windowbuttondownfcn);
     set (f, "keypressfcn", orig_ginput_keypressfcn);
   end_unwind_protect
 
 endfunction
 
-function [x, y, n] = ginput_aggregator (mode , xn, yn)
-  persistent x y n;
+function [x, y, n, button] = ginput_aggregator (mode, xn, yn, btn)
+  persistent x y n button;
 
   if (mode == 0)
+    ## Initialize.
     x = [];
     y = [];
+    button = [];
     n = 0;
   elseif (mode == 1)
+    ## Accept mouse button or key press.
     x = [x; xn];
     y = [y; yn];
+    button = [button; btn];
     n += 1;
   elseif (mode == 2)
+    ## The end due to Enter.
     n = -1;
-  endif
+ endif
 endfunction
 
 function ginput_windowbuttondownfcn (src, data)
   point = get (get (src,"currentaxes"), "currentpoint");
-  ginput_aggregator (1, point(1,1), point(2,1));
+  ## FIXME -- How to get the actual mouse button pressed (1,2,3) into
+  ## "button"?
+  button = 1;
+  ginput_aggregator (1, point(1,1), point(2,1), button);
 endfunction
 
 function ginput_keypressfcn (src, evt)
-  if (evt.Key == 10)    # linefeed character
-    ginput_aggregator (2, 0, 0);
+  point = get (get (src, "currentaxes"), "currentpoint");
+  ## FIXME -- use evt.Key or evt.Character?
+  key = evt.Key;
+  if (key == 10)
+    ## Enter key.
+    ginput_aggregator (2, point(1,1), point(2,1), key);
+  else
+    ginput_aggregator (1, point(1,1), point(2,1), key);
   endif
 endfunction
 
