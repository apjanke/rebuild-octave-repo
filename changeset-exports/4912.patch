# HG changeset patch
# User jwe
# Date 1090529159 0
#      Thu Jul 22 20:45:59 2004 +0000
# Node ID 048db020498c6af23a28ae20df6663ece3a8f6f1
# Parent  14027e0bafa448f6c774e5272f104e9ee41c71a2
[project @ 2004-07-22 20:45:59 by jwe]

diff --git a/scripts/image/imshow.m b/scripts/image/imshow.m
--- a/scripts/image/imshow.m
+++ b/scripts/image/imshow.m
@@ -63,31 +63,31 @@ function imshow (varargin)
   if (mvars < 1 || mvars > 3)
     usage (usage_str);
   endif
   
   ## All except imshow (r, g, b)
 
   if (mvars != 3)
     I = varargin{1};
-    if iscomplex (I)
-	warning("imshow: displaying real part of complex image");
+    if (iscomplex (I))
+	warning ("imshow: displaying real part of complex image");
 	I = real (I);
     endif      
     if (max (I(:)) <= 1)
-      # image in [0-1]; scale to [0-255]
+      ## image in [0-1]; scale to [0-255]
       I = I * 255;
       M = gray (256);
     endif
   endif
 
   if (mvars == 1)
     ## imshow (x)
     ## Grayscale image [0-N] -- estimate gray levels.
-    N = 2^ceil (log2 (max(I(:))));
+    N = 2 ^ ceil (log2 (max (I(:))));
     if (N <= 65536)
       M = gray (N);
     else
       M = gray (256);
       I = I / max (I(:)) * 255;
     endif
   elseif (mvars == 2)
     ## imshow (x, map) or imshow (x, N)
@@ -96,19 +96,21 @@ function imshow (varargin)
       M = gray (M);
     endif
   elseif (mvars == 3)
     ## imshow (r, g, b)
     r = varargin{1};
     g = varargin{2};
     b = varargin{3};
     tmp = [r; g; b];
-    if iscomplex (tmp)
-	warning("imshow: displaying real part of complex rgb image");
-	r = real (r); g = real (g); b = real (b);
+    if (iscomplex (tmp))
+	warning ("imshow: displaying real part of complex rgb image");
+	r = real (r);
+	g = real (g);
+	b = real (b);
     endif    
     if (max (tmp(:)) > 1)
       ## Normalise to [0-1].
       r = r/255;
       g = g/255;
       b = b/255;
     endif
     [I, M] = rgb2ind (r, g, b);
diff --git a/scripts/plot/figure.m b/scripts/plot/figure.m
--- a/scripts/plot/figure.m
+++ b/scripts/plot/figure.m
@@ -16,18 +16,18 @@
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ## 02111-1307, USA.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} figure (@var{n})
 ## Set the current plot window to plot window @var{n}.  This function
 ## currently requires X11 and a version of gnuplot that supports multiple
-## frames. If N is not specified, the next available window number is
-## chosen.
+## frames.  If @var{N} is not specified, the next available window
+## number is chosen.
 ## @end deftypefn
 
 ## Author: jwe
 
 function f = figure (n)
 
   static figure_list = create_set (0);
   static figure_called = 0;
diff --git a/src/DLD-FUNCTIONS/dassl.cc b/src/DLD-FUNCTIONS/dassl.cc
--- a/src/DLD-FUNCTIONS/dassl.cc
+++ b/src/DLD-FUNCTIONS/dassl.cc
@@ -173,27 +173,30 @@ dassl_user_jacobian (const ColumnVector&
       DASSL_ABORT (); \
     } \
   while (0)
 
 DEFUN_DLD (dassl, args, nargout,
   "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {[@var{x}, @var{xdot}, @var{istate}, @var{msg}] =} dassl (@var{fcn}, @var{x_0}, @var{xdot_0}, @var{t}, @var{t_crit})\n\
 Solve the set of differential-algebraic equations\n\
+@iftex\n\
 @tex\n\
 $$ 0 = f (x, \\dot{x}, t) $$\n\
 with\n\
 $$ x(t_0) = x_0, \\dot{x}(t_0) = \\dot{x}_0 $$\n\
 @end tex\n\
+@end iftex\n\
 @ifinfo\n\
 \n\
 @example\n\
 0 = f (x, xdot, t)\n\
 @end example\n\
 \n\
+@noindent\n\
 with\n\
 \n\
 @example\n\
 x(t_0) = x_0, xdot(t_0) = xdot_0\n\
 @end example\n\
 \n\
 @end ifinfo\n\
 The solution is returned in the matrices @var{x} and @var{xdot},\n\
@@ -215,24 +218,26 @@ It must have the form\n\
 @noindent\n\
 in which @var{x}, @var{xdot}, and @var{res} are vectors, and @var{t} is a\n\
 scalar.\n\
 \n\
 If @var{fcn} is a two-element string array, the first element names\n\
 the function @math{f} described above, and the second element names\n\
 a function to compute the modified Jacobian\n\
 \n\
+@iftex\n\
 @tex\n\
 $$\n\
 J = {\\partial f \\over \\partial x}\n\
   + c {\\partial f \\over \\partial \\dot{x}}\n\
 $$\n\
 @end tex\n\
+@end iftex\n\
+@ifinfo\n\
 @example\n\
-@ifinfo\n\
       df       df\n\
 jac = -- + c ------\n\
       dx     d xdot\n\
 @end example\n\
 @end ifinfo\n\
 \n\
 The modified Jacobian function must have the form\n\
 \n\
