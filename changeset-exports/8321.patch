# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1226603634 18000
#      Thu Nov 13 14:13:54 2008 -0500
# Node ID 69b6127f69628d9db455deeb3fcd664e4739cc2c
# Parent  9a05d76e529105d4abf434c6ea17ced3b0db287f
better use of templates in ov-intx.h

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,21 @@
+2008-11-13  John W. Eaton  <jwe@octave.org>
+
+	* ov-int8.h, ov-int16.h, ov-int32.h, ov-int64.h, ov-uint8.h,
+	ov-uint16.h, ov-uint32.h, ov-uint64.h: Don't define
+	OCTAVE_INT_NDARRAY_T.
+	* ov-intx.h (class OCTAVE_VALUE_INT_MATRIX_T,
+	class OCTAVE_VALUE_INT_SCALAR_T): Use intNDArray<OCTAVE_INT_T>
+	instead of OCTAVE_INT_NDARRAY_T.
+	(OCTAVE_VALUE_INT_MATRIX_T::increment,
+	OCTAVE_VALUE_INT_MATRIX_T::decrement,
+	OCTAVE_VALUE_INT_SCALAR_T::increment,
+	OCTAVE_VALUE_INT_SCALAR_T::decrement): Convert 1 to OCTAVE_INT_T.
+
 2008-11-12  Michael Goffioul  <michael.goffioul@gmail.com>
 
 	* dirfcn.cc (Ffilesep): Make it return all file separators when 'all'
 	is given as argument.
 
 	* DLD-FUNCTIONS/getrusage.cc: Undefine min/max.
 	* TEMPLATE-INST/Array-os.cc: Declare Array<bool> as extern template.
 
diff --git a/src/ov-int16.h b/src/ov-int16.h
--- a/src/ov-int16.h
+++ b/src/ov-int16.h
@@ -18,36 +18,36 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #if !defined (octave_int16_h)
 #define octave_int16_h 1
 
+#define OCTAVE_INT_T octave_int16
+
 #define OCTAVE_VALUE_INT_MATRIX_T octave_int16_matrix
-#define OCTAVE_INT_NDARRAY_T int16NDArray
 #define OCTAVE_VALUE_INT_NDARRAY_EXTRACTOR_FUNCTION int16_array_value
 
 #define OCTAVE_VALUE_INT_SCALAR_T octave_int16_scalar
-#define OCTAVE_INT_T octave_int16
 #define OCTAVE_VALUE_INT_SCALAR_EXTRACTOR_FUNCTION int16_scalar_value
 
 #define OCTAVE_TYPE_PREDICATE_FUNCTION is_int16_type
 
 #define OCTAVE_INT_MX_CLASS mxINT16_CLASS
 
 #include "ov-intx.h"
 
+#undef OCTAVE_INT_T
+
 #undef OCTAVE_VALUE_INT_MATRIX_T
-#undef OCTAVE_INT_NDARRAY_T
 #undef OCTAVE_VALUE_INT_NDARRAY_EXTRACTOR_FUNCTION
 
 #undef OCTAVE_VALUE_INT_SCALAR_T
-#undef OCTAVE_INT_T
 #undef OCTAVE_VALUE_INT_SCALAR_EXTRACTOR_FUNCTION
 
 #undef OCTAVE_TYPE_PREDICATE_FUNCTION
 
 #undef OCTAVE_INT_MX_CLASS
 
 #endif
 
diff --git a/src/ov-int32.h b/src/ov-int32.h
--- a/src/ov-int32.h
+++ b/src/ov-int32.h
@@ -18,36 +18,36 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #if !defined (octave_int32_h)
 #define octave_int32_h 1
 
+#define OCTAVE_INT_T octave_int32
+
 #define OCTAVE_VALUE_INT_MATRIX_T octave_int32_matrix
-#define OCTAVE_INT_NDARRAY_T int32NDArray
 #define OCTAVE_VALUE_INT_NDARRAY_EXTRACTOR_FUNCTION int32_array_value
 
 #define OCTAVE_VALUE_INT_SCALAR_T octave_int32_scalar
-#define OCTAVE_INT_T octave_int32
 #define OCTAVE_VALUE_INT_SCALAR_EXTRACTOR_FUNCTION int32_scalar_value
 
 #define OCTAVE_TYPE_PREDICATE_FUNCTION is_int32_type
 
 #define OCTAVE_INT_MX_CLASS mxINT32_CLASS
 
 #include "ov-intx.h"
 
+#undef OCTAVE_INT_T
+
 #undef OCTAVE_VALUE_INT_MATRIX_T
-#undef OCTAVE_INT_NDARRAY_T
 #undef OCTAVE_VALUE_INT_NDARRAY_EXTRACTOR_FUNCTION
 
 #undef OCTAVE_VALUE_INT_SCALAR_T
-#undef OCTAVE_INT_T
 #undef OCTAVE_VALUE_INT_SCALAR_EXTRACTOR_FUNCTION
 
 #undef OCTAVE_TYPE_PREDICATE_FUNCTION
 
 #undef OCTAVE_INT_MX_CLASS
 
 #endif
 
diff --git a/src/ov-int64.h b/src/ov-int64.h
--- a/src/ov-int64.h
+++ b/src/ov-int64.h
@@ -18,36 +18,36 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #if !defined (octave_int64_h)
 #define octave_int64_h 1
 
+#define OCTAVE_INT_T octave_int64
+
 #define OCTAVE_VALUE_INT_MATRIX_T octave_int64_matrix
-#define OCTAVE_INT_NDARRAY_T int64NDArray
 #define OCTAVE_VALUE_INT_NDARRAY_EXTRACTOR_FUNCTION int64_array_value
 
 #define OCTAVE_VALUE_INT_SCALAR_T octave_int64_scalar
-#define OCTAVE_INT_T octave_int64
 #define OCTAVE_VALUE_INT_SCALAR_EXTRACTOR_FUNCTION int64_scalar_value
 
 #define OCTAVE_TYPE_PREDICATE_FUNCTION is_int64_type
 
 #define OCTAVE_INT_MX_CLASS mxINT64_CLASS
 
 #include "ov-intx.h"
 
+#undef OCTAVE_INT_T
+
 #undef OCTAVE_VALUE_INT_MATRIX_T
-#undef OCTAVE_INT_NDARRAY_T
 #undef OCTAVE_VALUE_INT_NDARRAY_EXTRACTOR_FUNCTION
 
 #undef OCTAVE_VALUE_INT_SCALAR_T
-#undef OCTAVE_INT_T
 #undef OCTAVE_VALUE_INT_SCALAR_EXTRACTOR_FUNCTION
 
 #undef OCTAVE_TYPE_PREDICATE_FUNCTION
 
 #undef OCTAVE_INT_MX_CLASS
 
 #endif
 
diff --git a/src/ov-int8.h b/src/ov-int8.h
--- a/src/ov-int8.h
+++ b/src/ov-int8.h
@@ -18,36 +18,36 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #if !defined (octave_int8_h)
 #define octave_int8_h 1
 
+#define OCTAVE_INT_T octave_int8
+
 #define OCTAVE_VALUE_INT_MATRIX_T octave_int8_matrix
-#define OCTAVE_INT_NDARRAY_T int8NDArray
 #define OCTAVE_VALUE_INT_NDARRAY_EXTRACTOR_FUNCTION int8_array_value
 
 #define OCTAVE_VALUE_INT_SCALAR_T octave_int8_scalar
-#define OCTAVE_INT_T octave_int8
 #define OCTAVE_VALUE_INT_SCALAR_EXTRACTOR_FUNCTION int8_scalar_value
 
 #define OCTAVE_TYPE_PREDICATE_FUNCTION is_int8_type
 
 #define OCTAVE_INT_MX_CLASS mxINT8_CLASS
 
 #include "ov-intx.h"
 
+#undef OCTAVE_INT_T
+
 #undef OCTAVE_VALUE_INT_MATRIX_T
-#undef OCTAVE_INT_NDARRAY_T
 #undef OCTAVE_VALUE_INT_NDARRAY_EXTRACTOR_FUNCTION
 
 #undef OCTAVE_VALUE_INT_SCALAR_T
-#undef OCTAVE_INT_T
 #undef OCTAVE_VALUE_INT_SCALAR_EXTRACTOR_FUNCTION
 
 #undef OCTAVE_TYPE_PREDICATE_FUNCTION
 
 #undef OCTAVE_INT_MX_CLASS
 
 #endif
 
diff --git a/src/ov-intx.h b/src/ov-intx.h
--- a/src/ov-intx.h
+++ b/src/ov-intx.h
@@ -37,28 +37,29 @@ along with Octave; see the file COPYING.
 #include "gripes.h"
 
 #include "ov-re-mat.h"
 #include "ov-scalar.h"
 
 class
 OCTINTERP_API
 OCTAVE_VALUE_INT_MATRIX_T
-  : public octave_base_int_matrix<OCTAVE_INT_NDARRAY_T>
+  : public octave_base_int_matrix<intNDArray<OCTAVE_INT_T> >
 {
 public:
 
   OCTAVE_VALUE_INT_MATRIX_T (void)
-    : octave_base_int_matrix<OCTAVE_INT_NDARRAY_T> () { }
+    : octave_base_int_matrix<intNDArray<OCTAVE_INT_T> > () { }
 
-  OCTAVE_VALUE_INT_MATRIX_T (const OCTAVE_INT_NDARRAY_T& nda)
-    : octave_base_int_matrix<OCTAVE_INT_NDARRAY_T> (nda) { }
+  OCTAVE_VALUE_INT_MATRIX_T (const intNDArray<OCTAVE_INT_T>& nda)
+    : octave_base_int_matrix<intNDArray<OCTAVE_INT_T> > (nda) { }
 
   OCTAVE_VALUE_INT_MATRIX_T (const ArrayN<OCTAVE_INT_T>& nda)
-    : octave_base_int_matrix<OCTAVE_INT_NDARRAY_T> (OCTAVE_INT_NDARRAY_T (nda)) { }
+    : octave_base_int_matrix<intNDArray<OCTAVE_INT_T> >
+        (intNDArray<OCTAVE_INT_T> (nda)) { }
 
   ~OCTAVE_VALUE_INT_MATRIX_T (void) { }
 
   octave_base_value *clone (void) const
     { return new OCTAVE_VALUE_INT_MATRIX_T (*this); }
 
   octave_base_value *empty_clone (void) const
     { return new OCTAVE_VALUE_INT_MATRIX_T (); }
@@ -68,17 +69,17 @@ public:
   bool is_integer_type (void) const { return true; }
 
 private:
 
   template <class IM>
   IM convert_gripe () const
     {
       typedef typename IM::element_type dest_el_type;
-      typedef OCTAVE_INT_NDARRAY_T::element_type src_el_type;
+      typedef intNDArray<OCTAVE_INT_T>::element_type src_el_type;
       dest_el_type::clear_conv_flag ();
       IM retval (matrix);
       if (dest_el_type::get_trunc_flag ())
 	gripe_truncated_conversion (src_el_type::type_name (),
 				    dest_el_type::type_name ());
       dest_el_type::clear_conv_flag ();
       return retval;
     }
@@ -295,26 +296,26 @@ public:
     for (octave_idx_type i = 0; i < nel; i++)
       vec[i] = matrix(i).char_value ();
 
     return retval;
   }
 
   void increment (void) 
    { 
-     matrix += 1; 
+     matrix += OCTAVE_INT_T (1); 
      if (OCTAVE_INT_T::get_math_trunc_flag ())
        gripe_unop_integer_math_truncated ("++", type_name (). c_str ());
 
       OCTAVE_INT_T::clear_conv_flag ();
    }
 
   void decrement (void)
    { 
-     matrix -= 1; 
+     matrix -= OCTAVE_INT_T (1); 
      if (OCTAVE_INT_T::get_math_trunc_flag ())
        gripe_unop_integer_math_truncated ("--", type_name (). c_str ());
       OCTAVE_INT_T::clear_conv_flag ();
    }
 
   idx_vector index_vector (void) const { return idx_vector (matrix); }
 
   int write (octave_stream& os, int block_size,
@@ -343,18 +344,18 @@ public:
 
   MAT_MAPPER (abs)
   MAT_MAPPER (signum)
 
 #undef MAT_MAPPER
 
   octave_value imag (void) const
   {
-    return OCTAVE_INT_NDARRAY_T (matrix.dims (),
-				 static_cast<OCTAVE_INT_T>(0));
+    return intNDArray<OCTAVE_INT_T> (matrix.dims (),
+				     static_cast<OCTAVE_INT_T>(0));
   }
 
 #define NO_OP_MAPPER(FCN) \
   octave_value FCN (void) const { return octave_value (matrix); }
 
   NO_OP_MAPPER (ceil)
   NO_OP_MAPPER (conj)
   NO_OP_MAPPER (fix)
@@ -510,24 +511,24 @@ public:
   uint64NDArray
   uint64_array_value (void) const
     { return uint64NDArray (dim_vector (1, 1), uint64_scalar_value ()); }
 
   octave_value resize (const dim_vector& dv, bool fill = false) const
     {
       if (fill)
 	{
-	  OCTAVE_INT_NDARRAY_T retval (dv, 0);
+	  intNDArray<OCTAVE_INT_T> retval (dv, 0);
 	  if (dv.numel())
 	    retval(0) = scalar;
 	  return retval;
 	}
       else
 	{
-	  OCTAVE_INT_NDARRAY_T retval (dv);
+	  intNDArray<OCTAVE_INT_T> retval (dv);
 	  if (dv.numel())
 	    retval(0) = scalar;
 	  return retval;
 	}
     }
 
   double double_value (bool = false) const { return scalar.double_value (); }
 
@@ -619,25 +620,25 @@ public:
   {
     charNDArray retval (dim_vector (1, 1));
     retval(0) = scalar.char_value ();
     return retval;
   }
 
   void increment (void) 
    { 
-     scalar += 1; 
+     scalar += OCTAVE_INT_T (1); 
      if (OCTAVE_INT_T::get_math_trunc_flag ())
        gripe_unop_integer_math_truncated ("++", type_name (). c_str ());
       OCTAVE_INT_T::clear_conv_flag ();
    }
 
   void decrement (void)
    { 
-     scalar -= 1; 
+     scalar -= OCTAVE_INT_T (1); 
      if (OCTAVE_INT_T::get_math_trunc_flag ())
        gripe_unop_integer_math_truncated ("--", type_name (). c_str ());
       OCTAVE_INT_T::clear_conv_flag ();
    }
 
   idx_vector index_vector (void) const { return idx_vector (scalar); }
 
   int write (octave_stream& os, int block_size,
diff --git a/src/ov-uint16.h b/src/ov-uint16.h
--- a/src/ov-uint16.h
+++ b/src/ov-uint16.h
@@ -18,36 +18,36 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #if !defined (octave_uint16_h)
 #define octave_uint16_h 1
 
+#define OCTAVE_INT_T octave_uint16
+
 #define OCTAVE_VALUE_INT_MATRIX_T octave_uint16_matrix
-#define OCTAVE_INT_NDARRAY_T uint16NDArray
 #define OCTAVE_VALUE_INT_NDARRAY_EXTRACTOR_FUNCTION uint16_array_value
 
 #define OCTAVE_VALUE_INT_SCALAR_T octave_uint16_scalar
-#define OCTAVE_INT_T octave_uint16
 #define OCTAVE_VALUE_INT_SCALAR_EXTRACTOR_FUNCTION uint16_scalar_value
 
 #define OCTAVE_TYPE_PREDICATE_FUNCTION is_uint16_type
 
 #define OCTAVE_INT_MX_CLASS mxUINT16_CLASS
 
 #include "ov-intx.h"
 
+#undef OCTAVE_INT_T
+
 #undef OCTAVE_VALUE_INT_MATRIX_T
-#undef OCTAVE_INT_NDARRAY_T
 #undef OCTAVE_VALUE_INT_NDARRAY_EXTRACTOR_FUNCTION
 
 #undef OCTAVE_VALUE_INT_SCALAR_T
-#undef OCTAVE_INT_T
 #undef OCTAVE_VALUE_INT_SCALAR_EXTRACTOR_FUNCTION
 
 #undef OCTAVE_TYPE_PREDICATE_FUNCTION
 
 #undef OCTAVE_INT_MX_CLASS
 
 #endif
 
diff --git a/src/ov-uint32.h b/src/ov-uint32.h
--- a/src/ov-uint32.h
+++ b/src/ov-uint32.h
@@ -18,36 +18,36 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #if !defined (octave_uint32_h)
 #define octave_uint32_h 1
 
+#define OCTAVE_INT_T octave_uint32
+
 #define OCTAVE_VALUE_INT_MATRIX_T octave_uint32_matrix
-#define OCTAVE_INT_NDARRAY_T uint32NDArray
 #define OCTAVE_VALUE_INT_NDARRAY_EXTRACTOR_FUNCTION uint32_array_value
 
 #define OCTAVE_VALUE_INT_SCALAR_T octave_uint32_scalar
-#define OCTAVE_INT_T octave_uint32
 #define OCTAVE_VALUE_INT_SCALAR_EXTRACTOR_FUNCTION uint32_scalar_value
 
 #define OCTAVE_TYPE_PREDICATE_FUNCTION is_uint32_type
 
 #define OCTAVE_INT_MX_CLASS mxUINT32_CLASS
 
 #include "ov-intx.h"
 
+#undef OCTAVE_INT_T
+
 #undef OCTAVE_VALUE_INT_MATRIX_T
-#undef OCTAVE_INT_NDARRAY_T
 #undef OCTAVE_VALUE_INT_NDARRAY_EXTRACTOR_FUNCTION
 
 #undef OCTAVE_VALUE_INT_SCALAR_T
-#undef OCTAVE_INT_T
 #undef OCTAVE_VALUE_INT_SCALAR_EXTRACTOR_FUNCTION
 
 #undef OCTAVE_TYPE_PREDICATE_FUNCTION
 
 #undef OCTAVE_INT_MX_CLASS
 
 #endif
 
diff --git a/src/ov-uint64.h b/src/ov-uint64.h
--- a/src/ov-uint64.h
+++ b/src/ov-uint64.h
@@ -18,36 +18,36 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #if !defined (octave_uint64_h)
 #define octave_uint64_h 1
 
+#define OCTAVE_INT_T octave_uint64
+
 #define OCTAVE_VALUE_INT_MATRIX_T octave_uint64_matrix
-#define OCTAVE_INT_NDARRAY_T uint64NDArray
 #define OCTAVE_VALUE_INT_NDARRAY_EXTRACTOR_FUNCTION uint64_array_value
 
 #define OCTAVE_VALUE_INT_SCALAR_T octave_uint64_scalar
-#define OCTAVE_INT_T octave_uint64
 #define OCTAVE_VALUE_INT_SCALAR_EXTRACTOR_FUNCTION uint64_scalar_value
 
 #define OCTAVE_TYPE_PREDICATE_FUNCTION is_uint64_type
 
 #define OCTAVE_INT_MX_CLASS mxUINT64_CLASS
 
 #include "ov-intx.h"
 
+#undef OCTAVE_INT_T
+
 #undef OCTAVE_VALUE_INT_MATRIX_T
-#undef OCTAVE_INT_NDARRAY_T
 #undef OCTAVE_VALUE_INT_NDARRAY_EXTRACTOR_FUNCTION
 
 #undef OCTAVE_VALUE_INT_SCALAR_T
-#undef OCTAVE_INT_T
 #undef OCTAVE_VALUE_INT_SCALAR_EXTRACTOR_FUNCTION
 
 #undef OCTAVE_TYPE_PREDICATE_FUNCTION
 
 #undef OCTAVE_INT_MX_CLASS
 
 #endif
 
diff --git a/src/ov-uint8.h b/src/ov-uint8.h
--- a/src/ov-uint8.h
+++ b/src/ov-uint8.h
@@ -18,36 +18,36 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #if !defined (octave_uint8_h)
 #define octave_uint8_h 1
 
+#define OCTAVE_INT_T octave_uint8
+
 #define OCTAVE_VALUE_INT_MATRIX_T octave_uint8_matrix
-#define OCTAVE_INT_NDARRAY_T uint8NDArray
 #define OCTAVE_VALUE_INT_NDARRAY_EXTRACTOR_FUNCTION uint8_array_value
 
 #define OCTAVE_VALUE_INT_SCALAR_T octave_uint8_scalar
-#define OCTAVE_INT_T octave_uint8
 #define OCTAVE_VALUE_INT_SCALAR_EXTRACTOR_FUNCTION uint8_scalar_value
 
 #define OCTAVE_TYPE_PREDICATE_FUNCTION is_uint8_type
 
 #define OCTAVE_INT_MX_CLASS mxUINT8_CLASS
 
 #include "ov-intx.h"
 
+#undef OCTAVE_INT_T
+
 #undef OCTAVE_VALUE_INT_MATRIX_T
-#undef OCTAVE_INT_NDARRAY_T
 #undef OCTAVE_VALUE_INT_NDARRAY_EXTRACTOR_FUNCTION
 
 #undef OCTAVE_VALUE_INT_SCALAR_T
-#undef OCTAVE_INT_T
 #undef OCTAVE_VALUE_INT_SCALAR_EXTRACTOR_FUNCTION
 
 #undef OCTAVE_TYPE_PREDICATE_FUNCTION
 
 #undef OCTAVE_INT_MX_CLASS
 
 #endif
 
