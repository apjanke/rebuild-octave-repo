# HG changeset patch
# User Rik <rik@octave.org>
# Date 1417198983 28800
#      Fri Nov 28 10:23:03 2014 -0800
# Node ID 2218dd129a6be320ef9a77640db7462489c8204b
# Parent  c446da1da9ffe42e53b02ec557d9c5e2f7c0cbdc
# Parent  7467c3e773fdc45079066596d41b5af4c00d0eda
maint: Periodic merge of gui-release to default.

diff --git a/bootstrap.conf b/bootstrap.conf
--- a/bootstrap.conf
+++ b/bootstrap.conf
@@ -186,24 +186,8 @@ bootstrap_post_import_hook ()
 
   (cd doc/interpreter; ./config-images.sh)
 
   echo "generating libinterp/dldfcn/module.mk..."
 
   (cd libinterp/dldfcn; ./config-module.sh)
 }
 
-bootstrap_epilogue ()
-{
-  ## G77 is obsolete, but it is still the first option in the autoconf
-  ## Fortran macros.  We should avoid it, because mixing old versions of
-  ## g77 with modern gcc and g++ causes trouble.  The following will
-  ## make it harder (but not impossible) for users to make this mistake.
-  ##
-  ## FIXME -- we should really work to fix autoconf so that it prefers
-  ## gfortran over g77 even when searching for a Fortran 77 compiler.
-
-  echo "replacing all occurrences of g77 with gfortran in configure script..."
-
-  sed 's/g77/gfortran/g' configure > configure.t
-  mv configure.t configure
-  chmod 755 configure
-}
diff --git a/build-aux/common.mk b/build-aux/common.mk
--- a/build-aux/common.mk
+++ b/build-aux/common.mk
@@ -86,17 +86,16 @@ SHLLINKEXT=
 LIBEXT = a
 LIBPRE = @LIBPRE@
 SHLPRE = @SHLPRE@
 SHLLIBPRE = @SHLLIBPRE@
 SHLBINPRE = @SHLBINPRE@
 
 # Fortran compiler flags.
 
-FC = @FC@
 F77 = @F77@
 AM_FFLAGS = @FFLAGS@
 FPICFLAG = @FPICFLAG@
 F77_FLOAT_STORE_FLAG = @F77_FLOAT_STORE_FLAG@
 F77_INTEGER_8_FLAG = @F77_INTEGER_8_FLAG@
 ALL_FFLAGS = $(FFLAGS)
 
 F77_TOLOWER=@F77_TOLOWER@
@@ -544,17 +543,16 @@ echo "making $@ from $<"
   -e "s|%OCTAVE_CONF_DL_LIBS%|\"${DL_LIBS}\"|" \
   -e "s|%OCTAVE_CONF_ENABLE_DYNAMIC_LINKING%|\"${ENABLE_DYNAMIC_LINKING}\"|" \
   -e "s|%OCTAVE_CONF_EXEEXT%|\"${EXEEXT}\"|" \
   -e "s|%OCTAVE_CONF_GCC_VERSION%|\"${GCC_VERSION}\"|" \
   -e "s|%OCTAVE_CONF_GXX_VERSION%|\"${GXX_VERSION}\"|" \
   -e "s|%OCTAVE_CONF_F77%|\"${F77}\"|" \
   -e "s|%OCTAVE_CONF_F77_FLOAT_STORE_FLAG%|\"${F77_FLOAT_STORE_FLAG}\"|" \
   -e "s|%OCTAVE_CONF_F77_INTEGER_8_FLAG%|\"${F77_INTEGER_8_FLAG}\"|" \
-  -e "s|%OCTAVE_CONF_FC%|\"${FC}\"|" \
   -e "s|%OCTAVE_CONF_FFLAGS%|\"${FFLAGS}\"|" \
   -e "s|%OCTAVE_CONF_FFTW3_CPPFLAGS%|\"${FFTW3_CPPFLAGS}\"|" \
   -e "s|%OCTAVE_CONF_FFTW3_LDFLAGS%|\"${FFTW3_LDFLAGS}\"|" \
   -e "s|%OCTAVE_CONF_FFTW3_LIBS%|\"${FFTW3_LIBS}\"|" \
   -e "s|%OCTAVE_CONF_FFTW3F_CPPFLAGS%|\"${FFTW3F_CPPFLAGS}\"|" \
   -e "s|%OCTAVE_CONF_FFTW3F_LDFLAGS%|\"${FFTW3F_LDFLAGS}\"|" \
   -e "s|%OCTAVE_CONF_FFTW3F_LIBS%|\"${FFTW3F_LIBS}\"|" \
   -e "s|%OCTAVE_CONF_FLIBS%|\"${FLIBS}\"|" \
diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -587,18 +587,27 @@ AC_CHECK_LIB(m, sin)
 
 ### Determine the Fortran compiler and how to invoke it
 
 ## Default FFLAGS is -O.
 if test x"$FFLAGS" = x""; then
   FFLAGS="-O"
 fi
 
-## the F77 variable, if set, overrides AC_PROG_F77 automatically
-AC_PROG_F77
+## Prefer gfortran, but the user's F77 environment variable will override.
+AC_PROG_F77([gfortran])
+if test -z "$F77"; then
+  ## No gfortran found, search for any other installed compiler.
+  AC_PROG_F77
+fi
+if test "$F77" = g77; then
+  AC_MSG_ERROR([g77 is not a supported Fortran compiler.  Select another compiler by setting the environment variable F77 and re-running configure.])
+fi
+
+## Determine calling conventions for Fortran compiler
 AC_F77_LIBRARY_LDFLAGS
 AC_F77_DUMMY_MAIN
 AC_F77_WRAPPERS
 
 F77_TOLOWER=yes
 F77_APPEND_UNDERSCORE=yes
 F77_APPEND_EXTRA_UNDERSCORE=yes
 
@@ -684,20 +693,16 @@ if test $octave_cv_sizeof_fortran_intege
       AC_MSG_ERROR([in order to build Octave with 64-bit indexing support your Fortran compiler must have an option for setting the default integer size to 8 bytes.  See the file INSTALL for more information.])
     fi
   else
     AC_MSG_ERROR([your Fortran compiler must have an option to make integers the same size as octave_idx_type ($OCTAVE_IDX_TYPE).  See the file INSTALL for more information.])
   fi
 fi
 AC_SUBST(F77_INTEGER_8_FLAG)
 
-## FIXME: Is this really used?  Makefile seems to use $F77 for compiler
-FC=$F77
-AC_SUBST(FC)
-
 OCTAVE_F77_FLAG([-ffloat-store], [
   AC_MSG_RESULT([setting F77_FLOAT_STORE_FLAG to -ffloat-store])
   F77_FLOAT_STORE_FLAG=-ffloat-store
   AC_SUBST(F77_FLOAT_STORE_FLAG)
 ])
 
 ### Check for the Qhull library
 
diff --git a/libgui/src/dialog.cc b/libgui/src/dialog.cc
--- a/libgui/src/dialog.cc
+++ b/libgui/src/dialog.cc
@@ -461,28 +461,28 @@ FileDialog::FileDialog (const QStringLis
 
   selectFile (filename);
 
   connect (this,
            SIGNAL (finish_input (const QStringList&, const QString&, int)),
            &uiwidget_creator,
            SLOT (filedialog_finished (const QStringList&, const QString&,
                                       int)));
+  connect (this, SIGNAL (accepted ()), this, SLOT (acceptSelection ()));
+  connect (this, SIGNAL (rejected ()), this, SLOT (rejectSelection ()));
 }
 
 void
-FileDialog::reject (void)
+FileDialog::rejectSelection(void)
 {
   QStringList empty;
   emit finish_input (empty, "", 0);
-  done (QDialog::Rejected);
-
 }
 
-void FileDialog::accept (void)
+void FileDialog::acceptSelection (void)
 {
   QStringList string_result;
   QString path;
   int idx = 1;
 
   string_result = selectedFiles ();
 
   if (testOption (QFileDialog::ShowDirsOnly)  == true &&
@@ -508,11 +508,10 @@ void FileDialog::accept (void)
   // convert to native slashes
   path = QDir::toNativeSeparators (path);
 
   QStringList name_filters = nameFilters ();
   idx = name_filters.indexOf (selectedNameFilter ()) + 1;
 
   // send the selected info
   emit finish_input (string_result, path, idx);
-  done (QDialog::Accepted);
 }
 
diff --git a/libgui/src/dialog.h b/libgui/src/dialog.h
--- a/libgui/src/dialog.h
+++ b/libgui/src/dialog.h
@@ -256,14 +256,14 @@ public:
                        const QString& dirname, const QString& multimode);
 
 signals:
 
   void finish_input (const QStringList&, const QString&, int);
 
 private slots:
 
-  void reject (void);
+  void rejectSelection (void);
 
-  void accept (void);
+  void acceptSelection (void);
 };
 
 #endif
diff --git a/libgui/src/octave-dock-widget.cc b/libgui/src/octave-dock-widget.cc
--- a/libgui/src/octave-dock-widget.cc
+++ b/libgui/src/octave-dock-widget.cc
@@ -102,16 +102,19 @@ octave_dock_widget::octave_dock_widget (
 
   // copy & paste handling
   connect (p, SIGNAL (copyClipboard_signal ()),
            this, SLOT (copyClipboard ()));
   connect (p, SIGNAL (pasteClipboard_signal ()),
            this, SLOT (pasteClipboard ()));
   connect (p, SIGNAL (selectAll_signal ()),
            this, SLOT (selectAll ()));
+
+  installEventFilter (this);
+
 }
 
 octave_dock_widget::~octave_dock_widget ()
 {
   // save state of this dock-widget
   QString name = objectName ();
   QSettings *settings = resource_manager::get_settings ();
 
@@ -357,8 +360,19 @@ octave_dock_widget::handle_settings (con
   _dock_action->setIcon (QIcon (":/actions/icons/"+dock_icon+_icon_color+".png"));
   _close_action->setIcon (QIcon (":/actions/icons/widget-close"+_icon_color+".png"));
 #else
   setStyleSheet (css);
 #endif
 
   notice_settings (settings);  // call individual handler
 }
+
+bool octave_dock_widget::eventFilter(QObject *obj, QEvent *e)
+{
+  if (e->type () == QEvent::NonClientAreaMouseButtonDblClick)
+    {
+      e->ignore (); // ignore double clicks into window decoration elements
+      return true;
+    }
+
+  return QDockWidget::eventFilter (obj,e);
+}
diff --git a/libgui/src/octave-dock-widget.h b/libgui/src/octave-dock-widget.h
--- a/libgui/src/octave-dock-widget.h
+++ b/libgui/src/octave-dock-widget.h
@@ -100,16 +100,19 @@ protected slots:
   }
   virtual void pasteClipboard ()
   {
   }
   virtual void selectAll ()
   {
   }
 
+  // event filter for double clicks into the window decoration elements
+  bool eventFilter(QObject *obj, QEvent *e);
+
 private slots:
 
   void change_floating (bool);
   void change_visibility (bool);
 
 private:
 
   QMainWindow *_parent;  // store the parent since we are reparenting to 0
diff --git a/libinterp/corefcn/pr-output.cc b/libinterp/corefcn/pr-output.cc
--- a/libinterp/corefcn/pr-output.cc
+++ b/libinterp/corefcn/pr-output.cc
@@ -380,18 +380,17 @@ rational_approx (double val, int len)
       while (1)
         {
           double flip = 1. / frac;
           double step = xround (flip);
           double nextn = n;
           double nextd = d;
 
           // Have we converged to 1/intmax ?
-          if (m > 100
-              || fabs (frac) < 1 / static_cast<double> (std::numeric_limits<int>::max ()))
+          if (fabs (frac) < 1 / static_cast<double> (std::numeric_limits<int>::max ()))
             {
               lastn = n;
               lastd = d;
               break;
             }
 
           frac = flip - step;
           n = n * step + lastn;
@@ -403,22 +402,24 @@ rational_approx (double val, int len)
           buf.flags (std::ios::fixed);
           buf << std::setprecision (0) << static_cast<int>(n)
               << "/" << static_cast<int>(d);
           m++;
 
           if (n < 0 && d < 0)
             {
               // Double negative, string can be two characters longer..
-              if (buf.str ().length () > static_cast<unsigned int>(len + 2) &&
-                  m > 1)
+              if (buf.str ().length () > static_cast<unsigned int>(len + 2))
                 break;
             }
-          else if (buf.str ().length () > static_cast<unsigned int>(len) &&
-                   m > 1)
+          else if (buf.str ().length () > static_cast<unsigned int>(len))
+            break;
+
+          if (fabs (n) > std::numeric_limits<int>::max ()
+              || fabs (d) > std::numeric_limits<int>::max ())
             break;
 
           s = buf.str ();
         }
 
       if (lastd < 0.)
         {
           // Move sign to the top
@@ -430,16 +431,30 @@ rational_approx (double val, int len)
               << "/" << static_cast<int>(lastd);
           s = buf.str ();
         }
     }
 
   return s;
 }
 
+/*
+%!assert (rats (2.0005, 9), "4001/2000")
+%!assert (rats (-2.0005, 10), "-4001/2000")
+%!assert (strtrim (rats (2.0005, 30)), "4001/2000")
+%!assert (pi - str2num (rats (pi, 30)), 0, 4 * eps)
+%!assert (e - str2num (rats (e, 30)), 0, 4 * eps)
+%!assert (rats (123, 2), " *")
+
+%!test
+%! v = 1 / double (intmax);
+%! err = v - str2num (rats(v, 12));
+%! assert (err, 0, 4 * eps);
+*/
+
 class
 pr_rational_float
 {
 public:
 
   const float_format& f;
 
   double val;
@@ -3398,16 +3413,19 @@ You can convert the string back into a m
 @group\n\
 r = rats (hilb (4));\n\
 x = str2num (r)\n\
 @end group\n\
 @end example\n\
 \n\
 The optional second argument defines the maximum length of the string\n\
 representing the elements of @var{x}.  By default @var{len} is 9.\n\
+\n\
+If the length of the smallest possible rational approximation exceeds\n\
+@var{len}, an asterisk (*) padded with spaces will be returned instead.\n\
 @seealso{format, rat}\n\
 @end deftypefn")
 {
   octave_value retval;
 
   int nargin = args.length ();
 
   if (nargin < 1 || nargin > 2 || nargout > 1)
diff --git a/libinterp/corefcn/toplev.cc b/libinterp/corefcn/toplev.cc
--- a/libinterp/corefcn/toplev.cc
+++ b/libinterp/corefcn/toplev.cc
@@ -1321,17 +1321,16 @@ specified option.\n\
     { false, "DL_LIBS", OCTAVE_CONF_DL_LIBS },
     { false, "GCC_VERSION", OCTAVE_CONF_GCC_VERSION },
     { false, "GXX_VERSION", OCTAVE_CONF_GXX_VERSION },
     { false, "ENABLE_DYNAMIC_LINKING", OCTAVE_CONF_ENABLE_DYNAMIC_LINKING },
     { false, "EXEEXT", OCTAVE_CONF_EXEEXT },
     { false, "F77", OCTAVE_CONF_F77 },
     { false, "F77_FLOAT_STORE_FLAG", OCTAVE_CONF_F77_FLOAT_STORE_FLAG },
     { false, "F77_INTEGER_8_FLAG", OCTAVE_CONF_F77_INTEGER_8_FLAG },
-    { false, "FC", OCTAVE_CONF_FC },
     { false, "FFLAGS", OCTAVE_CONF_FFLAGS },
     { false, "FFTW3_CPPFLAGS", OCTAVE_CONF_FFTW3_CPPFLAGS },
     { false, "FFTW3_LDFLAGS", OCTAVE_CONF_FFTW3_LDFLAGS },
     { false, "FFTW3_LIBS", OCTAVE_CONF_FFTW3_LIBS },
     { false, "FFTW3F_CPPFLAGS", OCTAVE_CONF_FFTW3F_CPPFLAGS },
     { false, "FFTW3F_LDFLAGS", OCTAVE_CONF_FFTW3F_LDFLAGS },
     { false, "FFTW3F_LIBS", OCTAVE_CONF_FFTW3F_LIBS },
     { false, "FLIBS", OCTAVE_CONF_FLIBS },
diff --git a/scripts/gui/private/__file_filter__.m b/scripts/gui/private/__file_filter__.m
--- a/scripts/gui/private/__file_filter__.m
+++ b/scripts/gui/private/__file_filter__.m
@@ -48,17 +48,17 @@ function [retval, defname, defdir] = __f
         endif
       endfor
     endif
   elseif (ischar (file_filter))
     [defdir, fname, fext] = fileparts (file_filter);
     if (! strcmp (fname, "*"))
       defname = strcat (fname, fext);
     endif
-    if (length (fext) > 0)
+    if ((length (fext) > 0) && (! strcmp(fext, '.*')))
       fext = strcat ("*", fext);
       retval = {fext, __default_filtername__(fext)};
     endif
   endif
 
   retval(end+1,:) = {"*", __default_filtername__("*")};
 
 endfunction
diff --git a/scripts/gui/uiputfile.m b/scripts/gui/uiputfile.m
--- a/scripts/gui/uiputfile.m
+++ b/scripts/gui/uiputfile.m
@@ -107,16 +107,29 @@ function [retfile, retpath, retindex] = 
   endif
 
   if (__octave_link_enabled__ ())
     [retfile, retpath, retindex] = __octave_link_file_dialog__ (outargs{:});
   else
     [retfile, retpath, retindex] = feval (funcname, outargs{:});
   endif
 
+  # add extension to the name it isnt already added
+
+  if ischar (retfile)
+    ext = outargs{1}{retindex};
+    ext = strrep (ext, '*', '');
+
+    if length (retfile) >= length (ext)
+      if ! strcmp (retfile(end-length (ext)+1:end), ext)
+        retfile = [retfile ext];
+      endif
+    endif
+  endif
+
 endfunction
 
 
 %!demo
 %! uiputfile ({'*.gif;*.png;*.jpg', 'Supported Picture Formats'});
 
 ## Remove from test statistics.  No real tests possible.
 %!assert (1)
