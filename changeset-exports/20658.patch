# HG changeset patch
# User CarnÃ« Draug <carandraug@octave.org>
# Date 1445805853 0
#      Sun Oct 25 20:44:13 2015 +0000
# Node ID eafc22e4c857e10cd21f728d8ba1131dd5872012
# Parent  bc51aa0d604aceab2a82830f1bd34463fbb05d90
ntsc2rgb: truncate/scale for all types and performance fixes (patch #8709)

* scripts/image/ntsc2rgb.m: Matlab only accepts input of class double so on
  cset 175aed5acb85 it only performed scaling for class double and doing nothing
  otherwise.  However, this can cause issues for the user since it then it
  will need to be constantly aware of the class (the whole point of accepting
  any class is not having to worry about it).
  In addition, make use of automatic broadcasting (instead of multiplying by
  ones to expand), and drop use of find() since it's faster to use the bool
  array for indexing than the extra call to find().

diff --git a/scripts/image/ntsc2rgb.m b/scripts/image/ntsc2rgb.m
--- a/scripts/image/ntsc2rgb.m
+++ b/scripts/image/ntsc2rgb.m
@@ -54,23 +54,19 @@ function rgb = ntsc2rgb (yiq)
   ## x == ntsc2rgb (rgb2ntsc (x)) rather than maintaining strict compatibility
   ## with Matlab.
   trans = [ 1.0,      1.0,      1.0;
             0.95617, -0.27269, -1.10374;
             0.62143, -0.64681,  1.70062 ];
   rgb = yiq * trans;
 
   ## truncating / scaling of double rgb values for Matlab compatibility
-  ## (Other input types are not supported by Matlab. We deal with
-  ## them anyways, but do not truncate or scale those.)
-  if (cls == "double")
-    rgb = max (0,rgb);
-    idx = find (any (rgb'>1));
-    rgb(idx,:) = rgb(idx,:) ./ (max (rgb(idx,:), [], 2) * ones (1,3));
-  endif
+  rgb = max (0, rgb);
+  idx = any (rgb > 1, 2);
+  rgb(idx,:) = rgb(idx,:) ./ max (rgb(idx,:), [], 2);
 
   rgb = colorspace_conversion_revert (rgb, cls, sz, is_im, is_nd, is_int);
 endfunction
 
 %!shared trans
 %! trans = [ 1.0,      1.0,      1.0;
 %!          0.95617, -0.27269, -1.10374;
 %!          0.62143, -0.64681,  1.70062 ];
