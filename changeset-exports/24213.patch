# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1510174733 18000
#      Wed Nov 08 15:58:53 2017 -0500
# Branch stable
# Node ID d2cfaaa57677fbc0392d9f4f9f6130307d8ebd6a
# Parent  7b74355c8e9ddcbf5d78e6385fd384fae411a37d
tag global and persistent symbols as variables when parsing (bug #52363)

* oct-parse.in.yy (base_parser::make_decl_command): Also tag variables
in initializer list as pending local variables.

diff --git a/libinterp/parse-tree/oct-parse.in.yy b/libinterp/parse-tree/oct-parse.in.yy
--- a/libinterp/parse-tree/oct-parse.in.yy
+++ b/libinterp/parse-tree/oct-parse.in.yy
@@ -3713,16 +3713,28 @@ namespace octave
   base_parser::make_decl_command (int tok, token *tok_val,
                                   tree_decl_init_list *lst)
   {
     tree_decl_command *retval = 0;
 
     int l = tok_val->line ();
     int c = tok_val->column ();
 
+    std::list<std::string> names;
+    for (tree_decl_init_list::iterator p = lst->begin ();
+         p != lst->end (); p++)
+      {
+        tree_decl_elt *elt = *p;
+
+        std::string nm = elt->name ();
+        if (! nm.empty ())
+          names.push_back (nm);
+      }
+    lexer.mark_as_variables (names);
+
     switch (tok)
       {
       case GLOBAL:
         retval = new tree_global_command (lst, l, c);
         break;
 
       case PERSISTENT:
         if (curr_fcn_depth > 0)
