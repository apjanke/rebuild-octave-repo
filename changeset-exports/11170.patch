# HG changeset patch
# User Kai Habel <kai.habel@gmx.de>
# Date 1288528135 -3600
#      Sun Oct 31 13:28:55 2010 +0100
# Node ID a2437f70fe6c6adcb7cb6b549b17c5189b7f9cec
# Parent  51beeeff9027ff5cb21d6e0d9b86a2dd2f4952af
Remove template to allow compilation for MacOS

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2010-10-31  Kai Habel  <kai.habel@gmx.de>
+
+	* fltk-backend.cc (find_uimenu_children): Remove template argument.
+	(do_find_uimenu_children): New function.
+
 2010-10-29  David Bateman  <dbateman@free.fr>
 
 	* graphics.cc (octave_value patch::properties::get_color_data
 	(void) const): Don't call convert_data is the facevertexcdata
 	property is undefined or empty.
 	* gl-render.cc (void opengl_renderer::draw_patch
 	(const patch::properties &)): Set ec_mode to 0 if edgecolor is "none".
 	Set fc_mode to 0 if facecolor is "none".
diff --git a/src/DLD-FUNCTIONS/fltk_backend.cc b/src/DLD-FUNCTIONS/fltk_backend.cc
--- a/src/DLD-FUNCTIONS/fltk_backend.cc
+++ b/src/DLD-FUNCTIONS/fltk_backend.cc
@@ -311,23 +311,36 @@ public:
               itempath += m->label ();
 
               if (itempath.compare (findname) == 0)
                 return (t);
             }
         }
       return (-1);
     }
+  
+  Matrix find_uimenu_children (uimenu::properties& uimenup) const
+    {
+      Matrix uimenu_childs = uimenup.get_children ();
+      Matrix retval = do_find_uimenu_children (uimenu_childs);
+      return retval;
+    }
 
-  template <class T>
-  Matrix find_uimenu_children (T& prop) const
+  Matrix find_uimenu_children (figure::properties& figp) const
+    {
+      Matrix uimenu_childs = figp.get_children ();
+      Matrix retval = do_find_uimenu_children (uimenu_childs);
+      return retval;
+    }
+    
+  Matrix do_find_uimenu_children (Matrix uimenu_childs) const
     {
       octave_idx_type k = 0;
       
-      Matrix uimenu_childs = prop.get_children ();
+      
       Matrix pos = Matrix (uimenu_childs.numel (), 1);
       
       for (octave_idx_type ii = 0; ii < uimenu_childs.numel (); ii++)
       {
         graphics_handle kid = uimenu_childs (ii);
         
         if (gh_manager::is_handle_visible (kid))
           {  
