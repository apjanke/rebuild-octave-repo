# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1493908191 14400
#      Thu May 04 10:29:51 2017 -0400
# Node ID f267a982478f72ff5ac3fa1b3a4549674a4c9825
# Parent  5da300c55e89371b7e26ea267b68fff105f0253a
# Parent  0ada77ed24dda7aef2b531c1a446bb98b6bce8b6
Merge stable to default.

diff --git a/libinterp/corefcn/utils.cc b/libinterp/corefcn/utils.cc
--- a/libinterp/corefcn/utils.cc
+++ b/libinterp/corefcn/utils.cc
@@ -1145,17 +1145,17 @@ get_dimensions (const octave_value& a, c
                 dim_vector& dim)
 {
   // We support dimensions to be specified by any vector, even if it's a
   // vector of dimensions 0x1, 1x0, 1x1x0, or 1x1x6.  If the vector ends
   // up being empty, the final dimensions end up being 0x0.
   if (! a.dims ().is_vector ())
     error ("%s (A): use %s (size (A)) instead", warn_for, warn_for);
 
-  const Array<int> v = a.int_vector_value ();
+  const Array<octave_idx_type> v = a.octave_idx_type_vector_value ();
   const octave_idx_type n = v.numel ();
 
   dim.resize (n); // even if n < 2, resize sets it back to 2
   if (n == 0)
     {
       dim(0) = 0;
       dim(1) = 0;
     }
diff --git a/libinterp/octave-value/ov-cell.cc b/libinterp/octave-value/ov-cell.cc
--- a/libinterp/octave-value/ov-cell.cc
+++ b/libinterp/octave-value/ov-cell.cc
@@ -1244,28 +1244,34 @@ dimensions.
       break;
 
     default:
       {
         dims.resize (nargin);
 
         for (int i = 0; i < nargin; i++)
           dims(i) = (args(i).is_empty ()
-                     ? 0 : args(i).xnint_value ("cell: dimension must be a scalar integer"));
+                     ? 0 : args(i).xidx_type_value ("cell: dimension must be a scalar integer"));
       }
       break;
     }
 
   dims.chop_trailing_singletons ();
 
   check_dimensions (dims, "cell");
 
   return ovl (Cell (dims));
 }
 
+/*
+## This might work on some system someday, but for now, who has a system
+## where a 16 yottabyte array can be allocated?  See bug #50934.
+%!error <out of memory> cell (1e24, 1);
+*/
+
 DEFUN (iscellstr, args, ,
        doc: /* -*- texinfo -*-
 @deftypefn {} {} iscellstr (@var{cell})
 Return true if every element of the cell array @var{cell} is a character
 string.
 @seealso{ischar}
 @end deftypefn */)
 {
