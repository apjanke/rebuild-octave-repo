# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1234767423 -3600
#      Mon Feb 16 07:57:03 2009 +0100
# Node ID 8af4ba6b4216491222a4ed282b9edd779b58e7ed
# Parent  5a7494ee68a3c378b98c83fa4064ba4066b2d689
use new reduction ops for char matrices

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+2009-02-16  Jaroslav Hajek  <highegg@gmail.com>
+
+	* chMatrix.cc (charMatrix::all, charMatrix::any): Use do_mx_red_op.
+	* chNDArray.cc (charNDArray::all, charNDArray::any): Ditto.
+
 2009-02-16  John W. Eaton  <jwe@octave.org>
 
 	* cmd-edit.cc (default_command_editor::do_readline):
 	Use fputs instead of fprintf.
 
 2009-02-14  Jaroslav Hajek  <highegg@gmail.com>
 
 	* mx-inlines.cc (OP_RED_FCN, OP_RED_FCN2, OP_RED_FCNN, OP_CUM_FCN,
diff --git a/liboctave/chMatrix.cc b/liboctave/chMatrix.cc
--- a/liboctave/chMatrix.cc
+++ b/liboctave/chMatrix.cc
@@ -198,23 +198,23 @@ charMatrix::diag (octave_idx_type k) con
 }
 
 // FIXME Do these really belong here?  Maybe they should be
 // in a base class?
 
 boolMatrix
 charMatrix::all (int dim) const
 {
-  MX_ALL_OP (dim);
+  return do_mx_red_op<boolMatrix> (*this, dim, mx_inline_all);
 }
 
 boolMatrix
 charMatrix::any (int dim) const
 {
-  MX_ANY_OP (dim);
+  return do_mx_red_op<boolMatrix> (*this, dim, mx_inline_any);
 }
 
 MS_CMP_OPS(charMatrix, , char, )
 MS_BOOL_OPS(charMatrix, char, 0)
 
 SM_CMP_OPS(char, , charMatrix, )
 SM_BOOL_OPS(char, charMatrix, 0)
 
diff --git a/liboctave/chNDArray.cc b/liboctave/chNDArray.cc
--- a/liboctave/chNDArray.cc
+++ b/liboctave/chNDArray.cc
@@ -31,23 +31,23 @@ along with Octave; see the file COPYING.
 #include "lo-ieee.h"
 #include "lo-mappers.h"
 
 // FIXME -- this is not quite the right thing.
 
 boolNDArray
 charNDArray::all (int dim) const
 {
-  MX_ND_ANY_ALL_REDUCTION (MX_ND_ALL_EVAL (elem (iter_idx) == '\0'), true);
+  return do_mx_red_op<boolMatrix> (*this, dim, mx_inline_all);
 }
 
 boolNDArray
 charNDArray::any (int dim) const
 {
-  MX_ND_ANY_ALL_REDUCTION (MX_ND_ANY_EVAL (elem (iter_idx) != '\0'), false);
+  return do_mx_red_op<boolMatrix> (*this, dim, mx_inline_any);
 }
 
 charNDArray
 charNDArray::concat (const charNDArray& rb, const Array<octave_idx_type>& ra_idx)
 {
   if (rb.numel () > 0)
     insert (rb, ra_idx);
   return *this;
