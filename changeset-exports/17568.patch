# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1380909205 14400
#      Fri Oct 04 13:53:25 2013 -0400
# Node ID 1b388d922e6bfba0f62b6ff39f0e895f3b8312fa
# Parent  0b3cf264ec2fd7fb8f24ddc68a38e972563863f6
provide --no-fork command line option

* octave.cc (no_fork_option): New static varaible.
(NO_FORK_OPTION): New macro.
(long_opts): Include it in the list.
(usage_string, verbose_usage): Update for new --no-fork option.
(octave_process_command_line): Handle NO_FORK_OPTION case.

* octave-gui.h, octave-gui.cc (octave_start_gui): New arg, fork.
Don't call dissociate_terminal if fork is false.
* octave.h, octave.cc (octave_fork_gui): New function.
* main.cc (main): Use it to pass --no-fork option to gui.

diff --git a/libgui/src/octave-gui.cc b/libgui/src/octave-gui.cc
--- a/libgui/src/octave-gui.cc
+++ b/libgui/src/octave-gui.cc
@@ -83,19 +83,20 @@ dissociate_terminal (void)
       exit (octave_wait::ifexited (status)
             ? octave_wait::exitstatus (status) : 127);
     }
 
 #endif
 }
 
 int
-octave_start_gui (int argc, char *argv[])
+octave_start_gui (int argc, char *argv[], bool fork)
 {
-  dissociate_terminal ();
+  if (fork)
+    dissociate_terminal ();
 
   QApplication application (argc, argv);
 
   // install translators for the gui and qt text
   QTranslator gui_tr, qt_tr, qsci_tr;
   resource_manager::config_translators (&qt_tr,&qsci_tr,&gui_tr);
   application.installTranslator (&qt_tr);
   application.installTranslator (&qsci_tr);
diff --git a/libgui/src/octave-gui.h b/libgui/src/octave-gui.h
--- a/libgui/src/octave-gui.h
+++ b/libgui/src/octave-gui.h
@@ -18,11 +18,12 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #if !defined (octave_octave_gui_h)
 #define octave_octave_gui_h 1
 
-extern OCTGUI_API int octave_start_gui (int argc, char **argv);
+extern OCTGUI_API int octave_start_gui (int argc, char **argv,
+                                        bool fork = true);
 
 #endif
diff --git a/libinterp/octave.cc b/libinterp/octave.cc
--- a/libinterp/octave.cc
+++ b/libinterp/octave.cc
@@ -120,16 +120,20 @@ static bool inhibit_startup_message = fa
 // If TRUE, print verbose info in some cases.
 // (--verbose; -V)
 static bool verbose_flag = false;
 
 // If TRUE, force the GUI to start.
 // (--force-gui)
 static bool force_gui_option = false;
 
+// If TRUE don't fork when starting the GUI.
+// (--no-fork)
+static bool no_fork_option = false;
+
 // If TRUE don't start the GUI.
 // (--no-gui)
 static bool no_gui_option = false;
 
 // If TRUE, force readline command line editing.
 // (--line-editing)
 static bool forced_line_editing = false;
 
@@ -154,17 +158,17 @@ static std::string image_path;
 static bool no_window_system = false;
 
 // Usage message
 static const char *usage_string =
   "octave [-HVWdfhiqvx] [--debug] [--debug-jit] [--doc-cache-file file]\n\
        [--echo-commands] [--eval CODE] [--exec-path path]\n\
        [--force-gui] [--help] [--image-path path]\n\
        [--info-file file] [--info-program prog] [--interactive]\n\
-       [--line-editing] [--no-gui] [--no-history]\n\
+       [--line-editing] [--no-fork] [--no-gui] [--no-history]\n\
        [--no-init-file] [--no-init-path] [--no-jit-compiler]\n\
        [--no-line-editing] [--no-site-file] [--no-window-system]\n\
        [--norc] [-p path] [--path path] [--persist] [--silent]\n\
        [--traditional] [--verbose] [--version] [file]";
 
 // This is here so that it's more likely that the usage message and
 // the real set of options will agree.  Note: the '+' must come first
 // to prevent getopt from permuting arguments!
@@ -189,41 +193,43 @@ static bool traditional = false;
 #define EVAL_OPTION 3
 #define EXEC_PATH_OPTION 4
 #define FORCE_GUI_OPTION 5
 #define IMAGE_PATH_OPTION 6
 #define INFO_FILE_OPTION 7
 #define INFO_PROG_OPTION 8
 #define DEBUG_JIT_OPTION 9
 #define LINE_EDITING_OPTION 10
-#define NO_GUI_OPTION 11
-#define NO_INIT_FILE_OPTION 12
-#define NO_INIT_PATH_OPTION 13
-#define NO_JIT_COMPILER_OPTION 14
-#define NO_LINE_EDITING_OPTION 15
-#define NO_SITE_FILE_OPTION 16
-#define PERSIST_OPTION 17
-#define TEXI_MACROS_FILE_OPTION 18
-#define TRADITIONAL_OPTION 19
+#define NO_FORK_OPTION 11
+#define NO_GUI_OPTION 12
+#define NO_INIT_FILE_OPTION 13
+#define NO_INIT_PATH_OPTION 14
+#define NO_JIT_COMPILER_OPTION 15
+#define NO_LINE_EDITING_OPTION 16
+#define NO_SITE_FILE_OPTION 17
+#define PERSIST_OPTION 18
+#define TEXI_MACROS_FILE_OPTION 19
+#define TRADITIONAL_OPTION 20
 struct option long_opts[] = {
   { "braindead",                no_argument,       0, TRADITIONAL_OPTION },
   { "built-in-docstrings-file", required_argument, 0, BUILT_IN_DOCSTRINGS_FILE_OPTION },
   { "debug",                    no_argument,       0, 'd' },
   { "debug-jit",                no_argument,       0, DEBUG_JIT_OPTION },
   { "doc-cache-file",           required_argument, 0, DOC_CACHE_FILE_OPTION },
   { "echo-commands",            no_argument,       0, 'x' },
   { "eval",                     required_argument, 0, EVAL_OPTION },
   { "exec-path",                required_argument, 0, EXEC_PATH_OPTION },
   { "force-gui",                no_argument,       0, FORCE_GUI_OPTION },
   { "help",                     no_argument,       0, 'h' },
   { "image-path",               required_argument, 0, IMAGE_PATH_OPTION },
   { "info-file",                required_argument, 0, INFO_FILE_OPTION },
   { "info-program",             required_argument, 0, INFO_PROG_OPTION },
   { "interactive",              no_argument,       0, 'i' },
   { "line-editing",             no_argument,       0, LINE_EDITING_OPTION },
+  { "no-fork",                  no_argument,       0, NO_FORK_OPTION },
   { "no-gui",                   no_argument,       0, NO_GUI_OPTION },
   { "no-history",               no_argument,       0, 'H' },
   { "no-init-file",             no_argument,       0, NO_INIT_FILE_OPTION },
   { "no-init-path",             no_argument,       0, NO_INIT_PATH_OPTION },
   { "no-jit-compiler",          no_argument,       0, NO_JIT_COMPILER_OPTION },
   { "no-line-editing",          no_argument,       0, NO_LINE_EDITING_OPTION },
   { "no-site-file",             no_argument,       0, NO_SITE_FILE_OPTION },
   { "no-window-system",         no_argument,       0, 'W' },
@@ -532,16 +538,17 @@ Options:\n\
   --exec-path PATH        Set path for executing subprograms.\n\
   --force-gui             Force graphical user interface to start.\n\
   --help, -h,             Print short help message and exit.\n\
   --image-path PATH       Add PATH to head of image search path.\n\
   --info-file FILE        Use top-level info file FILE.\n\
   --info-program PROGRAM  Use PROGRAM for reading info files.\n\
   --interactive, -i       Force interactive behavior.\n\
   --line-editing          Force readline use for command-line editing.\n\
+  --no-fork               Don't fork when starting the graphical user interface.\n\
   --no-gui                Disable the graphical user interface.\n\
   --no-history, -H        Don't save commands to the history list\n\
   --no-init-file          Don't read the ~/.octaverc or .octaverc files.\n\
   --no-init-path          Don't initialize function search path.\n\
   --no-jit-compiler       Disable the JIT compiler.\n\
   --no-line-editing       Don't use readline for command-line editing.\n\
   --no-site-file          Don't read the site-wide octaverc file.\n\
   --no-window-system, -W  Disable window system, including graphics.\n\
@@ -782,16 +789,20 @@ octave_process_command_line (int argc, c
         case DEBUG_JIT_OPTION:
           Fdebug_jit (octave_value (true));
           break;
 
         case LINE_EDITING_OPTION:
           forced_line_editing = true;
           break;
 
+        case NO_FORK_OPTION:
+          no_fork_option = true;
+          break;
+
         case NO_GUI_OPTION:
           no_gui_option = true;
           break;
 
         case NO_INIT_FILE_OPTION:
           read_init_files = false;
           break;
 
@@ -1066,16 +1077,22 @@ check_starting_gui (void)
 
 int
 octave_starting_gui (void)
 {
   start_gui = check_starting_gui ();
   return start_gui;
 }
 
+int
+octave_fork_gui (void)
+{
+  return ! no_fork_option;
+}
+
 DEFUN (isguirunning, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} isguirunning ()\n\
 Return true if Octave is running in GUI mode and false otherwise.\n\
 @end deftypefn")
 {
   octave_value retval;
 
diff --git a/libinterp/octave.h b/libinterp/octave.h
--- a/libinterp/octave.h
+++ b/libinterp/octave.h
@@ -36,14 +36,15 @@ octave_initialize_interpreter (int argc,
 
 extern OCTINTERP_API int octave_execute_interpreter (void);
 
 extern OCTINTERP_API int octave_cmdline_argc;
 extern OCTINTERP_API char **octave_cmdline_argv;
 extern OCTINTERP_API int octave_embedded;
 
 extern OCTINTERP_API int octave_starting_gui (void);
+extern OCTINTERP_API int octave_fork_gui (void);
 
 #ifdef  __cplusplus
 }
 #endif
 
 #endif
diff --git a/src/main.cc b/src/main.cc
--- a/src/main.cc
+++ b/src/main.cc
@@ -36,17 +36,17 @@ main (int argc, char **argv)
 
   octave_process_command_line (argc, argv);
 
   sysdep_init ();
 
   install_defaults ();
 
   if (octave_starting_gui ())
-    retval = octave_start_gui (argc, argv);
+    retval = octave_start_gui (argc, argv, octave_fork_gui ());
   else
     {
       octave_initialize_interpreter (argc, argv, 0);
 
       retval = octave_execute_interpreter ();
     }
 
   return retval;
