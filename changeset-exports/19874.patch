# HG changeset patch
# User Rik <rik@octave.org>
# Date 1425083354 28800
#      Fri Feb 27 16:29:14 2015 -0800
# Node ID 6b7aee95c54c535e3f8047bc72cbb7b287de672a
# Parent  5261186f1b006f2311a989de2455642a644a223f
Test directly for '|' character at front of drawnow "file".

* graphics.cc (drawnow): Test directly for '|' character at front of drawnow
"file".

* __osmesa_print__.c: Test directly for '|' character at front of drawnow
"file".

diff --git a/libinterp/corefcn/graphics.cc b/libinterp/corefcn/graphics.cc
--- a/libinterp/corefcn/graphics.cc
+++ b/libinterp/corefcn/graphics.cc
@@ -11064,22 +11064,21 @@ undocumented.\n\
           term = args(0).string_value ();
 
           if (! error_state)
             {
               file = args(1).string_value ();
 
               if (! error_state)
                 {
-                  size_t pos = file.find_first_not_of ("|");
-                  if (pos != std::string::npos)
-                    file = file.substr (pos);
+                  if (! file.empty () && file[0] == '|')
+                    file = file.substr (1);  // Strip leading pipe character
                   else
                     {
-                      pos = file.find_last_of (file_ops::dir_sep_chars ());
+                      size_t pos = file.find_last_of (file_ops::dir_sep_chars ());
 
                       if (pos != std::string::npos)
                         {
                           std::string dirname = file.substr (0, pos+1);
 
                           file_stat fs (dirname);
 
                           if (! (fs && fs.is_dir ()))
diff --git a/libinterp/dldfcn/__osmesa_print__.cc b/libinterp/dldfcn/__osmesa_print__.cc
--- a/libinterp/dldfcn/__osmesa_print__.cc
+++ b/libinterp/dldfcn/__osmesa_print__.cc
@@ -177,21 +177,20 @@ instead.\n\
   if (nargin == 3)
     {
       // use gl2ps
       std::string file = args(1).string_value ();
       std::string term = args(2).string_value ();
 
       if (! error_state)
         {
-          size_t pos = file.find_first_not_of ("|");
-          if (pos != std::string::npos)
+          if (! file.empty () && file[0] == '|')
             {
               // create process and pipe gl2ps output to it
-              std::string cmd = file.substr (pos);
+              std::string cmd = file.substr (1);
               gl2ps_print (fobj, cmd, term);
             }
           else
             {
               // write gl2ps output directly to file
               FILE *filep = gnulib::fopen (file.c_str (), "w");
 
               if (filep)
