# HG changeset patch
# User jwe
# Date 1017771948 0
#      Tue Apr 02 18:25:48 2002 +0000
# Node ID c8c1ead8474f966d4bf2b2e466bcf1ad5d05a177
# Parent  c34d631dee186f28c7c73a143e2a5a0109eb75d7
[project @ 2002-04-02 18:25:48 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,18 @@
+2002-04-02  Paul Kienzle <pkienzle@users.sf.net>
+
+	* plot/contour.m: Set default number of levels for contour(x,y,z).
+
+	* control/system/starp.m: Leave more of the documentation
+	processing to texinfo and less to the @format block.
+
+	* image/imagesc.m: Only display image if no output is requested.
+	Code tidying.
+
 2002-03-07  Paul Kienzle  <pkienzle@kienzle.powernet.co.uk>
  
  	* statistics/base/center.m: Accept and return empty matrix.
  	
 2002-02-22  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* specfun/erfinv.m: Fix usage message.
 
diff --git a/scripts/control/system/starp.m b/scripts/control/system/starp.m
--- a/scripts/control/system/starp.m
+++ b/scripts/control/system/starp.m
@@ -12,21 +12,19 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {} starp (@var{inputs})
+## @deftypefn {Function File} {} starp (@var{P}, @var{K}, @var{ny}, @var{nu})
 ## @format
 ##
-## sys = starp(P, K, ny, nu)
-##
 ## Redheffer star product or upper/lower LFT, respectively.
 ##
 ##
 ##                +-------+
 ##      --------->|       |--------->
 ##                |   P   |
 ##           +--->|       |---+  ny
 ##           |    +-------+   |
diff --git a/scripts/image/imagesc.m b/scripts/image/imagesc.m
--- a/scripts/image/imagesc.m
+++ b/scripts/image/imagesc.m
@@ -29,42 +29,41 @@
 ## @var{x} and @var{y}.  At present they are ignored.
 ## @end deftypefn
 ## @seealso{image and imshow}
 
 ## Author: Tony Richardson <arichard@stark.cc.oh.us>
 ## Created: July 1994
 ## Adapted-By: jwe
 
-function B = imagesc (x, y, A, zoom)
+function ret = imagesc (x, y, A, zoom)
 
   if (nargin < 1 || nargin > 4)
     usage ("imagesc (matrix, zoom) or imagesc (x, y, matrix, zoom)");
   elseif (nargin == 1)
     A = x;
     zoom = [];
     x = y = [];
   elseif (nargin == 2)
     A = x;
     zoom = y;
     x = y = [];
   elseif (nargin == 3)
     zoom = [];
   endif
 
-  [high, wide] = size (A);
-
-  maxval = max (max (A));
-  minval = min (min (A));
-
-  ## Rescale matrix so that all values are in the range 0 to
-  ## length (colormap) inclusive.
+  maxval = max (A(:));
+  minval = min (A(:));
 
   if (maxval == minval)
-    B = ones (high, wide);
+    B = ones (size (A));
   else
     ## Rescale values to between 1 and length (colormap) inclusive.
     B = round ((A - minval) / (maxval - minval) * (rows (colormap) - 1)) + 1;
   endif
 
-  image (x, y, B, zoom);
+  if (nargout == 0)
+    image (x, y, B, zoom);
+  else
+    ret = B;
+  endif
 
 endfunction
diff --git a/scripts/plot/contour.m b/scripts/plot/contour.m
--- a/scripts/plot/contour.m
+++ b/scripts/plot/contour.m
@@ -57,17 +57,20 @@ function contour (x, y, z, n)
       endif
       eval (command);
       gset noparametric;
       gset view 0, 0, 1, 1;
       gsplot z w l 1;
     else
       error ("contour: argument must be a matrix");
     endif
-  elseif (nargin == 4)
+  elseif (nargin == 3 || nargin == 4)
+    if (nargin == 3)
+      n = 10;
+    endif
     if (is_vector (x) && is_vector (y) && is_matrix (z))
       xlen = length (x);
       ylen = length (y);
       if (xlen == rows (z) && ylen == columns (z))
         if (rows (x) == 1)
           x = x';
         endif
         len = 3 * ylen;
@@ -99,12 +102,12 @@ function contour (x, y, z, n)
         msg = "contour: rows (z) must be the same as length (x) and";
         msg = sprintf ("%s\ncolumns (z) must be the same as length (y)", msg);
         error (msg);
       endif
     else
       error ("contour: x and y must be vectors and z must be a matrix");
     endif
   else
-    usage ("contour (z, levels, x, y)");
+    usage ("contour (z, x, y, levels)");
   endif
 
 endfunction
