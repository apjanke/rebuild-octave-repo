# HG changeset patch
# User Rik <rik@octave.org>
# Date 1528923893 25200
#      Wed Jun 13 14:04:53 2018 -0700
# Node ID 7a6e35d987bb47578703fd43d31e317ee3015662
# Parent  9ef52c25d543ec4e0286e7d03f316dc6507a5525
bitset.m: Expand third argument to match input size if necessary (bug #54110).

* bitset.m: If third argument val is a scalar, but input A is not, expand val
to size of A.  Add BIST tests for correct behavior.

diff --git a/scripts/general/bitset.m b/scripts/general/bitset.m
--- a/scripts/general/bitset.m
+++ b/scripts/general/bitset.m
@@ -44,16 +44,23 @@ function C = bitset (A, n, val)
   if (any (A(:) < 0))
     error ("bitset: A must be >= 0");
   endif
 
   sz = size (A);
 
   if (nargin == 2)
     val = true (sz);
+  elseif (isscalar (val) && ! isscalar (A))
+    ## Expand last argument to match size of input
+    if (val)
+      val = true (sz);
+    else
+      val = false (sz);
+    endif
   endif
 
   cl = class (A);
 
   if (isfloat (A) && isreal (A))
     Bmax = flintmax (cl);
     Amax = ceil (log2 (Bmax));
   elseif (isinteger (A))
@@ -97,17 +104,22 @@ endfunction
 %! for i = 1:2
 %!   for prec = [8, 16, 32, 64]
 %!     fcn = str2func (sprintf ("%sint%d", pfx{i}, prec));
 %!     assert (bitset (fcn ([0, 10]), [3, 3]), fcn ([4, 14]));
 %!   endfor
 %! endfor
 
 %!assert <*36458> (bitset (uint8 ([1, 2;3 4]), 1, [0 1; 0 1]),
-%!                uint8 ([0, 3; 2 5]))
+%!                 uint8 ([0, 3; 2 5]))
+
+%!assert (bitset (1:5, 1), [1, 3, 3, 5, 5])
+%!assert (bitset (1:5, 1, [1, 1, 1, 1, 1]), [1, 3, 3, 5, 5])
+%!assert <*54110> (bitset (1:5, 1, 1), [1, 3, 3, 5, 5])
+%!assert (bitset (1:5, 1, [1, 1, 1, 1, 0]), [1, 3, 3, 5, 4])
 
 %!error bitset (1)
 %!error bitset (1, 2, 3, 4)
 %!error <A must be .= 0> bitset (-1, 2)
 %!error <invalid class char> bitset ("1", 2)
 %!error <N must be in the range \[1,53\]> bitset (0, 0)
 %!error <N must be in the range \[1,53\]> bitset (0, 55)
 %!error <N must be in the range \[1,24\]> bitset (single (0), 0)
