# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1363335249 14400
#      Fri Mar 15 04:14:09 2013 -0400
# Node ID 0723ea02dcdbffa958de813dec978f024340eea5
# Parent  6aafe87a314421f9f8866d6061ef64ad010ae20d
use intptr_t instead of long

* lo-sysdep.cc (octave_popen2) Use intptr_t instead of long.
* kpse.cc (KPSE_DEBUG_FOPEN): Likewise.

diff --git a/liboctave/system/lo-sysdep.cc b/liboctave/system/lo-sysdep.cc
--- a/liboctave/system/lo-sysdep.cc
+++ b/liboctave/system/lo-sysdep.cc
@@ -109,18 +109,18 @@ octave_popen2 (const std::string& cmd, c
       msg = "popen2: pipe creation failed";
       return -1;
     }
   if (! sync_mode)
     {
       pipeMode = PIPE_NOWAIT;
       SetNamedPipeHandleState (parentRead, &pipeMode, 0, 0);
     }
-  fildes[1] = _open_osfhandle (reinterpret_cast<long> (parentRead), _O_RDONLY | _O_BINARY);
-  fildes[0] = _open_osfhandle (reinterpret_cast<long> (parentWrite), _O_WRONLY | _O_BINARY);
+  fildes[1] = _open_osfhandle (reinterpret_cast<intptr_t> (parentRead), _O_RDONLY | _O_BINARY);
+  fildes[0] = _open_osfhandle (reinterpret_cast<intptr_t> (parentWrite), _O_WRONLY | _O_BINARY);
   si.dwFlags |= STARTF_USESTDHANDLES;
   si.hStdInput = childRead;
   si.hStdOutput = childWrite;
 
   // Ignore first arg as it is the command
   for (int k=1; k<args.length (); k++)
     command += " \"" + args[k] + "\"";
   OCTAVE_LOCAL_BUFFER (char, c_command, command.length () + 1);
diff --git a/liboctave/util/kpse.cc b/liboctave/util/kpse.cc
--- a/liboctave/util/kpse.cc
+++ b/liboctave/util/kpse.cc
@@ -359,17 +359,17 @@ xfopen (const std::string& filename, con
 
   f = gnulib::fopen (filename.c_str (), mode);
 
   if (! f)
     FATAL_PERROR (filename.c_str ());
 
   if (KPSE_DEBUG_P (KPSE_DEBUG_FOPEN))
     DEBUGF3 ("fopen (%s, %s) => 0x%lx\n", filename.c_str (), mode,
-             reinterpret_cast<unsigned long> (f));
+             reinterpret_cast<intptr_t> (f));
 
   return f;
 }
 
 /* A single (key,value) pair.  */
 
 struct hash_element_type
 {
