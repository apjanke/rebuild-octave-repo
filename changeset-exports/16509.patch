# HG changeset patch
# User John Donoghue <john.donoghue@ieee.org>
# Date 1365817919 14400
#      Fri Apr 12 21:51:59 2013 -0400
# Node ID 14045b872a3d63fa6960847c9b4e520f85d34612
# Parent  f19e24c97b204bbfb051ac9d32bf244388ddc7f1
Add set current directory context menu to file browser

* libgui/src/files-dock-widget.cc, libgui/src/files-dock-widget.h
(files_dock_widget::contextmenu_requested): New menu item for
setting current directory.
(files_dock_widget::contextmenu_setcurrentdir): New function.

diff --git a/libgui/src/files-dock-widget.cc b/libgui/src/files-dock-widget.cc
--- a/libgui/src/files-dock-widget.cc
+++ b/libgui/src/files-dock-widget.cc
@@ -290,16 +290,23 @@ files_dock_widget::contextmenu_requested
       QAction *run_action = menu.addAction(
                      QIcon(":/actions/icons/artsbuilderexecute.png"), tr("Run"),
                      this, SLOT(contextmenu_run(bool)));
       run_action->setEnabled (info.isFile () && info.suffix () == "m");
       QAction *load_action = menu.addAction(tr("Load Data"),
                      this, SLOT(contextmenu_load(bool)));
       load_action->setEnabled (info.isFile ());
 
+      if (info.isDir ())
+        {
+          menu.addSeparator ();
+          menu.addAction (tr ("Set Current Directory"),
+                          this, SLOT (contextmenu_setcurrentdir (bool)));
+        }
+
       menu.addSeparator();
       menu.addAction(tr("Rename"), this, SLOT(contextmenu_rename(bool)));
       menu.addAction(QIcon(":/actions/icons/editdelete.png"), tr("Delete"),
                      this, SLOT(contextmenu_delete(bool)));
 
       menu.addSeparator();
       QAction *new_file_action = menu.addAction(
                    QIcon(":/actions/icons/filenew.png"),
@@ -476,18 +483,34 @@ files_dock_widget::contextmenu_newdir (b
                                        QLineEdit::Normal, "New Directory", &ok);
       if(ok && name.length()>0)
         {
           _file_system_model->mkdir(index, name);
         }
     }
 }
 
+void 
+files_dock_widget::contextmenu_setcurrentdir (bool)
+{
+  QItemSelectionModel *m = _file_tree_view->selectionModel ();
+  QModelIndexList rows = m->selectedRows ();
 
+  if(rows.size() > 0)
+    {
+      QModelIndex index = rows[0];
 
+      QFileInfo info = _file_system_model->fileInfo(index);
+
+      if(info.isDir())
+        {
+          emit displayed_directory_changed (info.absoluteFilePath ());
+        }
+    }
+}
 
 void
 files_dock_widget::notice_settings (const QSettings *settings)
 {
   // Qsettings pointer is checked before emitting.
 
   // file names are always shown, other columns can be hidden by settings
   _file_tree_view->setColumnHidden (0, false);
diff --git a/libgui/src/files-dock-widget.h b/libgui/src/files-dock-widget.h
--- a/libgui/src/files-dock-widget.h
+++ b/libgui/src/files-dock-widget.h
@@ -86,16 +86,17 @@ private slots:
   /* context menu actions */
   void contextmenu_open (bool);
   void contextmenu_run (bool);
   void contextmenu_load (bool);
   void contextmenu_rename (bool);
   void contextmenu_delete (bool);
   void contextmenu_newfile (bool);
   void contextmenu_newdir (bool);
+  void contextmenu_setcurrentdir (bool);
 
 signals:
 
   /** Emitted, whenever the user requested to open a file. */
   void open_file (const QString& fileName);
 
   /** Emitted, whenever the currently displayed directory changed. */
   void displayed_directory_changed (const QString& dir);
