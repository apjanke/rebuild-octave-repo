# HG changeset patch
# User Mike Miller <mtmiller@octave.org>
# Date 1546553708 28800
#      Thu Jan 03 14:15:08 2019 -0800
# Branch stable
# Node ID 4166610a41bc9f39e403b6ca24e58243aee7054f
# Parent  c36321a88d17d0d9674f60d599b8db2f7bcc83d7
do not include private file oct-opengl.h in public headers (bug #55277)

* gl-render.cc (opengl_renderer::get_string): Move HAVE_OPENGL conditional
inside function definition.
* gl-render.h: Do not include oct-opengl.h, add forward decl of
opengl_functions, delete HAVE_OPENGL conditional from public header.
* gl2ps-print.h: Do not include oct-opengl.h, add forward decl of
opengl_functions.

diff --git a/libinterp/corefcn/gl-render.cc b/libinterp/corefcn/gl-render.cc
--- a/libinterp/corefcn/gl-render.cc
+++ b/libinterp/corefcn/gl-render.cc
@@ -4481,33 +4481,43 @@ namespace octave
     // This shouldn't happen because construction of opengl_renderer
     // objects is supposed to be impossible if OpenGL is not available.
 
     panic_impossible ();
 
 #endif
   }
 
+  std::string
+  opengl_renderer::get_string (unsigned int id) const
+  {
 #if defined (HAVE_OPENGL)
 
-  std::string
-  opengl_renderer::get_string (GLenum id) const
-  {
     // This is kind of ugly, but glGetString returns a pointer to GLubyte
     // and there is no std::string constructor that matches.  Is there a
     // better way?
 
     std::ostringstream buf;
 
-    buf << m_glfcns.glGetString (id);
+    buf << m_glfcns.glGetString (static_cast<GLenum> (id));
 
     return std::string (buf.str ());
-  }
+
+#else
+
+    octave_unused_parameter (id);
+
+    // This shouldn't happen because construction of opengl_renderer
+    // objects is supposed to be impossible if OpenGL is not available.
+
+    panic_impossible ();
+    return std::string ();
 
 #endif
+  }
 
   void
   opengl_renderer::set_normal (int bfl_mode, const NDArray& n, int j, int i)
   {
 #if defined (HAVE_OPENGL)
 
     double x = n(j,i,0);
     double y = n(j,i,1);
diff --git a/libinterp/corefcn/gl-render.h b/libinterp/corefcn/gl-render.h
--- a/libinterp/corefcn/gl-render.h
+++ b/libinterp/corefcn/gl-render.h
@@ -21,21 +21,22 @@ along with Octave; see the file COPYING.
 */
 
 #if ! defined (octave_gl_render_h)
 #define octave_gl_render_h 1
 
 #include "octave-config.h"
 
 #include "graphics.h"
-#include "oct-opengl.h"
 #include "text-renderer.h"
 
 namespace octave
 {
+  class opengl_functions;
+
   class
   OCTINTERP_API
   opengl_renderer
   {
   public:
 
     opengl_renderer (opengl_functions& glfcns);
 
@@ -163,19 +164,17 @@ namespace octave
                                    int& wmax, int& hmax);
 
     virtual void draw_zoom_rect (int x1, int y1, int x2, int y2);
 
   private:
 
     void init_maxlights (void);
 
-#if defined (HAVE_OPENGL)
-    std::string get_string (GLenum id) const;
-#endif
+    std::string get_string (unsigned int id) const;
 
     bool is_nan_or_inf (double x, double y, double z) const
     {
       return (math::isnan (x) || math::isnan (y)
               || math::isnan (z)
               || math::isinf (x) || math::isinf (y)
               || math::isinf (z));
     }
diff --git a/libinterp/corefcn/gl2ps-print.h b/libinterp/corefcn/gl2ps-print.h
--- a/libinterp/corefcn/gl2ps-print.h
+++ b/libinterp/corefcn/gl2ps-print.h
@@ -22,19 +22,20 @@ along with Octave; see the file COPYING.
 
 #if ! defined (octave_gl2ps_renderer_h)
 #define octave_gl2ps_renderer_h 1
 
 #include "octave-config.h"
 
 #include <string>
 
-#include "oct-opengl.h"
 #include "graphics.h"
 
 namespace octave
 {
+  class opengl_functions;
+
   extern OCTINTERP_API void
   gl2ps_print (opengl_functions& glfcns, const graphics_object& fig,
                const std::string& stream, const std::string& term);
 }
 
 #endif
