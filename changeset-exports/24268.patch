# HG changeset patch
# User CarnÃ« Draug <carandraug@octave.org>
# Date 1510937622 0
#      Fri Nov 17 16:53:42 2017 +0000
# Node ID 94c4ebecca6e4f51d407479d99c0c6e7ccd454e7
# Parent  ba51a6fd6a18cba889bdbc894ff6cb5eee835c2d
scripts/specfun/perms.m: fix return type and size for empty arrays (bug #52432)

diff --git a/scripts/specfun/perms.m b/scripts/specfun/perms.m
--- a/scripts/specfun/perms.m
+++ b/scripts/specfun/perms.m
@@ -55,24 +55,23 @@ function A = perms (v)
 
   if (nargin != 1)
     print_usage ();
   endif
 
   if (! (isreal (v) || iscomplex (v)))
     error ("perms: V must be a numeric, char, or logical vector");
   endif
-
   v = sort (reshape (v, 1, []), "descend");
   n = length (v);
 
   if (n < 4)    # special cases for small n
     switch (n)
       case 0
-        A = [];
+        A = reshape (v, 1, 0);
       case 1
         A = v;
       case 2
         A = [v;v([2 1])];
       case 3
         A = v([1, 2, 3; 1, 3, 2; 2, 1, 3; 2, 3, 1; 3, 1, 2; 3, 2, 1]);
     endswitch
   else
@@ -102,40 +101,49 @@ function A = perms (v)
       A((1:f)+(i-1)*f, 2:end) = b(idx);
     end
   endif
 
 endfunction
 
 
 %!assert (rows (perms (1:6)), factorial (6))
-%!assert (perms ([]), [])
 %!assert (perms (pi), pi)
 %!assert (perms ([pi, e]), [pi, e; e, pi])
 %!assert (perms ([1,2,3]), [3,2,1;3,1,2;2,3,1;2,1,3;1,3,2;1,2,3])
 %!assert (perms (1:5), perms ([2 5 4 1 3]'))
 %!assert (perms ("abc"), char ("cba", "cab", "bca", "bac", "acb", "abc"))
 %!assert (perms ("fobar"), sortrows (unique (perms ("fobar"), "rows"), -(1:5)))
 %!assert (unique (perms (1:5)(:))', 1:5)
 %!assert (perms (int8 (1:4)), int8 (perms (1:4)))
 
 %!error perms ()
 %!error perms (1, 2)
 
 ## Should work for any array type, such as cells and structs, and not
 ## only for numeric data.
 %!test <52431>
 %! assert (perms ({1}), {1})
-%! assert (perms ({}), cell (1, 0))
 %! assert (perms ({0.1, "foo"}),
 %!         {"foo", 0.1; 0.1, "foo"})
 %! assert (perms ({"foo", 0.1}),
 %!         {0.1, "foo"; "foo", 0.1})
 %! assert (perms ({"foo"; 0.1}),
 %!         {0.1, "foo"; "foo", 0.1})
 %! assert (perms ({0.1; "foo"}),
 %!         {"foo", 0.1; 0.1, "foo"})
 %!
 %! assert (perms (struct ()), struct ())
 %! assert (perms (struct ("foo", {1, 2})),
 %!         struct ("foo", {2, 1; 1, 2}))
 %! assert (perms (struct ("foo", {1, 2}, "bar", {3, 4})),
 %!         struct ("foo", {2, 1; 1, 2}, "bar", {4, 3; 3, 4}))
+
+%!test <52432>
+%! assert (perms ([]), reshape ([], 1, 0))
+%! assert (perms (single ([])), reshape (single ([]), 1, 0))
+%! assert (perms (int8 ([])), reshape (int8 ([]), 1, 0))
+%! assert (perms ({}), cell (1, 0))
+%!
+%! s = struct ();
+%! s(1) = [];
+%! assert (perms (reshape (s, 0, 0)), reshape (s, 1, 0))
+%! assert (perms (reshape (s, 0, 1)), reshape (s, 1, 0))
