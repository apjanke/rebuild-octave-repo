# HG changeset patch
# User jwe
# Date 1197485075 0
#      Wed Dec 12 18:44:35 2007 +0000
# Node ID 28a9e3d3bf143c6510b3d4c5426f372f217323b6
# Parent  e1e9bb54a4407dc519e6ed603aac963a196b832d
[project @ 2007-12-12 18:44:35 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2007-12-12  John W. Eaton  <jwe@octave.org>
+
+	* plot/__go_draw_axes__.m: Handle the axes layer property.
+
 2007-12-12  David Bateman  <dbateman@free.fr>
 
 	* plot/ellipsoid.m: Port from octave-forge, editing for style.
 	* plot/Makefile.in (SOURCES): Add to the sources.
 
 2007-12-11  John W. Eaton  <jwe@octave.org>
 
 	* plot/surf.m: Set xgrid, ygrid, and zgrid on here.
diff --git a/scripts/plot/__go_draw_axes__.m b/scripts/plot/__go_draw_axes__.m
--- a/scripts/plot/__go_draw_axes__.m
+++ b/scripts/plot/__go_draw_axes__.m
@@ -236,19 +236,23 @@ function __go_draw_axes__ (h, plot_strea
     if (strcmpi (axis_obj.zminorgrid, "on"))
       have_grid = true;
       fputs (plot_stream, "set mztics 5;\n");
       fputs (plot_stream, "set grid mztics;\n");
     else
       fputs (plot_stream, "set grid nomztics;\n");
     endif
 
-    ## Unless we force the grid to the front, tics may appear below
-    ## plotted objects.
-    fputs (plot_stream, "set grid front;\n");
+    ## The grid front/back/layerdefault option also controls the
+    ## appearance of tics, so it is used even if the grid is absent.
+    if (strcmpi (axis_obj.layer, "top"))
+      fputs (plot_stream, "set grid front;\n");
+    else
+      fputs (plot_stream, "set grid layerdefault;\n");
+    endif
     if (! have_grid)
       fputs (plot_stream, "unset grid;\n");
     endif
 
     do_tics (axis_obj, plot_stream, ymirror, mono);
 
     xlogscale = strcmpi (axis_obj.xscale, "log");
     if (xlogscale)
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,13 @@
 2007-12-12  John W. Eaton  <jwe@octave.org>
 
+	* graphics.h.in (class axes) Add the layer property.
+	* graphics.cc (class axes) Ditto.
+
 	* graphics.cc (gh_manager::get_handle): Use ceil instead of trunc.
 
 2007-12-11  John W. Eaton  <jwe@octave.org>
 
 	* version.h (OCTAVE_VERSION): Now 2.9.19+.
 
 2007-12-11  John W. Eaton  <jwe@octave.org>
 
diff --git a/src/graphics.cc b/src/graphics.cc
--- a/src/graphics.cc
+++ b/src/graphics.cc
@@ -1093,16 +1093,17 @@ axes::properties::properties (const grap
     title (octave_NaN),
     box ("on"),
     key ("off"),
     keybox ("off"),
     keypos (1),
     colororder (default_colororder ()),
     dataaspectratio (Matrix (1, 3, 1.0)),
     dataaspectratiomode ("auto"),
+    layer (radio_values ("{bottom}|top")),
     xlim (),
     ylim (),
     zlim (),
     clim (),
     xlimmode (radio_values ("{auto}|manual")),
     ylimmode (radio_values ("{auto}|manual")),
     zlimmode (radio_values ("{auto}|manual")),
     climmode (radio_values ("{auto}|manual")),
@@ -1258,16 +1259,18 @@ axes::properties::set (const caseless_st
   else if (name.compare ("keypos"))
     set_keypos (val);
   else if (name.compare ("colororder"))
     set_colororder (val);
   else if (name.compare ("dataaspectratio"))
     set_dataaspectratio (val);
   else if (name.compare ("dataaspectratiomode"))
     set_dataaspectratiomode (val);
+  else if (name.compare ("layer"))
+    set_layer (val);
   else if (name.compare ("xlim"))
     set_xlim (val);
   else if (name.compare ("ylim"))
     set_ylim (val);
   else if (name.compare ("zlim"))
     set_zlim (val);
   else if (name.compare ("clim"))
     set_clim (val);
@@ -1375,16 +1378,17 @@ axes::properties::set_defaults (base_gra
   title = octave_NaN;
   box = "on";
   key = "off";
   keybox = "off";
   keypos = 1;
   colororder = default_colororder ();
   dataaspectratio = Matrix (1, 3, 1.0);
   dataaspectratiomode = "auto";
+  layer = radio_property (radio_values ("{bottom}|top"));
 
   Matrix tlim (1, 2, 0.0);
   tlim(1) = 1;
   xlim = tlim;
   ylim = tlim;
   zlim = tlim;
   
   Matrix cl (1, 2, 0);
@@ -1507,16 +1511,17 @@ axes::properties::get (void) const
   m.assign ("title", get_title().as_octave_value ());
   m.assign ("box", box);
   m.assign ("key", key);
   m.assign ("keybox", keybox);
   m.assign ("keypos", keypos);
   m.assign ("colororder", colororder);
   m.assign ("dataaspectratio", dataaspectratio);
   m.assign ("dataaspectratiomode", dataaspectratiomode);
+  m.assign ("layer", layer);
   m.assign ("xlim", xlim);
   m.assign ("ylim", ylim);
   m.assign ("zlim", zlim);
   m.assign ("clim", clim);
   m.assign ("xlimmode", xlimmode);
   m.assign ("ylimmode", ylimmode);
   m.assign ("zlimmode", zlimmode);
   m.assign ("climmode", climmode);
@@ -1591,16 +1596,18 @@ axes::properties::get (const caseless_st
   else if (name.compare ("keypos"))
     retval = keypos;
   else if (name.compare ("colororder"))
     retval = colororder;
   else if (name.compare ("dataaspectratio"))
     retval = dataaspectratio;
   else if (name.compare ("dataaspectratiomode"))
     retval = dataaspectratiomode;
+  else if (name.compare ("layer"))
+    retval = layer;
   else if (name.compare ("xlim"))
     retval = xlim;
   else if (name.compare ("ylim"))
     retval = ylim;
   else if (name.compare ("zlim"))
     retval = zlim;
   else if (name.compare ("clim"))
     retval = clim;
@@ -1731,16 +1738,17 @@ axes::properties::factory_defaults (void
   m["title"] = octave_NaN;
   m["box"] = "on";
   m["key"] = "off";
   m["keybox"] = "off";
   m["keypos"] = 1;
   m["colororder"] = default_colororder ();
   m["dataaspectratio"] = Matrix (1, 3, 1.0);
   m["dataaspectratiomode"] = "auto";
+  m["layer"] = radio_property (radio_values ("{bottom}|top"));
 
   Matrix tlim (1, 2, 0.0);
   tlim(1) = 1;
 
   m["xlim"] = tlim;
   m["ylim"] = tlim;
   m["zlim"] = tlim;
   
diff --git a/src/graphics.h.in b/src/graphics.h.in
--- a/src/graphics.h.in
+++ b/src/graphics.h.in
@@ -1355,16 +1355,17 @@ public:
       mutable graphics_handle title GSO
       octave_value box
       octave_value key
       octave_value keybox
       octave_value keypos
       octave_value colororder
       octave_value dataaspectratio m
       octave_value dataaspectratiomode
+      radio_property layer a
       octave_value xlim m
       octave_value ylim m
       octave_value zlim m
       octave_value clim m
       radio_property xlimmode al
       radio_property ylimmode al
       radio_property zlimmode al
       radio_property climmode al
