# HG changeset patch
# User Torsten <mttl@mailbox.org>
# Date 1532856633 -7200
#      Sun Jul 29 11:30:33 2018 +0200
# Node ID 9a385fab138eca18f29b1e1c3dd95865fc05812b
# Parent  ba8227df92ae491a18c5a3cf13d94ab4bebdc825
allow the gui to insert builtin functions into the cmd queue

* octave-cmd.cc (octave_cmd_builtin::execute) method of the new command class
  for actually executing the builtin function

* octave-cmd.h: new class octave_cmd_builtin derived from octave_cmd,
  (octave_cmd_builtin): ctor with initialization of new class variables

diff --git a/libgui/src/octave-cmd.cc b/libgui/src/octave-cmd.cc
--- a/libgui/src/octave-cmd.cc
+++ b/libgui/src/octave-cmd.cc
@@ -70,16 +70,21 @@ namespace octave
       }
 
     command_editor::set_initial_input (pending_input);
     command_editor::redisplay ();
 
     command_editor::accept_line ();
   }
 
+  void octave_cmd_builtin::execute (interpreter& interp)
+  {
+    m_callback_f (interp, m_argin, m_nargin);
+  }
+
   void octave_cmd_debug::execute (interpreter& interp)
   {
     if (m_cmd == "step")
       {
         F__db_next_breakpoint_quiet__ (interp, ovl (m_suppress_dbg_location));
         Fdbstep (interp);
       }
     else if (m_cmd == "cont")
diff --git a/libgui/src/octave-cmd.h b/libgui/src/octave-cmd.h
--- a/libgui/src/octave-cmd.h
+++ b/libgui/src/octave-cmd.h
@@ -26,16 +26,18 @@ along with Octave; see the file COPYING.
 #define octave_octave_cmd_h 1
 
 #include <QSemaphore>
 #include <QMutex>
 #include <QString>
 #include <QFileInfo>
 
 #include "octave-qt-link.h"
+#include "ovl.h"
+
 
 namespace octave
 {
   class interpreter;
 
   class octave_cmd
   {
   public:
@@ -68,16 +70,50 @@ namespace octave
 
     void execute (interpreter& interp);
 
   protected:
 
     QFileInfo m_info;
   };
 
+  class octave_cmd_builtin : public octave_cmd
+  {
+    public:
+
+    enum cmd_upd {
+      CMD_UPD_NO        = 0,
+    };
+
+    octave_cmd_builtin (octave_value_list (*Ff)
+                         (octave::interpreter&, const octave_value_list&, int),
+                        octave_value_list argin = ovl (), int nargin = 0,
+                        cmd_upd update = CMD_UPD_NO,
+                        octave_qt_link *oct_qt_link = nullptr)
+      : octave_cmd ()
+    {
+      m_callback_f = Ff;
+      m_argin  = argin;
+      m_nargin = nargin;
+      m_update = update;  // later: some built in functions require updates
+      m_octave_qt_link = oct_qt_link; // octave_qt_link might be required
+    };
+
+    void execute (interpreter& interp);
+
+  protected:
+
+    octave_value_list (*m_callback_f) (
+                        octave::interpreter&, const octave_value_list&, int);
+    octave_value_list m_argin;
+    int m_nargin;
+    cmd_upd m_update;
+    octave_qt_link *m_octave_qt_link;
+  };
+
   class octave_cmd_debug : public octave_cmd_exec
   {
   public:
 
     octave_cmd_debug (const QString& cmd, bool suppress_location)
       : octave_cmd_exec (cmd), m_suppress_dbg_location (suppress_location) { }
 
     void execute (interpreter& interp);
