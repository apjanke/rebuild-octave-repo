# HG changeset patch
# User Michael Goffioul <michael.goffioul@gmail.com>
# Date 1352080069 0
#      Mon Nov 05 01:47:49 2012 +0000
# Node ID 5f031158c693184c9e357da77a492e4e3f55272e
# Parent  6e780fb15c14586afaf56f4328b29d04828845ce
Use pkg-config to discover Qt (pkg-config is already a requirement anyway).

* build-aux/common.mk (do_subst_config_vals): Replace QT_INCDIR and QT_LIBDIR
with QT_CPPFLAGS, QT_LDFLAGS and QT_LIBS.
* configure.ac: Likewise and use pkg-config to discover the new variables.
* libgui/Makefile.am (QT_INCDIR, QT_LIBDIR, QT_LIBS, QT_LDFLAGS): Delete
variable definitions.
* libgui/link-deps.mk (LIBOCTGUI_LINK_DEPS): Use automake @QT_LIBS@.
(LIBOCTGUI_LIK_OPTS): Use automake @QT_LDFLAGS@.
* libgui/qterminal-module.mk (qterminal_libqterminal_la_CPPFLAGS): Use
automake @QT_CPPFLAGS@ instead of QT_INCDIR-based include paths.
(MOC_CPPFLAGS): Define Q_OS_WIN32 instead of WIN32.
* libgui/src/module.mk (src_libgui_src_la_CPPFLAGS): Use automake
@QT_CPPFLAGS@ instead of QT_INCDIR-based include paths.
* libinterp/interpfcn/toplev.cc (Foctave_config_info): Replace QT_INCDIR and
QT_LIBDIR with QT_CPPFLAGS, QT_LDFLAGS and QT_LIBS.
* libinterp/oct-conf.in.h: Replace OCTAVE_CONF_QT_INCDIR and
OCTAVE_CONF_QT_LIBDIR with OCTAVE_CONF_QT_CPPFLAGS, OCTAVE_CONF_QT_LDFLAGS
and OCTAVE_CONF_QT_LIBS.
* m4/acinclude.m4 (OCTAVE_CHECK_FUNC_FINDFIRST_MODERN,
OCTAVE_CHECK_FUNC_SETPLACEHOLDERTEXT): Use QT_CPPFLAGS instead of QT_INCDIR.

diff --git a/build-aux/common.mk b/build-aux/common.mk
--- a/build-aux/common.mk
+++ b/build-aux/common.mk
@@ -571,18 +571,19 @@ echo "making $@ from $<"
   -e "s|%OCTAVE_CONF_PTHREAD_CFLAGS%|\"${PTHREAD_CFLAGS}\"|" \
   -e "s|%OCTAVE_CONF_PTHREAD_LIBS%|\"${PTHREAD_LIBS}\"|" \
   -e "s|%OCTAVE_CONF_QHULL_CPPFLAGS%|\"${QHULL_CPPFLAGSS}\"|" \
   -e "s|%OCTAVE_CONF_QHULL_LDFLAGS%|\"${QHULL_LDFLAGSS}\"|" \
   -e "s|%OCTAVE_CONF_QHULL_LIBS%|\"${QHULL_LIBS}\"|" \
   -e "s|%OCTAVE_CONF_QRUPDATE_CPPFLAGS%|\"${QRUPDATE_CPPFLAGS}\"|" \
   -e "s|%OCTAVE_CONF_QRUPDATE_LDFLAGS%|\"${QRUPDATE_LDFLAGS}\"|" \
   -e "s|%OCTAVE_CONF_QRUPDATE_LIBS%|\"${QRUPDATE_LIBS}\"|" \
-  -e "s|%OCTAVE_CONF_QT_INCDIR%|\"${QT_INCDIR}\"|" \
-  -e "s|%OCTAVE_CONF_QT_LIBDIR%|\"${QT_LIBDIR}\"|" \
+  -e "s|%OCTAVE_CONF_QT_CPPFLAGS%|\"${QT_CPPFLAGS}\"|" \
+  -e "s|%OCTAVE_CONF_QT_LDFLAGS%|\"${QT_LDFLAGS}\"|" \
+  -e "s|%OCTAVE_CONF_QT_LIBS%|\"${QT_LIBS}\"|" \
   -e "s|%OCTAVE_CONF_RANLIB%|\"${RANLIB}\"|" \
   -e "s|%OCTAVE_CONF_RDYNAMIC_FLAG%|\"${RDYNAMIC_FLAG}\"|" \
   -e "s|%OCTAVE_CONF_READLINE_LIBS%|\"${READLINE_LIBS}\"|" \
   -e "s|%OCTAVE_CONF_REGEX_LIBS%|\"${REGEX_LIBS}\"|" \
   -e "s|%OCTAVE_CONF_SED%|\"${SED}\"|" \
   -e "s|%OCTAVE_CONF_SHARED_LIBS%|\"${SHARED_LIBS}\"|" \
   -e "s|%OCTAVE_CONF_SHLEXT%|\"${SHLEXT}\"|" \
   -e "s|%OCTAVE_CONF_SHLLINKEXT%|\"${SHLLINKEXT}\"|" \
diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -2174,80 +2174,81 @@ if $try_strict_warning_flags; then
 fi
 
 AC_SUBST(WARN_CFLAGS)
 AC_SUBST(WARN_CXXFLAGS)
 
 ### GUI/Qt related tests.
 
 HAVE_QT=false
-QT_INCDIR=
-QT_LIBDIR=
+QT_CPPFLAGS=
+QT_LDFLAGS=
+QT_LIBS=
 win32_terminal=no
 build_gui=true
 GUIDIR=libgui
 AC_ARG_ENABLE([gui],
   [AS_HELP_STRING([--disable-gui], [don't build the GUI])],
   [if test "$enableval" = no; then build_gui=false; fi], [])
 
 if test $build_gui = true; then
   ## Check for Qt libraries
   PKG_CHECK_MODULES(QT, [QtCore, QtGui, QtNetwork],
     [],
     [AC_MSG_ERROR([Qt libraries are required to build the GUI])])
 
-  ## Check for Qt utility programs
-  AC_CHECK_PROGS(QMAKE, [qmake-qt5 qmake-qt4 qmake])
-  if test -z "$QMAKE"; then
-    AC_MSG_ERROR([qmake is required to build the GUI])
-  fi
+  ## Retrieve Qt compilation and linker flags
+  QT_CPPFLAGS="`$PKG_CONFIG --cflags-only-I QtCore QtGui QtNetwork`"
+  QT_LDFLAGS="`$PKG_CONFIG --libs-only-L QtCore QtGui QtNetwork`"
+  QT_LIBS="`$PKG_CONFIG --libs-only-l QtCore QtGui QtNetwork`"
 
-  QT_INCDIR=`$QMAKE -query QT_INSTALL_HEADERS | sed -e 's,\\\\,/,g'`
-  QT_LIBDIR=`$QMAKE -query QT_INSTALL_LIBS | sed -e 's,\\\\,/,g'`
-
-  if test "$QT_INCDIR" = "**Unknown**"; then
-    AC_MSG_ERROR([qmake >= Qt4 is required to build the GUI])
+  ## Check for Qt4
+  if ! `$PKG_CONFIG --atleast-version=4.0.0 QtCore`; then
+    AC_MSG_ERROR([Qt >= 4.0.0 is required to build the GUI])
   fi
 
   AC_CHECK_PROGS(MOC, [moc-qt5 moc-qt4 moc])
   AC_CHECK_PROGS(UIC, [uic-qt5 uic-qt4 uic])
   AC_CHECK_PROGS(RCC, [rcc])
   if test -z "$MOC" || test -z "$UIC" || test -z "$RCC"; then
     AC_MSG_ERROR([Qt utility programs moc, uic, and rcc are required to build the GUI])
   fi 
 
   HAVE_QT=true
   AC_DEFINE(HAVE_QT, 1, 
-    [Define to 1 if Qt is available (libraries, developer header files, utility programs (qmake, moc, uic, and rcc))])
+    [Define to 1 if Qt is available (libraries, developer header files, utility programs (moc, uic, and rcc))])
 
   ## Check for Qscintilla library which is used in the GUI editor. 
   AC_CACHE_CHECK([whether Qscintilla library is installed],
     [octave_cv_lib_qscintilla],
     [save_CPPFLAGS="$CPPFLAGS"
     save_LDFLAGS="$LDFLAGS"
     save_LIBS="$LIBS"
-    CPPFLAGS="-I$QT_INCDIR -I$QT_INCDIR/Qt $CPPFLAGS"
-    LDFLAGS="-L$QT_LIBDIR $LDFLAGS"
-    LIBS="-lqscintilla2"
+    CPPFLAGS="$QT_CPPFLAGS $CPPFLAGS"
+    LDFLAGS="$QT_LDFLAGS $LDFLAGS"
+    LIBS="$QT_LIBS -lqscintilla2"
     AC_LANG_PUSH(C++)
     AC_LINK_IFELSE([AC_LANG_PROGRAM([[
       #include <Qsci/qscilexersql.h>
       ]], [[
       QsciLexerSQL sqlLexer(0);
       ]])],
       octave_cv_lib_qscintilla=yes,
       octave_cv_lib_qscintilla=no)
     CPPFLAGS="$save_CPPFLAGS"
     LDFLAGS="$save_LDFLAGS"
     LIBS="$save_LIBS"
     AC_LANG_POP([C++])
   ])
   if test $octave_cv_lib_qscintilla = no; then
     AC_MSG_ERROR([Qscintilla library is required to build the GUI])
   fi
+  ## Let's assume Qscintilla library is at the same location as
+  ## other regular Qt libraries.
+  QT_LIBS="$QT_LIBS -lqscintilla2"
 
   ## Check for Qt functions which have changed their API over time
   OCTAVE_CHECK_FUNC_FINDFIRST_MODERN
   OCTAVE_CHECK_FUNC_SETPLACEHOLDERTEXT
 
   AC_CHECK_FUNCS([setlocale], [],
                  [AC_MSG_ERROR([Missing function required to build GUI])])
 
@@ -2266,18 +2267,19 @@ if test $build_gui = true; then
       ;;
   esac
 else
   ## GUI disabled.  Eliminate building GUIDIR directory
   GUIDIR=
 fi
 AM_CONDITIONAL([AMCOND_BUILD_GUI], [test $build_gui = true])
 AM_CONDITIONAL([WIN32_TERMINAL], [test $win32_terminal = yes])
-AC_SUBST(QT_INCDIR)
-AC_SUBST(QT_LIBDIR)
+AC_SUBST(QT_CPPFLAGS)
+AC_SUBST(QT_LDFLAGS)
+AC_SUBST(QT_LIBS)
 AC_SUBST(GUIDIR)
 
 ### Run configure in subdirectories.
 
 export CC
 export CXX
 export F77
 
@@ -2544,18 +2546,19 @@ Octave is now configured for $canonical_
   PTHREAD flags:               $PTHREAD_CFLAGS
   PTHREAD libraries:           $PTHREAD_LIBS
   QHULL CPPFLAGS:              $QHULL_CPPFLAGS
   QHULL LDFLAGS:               $QHULL_LDFLAGS
   QHULL libraries:             $QHULL_LIBS
   QRUPDATE CPPFLAGS:           $QRUPDATE_CPPFLAGS
   QRUPDATE LDFLAGS:            $QRUPDATE_LDFLAGS
   QRUPDATE libraries:          $QRUPDATE_LIBS
-  Qt headers:                  $QT_INCDIR
-  Qt libraries:                $QT_LIBDIR
+  Qt CPPFLAGS:                 $QT_CPPFLAGS
+  Qt LDFLAGS:                  $QT_LDFLAGS
+  Qt libraries:                $QT_LIBS
   READLINE libraries:          $READLINE_LIBS
   REGEX libraries:             $REGEX_LIBS
   TERM libraries:              $TERM_LIBS
   UMFPACK CPPFLAGS:            $UMFPACK_CPPFLAGS
   UMFPACK LDFLAGS:             $UMFPACK_LDFLAGS
   UMFPACK libraries:           $UMFPACK_LIBS
   X11 include flags:           $X11_INCFLAGS
   X11 libraries:               $X11_LIBS
diff --git a/libgui/Makefile.am b/libgui/Makefile.am
--- a/libgui/Makefile.am
+++ b/libgui/Makefile.am
@@ -17,24 +17,16 @@
 # You should have received a copy of the GNU General Public License
 # along with Octave; see the file COPYING.  If not, see
 # <http://www.gnu.org/licenses/>.
 
 include $(top_srcdir)/build-aux/common.mk
 
 AUTOMAKE_OPTIONS = subdir-objects
 
-QT_INCDIR = @QT_INCDIR@
-
-QT_LIBDIR = @QT_LIBDIR@
-
-QT_LIBS = -lQtCore -lQtGui -lQtNetwork -lqscintilla2
-
-QT_LDFLAGS = -L$(QT_LIBDIR)
-
 MOC_CPPFLAGS =
 
 octlib_LTLIBRARIES = liboctgui.la
 
 EXTRA_DIST = default-qt-settings
 
 CLEANFILES =
 
diff --git a/libgui/link-deps.mk b/libgui/link-deps.mk
--- a/libgui/link-deps.mk
+++ b/libgui/link-deps.mk
@@ -2,20 +2,20 @@ include $(top_srcdir)/libinterp/link-dep
 
 if AMCOND_ENABLE_DYNAMIC_LINKING
   LIBOCTGUI_LINK_DEPS =
 else
   LIBOCTGUI_LINK_DEPS = $(DLDFCN_LIBS)
 endif
 
 LIBOCTGUI_LINK_DEPS += \
-  $(QT_LIBS)
+  @QT_LIBS@
 
 LIBOCTGUI_LINK_OPTS = \
-  $(QT_LDFLAGS)
+  @QT_LDFLAGS@
 
 if AMCOND_LINK_ALL_DEPS
   LIBOCTGUI_LINK_DEPS += $(LIBOCTINTERP_LINK_DEPS)
   LIBOCTGUI_LINK_OPTS += $(LIBOCTINTERP_LINK_OPTS)
 
   OCTAVE_GUI_LINK_DEPS = $(LIBOCTGUI_LINK_DEPS)
   OCTAVE_GUI_LINK_OPTS = $(LIBOCTGUI_LINK_OPTS)
 endif
diff --git a/libgui/qterminal-module.mk b/libgui/qterminal-module.mk
--- a/libgui/qterminal-module.mk
+++ b/libgui/qterminal-module.mk
@@ -30,19 +30,17 @@ noinst_HEADERS += \
 qterminal_libqterminal_la_MOC = \
   qterminal/libqterminal/moc-QTerminal.cc \
   qterminal/libqterminal/moc-QTerminalInterface.cc
 
 nodist_qterminal_libqterminal_la_SOURCES = $(qterminal_libqterminal_la_MOC)
 
 qterminal_libqterminal_la_CPPFLAGS = \
   $(AM_CPPFLAGS) \
-  -I$(QT_INCDIR) \
-  -I$(QT_INCDIR)/QtCore \
-  -I$(QT_INCDIR)/QtGui \
+  @QT_CPPFLAGS@ \
   -I$(srcdir)/qterminal/libqterminal
 
 qterminal_libqterminal_la_CFLAGS = $(AM_CFLAGS)
 
 qterminal_libqterminal_la_CXXFLAGS = $(AM_CXXFLAGS)
 
 if WIN32_TERMINAL
 
@@ -51,17 +49,17 @@ qterminal_libqterminal_la_SOURCES = \
   qterminal/libqterminal/win32/QWinTerminalImpl.cpp
 
 qterminal_libqterminal_la_MOC += \
   qterminal/libqterminal/win32/moc-QWinTerminalImpl.cc
 
 qterminal_libqterminal_la_CPPFLAGS += -DUNICODE
 
 # This flag is required to let MOC know about Q_OS_WIN32.
-MOC_CPPFLAGS += -DWIN32
+MOC_CPPFLAGS += -DQ_OS_WIN32
 
 else
 
 qterminal_libqterminal_la_SOURCES = \
   qterminal/libqterminal/unix/BlockArray.cpp \
   qterminal/libqterminal/unix/Emulation.cpp \
   qterminal/libqterminal/unix/Filter.cpp \
   qterminal/libqterminal/unix/History.cpp \
diff --git a/libgui/src/module.mk b/libgui/src/module.mk
--- a/libgui/src/module.mk
+++ b/libgui/src/module.mk
@@ -121,20 +121,17 @@ src_libgui_src_la_SOURCES = \
   src/workspace-model.cc \
   src/workspace-view.cc
 
 nodist_src_libgui_src_la_SOURCES = $(octave_gui_MOC) $(octave_gui_RC)
 
 src_libgui_src_la_CPPFLAGS = \
   $(AM_CPPFLAGS) \
   @OCTGUI_DLL_DEFS@ \
-  -I$(QT_INCDIR) \
-  -I$(QT_INCDIR)/QtCore \
-  -I$(QT_INCDIR)/QtGui \
-  -I$(QT_INCDIR)/QtNetwork \
+  @QT_CPPFLAGS@ \
   -I$(srcdir)/qterminal/libqterminal \
   -Isrc -I$(srcdir)/src \
   -I$(srcdir)/src/m-editor \
   -I$(srcdir)/src/octave-adapter \
   -I$(srcdir)/src/qtinfo \
   -I$(top_srcdir)/liboctave/cruft/misc \
   -I$(top_srcdir)/liboctave/array \
   -I$(top_builddir)/liboctave/numeric -I$(top_srcdir)/liboctave/numeric \
diff --git a/libinterp/interpfcn/toplev.cc b/libinterp/interpfcn/toplev.cc
--- a/libinterp/interpfcn/toplev.cc
+++ b/libinterp/interpfcn/toplev.cc
@@ -1341,18 +1341,19 @@ specified option.\n\
       { false, "PTHREAD_CFLAGS", OCTAVE_CONF_PTHREAD_CFLAGS },
       { false, "PTHREAD_LIBS", OCTAVE_CONF_PTHREAD_LIBS },
       { false, "QHULL_CPPFLAGS", OCTAVE_CONF_QHULL_CPPFLAGS },
       { false, "QHULL_LDFLAGS", OCTAVE_CONF_QHULL_LDFLAGS },
       { false, "QHULL_LIBS", OCTAVE_CONF_QHULL_LIBS },
       { false, "QRUPDATE_CPPFLAGS", OCTAVE_CONF_QRUPDATE_CPPFLAGS },
       { false, "QRUPDATE_LDFLAGS", OCTAVE_CONF_QRUPDATE_LDFLAGS },
       { false, "QRUPDATE_LIBS", OCTAVE_CONF_QRUPDATE_LIBS },
-      { false, "QT_INCDIR", OCTAVE_CONF_QT_INCDIR },
-      { false, "QT_LIBDIR", OCTAVE_CONF_QT_LIBDIR },
+      { false, "QT_CPPFLAGS", OCTAVE_CONF_QT_CPPFLAGS },
+      { false, "QT_LDFLAGS", OCTAVE_CONF_QT_LDFLAGS },
+      { false, "QT_LIBS", OCTAVE_CONF_QT_LIBS },
       { false, "RANLIB", OCTAVE_CONF_RANLIB },
       { false, "RDYNAMIC_FLAG", OCTAVE_CONF_RDYNAMIC_FLAG },
       { false, "READLINE_LIBS", OCTAVE_CONF_READLINE_LIBS },
       { false, "REGEX_LIBS", OCTAVE_CONF_REGEX_LIBS },
       { false, "SED", OCTAVE_CONF_SED },
       { false, "SHARED_LIBS", OCTAVE_CONF_SHARED_LIBS },
       { false, "SHLEXT", OCTAVE_CONF_SHLEXT },
       { false, "SHLEXT_VER", OCTAVE_CONF_SHLEXT_VER },
diff --git a/libinterp/oct-conf.in.h b/libinterp/oct-conf.in.h
--- a/libinterp/oct-conf.in.h
+++ b/libinterp/oct-conf.in.h
@@ -477,22 +477,26 @@ along with Octave; see the file COPYING.
 #ifndef OCTAVE_CONF_QRUPDATE_LDFLAGS
 #define OCTAVE_CONF_QRUPDATE_LDFLAGS %OCTAVE_CONF_QRUPDATE_LDFLAGS%
 #endif
 
 #ifndef OCTAVE_CONF_QRUPDATE_LIBS
 #define OCTAVE_CONF_QRUPDATE_LIBS %OCTAVE_CONF_QRUPDATE_LIBS%
 #endif
 
-#ifndef OCTAVE_CONF_QT_INCDIR
-#define OCTAVE_CONF_QT_INCDIR %OCTAVE_CONF_QT_INCDIR%
+#ifndef OCTAVE_CONF_QT_CPPFLAGS
+#define OCTAVE_CONF_QT_CPPFLAGS %OCTAVE_CONF_QT_CPPFLAGS%
 #endif
 
-#ifndef OCTAVE_CONF_QT_LIBDIR
-#define OCTAVE_CONF_QT_LIBDIR %OCTAVE_CONF_QT_LIBDIR%
+#ifndef OCTAVE_CONF_QT_LDFLAGS
+#define OCTAVE_CONF_QT_LDFLAGS %OCTAVE_CONF_QT_LDFLAGS%
+#endif
+
+#ifndef OCTAVE_CONF_QT_LIBS
+#define OCTAVE_CONF_QT_LIBS %OCTAVE_CONF_QT_LIBS%
 #endif
 
 #ifndef OCTAVE_CONF_RANLIB
 #define OCTAVE_CONF_RANLIB %OCTAVE_CONF_RANLIB%
 #endif
 
 #ifndef OCTAVE_CONF_RDYNAMIC_FLAG
 #define OCTAVE_CONF_RDYNAMIC_FLAG %OCTAVE_CONF_RDYNAMIC_FLAG%
diff --git a/m4/acinclude.m4 b/m4/acinclude.m4
--- a/m4/acinclude.m4
+++ b/m4/acinclude.m4
@@ -148,17 +148,17 @@ dnl new (17 inputs).
 dnl FIXME: This test uses a version number.  It potentially could
 dnl        be re-written to actually call the function, but is it worth it?
 dnl
 AC_DEFUN([OCTAVE_CHECK_FUNC_FINDFIRST_MODERN], [
   AC_CACHE_CHECK([whether Qscintilla FindFirst uses 17 input arguments],
     [octave_cv_func_findfirst_modern],
     [AC_LANG_PUSH(C++)
     ac_octave_save_CPPFLAGS="$CPPFLAGS"
-    CPPFLAGS="-I$QT_INCDIR -I$QT_INCDIR/Qt $CPPFLAGS"
+    CPPFLAGS="$QT_CPPFLAGS $CPPFLAGS"
     AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
         #include <Qsci/qsciglobal.h>
         ]], [[
         #if QSCINTILLA_VERSION < 0x020600
         #error Old FindFirst function found.
         #endif
         ]])],
       octave_cv_func_findfirst_modern=yes,
@@ -226,17 +226,17 @@ dnl Check whether Qscintilla SetPlacehol
 dnl FIXME: This test uses a version number.  It potentially could
 dnl        be re-written to actually call the function, but is it worth it?
 dnl
 AC_DEFUN([OCTAVE_CHECK_FUNC_SETPLACEHOLDERTEXT], [
   AC_CACHE_CHECK([whether Qt has SetPlaceholderText function],
     [octave_cv_func_setplaceholdertext],
     [AC_LANG_PUSH(C++)
     ac_octave_save_CPPFLAGS="$CPPFLAGS"
-    CPPFLAGS="-I$QT_INCDIR $CPPFLAGS"
+    CPPFLAGS="$QT_CPPFLAGS $CPPFLAGS"
     AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
         #include <Qt/qglobal.h>
         ]], [[
         #if QT_VERSION < 0x040700
         #error No SetPlacholderText function available.
         #endif
         ]])],
       octave_cv_func_setplaceholdertext=yes,
