# HG changeset patch
# User Philipp Kutin <philipp.kutin@gmail.com>
# Date 1375872870 -7200
#      Wed Aug 07 12:54:30 2013 +0200
# Node ID aada14bf74ed2835e1c3866f07b121ad2ec25c51
# Parent  af2051e363ea2a65ff6a7dbec8e9c59c7a12cd99
randmtzig.c: prevent left-shift of a 1 into sign bit in oct_init_by_entropy().

* randmtzig.c: in expression "word[0] + ... + (word[3]<<24)", cast the latter
  to uint32_t before shifting, preventing (C99) undefined behavior.

diff --git a/liboctave/numeric/randmtzig.c b/liboctave/numeric/randmtzig.c
--- a/liboctave/numeric/randmtzig.c
+++ b/liboctave/numeric/randmtzig.c
@@ -263,17 +263,17 @@ oct_init_by_entropy (void)
     FILE* urandom = fopen ("/dev/urandom", "rb");
     if (urandom)
       {
         while (n < MT_N)
           {
             unsigned char word[4];
             if (fread (word, 4, 1, urandom) != 1)
               break;
-            entropy[n++] = word[0]+(word[1]<<8)+(word[2]<<16)+(word[3]<<24);
+            entropy[n++] = word[0]+(word[1]<<8)+(word[2]<<16)+((uint32_t)word[3]<<24);
           }
         fclose (urandom);
       }
 
     /* If there isn't enough entropy, gather some from various sources */
     if (n < MT_N)
       entropy[n++] = time (NULL); /* Current time in seconds */
     if (n < MT_N)
