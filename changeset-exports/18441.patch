# HG changeset patch
# User Michael Goffioul <michael.goffioul@gmail.com>
# Date 1391905045 18000
#      Sat Feb 08 19:17:25 2014 -0500
# Node ID b0aba84cf80fb3958d696ee8e685059aeaf3c32c
# Parent  96a4958130471a6ecaeb7e36d61a60313dcae4e4
Support handle to classdef constructor.

* ov-classdef.cc (octave_classdef_meta::is_classdef_constructor): New
method, makes the meta-object to look like a cdef constructor.
* ov-fcn-handle.cc (make_fcn_handle): Handle classdef constructors like
legacy class constructors.

diff --git a/libinterp/octave-value/ov-classdef.cc b/libinterp/octave-value/ov-classdef.cc
--- a/libinterp/octave-value/ov-classdef.cc
+++ b/libinterp/octave-value/ov-classdef.cc
@@ -1124,16 +1124,37 @@ public:
       std::string type ("(");
 
       return subsref (type, l, nargout);
     }
 
   bool is_postfix_index_handled (char type) const
     { return object.meta_is_postfix_index_handled (type); }
 
+  bool
+  is_classdef_constructor (const std::string& cname = std::string ()) const
+    {
+      bool retval = false;
+
+      if (object.is_class ())
+        {
+          if (cname.empty ())
+            retval = true;
+          else
+            {
+              cdef_class cls (object);
+
+              if (cls.get_name () == cname)
+                retval = true;
+            }
+        }
+
+      return retval;
+    }
+
 private:
   cdef_meta_object object;
 };
 
 //----------------------------------------------------------------------------
 
 class octave_classdef_superclass_ref : public octave_function
 {
diff --git a/libinterp/octave-value/ov-fcn-handle.cc b/libinterp/octave-value/ov-fcn-handle.cc
--- a/libinterp/octave-value/ov-fcn-handle.cc
+++ b/libinterp/octave-value/ov-fcn-handle.cc
@@ -1568,17 +1568,18 @@ make_fcn_handle (const std::string& nm, 
                                                 local_funcs);
 
   octave_function *fptr = f.function_value (true);
 
   // Here we are just looking to see if FCN is a method or constructor
   // for any class.
   if (local_funcs && fptr
       && (fptr->is_subfunction () || fptr->is_private_function ()
-          || fptr->is_class_constructor ()))
+          || fptr->is_class_constructor ()
+          || fptr->is_classdef_constructor ()))
     {
       // Locally visible function.
       retval = octave_value (new octave_fcn_handle (f, tnm));
     }
   else
     {
       // Globally visible (or no match yet). Query overloads.
       std::list<std::string> classes = load_path::overloads (tnm);
