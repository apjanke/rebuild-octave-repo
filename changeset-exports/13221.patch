# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1316993047 25200
#      Sun Sep 25 16:24:07 2011 -0700
# Branch stable
# Node ID cc6e9425c04e071b8cbd413e7020c7335acc13df
# Parent  88bd1d1d66575b9da92f923641bfe9e40f77bc1c
errorbar plots can now accept a legend key (Bug #33580).

__errplot__.m: Borrow code from __plt__ for putting legend on plot
when it is included in linespec.

diff --git a/scripts/plot/private/__errplot__.m b/scripts/plot/private/__errplot__.m
--- a/scripts/plot/private/__errplot__.m
+++ b/scripts/plot/private/__errplot__.m
@@ -26,17 +26,17 @@
 ## Keywords: errorbar, plotting
 
 function h = __errplot__ (fstr, p, varargin)
 
   if (nargin < 4 || nargin > 8) # at least two data arguments needed
     print_usage ();
   endif
 
-  [fmt, key] = __pltopt__ ("__errplot__", fstr);
+  [fmt, valid] = __pltopt__ ("__errplot__", fstr);
 
   [len, nplots] = size (varargin{1});
   h = [];
 
   for i = 1:nplots
     ## Set the plot type based on linestyle.
 
     if (strcmp (fmt.errorstyle, "~"))
@@ -69,34 +69,34 @@ function h = __errplot__ (fstr, p, varar
     hl = [(__line__ (hg, "linestyle", fmt.linestyle, "marker", fmt.marker,
                    "color", fmt.color)),
           (__line__ (hg, "linestyle", "-", "marker", "none",
                    "color", fmt.color))];
 
     switch (numel(varargin))
       case 2
         ydata = varargin{1}(:,i);
-        xdata = 1:numel(ydata);
+        xdata = 1:numel (ydata);
         if (strcmp (ifmt, "xerr") || strcmp (ifmt, "box"))
           xldata = varargin{2}(:,i);
           xudata = ldata;
           ldata = [];
           udata = [];
         elseif (strcmp (ifmt, "yerr") || strcmp (ifmt, "boxy"))
           ldata = varargin{2}(:,i);
           udata = ldata;
           xldata = [];
           xudata = [];
         else
-          error ("errorbar: 2 column errorplot is only valid or xerr or yerr");
+          error ("errorbar: 2 column errorplot is only valid for xerr or yerr");
         endif
       case 3
         if (strcmp (ifmt, "boxxy") || strcmp (ifmt, "xyerr"))
           ydata = varargin{1}(:,i);
-          xdata = 1:numel(ydata);
+          xdata = 1:numel (ydata);
           xldata = varargin{2}(:,i);
           xudata = xldata;
           ldata = varargin{3}(:,i);
           udata = ldata;
         elseif (strcmp (ifmt, "xerr") || strcmp (ifmt, "box"))
           xdata = varargin{1}(:,i);
           ydata = varargin{2}(:,i);
           xldata = varargin{3}(:,i);
@@ -141,17 +141,17 @@ function h = __errplot__ (fstr, p, varar
           xldata = varargin{3}(:,i);
           xudata = varargin{4}(:,i);
           ldata = varargin{5}(:,i);
           udata = varargin{6}(:,i);
         else
           error ("errorbar: error plot with 6 columns only valid for boxxy and xyerr");
         endif
       otherwise
-        error ("errorbar: error plot requires 2, 3, 4 or 6 arguments");
+        error ("errorbar: error plot requires 2, 3, 4, or 6 arguments");
     endswitch
 
     addproperty ("xdata", hg, "data", xdata(:));
     addproperty ("ydata", hg, "data", ydata(:));
     addproperty ("ldata", hg, "data", ldata(:));
     addproperty ("udata", hg, "data", udata(:));
     addproperty ("xldata", hg, "data", xldata(:));
     addproperty ("xudata", hg, "data", xudata(:));
@@ -188,16 +188,44 @@ function h = __errplot__ (fstr, p, varar
     hax = ancestor (hg, "axes");
     addlistener (hax, "xscale", fcn);
     addlistener (hax, "yscale", fcn);
 
     update_data (hg, [], hl);
 
   endfor
 
+  ## Process legend key
+  if (! isempty (fmt.key))    
+    hlegend = [];
+    fkids = get (gcf(), "children");
+    for i = 1 : numel (fkids)
+      if (ishandle (fkids(i)) && strcmp (get (fkids(i), "type"), "axes")
+          && (strcmp (get (fkids(i), "tag"), "legend")))
+        udata = get (fkids(i), "userdata");
+        if (! isempty (intersect (udata.handle, gca ())))
+          hlegend = fkids (i);
+          break;
+        endif
+      endif
+    endfor
+
+    if (isempty (hlegend))
+      hlgnd = [];
+      tlgnd = {};
+    else
+      [hlgnd, tlgnd] = __getlegenddata__ (hlegend);
+    endif
+ 
+    hlgnd(end+1) = hg;
+    tlgnd(end+1) = fmt.key;
+
+    legend (gca(), hlgnd, tlgnd);
+  end 
+
 endfunction
 
 function [xdata, ydata] = errorbar_data (xdata, ydata, ldata, udata,
                                          xldata, xudata, ifmt,
                                          xscale, yscale)
   if (strcmp (xscale, "linear"))
     dx = 0.01 * (max (xdata(:)) - min (xdata(:)));
     xlo = xdata - dx;
@@ -254,18 +282,20 @@ function [xdata, ydata] = errorbar_data 
     [x2, y2] = errorbar_data (xdata, ydata, ldata, udata,
                               xldata, xudata, "yerr", xscale, yscale);
     xdata = [x1; x2];
     ydata = [y1; y2];
     return
   else
     error ("errorbar: valid error bar types are xerr, yerr, boxxy, and xyerr");
   endif
+
   xdata = xdata.'(:);
   ydata = ydata.'(:);
+
 endfunction
 
 function update_props (hg, dummy, hl)
   set (hl, "color", get (hg, "color"),
            "linewidth", get (hg, "linewidth"));,
   set (hl(1), "linestyle", get (hg, "linestyle"),
               "marker", get (hg, "marker"),
               "markersize", get (hg, "markersize"),
