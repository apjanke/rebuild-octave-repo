# HG changeset patch
# User Torsten <ttl@justmail.de>
# Date 1367871833 -7200
#      Mon May 06 22:23:53 2013 +0200
# Node ID 9c0487bb205b6616a9064d9835ab939312aaab5c
# Parent  38fef1e833ea22d39c4c57c7c75d2fce2c9c14ec
save and restore last used tabs of the settings dialog

* settings-dialog.cc(constructor): restore last used tab from settings
  (read_lexer_settings): restore last used lexer tab from settings
  (write_changed_settings): save last used tab
  (write_lexer_settings): save last used lexer tab

diff --git a/libgui/src/settings-dialog.cc b/libgui/src/settings-dialog.cc
--- a/libgui/src/settings-dialog.cc
+++ b/libgui/src/settings-dialog.cc
@@ -149,17 +149,19 @@ settings_dialog::settings_dialog (QWidge
   read_lexer_settings (lexer,settings);
   delete lexer;
   lexer = new QsciLexerDiff ();
   read_lexer_settings (lexer,settings);
   delete lexer;
   lexer = new QsciLexerBash ();
   read_lexer_settings (lexer,settings);
   delete lexer;
-#endif    
+#endif
+
+  ui->tabWidget->setCurrentIndex (settings->value("settings/last_tab",0).toInt ());
 }
 
 settings_dialog::~settings_dialog ()
 {
   delete ui;
 }
 
 
@@ -243,16 +245,19 @@ settings_dialog::read_lexer_settings (Qs
     }
   // place grid with elements into the tab
   QScrollArea *scroll_area = new QScrollArea ();
   QWidget *scroll_area_contents = new QWidget ();
   scroll_area_contents->setObjectName (QString (lexer->language ())+"_styles");
   scroll_area_contents->setLayout (style_grid);
   scroll_area->setWidget (scroll_area_contents);
   ui->tabs_editor_styles->addTab (scroll_area,lexer->language ());
+
+  ui->tabs_editor_styles->setCurrentIndex (
+          settings->value("settings/last_editor_styles_tab",0).toInt ());
 }
 #endif  
 
 void
 settings_dialog::read_workspace_colors (QSettings *settings)
 {
 
   QList<QColor> default_colors = resource_manager::storage_class_default_colors ();
@@ -405,16 +410,18 @@ settings_dialog::write_changed_settings 
   lexer = new QsciLexerBash ();
   write_lexer_settings (lexer,settings);
   delete lexer;
 #endif
 
   write_workspace_colors (settings);
 
   write_terminal_colors (settings);
+
+  settings->setValue("settings/last_tab",ui->tabWidget->currentIndex ());
 }
 
 #ifdef HAVE_QSCINTILLA
 void
 settings_dialog::write_lexer_settings (QsciLexer *lexer, QSettings *settings)
 {
   QWidget *tab = ui->tabs_editor_styles->
             findChild <QWidget *>(QString (lexer->language ())+"_styles");
@@ -463,16 +470,19 @@ settings_dialog::write_lexer_settings (Q
         new_font.setUnderline (attrib_font[2]->isChecked ());
       lexer->setFont (new_font,styles[i]);
       if (styles[i] == 0)
         lexer->setDefaultFont (new_font);
       if (color)
         lexer->setColor (color->color (),styles[i]);
     }
   lexer->writeSettings (*settings);
+
+  settings->setValue (
+    "settings/last_editor_styles_tab",ui->tabs_editor_styles->currentIndex ());
 }
 #endif
 
 void
 settings_dialog::write_workspace_colors (QSettings *settings)
 {
 
   QString class_chars = resource_manager::storage_class_chars ();
