# HG changeset patch
# User Kai T. Ohlhus <k.ohlhus@gmail.com>
# Date 1487348794 -3600
#      Fri Feb 17 17:26:34 2017 +0100
# Node ID 94f04d8172eb7fbf55b7ac2f7d61a5b71e6fa877
# Parent  5f79bb3fdd2873469d7b48021680be7b7cb086b6
# Parent  d222db279c21a5fa0aa8fe4ea8fc4d7e12960f89
maint: merge of stable to default.

diff --git a/libgui/graphics/Canvas.cc b/libgui/graphics/Canvas.cc
--- a/libgui/graphics/Canvas.cc
+++ b/libgui/graphics/Canvas.cc
@@ -369,28 +369,38 @@ namespace QtHandles
     octave_scalar_map zm = ov_zm.scalar_map_value ();
 
     return zm.contents ("Motion").string_value ();
   }
 
   void
   Canvas::select_object (graphics_object obj, QMouseEvent* event,
                          graphics_object &currentObj, graphics_object &axesObj,
-                         bool axes_only)
+                         bool axes_only, std::vector<std::string> omit)
   {
     QList<graphics_object> axesList;
     Matrix children = obj.get_properties ().get_all_children ();
     octave_idx_type num_children = children.numel ();
 
     for (int i = 0; i < num_children; i++)
       {
         graphics_object childObj (gh_manager::get_object (children(i)));
 
         if (childObj.isa ("axes"))
-          axesList.append (childObj);
+          {
+            auto p = omit.begin ();
+            bool omitfound = false;
+            while (p != omit.end () && ! omitfound)
+              {
+                omitfound = (childObj.get ("tag").string_value () == *p);
+                p++;
+              }
+            if (! omitfound)
+              axesList.append (childObj);
+          }
         else if (childObj.isa ("uicontrol") || childObj.isa ("uipanel")
                  || childObj.isa ("uibuttongroup"))
           {
             Matrix bb = childObj.get_properties ().get_boundingbox (false);
             QRectF r (bb(0), bb(1), bb(2), bb(3));
 
             r.adjust (-5, -5, 5, 5);
 
@@ -540,17 +550,18 @@ namespace QtHandles
 
     // Update mouse coordinates in the figure window status bar
     graphics_object obj = gh_manager::get_object (m_handle);
     graphics_object figObj = obj.get_ancestor ("figure");
 
     if (figObj.valid_object () && obj.valid_object ())
       {
         graphics_object currentObj, axesObj;
-        select_object (obj, event, currentObj, axesObj, true);
+        std::vector<std::string> omit = {"legend", "colorbar", "scribeoverlay"};
+        select_object (obj, event, currentObj, axesObj, true, omit);
 
         if (axesObj.valid_object ())
           {
             // FIXME: should we use signal/slot mechanism instead of
             //        directly calling parent fig methods
             Figure* fig =
               dynamic_cast<Figure*> (Backend::toolkitObject (figObj));
             axes::properties& ap = Utils::properties<axes> (axesObj);
diff --git a/libgui/graphics/Canvas.h b/libgui/graphics/Canvas.h
--- a/libgui/graphics/Canvas.h
+++ b/libgui/graphics/Canvas.h
@@ -103,17 +103,18 @@ namespace QtHandles
     void updateCurrentPoint (const graphics_object& fig,
                              const graphics_object& obj, QMouseEvent *event);
     void updateCurrentPoint (const graphics_object& fig,
                              const graphics_object& obj);
 
     void annotation_callback (const octave_value_list& args);
     void select_object (graphics_object obj, QMouseEvent* event,
                         graphics_object &currentObj, graphics_object &axesObj,
-                        bool axes_only = false);
+                        bool axes_only = false, 
+                        std::vector<std::string> omit = std::vector<std::string> ());
 
   private:
     graphics_handle m_handle;
     bool m_redrawBlocked;
     MouseMode m_mouseMode;
     bool m_clickMode;              // True: ZoomIn, False: ZoomOut
     QPoint m_mouseAnchor;
     QPoint m_mouseCurrent;
diff --git a/scripts/deprecated/sleep.m b/scripts/deprecated/sleep.m
--- a/scripts/deprecated/sleep.m
+++ b/scripts/deprecated/sleep.m
@@ -12,17 +12,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 ## GNU General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn {} {} sleep (@var{seconds})\n\
+## @deftypefn {} {} sleep (@var{seconds})
 ##
 ## @code{sleep} is deprecated and will be removed in Octave version 4.6.
 ## Use @code{pause} instead.
 ##
 ## Suspend the execution of the program for the given number of seconds.
 ##
 ## @seealso{pause}
 ## @end deftypefn
diff --git a/scripts/deprecated/usleep.m b/scripts/deprecated/usleep.m
--- a/scripts/deprecated/usleep.m
+++ b/scripts/deprecated/usleep.m
@@ -12,17 +12,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 ## GNU General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn {} {} usleep (@var{microseconds})\n\
+## @deftypefn {} {} usleep (@var{microseconds})
 ##
 ## @code{usleep} is deprecated and will be removed in Octave version 4.6.
 ## Use @code{pause} instead.
 ##
 ## Suspend the execution of the program for the given number of
 ## microseconds (1e-6 seconds).
 ##
 ## @seealso{pause}
diff --git a/scripts/miscellaneous/version.m b/scripts/miscellaneous/version.m
--- a/scripts/miscellaneous/version.m
+++ b/scripts/miscellaneous/version.m
@@ -31,17 +31,17 @@
 ## @table @asis
 ## @item @qcode{"-date"}
 ## for the release date of the running build,
 ##
 ## @item @qcode{"-description"}
 ## for a description of the release (always an empty string),
 ##
 ## @item @qcode{"-release"}
-## for the name of the running build,
+## for the name of the running build (always an empty string),
 ##
 ## @item @qcode{"-java"}
 ## for version information of the Java @nospell{VM},
 ##
 ## @item @qcode{"-fftw"}
 ## for version information for the linked @sc{fftw},
 ##
 ## @item @qcode{"-blas"}
@@ -112,15 +112,18 @@ endfunction
 
 %!test
 %! [v, d] = version ();
 %! assert (v, OCTAVE_VERSION);
 %! assert (d, __octave_config_info__ ("release_date"));
 
 %!assert (version ("-date"), __octave_config_info__ ("release_date"))
 
+%!assert (version ("-description"), "")
+%!assert (version ("-release"), "")
+
 ## Test input validation
 %!error version ("-date", "-release")
 %!error [v, d] = version ("-date")
 %!error version (1)
 %!warning <option '-blas' not implemented> version ("-blas");
 %!warning <option '-lapack' not implemented> version ("-lapack");
 %!error <invalid FEATURE> version ("-foobar")
diff --git a/scripts/plot/util/print.m b/scripts/plot/util/print.m
--- a/scripts/plot/util/print.m
+++ b/scripts/plot/util/print.m
@@ -314,22 +314,26 @@ function print (varargin)
 
   opts = __print_parse_opts__ (varargin{:});
 
   folder = fileparts (opts.name);
   if (! isempty (folder) && ! exist (folder, "dir"))
     error ("print: directory %s does not exist", folder);
   endif
 
-  fid = fopen (opts.name, "w+");
+  ## Check the requested file is writable
+  do_unlink = (exist (opts.name, "file") != 2);
+  fid = fopen (opts.name, "a");
   if (fid == -1)
     error ("print: cannot open file %s for writing", opts.name);
   endif
   fclose (fid);
-  unlink (opts.name);
+  if (do_unlink)
+    unlink (opts.name);
+  endif
 
   opts.pstoedit_cmd = @pstoedit;
   opts.fig2dev_cmd = @fig2dev;
   opts.latex_standalone = @latex_standalone;
   opts.lpr_cmd = @lpr;
   opts.epstool_cmd = @epstool;
 
   if (isempty (opts.figure) || ! isfigure (opts.figure))
diff --git a/test/classdef/module.mk b/test/classdef/module.mk
--- a/test/classdef/module.mk
+++ b/test/classdef/module.mk
@@ -1,7 +1,10 @@
 classdef_TEST_FILES = \
   test/classdef/foo_method_changes_property_size.m \
   test/classdef/foo_static_method_constant_property.m \
   test/classdef/foo_value_class.m \
-  test/classdef/classdef.tst
+  test/classdef/classdef.tst \
+  test/classdef/plist_t1.m \
+  test/classdef/plist_t2.m \
+  test/classdef/plist_t3.m
 
 TEST_FILES += $(classdef_TEST_FILES)
