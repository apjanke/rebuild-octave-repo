# HG changeset patch
# User Ben Abbott <bpabbott@mac.com>
# Date 1284841171 14400
#      Sat Sep 18 16:19:31 2010 -0400
# Node ID 9e1270a84a101e93bf4da5bbafec91793a1dbffa
# Parent  061bd86a0bf3f0dc04ef6d6aa2b9349c61bf43e2
graphics.cc: Replace pagetype property value custom with <custom>.

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,12 @@
+2010-09-18  Ben Abbott <bpabbott@mac.com>
+
+	* graphics.cc: Replace pagetype property value custom with <custom>.
+
 2010-09-16  David Bateman  <dbateman@free.fr>
 
 	* graphics.cc (static Matrix screen_size_pixels (void), static Matrix
 	papersize_from_type (const caseless_str, const caseless_str))): New
 	functions.
 	(void figure::properties::set_paperunits (const octave_value&),
 	void figure::properties::set_papertype (const octave_value&),
 	void figure::properties::update_paperunits (const caseless_str&))
diff --git a/src/graphics.cc b/src/graphics.cc
--- a/src/graphics.cc
+++ b/src/graphics.cc
@@ -2814,17 +2814,17 @@ void
 figure::properties::set_paperunits (const octave_value& v)
 {
   if (! error_state)
     {
       caseless_str typ = get_papertype ();
       caseless_str punits = v.string_value ();
       if (! error_state)
         {
-          if (punits.compare ("normalized") && typ.compare ("custom"))
+          if (punits.compare ("normalized") && typ.compare ("<custom>"))
             error ("set: can't set the paperunits to normalized when the papertype is custom");
           else
             {
               caseless_str old_paperunits = get_paperunits ();
               if (paperunits.set (v, true))
                 {
                   update_paperunits (old_paperunits);
                   mark_modified ();
@@ -2838,17 +2838,17 @@ void
 figure::properties::set_papertype (const octave_value& v)
 {
   if (! error_state)
     {
       caseless_str typ = v.string_value ();
       caseless_str punits = get_paperunits ();
       if (! error_state)
         {
-          if (punits.compare ("normalized") && typ.compare ("custom"))
+          if (punits.compare ("normalized") && typ.compare ("<custom>"))
             error ("set: can't set the paperunits to normalized when the papertype is custom");
           else
             {
               if (papertype.set (v, true))
                 {
                   update_papertype ();
                   mark_modified ();
                 }
@@ -3022,17 +3022,17 @@ figure::properties::update_paperunits (c
   pos (0) = pos (0) / sz(0);
   pos (1) = pos (1) / sz(1);
   pos (2) = pos (2) / sz(0);
   pos (3) = pos (3) / sz(1);
 
   caseless_str punits = get_paperunits ();
   caseless_str typ = get_papertype ();
 
-  if (typ.compare ("custom"))
+  if (typ.compare ("<custom>"))
     {
       if (old_paperunits.compare ("centimeters"))
         {
           sz (0) = sz (0) / 2.54;
           sz (1) = sz (1) / 2.54;
         }
       else if (old_paperunits.compare ("points"))
         {
@@ -3063,26 +3063,26 @@ figure::properties::update_paperunits (c
   paperposition.set (octave_value (pos));
 }
 
 void
 figure::properties::update_papertype (void)
 {
   caseless_str typ = get_papertype ();
 
-  if (! typ.compare ("custom"))
+  if (! typ.compare ("<custom>"))
     // Call papersize.set rather than set_papersize to avoid loops between 
     // update_papersize and update_papertype
     papersize.set (octave_value (papersize_from_type (get_paperunits (), typ)));
 }
 
 void
 figure::properties::update_papersize (void)
 {
-  papertype.set ("custom");
+  papertype.set ("<custom>");
 }
 
 void
 figure::properties::set_units (const octave_value& v)
 {
   if (! error_state)
     {
       caseless_str old_units = get_units ();
