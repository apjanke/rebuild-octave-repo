# HG changeset patch
# User Rik <rik@octave.org>
# Date 1504896763 25200
#      Fri Sep 08 11:52:43 2017 -0700
# Node ID 291e3a4cc4ff1141d8495588923479ddb3ccbd24
# Parent  46dc1ba54f7f494e22be0682c1de1db0f3a863f7
# Parent  7dec20b876d6dab89921ab6540d0fe7d561e6ad9
maint: merge away accidental head.

diff --git a/m4/acinclude.m4 b/m4/acinclude.m4
--- a/m4/acinclude.m4
+++ b/m4/acinclude.m4
@@ -1588,19 +1588,19 @@ c Generate -2**33 + 1.
 c Convert to default integer type.  If the values are no longer equal,
 c assume the default integer size is 32-bits.
       n = n8
       if (n .ne. n8) stop 1
        ]])],
        octave_cv_sizeof_fortran_integer=8,
        octave_cv_sizeof_fortran_integer=4,
        octave_cv_sizeof_fortran_integer=4)
+     AC_LANG_POP(Fortran 77)
+     FFLAGS="$ac_octave_save_FFLAGS"
   ])
-  AC_LANG_POP(Fortran 77)
-  FFLAGS="$ac_octave_save_FFLAGS"
 ])
 dnl
 dnl Check whether SUNDIALS IDA library is configured with double
 dnl precision realtype.
 dnl
 AC_DEFUN([OCTAVE_CHECK_SUNDIALS_SIZEOF_REALTYPE], [
   AC_CHECK_HEADERS([ida/ida.h ida.h])
   AC_CACHE_CHECK([whether SUNDIALS IDA is configured with double precision realtype],
diff --git a/scripts/polynomial/conv.m b/scripts/polynomial/conv.m
--- a/scripts/polynomial/conv.m
+++ b/scripts/polynomial/conv.m
@@ -16,29 +16,34 @@
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {} {} conv (@var{a}, @var{b})
 ## @deftypefnx {} {} conv (@var{a}, @var{b}, @var{shape})
 ## Convolve two vectors @var{a} and @var{b}.
 ##
-## The output convolution is a vector with length equal to
-## @code{length (@var{a}) + length (@var{b}) - 1}.
 ## When @var{a} and @var{b} are the coefficient vectors of two polynomials, the
 ## convolution represents the coefficient vector of the product polynomial.
 ##
-## The optional @var{shape} argument may be
+## The size of the result is determined by the optional @var{shape} argument
+## which takes the following values
 ##
 ## @table @asis
 ## @item @var{shape} = @qcode{"full"}
 ## Return the full convolution.  (default)
+## The result is a vector with length equal to
+## @code{length (@var{a}) + length (@var{b}) - 1}.
 ##
 ## @item @var{shape} = @qcode{"same"}
 ## Return the central part of the convolution with the same size as @var{a}.
+##
+## @item @var{shape} = @qcode{"valid"}
+## Return only the parts which do not include zero-padded edges.
+## The size of the result is @code{max (size (@var{a}) - size (@var{b}) + 1, 0)}.
 ## @end table
 ##
 ## @seealso{deconv, conv2, convn, fftconv}
 ## @end deftypefn
 
 ## Author: Tony Richardson <arichard@stark.cc.oh.us>
 ## Created: June 1994
 ## Adapted-By: jwe
