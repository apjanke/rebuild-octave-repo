# HG changeset patch
# User Rik <rik@octave.org>
# Date 1490049128 25200
#      Mon Mar 20 15:32:08 2017 -0700
# Node ID d05f688ae836dceddb765e670999849830129d0e
# Parent  ef94844a3c12a45ed37c2f24c81cdb037aad6395
dlmread: Add support for reading pure imaginary numbers (bug #50589).

* dlmread.cc: Check for both 'i' and 'j' as possible comlex number indicators.
If pure complex found, check if return data is already complex and if not,
convert it.  Add BIST test for bug #50589.

diff --git a/libinterp/corefcn/dlmread.cc b/libinterp/corefcn/dlmread.cc
--- a/libinterp/corefcn/dlmread.cc
+++ b/libinterp/corefcn/dlmread.cc
@@ -421,38 +421,45 @@ such as text, are also replaced by the @
             {
               if (tmp_stream.eof ())
                 {
                   if (iscmplx)
                     cdata(i,j++) = x;
                   else
                     rdata(i,j++) = x;
                 }
-              else if (std::toupper (tmp_stream.peek ()) == 'I')
-                {
-                  // This is to allow pure imaginary numbers.
-                  if (iscmplx)
-                    cdata(i,j++) = x;
-                  else
-                    rdata(i,j++) = x;
-                }
               else
                 {
-                  double y = octave_read_double (tmp_stream);
+                  int next_char = std::tolower (tmp_stream.peek ());
+                  if (next_char == 'i' || next_char == 'j')
+                    {
+                      // Process pure imaginary numbers.
+                      if (! iscmplx)
+                        {
+                          iscmplx = true;
+                          cdata = ComplexMatrix (rdata);
+                        }
 
-                  if (! iscmplx && y != 0.)
+                      cdata(i,j++) = Complex (0, x);
+                    }
+                  else
                     {
-                      iscmplx = true;
-                      cdata = ComplexMatrix (rdata);
-                    }
+                      double y = octave_read_double (tmp_stream);
 
-                  if (iscmplx)
-                    cdata(i,j++) = Complex (x, y);
-                  else
-                    rdata(i,j++) = x;
+                      if (! iscmplx && y != 0.)
+                        {
+                          iscmplx = true;
+                          cdata = ComplexMatrix (rdata);
+                        }
+
+                      if (iscmplx)
+                        cdata(i,j++) = Complex (x, y);
+                      else
+                        rdata(i,j++) = x;
+                    }
                 }
             }
           else if (iscmplx)
             cdata(i,j++) = empty_value;
           else
             rdata(i,j++) = empty_value;
 
           pos1 = pos2 + 1;
@@ -544,9 +551,27 @@ such as text, are also replaced by the @
 %!   assert (dlmread (file, " "), [ 0,  0, 0, 0
 %!                                  0,  1, 2, 0
 %!                                 11, 22, 0, 0
 %!                                  0,  0, 0, 0]);
 %! unwind_protect_cleanup
 %!   unlink (file);
 %! end_unwind_protect
 
+%!test <50589>
+%! file = tempname ();
+%! unwind_protect
+%!   fid = fopen (file, "wt");
+%!   fwrite (fid, "1;2;3\n");
+%!   fwrite (fid, "1i;2I;3j;4J\n");
+%!   fwrite (fid, "4;5;6\n");
+%!   fwrite (fid, "-4i;+5I;-6j;+7J\n");
+%!   fclose (fid);
+%!
+%!   assert (dlmread (file), [1, 2, 3, 0; 1i, 2i, 3i, 4i;
+%!                            4, 5, 6, 0; -4i, 5i, -6i, 7i]);
+%!   assert (dlmread (file, "", [0 0 0 3]), [1, 2, 3]);
+%!   assert (dlmread (file, "", [1 0 1 3]), [1i, 2i, 3i, 4i]);
+%! unwind_protect_cleanup
+%!   unlink (file);
+%! end_unwind_protect
+
 */
