# HG changeset patch
# User Rik <rik@octave.org>
# Date 1384970708 28800
#      Wed Nov 20 10:05:08 2013 -0800
# Node ID 3232956a6081d1d1c94f43f539f84bef39b2c8e6
# Parent  1d58abc740c0639b912f377d859d261a86621213
spline.m: Fix problem with transposed "complete" inputs (bug #40584).

* scripts/polynomial/spline.m: Orient input vector correctly for not-a-knot (n)
and "complete (n+2) inputs.  Add %!tests to check behavior.

diff --git a/scripts/polynomial/spline.m b/scripts/polynomial/spline.m
--- a/scripts/polynomial/spline.m
+++ b/scripts/polynomial/spline.m
@@ -78,22 +78,22 @@ function ret = spline (x, y, xi)
   n = length (x);
   if (n < 2)
     error ("spline: requires at least 2 points");
   endif
 
   ## Check the size and shape of y
   ndy = ndims (y);
   szy = size (y);
-  if (ndy == 2 && (szy(1) == n || szy(2) == n))
-    if (szy(2) == n)
+  if (ndy == 2 && (any (szy == n) || any (szy == n+2)))
+    if (szy(2) == n || szy(2) == n+2)
       a = y.';
     else
       a = y;
-      szy = fliplr (szy);
+      szy = szy([2 1]);
     endif
   else
     a = shiftdim (reshape (y, [prod(szy(1:end-1)), szy(end)]), 1);
   endif
 
   for k = (1:columns (a))(any (isnan (a)))
     ok = ! isnan (a(:,k));
     a(!ok,k) = spline (x(ok), a(ok,k), x(!ok));
@@ -278,23 +278,29 @@ endfunction
 %! y = [1,2,3,4];
 %! pp = spline (x,y);
 %! [x,P] = unmkpp (pp);
 %! assert (P, [3,-3,1,2], abserr);
 %!test
 %! x = [2,1];
 %! y = [1,2,3,4];
 %! pp = spline (x,y);
+%! pp2 = spline (x', y');
 %! [x,P] = unmkpp (pp);
 %! assert (P, [7,-9,1,3], abserr);
+%! assert (pp2, pp);
 %!test
 %! x = [0,1,2];
 %! y = [0,0,1,0,0];
 %! pp = spline (x,y);
+%! pp2 = spline (x', y');
 %! [x,P] = unmkpp (pp);
 %! assert (P, [-2,3,0,0;2,-3,0,1], abserr);
+%! assert (pp2, pp);
 %!test
 %! x = [0,1,2,3];
 %! y = [0,0,1,1,0,0];
 %! pp = spline (x,y);
+%! pp2 = spline (x', y');
 %! [x,P] = unmkpp (pp);
 %! assert (P, [-1,2,0,0;0,-1,1,1;1,-1,-1,1], abserr);
+%! assert (pp2, pp);
 
