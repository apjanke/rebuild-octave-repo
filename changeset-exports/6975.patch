# HG changeset patch
# User jwe
# Date 1191867824 0
#      Mon Oct 08 18:23:44 2007 +0000
# Node ID 0d11a12643f1e120fb5fa6e15c68183c4045fad0
# Parent  9e32bb1099804b5ca8bf99d3605d205fa2d894b4
[project @ 2007-10-08 18:23:44 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,14 @@
+2007-10-08  John Swensen  <jpswensen@comcast.net>
+
+	* general/num2str.m: Eliminate extra whitespace in output.
+	* strings/strtrim.m: New function.
+	* strings/Makefile.in (SOURCES): Add it to the list.
+
 2007-10-06  John W. Eaton  <jwe@octave.org>
 
 	* polynomial/residue.m: New test from test/test_poly.m.
 
 2007-10-06  Søren Hauberg  <hauberg@gmail.com>
 
 	* image/saveimage.m: Handle saving color images without a colormap.
 	* image/__img_via_file__.m: Add missing semicolon.
diff --git a/scripts/general/num2str.m b/scripts/general/num2str.m
--- a/scripts/general/num2str.m
+++ b/scripts/general/num2str.m
@@ -51,21 +51,26 @@ function retval = num2str (x, arg)
 	endif
       endif
     else
       ## Setup a suitable format string
       if (isnumeric (x) && round (x) == x && abs (x) < 1e10)
 	dgt1 = ceil (log10 (max (max (abs (real (x(:)))),
 				 max (abs (imag (x(:))))))) + 1;
 	dgt2 = dgt1 - (min (real (x(:))) >= 0);
-	fmt = sprintf("%%%dd%%+-%ddi  ", dgt2, dgt1);
+	
+	if (length (abs (x) == x) > 0)
+	  fmt = sprintf("%%%dg%%+-%dgi  ", dgt2, dgt1);
+	else
+	  fmt = sprintf("%%%dd%%+-%ddi  ", dgt2, dgt1);
+	endif
       elseif (isscalar (x))
-	fmt = "%.4g%-+.4gi";
+	fmt = "%.6g%-+.6gi";
       else
-	fmt = "%11.4g%-+11.4gi";
+	fmt = "%11.6g%-+11.6gi";
       endif
     endif
 
     ## Manipulate the complex value to have real values in the odd
     ## columns and imaginary values in the even columns.
     sz = size (x);
     nc = sz(2);
     nd = ndims (x);
@@ -96,17 +101,17 @@ function retval = num2str (x, arg)
       if (tmp == tmp2)
 	break;
       else
 	tmp = tmp2;
       endif
     endwhile
 
     tmp(length (tmp)) = "";
-    retval = split (tmp, "\n");
+    retval = strtrim (split (tmp, "\n"));
   else
     if (nargin == 2)
       if (ischar (arg))
 	fmt = arg;
       else
 	if (isnumeric (x) && round (x) == x && abs (x) < (10 .^ arg))
 	  fmt = sprintf ("%%%dd  ", arg);
 	else
@@ -115,23 +120,27 @@ function retval = num2str (x, arg)
       endif
     else
       if (isnumeric (x) && round (x) == x && abs (x) < 1e10)
 	if (max (abs (x(:))) == 0)
 	  dgt = 1;
 	else
 	  dgt = floor (log10 (max (abs(x(:))))) + (min (real (x(:))) < 0) + 1;
 	endif
-	fmt = sprintf ("%%%dd  ", dgt);
+	if (length (abs (x) == x) > 0)
+	  fmt = sprintf ("%%%dg  ", dgt);
+	else
+	  fmt = sprintf ("%%%dd  ", dgt);
+	endif
       elseif (isscalar (x))
-	fmt = "%.4g";
+	fmt = "%11.5g";
       else
-	fmt = "%11.4g";
+	fmt = "%11.5g";
       endif
     endif
     fmt = strcat (deblank (repmat (fmt, 1, columns (x))), "\n");
     nd = ndims (x);
     tmp = sprintf (fmt, permute (x, [2, 1, 3:nd]));
     tmp(length (tmp)) = "";
-    retval = split (tmp, "\n");
+    retval = strtrim (split (tmp, "\n"));
   endif
 
 endfunction
diff --git a/scripts/strings/Makefile.in b/scripts/strings/Makefile.in
--- a/scripts/strings/Makefile.in
+++ b/scripts/strings/Makefile.in
@@ -19,17 +19,18 @@ include $(TOPDIR)/Makeconf
 INSTALL = @INSTALL@
 INSTALL_PROGRAM = @INSTALL_PROGRAM@
 INSTALL_DATA = @INSTALL_DATA@
 
 SOURCES = base2dec.m bin2dec.m blanks.m deblank.m dec2base.m \
   dec2bin.m dec2hex.m findstr.m hex2dec.m index.m isletter.m \
   lower.m mat2str.m rindex.m split.m str2double.m str2mat.m \
   str2num.m strcat.m strcmpi.m strfind.m strjust.m strmatch.m \
-  strncmpi.m strrep.m strtok.m strtrunc.m strvcat.m substr.m upper.m
+  strncmpi.m strrep.m strtok.m strtrim.m strtrunc.m strvcat.m \
+  substr.m upper.m
 
 DISTFILES = $(addprefix $(srcdir)/, Makefile.in $(SOURCES))
 
 FCN_FILES = $(addprefix $(srcdir)/, $(SOURCES))
 FCN_FILES_NO_DIR = $(notdir $(FCN_FILES))
 
 all: PKG_ADD
 .PHONY: all
diff --git a/scripts/strings/strtrim.m b/scripts/strings/strtrim.m
new file mode 100644
--- /dev/null
+++ b/scripts/strings/strtrim.m
@@ -0,0 +1,53 @@
+## Copyright (C) 1996 Kurt Hornik
+##
+## This file is part of Octave.
+##
+## Octave is free software; you can redistribute it and/or modify it
+## under the terms of the GNU General Public License as published by
+## the Free Software Foundation; either version 2, or (at your option)
+## any later version.
+##
+## Octave is distributed in the hope that it will be useful, but
+## WITHOUT ANY WARRANTY; without even the implied warranty of
+## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+## General Public License for more details.
+##
+## You should have received a copy of the GNU General Public License
+## along with Octave; see the file COPYING.  If not, write to the Free
+## Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
+## 02110-1301, USA.
+
+## -*- texinfo -*- @deftypefn {Function File} {} deblank (@var{s})
+## Remove leading and trailing blanks and nulls from @var{s}.  If
+## @var{s} is a matrix, @var{deblank} trims each row to the length of
+## longest string.  If @var{s} is a cell array, operate recursively on
+## each element of the cell array. @end deftypefn
+
+## Author: John Swensen <jpswensen@jhu.edu>
+
+## This function was derived from deblank.
+
+function s = strtrim (s)
+
+  if (nargin != 1)
+    print_usage ();
+  endif
+
+  if (ischar (s))
+
+    k = find (! isspace (s) & s != "\0");
+    if (isempty (s) || isempty (k))
+      s = "";
+    else
+      s = s(:,ceil (min (k) / rows (s)):ceil (max (k) / rows (s)));
+    endif
+
+  elseif (iscell(s))
+
+    s = cellfun (@strtrim, s, "UniformOutput", false);
+
+  else
+    error ("strtrim: expecting string argument");
+  endif
+
+endfunction
