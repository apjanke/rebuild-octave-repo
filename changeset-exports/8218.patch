# HG changeset patch
# User Daniel J. Sebald <daniel.sebald@ieee.org>
# Date 1224082319 14400
#      Wed Oct 15 10:51:59 2008 -0400
# Node ID 8a5fbd656f554acfaa1ff5ea4894589dba26dc61
# Parent  f74cb5e3a6c1b8b40d34c8aeb03df19556db202f
make previous change work for surface plots

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2008-10-15  Daniel J. Sebald  <daniel.sebald@ieee.org>
+
+	* plot/__go_draw_axes__.m: Make previous change work for surface
+	plots.
+
 2008-10-14  Daniel J. Sebald  <daniel.sebald@ieee.org>
 
 	* plot/__go_draw_axes__.m: Send binary data to gnuplot.
 
 2008-10-13  Ben Abbott <bpabbott@mac.com>
 
 	* plot/__go_draw_axes__.m: Fix concatenation of handles.
 
diff --git a/scripts/plot/__go_draw_axes__.m b/scripts/plot/__go_draw_axes__.m
--- a/scripts/plot/__go_draw_axes__.m
+++ b/scripts/plot/__go_draw_axes__.m
@@ -377,28 +377,28 @@ function __go_draw_axes__ (h, plot_strea
 	  parametric(data_idx) = true;
 	  have_cdata(data_idx) = false;
 	  if (isempty (obj.keylabel))
 	    titlespec{data_idx} = "title \"\"";
 	  else
 	    tmp = undo_string_escapes (__maybe_munge_text__ (enhanced, obj, "keylabel"));
 	    titlespec{data_idx} = cstrcat ("title \"", tmp, "\"");
 	  endif
-	  usingclause{data_idx} = "";
+	  usingclause{data_idx} = sprintf ("record=%d", numel (obj.xdata));
 	  errbars = "";
 	  if (nd == 3)
 	    xdat = obj.xdata(:);
 	    ydat = obj.ydata(:);
 	    if (! isempty (obj.zdata))
 	      zdat = obj.zdata(:);
 	    else
 	      zdat = zeros (size (xdat));
 	    endif
 	    data{data_idx} = [xdat, ydat, zdat]';
-	    usingclause{data_idx} = "using ($1):($2):($3)";
+	    usingclause{data_idx} = sprintf ("record=%d using ($1):($2):($3)", numel (xdat));
 	    ## fputs (plot_stream, "set parametric;\n");
 	  else
 	    xdat = obj.xdata(:);
 	    ydat = obj.ydata(:);
 	    ldat = obj.ldata;
 	    yerr = xerr = false;
 	    if (! isempty (ldat))
 	      yerr = true;
@@ -435,41 +435,41 @@ function __go_draw_axes__ (h, plot_strea
 		  xlo = xdat-xldat;
 		endif
 		if (isempty (xudat))
 		  xhi = xdat;
 		else
 		  xhi = xdat+xudat;
 		endif
 		data{data_idx} = [xdat, ydat, xlo, xhi, ylo, yhi]';
-		usingclause{data_idx} = "using ($1):($2):($3):($4):($5):($6)";
+		usingclause{data_idx} = sprintf ("record=%d using ($1):($2):($3):($4):($5):($6)", numel (xdat));
 		errbars = "xyerrorbars";
 	      else
 		data{data_idx} = [xdat, ydat, ylo, yhi]';
-		usingclause{data_idx} = "using ($1):($2):($3):($4)";
+		usingclause{data_idx} = sprintf ("record=%d using ($1):($2):($3):($4)", numel (xdat));
 		errbars = "yerrorbars";
 	      endif
 	    elseif (xerr)
 	      if (isempty (xldat))
 		xlo = xdat;
 	      else
 		xlo = xdat-xldat;
 	      endif
 	      if (isempty (xudat))
 		xhi = xdat;
 	      else
 		xhi = xdat+xudat;
 	      endif
 	      data{data_idx} = [xdat, ydat, xlo, xhi]';
-	      usingclause{data_idx} = "using ($1):($2):($3):($4)";
+	      usingclause{data_idx} = sprintf ("record=%d using ($1):($2):($3):($4)", numel (xdat));
 	      errbars = "xerrorbars";
 	    else
 	      data{data_idx} = [xdat, ydat]';
-	      usingclause{data_idx} = sprintf ("using ($1):($2) axes %s%s",
-					      xaxisloc_using, yaxisloc_using);
+	      usingclause{data_idx} = sprintf ("record=%d using ($1):($2) axes %s%s",
+					      rows(xdat), xaxisloc_using, yaxisloc_using);
 	    endif
 	  endif
 
 	  [style, typ, with] = do_linestyle_command (obj, data_idx, mono,
 						     plot_stream, errbars);
 
 	  withclause{data_idx} = sprintf ("with %s linestyle %d",
 					  style, data_idx);
@@ -515,17 +515,16 @@ function __go_draw_axes__ (h, plot_strea
 	       parametric(data_idx) = false;
 	       have_cdata(data_idx) = false;
 	       if (i > 1 || isempty (obj.keylabel))
 		 titlespec{data_idx} = "title \"\"";
 	       else
 		 tmp = undo_string_escapes (__maybe_munge_text__ (enhanced, obj, "keylabel"));
 		 titlespec{data_idx} = cstrcat ("title \"", tmp, "\"");
 	       endif
-	       usingclause{data_idx} = "";
                if (isfield (obj, "facecolor"))
 		 if ((strncmp (obj.facecolor, "flat", 4)
 		     || strncmp (obj.facecolor, "interp", 6))
 		     && isfield (obj, "cdata"))
 		   if (ndims (obj.cdata) == 2
 		       && (size (obj.cdata, 2) == nc
 			   && (size (obj.cdata, 1) == 1
 			       || size (obj.cdata, 1) == 3)))
@@ -568,29 +567,29 @@ function __go_draw_axes__ (h, plot_strea
 		 colorspec = "";
 	       else
 		 colorspec = sprintf ("lc rgb \"#%02x%02x%02x\"",
 				      round (255*color));
 	       endif
 	       withclause{data_idx} = sprintf ("with filledcurve %s",
 					       colorspec);
 	       data{data_idx} = [xcol, ycol]';
-	       usingclause{data_idx} = "using ($1):($2)";
+	       usingclause{data_idx} = sprintf ("record=%d using ($1):($2)", numel (xcol));
 	     endif
 	   endif
 
            ## patch outline
 	   if (! strncmp (obj.edgecolor, "none", 4))
 
 	     data_idx++;
              is_image_data(data_idx) = false;
              parametric(data_idx) = false;
 	     have_cdata(data_idx) = false;
              titlespec{data_idx} = "title \"\"";
-	     usingclause{data_idx} = "";
+	     usingclause{data_idx} = sprintf ("record=%d", numel (obj.xdata));
 
 	     if (isfield (obj, "markersize"))
 	       mdat = obj.markersize / 6;
 	     endif
 
              if (isfield (obj, "edgecolor"))
 	       if ((strncmp (obj.edgecolor, "flat", 4)
 		    || strncmp (obj.edgecolor, "interp", 6))
@@ -734,24 +733,24 @@ function __go_draw_axes__ (h, plot_strea
 
 	     if (nd == 3)
 	       if (! isnan (xcol) && ! isnan (ycol) && ! isnan (zcol))
 		 data{data_idx} = [[xcol; xcol(1)], [ycol; ycol(1)], ...
 				   [zcol; zcol(1)]]';
 	       else
 		 data{data_idx} = [xcol, ycol, zcol]';
 	       endif
-	       usingclause{data_idx} = "using ($1):($2):($3)";
+	       usingclause{data_idx} = sprintf ("record=%d using ($1):($2):($3)", columns (data{data_idx}));
 	     else
 	       if (! isnan (xcol) && ! isnan (ycol))
 		 data{data_idx} = [[xcol; xcol(1)], [ycol; ycol(1)]]';
 	       else
 		 data{data_idx} = [xcol, ycol]';
 	       endif
-	       usingclause{data_idx} = "using ($1):($2)";
+	       usingclause{data_idx} = sprintf ("record=%d using ($1):($2)", columns (data{data_idx}));
 	     endif
 	   endif
 	 endfor
 
 	case "surface"
 	  view_map = true;
           if (! (strncmp (obj.edgecolor, "none", 4)
 		 && strncmp (obj.facecolor, "none", 4)))
@@ -762,17 +761,16 @@ function __go_draw_axes__ (h, plot_strea
 	    [style, typ, with] = do_linestyle_command (obj, data_idx,
 						       mono, plot_stream);
 	    if (isempty (obj.keylabel))
 	      titlespec{data_idx} = "title \"\"";
 	    else
 	      tmp = undo_string_escapes (__maybe_munge_text__ (enhanced, obj, "keylabel"));
 	      titlespec{data_idx} = cstrcat ("title \"", tmp, "\"");
 	    endif
-	    usingclause{data_idx} = "";
 	    withclause{data_idx} = sprintf ("with pm3d linestyle %d",
 		           		    data_idx);
 
 	    xdat = obj.xdata;
 	    ydat = obj.ydata;
 	    zdat = obj.zdata;
 	    cdat = obj.cdata;
 
@@ -815,17 +813,17 @@ function __go_draw_axes__ (h, plot_strea
 	    endif
 
 	    if (doing_interp_color)
 	      interp_str = "interpolate 4, 4";
 	    else
 	      ## No interpolation of facecolors.
 	      interp_str = "";
 	    endif
-	    usingclause{data_idx} = "using ($1):($2):($3):($4)";
+	    usingclause{data_idx} = sprintf ("record=%dx%d using ($1):($2):($3):($4)", xlen, ylen);
 
             flat_interp_face = (strncmp (obj.facecolor, "flat", 4)
 				|| strncmp (obj.facecolor, "interp", 6));
             flat_interp_edge = (strncmp (obj.edgecolor, "flat", 4)
 				|| strncmp (obj.edgecolor, "interp", 6));
 
 	    facecolor_none_or_white = (strncmp (obj.facecolor, "none", 4)
 				       || (isnumeric (obj.facecolor)
@@ -1139,21 +1137,21 @@ function __go_draw_axes__ (h, plot_strea
 	endwhile
  	fputs (plot_stream, "set ticslevel 0;\n");
 	if (view_map && rot_x == 0 && rot_z == 0)
 	  fputs (plot_stream, "set view map;\n");
 	else
 	  fprintf (plot_stream, "set view %.15g, %.15g;\n", rot_x, rot_z);
 	endif
       endif
-      fprintf (plot_stream, "%s \"-\" binary record=%d format='%%float64' %s %s %s \\\n", plot_cmd,
-	       columns(data{1}), usingclause{1}, titlespec{1}, withclause{1});
+      fprintf (plot_stream, "%s \"-\" binary format='%%float64' %s %s %s \\\n", plot_cmd,
+	       usingclause{1}, titlespec{1}, withclause{1});
       for i = 2:data_idx
-	fprintf (plot_stream, ", \"-\" binary record=%d format='%%float64' %s %s %s \\\n",
-		 columns(data{i}), usingclause{i}, titlespec{i}, withclause{i});
+	fprintf (plot_stream, ", \"-\" binary format='%%float64' %s %s %s \\\n",
+		 usingclause{i}, titlespec{i}, withclause{i});
       endfor
       fputs (plot_stream, ";\n");
       for i = 1:data_idx
 	if (is_image_data(i))
 	  fwrite (plot_stream, data{i}, "float32");
 	else
 	  __gnuplot_write_data__ (plot_stream, data{i}, nd, parametric(i), 
 				  have_cdata(i));
