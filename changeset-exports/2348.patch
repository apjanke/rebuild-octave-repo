# HG changeset patch
# User jwe
# Date 838288481 0
#      Thu Jul 25 09:54:41 1996 +0000
# Node ID a88c5cc51f623cc422400e1b5e7c495502233cda
# Parent  b360ae77cd4974415326f763fe36c3370e81e9b7
[project @ 1996-07-25 09:54:40 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,13 @@
 Thu Jul 25 01:42:38 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* input.cc (generate_possible_completions): Force the names to be
+	unique.
+
 	* load-save.cc (read_mat_binary_data): Expect to read terminating
 	NUL character in the variable name.
 	(save_mat_binary_data): Likewise, save it here.
 
 Wed Jul 24 05:08:07 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* lsode.cc (Flsode): Don't set the return value if an error
 	occurred during integration.
diff --git a/src/input.cc b/src/input.cc
--- a/src/input.cc
+++ b/src/input.cc
@@ -718,16 +718,39 @@ generate_possible_completions (const cha
 
   prefix = 0;
 
   if (text && *text && *text != '.' && strrchr (text, '.'))
     names = generate_struct_completions (text, prefix, hint);
   else
     names = make_name_list ();
 
+  names.qsort ();
+
+  // Remove duplicates.
+
+  // XXX FIXME XXX -- maybe this should be defined for all Array objects.
+
+  int k = 0;
+
+  int len = names.length ();
+
+  for (int i = 1; i < len; i++)
+    {
+      if (names[i] != names[k])
+	{
+	  k++;
+
+	  if (k != i)
+	    names[k] = names[i];
+	}
+    }
+
+  names.resize (k+1);
+
   return names;
 }
 
 static int
 looks_like_struct (const char *nm)
 {
   int retval = 0;
 
