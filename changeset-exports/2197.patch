# HG changeset patch
# User jwe
# Date 832118677 0
#      Wed May 15 00:04:37 1996 +0000
# Node ID 680ce730f0c6e966e282dd66c3fcfdf4324b583d
# Parent  0dff6c1595428688515227e3fc922775f8c656a5
[project @ 1996-05-15 00:03:19 by jwe]

diff --git a/src/pager.cc b/src/pager.cc
--- a/src/pager.cc
+++ b/src/pager.cc
@@ -71,16 +71,31 @@ static bool Vpage_output_immediately;
 // through the pager.
 static bool Vpage_screen_output;
 
 static sig_handler *saved_sigint_handler = 0;
 
 static int really_flush_to_pager = 0;
 
 static void
+clear_external_pager (void)
+{
+  octave_pager_pid = -1;
+
+  delete external_pager;
+  external_pager = 0;
+
+  if (saved_sigint_handler)
+    {
+      octave_set_signal_handler (SIGINT, saved_sigint_handler);
+      saved_sigint_handler = 0;
+    }
+}
+
+static void
 do_sync (const char *msg, bool bypass_pager)
 {
   if (! error_state)
     {
       if (msg && *msg)
 	{
 	  if (bypass_pager)
 	    cout << msg;
@@ -99,34 +114,30 @@ do_sync (const char *msg, bool bypass_pa
 
 		      if (external_pager)
 			octave_pager_pid = external_pager->pid ();
 		    }
 		}
 
 	      if (external_pager)
 		{
-		  *external_pager << msg;
-
-		  if (external_pager->fail ())
+		  if (octave_pager_pid > 0 && external_pager->good ())
 		    {
-		      octave_pager_pid = -1;
-
-		      delete external_pager;
-		      external_pager = 0;
+		      *external_pager << msg;
 
-		      if (saved_sigint_handler)
-			{
-			  octave_set_signal_handler (SIGINT,
-						     saved_sigint_handler);
-			  saved_sigint_handler = 0;
-			}
+		      // These checks are needed if a signal handler
+		      // invoked since the last set of checks attempts
+		      // to flush output and then returns
+
+		      if (octave_pager_pid > 0
+			  && external_pager
+			  && external_pager->good ())
+			external_pager->flush ();
 		    }
-		  else
-		    external_pager->flush ();
+		  clear_external_pager ();
 		}
 	      else
 		cout << msg;
 	    }
 	}
     }
 }
 
@@ -251,28 +262,17 @@ flush_octave_stdout (void)
 
   unwind_protect_int (really_flush_to_pager);
   
   really_flush_to_pager = 1;
 
   octave_stdout.flush ();
 
   if (external_pager)
-    {
-      octave_pager_pid = -1;
-
-      delete external_pager;
-      external_pager = 0;
-
-      if (saved_sigint_handler)
-	{
-	  octave_set_signal_handler (SIGINT, saved_sigint_handler);
-	  saved_sigint_handler = 0;
-	}
-    }
+    clear_external_pager ();
 
   run_unwind_frame ("flush_octave_stdout");
 }
 
 static void
 close_diary_file (void)
 {
   if (external_diary_file.is_open ())
diff --git a/src/sighandlers.cc b/src/sighandlers.cc
--- a/src/sighandlers.cc
+++ b/src/sighandlers.cc
@@ -141,27 +141,36 @@ generic_sig_handler (int sig)
 static RETSIGTYPE
 sigchld_handler (int /* sig */)
 {
   // Can this ever cause trouble on systems that don't forget signal
   // handlers when they are invoked?
 
   octave_set_signal_handler (SIGCHLD, sigchld_handler);
 
-  int status;
-  pid_t pid = wait (&status);
-
-  if (pid > 0)
+  if (octave_pager_pid > 0)
     {
-      if (WIFEXITED (status) || WIFSIGNALLED (status))
+      int status;
+      pid_t pid = waitpid (octave_pager_pid, &status, 0);
+
+      if (pid > 0)
 	{
-	  if (pid == octave_pager_pid)
+	  if (WIFEXITED (status) || WIFSIGNALLED (status))
 	    {
-	      error ("connection to external pager lost --");
-	      error ("pending computations have been discarded\n");
+	      octave_pager_pid = -1;
+
+	      // XXX FIXME XXX -- I'm not sure that this is the right
+	      // thing to do here, but it seems to work.
+
+	      // Don't call error() here because that tries to flush
+	      // pending output, which isn't going to do anything
+	      // anyway.
+
+	      cerr << "error: connection to external pager lost --\n";
+	      cerr << "error: pending computations and output have been discarded\n";
 	    }
 	}
     }
 }
 
 #if defined (__alpha__)
 static RETSIGTYPE
 sigfpe_handler (int /* sig */)
