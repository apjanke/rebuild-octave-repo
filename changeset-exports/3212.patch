# HG changeset patch
# User jwe
# Date 910239886 0
#      Thu Nov 05 04:24:46 1998 +0000
# Node ID bf61c443a366d4696496617a9a44276992094468
# Parent  440b2b28e74afc9c34172df769090d79e97d5ec4
[project @ 1998-11-05 04:24:45 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,18 @@
+Wed Nov  4 17:21:41 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* ov-base.cc (octave_base_value::rows, octave_base_value::columns,
+ 	octave_base_value::length): Delete.
+	* ov-base.h (octave_base_value::rows, octave_base_value::columns,
+ 	octave_base_value::length): Define here.  All return -1 if not
+	defined in a derived class.
+
+	* data.cc (Fis_matrix): Also return true if the arg is a range.
+
 Tue Nov  3 09:40:24 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* data.cc (Fis_bool): New function.
 	Also add alias for islogical.
 
 	* ov.h (octave_value::is_bool_type): New function.
 	* ov-base.h (octave_base_value::is_bool_type): Likewise.
 	* ov-bool.h (octave_bool::is_bool_type): Likewise.
diff --git a/src/data.cc b/src/data.cc
--- a/src/data.cc
+++ b/src/data.cc
@@ -831,17 +831,17 @@ DEFUN (is_matrix, args, ,
   "is_matrix (x): return nonzero if x can be considered a matrix")
 {
   double retval = 0.0;
 
   if (args.length () == 1)
     {
       octave_value arg = args(0);
 
-      if (arg.is_scalar_type ())
+      if (arg.is_scalar_type () || arg.is_range ())
 	retval = 1.0;
       else if (arg.is_matrix_type ())
 	retval = static_cast<double> (arg.rows () >= 1 && arg.columns () >= 1);
     }
   else
     print_usage ("is_matrix");
 
   return retval;
diff --git a/src/ov-base.cc b/src/ov-base.cc
--- a/src/ov-base.cc
+++ b/src/ov-base.cc
@@ -139,40 +139,16 @@ octave_base_value::print_name_tag (ostre
   indent (os);
   os << name << " =";
   newline (os);
   newline (os);
   return true;
 }
 
 int
-octave_base_value::rows (void) const
-{
-  int retval = -1;
-  gripe_wrong_type_arg ("octave_base_value::rows ()", type_name ());
-  return retval;
-}
-
-int
-octave_base_value::columns (void) const
-{
-  int retval = -1;
-  gripe_wrong_type_arg ("octave_base_value::columns ()", type_name ());
-  return retval;
-}
-
-int
-octave_base_value::length (void) const
-{
-  int retval = -1;
-  gripe_wrong_type_arg ("octave_base_value::length ()", type_name ());
-  return retval;
-}
-
-int
 octave_base_value::int_value (bool require_int, bool frc_str_conv) const
 {
   int retval = 0;
 
   double d = double_value (frc_str_conv);
 
   if (! error_state)
     {
diff --git a/src/ov-base.h b/src/ov-base.h
--- a/src/ov-base.h
+++ b/src/ov-base.h
@@ -79,20 +79,21 @@ public:
   octave_value
   do_struct_elt_index_op (const string& nm, const octave_value_list& idx,
 			  bool silent);
 
   octave_value do_struct_elt_index_op (const string& nm, bool silent);
 
   octave_lvalue struct_elt_ref (octave_value *parent, const string& nm);
 
-  int rows (void) const;
-  int columns (void) const;
+  int rows (void) const { reteurn -1; }
 
-  int length (void) const;
+  int columns (void) const { reteurn -1; }
+
+  int length (void) const { reteurn -1; }
 
   bool is_defined (void) const { return false; }
 
   bool is_real_scalar (void) const { return false; }
 
   bool is_real_matrix (void) const { return false; }
 
   bool is_complex_scalar (void) const { return false; }
