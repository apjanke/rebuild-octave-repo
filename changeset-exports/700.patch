# HG changeset patch
# User jwe
# Date 779595804 0
#      Thu Sep 15 02:23:24 1994 +0000
# Node ID 5d852fb75139ed2105260d83b8a481235d2bd8c3
# Parent  e380975350e577d365903b96eeb7a2c2a02fc4fb
[project @ 1994-09-15 02:23:24 by jwe]
Initial revision

diff --git a/src/pinv.cc b/src/pinv.cc
new file mode 100644
--- /dev/null
+++ b/src/pinv.cc
@@ -0,0 +1,102 @@
+// f-pinv.cc                                           -*- C++ -*-
+/*
+
+Copyright (C) 1994 John W. Eaton
+
+This file is part of Octave.
+
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 2, or (at your option) any
+later version.
+
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
+
+You should have received a copy of the GNU General Public License
+along with Octave; see the file COPYING.  If not, write to the Free
+Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
+
+*/
+
+#ifdef HAVE_CONFIG_H
+#include "config.h"
+#endif
+
+#include "dMatrix.h"
+#include "CMatrix.h"
+
+#include "tree-const.h"
+#include "user-prefs.h"
+#include "gripes.h"
+#include "error.h"
+#include "utils.h"
+#include "help.h"
+#include "defun-dld.h"
+
+DEFUN_DLD_BUILTIN ("pinv", Fpinv, Spinv, 3, 1,
+  "pinv ( [, tol])\n\
+Returns the pseudoinverse of X; singular values less than tol are ignored.")
+{
+  Octave_object retval;
+
+  int nargin = args.length ();
+
+  if (nargin < 2 || nargin > 3)
+    {
+      print_usage ("pinv");
+      return retval;
+    }
+
+  tree_constant arg = args(1);
+
+  double tol = 0.0;
+  if (nargin == 3)
+    tol = args(2).double_value ();
+
+  if (error_state)
+    return retval;
+
+  if (tol < 0.0)
+    {
+      error ("pinv: tol must be greater than zero");
+      return retval;
+    }
+
+  int arg_is_empty = empty_arg ("pinv", arg.rows (), arg.columns ());
+
+  if (arg_is_empty < 0)
+    return retval;
+  else if (arg_is_empty)
+    return Matrix ();
+
+  if (arg.is_real_type ())
+    {
+      Matrix m = arg.matrix_value ();
+
+      if (! error_state)
+	retval = m.pseudo_inverse (tol);
+    }
+  else if (arg.is_complex_type ())
+    {
+      ComplexMatrix m = arg.complex_matrix_value ();
+
+      if (! error_state)
+	retval = m.pseudo_inverse (tol);
+    }
+  else
+    {
+      gripe_wrong_type_arg ("pinv", arg);
+    }
+
+  return retval;
+}
+
+/*
+;;; Local Variables: ***
+;;; mode: C++ ***
+;;; page-delimiter: "^/\\*" ***
+;;; End: ***
+*/
