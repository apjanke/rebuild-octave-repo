# HG changeset patch
# User jwe
# Date 1116948277 0
#      Tue May 24 15:24:37 2005 +0000
# Node ID 30b2b6ef8597b28c43261db0910a05cd8bca7d7a
# Parent  f07a9653b844bebc482d0b06e4a9e92f8b0bb98b
[project @ 2005-05-24 15:24:37 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2005-05-24  John W. Eaton  <jwe@octave.org>
+
+	* strings/strcmp.m: Return logical values in all cases.
+
 2005-05-23  John W. Eaton  <jwe@octave.org>
 
 	* plot/orient.m: New file.  Adapt to Octave coding style.
 	Texinfoize doc string.
 
 	* plot/print.m: New file.  Adapt to Octave coding style. Include
 	PKG_ADD command.  Use set terminal consistently	throughout.  Use
 	set terminal push/pop and unconditionally set output to screen
diff --git a/scripts/strings/strcmp.m b/scripts/strings/strcmp.m
--- a/scripts/strings/strcmp.m
+++ b/scripts/strings/strcmp.m
@@ -14,121 +14,122 @@
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
 ## 02110-1301, USA.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} strcmp (@var{s1}, @var{s2})
-## Compares two strings, returning 1 if they are the same, and 0 otherwise.
+## Compares two strings, returning true if they are the same, and false
+## otherwise.
 ##
 ## @strong{Caution:}  For compatibility with @sc{Matlab}, Octave's strcmp
-## function returns 1 if the strings are equal, and 0 otherwise.  This is
-## just the opposite of the corresponding C library function.
+## function returns true if the strings are equal, and false otherwise.
+## This is just the opposite of the corresponding C library function.
 ## @end deftypefn
 
 ## Author: jwe
 
 function retval = strcmp (s1, s2)
 
   if (nargin != 2)
     usage ("strcmp (s, t)");
   endif
 
-  retval = 0;
+  retval = false;
 
   if (isstr (s1))
     [r1, c1] = size (s1);
     if (isstr (s2))
       [r2, c2] = size (s2);
       if (r1 == r2 && c1 == c2)
 	if (c1 == 0)
-          retval = 1;
+          retval = true;
 	else
           retval = all (all (s1 == s2));
 	endif
       endif
     elseif (iscellstr (s2))
       [r2, c2] = size (s2);
       if (r1 == 1)
 	t2 = s2(:);
 	n = length (t2);
-	retval = zeros (n, 1);
+	retval = zeros (n, 1, "logical");
 	for i = 1:n
 	  retval(i) = strcmp (s1, t2{i});
 	endfor
 	retval = reshape (retval, r2, c2);
       elseif (r1 > 1)
 	if (r2 == 1 && c2 == 1)
 	  t2 = s2{1};
-	  retval = zeros (r1, 1);
+	  retval = zeros (r1, 1, "logical");
 	  for i = 1:r1
 	    retval(i) = strcmp (deblank (s1(i,:)), t2);
 	  endfor
 	else
 	  t2 = s2(:);
 	  n = length (t2);
 	  if (n == r1)
-	    retval = zeros (n, 1);
+	    retval = zeros (n, 1, "logical");
 	    for i = 1:n
 	      retval(i) = strcmp (deblank (s1(i,:)), t2{i});
 	    endfor
 	    retval = reshape (retval, r2, c2);
 	  endif
 	endif
       endif
     endif
   elseif (iscellstr (s1))
     [r1, c1] = size (s1);
     if (isstr (s2))
       [r2, c2] = size (s2);
       if (r2 == 1)
 	t1 = s1(:);
 	n = length (t1);
-	retval = zeros (n, 1);
+	retval = zeros (n, 1, "logical");
 	for i = 1:n
 	  retval(i) = strcmp (t1{i}, s2);
 	endfor
 	retval = reshape (retval, r1, c1);
       elseif (r2 > 1)
 	if (r1 == 1 && c1 == 1)
 	  t1 = s1{1};
-	  retval = zeros (r2, 1);
+	  retval = zeros (r2, 1, "logical");
 	  for i = 1:r2
 	    retval(i) = strcmp (t1, deblank (s2(i,:)));
 	  endfor
 	else
 	  t1 = s1(:);
 	  n = length (t1);
 	  if (n == r2)
-	    retval = zeros (n, 1);
+	    retval = zeros (n, 1, "logical");
 	    for i = 1:n
 	      retval(i) = strcmp (t1{i}, deblank (s2(i,:)));
 	    endfor
 	    retval = reshape (retval, r1, c1);
 	  endif
 	endif
       endif      
     elseif (iscellstr (s2))
       [r2, c2] = size (s2);
       if (r1 == 1 && c1 == 1)
 	t1 = s1{:};
 	t2 = s2(:);
 	n = length (t2);
-	retval = zeros (n, 1);
+	retval = zeros (n, 1, "logical");
 	for i = 1:n
 	  retval(i) = strcmp (t1, t2{i});
 	endfor
 	retval = reshape (retval, r2, c2);
       elseif (r2 == 1 && c2 == 1)
 	t1 = s1(:);
 	t2 = s2{:};
 	n = length (t1);
-	retval = zeros (n, 1);
+	retval = zeros (n, 1, "logical");
 	for i = 1:n
 	  retval(i) = strcmp (t1{i}, t2);
 	endfor
 	retval = reshape (retval, r1, c1);
       elseif (r1 == r2 && c1 == c2)
 	t1 = s1(:);
 	t2 = s2(:);
 	n = length (t1);
