# HG changeset patch
# User Rik <rik@octave.org>
# Date 1439237542 25200
#      Mon Aug 10 13:12:22 2015 -0700
# Node ID c3b2ec6a1586790f40899cbb32d0b8a70db67fb2
# Parent  bf47ac616bc0a23d71183b91a84cdb25279566a4
Remove redundant isvector() calls in set/ functions.

* intersect.m, setdiff.m, setxor.m, union.m:
Replace "isvector (x) && isrow (x)" with just "isrow (x)".

diff --git a/scripts/set/intersect.m b/scripts/set/intersect.m
--- a/scripts/set/intersect.m
+++ b/scripts/set/intersect.m
@@ -45,17 +45,17 @@ function [c, ia, ib] = intersect (a, b, 
   endif
 
   [a, b] = validsetargs ("intersect", a, b, varargin{:});
 
   if (isempty (a) || isempty (b))
     c = ia = ib = [];
   else
     by_rows = nargin == 3;
-    isrowvec = isvector (a) && isvector (b) && isrow (a) && isrow (b);
+    isrowvec = isrow (a) && isrow (b);
 
     ## Form A and B into sets
     if (nargout > 1)
       [a, ja] = unique (a, varargin{:});
       [b, jb] = unique (b, varargin{:});
     else
       a = unique (a, varargin{:});
       b = unique (b, varargin{:});
diff --git a/scripts/set/setdiff.m b/scripts/set/setdiff.m
--- a/scripts/set/setdiff.m
+++ b/scripts/set/setdiff.m
@@ -43,17 +43,17 @@ function [c, ia] = setdiff (a, b, vararg
 
   if (nargin < 2 || nargin > 3)
     print_usage ();
   endif
 
   [a, b] = validsetargs ("setdiff", a, b, varargin{:});
 
   by_rows = nargin == 3;
-  isrowvec = isvector (a) && isrow (a);
+  isrowvec = isrow (a);
 
   if (by_rows)
     if (nargout > 1)
       [c, ia] = unique (a, "rows");
     else
       c = unique (a, "rows");
     endif
     if (! isempty (c) && ! isempty (b))
diff --git a/scripts/set/setxor.m b/scripts/set/setxor.m
--- a/scripts/set/setxor.m
+++ b/scripts/set/setxor.m
@@ -45,17 +45,17 @@ function [c, ia, ib] = setxor (a, b, var
 
   if (nargin < 2 || nargin > 3)
     print_usage ();
   endif
 
   [a, b] = validsetargs ("setxor", a, b, varargin{:});
 
   by_rows = nargin == 3;
-  isrowvec = isvector (a) && isvector (b) && isrow (a) && isrow (b);
+  isrowvec = isrow (a) && isrow (b);
 
   ## Form A and B into sets.
   if (nargout > 1)
     [a, ia] = unique (a, varargin{:});
     [b, ib] = unique (b, varargin{:});
   else
     a = unique (a, varargin{:});
     b = unique (b, varargin{:});
diff --git a/scripts/set/union.m b/scripts/set/union.m
--- a/scripts/set/union.m
+++ b/scripts/set/union.m
@@ -46,17 +46,17 @@ function [y, ia, ib] = union (a, b, vara
 
   if (nargin < 2 || nargin > 3)
     print_usage ();
   endif
 
   [a, b] = validsetargs ("union", a, b, varargin{:});
 
   by_rows = nargin == 3;
-  isrowvec = isvector (a) && isvector (b) && isrow (a) && isrow (b);
+  isrowvec = isrow (a) && isrow (b);
 
   if (by_rows)
     y = [a; b];
   else
     y = [a(:); b(:)];
     ## Adjust output orientation for Matlab compatibility
     if (isrowvec)
       y = y.';
