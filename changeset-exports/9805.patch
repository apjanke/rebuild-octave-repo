# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1257965210 18000
#      Wed Nov 11 13:46:50 2009 -0500
# Node ID bb70d16cca3b82544503f5b229660a2482e23ed7
# Parent  6fcc4179c1785622f23484440ef1112b8b655b3a
fail at configure time if IEEE floating point format is not detected

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,13 @@
+2009-11-11  John W. Eaton  <jwe@octave.org>
+
+	* acinclude.m4 (OCTAVE_IEEE754_DATA_FORMAT): Fail if IEEE 754
+	format is not detected.
+
 2009-11-11  Shai Ayal <shaiay@users.sourceforge.net>
 
 	* configure.ac: Remove tests for ftgl.
 
 2009-11-11  Benjamin Lindner  <lindnerb@users.sourceforge.net>
 
 	* configure.ac: Remove -mwindows from FLTK_LDFLAGS.
 
diff --git a/acinclude.m4 b/acinclude.m4
--- a/acinclude.m4
+++ b/acinclude.m4
@@ -973,16 +973,23 @@ main (void)
   octave_cv_ieee754_data_format=no)])
 if test "$cross_compiling" = yes; then
   AC_MSG_RESULT([$octave_cv_ieee754_data_format assumed for cross compilation])
 else
   AC_MSG_RESULT($octave_cv_ieee754_data_format)
 fi
 if test "$octave_cv_ieee754_data_format" = yes; then
   AC_DEFINE(HAVE_IEEE754_DATA_FORMAT, 1, [Define if your system uses IEEE 754 data format.])
+else
+  ## If the format is unknown, then you will probably not have a
+  ## useful system, so we will abort here.  Anyone wishing to
+  ## experiment with building Octave on a system without IEEE
+  ## floating point should be capable of removing this check and
+  ## the one in the octave_ieee_init function in liboctave/lo-ieee.cc.
+  AC_MSG_ERROR([IEEE 754 data format required for building Octave])
 fi
 ])
 dnl
 dnl Check for UMFPACK seperately split complex matrix and RHS. Note
 dnl that as umfpack.h can be in three different places, rather than
 dnl include it, just declare the functions needed.
 dnl
 dnl Assumes that the check for umfpack has already been performed.
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+2009-11-11  John W. Eaton  <jwe@octave.org>
+
+	* lo-ieee.cc (octave_ieee_init): Improve comment about systems
+	without IEEE floating point format.
+
 2009-11-11  Jaroslav Hajek  <highegg@gmail.com>
 
 	* mx-inlines.cc (mx_inline_map): New template loop.
 	(DEFMXMAPPER): New macro.
 	(DEFMXMAPPER2): Rename from DEFMXMAPPER.
 	(do_mx_unary_map): New applier.
 	(mx_inline_real, mx_inline_complex): New loops.
 	* dNDArray.cc (NDArray::abs, NDArray::isnan, NDArray::isinf,
diff --git a/liboctave/lo-ieee.cc b/liboctave/lo-ieee.cc
--- a/liboctave/lo-ieee.cc
+++ b/liboctave/lo-ieee.cc
@@ -155,17 +155,20 @@ octave_ieee_init (void)
       }
       break;
 
     case oct_mach_info::flt_fmt_cray:
     case oct_mach_info::flt_fmt_vax_d:
     case oct_mach_info::flt_fmt_vax_g:
     default:
       // If the format is unknown, then you will probably not have a
-      // useful system, but we will just issue a warning and go on...
+      // useful system, so we will abort here.  Anyone wishing to
+      // experiment with building Octave on a system without IEEE
+      // floating point should be capable of removing this check and
+      // the configure test.
       (*current_liboctave_error_handler)
 	("lo_ieee_init: floating point format is not IEEE!  Maybe DLAMCH is miscompiled, or you are using some strange system without IEEE floating point math?");
       abort ();
     }
 }
 
 /*
 ;;; Local Variables: ***
