# HG changeset patch
# User Jacob Dawid <jacob.dawid@googlemail.com>
# Date 1311712261 -7200
#      Tue Jul 26 22:31:01 2011 +0200
# Node ID 0dbf8681cd0819857ab8eef7ab8f7b4c33fc59d4
# Parent  a4b5cad8f7c6dab5dd4faeca8f671dd961f6c238
Seperated classes into own files.

diff --git a/gui/octave-gui.pro b/gui/octave-gui.pro
--- a/gui/octave-gui.pro
+++ b/gui/octave-gui.pro
@@ -81,17 +81,19 @@ SOURCES +=\
     	  src/BrowserWidget.cpp \
     	  src/ImageViewerMdiSubWindow.cpp \
     src/IRCWidget.cpp \
     src/qirc/IRCClient.cpp \
     src/qirc/IClientSocket.cpp \
     src/SettingsDialog.cpp \
     src/OctaveGUI.cpp \
     src/ResourceManager.cpp \
-    src/CommandLineParser.cpp
+    src/CommandLineParser.cpp \
+    src/OctaveMainThread.cpp \
+    src/OctaveCallbackThread.cpp
 
 HEADERS += \
         src/terminal/TerminalCharacterDecoder.h \
         src/terminal/Character.h \
         src/terminal/CharacterColor.h \
 		  src/terminal/ColorTables.h \
         src/terminal/KeyboardTranslator.h \
         src/terminal/Screen.h \
@@ -125,12 +127,14 @@ HEADERS += \
     	  src/BrowserWidget.h \
     	  src/ImageViewerMdiSubWindow.h \
     src/IRCWidget.h \
     src/qirc/IRCCodes.h \
     src/qirc/IRCClient.h \
     src/qirc/IClientSocket.h \
     src/SettingsDialog.h \
     src/ResourceManager.h \
-    src/CommandLineParser.h
+    src/CommandLineParser.h \
+    src/OctaveMainThread.h \
+    src/OctaveCallbackThread.h
 
 FORMS += \
     src/SettingsDialog.ui
diff --git a/gui/src/MainWindow.cpp b/gui/src/MainWindow.cpp
--- a/gui/src/MainWindow.cpp
+++ b/gui/src/MainWindow.cpp
@@ -21,16 +21,17 @@
 #include <QAction>
 #include <QSettings>
 #include <QDesktopServices>
 #include <QFileDialog>
 #include "MainWindow.h"
 #include "FileEditorMdiSubWindow.h"
 #include "ImageViewerMdiSubWindow.h"
 #include "SettingsDialog.h"
+#include "OctaveCallbackThread.h"
 #include "cmd-edit.h"
 
 #define VERSION_STRING "Octave GUI (0.6.0)"
 
 MainWindow::MainWindow (QWidget * parent):QMainWindow (parent),
 m_isRunning (true)
 {
   construct ();
diff --git a/gui/src/MainWindow.h b/gui/src/MainWindow.h
--- a/gui/src/MainWindow.h
+++ b/gui/src/MainWindow.h
@@ -30,18 +30,18 @@
 #include "OctaveTerminal.h"
 #include "OctaveLink.h"
 #include "VariablesDockWidget.h"
 #include "HistoryDockWidget.h"
 #include "FilesDockWidget.h"
 #include "BrowserWidget.h"
 #include "IRCWidget.h"
 
-class OctaveMainThread;
 class OctaveCallbackThread;
+#include "OctaveMainThread.h"
 
 /**
   * \class MainWindow
   *
   * Represents the main window.
   */
 class MainWindow:public QMainWindow
 {
@@ -115,65 +115,9 @@ private:
   QStatusBar *m_statusBar;
 
   // Threads for running octave and managing the data interaction.
   OctaveMainThread *m_octaveMainThread;
   OctaveCallbackThread *m_octaveCallbackThread;
   bool m_isRunning;
 };
 
-class OctaveMainThread:public QThread
-{
-Q_OBJECT
-public:
-  OctaveMainThread (QObject * parent):QThread (parent)
-  {
-  }
-
-signals:
-  void ready();
-
-protected:
-  void run ()
-  {
-    int argc = 3;
-    const char *argv[] = { "octave", "--interactive", "--line-editing" };
-    octave_main (argc, (char **) argv, 1);
-    emit ready();
-    main_loop ();
-    clean_up_and_exit (0);
-  }
-};
-
-class OctaveCallbackThread:public QThread
-{
-Q_OBJECT public:
-  OctaveCallbackThread (QObject * parent,
-			MainWindow * mainWindow):QThread (parent),
-    m_mainWindow (mainWindow)
-  {
-  }
-
-protected:
-  void run ()
-  {
-    while (m_mainWindow->isRunning ())
-      {
-        OctaveLink::instance ()->fetchSymbolTable ();
-
-	// Get a full variable list.
-	QList < SymbolRecord > symbolTable =
-          OctaveLink::instance ()->copyCurrentSymbolTable ();
-	if (symbolTable.size ())
-	  {
-	    m_mainWindow->variablesDockWidget ()->
-	      setVariablesList (symbolTable);
-	  }
-
-        OctaveLink::instance ()->updateHistoryModel ();
-        usleep (500000);
-      }
-  }
-private:
-  MainWindow * m_mainWindow;
-};
-
 #endif // MAINWINDOW_H
diff --git a/gui/src/OctaveCallbackThread.cpp b/gui/src/OctaveCallbackThread.cpp
new file mode 100644
--- /dev/null
+++ b/gui/src/OctaveCallbackThread.cpp
@@ -0,0 +1,26 @@
+#include "OctaveCallbackThread.h"
+
+OctaveCallbackThread::OctaveCallbackThread (QObject * parent,
+                      MainWindow * mainWindow):QThread (parent),
+  m_mainWindow (mainWindow)
+{
+}
+
+void
+OctaveCallbackThread::run ()
+{
+  while (m_mainWindow->isRunning ())
+    {
+      OctaveLink::instance ()->fetchSymbolTable ();
+
+      // Get a full variable list.
+      QList < SymbolRecord > symbolTable = OctaveLink::instance ()->copyCurrentSymbolTable ();
+      if (symbolTable.size ())
+        {
+          m_mainWindow->variablesDockWidget ()->setVariablesList (symbolTable);
+        }
+
+      OctaveLink::instance ()->updateHistoryModel ();
+      usleep (500000);
+    }
+}
diff --git a/gui/src/OctaveCallbackThread.h b/gui/src/OctaveCallbackThread.h
new file mode 100644
--- /dev/null
+++ b/gui/src/OctaveCallbackThread.h
@@ -0,0 +1,19 @@
+#ifndef OCTAVECALLBACKTHREAD_H
+#define OCTAVECALLBACKTHREAD_H
+
+#include <QThread>
+#include "MainWindow.h"
+
+class OctaveCallbackThread:public QThread
+{
+  Q_OBJECT
+public:
+  OctaveCallbackThread (QObject * parent, MainWindow * mainWindow);
+
+protected:
+  void run ();
+private:
+  MainWindow * m_mainWindow;
+};
+
+#endif // OCTAVECALLBACKTHREAD_H
diff --git a/gui/src/OctaveMainThread.cpp b/gui/src/OctaveMainThread.cpp
new file mode 100644
--- /dev/null
+++ b/gui/src/OctaveMainThread.cpp
@@ -0,0 +1,16 @@
+#include "OctaveMainThread.h"
+
+OctaveMainThread::OctaveMainThread (QObject * parent):QThread (parent)
+{
+}
+
+void
+OctaveMainThread::run ()
+{
+  int argc = 3;
+  const char *argv[] = { "octave", "--interactive", "--line-editing" };
+  octave_main (argc, (char **) argv, 1);
+  emit ready();
+  main_loop ();
+  clean_up_and_exit (0);
+}
diff --git a/gui/src/OctaveMainThread.h b/gui/src/OctaveMainThread.h
new file mode 100644
--- /dev/null
+++ b/gui/src/OctaveMainThread.h
@@ -0,0 +1,20 @@
+#ifndef OCTAVEMAINTHREAD_H
+#define OCTAVEMAINTHREAD_H
+
+#include <QThread>
+#include "OctaveLink.h"
+
+class OctaveMainThread:public QThread
+{
+  Q_OBJECT
+public:
+  OctaveMainThread (QObject * parent);
+
+signals:
+  void ready();
+
+protected:
+  void run ();
+};
+
+#endif // OCTAVEMAINTHREAD_H
