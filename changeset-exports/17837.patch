# HG changeset patch
# User Rik <rik@octave.org>
# Date 1383454773 25200
#      Sat Nov 02 21:59:33 2013 -0700
# Node ID 73b239db159448f515c34817606e57fadaa6ecb9
# Parent  b1610bf6d9a897d3a1d30ad8ed5ef9d29ab12968
Make known conv failures xtests.

* libinterp/corefcn/conv2.cc: Add note about why 3 conv tests are failing
to meet test tolerance.  Make these 3 tests xtests.

diff --git a/libinterp/corefcn/conv2.cc b/libinterp/corefcn/conv2.cc
--- a/libinterp/corefcn/conv2.cc
+++ b/libinterp/corefcn/conv2.cc
@@ -404,50 +404,59 @@ The size of the result is @code{max (siz
 ## Check for bug #39314
 %!test
 %! v = reshape ([1 2], [1 1 2]);
 %! assert (convn (v, v), reshape ([1 4 4], [1 1 3]));
 %! assert (convn (v, v, "same"), reshape ([4 4], [1 1 2]));
 %! assert (convn (v, v, "valid"), 4);
 
 ## The following test may look weird since we are using the output
-## of convn to test itself. However, because calculations are done
+## of convn to test itself.  However, because calculations are done
 ## differently based on the shape option, it will help to catch some
-## bugs. See also bug #39314
+## bugs.  See also bug #39314.
+## FIXME: The "valid" option uses an entirely different code path
+##        through C++ and Fortran to calculate inner convolution.
+##        The terms in the convolution added in reverse order compared
+##        to the "full" option.  This produces differences on the order
+##        of tens of eps.  This should be fixed, but in the meantime
+##        the tests will be marked as xtests.
 %!shared a, b, c
 %! ## test 3D by 3D
 %! a = rand (10, 10, 10);
 %! b = rand (3, 3, 3);
 %! c = convn (a, b, "full");
 %!assert (convn (a, b, "same"), c(2:11,2:11,2:11))
-%!assert (convn (a, b, "valid"), c(3:10,3:10,3:10))
+%!xtest
+%! assert (convn (a, b, "valid"), c(3:10,3:10,3:10));
 %!
 %!test
 %! ## test 3D by 2D
 %! a = rand (10, 10, 10);
 %! b = rand (3, 3);
 %! c = convn (a, b, "full");
 %!assert (convn (a, b, "same"), c(2:11,2:11,:))
-%!assert (convn (a, b, "valid"), c(3:10,3:10,:))
+%!xtest
+%! assert (convn (a, b, "valid"), c(3:10,3:10,:))
 %!
 %!test
 %! ## test 2D by 3D
 %! a = rand (10, 10);
 %! b = rand (3, 3, 3);
 %! c = convn (a, b, "full");
 %!assert (convn (a, b, "same"), c(2:11,2:11,2))
 %!assert (convn (a, b, "valid"), c(3:10,3:10,3:2))  # a 7x7x0 matrix
 %!
 %!test
 %! ## test multiple different number of dimensions, with odd and even numbers
 %! a = rand (10, 15, 7, 8, 10);
 %! b = rand (4, 3, 2, 3);
 %! c = convn (a, b, "full");
 %!assert (convn (a, b, "same"), c(3:12,2:16,2:8,2:9,:))
-%!assert (convn (a, b, "valid"), c(4:10,3:15,2:7,3:8,:))
+%!xtest
+%! assert (convn (a, b, "valid"), c(4:10,3:15,2:7,3:8,:))
 
 %!test
 %! a = reshape (floor (magic (16) /10), [4 8 4 2]);
 %! b = reshape (magic (6), [4 3 3]);
 %! c = zeros (7, 10, 6, 2);
 %! c(:,:,1,1) = [
 %!    875  1415  1215   741   288   264   635  1109   687   171
 %!    110   467  1551  1790  1891  1651  1165   900   659   568
