# HG changeset patch
# User Shai Ayal <shaiay@users.sourceforge.net>
# Date 1259440532 18000
#      Sat Nov 28 15:35:32 2009 -0500
# Node ID 3ec3b8e80b67ae8d5d342c05438f1188e6d44da3
# Parent  9ed5f64e3959de96b0472cf8ad5bedd3b04e54ac
fix order of drawing objects with opengl renderer

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,16 @@
+2009-11-28  Shai Ayal  <shaiay@users.sourceforge.net>
+
+	* gl-render.h (opengl_renderer::draw): Draw children from end of
+	list to preserve correct stacking order (first child should be on
+	top).
+
+	* graphics.cc (maybe_set_children): Store sorted child lists.
+
 2009-11-27  Kacper Kowalik <xarthisius.kk@gmail.com>
 
 	* ls-hdf5.cc (have_h5giterate_bug): Drop this group iteration flag
 	for buggy pre 1.2.2 versions of hdf5.
 	* ov-base-int.cc (octave_base_int_matrix<T>::load_hdf5)
 	octave_base_int_scalar<T>::load_hdf5),
 	ov-base-int.h (octave_base_int_matrix<T>::load_hdf5,
 	octave_base_int_scalar<T>::load_hdf5),
diff --git a/src/gl-render.h b/src/gl-render.h
--- a/src/gl-render.h
+++ b/src/gl-render.h
@@ -55,17 +55,17 @@ public:
     { draw (gh_manager::get_object (h)); }
 
   virtual void draw (const graphics_object& go);
 
   virtual void draw (const Matrix& hlist)
     {
       int len = hlist.length ();
 
-      for (int i = 0; i < len; i++)
+      for (int i = len-1; i >= 0; i--)
 	{
 	  graphics_handle h = gh_manager::lookup (hlist(i));
 
 	  if (h.ok ())
 	    draw (h);
 	}
     }
 
diff --git a/src/graphics.cc b/src/graphics.cc
--- a/src/graphics.cc
+++ b/src/graphics.cc
@@ -1721,18 +1721,18 @@ maybe_set_children (const Matrix& kids, 
 
   if (! error_state)
     {
       if (kids.numel () == new_kids.numel ())
 	{
 	  Matrix t1 = kids;
 	  Matrix t2 = new_kids;
 
-	  t1.sort ();
-	  t2.sort ();
+	  t1 = t1.sort ();
+	  t2 = t2.sort ();
 
 	  if (t1 != t2)
 	    ok = false;
 	}
       else
 	ok = false;
 
       if (! ok)
