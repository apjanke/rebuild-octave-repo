# HG changeset patch
# User Rik <rik@octave.org>
# Date 1432068561 25200
#      Tue May 19 13:49:21 2015 -0700
# Node ID 3c8260fd0837f1f2fd790ce04dc7c01fe68df689
# Parent  70e8801a56f7db64ade8172570a4b1f12bccf8d4
Validate second option to exist () (bug #42618).

* variables.cc (symbol_exist): Emit an error if the type argument is not one of
the accepted values.

* variables.cc (Fexist): Add BIST test to check input validation.

diff --git a/libinterp/corefcn/variables.cc b/libinterp/corefcn/variables.cc
--- a/libinterp/corefcn/variables.cc
+++ b/libinterp/corefcn/variables.cc
@@ -390,16 +390,24 @@ symbol_exist (const std::string& name, c
   if (is_keyword (name))
     return 0;
 
   bool search_any = type == "any";
   bool search_var = type == "var";
   bool search_dir = type == "dir";
   bool search_file = type == "file";
   bool search_builtin = type == "builtin";
+  bool search_class = type == "class";
+
+  if (! (search_any || search_var || search_dir || search_file ||
+         search_builtin || search_class))
+    {
+      error ("exist: unrecognized type argument \"%s\"", type.c_str ());
+      return 0;
+    }
 
   if (search_any || search_var)
     {
       octave_value val = symbol_table::varval (name);
 
       if (val.is_constant () || val.is_object ()
           || val.is_function_handle ()
           || val.is_anonymous_function ()
@@ -677,16 +685,17 @@ not on the search path you should use so
 %!assert (exist (dirtmp, "dir"), 7)
 %!assert (exist (dirtmp, "file"), 7)
 
 %!error exist ()
 %!error exist (1,2,3)
 %!warning <"class" type argument is not implemented> exist ("a", "class");
 %!error <TYPE must be a string> exist ("a", 1)
 %!error <NAME must be a string> exist (1)
+%!error <unrecognized type argument "foobar"> exist ("a", "foobar")
 
 */
 
 octave_value
 lookup_function_handle (const std::string& nm)
 {
   octave_value val = symbol_table::varval (nm);
 
