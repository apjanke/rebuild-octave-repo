# HG changeset patch
# User Rik <rik@octave.org>
# Date 1520644755 28800
#      Fri Mar 09 17:19:15 2018 -0800
# Node ID b8ce68627441811f03140ef0c270695939db03d1
# Parent  8bb0251fcfde24bbea9652bacb2985c466b67590
randmtzig.cc: Use std::generate_n to simplify code.

* randmtzig.cc: Replace for loops with std::generate_n for conciseness.
Remove documentation reference to oct_fill_randi32, oct_fill_randi64
which do not exist anymore.

diff --git a/liboctave/numeric/randmtzig.cc b/liboctave/numeric/randmtzig.cc
--- a/liboctave/numeric/randmtzig.cc
+++ b/liboctave/numeric/randmtzig.cc
@@ -135,19 +135,16 @@ along with Octave; see the file COPYING.
    double oct_randn (void)       returns M-bit standard normal
    double oct_rande (void)       returns N-bit standard exponential
 
    float oct_float_randu (void)       returns M-bit uniform in (0,1)
    float oct_float_randn (void)       returns M-bit standard normal
    float oct_float_rande (void)       returns N-bit standard exponential
 
    === Array generators ===
-   void oct_fill_randi32 (octave_idx_type, uint32_t [])
-   void oct_fill_randi64 (octave_idx_type, uint64_t [])
-
    void oct_fill_randu (octave_idx_type, double [])
    void oct_fill_randn (octave_idx_type, double [])
    void oct_fill_rande (octave_idx_type, double [])
 
    void oct_fill_float_randu (octave_idx_type, float [])
    void oct_fill_float_randn (octave_idx_type, float [])
    void oct_fill_float_rande (octave_idx_type, float [])
 */
@@ -813,52 +810,40 @@ oct_float_rande (void)
         return x;
     }
 }
 
 /* Array generators */
 void
 oct_fill_randu (octave_idx_type n, double *p)
 {
-  octave_idx_type i;
-  for (i = 0; i < n; i++)
-    p[i] = oct_randu ();
+  std::generate_n (p, n, oct_randu);
 }
 
 void
 oct_fill_randn (octave_idx_type n, double *p)
 {
-  octave_idx_type i;
-  for (i = 0; i < n; i++)
-    p[i] = oct_randn ();
+  std::generate_n (p, n, oct_randn);
 }
 
 void
 oct_fill_rande (octave_idx_type n, double *p)
 {
-  octave_idx_type i;
-  for (i = 0; i < n; i++)
-    p[i] = oct_rande ();
+  std::generate_n (p, n, oct_rande);
 }
 
 void
 oct_fill_float_randu (octave_idx_type n, float *p)
 {
-  octave_idx_type i;
-  for (i = 0; i < n; i++)
-    p[i] = oct_float_randu ();
+  std::generate_n (p, n, oct_float_randu);
 }
 
 void
 oct_fill_float_randn (octave_idx_type n, float *p)
 {
-  octave_idx_type i;
-  for (i = 0; i < n; i++)
-    p[i] = oct_float_randn ();
+  std::generate_n (p, n, oct_float_randn);
 }
 
 void
 oct_fill_float_rande (octave_idx_type n, float *p)
 {
-  octave_idx_type i;
-  for (i = 0; i < n; i++)
-    p[i] = oct_float_rande ();
+  std::generate_n (p, n, oct_float_rande);
 }
