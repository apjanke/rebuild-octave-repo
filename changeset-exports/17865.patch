# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1383778848 18000
#      Wed Nov 06 18:00:48 2013 -0500
# Node ID dde06c2ac6c6f7db418540706eaa74797647f725
# Parent  674e5eb2c709ed258bf58a47ec4f7e26b88f776c
improve signal handling in driver program

* main.in.cc (caught_signal): New file-scope variable.
(gui_driver_sig_handler): Set caught_signal here instead of calling
kill to pass signal to child process.
(main): In parent, handle case of child exiting with an uncaught
signal and case of a signal caught in the parent that should be passed
on to the child.

diff --git a/src/main.in.cc b/src/main.in.cc
--- a/src/main.in.cc
+++ b/src/main.in.cc
@@ -113,21 +113,23 @@ w32_get_octave_home (void)
 #include "syswait.h"
 
 typedef void sig_handler (int);
 
 // Forward signals to the GUI process.
 
 static pid_t gui_pid = 0;
 
+static int caught_signal = -1;
+
 static void
 gui_driver_sig_handler (int sig)
 {
   if (gui_pid > 0)
-    kill (gui_pid, sig);
+    caught_signal = sig;
 }
 
 static sig_handler *
 octave_set_signal_handler (int sig, sig_handler *handler)
 {
   struct sigaction act, oact;
 
   act.sa_handler = handler;
@@ -478,24 +480,37 @@ main (int argc, char **argv)
         }
       else
         {
           // Parent.  Forward signals to the child while waiting for it
           // to exit.
 
           int status;
 
-          while (1)
+          while (true)
             {
               WAITPID (gui_pid, &status, 0);
 
-              if (WIFEXITED (status))
+              if (caught_signal > 0)
                 {
-                  retval = WIFEXITED (status) ? WEXITSTATUS (status) : 127;
+                  int sig = caught_signal;
+
+                  caught_signal = -1;
 
+                  kill (gui_pid, sig);
+                }
+              else if (WIFEXITED (status))
+                {
+                  retval = WEXITSTATUS (status);
+                  break;
+                }
+              else if (WIFSIGNALLED (status))
+                {
+                  std::cerr << "octave exited with signal "
+                            << WTERMSIG (status) << std::endl;
                   break;
                 }
             }
         }
     }
   else
     retval = octave_exec (file, new_argv);
 
