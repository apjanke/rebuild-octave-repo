# HG changeset patch
# User Rik <rik@octave.org>
# Date 1373404595 25200
#      Tue Jul 09 14:16:35 2013 -0700
# Node ID 48f5b993b819266d61d08164553834fc07d6f991
# Parent  e39f00a32dc7935dbc053037acea14608b21fe7d
doc: Use parentheses around if, switch conditions in documentation.

* doc/interpreter/stmt.txi, doc/interpreter/vectorize.txi,
examples/@FIRfilter/subsref.m: Use parentheses around if, switch conditions in
documentation.

diff --git a/doc/interpreter/stmt.txi b/doc/interpreter/stmt.txi
--- a/doc/interpreter/stmt.txi
+++ b/doc/interpreter/stmt.txi
@@ -254,17 +254,17 @@ making the code easier to read, and henc
 variable @code{X} should change its name, only one line would need
 changing compared to one line per case when @code{if} statements are
 used.
 
 The general form of the @code{switch} statement is
 
 @example
 @group
-switch @var{expression}
+switch (@var{expression})
   case @var{label}
     @var{command_list}
   case @var{label}
     @var{command_list}
   @dots{}
 
   otherwise
     @var{command_list}
@@ -283,17 +283,17 @@ while the @code{otherwise @var{command_l
 If @var{label} is a cell array the corresponding @var{command_list}
 is executed if @emph{any} of the elements of the cell array match
 @var{expression}.  As an example, the following program will print
 @samp{Variable is either 6 or 7}.
 
 @example
 @group
 A = 7;
-switch A
+switch (A)
   case @{ 6, 7 @}
     printf ("variable is either 6 or 7\n");
   otherwise
     printf ("variable is neither 6 nor 7\n");
 endswitch
 @end group
 @end example
 
diff --git a/doc/interpreter/vectorize.txi b/doc/interpreter/vectorize.txi
--- a/doc/interpreter/vectorize.txi
+++ b/doc/interpreter/vectorize.txi
@@ -107,17 +107,17 @@ This shows an important general concept 
 instead of looping over an index variable.  @xref{Index Expressions}.
 Also use boolean indexing generously.  If a condition needs to be tested,
 this condition can also be written as a boolean index.  For instance,
 instead of
 
 @example
 @group
 for i = 1:n
-  if a(i) > 5
+  if (a(i) > 5)
     a(i) -= 20
   endif
 endfor
 @end group
 @end example
 
 @noindent
 write
diff --git a/examples/@FIRfilter/subsref.m b/examples/@FIRfilter/subsref.m
--- a/examples/@FIRfilter/subsref.m
+++ b/examples/@FIRfilter/subsref.m
@@ -1,10 +1,10 @@
 function out = subsref (f, x)
-  switch x.type
+  switch (x.type)
     case "()"
       n = f.polynomial;
       out = filter (n.poly, 1, x.subs{1});
     case "."
       fld = x.subs;
       if (strcmp (fld, "polynomial"))
         out = f.polynomial;
       else
