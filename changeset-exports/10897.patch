# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1282092217 25200
#      Tue Aug 17 17:43:37 2010 -0700
# Node ID dbec9d590756360aaccb4498c373a4038952a9e4
# Parent  f7c3364947dd5c494a24838ea0955d83709c753c
Add CLASS argument to bitmax

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2010-08-17  Rik <octave@nomad.inbox5.com>
+
+	* bitfcns.cc (bitmax): Add additional calling argument, class, and 
+	additional return value for bitmax("single").
+
 2010-08-17  Rik <octave@nomad.inbox5.com>
 
 	* bitfcns.cc (sizemax): Improve documentation string.
 
 2010-08-16  Ben Abbott <bpabbott@mac.com>
 
 	* gl2ps.c: Use upstream version gl2ps-1.3.5-svn-20100816.
 
diff --git a/src/bitfcns.cc b/src/bitfcns.cc
--- a/src/bitfcns.cc
+++ b/src/bitfcns.cc
@@ -509,26 +509,43 @@ bitshift (10, [-2, -1, 0, 1, 2])\n\
   else
     print_usage ();
 
   return retval;
 }
 
 DEFUN (bitmax, args, ,
   "-*- texinfo -*-\n\
-@deftypefn {Built-in Function} {} bitmax ()\n\
-Return the largest integer that can be represented as a floating point\n\
-value.  On IEEE-754 compatible systems, @code{bitmax} is @code{2^53 - 1}.\n\
+@deftypefn  {Built-in Function} {} bitmax ()\n\
+@deftypefnx {Built-in Function} {} bitmax (\"double\")\n\
+@deftypefnx {Built-in Function} {} bitmax (\"single\")\n\
+Return the largest integer that can be represented within a floating point\n\
+value.  The default class is \"double\", but \"single\" is a valid option.  \n\
+On IEEE-754 compatible systems, @code{bitmax} is @w{@math{2^{53} - 1}}.\n\
 @end deftypefn")
 {
   octave_value retval;
-  if (args.length () != 0)
-    print_usage ();
+  std::string cname = "double";
+  int nargin = args.length ();
+
+  if (nargin == 1 && args(0).is_string ())
+    cname = args(0).string_value ();
+  else if (nargin != 0)
+    {
+      print_usage ();
+      return retval;
+    }
+
+  if (cname == "double")
+    retval = (static_cast<double> (0x1FFFFFFFFFFFFFLL));
+  else if (cname == "single")
+    retval = (static_cast<double> (0xFFFFFFL));
   else
-    retval = (static_cast<double> (0x1FFFFFFFFFFFFFLL));
+    error ("bitmax: not defined for class '%s'", cname.c_str ());
+
   return retval;
 }
 
 DEFUN (intmax, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} intmax (@var{type})\n\
 Return the largest integer that can be represented in an integer type.\n\
 The variable @var{type} can be\n\
