# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1300420888 14400
#      Fri Mar 18 00:01:28 2011 -0400
# Node ID 88d1134bb0954958e38c7b6f59733517802bf394
# Parent  e5e66c389597caa3d8c4d7935827d0ccdfb5cabf
ov-float.cc (octave_float_scalar::do_index_op): widen to float matrix, not double matrix

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2011-03-17  John W. Eaton  <jwe@octave.org>
+
+	* ov-float.cc (octave_float_scalar::do_index_op): Widen to float
+	matrix, not double.
+
 2010-03-17  Rik  <octave@nomad.inbox5.com>
 
 	* syscalls.cc (gethostname): Redo documentation string.
 
 2011-03-17  Iain Murray  <iain@iainmurray.net>
 
 	* DLD-FUNCTIONS/nprocs.cc: Delete file.
 	* DLD-FUNCTIONS/nproc.cc: New file.  New function nproc provided by
diff --git a/src/ov-float.cc b/src/ov-float.cc
--- a/src/ov-float.cc
+++ b/src/ov-float.cc
@@ -64,17 +64,17 @@ octave_float_scalar::do_index_op (const 
   //   a = 1; a([1,1], [1,1], [1,1])
   //
   // and similar constructions.  Hmm...
 
   // FIXME -- using this constructor avoids narrowing the
   // 1x1 matrix back to a scalar value.  Need a better solution
   // to this problem.
 
-  octave_value tmp (new octave_matrix (matrix_value ()));
+  octave_value tmp (new octave_float_matrix (float_matrix_value ()));
 
   return tmp.do_index_op (idx, resize_ok);
 }
 
 octave_value
 octave_float_scalar::resize (const dim_vector& dv, bool fill) const
 {
   if (fill)
