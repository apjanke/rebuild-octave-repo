# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1450494382 18000
#      Fri Dec 18 22:06:22 2015 -0500
# Node ID 9d9270e2f98fb8f1462643179be4cbb0c74d4928
# Parent  42319d289714e47b0cbde468e8c8215e9768a2a3
eliminate comments after preprocessor conditionals

* annotation-dialog.h, gl-select.h, documentation-dock-widget.h,
files-dock-widget.h, find-files-dialog.h, find-files-model.h,
history-dock-widget.h, file-editor-interface.h, file-editor.h,
find-dialog.h, main-window.h, resource-manager.h, settings-dialog.h,
shortcut-manager.h, terminal-dock-widget.h, welcome-wizard.h,
defun-int.h, gl2ps-renderer.h, load-save.cc, ls-hdf5.cc, ls-mat5.cc,
octave-link.h, sighandlers.cc, txt-eng-ft.cc, txt-eng-ft.h,
zfstream.cc, zfstream.h, ov-cx-mat.cc, ov-cx-sparse.cc,
ov-flt-cx-mat.cc, ov-flt-re-mat.cc, ov-java.cc, ov-re-mat.cc,
ov-re-sparse.cc, Sparse-diag-op-defs.h, Sparse-perm-op-defs.h,
oct-env.cc, oct-refcount.h, sparse-util.cc, statdefs.h, main.in.cc:
Eliminate comments after preprocessor conditionals.

diff --git a/libgui/graphics/annotation-dialog.h b/libgui/graphics/annotation-dialog.h
--- a/libgui/graphics/annotation-dialog.h
+++ b/libgui/graphics/annotation-dialog.h
@@ -54,9 +54,9 @@ private:
 
   void get_gui_props ();
   void set_gui_props ();
 
   Ui::annotation_dialog * ui;
   octave_value_list props;
 };
 
-#endif // ANNOTATIONDIALOG_H
+#endif
diff --git a/libgui/graphics/gl-select.h b/libgui/graphics/gl-select.h
--- a/libgui/graphics/gl-select.h
+++ b/libgui/graphics/gl-select.h
@@ -70,9 +70,9 @@ private:
 
   // The size (in pixels) of the picking window
   int size;
 
   // The OpenGL name mapping
   std::map<GLuint, graphics_object> object_map;
 };
 
-#endif // __QtHandles_gl_selector__
+#endif
diff --git a/libgui/src/documentation-dock-widget.h b/libgui/src/documentation-dock-widget.h
--- a/libgui/src/documentation-dock-widget.h
+++ b/libgui/src/documentation-dock-widget.h
@@ -41,9 +41,9 @@ protected slots:
   void selectAll ();
 
   void showDoc (const QString & name);
 private:
 
   webinfo *_webinfo;
 };
 
-#endif // DOCUMENTATIONDOCKWIDGET_H
+#endif
diff --git a/libgui/src/files-dock-widget.h b/libgui/src/files-dock-widget.h
--- a/libgui/src/files-dock-widget.h
+++ b/libgui/src/files-dock-widget.h
@@ -159,9 +159,9 @@ private:
 
   enum { MaxMRUDirs = 10 };
 
   QStringList _columns_shown;
   QStringList _columns_shown_keys;
   QSignalMapper *_sig_mapper;
 };
 
-#endif // FILESDOCKWIDGET_H
+#endif
diff --git a/libgui/src/find-files-dialog.h b/libgui/src/find-files-dialog.h
--- a/libgui/src/find-files-dialog.h
+++ b/libgui/src/find-files-dialog.h
@@ -70,10 +70,9 @@ private:
   QCheckBox   * _name_case_check;
   QCheckBox   * _contains_text_check;
   QCheckBox   * _content_case_check;
   QLineEdit * _contains_text_edit;
   QDirIterator * _dir_iterator;
   QStatusBar * _status_bar;
 };
 
-#endif // octave_find_files_dialog_h
-
+#endif
diff --git a/libgui/src/find-files-model.h b/libgui/src/find-files-model.h
--- a/libgui/src/find-files-model.h
+++ b/libgui/src/find-files-model.h
@@ -55,10 +55,9 @@ public:
   QFileInfo fileInfo (const QModelIndex & p) const;
   QIcon     fileIcon (const QModelIndex &p) const;
 private:
   QList<QFileInfo> _files;
   QStringList _columnNames;
   int _sortorder;
 };
 
-#endif // octave_find_files_model_h
-
+#endif
diff --git a/libgui/src/history-dock-widget.h b/libgui/src/history-dock-widget.h
--- a/libgui/src/history-dock-widget.h
+++ b/libgui/src/history-dock-widget.h
@@ -87,9 +87,9 @@ private:
 
   QCheckBox *_filter_checkbox;
   QComboBox *_filter;
   QWidget *_filter_widget;
   bool _filter_shown;
   enum { MaxFilterHistory = 10 };
 };
 
-#endif // HISTORYDOCKWIDGET_H
+#endif
diff --git a/libgui/src/m-editor/file-editor-interface.h b/libgui/src/m-editor/file-editor-interface.h
--- a/libgui/src/m-editor/file-editor-interface.h
+++ b/libgui/src/m-editor/file-editor-interface.h
@@ -80,9 +80,9 @@ public slots:
 //signals:
 
 //protected:
 
 //protected slots:
 
 };
 
-#endif // FILEEDITORINTERFACE_H
+#endif
diff --git a/libgui/src/m-editor/file-editor.h b/libgui/src/m-editor/file-editor.h
--- a/libgui/src/m-editor/file-editor.h
+++ b/libgui/src/m-editor/file-editor.h
@@ -405,9 +405,9 @@ private:
 
   enum { MaxMRUFiles = 10 };
   QMenu *_mru_file_menu;
   QAction *_mru_file_actions[MaxMRUFiles];
   QStringList _mru_files;
   QStringList _mru_files_encodings;
 };
 
-#endif // FILEEDITORMDISUBWINDOW_H
+#endif
diff --git a/libgui/src/m-editor/find-dialog.h b/libgui/src/m-editor/find-dialog.h
--- a/libgui/src/m-editor/find-dialog.h
+++ b/libgui/src/m-editor/find-dialog.h
@@ -115,10 +115,9 @@ private:
   QPushButton       *_more_button;
   QWidget           *_extension;
   QsciScintilla     *_edit_area;
   bool               _find_result_available;
   int                _rep_all;
   bool               _rep_active;
 };
 
-#endif // FIND_DIALOG_H
-
+#endif
diff --git a/libgui/src/main-window.h b/libgui/src/main-window.h
--- a/libgui/src/main-window.h
+++ b/libgui/src/main-window.h
@@ -436,9 +436,9 @@ signals:
 private:
 
   QString base_url;
   QString page;
   int serial;
   bool connect_to_web;
 };
 
-#endif // MAINWINDOW_H
+#endif
diff --git a/libgui/src/resource-manager.h b/libgui/src/resource-manager.h
--- a/libgui/src/resource-manager.h
+++ b/libgui/src/resource-manager.h
@@ -144,9 +144,9 @@ private:
 
   bool do_is_first_run (void) const;
 
   QIcon do_icon (const QString& icon, bool fallback);
 
   void do_combo_encoding (QComboBox *combo, QString current);
 };
 
-#endif // RESOURCEMANAGER_H
+#endif
diff --git a/libgui/src/settings-dialog.h b/libgui/src/settings-dialog.h
--- a/libgui/src/settings-dialog.h
+++ b/libgui/src/settings-dialog.h
@@ -72,9 +72,9 @@ private:
 
   color_picker *_widget_title_bg_color;
   color_picker *_widget_title_bg_color_active;
   color_picker *_widget_title_fg_color;
   color_picker *_widget_title_fg_color_active;
   color_picker *_editor_current_line_color;
 };
 
-#endif // SETTINGSDIALOG_H
+#endif
diff --git a/libgui/src/shortcut-manager.h b/libgui/src/shortcut-manager.h
--- a/libgui/src/shortcut-manager.h
+++ b/libgui/src/shortcut-manager.h
@@ -187,9 +187,9 @@ private:
   QLabel *_label_default;
   int _handled_index;
 
   QSettings *_settings;
 
 };
 
 
-#endif // SHORTCUT_MANAGER_H
+#endif
diff --git a/libgui/src/terminal-dock-widget.h b/libgui/src/terminal-dock-widget.h
--- a/libgui/src/terminal-dock-widget.h
+++ b/libgui/src/terminal-dock-widget.h
@@ -49,9 +49,9 @@ protected slots:
 
   void terminal_interrupt (void);
 
 private:
 
   QTerminal *terminal;
 };
 
-#endif // TERMINALDOCKWIDGET_H
+#endif
diff --git a/libgui/src/welcome-wizard.h b/libgui/src/welcome-wizard.h
--- a/libgui/src/welcome-wizard.h
+++ b/libgui/src/welcome-wizard.h
@@ -127,9 +127,9 @@ private:
   QLabel *message;
   QLabel *logo;
   QLabel *links;
   QPushButton *previous;
   QPushButton *finish;
   QPushButton *cancel;
 };
 
-#endif // WELCOMEWIZARD_H
+#endif
diff --git a/libinterp/corefcn/defun-int.h b/libinterp/corefcn/defun-int.h
--- a/libinterp/corefcn/defun-int.h
+++ b/libinterp/corefcn/defun-int.h
@@ -154,17 +154,17 @@ typedef octave_function *
 
 // Generate code for making another name for an existing function.
 
 #define DEFALIAS_INTERNAL(alias, name) \
   BEGIN_INSTALL_BUILTIN \
     XDEFALIAS_INTERNAL(alias, name) \
   END_INSTALL_BUILTIN
 
-#else /* ! MAKE_BUILTINS */
+#else
 
 // Generate the first line of the function definition.  This ensures
 // that the internal functions all have the same signature.
 
 #define DEFUN_INTERNAL(name, args_name, nargout_name, doc) \
   DECLARE_FUN (name, args_name, nargout_name)
 
 #define DEFCONSTFUN_INTERNAL(name, args_name, nargout_name, doc) \
@@ -172,11 +172,11 @@ typedef octave_function *
 
 #define DEFUNX_INTERNAL(name, fname, args_name, nargout_name, doc) \
   DECLARE_FUNX (fname, args_name, nargout_name)
 
 // No definition is required for an alias.
 
 #define DEFALIAS_INTERNAL(alias, name)
 
-#endif /* ! MAKE_BUILTINS */
+#endif
 
 #endif
diff --git a/libinterp/corefcn/gl2ps-renderer.h b/libinterp/corefcn/gl2ps-renderer.h
--- a/libinterp/corefcn/gl2ps-renderer.h
+++ b/libinterp/corefcn/gl2ps-renderer.h
@@ -112,15 +112,15 @@ private:
 private:
   int alignment_to_mode (int ha, int va) const;
   FILE *fp;
   caseless_str term;
   double fontsize;
   std::string fontname;
 };
 
-#endif  // HAVE_GL2PS_H
+#endif
 
 extern OCTINTERP_API void
 gl2ps_print (const graphics_object& fig, const std::string& cmd,
              const std::string& term);
 
 #endif
diff --git a/libinterp/corefcn/load-save.cc b/libinterp/corefcn/load-save.cc
--- a/libinterp/corefcn/load-save.cc
+++ b/libinterp/corefcn/load-save.cc
@@ -298,17 +298,17 @@ get_file_format (const std::string& fnam
                  bool &use_zlib, bool quiet = false)
 {
   load_save_format retval = LS_UNKNOWN;
 
 #ifdef HAVE_HDF5
   // check this before we open the file
   if (H5Fis_hdf5 (fname.c_str ()) > 0)
     return LS_HDF5;
-#endif /* HAVE_HDF5 */
+#endif
 
 #ifdef HAVE_ZLIB
   use_zlib = check_gzip_magic (fname);
 #else
   use_zlib = false;
 #endif
 
   if (! use_zlib)
@@ -381,17 +381,17 @@ do_load (std::istream& stream, const std
           name = read_mat_binary_data (stream, orig_fname, tc);
           break;
 
 #ifdef HAVE_HDF5
         case LS_HDF5:
           name = read_hdf5_data (stream, orig_fname, global, tc, doc,
                                  argv, argv_idx, argc);
           break;
-#endif /* HAVE_HDF5 */
+#endif
 
         case LS_MAT5_BINARY:
         case LS_MAT7_BINARY:
           name = read_mat5_binary_element (stream, orig_fname, swap,
                                            global, tc);
           break;
 
         default:
@@ -691,19 +691,19 @@ Force Octave to assume the file is in Oc
                || argv[i] == "-v4" || argv[i] == "-4")
         {
           format = LS_MAT_BINARY;
         }
       else if (argv[i] == "-hdf5" || argv[i] == "-h")
         {
 #ifdef HAVE_HDF5
           format = LS_HDF5;
-#else /* ! HAVE_HDF5 */
+#else
           error ("load: octave executable was not linked with HDF5 library");
-#endif /* ! HAVE_HDF5 */
+#endif
         }
       else if (argv[i] == "-import" || argv[i] == "-i")
         {
           warning ("load: -import ignored");
         }
       else if (argv[i] == "-text" || argv[i] == "-t")
         {
           format = LS_TEXT;
@@ -729,17 +729,17 @@ Force Octave to assume the file is in Oc
   if (orig_fname == "-")
     {
       i++;
 
 #ifdef HAVE_HDF5
       if (format == LS_HDF5)
         error ("load: cannot read HDF5 format from stdin");
       else
-#endif /* HAVE_HDF5 */
+#endif
       if (format != LS_UNKNOWN)
         {
           // FIXME: if we have already seen EOF on a previous call,
           // how do we fix up the state of std::cin so that we can get
           // additional input?  I'm afraid that we can't fix this
           // using std::cin only.
 
           retval = do_load (std::cin, orig_fname, format, flt_fmt,
@@ -774,17 +774,17 @@ Force Octave to assume the file is in Oc
                                 argv, i, argc, nargout);
 
               hdf5_file.close ();
             }
           else
             gripe_file_open ("load", orig_fname);
         }
       else
-#endif /* HAVE_HDF5 */
+#endif
         // don't insert any statements here; the "else" above has to
         // go with the "if" below!!!!!
       if (format != LS_UNKNOWN)
         {
           i++;
 
           // Always open in binary mode and handle various
           // line-endings explicitly.
@@ -936,17 +936,17 @@ do_save (std::ostream& os, const octave_
     case LS_MAT_BINARY:
       save_mat_binary_data (os, tc, name);
       break;
 
 #ifdef HAVE_HDF5
     case LS_HDF5:
       save_hdf5_data (os, tc, name, help, global, save_as_floats);
       break;
-#endif /* HAVE_HDF5 */
+#endif
 
     case LS_MAT5_BINARY:
       save_mat5_binary_element (os, tc, name, global, false, save_as_floats);
       break;
 
     case LS_MAT7_BINARY:
       save_mat5_binary_element (os, tc, name, global, true, save_as_floats);
       break;
@@ -1063,19 +1063,19 @@ parse_save_options (const string_vector 
       else if (argv[i] == "-binary" || argv[i] == "-b")
         {
           format = LS_BINARY;
         }
       else if (argv[i] == "-hdf5" || argv[i] == "-h")
         {
 #ifdef HAVE_HDF5
           format = LS_HDF5;
-#else /* ! HAVE_HDF5 */
+#else
           error ("save: octave executable was not linked with HDF5 library");
-#endif /* ! HAVE_HDF5 */
+#endif
         }
       else if (argv[i] == "-mat-binary" || argv[i] == "-mat"
                || argv[i] == "-m" || argv[i] == "-6" || argv[i] == "-v6"
                || argv[i] == "-V6")
         {
           format = LS_MAT5_BINARY;
         }
 #ifdef HAVE_ZLIB
@@ -1095,19 +1095,19 @@ parse_save_options (const string_vector 
           format = LS_BINARY;
           save_as_floats = true;
         }
       else if (argv[i] == "-float-hdf5")
         {
 #ifdef HAVE_HDF5
           format = LS_HDF5;
           save_as_floats = true;
-#else /* ! HAVE_HDF5 */
+#else
           error ("save: octave executable was not linked with HDF5 library");
-#endif /* ! HAVE_HDF5 */
+#endif
         }
 #ifdef HAVE_ZLIB
       else if (argv[i] == "-zip" || argv[i] == "-z")
         {
           use_zlib  = true;
         }
 #endif
       else if (argv[i] == "-struct")
@@ -1211,33 +1211,33 @@ write_header (std::ostream& os, load_sav
         memcpy (headertext+124, versionmagic, 4);
         os.write (headertext, 128);
       }
 
       break;
 
 #ifdef HAVE_HDF5
     case LS_HDF5:
-#endif /* HAVE_HDF5 */
+#endif
     case LS_TEXT:
       {
         octave_localtime now;
 
         std::string comment_string = now.strftime (Vsave_header_format_string);
 
         if (! comment_string.empty ())
           {
 #ifdef HAVE_HDF5
             if (format == LS_HDF5)
               {
                 hdf5_ofstream& hs = dynamic_cast<hdf5_ofstream&> (os);
                 H5Gset_comment (hs.file_id, "/", comment_string.c_str ());
               }
             else
-#endif /* HAVE_HDF5 */
+#endif
               os << comment_string << "\n";
           }
       }
       break;
 
     default:
       break;
     }
@@ -1408,17 +1408,17 @@ dump_octave_core (void)
 
               file.close ();
             }
           else
             warning ("dump_octave_core: unable to open '%s' for writing...",
                      fname);
         }
       else
-#endif /* HAVE_HDF5 */
+#endif
         // don't insert any commands here!  The open brace below must
         // go with the else above!
         {
 #ifdef HAVE_ZLIB
           if (use_zlib)
             {
               gzofstream file (fname, mode);
 
@@ -1613,17 +1613,17 @@ the file @file{data} in Octave's binary 
   if (argv[i] == "-")
     {
       i++;
 
 #ifdef HAVE_HDF5
       if (format == LS_HDF5)
         error ("save: cannot write HDF5 format to stdout");
       else
-#endif /* HAVE_HDF5 */
+#endif
         // don't insert any commands here!  the brace below must go
         // with the "else" above!
         {
           if (append)
             warning ("save: ignoring -append option for output to stdout");
 
           if (nargout == 0)
             save_vars (argv, i, argc, std::cout, format, save_as_floats, true);
@@ -1683,17 +1683,17 @@ the file @file{data} in Octave's binary 
             }
           else
             {
               gripe_file_open ("save", fname);
               return retval;
             }
         }
       else
-#endif /* HAVE_HDF5 */
+#endif
         // don't insert any statements here!  The brace below must go
         // with the "else" above!
         {
 #ifdef HAVE_ZLIB
           if (use_zlib)
             {
               gzofstream file (fname.c_str (), mode);
 
diff --git a/libinterp/corefcn/ls-hdf5.cc b/libinterp/corefcn/ls-hdf5.cc
--- a/libinterp/corefcn/ls-hdf5.cc
+++ b/libinterp/corefcn/ls-hdf5.cc
@@ -903,17 +903,17 @@ save_type_to_hdf5 (save_type st)
     case LS_FLOAT:
       return H5T_NATIVE_FLOAT;
 
     case LS_DOUBLE:
     default:
       return H5T_NATIVE_DOUBLE;
     }
 }
-#endif /* HAVE_HDF5_INT2FLOAT_CONVERSIONS */
+#endif
 
 // Add the data from TC to the HDF5 location loc_id, which could
 // be either a file or a group within a file.  Return true if
 // successful.  This function calls itself recursively for lists
 // (stored as HDF5 groups).
 
 bool
 add_hdf5_data (octave_hdf5_id loc_id, const octave_value& tc,
diff --git a/libinterp/corefcn/ls-mat5.cc b/libinterp/corefcn/ls-mat5.cc
--- a/libinterp/corefcn/ls-mat5.cc
+++ b/libinterp/corefcn/ls-mat5.cc
@@ -591,17 +591,17 @@ read_mat5_binary_element (std::istream& 
               retval = read_mat5_binary_element (gz_is, filename,
                                                  swap, global, tc);
             }
         }
       else
         error ("load: error probing size of compressed data element");
 
       return retval;
-#else // HAVE_ZLIB
+#else
       error ("load: zlib unavailable, cannot read compressed data element");
 #endif
     }
 
   std::streampos pos;
 
   if (type != miMATRIX)
     {
diff --git a/libinterp/corefcn/octave-link.h b/libinterp/corefcn/octave-link.h
--- a/libinterp/corefcn/octave-link.h
+++ b/libinterp/corefcn/octave-link.h
@@ -471,9 +471,9 @@ protected:
   virtual void do_set_default_prompts (std::string& ps1, std::string& ps2,
                                        std::string& ps4) = 0;
 
   virtual void do_show_preferences (void) = 0;
 
   virtual void do_show_doc (const std::string &file) = 0;
 };
 
-#endif // OCTAVELINK_H
+#endif
diff --git a/libinterp/corefcn/sighandlers.cc b/libinterp/corefcn/sighandlers.cc
--- a/libinterp/corefcn/sighandlers.cc
+++ b/libinterp/corefcn/sighandlers.cc
@@ -401,34 +401,34 @@ generic_sig_handler (int sig)
 #ifdef SIGCHLD
 static void
 sigchld_handler (int /* sig */)
 {
   octave_signal_caught = 1;
 
   octave_signals_caught[SIGCHLD] = true;
 }
-#endif /* defined (SIGCHLD) */
+#endif
 
 #ifdef SIGFPE
 #if defined (__alpha__)
 static void
 sigfpe_handler (int /* sig */)
 {
   if (can_interrupt && octave_interrupt_state >= 0)
     {
       octave_signal_caught = 1;
 
       octave_signals_caught[SIGFPE] = true;
 
       octave_interrupt_state++;
     }
 }
-#endif /* defined (__alpha__) */
-#endif /* defined (SIGFPE) */
+#endif
+#endif
 
 #if defined (SIGHUP) || defined (SIGTERM)
 static void
 sig_hup_or_term_handler (int sig)
 {
   switch (sig)
     {
 #if defined (SIGHUP)
@@ -552,17 +552,17 @@ sigpipe_handler (int /* sig */)
 
   octave_signals_caught[SIGPIPE] = true;
 
   // Don't loop forever on account of this.
 
   if (pipe_handler_error_count++ > 100 && octave_interrupt_state >= 0)
     octave_interrupt_state++;
 }
-#endif /* defined (SIGPIPE) */
+#endif
 
 octave_interrupt_handler
 octave_catch_interrupts (void)
 {
   octave_interrupt_handler retval;
 
 #if defined (__WIN32__) && ! defined (__CYGWIN__)
   w32_interrupt_manager::init ();
diff --git a/libinterp/corefcn/txt-eng-ft.cc b/libinterp/corefcn/txt-eng-ft.cc
--- a/libinterp/corefcn/txt-eng-ft.cc
+++ b/libinterp/corefcn/txt-eng-ft.cc
@@ -1128,9 +1128,9 @@ ft_render::ft_font::get_face (void) cons
         }
       else
         ::warning ("ft_render: unable to load appropriate font");
     }
 
   return face;
 }
 
-#endif // HAVE_FREETYPE
+#endif
diff --git a/libinterp/corefcn/txt-eng-ft.h b/libinterp/corefcn/txt-eng-ft.h
--- a/libinterp/corefcn/txt-eng-ft.h
+++ b/libinterp/corefcn/txt-eng-ft.h
@@ -269,11 +269,11 @@ private:
   // A list of parsed strings to be used for printing.
   std::list<ft_string> strlist;
 
   // The X offset of the baseline for the current line.
   int line_xoffset;
 
 };
 
-#endif // HAVE_FREETYPE
+#endif
 
 #endif
diff --git a/libinterp/corefcn/zfstream.cc b/libinterp/corefcn/zfstream.cc
--- a/libinterp/corefcn/zfstream.cc
+++ b/libinterp/corefcn/zfstream.cc
@@ -36,18 +36,20 @@ along with Octave; see the file COPYING.
 #endif
 
 #include <iostream>
 
 #include "zfstream.h"
 
 #ifdef HAVE_ZLIB
 
-#include <cstring>          // for strcpy, strcat, strlen (mode strings)
-#include <cstdio>           // for BUFSIZ
+// For strcpy, strcat, strlen (mode strings).
+#include <cstring>
+// For BUFSIZ.
+#include <cstdio>
 
 // Internal buffer sizes (default and "unbuffered" versions)
 #define STASHED_CHARACTERS 16
 #define BIGBUFSIZE (256 * 1024 + STASHED_CHARACTERS)
 #define SMALLBUFSIZE 1
 
 /*****************************************************************************/
 
@@ -612,9 +614,9 @@ gzofstream::attach (int fd, std::ios_bas
 // Close file
 void
 gzofstream::close ()
 {
   if (! sb.close ())
     this->setstate (std::ios_base::failbit);
 }
 
-#endif // HAVE_ZLIB
+#endif
diff --git a/libinterp/corefcn/zfstream.h b/libinterp/corefcn/zfstream.h
--- a/libinterp/corefcn/zfstream.h
+++ b/libinterp/corefcn/zfstream.h
@@ -505,11 +505,11 @@ inline gzofstream&
 operator<<(gzofstream& s, const gzomanip2<T1,T2>& m)
 { return (*m.func)(s, m.val1, m.val2); }
 
 // Insert this onto stream to simplify setting of compression level
 inline gzomanip2<int,int>
 setcompression (int l, int s = Z_DEFAULT_STRATEGY)
 { return gzomanip2<int,int>(&setcompression, l, s); }
 
-#endif // HAVE_ZLIB
+#endif
 
-#endif // ZFSTREAM_H
+#endif
diff --git a/libinterp/octave-value/ov-cx-mat.cc b/libinterp/octave-value/ov-cx-mat.cc
--- a/libinterp/octave-value/ov-cx-mat.cc
+++ b/libinterp/octave-value/ov-cx-mat.cc
@@ -610,17 +610,17 @@ octave_complex_matrix::save_hdf5 (octave
   else
     {
       double max_val, min_val;
 
       if (m.all_integers (max_val, min_val))
         save_type_hid
           = save_type_to_hdf5 (get_save_type (max_val, min_val));
     }
-#endif /* HAVE_HDF5_INT2FLOAT_CONVERSIONS */
+#endif
 
   type_hid = hdf5_make_complex_type (save_type_hid);
   if (type_hid < 0)
     {
       H5Sclose (space_hid);
       return false;
     }
 #if HAVE_HDF5_18
diff --git a/libinterp/octave-value/ov-cx-sparse.cc b/libinterp/octave-value/ov-cx-sparse.cc
--- a/libinterp/octave-value/ov-cx-sparse.cc
+++ b/libinterp/octave-value/ov-cx-sparse.cc
@@ -571,17 +571,17 @@ octave_sparse_complex_matrix::save_hdf5 
   else
     {
       double max_val, min_val;
 
       if (m.all_integers (max_val, min_val))
         save_type_hid
           = save_type_to_hdf5 (get_save_type (max_val, min_val));
     }
-#endif /* HAVE_HDF5_INT2FLOAT_CONVERSIONS */
+#endif
 
   hid_t type_hid = hdf5_make_complex_type (save_type_hid);
   if (type_hid < 0)
     {
       H5Sclose (space_hid);
       H5Gclose (group_hid);
       return false;
     }
diff --git a/libinterp/octave-value/ov-flt-cx-mat.cc b/libinterp/octave-value/ov-flt-cx-mat.cc
--- a/libinterp/octave-value/ov-flt-cx-mat.cc
+++ b/libinterp/octave-value/ov-flt-cx-mat.cc
@@ -562,17 +562,17 @@ octave_float_complex_matrix::save_hdf5 (
   else
     {
       float max_val, min_val;
 
       if (m.all_integers (max_val, min_val))
         save_type_hid
           = save_type_to_hdf5 (get_save_type (max_val, min_val));
     }
-#endif /* HAVE_HDF5_INT2FLOAT_CONVERSIONS */
+#endif
 
   type_hid = hdf5_make_complex_type (save_type_hid);
   if (type_hid < 0)
     {
       H5Sclose (space_hid);
       return false;
     }
 #if HAVE_HDF5_18
diff --git a/libinterp/octave-value/ov-flt-re-mat.cc b/libinterp/octave-value/ov-flt-re-mat.cc
--- a/libinterp/octave-value/ov-flt-re-mat.cc
+++ b/libinterp/octave-value/ov-flt-re-mat.cc
@@ -590,17 +590,17 @@ octave_float_matrix::save_hdf5 (octave_h
   else
     {
       float max_val, min_val;
 
       if (m.all_integers (max_val, min_val))
         save_type_hid
           = save_type_to_hdf5 (get_save_type (max_val, min_val));
     }
-#endif /* HAVE_HDF5_INT2FLOAT_CONVERSIONS */
+#endif
 #if HAVE_HDF5_18
   data_hid = H5Dcreate (loc_id, name, save_type_hid, space_hid,
                         H5P_DEFAULT, H5P_DEFAULT, H5P_DEFAULT);
 #else
   data_hid = H5Dcreate (loc_id, name, save_type_hid, space_hid,
                         H5P_DEFAULT);
 #endif
   if (data_hid < 0)
diff --git a/libinterp/octave-value/ov-java.cc b/libinterp/octave-value/ov-java.cc
--- a/libinterp/octave-value/ov-java.cc
+++ b/libinterp/octave-value/ov-java.cc
@@ -490,17 +490,17 @@ initialize_jvm (void)
 
           old_cwd = octave_env::get_current_directory ();
 
           set_dll_directory (jvm_bin_path);
           octave_env::chdir (jvm_bin_path);
         }
     }
 
-#else  // Not Win32 system
+#else
 
   // JAVA_LDPATH determined by configure and set in config.h
 #if defined (__APPLE__)
   std::string jvm_lib_path = JAVA_LDPATH + std::string ("/libjvm.dylib");
 #else
   std::string jvm_lib_path = JAVA_LDPATH + std::string ("/libjvm.so");
 #endif
 
@@ -2058,17 +2058,17 @@ octave_java::do_java_set (JNIEnv* jni_en
         }
 
       restore_fpu_state ();
     }
 
   return retval;
 }
 
-#endif  // endif on HAVE_JAVA
+#endif
 
 // DEFUN blocks below must be outside of HAVE_JAVA block so that
 // documentation strings are always available, even when functions are not.
 
 DEFUN (__java_init__, , ,
        "-*- texinfo -*-\n\
 @deftypefn {} {} __java_init__ ()\n\
 Internal function used @strong{only} when debugging Java interface.\n\
diff --git a/libinterp/octave-value/ov-re-mat.cc b/libinterp/octave-value/ov-re-mat.cc
--- a/libinterp/octave-value/ov-re-mat.cc
+++ b/libinterp/octave-value/ov-re-mat.cc
@@ -712,17 +712,17 @@ octave_matrix::save_hdf5 (octave_hdf5_id
   else
     {
       double max_val, min_val;
 
       if (m.all_integers (max_val, min_val))
         save_type_hid
           = save_type_to_hdf5 (get_save_type (max_val, min_val));
     }
-#endif /* HAVE_HDF5_INT2FLOAT_CONVERSIONS */
+#endif
 
 #if HAVE_HDF5_18
   data_hid = H5Dcreate (loc_id, name, save_type_hid, space_hid,
                         H5P_DEFAULT, H5P_DEFAULT, H5P_DEFAULT);
 #else
   data_hid = H5Dcreate (loc_id, name, save_type_hid, space_hid,
                         H5P_DEFAULT);
 #endif
diff --git a/libinterp/octave-value/ov-re-sparse.cc b/libinterp/octave-value/ov-re-sparse.cc
--- a/libinterp/octave-value/ov-re-sparse.cc
+++ b/libinterp/octave-value/ov-re-sparse.cc
@@ -598,17 +598,17 @@ octave_sparse_matrix::save_hdf5 (octave_
   else
     {
       double max_val, min_val;
 
       if (m.all_integers (max_val, min_val))
         save_type_hid
           = save_type_to_hdf5 (get_save_type (max_val, min_val));
     }
-#endif /* HAVE_HDF5_INT2FLOAT_CONVERSIONS */
+#endif
 
 #if HAVE_HDF5_18
   data_hid = H5Dcreate (group_hid, "data", save_type_hid, space_hid,
                         H5P_DEFAULT, H5P_DEFAULT, H5P_DEFAULT);
 #else
   data_hid = H5Dcreate (group_hid, "data", save_type_hid, space_hid,
                         H5P_DEFAULT);
 #endif
diff --git a/liboctave/operators/Sparse-diag-op-defs.h b/liboctave/operators/Sparse-diag-op-defs.h
--- a/liboctave/operators/Sparse-diag-op-defs.h
+++ b/liboctave/operators/Sparse-diag-op-defs.h
@@ -228,9 +228,9 @@ RT do_sub_sm_dm (const SM& a, const DM& 
       return RT ();
     }
   else
     return inner_do_add_sm_dm<RT> (a, d,
                                    identity_val<typename SM::element_type> (),
                                    std::negate<typename DM::element_type> ());
 }
 
-#endif // octave_Sparse_diag_op_defs_h
+#endif
diff --git a/liboctave/operators/Sparse-perm-op-defs.h b/liboctave/operators/Sparse-perm-op-defs.h
--- a/liboctave/operators/Sparse-perm-op-defs.h
+++ b/liboctave/operators/Sparse-perm-op-defs.h
@@ -151,9 +151,9 @@ SM octinternal_do_mul_sm_pm (const SM& a
     {
       gripe_nonconformant ("operator *", a.rows (), a.cols (), p.rows (), p.cols ());
       return SM ();
     }
 
   return octinternal_do_mul_sm_colpm (a, p.col_perm_vec ().data ());
 }
 
-#endif // octave_Sparse_perm_op_defs_h
+#endif
diff --git a/liboctave/system/oct-env.cc b/liboctave/system/oct-env.cc
--- a/liboctave/system/oct-env.cc
+++ b/liboctave/system/oct-env.cc
@@ -208,17 +208,17 @@ octave_env::do_get_temp_directory (void)
     tempd = P_tmpdir;
   #endif
 
   // Some versions of MinGW and MSVC either don't define P_tmpdir, or
   // define it to a single backslash.  In such cases just use C:\temp.
   if (tempd.empty () || tempd == "\\")
     tempd = "c:\\temp";
 
-#else    // Unix-like OS
+#else
 
   tempd = do_getenv ("TMP");
 
   #if defined (P_tmpdir)
   if (tempd.empty ())
     tempd = P_tmpdir;
   #else
   if (tempd.empty ())
diff --git a/liboctave/util/oct-refcount.h b/liboctave/util/oct-refcount.h
--- a/liboctave/util/oct-refcount.h
+++ b/liboctave/util/oct-refcount.h
@@ -35,17 +35,18 @@ along with Octave; see the file COPYING.
 #  define OCTREFCOUNT_ATOMIC_INCREMENT_POST(x) _InterlockedExchangeAdd((long*)x,  1)
 #  define OCTREFCOUNT_ATOMIC_DECREMENT_POST(x) _InterlockedExchangeAdd((long*)x, -1)
 # elif defined (__GNUC__)
 #  define OCTREFCOUNT_ATOMIC_INCREMENT(x) __sync_add_and_fetch(x,  1)
 #  define OCTREFCOUNT_ATOMIC_DECREMENT(x) __sync_add_and_fetch(x, -1)
 #  define OCTREFCOUNT_ATOMIC_INCREMENT_POST(x) __sync_fetch_and_add(x,  1)
 #  define OCTREFCOUNT_ATOMIC_DECREMENT_POST(x) __sync_fetch_and_add(x, -1)
 # endif
-#else // Generic non-locking versions
+#else
+// Generic non-locking versions
 # define OCTREFCOUNT_ATOMIC_INCREMENT(x) ++(*(x))
 # define OCTREFCOUNT_ATOMIC_DECREMENT(x) --(*(x))
 # define OCTREFCOUNT_ATOMIC_INCREMENT_POST(x) (*(x))++
 # define OCTREFCOUNT_ATOMIC_DECREMENT_POST(x) (*(x))--
 #endif
 
 // Encapsulates a reference counter.
 template <class T>
diff --git a/liboctave/util/sparse-util.cc b/liboctave/util/sparse-util.cc
--- a/liboctave/util/sparse-util.cc
+++ b/liboctave/util/sparse-util.cc
@@ -55,17 +55,17 @@ SparseCholError (int status, const char 
 
 #else
 
 void
 SparseCholError (int status, const char *, int, const char *)
 {
 }
 
-#endif //HAVE_CHOLMOD
+#endif
 
 int
 SparseCholPrint (const char *fmt, ...)
 {
   va_list args;
   va_start (args, fmt);
   int ret = gnulib::vfprintf (stderr, fmt, args);
   gnulib::fflush (stderr);
diff --git a/liboctave/util/statdefs.h b/liboctave/util/statdefs.h
--- a/liboctave/util/statdefs.h
+++ b/liboctave/util/statdefs.h
@@ -24,17 +24,17 @@ along with Octave; see the file COPYING.
 #define octave_statdefs_h 1
 
 #include <sys/types.h>
 
 #ifdef HAVE_SYS_STAT_H
 #include <sys/stat.h>
 #endif
 
-#ifndef S_ISREG                 /* Doesn't have POSIX.1 stat stuff. */
+#ifndef S_ISREG
 #ifndef mode_t
 #define mode_t unsigned short
 #endif
 #endif
 #if ! defined (S_ISBLK) && defined (S_IFBLK)
 #define S_ISBLK(m) (((m) & S_IFMT) == S_IFBLK)
 #endif
 #if ! defined (S_ISCHR) && defined (S_IFCHR)
@@ -50,21 +50,21 @@ along with Octave; see the file COPYING.
 #define S_ISFIFO(m) (((m) & S_IFMT) == S_IFIFO)
 #endif
 #if ! defined (S_ISLNK) && defined (S_IFLNK)
 #define S_ISLNK(m) (((m) & S_IFMT) == S_IFLNK)
 #endif
 #if ! defined (S_ISSOCK) && defined (S_IFSOCK)
 #define S_ISSOCK(m) (((m) & S_IFMT) == S_IFSOCK)
 #endif
-#if ! defined (S_ISMPB) && defined (S_IFMPB) /* V7 */
+#if ! defined (S_ISMPB) && defined (S_IFMPB)
 #define S_ISMPB(m) (((m) & S_IFMT) == S_IFMPB)
 #define S_ISMPC(m) (((m) & S_IFMT) == S_IFMPC)
 #endif
-#if ! defined (S_ISNWK) && defined (S_IFNWK) /* HP/UX */
+#if ! defined (S_ISNWK) && defined (S_IFNWK)
 #define S_ISNWK(m) (((m) & S_IFMT) == S_IFNWK)
 #endif
 
 #ifndef S_ISLNK
 #undef HAVE_LSTAT
 #endif
 
 #endif
diff --git a/src/main.in.cc b/src/main.in.cc
--- a/src/main.in.cc
+++ b/src/main.in.cc
@@ -388,17 +388,17 @@ prepare_spawn (char **argv)
       else
         new_argv[i] = (char *) string;
     }
   new_argv[argc] = NULL;
 
   return new_argv;
 }
 
-#endif // __WIN32__ && ! __CYGWIN__
+#endif
 
 static int
 octave_exec (const std::string& file, char **argv)
 {
 #if defined (__WIN32__) && ! defined (__CYGWIN__)
   argv = prepare_spawn (argv);
   return _spawnv (_P_WAIT, file.c_str (), argv);
 #else
