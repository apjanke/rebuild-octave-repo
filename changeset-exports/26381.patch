# HG changeset patch
# User Andreas Weber <octave@josoansi.de>
# Date 1546469350 -3600
#      Wed Jan 02 23:49:10 2019 +0100
# Branch stable
# Node ID 3c5a676cd95b58bc227336de034e3c35fd4f371c
# Parent  21f0cfc0ffdb6f005cead3cf79391d16cae8ba5e
MSparse.cc: Fix static analyzer detected V560 issues (bug #55347)

diff --git a/liboctave/array/MSparse.cc b/liboctave/array/MSparse.cc
--- a/liboctave/array/MSparse.cc
+++ b/liboctave/array/MSparse.cc
@@ -60,17 +60,17 @@ plus_or_minus (MSparse<T>& a, const MSpa
             {
               r.ridx (jx) = a.ridx (ja);
               r.data (jx) = op (a.data (ja), 0.);
               jx++;
               ja++;
               ja_lt_max= ja < ja_max;
             }
           else if ((! ja_lt_max)
-                   || (jb_lt_max && (b.ridx (jb) < a.ridx (ja))))
+                   || (b.ridx (jb) < a.ridx (ja)))
             {
               r.ridx (jx) = b.ridx (jb);
               r.data (jx) = op (0., b.data (jb));
               jx++;
               jb++;
               jb_lt_max= jb < jb_max;
             }
           else
@@ -326,17 +326,17 @@ plus_or_minus (const MSparse<T>& a, cons
                 {
                   r.ridx (jx) = a.ridx (ja);
                   r.data (jx) = op (a.data (ja), 0.);
                   jx++;
                   ja++;
                   ja_lt_max= ja < ja_max;
                 }
               else if ((! ja_lt_max)
-                       || (jb_lt_max && (b.ridx (jb) < a.ridx (ja))))
+                       || (b.ridx (jb) < a.ridx (ja)))
                 {
                   r.ridx (jx) = b.ridx (jb);
                   r.data (jx) = op (0.,  b.data (jb));
                   jx++;
                   jb++;
                   jb_lt_max= jb < jb_max;
                 }
               else
@@ -443,17 +443,17 @@ product (const MSparse<T>& a, const MSpa
           while (ja_lt_max || jb_lt_max)
             {
               octave_quit ();
               if ((! jb_lt_max) || (ja_lt_max && (a.ridx (ja) < b.ridx (jb))))
                 {
                   ja++; ja_lt_max= ja < ja_max;
                 }
               else if ((! ja_lt_max)
-                       || (jb_lt_max && (b.ridx (jb) < a.ridx (ja))))
+                       || (b.ridx (jb) < a.ridx (ja)))
                 {
                   jb++; jb_lt_max= jb < jb_max;
                 }
               else
                 {
                   if ((a.data (ja) * b.data (jb)) != 0.)
                     {
                       r.data (jx) = a.data (ja) * b.data (jb);
@@ -562,17 +562,17 @@ quotient (const MSparse<T>& a, const MSp
             {
               octave_quit ();
               if ((! jb_lt_max) || (ja_lt_max && (a.ridx (ja) < b.ridx (jb))))
                 {
                   r.elem (a.ridx (ja),i) = a.data (ja) / Zero;
                   ja++; ja_lt_max= ja < ja_max;
                 }
               else if ((! ja_lt_max)
-                       || (jb_lt_max && (b.ridx (jb) < a.ridx (ja))))
+                       || (b.ridx (jb) < a.ridx (ja)))
                 {
                   r.elem (b.ridx (jb),i) = Zero / b.data (jb);
                   jb++; jb_lt_max= jb < jb_max;
                 }
               else
                 {
                   r.elem (a.ridx (ja),i) = a.data (ja) / b.data (jb);
                   ja++; ja_lt_max= ja < ja_max;
