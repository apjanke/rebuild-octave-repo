# HG changeset patch
# User jwe
# Date 1162003548 0
#      Sat Oct 28 02:45:48 2006 +0000
# Node ID ba9db42a1fe0ef7a759493e3c4af82d422ca262b
# Parent  fabb1be5fd84dd2d0f546a2af7ef76af64e1bbd0
[project @ 2006-10-28 02:45:48 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,14 @@
 2006-10-27  John W. Eaton  <jwe@octave.org>
 
+	* pr-output.cc (SPECIALIZE_UABS): New macro.
+	Use it to generate specializations of abs for unsigned int types.
+	Instantiate abs for signed int types.
+
 	* load-path.cc (load_path::do_initialize):
 	Use dir_path::path_sep_str instead of ":".
 	Don't append ":::" to xpath when calling do_set.
 
 	* dirfns.cc (Fls, cleanup_iprocstream): Delete.
 
 	* sysdep.cc (Ftilde_expand): If arg is cellstr, return cellstr.
 
diff --git a/src/pr-output.cc b/src/pr-output.cc
--- a/src/pr-output.cc
+++ b/src/pr-output.cc
@@ -2200,29 +2200,51 @@ pr_int (std::ostream& os, const T& d, in
       os << std::setw (fw)
 	 << typename octave_print_conv<T>::print_conv_type (d);
 
       if (bank_format)
 	os << ".00";
     }
 }
 
+// FIXME -- all this mess with abs is an attempt to avoid seeing
+//
+//   warning: comparison of unsigned expression < 0 is always false
+//
+// from GCC.  Isn't there a better way
+
 template <class T>
 /* static */ inline T
 abs (T x)
 {
-  return x;
+  return x < 0 ? -x : x;
 }
 
-#define INSTANTIATE_ABS(T) template /* static */ inline T abs (T x)
-
-INSTANTIATE_ABS (unsigned int);
-INSTANTIATE_ABS (unsigned short);
-INSTANTIATE_ABS (unsigned long);
-INSTANTIATE_ABS (unsigned long long);
+#define INSTANTIATE_ABS(T) \
+  template /* static */ inline T abs (T)
+
+INSTANTIATE_ABS(signed char);
+INSTANTIATE_ABS(short);
+INSTANTIATE_ABS(int);
+INSTANTIATE_ABS(long);
+INSTANTIATE_ABS(long long);
+
+#define SPECIALIZE_UABS(T) \
+  template <> \
+  /* static */ inline unsigned T \
+  abs (unsigned T x) \
+  { \
+    return x; \
+  }
+
+SPECIALIZE_UABS(char)
+SPECIALIZE_UABS(short)
+SPECIALIZE_UABS(int)
+SPECIALIZE_UABS(long)
+SPECIALIZE_UABS(long long)
 
 template <class T>
 void
 octave_print_internal (std::ostream& os, const intNDArray<T>& nda,
 		       bool pr_as_read_syntax, int extra_indent)
 {
   // FIXME -- this mostly duplicates the code in the
   // PRINT_ND_ARRAY macro.
