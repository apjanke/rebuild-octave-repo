# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1253512738 -7200
#      Mon Sep 21 07:58:58 2009 +0200
# Node ID 0bcfeadb61786b5a396809424740d79772c98c17
# Parent  3429c956de6fc8202a5aad4af957a234dbd53b87
fix union, setxor docstrings

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2009-09-21  Jaroslav Hajek  <highegg@gmail.com>
+
+	* set/union.m: Fix docstring.
+	* set/setxor.m: Fix docstring.
+
 2009-09-16  Jaroslav Hajek  <highegg@gmail.com>
 
 	* general/randperm.m: Remove.
 	* general/Makefile.in: Update.
 
 2009-09-15  John W. Eaton  <jwe@octave.org>
 
 	* confiugre.ac: Rename from configure.in
diff --git a/scripts/set/setxor.m b/scripts/set/setxor.m
--- a/scripts/set/setxor.m
+++ b/scripts/set/setxor.m
@@ -22,18 +22,18 @@
 ## @deftypefnx {Function File} {} setxor (@var{a}, @var{b}, 'rows')
 ##
 ## Return the elements exclusive to @var{a} or @var{b}, sorted in ascending
 ## order.  If @var{a} and @var{b} are both column vectors return a column
 ## vector, otherwise return a row vector.
 ##
 ## @deftypefnx {Function File} {[@var{c}, @var{ia}, @var{ib}] =} setxor (@var{a}, @var{b})
 ##
-## Return index vectors @var{ia} and @var{ib} such that @code{a == c(ia)} and
-## @code{b == c(ib)}.
+## Return index vectors @var{ia} and @var{ib} such that @code{a(ia)} and @code{b(ib)} are
+## disjoint sets whose union is @var{c}.
 ## 
 ## @seealso{unique, union, intersect, setdiff, ismember}
 ## @end deftypefn
 
 function [c, ia, ib] = setxor (a, b, varargin)
 
   if (nargin < 2 || nargin > 3)
     print_usage ();
diff --git a/scripts/set/union.m b/scripts/set/union.m
--- a/scripts/set/union.m
+++ b/scripts/set/union.m
@@ -40,18 +40,18 @@
 ##      @result{}  1   2
 ##     2   3
 ##     3   4
 ## @end group
 ## @end example
 ##
 ## @deftypefnx {Function File} {[@var{c}, @var{ia}, @var{ib}] =} union (@var{a}, @var{b})
 ##
-## Return index vectors @var{ia} and @var{ib} such that @code{a == c(ia)} and
-## @code{b == c(ib)}.
+## Return index vectors @var{ia} and @var{ib} such that @code{a(ia)} and @code{b(ib)} are
+## disjoint sets whose union is @var{c}.
 ## 
 ## @seealso{intersect, complement, unique}
 ## @end deftypefn
 
 ## Author: jwe
 
 function [y, ia, ib] = union (a, b, varargin)
 
