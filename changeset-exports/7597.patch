# HG changeset patch
# User David Bateman <dbateman@free.fr>
# Date 1205869153 14400
#      Tue Mar 18 15:39:13 2008 -0400
# Node ID 6b2a99e44ff2a95186da61edf025a7477d3c4e0b
# Parent  6929e40fc5979c87b5e3061c97e25008e3a94822
shortened empty indexing fix

diff --git a/liboctave/Array.cc b/liboctave/Array.cc
--- a/liboctave/Array.cc
+++ b/liboctave/Array.cc
@@ -2358,17 +2358,17 @@ Array<T>::index (Array<idx_vector>& ra_i
 	}
     }
 
   ra_idx.resize (ra_idx_len);
 
   dim_vector new_dims = dims ();
   dim_vector frozen_lengths;
 
-  if (! any_orig_empty (ra_idx) && ra_idx_len < n_dims)
+  if (!ra_idx (ra_idx_len - 1).orig_empty () && ra_idx_len < n_dims)
     frozen_lengths = short_freeze (ra_idx, dimensions, resize_ok);
   else
     {
       new_dims.resize (ra_idx_len, 1);
       frozen_lengths = freeze (ra_idx, new_dims, resize_ok);
     }
 
   if (all_ok (ra_idx))
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+2008-03-18  David Bateman  <dbateman@free.fr>
+
+	* Array.cc (Array<T>::index): Don't short_freeze on index with
+	fewer dimensions than the array only if the last dimension is empty.
+
 2008-03-18  John W. Eaton  <jwe@octave.org>
 
 	* oct-inttypes.h (OCTAVE_DBL_FTR): New macro.
 	Use it to provide double specializations for octave_int_fit_to_range.
 
 2008-03-08  John W. Eaton  <jwe@octave.org>
 
 	* Sparse.cc (Sparse<T>::index, assign): Likewise.
diff --git a/test/test_index-wfi-f.m b/test/test_index-wfi-f.m
--- a/test/test_index-wfi-f.m
+++ b/test/test_index-wfi-f.m
@@ -413,16 +413,18 @@
 %! b5 = [1; 3];
 %! b6(:,:,1,1) = [1; 3];
 %! b6(:,:,1,2) = [1; 3];
 %! b7 = 5;
 %! b8 = [5, 6];
 %! b9 = [1, 2, 5, 6];
 %! b10 = zeros (1, 0, 2);
 %! b11 = zeros (1, 0);
+%! b12 = [5; 7];
+%! b13 = zeros (0, 1);
 %! 
 %! assert(a(:),a1);
 %! assert(a(1:2), a2);
 %! assert(a(:,:), a3);
 %! assert(a(:,1), a4);
 %! assert(a(1,1), a5);
 %! assert(a(1:2,1), a6);
 %! assert(a(:,:,1), a7);
@@ -438,9 +440,14 @@
 %! assert(b(:,:,:), b4);
 %! assert(b(:,1,1), b5);
 %! assert(b(:,1,1,[1,1]), b6);
 %! assert(b(1,3), b7);
 %! assert(b(1,[3,4]), b8);
 %! assert(b(1,1:4), b9);
 %! assert(b(1,[],:), b10);
 %! assert(b(1,[]), b11);
+%! assert (b(:,3), b12);
+%! assert (b([1,2],3), b12);
+%! assert (b(true(2,1),3), b12);
+%! assert (b(false(2,1),3), b13)
+%! assert (b([],3), b13)
 %! warning ("wfi.state", "Octave:fortran-indexing");
