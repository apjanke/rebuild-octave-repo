# HG changeset patch
# User Lachlan Andrew <lachlanbis@gmail.com>
# Date 1467274837 -36000
#      Thu Jun 30 18:20:37 2016 +1000
# Node ID eb8667f2faac0369830a0f40d3e41bcff6600515
# Parent  acdd8983d3084e462f319305faeb6d1defdaee56
Fix assignment to an property of an element of classdef array (bug #46660)

* ov-classdef.cc (cdef_object_array::subsasgn):
  Pass at least two dimensions to Array<T>::index (Array<idx_vector>&, ...).

diff --git a/libinterp/octave-value/ov-classdef.cc b/libinterp/octave-value/ov-classdef.cc
--- a/libinterp/octave-value/ov-classdef.cc
+++ b/libinterp/octave-value/ov-classdef.cc
@@ -1647,17 +1647,17 @@ cdef_object_array::subsasgn (const std::
           retval = to_ov (cdef_object (this));
         }
       else
         {
           const octave_value_list& ival = idx.front ();
 
           bool is_scalar = true;
 
-          Array<idx_vector> iv (dim_vector (1, ival.length ()));
+          Array<idx_vector> iv (dim_vector (1, std::max (ival.length (), 2)));
 
           for (int i = 0; i < ival.length (); i++)
             {
               try
                 {
                   iv(i) = ival(i).index_vector ();
                 }
               catch (index_exception& e)
@@ -1670,16 +1670,21 @@ cdef_object_array::subsasgn (const std::
               is_scalar = is_scalar && iv(i).is_scalar ();
 
               if (! is_scalar)
                 error ("subsasgn: invalid indexing for object array assignment"
                        ", the index must reference a single object in the "
                        "array.");
             }
 
+          // Fill in trailing singleton dimensions so that
+          // array.index doesn't create a new blank entry (bug #46660).
+          for (int i = ival.length (); i < 2; i++)
+            iv(i) = 1;
+
           Array<cdef_object> a = array.index (iv, true);
 
           if (a.numel () != 1)
             error ("subsasgn: invalid indexing for object array assignment");
 
           cdef_object obj = a(0);
 
           int ignore_copies = 0;
