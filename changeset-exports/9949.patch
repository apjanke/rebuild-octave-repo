# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1260380270 18000
#      Wed Dec 09 12:37:50 2009 -0500
# Node ID a6308dcad5ac61cc1781d13600f5c96524d5b9a8
# Parent  6e17093431f5fa2fe24708d8abe3acde1fa57464
update HACKING file

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,12 @@
+2009-12-09  John W. Eaton  <jwe@octave.org>
+
+	* HACKING: Clarify gnulib checkout and use.
+
 2009-12-09  John W. Eaton  <jwe@octave.org>
 
 	* configure.ac: Remove URL argument from AC_INIT.
 	Use AC_CONFIG_AUX_DIR.  Move AM_INIT_AUTOMAKE after other
 	AC_CONFIG setup macros.  Use gl_EARLY and gl_INIT for gnulib.
 	Add libgnu/Makefile to the list of AC_CONFIG_FILES.  Eliminate
 	special case check for for strftime.
 	* bootstrap: New file, from gnulib.
diff --git a/HACKING b/HACKING
--- a/HACKING
+++ b/HACKING
@@ -48,18 +48,35 @@ script:
 
   $ ./autogen.sh
 
 This script will examine the source tree and generate some Makefile
 fragments and then runs the bootstrap script.  The bootstrap script comes
 from gnulib but is kept in the Octave source archive.  It should be
 updated from the gnulib source as necssary.  The bootstrap script takes
 care of checking out a copy of gnulib, running the autotools, and
-generating the configure script.  Once the autogen.sh and bootstrap
-scripts complete successfully, you may run
+generating the configure script.
+
+If you have a copy of gnulib in some directory apart from the Octave
+source tree, then pass the name of that directory to the bootstrap
+script using the
+
+  --gnulib-srcdir=DIRNAME
+
+option (all options passed to autogen.sh are forwarded to the
+bootstrap script).  This way, you can share a single gnulib source
+tree among several projects.  Regardless of the location of the gnulib
+sources, the bootstrap script will try to update them if it appears
+that they are checked out using git.  Otherwise, it is your
+responsibility to keep the gnulib sources up to date.  They change
+frequently, so the best way to stay current is probably to use git to
+do the job.
+
+Once the autogen.sh and bootstrap scripts complete successfully, you may
+run
 
   $ ./configure
   $ make
   $ make check
 
 At this point, there should be no difference between your local copy,
 and the master copy:
 
