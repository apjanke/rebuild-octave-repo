# HG changeset patch
# User jwe
# Date 1197399346 0
#      Tue Dec 11 18:55:46 2007 +0000
# Node ID fb902b3b2a5d1405081d4d22fea2ca9b4bc07ce1
# Parent  d45fc511fc5d9e5a9a0721169224ff6dbdfb83dc
[project @ 2007-12-11 18:55:46 by jwe]

diff --git a/scripts/plot/__patch__.m b/scripts/plot/__patch__.m
--- a/scripts/plot/__patch__.m
+++ b/scripts/plot/__patch__.m
@@ -176,13 +176,14 @@ function [h, fail] = __patch__ (p, varar
     endif
   else
     cargs{1} = "facecolor";
     cargs{2} = [0, 1, 0];
   endif
 
   h = __go_patch__ (p, "xdata", x, "ydata", y, "faces", faces, 
 		    "vertices", vert, cargs{:}, varargin{iarg:end});
+
   if (have_z)
     set (h, "zdata", z);
   endif
  
 endfunction
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,15 @@
+2007-12-11  John W. Eaton  <jwe@octave.org>
+
+	* input.cc (Vgud_mode): New static variable.
+	(F__gud_mode__): New function.
+	(get_user_input): If debug and Vgud_mode, print location info in
+	format for Emacs GUD mode.
+
 2007-12-11  David Bateman  <dbateman@free.fr>
 
 	* OPERATORS/op-bm-sbm.cc, OPERATORS/op-b-sbm.cc, 
 	OPERATORS/op-cm-scm.cc, OPERATORS/op-cm-sm.cc, 
 	OPERATORS/op-cs-scm.cc, OPERATORS/op-cs-sm.cc, 
 	OPERATORS/op-m-scm.cc, OPERATORS/op-m-sm.cc, 
 	OPERATORS/op-s-scm.cc, OPERATORS/op-s-sm.cc: Privilege 
 	conversion to dense matrices for compatibility.
diff --git a/src/input.cc b/src/input.cc
--- a/src/input.cc
+++ b/src/input.cc
@@ -139,16 +139,19 @@ std::string current_input_line;
 
 // TRUE after a call to completion_matches.
 bool octave_completion_matches_called = false;
 
 // TRUE if the plotting system has requested a call to drawnow at
 // the next user prompt.
 static bool Vdrawnow_requested = false;
 
+// TRUE if we are running in the Emacs GUD mode.
+static bool Vgud_mode = false;
+
 static void
 do_input_echo (const std::string& input_string)
 {
   int do_echo = reading_script_file ?
     (Vecho_executing_commands & ECHO_SCRIPTS)
       : (Vecho_executing_commands & ECHO_CMD_LINE) && ! forced_interactive;
 
   if (do_echo)
@@ -612,26 +615,35 @@ get_user_input (const octave_value_list&
 	    line = curr_statement->line ();
 	}
     }
 
   std::ostringstream buf;
 
   if (! nm.empty ())
     {
-      buf << "stopped in " << nm;
+      if (Vgud_mode)
+	{
+	  static char ctrl_z = 'Z' & 0x1f;
 
-      if (line > 0)
-	buf << " at line " << line;
+	  buf << ctrl_z << ctrl_z << nm << ":" << line;
+	}
+      else
+	{
+	  buf << "stopped in " << nm;
+
+	  if (line > 0)
+	    buf << " at line " << line;
+	}
     }
 
   std::string msg = buf.str ();
 
   if (! msg.empty ())
-    message ("keyboard", msg.c_str ());
+    message (Vgud_mode ? 0 : "keyboard", msg.c_str ());
 
   std::string prompt = "debug> ";
 
   if (nargin > 0)
     {
       prompt = args(0).string_value ();
 
       if (error_state)
@@ -1291,13 +1303,33 @@ Undocumented internal function.\n\
   else if (nargin == 1)
     Vdrawnow_requested = args(0).bool_value ();
   else
     print_usage ();
 
   return retval;
 }
 
+DEFUN (__gud_mode__, args, ,
+  "-*- texinfo -*-\n\
+@deftypefn {Built-in Function} {} __gud_mode__ ()\n\
+Undocumented internal function.\n\
+@end deftypefn")
+{
+  octave_value retval;
+
+  int nargin = args.length ();
+
+  if (nargin == 0)
+    retval = Vgud_mode;
+  else if (nargin == 1)
+    Vgud_mode = args(0).bool_value ();
+  else
+    print_usage ();
+
+  return retval;
+}
+
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
