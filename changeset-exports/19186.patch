# HG changeset patch
# User Carnë Draug <carandraug@octave.org>
# Date 1412016734 -3600
#      Mon Sep 29 19:52:14 2014 +0100
# Node ID 1111d2d5ff95b64fcfa61bf209c60a8f4567ed95
# Parent  8ca827e183495a9e8df74acae7f5c9cad3a5272f
fullfile.m: add support for multiple paths with cell array for last component.

diff --git a/scripts/miscellaneous/fullfile.m b/scripts/miscellaneous/fullfile.m
--- a/scripts/miscellaneous/fullfile.m
+++ b/scripts/miscellaneous/fullfile.m
@@ -12,33 +12,51 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{filename} =} fullfile (@var{dir1}, @var{dir2}, @dots{}, @var{file})
+## @deftypefn  {Function File} {@var{filepath} =} fullfile (@var{dir1}, @var{dir2}, @dots{}, @var{file})
+## @deftypefnx {Function File} {@var{filepaths} =} fullfile (@dots{}, @var{files})
 ## Build complete filename from separate parts.
 ##
 ## Joins any number of path components intelligently.  The return value
 ## is the concatenation of each component with exactly one file separator
 ## between each non empty part.
 ##
+## If the last component part is a cell array, returns a cell array of
+## filepaths, one for each element in the last component, e.g.:
+##
+## @example
+## @group
+## fullfile ("/home/username", "data", @{"f1.csv", "f2.csv", "f3.csv"@})
+## @result{}  /home/username/data/f1.csv
+##     /home/username/data/f2.csv
+##     /home/username/data/f3.csv
+## @end group
+## @end example
+##
 ## @seealso{fileparts}
 ## @end deftypefn
 
 ## Author: Carnë Draug <carandraug@octave.org>
 
 function filename = fullfile (varargin)
 
-  non_empty = cellfun ("isempty", varargin);
-  filename = strjoin (varargin(! non_empty), filesep);
-  filename(strfind (filename, [filesep filesep])) = "";
+  if (nargin && iscell (varargin{end}))
+    filename = cellfun (@(x) fullfile (varargin{1:end-1}, x), varargin{end},
+                                       "UniformOutput", false);
+  else
+    non_empty = cellfun ("isempty", varargin);
+    filename = strjoin (varargin(! non_empty), filesep);
+    filename(strfind (filename, [filesep filesep])) = "";
+  endif
 
 endfunction
 
 
 %!shared fs, fsx, xfs, fsxfs, xfsy
 %! fs = filesep ();
 %! fsx = [fs "x"];
 %! xfs = ["x" fs];
@@ -65,8 +83,10 @@ endfunction
 %!assert (fullfile (fs, "x", fs), fsxfs)
 
 %!assert (fullfile ("a/", "/", "/", "b", "/", "/"), "a/b/")
 %!assert (fullfile ("/", "a/", "/", "/", "b", "/", "/"), "/a/b/")
 %!assert (fullfile ("/a/", "/", "/", "b", "/", "/"), "/a/b/")
 
 ## different on purpose so that "fullfile (c{:})" works for empty c
 %!assert (fullfile (), "")
+
+%!assert (fullfile ("a", "b", {"c", "d"}), {"a/b/c", "a/b/d"})
