# HG changeset patch
# User jwe
# Date 949446395 0
#      Tue Feb 01 23:06:35 2000 +0000
# Node ID ef5c83d6bffc01af1487cf677869cd959edd8504
# Parent  9118c2a3bc79ba8c3035373279c1b3401c15cd51
[project @ 2000-02-01 23:06:35 by jwe]

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,10 +1,13 @@
 2000-02-01  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* data-conv.cc (LS_DO_WRITE): Cast arg to ostream::write to char*.
+	(LS_DO_READ): Likewise, for istream::read.
+
 	* oct-env.cc (octave_env::do_polite_directory_format):
 	Use operator== and substr method to do limited-length string
 	comparison.
 
 	* Array2-idx.h, Array-idx.h: Avoid shadowing warnings for idx.
 
 	* Quad.h: Use do_integrate as name of pure virtual function.
 
diff --git a/liboctave/data-conv.cc b/liboctave/data-conv.cc
--- a/liboctave/data-conv.cc
+++ b/liboctave/data-conv.cc
@@ -184,17 +184,17 @@ oct_data_conv::string_to_data_type (cons
 }
 
 #define swap_1_bytes(x, y)
 
 #define LS_DO_READ(TYPE, swap, data, size, len, stream) \
   do \
     { \
       volatile TYPE *ptr = X_CAST (volatile TYPE *, data); \
-      stream.read (X_CAST (TYPE *, ptr), size * len); \
+      stream.read (X_CAST (char *, ptr), size * len); \
       if (swap) \
         swap_ ## size ## _bytes (ptr, len); \
       TYPE tmp = ptr[0]; \
       for (int i = len - 1; i > 0; i--) \
         data[i] = ptr[i]; \
       data[0] = tmp; \
     } \
   while (0)
@@ -205,17 +205,17 @@ oct_data_conv::string_to_data_type (cons
 #define LS_DO_WRITE(TYPE, data, size, len, stream) \
   do \
     { \
       char tmp_type = static_cast<char> (type); \
       stream.write (&tmp_type, 1); \
       TYPE *ptr = new TYPE [len]; \
       for (int i = 0; i < len; i++) \
         ptr[i] = X_CAST (TYPE, data[i]); \
-      stream.write (ptr, size * len); \
+      stream.write (X_CAST (char *, ptr), size * len); \
       delete [] ptr ; \
     } \
   while (0)
 
 // Loading variables from files.
 
 static void
 gripe_unrecognized_float_fmt (void)
