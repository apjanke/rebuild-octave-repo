# HG changeset patch
# User Andreas Weber <andy.weber.aw@gmail.com>
# Date 1484384647 -3600
#      Sat Jan 14 10:04:07 2017 +0100
# Node ID c2ed86feba05a5e6c2c00676f16356991c963945
# Parent  52d06f98c15e139f092517ebabc10659b7ab0c7e
gl-render.cc: Show OpenGL error also as string

diff --git a/libinterp/corefcn/gl-render.cc b/libinterp/corefcn/gl-render.cc
--- a/libinterp/corefcn/gl-render.cc
+++ b/libinterp/corefcn/gl-render.cc
@@ -696,18 +696,18 @@ namespace octave
         warning ("opengl_renderer: cannot render object of type '%s'",
                  props.graphics_object_name ().c_str ());
       }
 
 #if defined (HAVE_OPENGL)
 
     GLenum gl_error = glGetError ();
     if (gl_error)
-      warning ("opengl_renderer: Error %d occurred drawing '%s' object",
-               gl_error, props.graphics_object_name ().c_str ());
+      warning ("opengl_renderer: Error '%s' (%d) occurred drawing '%s' object",
+               gluErrorString (gl_error), gl_error, props.graphics_object_name ().c_str ());
 
 #endif
   }
 
 #if defined (HAVE_OPENGL)
 
   static std::string
   gl_get_string (GLenum id)
@@ -830,18 +830,18 @@ namespace octave
     if (c.numel () >= 3)
       {
         glClearColor (c(0), c(1), c(2), 1);
         glClear (GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
       }
 
     GLenum gl_error = glGetError ();
     if (gl_error)
-      warning ("opengl_renderer: Error %d occurred in init_gl_context",
-               gl_error);
+      warning ("opengl_renderer: Error '%s' (%d) occurred in init_gl_context",
+               gluErrorString (gl_error), gl_error);
 
 #else
 
     octave_unused_parameter (enhanced);
     octave_unused_parameter (c);
 
     // This shouldn't happen because construction of opengl_renderer
     // objects is supposed to be impossible if OpenGL is not available.
