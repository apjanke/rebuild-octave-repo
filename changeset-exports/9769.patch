# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1257171421 -3600
#      Mon Nov 02 15:17:01 2009 +0100
# Node ID 9a1c4fe44af83d5daadc0ddfc334b76cd1b9cf4a
# Parent  31900e17b5f59b55c4d7539d32cd7b33c82c42e4
small interp1 simplification

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2009-11-02  Jaroslav Hajek  <highegg@gmail.com>
+
+	* general/interp1.m:
+
 2009-11-02  Jaroslav Hajek  <highegg@gmail.com>
 
 	* polynomial/mkpp.m: Improve Matlab compatibility.
 	* polynomial/ppval.m: Ditto.
 	* polynomial/unmkpp: Update.
 	* polynomial/pchip.m: Update and optimize.
 	* polynomial/spline.m: Update.
 	* general/__splinen__.m: Update.
diff --git a/scripts/general/interp1.m b/scripts/general/interp1.m
--- a/scripts/general/interp1.m
+++ b/scripts/general/interp1.m
@@ -122,23 +122,25 @@ function yi = interp1 (x, y, varargin)
 	endif
       endif
     endfor
   endif
 
   ## reshape matrices for convenience
   x = x(:);
   nx = rows (x);
+  szx = size (xi);
   if (isvector (y))
     y = y(:);
+  elseif (isvector (xi))
+    szx = length (xi);    
   endif
   szy = size (y);
   y = y(:,:);
   [ny, nc] = size (y);
-  szx = size (xi);
   xi = xi(:);
 
   ## determine sizes
   if (nx < 2 || ny < 2)
     error ("interp1: table too short");
   endif
 
   ## check whether x is sorted; sort if not.
@@ -288,25 +290,17 @@ function yi = interp1 (x, y, varargin)
       ## unless extrap == "extrap".
       minx = min (x(1), x(nx));
       maxx = max (x(1), x(nx));
 
       outliers = xi < minx | ! (xi <= maxx); # this catches even NaNs
       yi(outliers, :) = extrap;
     endif
 
-    if (! isvector (y) && length (szx) == 2 && (szx(1) == 1 || szx(2) == 1))
-      if (szx(1) == 1)
-	yi = reshape (yi, [szx(2), szy(2:end)]);
-      else
-	yi = reshape (yi, [szx(1), szy(2:end)]);
-      endif
-    else
-      yi = reshape (yi, [szx, szy(2:end)]);
-    endif
+    yi = reshape (yi, [szx, szy(2:end)]);
   endif
 
 endfunction
 
 %!demo
 %! xf=0:0.05:10; yf = sin(2*pi*xf/5);
 %! xp=0:10;      yp = sin(2*pi*xp/5);
 %! lin=interp1(xp,yp,xf,"linear");
