# HG changeset patch
# User jwe
# Date 811496609 0
#      Tue Sep 19 07:43:29 1995 +0000
# Node ID 611c49faddaea7ea4a54fa4c1b22a399a4a74faf
# Parent  164051941de66488eb24084e59c6972c6a7dfcb8
[project @ 1995-09-19 07:43:29 by jwe]
Initial revision

diff --git a/readline/Makefile.in b/readline/Makefile.in
new file mode 100644
--- /dev/null
+++ b/readline/Makefile.in
@@ -0,0 +1,150 @@
+## -*- text -*- ####################################################
+#								   #
+# Makefile for the GNU Readline and History Libraries.		   #
+#								   #
+####################################################################
+
+srcdir = @srcdir@
+VPATH = @srcdir@
+
+INSTALL = @INSTALL@
+INSTALL_PROGRAM = @INSTALL_PROGRAM@
+INSTALL_DATA = @INSTALL_DATA@
+
+CC = @CC@
+CFLAGS = @CFLAGS@
+
+RANLIB = @RANLIB@
+AR = ar
+RM = rm
+CP = cp
+MV = mv
+
+# See the file STANDALONE for the -D defines that readline understands
+DEFS = @DEFS@
+# For libraries which include headers from other libraries.
+LOCAL_INCLUDES = -I. -I..
+
+ALL_CFLAGS = $(LOCAL_INCLUDES) $(DEFS) $(CFLAGS)
+
+# Here is a rule for making .o files from .c files that doesn't force
+# the type of the machine (like -sun3) into the flags.
+.c.o:
+	$(CC) -c $(CPPFLAGS) $(ALL_CFLAGS) $<
+
+# The name of the main library target.
+LIBRARY_NAME = libreadline.a
+
+# The C code source files for this library.
+CSOURCES = readline.c funmap.c keymaps.c vi_mode.c parens.c rltty.c \
+	   complete.c bind.c isearch.c display.c signals.c \
+	   emacs_keymap.c vi_keymap.c history.c tilde.c xmalloc.c
+
+# The header files for this library.
+HSOURCES = readline.h rldefs.h chardefs.h keymaps.h history.h \
+	   posixstat.h tilde.h rlconf.h
+
+OBJECTS = readline.o vi_mode.o funmap.o keymaps.o parens.o search.o \
+	  rltty.o complete.o bind.o isearch.o display.o signals.o \
+	  history.o tilde.o xmalloc.o
+
+DISTFILES = $(CSOURCES) $(HSOURCES) Makefile.in configure.in \
+	configure README STANDALONE COPYING
+
+SUBDIRS = doc examples
+
+# The texinfo files which document this library.
+DOCSOURCE = doc/rlman.texinfo doc/rltech.texinfo doc/rluser.texinfo
+DOCOBJECT = doc/readline.dvi
+DOCSUPPORT = doc/Makefile
+DOCUMENTATION = $(DOCSOURCE) $(DOCOBJECT) $(DOCSUPPORT)
+
+SUPPORT = Makefile ChangeLog $(DOCSUPPORT) examples/[-a-z.]*
+
+SOURCES  = $(CSOURCES) $(HSOURCES) $(DOCSOURCE)
+
+THINGS_TO_TAR = $(SOURCES) $(SUPPORT)
+
+##########################################################################
+
+all: libreadline.a libhistory.a
+
+libreadline.a: $(OBJECTS)
+	$(RM) -f $@
+	$(AR) cq $@ $(OBJECTS)
+	-[ -n "$(RANLIB)" ] && $(RANLIB) $@
+
+libhistory.a: history.o
+	$(RM) -f $@
+	$(AR) cq $@ history.o
+	-[ -n "$(RANLIB)" ] && $(RANLIB) $@
+
+documentation: force
+	[ ! -d doc ] && mkdir doc
+	(if [ -d doc ]; then cd doc; $(MAKE) $(MFLAGS); fi)
+
+force:
+
+# The rule for 'includes' is written funny so that the if statement
+# always returns TRUE unless there really was an error installing the
+# include files.
+install: installdirs libreadline.a
+	${INSTALL_DATA} readline.h keymaps.h chardefs.h history.h \
+		$(incdir)/readline
+	-${MV} $(libdir)/libreadline.a $(libdir)/libreadline.old
+	${INSTALL_DATA} libreadline.a $(bindir)/libreadline.a
+	-[ -n "$(RANLIB)" ] && $(RANLIB) -t $(bindir)/libreadline.a
+
+installdirs:
+	[ ! -d $(incdir)/readline ] && { \
+	  mkdir $(incdir)/readline && chmod chmod 755 $(incdir)/readline; }
+
+uninstall:
+	cd $(incdir)/readline && ${RM} -f ${INSTALLED_HEADERS}
+	cd $(libdir) && ${RM} -f libreadline.a libreadline.old
+
+tags:	force
+	etags $(CSOURCES) $(HSOURCES)
+
+TAGS:	force
+	ctags -x $(CSOURCES) $(HSOURCES) > $@
+
+readline: readline.h rldefs.h chardefs.h
+readline: $(OBJECTS)
+	$(CC) $(CPPFLAGS) $(ALL_CFLAGS) -DTEST -o readline \
+	  readline.c bind.o complete.o display.o funmap.o history.o \
+	  isearch.o keymaps.o parens.o rltty.o search.o signals.o \
+	tilde.o vi_mode.o xmalloc.o -ltermcap
+
+clean:
+	$(RM) -f $(OBJECTS) libreadline.a libhistory.a
+	(if [ -d doc ]; then cd doc; $(MAKE) $(MFLAGS) $@; fi)
+
+maintainer-clean realclean distclean mostlyclean: clean
+	(if [ -d doc ]; then cd doc; $(MAKE) $(MFLAGS) $@; fi)
+
+local-dist:
+	for dir in $(SUBDIRS); do mkdir ../`cat ../.fname`/readline/$$dir; cd $$dir; $(MAKE) $@; cd ..; done
+	ln $(DISTFILES) ../`cat ../.fname`/readline
+.PHONY: local-dist
+
+dist:
+	for dir in $(SUBDIRS); do mkdir ../`cat ../.fname`/readline/$$dir; cd $$dir; $(MAKE) $@; cd ..; done
+	ln $(DISTFILES) ../`cat ../.fname`/readline
+.PHONY: dist
+
+# Dependencies
+readline.o: readline.c readline.h rldefs.h rlconf.h chardefs.h
+readline.o: keymaps.h history.h
+vi_mode.o:  rldefs.h rlconf.h readline.h history.h
+funmap.o:   funmap.c readline.h rlconf.h
+keymaps.o:  keymaps.c emacs_keymap.c vi_keymap.c keymaps.h chardefs.h rlconf.h
+history.o: history.h memalloc.h
+isearch.o: memalloc.h readline.h history.h
+search.o: memalloc.h readline.h history.h
+display.o: readline.h history.h rldefs.h rlconf.h
+complete.o: readline.h rldefs.h rlconf.h
+rltty.o: rldefs.h rlconf.h readline.h
+bind.o: rldefs.h rlconf.h readline.h history.h
+signals.o: rldefs.h rlconf.h readline.h history.h
+parens.o: readline.h
diff --git a/readline/configure.in b/readline/configure.in
new file mode 100644
--- /dev/null
+++ b/readline/configure.in
@@ -0,0 +1,24 @@
+dnl Process this file with autoconf to produce a configure script.
+AC_INIT(readline.c)
+
+AC_PROG_CC
+AC_PROG_CPP
+AC_PROG_GCC_TRADITIONAL
+AC_PROG_INSTALL
+AC_PROG_RANLIB
+
+AC_CHECK_LIB(termcap, tputs)
+
+AC_HEADER_DIRENT
+AC_HEADER_STDC
+AC_HEADER_TIME
+AC_CHECK_HEADERS(fcntl.h sgtty.h termio.h unistd.h varargs.h sys/file.h)
+AC_CHECK_HEADERS(sys/ioctl.h sys/time.h sys/pte.h sys/ptem.h sys/stream.h)
+AC_CHECK_HEADERS(sys/select.h stdlib.h string.h)
+
+AC_FUNC_ALLOCA
+AC_TYPE_SIGNAL
+AC_FUNC_VPRINTF
+AC_CHECK_FUNCS(getwd select strerror strcasecmp strncasecmp)
+
+AC_OUTPUT(doc/Makefile examples/Makefile Makefile)
