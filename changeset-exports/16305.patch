# HG changeset patch
# User Philip Nienhuis <prnienhuis@users.sf.net>
# Date 1363300702 -3600
#      Thu Mar 14 23:38:22 2013 +0100
# Node ID 23636765e00ae6abc099dc2282cbcdb18adc7bf3
# Parent  c8e1b0213e34870deb3d5701ccf480c963db3a58
textscan.m: re-enable reading from file id, test added (bug #38517)

diff --git a/scripts/io/textscan.m b/scripts/io/textscan.m
--- a/scripts/io/textscan.m
+++ b/scripts/io/textscan.m
@@ -178,17 +178,20 @@ function [C, position] = textscan (fid, 
       if (args{headerlines + 1} > 0)
         ## Beware of zero valued headerline, fskipl would skip to EOF
         fskipl (fid, args{headerlines + 1});
         args(headerlines:headerlines+1) = [];
         st_pos = ftell (fid);
       elseif (args{headerlines + 1} < 0)
         warning ("textscan.m: negative headerline value ignored");
       endif
-    endif
+    endif    
+    ## Read a first file chunk. Rest follows after endofline processing
+    [str, count] = fscanf (fid, "%c", BUFLENGTH);
+
   endif
 
   ## Check for empty result
   if (isempty (str))
     warning ("textscan: no data read");
     return;
   endif
 
@@ -502,11 +505,24 @@ endfunction
 %! for k = 1:numel (c{1})
 %!   lh = c{1}{k};
 %!   rh = tc{k};
 %!   rh(rh == ";") = "";
 %!   rh = strtrim (rh);
 %!   assert (strcmp (lh, rh));
 %! end
 
+%% Test reading from a real file
+%!test
+%! f = tmpnam ();
+%! fid = fopen (f, "w+");
+%! d = rand (1, 4);
+%! fprintf (fid, "  %f %f   %f  %f ", d);
+%! fseek (fid, 0, "bof");
+%! A = textscan (fid, "%f %f");
+%! fclose (fid);
+%! unlink (f);
+%! assert (A{1}, [d(1); d(3)], 1e-6);
+%! assert (A{2}, [d(2); d(4)], 1e-6);
+
 %!error <missing or illegal value for> textread (file_in_loadpath ("textscan.m"), "", "headerlines")
 %!error <missing or illegal value for> textread (file_in_loadpath ("textscan.m"), "", "headerlines", 'hh')
 %!error <character value required for> textread (file_in_loadpath ("textscan.m"), "", "endofline", true)
