# HG changeset patch
# User Rik <rik@octave.org>
# Date 1343431878 25200
#      Fri Jul 27 16:31:18 2012 -0700
# Node ID bc61fba0e9fd948dde33317996cc924e902c0696
# Parent  e753177cde93e958d72dd9a1e7acb458d62469c2
doc: Periodic spellcheck of documentation.

* aspell-octave.en.pws: Add new words to custom Octave dictionary.

* cmunique.m: Use nospell macro to stop testing word fragment.

* eig.cc: Change "nonsymmetric" to "non-symmetric".

diff --git a/doc/interpreter/doccheck/aspell-octave.en.pws b/doc/interpreter/doccheck/aspell-octave.en.pws
--- a/doc/interpreter/doccheck/aspell-octave.en.pws
+++ b/doc/interpreter/doccheck/aspell-octave.en.pws
@@ -445,16 +445,17 @@ ipermute
 ishandle
 ishghandle
 isolines
 isosurface
 isovalue
 isreal
 issparse
 isvector
+iter
 ith
 iy
 Jacobian
 Jacobians
 ji
 jpeg
 JPEG
 jpg
@@ -606,16 +607,17 @@ NaNs
 nargin
 nbincdf
 nbininv
 nbinpdf
 nbinrnd
 nd
 ndgrid
 ne
+Nelder
 neq
 Neudecker
 Neumann
 NeXT
 nfev
 nfft
 Ng
 ni
diff --git a/scripts/image/cmunique.m b/scripts/image/cmunique.m
--- a/scripts/image/cmunique.m
+++ b/scripts/image/cmunique.m
@@ -24,18 +24,18 @@
 ## Convert an input image @var{X} to an ouput indexed image @var{Y} which uses
 ## the smallest colormap possible @var{newmap}.
 ##
 ## When the input is an indexed image (@var{X} with colormap @var{map}) the 
 ## output is a colormap @var{newmap} from which any repeated rows have been
 ## eliminated.  The output image, @var{Y}, is the original input image with
 ## the indices adjusted to match the new, possibly smaller, colormap.
 ##
-## When the input is an RGB image (an MxNx3 array), the output colormap
-## will contain one entry for every unique color in the original image.  
+## When the input is an RGB image (an @nospell{MxNx3} array), the output
+## colormap will contain one entry for every unique color in the original image.
 ## In the worst case the new map could have as many rows as the number of
 ## pixels in the original image.
 ##
 ## When the input is a grayscale image @var{I}, the output colormap will
 ## contain one entry for every unique intensity value in the original image.
 ## In the worst case the new map could have as many rows as the number of
 ## pixels in the original image.
 ##
diff --git a/src/corefcn/eig.cc b/src/corefcn/eig.cc
--- a/src/corefcn/eig.cc
+++ b/src/corefcn/eig.cc
@@ -39,17 +39,17 @@ DEFUN (eig, args, nargout,
 @deftypefnx {Built-in Function} {@var{lambda} =} eig (@var{A}, @var{B})\n\
 @deftypefnx {Built-in Function} {[@var{V}, @var{lambda}] =} eig (@var{A})\n\
 @deftypefnx {Built-in Function} {[@var{V}, @var{lambda}] =} eig (@var{A}, @var{B})\n\
 Compute the eigenvalues (and optionally the eigenvectors) of a matrix\n\
 or a pair of matrices\n\
 \n\
 The algorithm used depends on whether there are one or two input\n\
 matrices, if they are real or complex and if they are symmetric\n\
-(Hermitian if complex) or nonsymmetric.\n\
+(Hermitian if complex) or non-symmetric.\n\
 \n\
 The eigenvalues returned by @code{eig} are not ordered.\n\
 @seealso{eigs, svd}\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
   int nargin = args.length ();
