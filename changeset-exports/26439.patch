# HG changeset patch
# User Rik <rik@octave.org>
# Date 1546649593 28800
#      Fri Jan 04 16:53:13 2019 -0800
# Branch stable
# Node ID 4d5bf84ae2491c8807f809473ad449754a4669b1
# Parent  c048a6ac0f791d3eae7009ad03c59291193ddfe6
lo-utils.cc: Fix static analyzer detected issues (bug #55347).

* lo-utils.cc (octave_fgets): Check validity of pointers before using and call
current_liboctave_error_handler to exit if necessary.

diff --git a/liboctave/util/lo-utils.cc b/liboctave/util/lo-utils.cc
--- a/liboctave/util/lo-utils.cc
+++ b/liboctave/util/lo-utils.cc
@@ -97,31 +97,40 @@ octave_fgets (FILE *f, bool& eof)
   eof = false;
 
   std::string retval;
 
   int grow_size = 1024;
   int max_size = grow_size;
 
   char *buf = static_cast<char *> (std::malloc (max_size));
+  if (! buf)
+    (*current_liboctave_error_handler) ("octave_fgets: unable to malloc %d bytes", max_size);
+
   char *bufptr = buf;
   int len = 0;
 
   do
     {
       if (std::fgets (bufptr, grow_size, f))
         {
           len = strlen (bufptr);
 
           if (len == grow_size - 1)
             {
               int tmp = bufptr - buf + grow_size - 1;
               grow_size *= 2;
               max_size += grow_size;
-              buf = static_cast<char *> (std::realloc (buf, max_size));
+              auto tmpbuf = static_cast<char *> (std::realloc (buf, max_size));
+              if (! tmpbuf)
+                {
+                  free (buf);
+                  (*current_liboctave_error_handler) ("octave_fgets: unable to realloc %d bytes", max_size);
+                }
+              buf = tmpbuf;
               bufptr = buf + tmp;
 
               if (*(bufptr-1) == '\n')
                 {
                   *bufptr = '\0';
                   retval = buf;
                 }
             }
