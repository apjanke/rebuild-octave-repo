# HG changeset patch
# User Kai T. Ohlhus <k.ohlhus@gmail.com>
# Date 1542447667 -3600
#      Sat Nov 17 10:41:07 2018 +0100
# Node ID 1002b49ce7b352db17954bae29750fb8ed7cc724
# Parent  fda3bc89c5282bf89ad663c7fdb1caa46ff181d0
Make use of native file dialogs configurable (bug #54607).

New qt option "use_native_file_dialogs" to control application of
QFileDialog::DontUseNativeDialog:

* libgui/src/dialog.cc (FileDialog):
* libgui/src/files-dock-widget.cc (popdownmenu_search_dir):
* libgui/src/find-files-dialog.cc (browse_folders):
* libgui/src/m-editor/file-editor-tab.cc (save_file_as):
* libgui/src/main-window.cc (handle_save_workspace_request,
  handle_load_workspace_request, browse_for_directory, request_open_file):
* libgui/src/settings-dialog.cc (get_dir):
* libgui/src/shortcut-manager.cc (do_import_export):
* libgui/src/variable-editor.cc (save):


New checkbox "cb_use_native_file_dialogs" associated with qt option
"use_native_file_dialogs":

* libgui/src/settings-dialog.cc (settings_dialog, write_changed_settings):
* libgui/src/settings-dialog.ui:

diff --git a/libgui/src/dialog.cc b/libgui/src/dialog.cc
--- a/libgui/src/dialog.cc
+++ b/libgui/src/dialog.cc
@@ -21,16 +21,17 @@ along with Octave; see the file COPYING.
 
 */
 
 #if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "dialog.h"
+#include "resource-manager.h"
 
 #include <QString>
 #include <QStringList>
 #include <QStringListModel>
 #include <QListView>
 #include <QFileInfo>
 // Could replace most of these with #include <QtGui>
 #include <QMessageBox>
@@ -457,16 +458,21 @@ namespace octave
                           const QString& multimode)
     : QFileDialog ()
   {
     // Create a NonModal message.
     setWindowModality (Qt::NonModal);
 
     setWindowTitle (title.isEmpty () ? " " : title);
     setDirectory (dirname);
+    
+    // FIXME: Remove, if for all common KDE versions (bug #54607) is resolved.
+    if (! resource_manager::get_settings ()->value ("use_native_file_dialogs",
+                                                    true).toBool ())
+      setOption(QFileDialog::DontUseNativeDialog);
 
     if (multimode == "on")         // uigetfile multiselect=on
       {
         setFileMode (QFileDialog::ExistingFiles);
         setAcceptMode (QFileDialog::AcceptOpen);
       }
     else if (multimode == "create") // uiputfile
       {
diff --git a/libgui/src/files-dock-widget.cc b/libgui/src/files-dock-widget.cc
--- a/libgui/src/files-dock-widget.cc
+++ b/libgui/src/files-dock-widget.cc
@@ -847,20 +847,26 @@ namespace octave
     if (dir.isEmpty ())
       dir = QDir::homePath ();
 
     set_current_directory (dir);
   }
 
   void files_dock_widget::popdownmenu_search_dir (bool)
   {
+    // FIXME: Remove, if for all common KDE versions (bug #54607) is resolved.
+    int opts = QFileDialog::ShowDirsOnly;
+    if (! resource_manager::get_settings ()->value ("use_native_file_dialogs",
+                                                    true).toBool ())
+      opts |= QFileDialog::DontUseNativeDialog;
+
     QString dir = QFileDialog::getExistingDirectory (this,
                      tr ("Set directory of file browser"),
                      m_file_system_model->rootPath (),
-                     QFileDialog::ShowDirsOnly);
+                     QFileDialog::Option (opts));
     set_current_directory (dir);
   }
 
   void files_dock_widget::popdownmenu_findfiles (bool)
   {
     process_find_files (m_file_system_model->rootPath ());
   }
 
diff --git a/libgui/src/find-files-dialog.cc b/libgui/src/find-files-dialog.cc
--- a/libgui/src/find-files-dialog.cc
+++ b/libgui/src/find-files-dialog.cc
@@ -308,19 +308,26 @@ namespace octave
     find_files_model *m = static_cast<find_files_model *> (m_file_list->model ());
     QString res_str = QString (tr ("%1 match (es)")).arg (m->rowCount ());
 
     m_status_bar->showMessage (res_str);
   }
 
   void find_files_dialog::browse_folders (void)
   {
+    int opts = 0;  // No options by default.
+    // FIXME: Remove, if for all common KDE versions (bug #54607) is resolved.
+    if (! resource_manager::get_settings ()->value ("use_native_file_dialogs",
+                                                    true).toBool ())
+      opts = QFileDialog::DontUseNativeDialog;
+
     QString dir =
       QFileDialog::getExistingDirectory (this, tr ("Set search directory"),
-                                         m_start_dir_edit->text ());
+                                         m_start_dir_edit->text (),
+                                         QFileDialog::Option (opts));
 
     if (! dir.isEmpty ())
       m_start_dir_edit->setText (dir);
   }
 
   void find_files_dialog::item_double_clicked (const QModelIndex& idx)
   {
     find_files_model *m = static_cast<find_files_model *> (m_file_list->model ());
diff --git a/libgui/src/m-editor/file-editor-tab.cc b/libgui/src/m-editor/file-editor-tab.cc
--- a/libgui/src/m-editor/file-editor-tab.cc
+++ b/libgui/src/m-editor/file-editor-tab.cc
@@ -2223,16 +2223,21 @@ namespace octave
         QString fname = get_function_name ();
         if (! fname.isEmpty ())
           fileDialog->selectFile (fname + ".m");
       }
 
     fileDialog->setAcceptMode (QFileDialog::AcceptSave);
     fileDialog->setViewMode (QFileDialog::Detail);
 
+    // FIXME: Remove, if for all common KDE versions (bug #54607) is resolved.
+    if (! resource_manager::get_settings ()->value ("use_native_file_dialogs",
+                                                    true).toBool ())
+      fileDialog->setOption(QFileDialog::DontUseNativeDialog);
+
     connect (fileDialog, SIGNAL (filterSelected (const QString&)),
              this, SLOT (handle_save_as_filter_selected (const QString&)));
 
     if (remove_on_success)
       {
         connect (fileDialog, SIGNAL (fileSelected (const QString&)),
                  this, SLOT (handle_save_file_as_answer_close (const QString&)));
 
diff --git a/libgui/src/main-window.cc b/libgui/src/main-window.cc
--- a/libgui/src/main-window.cc
+++ b/libgui/src/main-window.cc
@@ -378,35 +378,47 @@ namespace octave
 
   void main_window::report_status_message (const QString& statusMessage)
   {
     m_status_bar->showMessage (statusMessage, 1000);
   }
 
   void main_window::handle_save_workspace_request (void)
   {
+    // FIXME: Remove, if for all common KDE versions (bug #54607) is resolved.
+    int opts = 0;  // No options by default.
+    if (! resource_manager::get_settings ()->value ("use_native_file_dialogs",
+                                                    true).toBool ())
+      opts = QFileDialog::DontUseNativeDialog;
+
     QString file
       = QFileDialog::getSaveFileName (this, tr ("Save Workspace As"), ".",
-                                      nullptr, nullptr);
+                                      nullptr, nullptr, QFileDialog::Option (opts));
 
     if (! file.isEmpty ())
       {
         octave_cmd_builtin *cmd
                 = new octave_cmd_builtin (&Fsave, ovl (file.toStdString ()));
         queue_cmd (cmd);
       }
   }
 
   void main_window::handle_load_workspace_request (const QString& file_arg)
   {
+    // FIXME: Remove, if for all common KDE versions (bug #54607) is resolved.
+    int opts = 0;  // No options by default.
+    if (! resource_manager::get_settings ()->value ("use_native_file_dialogs",
+                                                    true).toBool ())
+      opts = QFileDialog::DontUseNativeDialog;
+
     QString file = file_arg;
 
     if (file.isEmpty ())
       file = QFileDialog::getOpenFileName (this, tr ("Load Workspace"), ".",
-                                           nullptr, nullptr);
+                                           nullptr, nullptr, QFileDialog::Option (opts));
 
     if (! file.isEmpty ())
       {
         octave_cmd_builtin *cmd
             = new octave_cmd_builtin (&Fload, ovl (file.toStdString ()),
                                       octave_cmd_builtin::CMD_UPD_WORKSPACE);
         queue_cmd (cmd);
       }
@@ -871,19 +883,25 @@ namespace octave
       m_current_directory_combo_box->removeItem (index);
 
     m_current_directory_combo_box->insertItem (0, dir);
     m_current_directory_combo_box->setCurrentIndex (0);
   }
 
   void main_window::browse_for_directory (void)
   {
+    // FIXME: Remove, if for all common KDE versions (bug #54607) is resolved.
+    int opts = QFileDialog::ShowDirsOnly;
+    if (! resource_manager::get_settings ()->value ("use_native_file_dialogs",
+                                                    true).toBool ())
+      opts = QFileDialog::DontUseNativeDialog;
+
     QString dir
       = QFileDialog::getExistingDirectory (this, tr ("Browse directories"), nullptr,
-                                           QFileDialog::ShowDirsOnly);
+                                           QFileDialog::Option (opts));
 
     set_current_working_directory (dir);
 
     // FIXME: on Windows systems, the command window freezes after the
     // previous actions.  Forcing the focus appears to unstick it.
 
     focus_command_window ();
   }
@@ -1037,16 +1055,21 @@ namespace octave
     QFileDialog *fileDialog = new QFileDialog (p);
     fileDialog->setNameFilter (tr ("Octave Files (*.m);;All Files (*)"));
 
     fileDialog->setAcceptMode (QFileDialog::AcceptOpen);
     fileDialog->setViewMode (QFileDialog::Detail);
     fileDialog->setFileMode (QFileDialog::ExistingFiles);
     fileDialog->setDirectory (m_current_directory_combo_box->itemText (0));
 
+    // FIXME: Remove, if for all common KDE versions (bug #54607) is resolved.
+    if (! resource_manager::get_settings ()->value ("use_native_file_dialogs",
+                                                    true).toBool ())
+      fileDialog->setOption(QFileDialog::DontUseNativeDialog);
+
     connect (fileDialog, SIGNAL (filesSelected (const QStringList&)),
              this, SLOT (request_open_files (const QStringList&)));
 
     fileDialog->setWindowModality (Qt::NonModal);
     fileDialog->setAttribute (Qt::WA_DeleteOnClose);
     fileDialog->show ();
   }
 
diff --git a/libgui/src/settings-dialog.cc b/libgui/src/settings-dialog.cc
--- a/libgui/src/settings-dialog.cc
+++ b/libgui/src/settings-dialog.cc
@@ -185,18 +185,24 @@ namespace octave
     layout_widget_fgtitle_active->addWidget (m_widget_title_fg_color_active, 0);
 
     connect (cb_widget_custom_style, SIGNAL (toggled (bool)),
              m_widget_title_fg_color_active, SLOT (setEnabled (bool)));
 
     sb_3d_title->setValue (settings->value ("DockWidgets/widget_title_3d", 50).toInt ());
     cb_widget_custom_style->setChecked (settings->value ("DockWidgets/widget_title_custom_style", false).toBool ());
 
+    // Native file dialogs.
+    // FIXME: This preference can be deprecated / removed if all display
+    //       managers, especially KDE, run those dialogs without hangs or
+    //       delays from the start (bug #54607).
+    cb_use_native_file_dialogs->setChecked (settings->value ("use_native_file_dialogs", true).toBool ());
+
     // Cursor blinking: consider old terminal related setting if not yet set
-    // TODO: This pref. can be deprecated / removed if Qt adds support for
+    // FIXME: This pref. can be deprecated / removed if Qt adds support for
     //       getting the cursor blink preferences from all OS environments
     if (settings->contains ("cursor_blinking"))
       {
         // Preference exists, read its value
         cb_cursor_blinking->setChecked (settings->value ("cursor_blinking", true).toBool ());
       }
     else
       {
@@ -519,18 +525,24 @@ namespace octave
 
   void settings_dialog::get_file_browser_dir (void)
   {
     get_dir (le_file_browser_dir, tr ("Set File Browser Startup Directory"));
   }
 
   void settings_dialog::get_dir (QLineEdit *line_edit, const QString& title)
   {
+    // FIXME: Remove, if for all common KDE versions (bug #54607) is resolved.
+    int opts = QFileDialog::ShowDirsOnly | QFileDialog::DontResolveSymlinks;
+    if (! resource_manager::get_settings ()->value ("use_native_file_dialogs",
+                                                    true).toBool ())
+      opts |= QFileDialog::DontUseNativeDialog;
+
     QString dir = QFileDialog::getExistingDirectory
-      (this, title, line_edit->text (), QFileDialog::ShowDirsOnly | QFileDialog::DontResolveSymlinks);
+      (this, title, line_edit->text (), QFileDialog::Option (opts));
 
     line_edit->setText (dir);
   }
 
   void settings_dialog::button_clicked (QAbstractButton *button)
   {
     QDialogButtonBox::ButtonRole button_role = button_box->buttonRole (button);
 
@@ -805,16 +817,19 @@ namespace octave
     // icon size
     int icon_size = 0;
     if (icon_size_small->isChecked ())
       icon_size = -1;
     else if (icon_size_large->isChecked ())
       icon_size = 1;
     settings->setValue ("toolbar_icon_size", icon_size);
 
+    // native file dialogs
+    settings->setValue ("use_native_file_dialogs", cb_use_native_file_dialogs->isChecked ());
+
     // cursor blinking
     settings->setValue ("cursor_blinking", cb_cursor_blinking->isChecked ());
 
     // promp to exit
     settings->setValue ("prompt_to_exit", cb_prompt_to_exit->isChecked ());
 
     // status bar
     settings->setValue ("show_status_bar", cb_status_bar->isChecked ());
diff --git a/libgui/src/settings-dialog.ui b/libgui/src/settings-dialog.ui
--- a/libgui/src/settings-dialog.ui
+++ b/libgui/src/settings-dialog.ui
@@ -27,17 +27,17 @@
     <widget class="QTabWidget" name="tabWidget">
      <property name="minimumSize">
       <size>
        <width>0</width>
        <height>0</height>
       </size>
      </property>
      <property name="currentIndex">
-      <number>4</number>
+      <number>0</number>
      </property>
      <widget class="QWidget" name="tab_general">
       <property name="enabled">
        <bool>true</bool>
       </property>
       <attribute name="title">
        <string>General</string>
       </attribute>
@@ -47,18 +47,18 @@
          <property name="widgetResizable">
           <bool>true</bool>
          </property>
          <widget class="QWidget" name="scrollAreaWidgetContents_2">
           <property name="geometry">
            <rect>
             <x>0</x>
             <y>0</y>
-            <width>658</width>
-            <height>571</height>
+            <width>664</width>
+            <height>570</height>
            </rect>
           </property>
           <layout class="QVBoxLayout" name="verticalLayout_17">
            <item>
             <widget class="QGroupBox" name="groupBox">
              <property name="title">
               <string>Interface</string>
              </property>
@@ -135,17 +135,17 @@
                   <property name="text">
                    <string>Icon size</string>
                   </property>
                   <property name="alignment">
                    <set>Qt::AlignLeading|Qt::AlignLeft|Qt::AlignTop</set>
                   </property>
                  </widget>
                 </item>
-                <item row="7" column="0">
+                <item row="8" column="0">
                  <widget class="QCheckBox" name="cb_prompt_to_exit">
                   <property name="text">
                    <string>Confirm before exiting</string>
                   </property>
                  </widget>
                 </item>
                 <item row="1" column="0">
                  <widget class="QLabel" name="label_2">
@@ -369,36 +369,46 @@
                 </item>
                 <item row="3" column="0">
                  <widget class="QLabel" name="label_9">
                   <property name="text">
                    <string>Icon set for dock widgets</string>
                   </property>
                  </widget>
                 </item>
-                <item row="6" column="0">
+                <item row="7" column="0">
                  <widget class="QCheckBox" name="cb_status_bar">
                   <property name="text">
                    <string>Show status bar</string>
                   </property>
                   <property name="checked">
                    <bool>true</bool>
                   </property>
                  </widget>
                 </item>
-                <item row="5" column="0">
+                <item row="6" column="0">
                  <widget class="QCheckBox" name="cb_cursor_blinking">
                   <property name="text">
                    <string>Cursor blinking</string>
                   </property>
                   <property name="checked">
                    <bool>true</bool>
                   </property>
                  </widget>
                 </item>
+                <item row="5" column="0">
+                 <widget class="QCheckBox" name="cb_use_native_file_dialogs">
+                  <property name="text">
+                   <string>Use native file dialogs</string>
+                  </property>
+                  <property name="checked">
+                   <bool>true</bool>
+                  </property>
+                 </widget>
+                </item>
                </layout>
               </item>
              </layout>
             </widget>
            </item>
            <item>
             <widget class="QGroupBox" name="groupBox_2">
              <property name="title">
@@ -504,18 +514,18 @@
          <property name="widgetResizable">
           <bool>true</bool>
          </property>
          <widget class="QWidget" name="scrollAreaWidgetContents_4">
           <property name="geometry">
            <rect>
             <x>0</x>
             <y>0</y>
-            <width>658</width>
-            <height>571</height>
+            <width>664</width>
+            <height>570</height>
            </rect>
           </property>
           <layout class="QVBoxLayout" name="verticalLayout_7">
            <item>
             <layout class="QVBoxLayout" name="verticalLayout_8">
              <item>
               <layout class="QGridLayout" name="gridLayout_7">
                <property name="sizeHint" stdset="0">
@@ -785,18 +795,18 @@
          <property name="widgetResizable">
           <bool>true</bool>
          </property>
          <widget class="QWidget" name="scrollAreaWidgetContents">
           <property name="geometry">
            <rect>
             <x>0</x>
             <y>0</y>
-            <width>645</width>
-            <height>1213</height>
+            <width>647</width>
+            <height>1360</height>
            </rect>
           </property>
           <layout class="QVBoxLayout" name="verticalLayout_16">
            <item>
             <widget class="QGroupBox" name="groupBox_5">
              <property name="title">
               <string>General</string>
              </property>
@@ -2111,18 +2121,18 @@
          <property name="widgetResizable">
           <bool>true</bool>
          </property>
          <widget class="QWidget" name="scrollAreaWidgetContents_5">
           <property name="geometry">
            <rect>
             <x>0</x>
             <y>0</y>
-            <width>658</width>
-            <height>571</height>
+            <width>664</width>
+            <height>570</height>
            </rect>
           </property>
           <layout class="QGridLayout" name="gridLayout_8">
            <item row="0" column="0">
             <widget class="QGroupBox" name="groupBox_4">
              <property name="title">
               <string>Behavior</string>
              </property>
@@ -2255,18 +2265,18 @@
          <property name="widgetResizable">
           <bool>true</bool>
          </property>
          <widget class="QWidget" name="scrollAreaWidgetContents_6">
           <property name="geometry">
            <rect>
             <x>0</x>
             <y>0</y>
-            <width>658</width>
-            <height>571</height>
+            <width>664</width>
+            <height>570</height>
            </rect>
           </property>
           <layout class="QVBoxLayout" name="verticalLayout_19">
            <item>
             <layout class="QGridLayout" name="gridLayout_14">
              <property name="topMargin">
               <number>0</number>
              </property>
@@ -2317,18 +2327,18 @@
          <property name="widgetResizable">
           <bool>true</bool>
          </property>
          <widget class="QWidget" name="scrollAreaWidgetContents_3">
           <property name="geometry">
            <rect>
             <x>0</x>
             <y>0</y>
-            <width>669</width>
-            <height>558</height>
+            <width>780</width>
+            <height>550</height>
            </rect>
           </property>
           <layout class="QVBoxLayout" name="verticalLayout_vesc_manual">
            <property name="geometry" stdset="0">
             <rect>
              <x>0</x>
              <y>0</y>
              <width>678</width>
@@ -2519,18 +2529,18 @@
          <property name="widgetResizable">
           <bool>true</bool>
          </property>
          <widget class="QWidget" name="scrollAreaWidgetContents_8">
           <property name="geometry">
            <rect>
             <x>0</x>
             <y>0</y>
-            <width>658</width>
-            <height>571</height>
+            <width>664</width>
+            <height>570</height>
            </rect>
           </property>
           <layout class="QVBoxLayout" name="verticalLayout_25">
            <item>
             <layout class="QVBoxLayout" name="verticalLayout_26">
              <property name="sizeConstraint">
               <enum>QLayout::SetDefaultConstraint</enum>
              </property>
@@ -2718,18 +2728,18 @@
          <property name="widgetResizable">
           <bool>true</bool>
          </property>
          <widget class="QWidget" name="scrollAreaWidgetContents_7">
           <property name="geometry">
            <rect>
             <x>0</x>
             <y>0</y>
-            <width>658</width>
-            <height>571</height>
+            <width>664</width>
+            <height>570</height>
            </rect>
           </property>
           <layout class="QVBoxLayout" name="verticalLayout_20">
            <item>
             <layout class="QVBoxLayout" name="verticalLayout">
              <item>
               <widget class="QCheckBox" name="checkbox_allow_web_connect">
                <property name="text">
diff --git a/libgui/src/shortcut-manager.cc b/libgui/src/shortcut-manager.cc
--- a/libgui/src/shortcut-manager.cc
+++ b/libgui/src/shortcut-manager.cc
@@ -668,26 +668,32 @@ namespace octave
       }
 
     // get the filename to read or write the shortcuts,
     // the default extension is .osc (octave shortcuts)
     if (action != OSC_DEFAULT)
       {
         QString file;
 
+        // FIXME: Remove, if for all common KDE versions (bug #54607) is resolved.
+        int opts = 0;  // No options by default.
+        if (! resource_manager::get_settings ()->value ("use_native_file_dialogs",
+                                                        true).toBool ())
+          opts = QFileDialog::DontUseNativeDialog;
+
         if (action == OSC_IMPORT)
           file = QFileDialog::getOpenFileName (this,
                                                tr ("Import shortcuts from file..."), QString (),
                                                tr ("Octave Shortcut Files (*.osc);;All Files (*)"),
-                                               nullptr);
+                                               nullptr, QFileDialog::Option (opts));
         else if (action == OSC_EXPORT)
           file = QFileDialog::getSaveFileName (this,
                                                tr ("Export shortcuts to file..."), QString (),
                                                tr ("Octave Shortcut Files (*.osc);;All Files (*)"),
-                                               nullptr);
+                                               nullptr, QFileDialog::Option (opts));
 
         if (file.isEmpty ())
           return false;
 
         QSettings *osc_settings = new QSettings (file, QSettings::IniFormat);
 
         if (! osc_settings)
           {
diff --git a/libgui/src/variable-editor.cc b/libgui/src/variable-editor.cc
--- a/libgui/src/variable-editor.cc
+++ b/libgui/src/variable-editor.cc
@@ -439,23 +439,29 @@ namespace octave
   }
 
   void
   variable_editor_stack::save (void)
   {
     if (! hasFocus ())
       return;
 
+    // FIXME: Remove, if for all common KDE versions (bug #54607) is resolved.
+    int opts = 0;  // No options by default.
+    if (! resource_manager::get_settings ()->value ("use_native_file_dialogs",
+                                                    true).toBool ())
+      opts = QFileDialog::DontUseNativeDialog;
+
     QString name = objectName ();
     QString file
       = QFileDialog::getSaveFileName (this,
                                       tr ("Save Variable %1 As").arg (name),
     // FIXME: Should determine extension from save_default_options
                                       QString ("./%1.txt").arg (name),
-                                      0, 0);
+                                      0, 0, QFileDialog::Option (opts));
 
     // FIXME: Type? binary, float-binary, ascii, text, hdf5, matlab format?
     // FIXME: Call octave_value::save_* directly?
 
     if (! file.isEmpty ())
       emit command_signal (QString ("save (\"%1\", \"%2\");")
                            .arg (file)
                            .arg (name));
