# HG changeset patch
# User Torsten <ttl@justmail.de>
# Date 1431547256 -7200
#      Wed May 13 22:00:56 2015 +0200
# Branch stable
# Node ID ac3746f39fabb2229884d9262c291e83c1ab96ea
# Parent  7e01182ee36c68ac9b6b6820452756f2d6fc990f
make action shortcuts available in floating widgets (bug #45078)

* main-window.cc (construct): emit a list of actions which should also
  be available in dock widgets

* main-window.h: new signal for the list of actions

* octave-dock-widget.cc (octave_dock_widget): connect new signal with
  action list to the related new slot;
  (add_actions): new slot for adding main windows actions

* octave-dock-widget.h: new slot

diff --git a/libgui/src/main-window.cc b/libgui/src/main-window.cc
--- a/libgui/src/main-window.cc
+++ b/libgui/src/main-window.cc
@@ -1425,16 +1425,25 @@ main_window::construct (void)
                SLOT (handle_update_breakpoint_marker_request (bool,
                                                               const QString&,
                                                               int)));
 #endif
 
       octave_link::post_event (this, &main_window::resize_command_window_callback);
 
       configure_shortcuts ();
+
+      // actions that should be available in floating dock widgets, too
+      QList<QAction *> action_list;
+      action_list.append (_copy_action);
+      action_list.append (_paste_action);
+      action_list.append (_select_all_action);
+      action_list.append (_undo_action);
+      emit add_actions_signal (action_list);  // signal for adding these actions
+
     }
 }
 
 
 void
 main_window::handle_octave_ready ()
 {
   // actions after the startup files are executed
diff --git a/libgui/src/main-window.h b/libgui/src/main-window.h
--- a/libgui/src/main-window.h
+++ b/libgui/src/main-window.h
@@ -100,16 +100,18 @@ signals:
   void update_breakpoint_marker_signal (bool insert, const QString& file,
                                         int line);
 
   void copyClipboard_signal (void);
   void pasteClipboard_signal (void);
   void selectAll_signal (void);
   void undo_signal (void);
 
+  void add_actions_signal (QList <QAction *> action_list);
+
 public slots:
 
   void focus_changed (QWidget *w_old, QWidget *w_new);
   void request_reload_settings ();
 
   void report_status_message (const QString& statusMessage);
   void handle_save_workspace_request (void);
   void handle_load_workspace_request (const QString& file = QString ());
diff --git a/libgui/src/octave-dock-widget.cc b/libgui/src/octave-dock-widget.cc
--- a/libgui/src/octave-dock-widget.cc
+++ b/libgui/src/octave-dock-widget.cc
@@ -104,16 +104,19 @@ octave_dock_widget::octave_dock_widget (
                QDockWidget::DockWidgetClosable |
                QDockWidget::DockWidgetFloatable); // floatable and closeable
 
   connect (this, SIGNAL (topLevelChanged (bool)),
            this, SLOT (change_floating (bool)));
 
 #endif
 
+  // adding actions of the main window
+  connect (p, SIGNAL (add_actions_signal (QList<QAction *>)),
+           this, SLOT (add_actions (QList<QAction *>)));
   // copy & paste handling
   connect (p, SIGNAL (copyClipboard_signal ()),
            this, SLOT (copyClipboard ()));
   connect (p, SIGNAL (pasteClipboard_signal ()),
            this, SLOT (pasteClipboard ()));
   connect (p, SIGNAL (selectAll_signal ()),
            this, SLOT (selectAll ()));
   // undo handling
@@ -472,16 +475,23 @@ octave_dock_widget::handle_active_dock_c
 
   if (_custom_style && this == w_new)
     {
       set_style (true);
       update ();
     }
 }
 
+// slot for adding actions from the main window
+void
+octave_dock_widget::add_actions (QList<QAction *> action_list)
+{
+  if (objectName () != "FileEditor")
+    addActions (action_list);
+}
 
 // close event
 void
 octave_dock_widget::closeEvent (QCloseEvent *e)
 {
   emit active_changed (false);
   set_focus_predecessor ();
   QDockWidget::closeEvent (e);
diff --git a/libgui/src/octave-dock-widget.h b/libgui/src/octave-dock-widget.h
--- a/libgui/src/octave-dock-widget.h
+++ b/libgui/src/octave-dock-widget.h
@@ -97,16 +97,18 @@ protected slots:
   virtual void pasteClipboard () {  }
   virtual void selectAll () {  }
   /** slots to handle undo */
   virtual void do_undo () {  }
 
   // event filter for double clicks into the window decoration elements
   bool eventFilter(QObject *obj, QEvent *e);
 
+  virtual void add_actions (QList<QAction *> action_list);
+
 private slots:
 
   void change_floating (bool);
   void change_visibility (bool);
 
 private:
 
   void set_style (bool active);
