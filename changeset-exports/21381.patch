# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1456817233 18000
#      Tue Mar 01 02:27:13 2016 -0500
# Node ID e5d96f39a37d23410942c573414ec3ab874d082e
# Parent  46094355423375f9000a7f32e2daf967c5ae93dc
configure script fixes

* configure.ac: Use AC_ARG_WITH for Qt.  Adjust usage and error
message for --without-qt option.
Fix message for --without-opengl option.
Fix error message for GraphicsMagick library.  Don't perform
GraphicsMagick library checks if --without-magick is specified.
Avoid quoting problem in setting AM_CONDITIONAL for QScintilla.

* acinclude.m4 (OCTAVE_CHECK_LIB): Provide separate error message if
the --without-LIB option is used.

diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -1010,17 +1010,17 @@ CPPFLAGS="$save_CPPFLAGS"
 ### Check for sndfile
 
 warn_sndfile="sndfile library fails tests.  The audioinfo, audioread, and audiowrite functions for reading and writing audio files will not be fully functional."
 
 check_sndfile=no
 AC_ARG_WITH([sndfile],
   [AS_HELP_STRING([--without-sndfile],
     [don't use sndfile library, disable audio file I/O])],
-  [if test x"$withval" = x"no"; then
+  [if test x"$withval" = xno; then
      warn_sndfile="--without-sndfile specified.  The audioinfo, audioread, and audiowrite functions for reading and writing audio files will not be fully functional."
    else
      check_sndfile=yes
    fi],
   [check_sndfile=yes])
 
 if test $check_sndfile = yes; then
   PKG_CHECK_EXISTS([sndfile], [
@@ -1047,17 +1047,17 @@ AC_SUBST(SNDFILE_LIBS)
 ### Check for PortAudio
 
 warn_portaudio="PortAudio library fails tests.  The audioplayer, audiorecorder classes, and audiodevinfo function for audio playback and recording will not be fully functional."
 
 check_portaudio=no
 AC_ARG_WITH([portaudio],
   [AS_HELP_STRING([--without-portaudio],
     [don't use PortAudio library, disable audio playback and recording])],
-  [if test x"$withval" = x"no"; then
+  [if test x"$withval" = xno; then
      warn_portaudio="--without-portaudio specified.  The audioplayer, audiorecorder classes, and audiodevinfo function for audio playback and recording will not be fully functional."
    else
      check_portaudio=yes
    fi],
   [check_portaudio=yes])
 
 if test $check_portaudio = yes; then
   PKG_CHECK_EXISTS([portaudio-2.0 >= 19], [
@@ -1077,72 +1077,84 @@ else
   PORTAUDIO_LIBS=
 fi
 AC_SUBST(PORTAUDIO_CPPFLAGS)
 AC_SUBST(PORTAUDIO_LDFLAGS)
 AC_SUBST(PORTAUDIO_LIBS)
 
 ### Check for either of Graphics/ImageMagick++ libraries
 
+check_magick=yes
+use_magick=no
 AC_ARG_WITH([magick],
   [AS_HELP_STRING([--with-magick=LIB],
     [select library to use for image I/O (options: GraphicsMagick(default) or ImageMagick)])],
-  [magick="$withval"],
-  [magick="GraphicsMagick"])
-
-warn_magick="$magick++ library not found.  The imread function for reading image files will not be fully functional."
-
-MAGICK_CPPFLAGS=
-MAGICK_LDFLAGS=
-MAGICK_LIBS=
-
-PKG_CHECK_EXISTS([$magick++], [
-  ## Make sure we only get -I, -L, and -l flags.  Some Graphics/ImageMagick++
-  ## packages add extra flags that are useful when building
-  ## Graphics/ImageMagick++ extentions.  These extra flags break the
-  ## Octave build.
-  MAGICK_CPPFLAGS=`$PKG_CONFIG --cflags-only-I $magick++`
-  MAGICK_LDFLAGS=`$PKG_CONFIG --libs-only-L $magick++`
-  MAGICK_LIBS=`$PKG_CONFIG --libs-only-l $magick++`
-
-  warn_magick="$magick++ library fails tests.  The imread function for reading image files will not be fully functional."
-
-  save_CPPFLAGS="$CPPFLAGS"
-  save_LIBS="$LIBS"
-  CPPFLAGS="$MAGICK_CPPFLAGS $CPPFLAGS"
-  LIBS="$MAGICK_LDFLAGS $MAGICK_LIBS $LIBS"
-  AC_LANG_PUSH(C++)
-  AC_CHECK_HEADER([Magick++.h], [
-    AC_CACHE_CHECK([for Magick::ColorRGB in Magick++.h],
-      [octave_cv_func_magick_colorrgb],
-      [AC_PREPROC_IFELSE([AC_LANG_SOURCE([[
-        #include <Magick++.h>
-        ]], [[
-        Magick::ColorRGB c;
-        ]])],
-        octave_cv_func_magick_colorrgb=yes,
-        octave_cv_func_magick_colorrgb=no)
-      ])
-    if test $octave_cv_func_magick_colorrgb = yes; then
-      warn_magick=
-    fi
+  [if test x"$withval" = xno; then
+     check_magick=no
+     warn_magick_disabled="--without-magick specified.  The imread function for reading images will not be fully functional."
+     OCTAVE_CONFIGURE_WARNING([warn_magick_disabled])
+   else
+     magick="$withval"
+   fi], [magick="GraphicsMagick"])
+
+if test $check_magick = yes; then
+
+  MAGICK_CPPFLAGS=
+  MAGICK_LDFLAGS=
+  MAGICK_LIBS=
+
+  PKG_CHECK_EXISTS([$magick++], [
+    ## Make sure we only get -I, -L, and -l flags.  Some Graphics/ImageMagick++
+    ## packages add extra flags that are useful when building
+    ## Graphics/ImageMagick++ extentions.  These extra flags break the
+    ## Octave build.
+    MAGICK_CPPFLAGS=`$PKG_CONFIG --cflags-only-I $magick++`
+    MAGICK_LDFLAGS=`$PKG_CONFIG --libs-only-L $magick++`
+    MAGICK_LIBS=`$PKG_CONFIG --libs-only-l $magick++`
+
+    warn_magick="$magick++ library fails tests.  The imread function for reading image files will not be fully functional."
+
+    save_CPPFLAGS="$CPPFLAGS"
+    save_LIBS="$LIBS"
+    CPPFLAGS="$MAGICK_CPPFLAGS $CPPFLAGS"
+    LIBS="$MAGICK_LDFLAGS $MAGICK_LIBS $LIBS"
+    AC_LANG_PUSH(C++)
+    AC_CHECK_HEADER([Magick++.h], [
+      AC_CACHE_CHECK([for Magick::ColorRGB in Magick++.h],
+        [octave_cv_func_magick_colorrgb],
+        [AC_PREPROC_IFELSE([AC_LANG_SOURCE([[
+          #include <Magick++.h>
+          ]], [[
+          Magick::ColorRGB c;
+          ]])],
+          octave_cv_func_magick_colorrgb=yes,
+          octave_cv_func_magick_colorrgb=no)
+        ])
+      if test $octave_cv_func_magick_colorrgb = yes; then
+        use_magick=yes
+        warn_magick=
+      fi
+    ])
+    AC_LANG_POP(C++)
+    CPPFLAGS="$save_CPPFLAGS"
+    LIBS="$save_LIBS"
+
+    AC_CHECK_FUNCS([setlocale], [],
+      [use_magick=no
+       warn_magick="$magick++ requires setlocale function.  The imread function for reading image files will not be fully functional."])
   ])
-  AC_LANG_POP(C++)
-  CPPFLAGS="$save_CPPFLAGS"
-  LIBS="$save_LIBS"
-
-  AC_CHECK_FUNCS([setlocale], [],
-                 [warn_magick="$magick++ requires setlocale function.  The imread function for reading image files will not be fully functional."])
-])
-
-if test -z "$warn_magick"; then
+fi
+
+if test $use_magick = yes; then
   AC_DEFINE(HAVE_MAGICK, 1,
     [Define to 1 if Graphics/ImageMagick++ is available.])
 else
-  OCTAVE_CONFIGURE_WARNING([warn_magick])
+  if test -n "$warn_magick"; then
+    OCTAVE_CONFIGURE_WARNING([warn_magick])
+  fi
   MAGICK_CPPFLAGS=
   MAGICK_LDFLAGS=
   MAGICK_LIBS=
 fi
 AC_SUBST(MAGICK_CPPFLAGS)
 AC_SUBST(MAGICK_LDFLAGS)
 AC_SUBST(MAGICK_LIBS)
 
@@ -1179,19 +1191,19 @@ if test $have_framework_carbon = yes; th
 fi
 
 ### Check for list of libraries needed for OpenGL graphics renderer.
 
 check_opengl=yes
 AC_ARG_WITH([opengl],
   [AS_HELP_STRING([--without-opengl],
     [don't use OpenGL libraries, disable OpenGL graphics])],
-  [if test x"$withval" = x"no"; then
+  [if test x"$withval" = xno; then
      check_opengl=no
-     warn_opengl="--without-opengl specified.  OpenGL graphics will be disabled."
+     warn_opengl_disabled="--without-opengl specified.  OpenGL graphics will be disabled."
      OCTAVE_CONFIGURE_WARNING([warn_opengl_disabled])
    fi])
 
 ## Check for OpenGL library
 if test $check_opengl = yes; then
   OCTAVE_CHECK_LIB_OPENGL
   if test -z "$OPENGL_LIBS"; then
     warn_opengl_libs="OpenGL libs (GL and GLU) not found.  OpgnGL graphics will be disabled."
@@ -1270,24 +1282,29 @@ fi
 AC_SUBST(GL2PS_LIBS)
 
 ### GUI/Qt related tests.
 
 QT_CPPFLAGS=
 QT_LDFLAGS=
 QT_LIBS=
 
-win32_terminal=no
 check_qt=yes
 build_qt_gui=no
 build_qt_graphics=no
-
-AC_ARG_ENABLE([qt],
+use_qscintilla=no
+win32_terminal=no
+
+AC_ARG_WITH([qt],
   [AS_HELP_STRING([--without-qt], [don't use Qt libraries; disable Qt GUI])],
-  [if test "$enableval" = no; then check_qt=no; fi], [])
+  [if test x"$withval" = xno; then
+     check_qt=no;
+     warn_qt_disabled="--without-qt specified.  The Qt GUI will be disabled."
+     OCTAVE_CONFIGURE_WARNING([warn_qt_disabled])
+   fi])
 
 if test $check_qt = yes; then
 
   warn_qt_libraries=""
   ## Check for Qt libraries
   QT_MODULES="QtCore QtGui QtNetwork QtOpenGL"
   PKG_CHECK_MODULES(QT, [$QT_MODULES],
     [],
@@ -1455,37 +1472,37 @@ if test $check_qt = yes; then
       CPPFLAGS="$QT_CPPFLAGS $CPPFLAGS"
       AC_LANG_PUSH(C++)
       AC_CHECK_HEADERS([Qsci/qscilexeroctave.h Qsci/qscilexermatlab.h])
       AC_LANG_POP(C++)
       CPPFLAGS="$save_CPPFLAGS"
 
       OCTAVE_CHECK_FUNC_SETPLACEHOLDERTEXT
       OCTAVE_CHECK_FUNC_QSCI_FINDSELECTION
+      use_qscintilla=yes
     fi
   fi
 fi
 
 AC_SUBST(QT_CPPFLAGS)
 AC_SUBST(QT_LDFLAGS)
 AC_SUBST(QT_LIBS)
 
 AM_CONDITIONAL([AMCOND_BUILD_QT_GUI], [test $build_qt_gui = yes])
 AM_CONDITIONAL([AMCOND_BUILD_QT_GRAPHICS], [test $build_qt_graphics = yes])
-AM_CONDITIONAL([AMCOND_HAVE_QSCINTILLA],
-               [test $octave_cv_lib_qscintilla = yes])
+AM_CONDITIONAL([AMCOND_HAVE_QSCINTILLA], [test $use_qscintilla = yes])
 AM_CONDITIONAL([WIN32_TERMINAL], [test $win32_terminal = yes])
 
 ## Check for FLTK (www.fltk.org) library
 
 check_fltk=yes
 AC_ARG_WITH([fltk],
   [AS_HELP_STRING([--without-fltk],
     [don't use FLTK libraries, disable OpenGL graphics with FLTK widgets])],
-  [if test x"$withval" = x"no"; then
+  [if test x"$withval" = xno; then
      check_fltk=no
      warn_fltk="--without-fltk specified.  FLTK widgets will be disabled."
      OCTAVE_CONFIGURE_WARNING([warn_fltk])
    fi])
 
 FLTK_CPPFLAGS=
 FLTK_LDFLAGS=
 FLTK_LIBS=
diff --git a/m4/acinclude.m4 b/m4/acinclude.m4
--- a/m4/acinclude.m4
+++ b/m4/acinclude.m4
@@ -617,34 +617,33 @@ AC_DEFUN([OCTAVE_CHECK_LIB], [
 
   AC_ARG_WITH([$1],
     [m4_ifblank([$7],
       [AS_HELP_STRING([--without-$1], [don't use $2 library])],
       [AS_HELP_STRING([--without-$1], [$7])])],
     with_$1=$withval, with_$1=yes)
 
   m4_toupper([$1])_LIBS=
+  warn_$1="$3"
   case $with_$1 in
     no)
+      warn_$1="--without-$1 specified.  Functions or features that depend on $2 will be disabled."
       m4_toupper([$1])_LIBS=
     ;;
     yes | "")
       m4_toupper([$1])_LIBS="-l$1"
     ;;
     -* | */* | *.a | *.so | *.so.* | *.o)
       m4_toupper([$1])_LIBS="$with_$1"
     ;;
     *)
       m4_toupper([$1])_LIBS="-l$with_$1"
     ;;
   esac
 
-  warn_$1="$3"
-  m4_set_add([summary_warning_list], [warn_$1])
-
   if test -n "$m4_toupper([$1])_LIBS"; then
     ac_octave_save_CPPFLAGS="$CPPFLAGS"
     ac_octave_save_LDFLAGS="$LDFLAGS"
     ac_octave_save_LIBS="$LIBS"
     CPPFLAGS="$m4_toupper([$1])_CPPFLAGS $CPPFLAGS"
     LDFLAGS="$m4_toupper([$1])_LDFLAGS $LDFLAGS"
     LIBS="$m4_toupper([$1])_LIBS $LIBS"
     m4_ifnblank([$6], [AC_LANG_PUSH($6)])
@@ -663,21 +662,23 @@ AC_DEFUN([OCTAVE_CHECK_LIB], [
           AC_DEFINE([HAVE_]m4_toupper([$1]), 1,
             [Define to 1 if $2 is available.])], [$8])
       fi
     fi
     m4_ifnblank([$6], [AC_LANG_POP($6)])
     CPPFLAGS="$ac_octave_save_CPPFLAGS"
     LDFLAGS="$ac_octave_save_LDFLAGS"
     LIBS="$ac_octave_save_LIBS"
+  else
+    octave_cv_lib_$1=no
   fi
 
   AC_SUBST(m4_toupper([$1])_LIBS)
   if test -n "$warn_$1"; then
-    AC_MSG_WARN([$warn_$1])
+    OCTAVE_CONFIGURE_WARNING([warn_$1])
     m4_toupper([$1])_LIBS=
   fi
 ])
 dnl
 dnl Check whether ARPACK works (does not crash).
 dnl
 dnl Using a pure Fortran program doesn't seem to crash when linked
 dnl with the buggy ARPACK library but the C++ program does.  Maybe it
