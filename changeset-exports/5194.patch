# HG changeset patch
# User jwe
# Date 1109965101 0
#      Fri Mar 04 19:38:21 2005 +0000
# Node ID cb213ce198278491135ffc63fc1f83fb8bb78e44
# Parent  40d1282dda3310bcac71478fa60c4308dc4eb1a3
[project @ 2005-03-04 19:38:21 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,13 @@
+2005-03-04  John W. Eaton  <jwe@octave.org>
+
+	* configure.in (GXX_PICKY_FLAGS): Don't include
+	-Wmissing-prototypes or -Wstrict-prototypes.
+
 2005-03-02  John W. Eaton  <jwe@octave.org>
 
 	* aclocal.m4 (OCTAVE_CC_FLAG, OCTAVE_CXX_FLAG, OCTAVE_F77_FLAG):
 	Use AC_LINK_IFELSE instead of AC_TRY_LINK.
 
 	* configure.in (OCTAVE_LOCAL_BUFFER): Use < T > instead of <T>.
 	From Clinton Chee <chee@parallel.hpc.unsw.edu.au>.
 
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -24,17 +24,17 @@ dnl Copyright (C) 1996, 1997 John W. Eat
 ### Preserve CFLAGS and CXXFLAGS from the environment before doing
 ### anything else because we don't know which macros might call
 ### AC_PROG_CC or AC_PROG_CXX.
 
 EXTERN_CFLAGS="$CFLAGS"
 EXTERN_CXXFLAGS="$CXXFLAGS"
 
 AC_INIT
-AC_REVISION($Revision: 1.463 $)
+AC_REVISION($Revision: 1.464 $)
 AC_PREREQ(2.57)
 AC_CONFIG_SRCDIR([src/octave.cc])
 AC_CONFIG_HEADER(config.h)
 
 AC_DEFINE(OCTAVE_SOURCE, 1, [Define if this is Octave.])
   
 OCTAVE_HOST_TYPE
 
@@ -1287,17 +1287,18 @@ if test -z "$EXTERN_CXXFLAGS"; then
     AC_MSG_RESULT([adding -Wshadow to WARN_CXXFLAGS])])
 fi
 
 ### Someday, maybe include -ansi and even -pedantic in this list...
 
 GCC_PICKY_FLAGS="-Wcast-align -Wcast-qual -Wmissing-prototypes \
   -Wpointer-arith -Wstrict-prototypes -Wwrite-strings"
 
-GXX_PICKY_FLAGS="$GCC_PICKY_FLAGS -Weffc++ -Wenum-clash"
+GXX_PICKY_FLAGS="-Wcast-align -Wcast-qual -Wpointer-arith \
+  -Wwrite-strings -Weffc++ -Wenum-clash"
 
 AC_ARG_ENABLE(picky-flags,
   [  --enable-picky-flags    add picky options to CFLAGS, CXXFLAGS, FFLAGS],
   [if test "$enableval" = no; then
      true
    elif test "$enableval" = yes; then
      if test -z "$EXTERN_CFLAGS"; then
        for flag in $GCC_PICKY_FLAGS; do
