# HG changeset patch
# User jwe
# Date 1181107134 0
#      Wed Jun 06 05:18:54 2007 +0000
# Node ID 768d3ad80bbf51bcc23d5a024f9d3c4838242413
# Parent  89b916a9eb61d1f43f6b35420978c17e4ad7ae32
[project @ 2007-06-06 05:18:54 by jwe]

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,12 @@
+2007-06-06  Michael Goffioul  <michael.goffioul@swing.be>
+
+	* MArray-C.cc: Sprinkle with OCTINTERP_API as needed.
+
 2007-06-04  David Bateman  <dbateman@free.fr>
 
 	* Sparse.cc (Sparse<T> Sparse<T>::reshape): If length of new
 	dimensions is greater than 2, collapse to 2-D.
 
 2007-06-02  David Bateman  <dbateman@free.fr>
 
 	* SparseCmplxQR.cc: Changes to support CXSparse 2.2.0.
diff --git a/liboctave/MArray-C.cc b/liboctave/MArray-C.cc
--- a/liboctave/MArray-C.cc
+++ b/liboctave/MArray-C.cc
@@ -36,17 +36,17 @@ extern "C"
   F77_FUNC (xdznrm2, XDZNRM2) (const octave_idx_type&, const Complex*,
 			       const octave_idx_type&, double&);
 }
 
 #include "MArray.h"
 #include "MArray.cc"
 
 template <>
-double
+OCTAVE_API double
 MArray<Complex>::norm (double p) const
 {
   MARRAY_NORM_BODY (Complex, xdznrm2, XDZNRM2);
 }
 
 template class OCTAVE_API MArray<Complex>;
 
 INSTANTIATE_MARRAY_FRIENDS (Complex)
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2007-06-06  Michael Goffioul  <michael.goffioul@swing.be>
+
+	* defaults.h.in, ls-hdf5.h, ov-complex.h, ov-cx-mat.h, ov-intx.h,
+	sysdep.h: Sprinkle with OCTINTERP_API as needed.
+
 2007-06-05  John W. Eaton  <jwe@octave.org>
 
 	* help.h (raw_help): Tag with OCTINTERP_API.
 
 	* Makefile.in (INCLUDES): Remove mxarray.h from the list so that
 	it is not distributed.
 	(EXTRAS): Add mxarray.h to the list so that it is installed.
 
diff --git a/src/defaults.h.in b/src/defaults.h.in
--- a/src/defaults.h.in
+++ b/src/defaults.h.in
@@ -190,17 +190,17 @@ extern std::string Vimage_dir;
 
 // Name of the editor to be invoked by the edit_history command.
 extern std::string VEDITOR;
 
 extern std::string Vlocal_site_defaults_file;
 extern std::string Vsite_defaults_file;
 
 // Name of the FFTW wisdom program.
-extern std::string Vfftw_wisdom_program;
+extern OCTINTERP_API std::string Vfftw_wisdom_program;
 
 extern std::string subst_octave_home (const std::string&);
 
 extern void install_defaults (void);
 
 extern void set_exec_path (const std::string& path = std::string ());
 extern void set_image_path (const std::string& path = std::string ());
 
diff --git a/src/ls-hdf5.h b/src/ls-hdf5.h
--- a/src/ls-hdf5.h
+++ b/src/ls-hdf5.h
@@ -135,45 +135,45 @@ hdf5_callback_data
   // the value of the variable, in Octave form
   octave_value tc;
 
   // a documentation string (NULL if none)
   std::string doc;
 };
 
 #if HAVE_HDF5_INT2FLOAT_CONVERSIONS
-extern hid_t
+extern OCTINTERP_API hid_t
 save_type_to_hdf5 (save_type st)
 #endif
 
-extern hid_t
+extern OCTINTERP_API hid_t
 hdf5_make_complex_type (hid_t num_type);
 
-extern bool
+extern OCTINTERP_API bool
 hdf5_types_compatible (hid_t t1, hid_t t2);
 
-extern herr_t
+extern OCTINTERP_API herr_t
 hdf5_read_next_data (hid_t group_id, const char *name, void *dv);
 
-extern bool
+extern OCTINTERP_API bool
 add_hdf5_data (hid_t loc_id, const octave_value& tc,
 	       const std::string& name, const std::string& doc,
 	       bool mark_as_global, bool save_as_floats);
 
-extern int
+extern OCTINTERP_API int
 save_hdf5_empty (hid_t loc_id, const char *name, const dim_vector d);
 
-extern int
+extern OCTINTERP_API int
 load_hdf5_empty (hid_t loc_id, const char *name, dim_vector &d);
 
-extern std::string
+extern OCTINTERP_API std::string
 read_hdf5_data (std::istream& is,  const std::string& filename, bool& global,
 		octave_value& tc, std::string& doc);
 
-extern bool
+extern OCTINTERP_API bool
 save_hdf5_data (std::ostream& os, const octave_value& tc,
 		const std::string& name, const std::string& doc,
 		bool mark_as_global, bool save_as_floats);
 
 #ifdef IDX_TYPE_LONG
 #define H5T_NATIVE_IDX H5T_NATIVE_LONG
 #else
 #define H5T_NATIVE_IDX H5T_NATIVE_INT
diff --git a/src/ov-complex.h b/src/ov-complex.h
--- a/src/ov-complex.h
+++ b/src/ov-complex.h
@@ -43,17 +43,17 @@ 02110-1301, USA.
 class Octave_map;
 class octave_value_list;
 
 class tree_walker;
 
 // Complex scalar values.
 
 class
-OCTAVE_API
+OCTINTERP_API
 octave_complex : public octave_base_scalar<Complex>
 {
 public:
 
   octave_complex (void)
     : octave_base_scalar<Complex> () { }
 
   octave_complex (const Complex& c)
diff --git a/src/ov-cx-mat.h b/src/ov-cx-mat.h
--- a/src/ov-cx-mat.h
+++ b/src/ov-cx-mat.h
@@ -44,16 +44,17 @@ 02110-1301, USA.
 class Octave_map;
 class octave_value_list;
 
 class tree_walker;
 
 // Complex matrix values.
 
 class
+OCTINTERP_API
 octave_complex_matrix : public octave_base_matrix<ComplexNDArray>
 {
 public:
 
   octave_complex_matrix (void)
     : octave_base_matrix<ComplexNDArray> () { }
 
   octave_complex_matrix (const ComplexNDArray& m)
diff --git a/src/ov-intx.h b/src/ov-intx.h
--- a/src/ov-intx.h
+++ b/src/ov-intx.h
@@ -34,16 +34,17 @@ 02110-1301, USA.
 #include "error.h"
 #include "oct-stream.h"
 #include "ov-base.h"
 #include "ov-base-int.h"
 #include "ov-typeinfo.h"
 #include "gripes.h"
 
 class
+OCTINTERP_API
 OCTAVE_VALUE_INT_MATRIX_T
   : public octave_base_int_matrix<OCTAVE_INT_NDARRAY_T>
 {
 public:
 
   OCTAVE_VALUE_INT_MATRIX_T (void)
     : octave_base_int_matrix<OCTAVE_INT_NDARRAY_T> () { }
 
@@ -226,16 +227,17 @@ public:
 private:
 
   DECLARE_OCTAVE_ALLOCATOR
 
   DECLARE_OV_TYPEID_FUNCTIONS_AND_DATA
 };
 
 class
+OCTINTERP_API
 OCTAVE_VALUE_INT_SCALAR_T
   : public octave_base_int_scalar<OCTAVE_INT_T>
 {
 public:
 
   OCTAVE_VALUE_INT_SCALAR_T (void)
     : octave_base_int_scalar<OCTAVE_INT_T> () { }
 
diff --git a/src/sysdep.h b/src/sysdep.h
--- a/src/sysdep.h
+++ b/src/sysdep.h
@@ -30,17 +30,17 @@ 02110-1301, USA.
 #include "lo-sysdep.h"
 
 extern void sysdep_init (void);
 
 extern void sysdep_cleanup (void);
 
 extern void raw_mode (bool, bool wait = true);
 
-extern int octave_kbhit (bool wait = true);
+extern OCTINTERP_API int octave_kbhit (bool wait = true);
 
 extern void w32_set_quiet_shutdown (void);
 
 #if defined (__WIN32__) && ! defined (_POSIX_VERSION)
 extern void MINGW_signal_cleanup (void);
 #define USE_W32_SIGINT 1
 #define MINGW_SIGNAL_CLEANUP() MINGW_signal_cleanup ()
 #else
