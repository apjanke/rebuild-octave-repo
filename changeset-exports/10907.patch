# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1282593457 14400
#      Mon Aug 23 15:57:37 2010 -0400
# Node ID 6105ed2db9d740cd05d993cb0d52baf81c94085d
# Parent  e48a45b9a265df11b406d42c432e310521ff97a6
load_path::dir_info::initialize: clear method_file_map before updating file list

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,15 @@
+2010-08-23  John W. Eaton  <jwe@octave.org>
+
+	* load-path.cc (load_path::dir_info::initialize): Clear
+	method_file_map before updating file list.
+	* load-path.cc (load_path::load_path): Explicitly initialize
+	private_fcn_map.
+
 2010-08-17  Rik <octave@nomad.inbox5.com>
 
 	* mappers.cc (gamma,lgamma): Add %!tests for negative integer
 	input arguments.
 
 2010-08-17  Rik <octave@nomad.inbox5.com>
 
 	* bitfcns.cc (bitmax): Add additional calling argument, class, and 
diff --git a/src/load-path.cc b/src/load-path.cc
--- a/src/load-path.cc
+++ b/src/load-path.cc
@@ -112,16 +112,18 @@ load_path::dir_info::initialize (void)
   is_relative = ! octave_env::absolute_pathname (dir_name);
 
   dir_time_last_checked = octave_time (static_cast<time_t> (0));
 
   file_stat fs (dir_name);
 
   if (fs)
     {
+      method_file_map.clear ();
+
       dir_mtime = fs.mtime ();
       dir_time_last_checked = octave_time ();
 
       get_file_list (dir_name);
 
       try
         {
           std::string abs_name = octave_env::make_absolute (dir_name);
diff --git a/src/load-path.h b/src/load-path.h
--- a/src/load-path.h
+++ b/src/load-path.h
@@ -34,17 +34,17 @@ along with Octave; see the file COPYING.
 
 class
 OCTINTERP_API
 load_path
 {
 protected:
 
   load_path (void)
-    : dir_info_list (), fcn_map (), method_map () { }
+    : dir_info_list (), fcn_map (), private_fcn_map (), method_map () { }
 
 public:
 
   typedef void (*hook_fcn_ptr) (const std::string& dir);
 
   ~load_path (void) { }
 
   static void initialize (bool set_initial_path = false)
@@ -399,17 +399,17 @@ private:
   typedef private_fcn_map_type::const_iterator const_private_fcn_map_iterator;
   typedef private_fcn_map_type::iterator private_fcn_map_iterator;
 
   // <CLASS_NAME, <FCN_NAME, FILE_INFO_LIST>>
   typedef std::map<std::string, fcn_map_type> method_map_type;
 
   typedef method_map_type::const_iterator const_method_map_iterator;
   typedef method_map_type::iterator method_map_iterator;
- 
+
   mutable dir_info_list_type dir_info_list;
 
   mutable fcn_map_type fcn_map;
 
   mutable private_fcn_map_type private_fcn_map;
 
   mutable method_map_type method_map;
 
