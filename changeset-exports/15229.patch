# HG changeset patch
# User Max Brister <max@2bass.com>
# Date 1345918294 18000
#      Sat Aug 25 13:11:34 2012 -0500
# Node ID e5a86de6023c3f3310a349a9dbe295d81662f4ea
# Parent  fbecbce4589835d7e6bd6e96f036bf97be2c6470
configure.ac: Improve LLVM configure check and warning (bug #37050)

diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -676,33 +676,33 @@ dnl
 dnl LLVM is odd and has its own pkg-config like script.  We should probably
 dnl check for existence and ???.
 dnl
 save_CPPFLAGS="$CPPFLAGS"
 save_CXXFLAGS="$CXXFLAGS"
 save_LIBS="$LIBS"
 save_LDFLAGS="$LDFLAGS"
 
-warn_llvm="LLVM library fails tests.  JIT compilation will be disabled."
-
 AC_ARG_VAR(LLVM_CONFIG, [path to llvm-config utility])
 
 AC_ARG_ENABLE([jit-debug],
   AS_HELP_STRING([--enable-jit-debug], [enable debug printing of JIT IRs]))
 
 AS_IF([test "x$enable_jit_debug" = "xyes"], [
   AC_DEFINE(OCTAVE_JIT_DEBUG, 1, [Define to 1 for JIT debug printing.])
 ])
 
 LLVM_CXXFLAGS=
 LLVM_CPPFLAGS=
 LLVM_LDFLAGS=
 LLVM_LIBS=
 
 if test "x$ac_cv_env_LLVM_CONFIG_set" = "xset"; then
+  warn_llvm="LLVM was not found or is to old. JIT is disabled."
+
   ## We use -isystem if available because we do not want to see warnings in LLVM
   LLVM_INCLUDE_FLAG=-I
   OCTAVE_CC_FLAG(-isystem ., [
     LLVM_INCLUDE_FLAG=-isystem
     AC_MSG_NOTICE([using -isystem for llvm headers])])
 
   LLVM_LDFLAGS="-L`$LLVM_CONFIG --libdir`"
   LLVM_LIBS=`$LLVM_CONFIG --libs`
@@ -716,34 +716,34 @@ if test "x$ac_cv_env_LLVM_CONFIG_set" = 
   dnl helpful.
   dnl
   CPPFLAGS="-D__STDC_CONSTANT_MACROS -D__STDC_LIMIT_MACROS $LLVM_CPPFLAGS $CPPFLAGS"
   CXXFLAGS="$LLVM_CXXFLAGS $CXXFLAGS"
   LIBS="$LLVM_LIBS $LIBS"
   LDFLAGS="$LLVM_LDFLAGS $LDFLAGS"
 
   AC_LANG_PUSH(C++)
-    AC_CHECK_HEADER([llvm/LLVMContext.h], [
+    AC_CHECK_HEADERS([llvm/LLVMContext.h, llvm/Support/TargetSelect.h], [
       AC_MSG_CHECKING([for llvm::getGlobalContext in llvm/LLVMContext.h])
         AC_COMPILE_IFELSE(
           [AC_LANG_PROGRAM([[
             #include <llvm/LLVMContext.h>
             ]], [[
             llvm::LLVMContext& ctx = llvm::getGlobalContext ();
             ]])],
           [AC_MSG_RESULT([yes])
            warn_llvm=
            XTRA_CXXFLAGS="$XTRA_CXXFLAGS $LLVM_CXXFLAGS $LLVM_CPPFLAGS"],
           [AC_MSG_RESULT([no])
       ])
     ])
   AC_LANG_POP(C++)
   
 else
-  warn_llvm="LLVM_CONFIG not set.  JIT compilation will be disabled."
+  warn_llvm="LLVM_CONFIG not set. The experiential JIT feature is disabled."
 fi
 
 if test -z "$warn_llvm"; then
   AC_DEFINE(HAVE_LLVM, 1, [Define to 1 if LLVM is available.])
 else
   LLVM_CXXFLAGS=
   LLVM_CPPFLAGS=
   LLVM_LDFLAGS=
