# HG changeset patch
# User Jacob Dawid <jacob.dawid@googlemail.com>
# Date 1302102049 -7200
#      Wed Apr 06 17:00:49 2011 +0200
# Node ID 01eb3fd5faf56b8e8685bf8e4d7feb78f893f919
# Parent  0a3a2d4e3d8613b54fdfb114ee582f0f8acd8cf2
Added some syntax highlighting.

diff --git a/gui//terminalhighlighter.cpp b/gui//terminalhighlighter.cpp
--- a/gui//terminalhighlighter.cpp
+++ b/gui//terminalhighlighter.cpp
@@ -20,26 +20,36 @@
 #include <QtGui>
 
 TerminalHighlighter::TerminalHighlighter(QTextDocument *parent)
     : QSyntaxHighlighter(parent)
 {
     HighlightingRule rule;
 
     keywordFormat.setForeground(Qt::darkRed);
-    keywordFormat.setFontWeight(QFont::Bold);
     QStringList keywordPatterns;
     keywordPatterns << "\\bOctave\\b" << "\\bGNU\\b";
 
     foreach (const QString &pattern, keywordPatterns) {
         rule.pattern = QRegExp(pattern);
         rule.format = keywordFormat;
         highlightingRules.append(rule);
     }
 
+    promptFormat.setForeground(Qt::darkGreen);
+    rule.pattern = QRegExp("\\boctave:[0-9]+>");
+    rule.format = promptFormat;
+    highlightingRules.append(rule);
+
+    errorFormat.setForeground(Qt::red);
+    errorFormat.setFontWeight(QFont::Bold);
+    rule.pattern = QRegExp("\\berror:");
+    rule.format = errorFormat;
+    highlightingRules.append(rule);
+
     numberFormat.setForeground(Qt::darkGreen);
     numberFormat.setFontWeight(QFont::Bold);
     rule.pattern = QRegExp("\\b[0-9\\.]+[i]?\\b");
     rule.format = numberFormat;
     highlightingRules.append(rule);
 
     urlFormat.setForeground(Qt::darkBlue);
     rule.pattern = QRegExp("\\bhttp://[^\\s]+\\b");
diff --git a/gui//terminalhighlighter.h b/gui//terminalhighlighter.h
--- a/gui//terminalhighlighter.h
+++ b/gui//terminalhighlighter.h
@@ -42,11 +42,13 @@ private:
         QTextCharFormat format;
     };
     QVector<HighlightingRule> highlightingRules;
 
     QTextCharFormat keywordFormat;
     QTextCharFormat quotationFormat;
     QTextCharFormat numberFormat;
     QTextCharFormat urlFormat;
+    QTextCharFormat errorFormat;
+    QTextCharFormat promptFormat;
 };
 
 #endif // TERMINALHIGHLIGHTER_H
