# HG changeset patch
# User Mike Miller <mtmiller@ieee.org>
# Date 1393022931 18000
#      Fri Feb 21 17:48:51 2014 -0500
# Branch gui-release
# Node ID d28c4c4547ef5d7e9a747a8d8fd0d7a9936b9719
# Parent  83f5f2d414865e0826ab254ac5561d9caaa9fbdd
Allow postpad and prepad to expand singleton dimensions (bug #41633)

* postpad.m, prepad.m: Allow postpad and prepad to expand singleton
dimensions. Add %!tests. Remove %!errors that are no longer errors.

diff --git a/scripts/general/postpad.m b/scripts/general/postpad.m
--- a/scripts/general/postpad.m
+++ b/scripts/general/postpad.m
@@ -25,16 +25,19 @@
 ##
 ## If @code{length (@var{x}) > @var{l}}, elements from the end of
 ## @var{x} are removed until a vector of length @var{l} is obtained.
 ##
 ## If @var{x} is a matrix, elements are appended or removed from each row.
 ##
 ## If the optional argument @var{dim} is given, operate along this
 ## dimension.
+##
+## If @var{dim} is larger than the dimensions of @var{x}, the result will
+## have @var{dim} dimensions.
 ## @seealso{prepad, cat, resize}
 ## @end deftypefn
 
 ## Author: Tony Richardson <arichard@stark.cc.oh.us>
 ## Created: June 1994
 
 function y = postpad (x, l, c, dim)
 
@@ -51,18 +54,17 @@ function y = postpad (x, l, c, dim)
   endif
 
   nd = ndims (x);
   sz = size (x);
   if (nargin < 4)
     ## Find the first non-singleton dimension.
     (dim = find (sz > 1, 1)) || (dim = 1);
   else
-    if (!(isscalar (dim) && dim == fix (dim))
-        || !(1 <= dim && dim <= nd))
+    if (!(isscalar (dim) && dim == fix (dim) && dim >= 1))
       error ("postpad: DIM must be an integer and a valid dimension");
     endif
   endif
 
   if (! isscalar (l) || l < 0)
     error ("postpad: second argument must be a positive scaler");
   endif
 
@@ -84,14 +86,15 @@ function y = postpad (x, l, c, dim)
 endfunction
 
 
 %!assert (postpad ([1,2], 4), [1,2,0,0])
 %!assert (postpad ([1;2], 4), [1;2;0;0])
 %!assert (postpad ([1,2], 4, 2), [1,2,2,2])
 %!assert (postpad ([1;2], 4, 2), [1;2;2;2])
 %!assert (postpad ([1,2], 2, 2, 1), [1,2;2,2])
+%!assert (postpad ([1;2], 2, 2, 3), reshape ([1;2;2;2], 2, 1, 2))
+%!assert (postpad ([1,2], 2, 2, 3), reshape ([1,2,2,2], 1, 2, 2))
 
 %!error postpad ()
 %!error postpad (1)
 %!error postpad (1,2,3,4,5)
-%!error postpad ([1,2], 2, 2,3)
 
diff --git a/scripts/general/prepad.m b/scripts/general/prepad.m
--- a/scripts/general/prepad.m
+++ b/scripts/general/prepad.m
@@ -25,16 +25,19 @@
 ##
 ## If @code{length (@var{x}) > @var{l}}, elements from the beginning of
 ## @var{x} are removed until a vector of length @var{l} is obtained.
 ##
 ## If @var{x} is a matrix, elements are prepended or removed from each row.
 ##
 ## If the optional argument @var{dim} is given, operate along this
 ## dimension.
+##
+## If @var{dim} is larger than the dimensions of @var{x}, the result will
+## have @var{dim} dimensions.
 ## @seealso{postpad, cat, resize}
 ## @end deftypefn
 
 ## Author: Tony Richardson <arichard@stark.cc.oh.us>
 ## Created: June 1994
 
 function y = prepad (x, l, c, dim)
 
@@ -51,18 +54,17 @@ function y = prepad (x, l, c, dim)
   endif
 
   nd = ndims (x);
   sz = size (x);
   if (nargin < 4)
     ## Find the first non-singleton dimension.
     (dim = find (sz > 1, 1)) || (dim = 1);
   else
-    if (!(isscalar (dim) && dim == fix (dim))
-        || !(1 <= dim && dim <= nd))
+    if (!(isscalar (dim) && dim == fix (dim) && dim >= 1))
       error ("prepad: DIM must be an integer and a valid dimension");
     endif
   endif
 
   if (! isscalar (l) || l < 0)
     error ("prepad: length L must be a positive scalar");
   endif
 
@@ -87,20 +89,22 @@ endfunction
 %!assert (prepad ([1,2], 4), [0,0,1,2])
 %!assert (prepad ([1;2], 4), [0;0;1;2])
 
 %!assert (prepad ([1,2], 4, 2), [2,2,1,2])
 %!assert (prepad ([1;2], 4, 2), [2;2;1;2])
 
 %!assert (prepad ([1,2], 2, 2, 1), [2,2;1,2])
 
+%!assert (prepad ([1,2], 2, 2, 3), reshape ([2,2,1,2], 1, 2, 2))
+%!assert (prepad ([1;2], 2, 2, 3), reshape ([2;2;1;2], 2, 1, 2))
+
 ## FIXME -- we need tests for multidimensional arrays.
 
 %!error prepad ()
 %!error prepad (1)
 %!error prepad (1,2,3,4,5)
 %!error <C must be empty or a scalar> prepad ([1,2], 2, ones (2))
 %!error <DIM must be an integer> prepad ([1,2], 2, 2, ones (3))
 %!error <DIM must be an integer> prepad ([1,2], 2, 2, 1.1)
-%!error <DIM must be an integer> prepad ([1,2], 2, 2, 3)
 %!error <L must be a positive scalar> prepad ([1,2], ones (2))
 %!error <L must be a positive scalar> prepad ([1,2], -1)
 
