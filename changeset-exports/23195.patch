# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1487381180 18000
#      Fri Feb 17 20:26:20 2017 -0500
# Node ID 7cd6ecc578d629d8c5ea935f4e26082c3053ac6e
# Parent  94f04d8172eb7fbf55b7ac2f7d61a5b71e6fa877
# Parent  c897282f1ec8f8f9911a1613e01faddacad5b4e7
maint: Merge stable to default.

diff --git a/src/main.in.cc b/src/main.in.cc
--- a/src/main.in.cc
+++ b/src/main.in.cc
@@ -134,35 +134,16 @@ install_signal_handlers (void)
   gui_driver_set_signal_handler ("SIGIO", gui_driver_sig_handler);
 
   // SIGWINCH
 
   gui_driver_set_signal_handler ("SIGXCPU", gui_driver_sig_handler);
   gui_driver_set_signal_handler ("SIGXFSZ", gui_driver_sig_handler);
 }
 
-static bool
-have_controlling_terminal (void)
-{
-  int retval = false;
-
-  const char *ctty = octave_ctermid_wrapper ();
-
-  int fd = octave_open_wrapper (ctty, octave_o_rdwr_wrapper (), 0);
-
-  if (fd >= 0)
-    {
-      octave_close_wrapper (fd);
-
-      retval = true;
-    }
-
-  return retval;
-}
-
 #endif
 
 static std::string
 get_octave_bindir (void)
 {
   // Accept value from the environment literally, but substitute
   // OCTAVE_HOME in the configuration value OCTAVE_BINDIR in case Octave
   // has been relocated to some installation directory other than the
@@ -319,18 +300,27 @@ main (int argc, char **argv)
 #if defined (OCTAVE_USE_WINDOWS_API)
   file += ".exe";
 #endif
 
   new_argv[0] = strsave (file.c_str ());
 
 #if defined (HAVE_OCTAVE_QT_GUI) && ! defined (OCTAVE_USE_WINDOWS_API)
 
-  if (gui_libs && start_gui && have_controlling_terminal ())
+  if (gui_libs && start_gui)
     {
+      // Fork and exec when starting the GUI so that we will call
+      // setsid to give up the controlling terminal (if any) and so that
+      // the GUI process will be in a separate process group.
+      //
+      // The GUI process must be in a separate process group so that we
+      // can send and interrupt to all child processes when generating
+      // interrupt signals.  See also pthread_thread_manager::interrupt
+      // in libgui/src/thread-manager.cc and bug #49609.
+
       install_signal_handlers ();
 
       gui_pid = octave_fork_wrapper ();
 
       if (gui_pid < 0)
         {
           std::cerr << "octave: fork failed!" << std::endl;
 
