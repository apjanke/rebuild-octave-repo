# HG changeset patch
# User Jacob Dawid <jacob.dawid@googlemail.com>
# Date 1302810457 -7200
#      Thu Apr 14 21:47:37 2011 +0200
# Node ID c836ec162a2ee478d2a0eb859a90dbdd3c0e52ee
# Parent  1728cf96c7c4f5dd0255726ec7429e06e69337b5
Fixed crash when querying matrices.

diff --git a/gui//src/BrowserWidget.cpp b/gui//src/BrowserWidget.cpp
--- a/gui//src/BrowserWidget.cpp
+++ b/gui//src/BrowserWidget.cpp
@@ -49,17 +49,17 @@ void BrowserWidget::construct() {
     layout->addWidget(m_statusBar);
     layout->setMargin(2);
     setLayout(layout);
 
     connect(backAction, SIGNAL(triggered()), m_webView, SLOT(back()));
     connect(forwardAction, SIGNAL(triggered()), m_webView, SLOT(forward()));
     connect(m_webView, SIGNAL(urlChanged(QUrl)), this, SLOT(setUrl(QUrl)));
     connect(m_urlLineEdit, SIGNAL(returnPressed()), this, SLOT(jumpToWebsite()));
-    connect(m_webView, SIGNAL(statusBarMessage(QString)), this, SLOT(showMessage(QString)));
+    //connect(m_webView, SIGNAL(statusBarMessage(QString)), this, SLOT(showMessage(QString)));
 }
 
 void BrowserWidget::setUrl(QUrl url) {
     m_urlLineEdit->setText(url.toString());
 }
 
 void BrowserWidget::jumpToWebsite() {
     QString url = m_urlLineEdit->text();
diff --git a/gui//src/OctaveLink.cpp b/gui//src/OctaveLink.cpp
--- a/gui//src/OctaveLink.cpp
+++ b/gui//src/OctaveLink.cpp
@@ -190,23 +190,21 @@ int OctaveLink::processOctaveServerData(
   //octave_stdout << "SERVER ELAPSED: " << elapsed << std::endl;
 #endif
   return 0;
 }
 
 
 //*************************************************************************
 void OctaveLink::retrieveVariables() {
-    QList<SymbolRecord> currentVariables;
+    m_variableSymbolTableList.clear();
     std::list<SymbolRecord> allVariables = symbol_table::all_variables();
     std::list<SymbolRecord>::iterator iterator;
     for(iterator = allVariables.begin(); iterator != allVariables.end(); iterator++)
-        currentVariables.append(*iterator);
-
-    m_variableSymbolTableList = currentVariables;
+        m_variableSymbolTableList.append(*iterator);
 }
 
 
 //*************************************************************************
 int OctaveLink::processRequestedVariables( void )
 {
   /*
 
diff --git a/gui//src/VariablesDockWidget.cpp b/gui//src/VariablesDockWidget.cpp
--- a/gui//src/VariablesDockWidget.cpp
+++ b/gui//src/VariablesDockWidget.cpp
@@ -51,19 +51,19 @@ void VariablesDockWidget::updateTreeEntr
     QString type = QString(symbolRecord.varval().type_name().c_str());
     if(type == "string") {
         QString stringValue = QString("\"%1\"").arg(symbolRecord.varval().string_value().c_str());
         treeItem->setData(2, 0, stringValue);
     } else if(type == "scalar") {
         double scalarValue = symbolRecord.varval().scalar_value();
         treeItem->setData(2, 0, QString("%1").arg(scalarValue));
     } else if(type == "matrix") {
-        Matrix matrixValue = symbolRecord.varval().matrix_value();
+        // Matrix matrixValue = symbolRecord.varval().matrix_value();
         // TODO: Display matrix values.
-        treeItem->setData(2, 0, QString("{%1 x %2}").arg(matrixValue.rows()).arg(matrixValue.cols()));
+        //treeItem->setData(2, 0, QString("{%1 x %2}").arg(matrixValue.rows()).arg(matrixValue.cols()));
     } else {
         treeItem->setData(2, 0, QString("<Type not recognized>"));
     }
 }
 
 void VariablesDockWidget::setVariablesList(QList<SymbolRecord> symbolTable) {
 
     // Split the symbol table into its different scopes.
