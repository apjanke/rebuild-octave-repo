# HG changeset patch
# User Jacob Dawid <jacob.dawid@googlemail.com>
# Date 1327244815 -3600
#      Sun Jan 22 16:06:55 2012 +0100
# Branch gui
# Node ID 7ede35410aa55930da50f3d71ec0f2fd72736861
# Parent  b871a65c56818e9262c814ade14082f7ed999f00
GUI: Build in previous terminal widget.

diff --git a/gui/octave-gui/octave-gui.pro b/gui/octave-gui/octave-gui.pro
--- a/gui/octave-gui/octave-gui.pro
+++ b/gui/octave-gui/octave-gui.pro
@@ -93,26 +93,20 @@ SOURCES +=\
     src/ResourceManager.cpp \
     src/CommandLineParser.cpp \
     src/backend/OctaveCallbackThread.cpp \
     src/backend/OctaveLink.cpp \
     src/backend/OctaveMainThread.cpp \
     src/irc/IRCClientImpl.cpp \
     src/backend/ReadlineAdapter.cpp \
     src/WelcomeWizard.cpp \
-    src/AbstractTerminalView.cpp
+    src/TerminalWidget.cpp
 
 unix {
-SOURCES +=\
-    src/TerminalHighlighter.cpp \
-    src/TerminalView.cpp \
-    src/terminal/KPty.cpp \
-    src/terminal/KPtyDevice.cpp \
-    src/terminal/LinuxTerminalEmulation.cpp \
-    src/terminal/TerminalEmulation.cpp
+SOURCES +=
 }
 
 win32 {
 SOURCES += \
     src/WinTerminalView.cpp \
     src/terminal/win32/QConsole.cpp \
     src/terminal/win32/QConsoleColors.cpp
 }
@@ -132,26 +126,20 @@ HEADERS += \
     src/CommandLineParser.h \
     src/backend/OctaveCallbackThread.h \
     src/backend/OctaveLink.h \
     src/backend/OctaveMainThread.h \
     src/irc/IRCClientInterface.h \
     src/irc/IRCClientImpl.h \
     src/backend/ReadlineAdapter.h \
     src/WelcomeWizard.h \
-    src/AbstractTerminalView.h
+    src/TerminalWidget.h
 
 unix {
-HEADERS += \
-    src/TerminalHighlighter.h \
-    src/TerminalView.h \
-    src/terminal/KPtyDevice.h \
-    src/terminal/KPty.h \
-    src/terminal/LinuxTerminalEmulation.h \
-    src/terminal/TerminalEmulation.h
+HEADERS +=
 }
 
 win32 {
 HEADERS += \
     src/WinTerminalView.h \
     src/terminal/win32/QConsole.h \
     src/terminal/win32/QConsoleColors.h
 INCLUDEPATH += src/terminal/win32
diff --git a/gui/octave-gui/src/FileEditorMdiSubWindow.cpp b/gui/octave-gui/src/FileEditorMdiSubWindow.cpp
--- a/gui/octave-gui/src/FileEditorMdiSubWindow.cpp
+++ b/gui/octave-gui/src/FileEditorMdiSubWindow.cpp
@@ -246,17 +246,18 @@ FileEditorMdiSubWindow::saveFileAs ()
 }
 
 // handle the run command
 void
 FileEditorMdiSubWindow::runFile ()
 {
   if (m_editor->isModified ())
     saveFile(m_fileName);
-  m_terminalView->sendText (QString ("run \'%1\'\n").arg (m_fileName));
+  QString text = QString ("run \'%1\'\n").arg (m_fileName);
+  m_terminalView->sendText (text);
   //m_terminalView->widget ()->setFocus ();
 }
 
 
 // (un)comment selected text
 void
 FileEditorMdiSubWindow::commentSelectedText ()
 {
@@ -333,17 +334,17 @@ FileEditorMdiSubWindow::prevBookmark ()
   if ( m_editor->markersAtLine(line) && (1 << MARKER_BOOKMARK) )
     line--; // we have a bookmark here, so start search from prev line
   prevline = m_editor->markerFindPrevious(line,(1 << MARKER_BOOKMARK));
   m_editor->setCursorPosition(prevline,0);
 }
 
 // function for setting the already existing lexer from MainWindow
 void
-FileEditorMdiSubWindow::initEditor (AbstractTerminalView* terminalView,
+FileEditorMdiSubWindow::initEditor (TerminalWidget* terminalView,
                                     LexerOctaveGui* lexer,
                                     MainWindow* mainWindow)
 {
   m_editor->setLexer(lexer);
   m_terminalView = terminalView; // for sending commands to octave
                        // TODO: make a global commandOctave function?
   m_mainWindow = mainWindow;  // get the MainWindow for chekcing state at subwindow close
 }
diff --git a/gui/octave-gui/src/FileEditorMdiSubWindow.h b/gui/octave-gui/src/FileEditorMdiSubWindow.h
--- a/gui/octave-gui/src/FileEditorMdiSubWindow.h
+++ b/gui/octave-gui/src/FileEditorMdiSubWindow.h
@@ -14,17 +14,17 @@
  * You should have received a copy of the GNU Affero General Public License
  * along with this program. If not, see <http://www.gnu.org/licenses/>.
  */
 
 #ifndef FILEEDITORMDISUBWINDOW_H
 #define FILEEDITORMDISUBWINDOW_H
 
 #include "MainWindow.h"
-#include "AbstractTerminalView.h"
+#include "TerminalWidget.h"
 #include <QMdiSubWindow>
 #include <QToolBar>
 #include <QAction>
 #include <QMenuBar>
 #include <QStatusBar>
 #include <QCloseEvent>
 #include <Qsci/qsciscintilla.h>
 // Not available in the Debian repos yet!
@@ -40,17 +40,17 @@ enum MARKER
   };
 
 class FileEditorMdiSubWindow:public QMdiSubWindow
 {
 Q_OBJECT public:
   FileEditorMdiSubWindow (QWidget * parent = 0);
   ~FileEditorMdiSubWindow ();
   void loadFile (QString fileName);
-  void initEditor (AbstractTerminalView *terminalView,
+  void initEditor (TerminalWidget *terminalView,
                    LexerOctaveGui *lexer,
                    MainWindow *mainWindow);
 
 public slots:
 
   void newFile ();
   void openFile ();
   void saveFile ();
@@ -73,17 +73,17 @@ private:
   void construct ();
   void doCommentSelectedText (bool comment);
   QMenuBar *m_menuBar;
   QToolBar *m_toolBar;
   QsciScintilla *m_editor;
   QStatusBar *m_statusBar;
   QString m_fileName;
   QString m_fileNameShort;
-  AbstractTerminalView* m_terminalView;
+  TerminalWidget* m_terminalView;
   QAction* m_copyAction;
   QAction* m_cutAction;
   MainWindow* m_mainWindow;
   int m_markerBookmark;
   bool m_modified;
   bool m_longTitle;
 
 private slots:
diff --git a/gui/octave-gui/src/MainWindow.cpp b/gui/octave-gui/src/MainWindow.cpp
--- a/gui/octave-gui/src/MainWindow.cpp
+++ b/gui/octave-gui/src/MainWindow.cpp
@@ -22,20 +22,16 @@
 #include <QDesktopServices>
 #include <QFileDialog>
 #include <QMessageBox>
 #include "MainWindow.h"
 #include "FileEditorMdiSubWindow.h"
 #include "ImageViewerMdiSubWindow.h"
 #include "SettingsDialog.h"
 
-#ifdef Q_OS_UNIX
-#   include "qtermwidget.h"
-#endif
-
 #define VERSION_STRING "Octave GUI (0.8.5)"
 
 MainWindow::MainWindow (QWidget * parent):QMainWindow (parent)
 {
   construct ();
   OctaveLink::instance ()->launchOctave();
 }
 
@@ -124,42 +120,45 @@ MainWindow::openWebPage (QString url)
 }
 
 void
 MainWindow::handleSaveWorkspaceRequest ()
 {
   QString selectedFile =
     QFileDialog::getSaveFileName (this, tr ("Save Workspace"),
                                   ResourceManager::instance ()->homePath ());
-  m_terminalView->sendText (QString ("save \'%1\'\n").arg (selectedFile));
-  m_terminalView->widget ()->setFocus ();
+  QString text = QString ("save \'%1\'\n").arg (selectedFile);
+  m_terminalView->sendText (text);
+  m_terminalView->setFocus ();
 }
 
 void
 MainWindow::handleLoadWorkspaceRequest ()
 {
   QString selectedFile =
     QFileDialog::getOpenFileName (this, tr ("Load Workspace"),
                                   ResourceManager::instance ()->homePath ());
-  m_terminalView->sendText (QString ("load \'%1\'\n").arg (selectedFile));
-  m_terminalView->widget ()->setFocus ();
+  QString text = QString ("load \'%1\'\n").arg (selectedFile);
+  m_terminalView->sendText (text);
+  m_terminalView->setFocus ();
 }
 
 void
 MainWindow::handleClearWorkspaceRequest ()
 {
-  m_terminalView->sendText ("clear\n");
-  m_terminalView->widget ()->setFocus ();
+  QString text = QString ("clear\n");
+  m_terminalView->sendText (text);
+  m_terminalView->setFocus ();
 }
 
 void
 MainWindow::handleCommandDoubleClicked (QString command)
 {
   m_terminalView->sendText (command);
-  m_terminalView->widget ()->setFocus ();
+  m_terminalView->setFocus ();
 }
 
 void
 MainWindow::handleUnreadMessages (bool yes)
 {
   if (yes)
     {
       m_ircWidgetSubWindow
@@ -285,30 +284,30 @@ MainWindow::construct ()
   m_workspaceView->setStatusTip (tr ("View the variables in the active workspace."));
   m_historyDockWidget = new HistoryDockWidget (this);
   m_historyDockWidget->setStatusTip (tr ("Browse and search the command history."));
   m_filesDockWidget = new FilesDockWidget (this);
   m_filesDockWidget->setStatusTip (tr ("Browse your files."));
   m_statusBar = new QStatusBar (this);
 
   // Setup essential MDI Windows.
-  m_terminalView = AbstractTerminalView::create (this);
+  m_terminalView = new TerminalWidget (this);
   m_documentationWidget = new BrowserWidget (this);
   m_ircWidget = new IRCWidget (this);
 
   // Octave Terminal subwindow.
   m_terminalViewSubWindow = new NonClosableMdiSubWindow (this);
-  m_terminalViewSubWindow->setWidget (m_terminalView->widget ());
+  m_terminalViewSubWindow->setWidget (m_terminalView);
   m_centralMdiArea->addSubWindow (m_terminalViewSubWindow, Qt::WindowTitleHint | Qt::WindowMinMaxButtonsHint);
 
   m_terminalViewSubWindow->setObjectName ("OctaveTerminalSubWindow");
   m_terminalViewSubWindow->setWindowTitle (tr ("Terminal"));
   m_terminalViewSubWindow
       ->setWindowIcon (ResourceManager::instance ()->icon (ResourceManager::Terminal));
-  m_terminalViewSubWindow->setFocusProxy (m_terminalView->widget ());
+  m_terminalViewSubWindow->setFocusProxy (m_terminalView);
   m_terminalViewSubWindow->setStatusTip (tr ("Enter your commands into the Octave terminal."));
   m_terminalViewSubWindow->setMinimumSize (300, 300);
 
   // Documentation subwindow.
   m_documentationWidgetSubWindow = new NonClosableMdiSubWindow (this);
   m_documentationWidgetSubWindow->setWidget (m_documentationWidget);
   m_centralMdiArea->addSubWindow (m_documentationWidgetSubWindow, Qt::WindowTitleHint | Qt::WindowMinMaxButtonsHint);
 
diff --git a/gui/octave-gui/src/MainWindow.h b/gui/octave-gui/src/MainWindow.h
--- a/gui/octave-gui/src/MainWindow.h
+++ b/gui/octave-gui/src/MainWindow.h
@@ -23,24 +23,24 @@
 #include <QTabWidget>
 #include <QMdiArea>
 #include <QStatusBar>
 #include <QToolBar>
 #include <QQueue>
 #include <Qsci/qsciapis.h>
 #include <QMdiSubWindow>
 #include "ResourceManager.h"
-#include "AbstractTerminalView.h"
 #include "OctaveLink.h"
 #include "WorkspaceView.h"
 #include "HistoryDockWidget.h"
 #include "FilesDockWidget.h"
 #include "BrowserWidget.h"
 #include "irc/IRCWidget.h"
 #include "lexer/lexeroctavegui.h"
+#include "TerminalWidget.h"
 
 class NonClosableMdiSubWindow : public QMdiSubWindow
 {
   Q_OBJECT
 public:
   explicit NonClosableMdiSubWindow (QWidget *parent = 0)
     : QMdiSubWindow (parent) { }
   virtual ~NonClosableMdiSubWindow () { }
@@ -57,17 +57,17 @@ protected:
   * Represents the main window.
   */
 class MainWindow:public QMainWindow
 {
 Q_OBJECT public:
   MainWindow (QWidget * parent = 0);
   ~MainWindow ();
 
-  AbstractTerminalView *terminalView ()
+  TerminalWidget *terminalView ()
   {
     return m_terminalView;
   }
 
   HistoryDockWidget *historyDockWidget ()
   {
     return m_historyDockWidget;
   }
@@ -108,17 +108,17 @@ protected:
   void writeSettings ();
 
 private:
   void construct ();
   void establishOctaveLink ();
   QMdiArea *m_centralMdiArea;
 
   // Mdi sub windows.
-  AbstractTerminalView *m_terminalView;
+  TerminalWidget *m_terminalView;
   BrowserWidget *m_documentationWidget;
   IRCWidget *m_ircWidget;
 
   NonClosableMdiSubWindow *m_terminalViewSubWindow;
   NonClosableMdiSubWindow *m_documentationWidgetSubWindow;
   NonClosableMdiSubWindow *m_ircWidgetSubWindow;
 
   // Dock widgets.
diff --git a/gui/octave-gui/src/TerminalWidget.cpp b/gui/octave-gui/src/TerminalWidget.cpp
new file mode 100644
--- /dev/null
+++ b/gui/octave-gui/src/TerminalWidget.cpp
@@ -0,0 +1,36 @@
+/* OctaveGUI - A graphical user interface for Octave
+ * Copyright (C) 2011 Jacob Dawid (jacob.dawid@googlemail.com)
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Affero General Public License as
+ * published by the Free Software Foundation, either version 3 of the
+ * License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Affero General Public License for more details.
+ *
+ * You should have received a copy of the GNU Affero General Public License
+ * along with this program. If not, see <http://www.gnu.org/licenses/>.
+ */
+
+#include "TerminalWidget.h"
+#include "pty.h"
+
+TerminalWidget::TerminalWidget(QWidget *parent)
+    : QTermWidget(0, parent) {
+    int fdm;
+    int fds;
+
+    if ( openpty (&fdm, &fds, 0, 0, 0) < 0 )
+      {
+        fprintf (stderr, "oops!\n");
+      }
+
+    dup2 (fds, 0);
+    dup2 (fds, 1);
+    dup2 (fds, 2);
+
+    openTeletype(fdm);
+}
diff --git a/gui/octave-gui/src/TerminalWidget.h b/gui/octave-gui/src/TerminalWidget.h
new file mode 100644
--- /dev/null
+++ b/gui/octave-gui/src/TerminalWidget.h
@@ -0,0 +1,28 @@
+/* OctaveGUI - A graphical user interface for Octave
+ * Copyright (C) 2011 Jacob Dawid (jacob.dawid@googlemail.com)
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Affero General Public License as
+ * published by the Free Software Foundation, either version 3 of the
+ * License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Affero General Public License for more details.
+ *
+ * You should have received a copy of the GNU Affero General Public License
+ * along with this program. If not, see <http://www.gnu.org/licenses/>.
+ */
+
+#ifndef TERMINALWIDGET_H
+#define TERMINALWIDGET_H
+
+#include "qtermwidget.h"
+
+class TerminalWidget : public QTermWidget {
+public:
+    TerminalWidget(QWidget *parent = 0);
+};
+
+#endif // TERMINALWIDGET_H
