# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1516602306 18000
#      Mon Jan 22 01:25:06 2018 -0500
# Node ID 6de74d95a7a1a2a361c98373ad771c7c4b82d397
# Parent  81c84fd1ae57346c29bbcb57c02ec8c077cd17ce
don't use "const bool&" unnecessarily

* octave-qt-link.h, octave-qt-link.cc (octave_qt_link::do_set_workspace):
Pass bool arg update_variable_editor by value.  Don't provide default
value.
* octave-link.h, octave-link.cc (octave_link::set_workspace,
octave_link::do_set_workspace):  Pass bool arg update_variable_editor
by value.  Don't provide default value.
(octave_link::do_set_workspace (void)): Pass true as value for
update_variable_editor in call to do_set_workspace.

diff --git a/libgui/src/octave-qt-link.cc b/libgui/src/octave-qt-link.cc
--- a/libgui/src/octave-qt-link.cc
+++ b/libgui/src/octave-qt-link.cc
@@ -414,17 +414,17 @@ void
 octave_qt_link::do_execute_command_in_terminal (const std::string& command)
 {
   emit execute_command_in_terminal_signal (QString::fromStdString (command));
 }
 
 void
 octave_qt_link::do_set_workspace (bool top_level, bool debug,
                                   const std::list<workspace_element>& ws,
-                                  const bool& update_variable_editor)
+                                  bool update_variable_editor)
 {
   if (! top_level && ! debug)
     return;
 
   QString scopes;
   QStringList symbols;
   QStringList class_names;
   QStringList dimensions;
diff --git a/libgui/src/octave-qt-link.h b/libgui/src/octave-qt-link.h
--- a/libgui/src/octave-qt-link.h
+++ b/libgui/src/octave-qt-link.h
@@ -106,17 +106,17 @@ public:
                                 bool addpath_option);
 
   void do_change_directory (const std::string& dir);
 
   void do_execute_command_in_terminal (const std::string& command);
 
   void do_set_workspace (bool top_level, bool debug,
                          const std::list<workspace_element>& ws,
-                         const bool& variable_editor_too = true);
+                         bool update_variable_editor);
 
   void do_clear_workspace (void);
 
   void do_set_history (const string_vector& hist);
   void do_append_history (const std::string& hist_entry);
   void do_clear_history (void);
 
   void do_pre_input_event (void);
diff --git a/libinterp/corefcn/octave-link.cc b/libinterp/corefcn/octave-link.cc
--- a/libinterp/corefcn/octave-link.cc
+++ b/libinterp/corefcn/octave-link.cc
@@ -71,17 +71,17 @@ octave_link::set_workspace (void)
         = octave::__get_symbol_table__ ("octave_link::set_workspace");
 
       std::list<workspace_element> workspace_info;
       octave::symbol_scope scope = symtab.current_scope ();
       if (scope)
         workspace_info = scope.workspace_info ();
 
       instance->do_set_workspace (symtab.at_top_level (),
-                                  instance->debugging, workspace_info);
+                                  instance->debugging, workspace_info, true);
     }
 }
 
 // OBJ should be an object of a class that is derived from the base
 // class octave_link, or 0 to disconnect the link.  It is the
 // responsibility of the caller to delete obj.
 
 void
diff --git a/libinterp/corefcn/octave-link.h b/libinterp/corefcn/octave-link.h
--- a/libinterp/corefcn/octave-link.h
+++ b/libinterp/corefcn/octave-link.h
@@ -255,20 +255,22 @@ public:
   {
     if (enabled ())
       instance->do_execute_command_in_terminal (command);
   }
 
   static void set_workspace (void);
 
   static void set_workspace (bool top_level,
-                             const std::list<workspace_element>& ws, const bool& update_variable_editor = true)
+                             const std::list<workspace_element>& ws,
+                             bool update_variable_editor = true)
   {
     if (enabled ())
-      instance->do_set_workspace (top_level, instance->debugging, ws, update_variable_editor);
+      instance->do_set_workspace (top_level, instance->debugging, ws,
+                                  update_variable_editor);
   }
 
   static void clear_workspace (void)
   {
     if (enabled ())
       instance->do_clear_workspace ();
   }
 
@@ -541,17 +543,17 @@ protected:
 
   virtual void do_change_directory (const std::string& dir) = 0;
 
   virtual void do_execute_command_in_terminal (const std::string& command) = 0;
 
   virtual void
   do_set_workspace (bool top_level, bool debug,
                     const std::list<workspace_element>& ws,
-                    const bool& variable_editor_too = true) = 0;
+                    bool update_variable_editor) = 0;
 
   virtual void do_clear_workspace (void) = 0;
 
   virtual void do_set_history (const string_vector& hist) = 0;
   virtual void do_append_history (const std::string& hist_entry) = 0;
   virtual void do_clear_history (void) = 0;
 
   virtual void do_pre_input_event (void) = 0;
