# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1363727182 14400
#      Tue Mar 19 17:06:22 2013 -0400
# Node ID 06aa4c0f2018ee747d915c5c9ba475ab9713b911
# Parent  100a7bd2590e0a429f4381a285ff5f0bf17a8272
handle foo @... as command syntax

* lex.ll ("@"): Check for possible command.

diff --git a/libinterp/parse-tree/lex.ll b/libinterp/parse-tree/lex.ll
--- a/libinterp/parse-tree/lex.ll
+++ b/libinterp/parse-tree/lex.ll
@@ -701,25 +701,34 @@ ANY_INCLUDING_NL (.|{NL})
       {
         curr_lexer->looking_for_object_index = true;
 
         return curr_lexer->count_token_internal (METAQUERY);
       }
   }
 
 "@" {
-    curr_lexer->lexer_debug ("@");
-
-    curr_lexer->current_input_column++;
-
-    curr_lexer->looking_at_function_handle++;
-    curr_lexer->looking_for_object_index = false;
-    curr_lexer->at_beginning_of_statement = false;
-
-    return curr_lexer->count_token ('@');
+    if (curr_lexer->previous_token_may_be_command ()
+        &&  curr_lexer->space_follows_previous_token ())
+      {
+        yyless (0);
+        curr_lexer->push_start_state (COMMAND_START);
+      }
+    else
+      {
+        curr_lexer->lexer_debug ("@");
+
+        curr_lexer->current_input_column++;
+
+        curr_lexer->looking_at_function_handle++;
+        curr_lexer->looking_for_object_index = false;
+        curr_lexer->at_beginning_of_statement = false;
+
+        return curr_lexer->count_token ('@');
+      }
   }
 
 %{
 // A new line character.  New line characters inside matrix constants
 // are handled by the <MATRIX_START> start state code above.  If closest
 // nesting is inside parentheses, don't return a row separator.
 %}
 
