# HG changeset patch
# User Torsten <ttl@justmail.de>
# Date 1413484177 -7200
#      Thu Oct 16 20:29:37 2014 +0200
# Branch gui-release
# Node ID ce9bd5ed44d2a868e0202d1e7ff8453a92f2854f
# Parent  82c329619836d0e7e3e491a7c52f2aeebc6679c3
usage of default suffix depending on filter in save as dialog (bug #43335)

* file-editor-tab.cc (save_file_as): use QStringList for adding filters,
  initialize filter and default suffix depending on suffix of current file
  name if available, connect the selection of a filter to a new slot;
  (handle_save_as_filter_selected): new slot setting the default suffix
  depending on the first suffix in selected filter;

* file-editor-tab.h: new slot handle_save_as_filter_selected

diff --git a/libgui/src/m-editor/file-editor-tab.cc b/libgui/src/m-editor/file-editor-tab.cc
--- a/libgui/src/m-editor/file-editor-tab.cc
+++ b/libgui/src/m-editor/file-editor-tab.cc
@@ -1572,20 +1572,32 @@ file_editor_tab::save_file_as (bool remo
   extra->addWidget (separator,0,0,1,3);
   extra->addWidget (label_eol,1,0);
   extra->addWidget (combo_eol,1,1);
   extra->addItem   (spacer,   1,2);
 
   // and add the extra grid layout to the dialog's layout
   dialog_layout->addLayout (extra,rows,0,1,dialog_layout->columnCount ());
 
+  // add the possible filters and the default suffix
+  QStringList filters;
+  filters << tr ("Octave Files (*.m)")
+          << tr ("All Files (*)");
+  fileDialog->setNameFilters (filters);
+  fileDialog->setDefaultSuffix ("m");
 
   if (valid_file_name ())
     {
       fileDialog->selectFile (_file_name);
+      QFileInfo file_info (_file_name);
+      if (file_info.suffix () != "m")
+        { // it is not an octave file
+          fileDialog->selectNameFilter (filters.at (1));  // "All Files"
+          fileDialog->setDefaultSuffix ("");              // no default suffix
+        }
     }
   else
     {
       fileDialog->selectFile ("");
 
       if (_file_name.isEmpty ())
         fileDialog->setDirectory (QDir::currentPath ());
       else
@@ -1596,21 +1608,22 @@ file_editor_tab::save_file_as (bool remo
         }
 
       // propose a name corresponding to the function name
       QString fname = get_function_name ();
       if (! fname.isEmpty ())
         fileDialog->selectFile (fname + ".m");
     }
 
-  fileDialog->setNameFilter (tr ("Octave Files (*.m);;All Files (*)"));
-  fileDialog->setDefaultSuffix ("m");
   fileDialog->setAcceptMode (QFileDialog::AcceptSave);
   fileDialog->setViewMode (QFileDialog::Detail);
 
+  connect (fileDialog, SIGNAL (filterSelected (const QString&)),
+           this, SLOT (handle_save_as_filter_selected (const QString&)));
+
   if (remove_on_success)
     {
       connect (fileDialog, SIGNAL (fileSelected (const QString&)),
                this, SLOT (handle_save_file_as_answer_close (const QString&)));
 
       connect (fileDialog, SIGNAL (rejected ()),
                this, SLOT (handle_save_file_as_answer_cancel ()));
     }
@@ -1624,16 +1637,30 @@ file_editor_tab::save_file_as (bool remo
 }
 
 void
 file_editor_tab::handle_combo_eol_current_index (int index)
 {
   _save_as_desired_eol = static_cast<QsciScintilla::EolMode> (index);
 }
 
+void
+file_editor_tab::handle_save_as_filter_selected (const QString& filter)
+{
+  QFileDialog *file_dialog = qobject_cast<QFileDialog *> (sender ());
+
+  QRegExp rx ("\\*\\.([^ ^\\)]*)[ \\)]");   // regexp for suffix in filter
+  int index = rx.indexIn (filter,0);        // get first suffix in filter
+
+  if (index > -1)
+    file_dialog->setDefaultSuffix (rx.cap (1)); // found a suffix, set default
+  else
+    file_dialog->setDefaultSuffix ("");         // not found, clear default
+}
+
 bool
 file_editor_tab::check_valid_identifier (QString file_name)
 {
   QFileInfo file = QFileInfo (file_name);
   QString base_name = file.baseName ();
 
   if ((file.suffix () == "m")
       && (! valid_identifier (base_name.toStdString ())))
diff --git a/libgui/src/m-editor/file-editor-tab.h b/libgui/src/m-editor/file-editor-tab.h
--- a/libgui/src/m-editor/file-editor-tab.h
+++ b/libgui/src/m-editor/file-editor-tab.h
@@ -157,16 +157,17 @@ private slots:
 
   // When user closes find_dialog box.
   void handle_find_dialog_finished (int decision);
 
   // When user closes QFileDialog box.
   void handle_save_file_as_answer (const QString& fileName);
   void handle_save_file_as_answer_close (const QString& fileName);
   void handle_save_file_as_answer_cancel ();
+  void handle_save_as_filter_selected (const QString& filter);
   void handle_combo_eol_current_index (int index);
 
   // When apis preparation has finished and is ready to save
   void save_apis_info ();
 
   // When the numer of lines changes -> adapt width of margin
   void auto_margin_width ();
 
