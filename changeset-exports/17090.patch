# HG changeset patch
# User Torsten <ttl@justmail.de>
# Date 1374814397 -7200
#      Fri Jul 26 06:53:17 2013 +0200
# Node ID 1d544ac393694280bb63a666828ea4d0aaef2da3
# Parent  3cbbdb49b8fffe42d6ed19c843ccbbd670e88788
show correct undock-button of widgets when window layout is resetted

* octave_dock_widget.cc(make_widget): optional parameter indicating if
  widget has to be docked to the main window or just reparented (default true)
* octave_dock_widget.h: optional parameter for make_widget, default true
* main_window.cc(set_window_layout): call make_widget (only for reparenting)
  when widget is should not be floating but has no parent

diff --git a/libgui/src/main-window.cc b/libgui/src/main-window.cc
--- a/libgui/src/main-window.cc
+++ b/libgui/src/main-window.cc
@@ -552,29 +552,32 @@ main_window::set_window_layout (QSetting
       if (! name.isEmpty ())
         {
           // If floating, make window from widget.
           bool floating = settings->value
               ("DockWidgets/" + name + "Floating", false).toBool ();
           if (floating)
             widget->make_window ();
           else if (! widget->parent ())  // should not be floating but is
-            widget->setParent (this);    // reparent
+            widget->make_widget (false); // no docking, just reparent
 
           // restore geometry
           QVariant val = settings->value (name);
           widget->restoreGeometry (val.toByteArray ());
 
           // make widget visible if desired
           bool visible = settings->value
               ("DockWidgets/" + name + "Visible", true).toBool ();
           if (floating && visible)              // floating and visible
             float_and_visible.append (widget);  // not show before main win
           else
-            widget->setVisible (visible);       // not floating -> show
+            {
+              widget->make_widget ();
+              widget->setVisible (visible);       // not floating -> show
+            }
         }
     }
 
   restoreState (settings->value ("MainWindow/windowState").toByteArray ());
   restoreGeometry (settings->value ("MainWindow/geometry").toByteArray ());
   show ();  // main window is ready and can be shown (as first window)
 
   // show floating widgets after main win to ensure "Octave" in central menu
diff --git a/libgui/src/octave-dock-widget.cc b/libgui/src/octave-dock-widget.cc
--- a/libgui/src/octave-dock-widget.cc
+++ b/libgui/src/octave-dock-widget.cc
@@ -149,33 +149,37 @@ octave_dock_widget::make_window ()
 
   // restore the last geometry when floating
   restoreGeometry (settings->value
           ("DockWidgets/" + objectName ()+"_floating_geometry").toByteArray ());
 }
 
 // dock the widget
 void
-octave_dock_widget::make_widget ()
+octave_dock_widget::make_widget (bool dock)
 {
   QSettings *settings = resource_manager::get_settings ();
 
   // save last floating geometry
   settings->setValue ("DockWidgets/" + objectName () + "_floating_geometry",
                       saveGeometry ());
   settings->sync ();
 
-  // add widget to last saved docking area
-  int area = settings->value ("DockWidgets/" + objectName () + "_dock_area",
-                               Qt::TopDockWidgetArea).toInt ();
-  _parent->addDockWidget (static_cast<Qt::DockWidgetArea> (area), this);
+  if (dock)
+    { // add widget to last saved docking area (dock=true is default)
+      int area = settings->value ("DockWidgets/" + objectName () + "_dock_area",
+                                   Qt::TopDockWidgetArea).toInt ();
+      _parent->addDockWidget (static_cast<Qt::DockWidgetArea> (area), this);
 
-  // FIXME: restoreGeometry is ignored for docked widgets and its child widget
-  // restoreGeometry (settings->value
-  //        ("DockWidgets/" + objectName ()).toByteArray ());
+      // FIXME: restoreGeometry is ignored for docked widgets and its child widget
+      // restoreGeometry (settings->value
+      //        ("DockWidgets/" + objectName ()).toByteArray ());
+    }
+  else  // only reparent, no docking
+    setParent (_parent);
 
   // adjust the (un)dock icon
   _dock_action->setIcon (QIcon (":/actions/icons/widget-undock.png"));
   _dock_action->setToolTip (tr ("Undock widget"));
 }
 
 // slot for (un)dock action
 void
diff --git a/libgui/src/octave-dock-widget.h b/libgui/src/octave-dock-widget.h
--- a/libgui/src/octave-dock-widget.h
+++ b/libgui/src/octave-dock-widget.h
@@ -35,17 +35,17 @@ class octave_dock_widget : public QDockW
 
 public:
 
   octave_dock_widget (QWidget *p = 0);
   virtual ~octave_dock_widget ();
 
   virtual void connect_visibility_changed (void);
   void make_window (void);
-  void make_widget (void);
+  void make_widget (bool dock=true);
   void set_title (const QString&);
 
 signals:
 
   /** Custom signal that tells whether a user has clicked away
    *  that dock widget, i.e the active dock widget has
    *  changed. */
   void active_changed (bool active);
