# HG changeset patch
# User Rik <rik@octave.org>
# Date 1416788560 28800
#      Sun Nov 23 16:22:40 2014 -0800
# Branch gui-release
# Node ID 98c7fa559d75b60ee04c4278fe799303a1d10779
# Parent  c364b9a44580e2014a4c2b11bab97d8b46ef7f09
# Parent  043440fa7006a635f79388624356bef104578684
maint: Periodic merge of stable to gui-release.

diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -779,17 +779,17 @@ fi
 
 ### Check for ZLIB library.
 
 OCTAVE_CHECK_LIB(z, ZLIB,
   [ZLIB library not found.  Octave will not be able to save or load compressed data files or HDF5 files.],
   [zlib.h], [gzclearerr])
 
 ### Also define HAVE_ZLIB if libz is found.
-if test $octave_cv_lib_z = yes; then
+if test -z "$warn_z"; then
   AC_DEFINE(HAVE_ZLIB, 1, [Define to 1 if ZLIB is available.])
 fi
 
  ### Check for the LLVM library
 
 build_jit=no
 AC_ARG_ENABLE([jit],
   [AS_HELP_STRING([--enable-jit],
@@ -1423,17 +1423,18 @@ fi
 save_LIBS="$LIBS"
 LIBS="$LAPACK_LIBS $BLAS_LIBS $FLIBS $LIBS"
 OCTAVE_CHECK_LIB(qrupdate, qrupdate,
   [qrupdate not found.  The QR & Cholesky updating functions will be slow.],
   [],
   [sqr1up],
   [Fortran 77], [don't use qrupdate, disable QR & Cholesky updating functions])
 
-if test $octave_cv_lib_qrupdate = yes; then
+## Additional check to see if qrupdate lib found supports LU updates
+if test -z "$warn_qrupdate"; then
   AC_CACHE_CHECK([for slup1up in $QRUPDATE_LIBS],
     [octave_cv_func_slup1up],
     [LIBS="$LIBS $QRUPDATE_LIBS"
     AC_LANG_PUSH([Fortran 77])
     AC_LINK_IFELSE([AC_LANG_CALL([], [slup1up])],
       octave_cv_func_slup1up=yes, octave_cv_func_slup1up=no)
     AC_LANG_POP([Fortran 77])
   ])
diff --git a/scripts/plot/draw/private/__patch__.m b/scripts/plot/draw/private/__patch__.m
--- a/scripts/plot/draw/private/__patch__.m
+++ b/scripts/plot/draw/private/__patch__.m
@@ -44,17 +44,17 @@ function [h, failed] = __patch__ (p, var
       args{3} = "vertices";
       args{4} = getfield (varargin{1}, "vertices");
       args{5} = "facevertexcdata";
       if (isfield (varargin{1}, "facevertexcdata"))
         args{6} = getfield (varargin{1}, "facevertexcdata");
       else
         args{6} = [];
       endif
-      args = [args; varargin(2:end)];
+      args = [args, varargin(2:end)];
       args = setdata (args);
     else
       failed = true;
     endif
   elseif (is_numeric_arg(1))
     if (nargin < 3 || ! is_numeric_arg(2))
       failed = true;
     else
