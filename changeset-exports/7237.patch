# HG changeset patch
# User jwe
# Date 1196711567 0
#      Mon Dec 03 19:52:47 2007 +0000
# Node ID 7e248dd1e6d5bbc9c9d75fabdac2f8519f506ca5
# Parent  3ac12f33cf4bdc402f811b12e9f08293c026f0d2
[project @ 2007-12-03 19:52:47 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,13 @@
+2007-12-03  John W. Eaton  <jwe@octave.org>
+
+	* configure.in: If available, include <sys/types.h> in test for
+	sigset_t and sig_atomic_t.
+
 2007-11-30  Moritz Borgmann  <octave@moriborg.de>
 
 	* configure.in: Also check for sunmath.h.
 
 2007-11-26  David Bateman  <dbateman@free.fr>
 
 	* PROJECTS: condest now implemented.
 
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -24,17 +24,17 @@ dnl               2002, 2003, 2004, 2005
 ### Preserve CFLAGS and CXXFLAGS from the environment before doing
 ### anything else because we don't know which macros might call
 ### AC_PROG_CC or AC_PROG_CXX.
 
 EXTERN_CFLAGS="$CFLAGS"
 EXTERN_CXXFLAGS="$CXXFLAGS"
 
 AC_INIT
-AC_REVISION($Revision: 1.597 $)
+AC_REVISION($Revision: 1.598 $)
 AC_PREREQ(2.57)
 AC_CONFIG_SRCDIR([src/octave.cc])
 AC_CONFIG_HEADER(config.h)
 
 OCTAVE_HOST_TYPE
 
 AC_DEFINE(OCTAVE_SOURCE, 1, [Define if this is Octave.])
   
@@ -1190,17 +1190,21 @@ esac
 
 AC_TYPE_MODE_T
 AC_TYPE_OFF_T
 AC_TYPE_PID_T
 AC_TYPE_SIZE_T
 AC_TYPE_UID_T
 AC_CHECK_TYPES([dev_t, ino_t, nlink_t, nlink_t])
 AC_CHECK_TYPES([long long int, unsigned long long int])
-AC_CHECK_TYPES([sigset_t, sig_atomic_t], , , [#include <signal.h>])
+AC_CHECK_TYPES([sigset_t, sig_atomic_t], , , [
+#if defined (HAVE_SYS_TYPES_H)
+#include <sys/types.h>
+#endif
+#include <signal.h>])
 
 ### How big are ints and how are they oriented?  These could probably
 ### be eliminated in favor of run-time checks.
 
 AC_CHECK_SIZEOF(short)
 AC_CHECK_SIZEOF(int)
 AC_CHECK_SIZEOF(long)
 AC_CHECK_SIZEOF(long long)
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,12 @@
+2007-12-03  David Bateman  <dbateman@free.fr>
+
+	* DLD-FUNCTIONS/regexp.cc: Also include sys/types.h for regexp.
+
 2007-11-30  John W. Eaton  <jwe@octave.org>
 
 	* DLD-FUNCTIONS/sort.cc (operator < (const Complex&, const Complex&),
 	operator > (const Complex&, const Complex&)):
 	Pass args by const reference, not value.
 
 	* src/data.cc, src/matherr.c, src/pr-output.cc, src/sysdep.cc,
 	src/DLD-FUNCTIONS/__dsearchn__.cc, src/DLD-FUNCTIONS/minmax.cc,
diff --git a/src/DLD-FUNCTIONS/regexp.cc b/src/DLD-FUNCTIONS/regexp.cc
--- a/src/DLD-FUNCTIONS/regexp.cc
+++ b/src/DLD-FUNCTIONS/regexp.cc
@@ -41,16 +41,19 @@ along with Octave; see the file COPYING.
 #include "parse.h"
 
 #if defined (HAVE_PCRE)
 #include <pcre.h>
 #elif defined (HAVE_REGEX)
 #if defined (__MINGW32__)
 #define __restrict
 #endif
+#if defined (HAVE_SYS_TYPES_H)
+#include <sys/types.h>
+#endif
 #include <regex.h>
 #endif
 
 // The regexp is constructed as a linked list to avoid resizing the
 // return values in arrays at each new match.
 
 // FIXME don't bother collecting and composing return values the user
 // doesn't want.
