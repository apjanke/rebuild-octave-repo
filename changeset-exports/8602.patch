# HG changeset patch
# User carlo@guglielmo.local
# Date 1233078514 18000
#      Tue Jan 27 12:48:34 2009 -0500
# Node ID 827f0285a2016fd6ce72d2906e08faea48fb205a
# Parent  b297b86f4ad9de45fd1df8da91a751d3bf2e1e1c
spline.m doc fix

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2009-01-27  Carlo de Falco  <kingcrimson@tsicali.it>
+
+	* polynomial/spline.m: Doc fix.
+
 2009-01-27  Søren Hauberg  <hauberg@gmail.com>
 
 	* general/gradient.m: Handle computing the gradient of a function
 	handle.
 
 2009-01-27  Jaroslav Hajek  <highegg@gmail.com>
 
 	* optimization/lsqnonneg.m: Reimplement using QR updating for
diff --git a/scripts/polynomial/spline.m b/scripts/polynomial/spline.m
--- a/scripts/polynomial/spline.m
+++ b/scripts/polynomial/spline.m
@@ -16,28 +16,32 @@
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {@var{pp} =} spline (@var{x}, @var{y})
 ## @deftypefnx {Function File} {@var{yi} =} spline (@var{x}, @var{y}, @var{xi})
 ##
-## Returns the cubic spline interpolation of @var{y} at the point
-## @var{x}. Called with two arguments the piece-wise polynomial @var{pp}
-## that may later be used with @code{ppval} to evaluate the polynomial
-## at specific points.
+## Return the cubic spline interpolant of @var{y} at points @var{x}. 
+## If called with two arguments, @code{spline} returns the piece-wise
+## polynomial @var{pp} that may later be used with @code{ppval} to
+## evaluate the polynomial at specific points.
+## If called with a third input argument, @code{spline} evaluates the 
+## spline at the points @var{xi}. There is an equivalence
+## between @code{ppval (spline (@var{x}, @var{y}), @var{xi})} and
+## @code{spline (@var{x}, @var{y}, @var{xi})}.
 ##
 ## The variable @var{x} must be a vector of length @var{n}, and @var{y}
 ## can be either a vector or array. In the case where @var{y} is a
 ## vector, it can have a length of either @var{n} or @code{@var{n} + 2}.
 ## If the length of @var{y} is @var{n}, then the 'not-a-knot' end
 ## condition is used. If the length of @var{y} is @code{@var{n} + 2},
-## then the first and last values of the vector @var{y} are the first
-## derivative of the cubic spline at the end-points.
+## then the first and last values of the vector @var{y} are the values
+## of the first derivative of the cubic spline at the end-points.
 ##
 ## If @var{y} is an array, then the size of @var{y} must have the form
 ## @iftex
 ## @tex
 ## $$[s_1, s_2, \cdots, s_k, n]$$
 ## @end tex
 ## @end iftex
 ## @ifnottex
@@ -47,35 +51,29 @@
 ## @iftex
 ## @tex
 ## $$[s_1, s_2, \cdots, s_k, n + 2]$$.
 ## @end tex
 ## @end iftex
 ## @ifnottex
 ## @code{[@var{s1}, @var{s2}, @dots{}, @var{sk}, @var{n} + 2]}.
 ## @end ifnottex
-## The array is then reshaped internally to a matrix where to leading
+## The array is then reshaped internally to a matrix where the leading
 ## dimension is given by 
 ## @iftex
 ## @tex
 ## $$s_1 s_2 \cdots s_k$$
 ## @end tex
 ## @end iftex
 ## @ifnottex
 ## @code{@var{s1} * @var{s2} * @dots{} * @var{sk}}
 ## @end ifnottex
-## and each row this matrix is then treated separately. Note that this
+## and each row of this matrix is then treated separately. Note that this
 ## is exactly the opposite treatment than @code{interp1} and is done
 ## for compatibility.
-##
-## Called with a third input argument, @code{spline} evaluates the 
-## piece-wise spline at the points @var{xi}. There is an equivalence
-## between @code{ppval (spline (@var{x}, @var{y}), @var{xi})} and
-## @code{spline (@var{x}, @var{y}, @var{xi})}.
-##
 ## @seealso{ppval, mkpp, unmkpp}
 ## @end deftypefn
 
 ## This code is based on csape.m from octave-forge, but has been
 ## modified to use the sparse solver code in octave that itself allows
 ## special casing of tri-diagonal matrices, modified for NDArrays and
 ## for the treatment of vectors y 2 elements longer than x as complete
 ## splines.
