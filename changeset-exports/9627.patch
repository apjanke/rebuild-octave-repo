# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1252409979 -7200
#      Tue Sep 08 13:39:39 2009 +0200
# Node ID 5bcfa0b346e83b4d855355102570bb7f0be2ccf7
# Parent  bccba774af8b78e3e8624fcf0e568c5b6ec7936f
fix extra outputs in fminunc

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2009-09-08  Jaroslav Hajek  <highegg@gmail.com>
+
+	* optimization/fminunc.m: Correct extra output params handling.
+
 2009-09-06  Jaroslav Hajek  <highegg@gmail.com>
 
 	* optimization/fsolve.m: Update initial factor.
 	* optimization/fminunc.m: Update initial factor.
 
 2009-09-06  Jaroslav Hajek  <highegg@gmail.com>
 
 	* general/arrayfun.m: Fix test.
diff --git a/scripts/optimization/fminunc.m b/scripts/optimization/fminunc.m
--- a/scripts/optimization/fminunc.m
+++ b/scripts/optimization/fminunc.m
@@ -15,17 +15,17 @@
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 ##
 ## Author: Jaroslav Hajek <highegg@gmail.com>
 
 ## -*- texinfo -*-
 ## @deftypefn{Function File} {} fminunc (@var{fcn}, @var{x0}, @var{options})
-## @deftypefnx{Function File} {[@var{x}, @var{fvec}, @var{info}, @var{output}, @var{fjac}]} = fminunc (@var{fcn}, @dots{})
+## @deftypefnx{Function File} {[@var{x}, @var{fvec}, @var{info}, @var{output}, @var{grad}, @var{hess}]} = fminunc (@var{fcn}, @dots{})
 ## Solve a unconstrained optimization problem defined by the function @var{fcn}.
 ## @var{fcn} should accepts a vector (array) defining the unknown variables,
 ## and return the objective function value, optionally with gradient.
 ## In other words, this function attempts to determine a vector @var{x} such 
 ## that @code{@var{fcn} (@var{x})} is a local minimum.
 ## @var{x0} determines a starting guess. The shape of @var{x0} is preserved
 ## in all calls to @var{fcn}, but otherwise it is treated as a column vector.
 ## @var{options} is a structure specifying additional options.
@@ -55,16 +55,20 @@
 ## @item 3
 ## Last relative decrease in func value was less than TolF. 
 ## @item 0
 ## Iteration limit exceeded.
 ## @item -3
 ## The trust region radius became excessively small. 
 ## @end table
 ##
+## Optionally, fminunc can also yield a structure with convergence statistics
+## (@var{output}), the output gradient (@var{grad}) and approximate hessian
+## (@var{hess}).
+##
 ## Note: If you only have a single nonlinear equation of one variable, using 
 ## @code{fminbnd} is usually a much better idea.
 ## @seealso{fminbnd, optimset}
 ## @end deftypefn
 
 ## PKG_ADD: __all_opts__ ("fminunc");
 
 function [x, fval, info, output, grad, hess] = fminunc (fcn, x0, options = struct ())
@@ -303,16 +307,20 @@ function [x, fval, info, output, grad, h
 
   ## Restore original shapes.
   x = reshape (x, xsiz);
 
   output.iterations = niter;
   output.successful = nsuciter;
   output.funcCount = nfev;
 
+  if (nargout > 5)
+    hess = hesr'*hesr;
+  endif
+
 endfunction
 
 ## An assistant function that evaluates a function handle and checks for
 ## bad results.
 function [fx, gx] = guarded_eval (fun, x)
   if (nargout > 1)
     [fx, gx] = fun (x);
   else
