# HG changeset patch
# User jwe
# Date 1037120780 0
#      Tue Nov 12 17:06:20 2002 +0000
# Node ID 8b1da831dfeb4df397efb10988b20c699d2acb34
# Parent  d5667eaf8859bd11fcb117c4a48d4c11b9d55298
[project @ 2002-11-12 17:06:19 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2002-11-12  Joseph P. Skudlarek  <jskud@jskud.com>
+
+	* input.cc (match_sans_spaces_semi): Rename from match_sans_spaces.
+	Ignore trailing semicolons too.  Change all callers.
+
 2002-11-11  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* octave.gperf: Allow "persistent" as a synonym for static.
 
 	* defun-int.h (DEFUN_MAPPER_INTERNAL): Don't forget doc string
 	when creating octave_mapper object.
 
 	* sysdep.cc (BSD_init): Avoid failure if FP_X_DNML is not defined.
diff --git a/src/input.cc b/src/input.cc
--- a/src/input.cc
+++ b/src/input.cc
@@ -495,23 +495,23 @@ initialize_command_input (void)
   command_editor::set_completer_word_break_characters (s);
 
   command_editor::set_basic_quote_characters ("\"");
 
   command_editor::set_completion_function (generate_completion);
 }
 
 static bool
-match_sans_spaces (const std::string& standard, const std::string& test)
+match_sans_spaces_semi (const std::string& standard, const std::string& test)
 {
   size_t beg = test.find_first_not_of (" \t");
 
   if (beg != NPOS)
     {
-      size_t end = test.find_last_not_of (" \t");
+      size_t end = test.find_last_not_of ("; \t");
 
       size_t len = end == NPOS ? NPOS : end - beg + 1;
 
       return (test.substr (beg, len) == standard);
     }
 
   return false;
 }
@@ -566,34 +566,34 @@ get_user_input (const octave_value_list&
 		return "";
 	      else
 		return Matrix ();
 	    }
 	}
 
       if (debug)
 	{
-	  if (match_sans_spaces ("exit", input_buf)
-	      || match_sans_spaces ("quit", input_buf)
-	      || match_sans_spaces ("return", input_buf)
-	      || match_sans_spaces ("dbg_cont", input_buf))
+	  if (match_sans_spaces_semi ("exit", input_buf)
+	      || match_sans_spaces_semi ("quit", input_buf)
+	      || match_sans_spaces_semi ("return", input_buf)
+	      || match_sans_spaces_semi ("dbg_cont", input_buf))
 	    {
 	      return retval;
 	    }
-	  else if (match_sans_spaces ("dbg_step", input_buf))
+	  else if (match_sans_spaces_semi ("dbg_step", input_buf))
 	    {
 	      tree::break_next = true;
 
 	      tree::last_line = 0;
 
 	      tree::break_function = curr_function;
 
 	      return retval;
 	    }
-	  else if (match_sans_spaces ("dbg_next", input_buf))
+	  else if (match_sans_spaces_semi ("dbg_next", input_buf))
 	    {
 	      tree::break_next = true;
 
 	      tree::last_line = curr_statement->line ();
 
 	      tree::break_function = curr_function;
 
 	      return retval;
