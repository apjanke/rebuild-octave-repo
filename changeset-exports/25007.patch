# HG changeset patch
# User Mike Miller <mtmiller@octave.org>
# Date 1522102567 25200
#      Mon Mar 26 15:16:07 2018 -0700
# Branch stable
# Node ID 2f695cf8af6f90b9be2ee3938c49d01817b880a9
# Parent  ddb4bc5fccaa10942b859c34d838d5e57241da09
test: reduce relative file names in test suite output

* __run_test_suite__.m: Reduce relative file names to eliminate build directory
name and "scripts" prefix from file names in test suite output.

diff --git a/scripts/testfun/__run_test_suite__.m b/scripts/testfun/__run_test_suite__.m
--- a/scripts/testfun/__run_test_suite__.m
+++ b/scripts/testfun/__run_test_suite__.m
@@ -226,18 +226,17 @@ function [pass, fail, xfail, xbug, skip,
       f = fullfile (d, nm);
       if ((length (nm) > 2 && strcmpi (nm((end-1):end), ".m"))
           || (length (nm) > 4
               && (   strcmpi (nm((end-3):end), "-tst")
                   || strcmpi (nm((end-3):end), ".tst"))))
         p = n = xf = xb = 0;
         ## Only run if contains %!test, %!assert, %!error, %!fail, or %!warning
         if (has_tests (f))
-          tmp = strrep (f, [topsrcdir, filesep], "");
-          tmp = strrep (tmp, [topbuilddir, filesep], "");
+          tmp = reduce_test_file_name (f, topbuilddir, topsrcdir);
           print_test_file_name (tmp);
           [p, n, xf, xb, sk, rtsk, rgrs] = test (f, "quiet", fid);
           print_pass_fail (p, n, xf, xb, sk, rtsk, rgrs);
           dp += p;
           dn += n;
           dxf += xf;
           dxb += xb;
           dsk += sk;
@@ -285,16 +284,35 @@ function print_pass_fail (p, n, xf, xb, 
     if (xf > 0)
       printf ("\n%71s %3d", "(expected failure) XFAIL", xf);
     endif
   endif
   puts ("\n");
 
 endfunction
 
+function retval = reduce_test_file_name (nm, builddir, srcdir)
+
+  ## Reduce the given absolute file name to a relative path by removing one
+  ## of the likely root directory prefixes.
+
+  prefix = { builddir, fullfile(builddir, "scripts"), ...
+             srcdir, fullfile(srcdir, "scripts") };
+
+  retval = nm;
+
+  for i = 1:length (prefix)
+    tmp = strrep (nm, [prefix{i}, filesep], "");
+    if (length (tmp) < length (retval))
+      retval = tmp;
+    endif
+  endfor
+
+endfunction
+
 function retval = has_functions (f)
 
   n = length (f);
   if (n > 3 && strcmpi (f((end-2):end), ".cc"))
     fid = fopen (f);
     if (fid < 0)
       error ("__run_test_suite__: fopen failed: %s", f);
     endif
