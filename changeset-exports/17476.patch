# HG changeset patch
# User Rik <rik@octave.org>
# Date 1380120538 25200
#      Wed Sep 25 07:48:58 2013 -0700
# Node ID f0f4b524b6d06ae7d37cec219b650c442c3b623c
# Parent  25f6e31bbce96dbea593566999cfdd1a5f34ec69
maint: Correct indentation for several plot routines.

* scripts/plot/ellipsoid.m, scripts/plot/rose.m, scripts/plot/sphere.m,
scripts/plot/surfnorm.m: maint: Correct indentation for several plot routines.

diff --git a/scripts/plot/ellipsoid.m b/scripts/plot/ellipsoid.m
--- a/scripts/plot/ellipsoid.m
+++ b/scripts/plot/ellipsoid.m
@@ -69,20 +69,20 @@ function [xx, yy, zz] = ellipsoid (varar
   y = yr .* cos (phi) .* sin (theta) + yc;
   z = zr .* sin (phi) + zc;
 
   if (nargout > 0)
     xx = x;
     yy = y;
     zz = z;
   else
-  oldfig = [];
-  if (! isempty (hax))
-    oldfig = get (0, "currentfigure");
-  endif
+    oldfig = [];
+    if (! isempty (hax))
+      oldfig = get (0, "currentfigure");
+    endif
     unwind_protect
       hax = newplot (hax);
     
       surf (x, y, z);
     unwind_protect_cleanup
       if (! isempty (oldfig))
         set (0, "currentfigure", oldfig);
       endif
diff --git a/scripts/plot/rose.m b/scripts/plot/rose.m
--- a/scripts/plot/rose.m
+++ b/scripts/plot/rose.m
@@ -85,20 +85,20 @@ function [thout, rout] = rose (varargin)
   x1 = xx(1:end-1) + diff (xx, 1) / 2;
   x1 = [x1 ; x1; x1; x1](:);
   th = [0; 0; x1; 2*pi ; 2*pi];
   r = zeros (4 * rows (nn), columns (nn));
   r(2:4:end, :) = nn;
   r(3:4:end, :) = nn;
 
   if (nargout < 2)
-  oldfig = [];
-  if (! isempty (hax))
-    oldfig = get (0, "currentfigure");
-  endif
+    oldfig = [];
+    if (! isempty (hax))
+      oldfig = get (0, "currentfigure");
+    endif
     unwind_protect
       hax = newplot (hax);
       htmp = polar (th, r);
     unwind_protect_cleanup
       if (! isempty (oldfig))
         set (0, "currentfigure", oldfig);
       endif
     end_unwind_protect
diff --git a/scripts/plot/sphere.m b/scripts/plot/sphere.m
--- a/scripts/plot/sphere.m
+++ b/scripts/plot/sphere.m
@@ -66,20 +66,20 @@ function [xx, yy, zz] = sphere (varargin
   y = cos (phi) .* sin (theta);
   z = sin (phi);
 
   if (nargout > 0)
     xx = x;
     yy = y;
     zz = z;
   else
-  oldfig = [];
-  if (! isempty (hax))
-    oldfig = get (0, "currentfigure");
-  endif
+    oldfig = [];
+    if (! isempty (hax))
+      oldfig = get (0, "currentfigure");
+    endif
     unwind_protect
       hax = newplot (hax);
     
       surf (x, y, z);
     unwind_protect_cleanup
       if (! isempty (oldfig))
         set (0, "currentfigure", oldfig);
       endif
diff --git a/scripts/plot/surfnorm.m b/scripts/plot/surfnorm.m
--- a/scripts/plot/surfnorm.m
+++ b/scripts/plot/surfnorm.m
@@ -109,40 +109,40 @@ function [Nx, Ny, Nz] = surfnorm (vararg
 
   ## Normalize the normal vectors
   len = sqrt (nx.^2 + ny.^2 + nz.^2);
   nx = nx ./ len;
   ny = ny ./ len;
   nz = nz ./ len;
 
   if (nargout == 0)
-  oldfig = [];
-  if (! isempty (hax))
-    oldfig = get (0, "currentfigure");
-  endif
-   unwind_protect
-     hax = newplot (hax);
-     
-     surf (x, y, z, varargin{ioff:end});
-     old_hold_state = get (hax, "nextplot");
-     unwind_protect
-       set (hax, "nextplot", "add");
-       plot3 ([x(:)'; x(:).' + nx(:).' ; NaN(size(x(:).'))](:),
-              [y(:)'; y(:).' + ny(:).' ; NaN(size(y(:).'))](:),
-              [z(:)'; z(:).' + nz(:).' ; NaN(size(z(:).'))](:),
-              varargin{ioff:end});
-     unwind_protect_cleanup
-       set (hax, "nextplot", old_hold_state);
-     end_unwind_protect
-     
-   unwind_protect_cleanup
-     if (! isempty (oldfig))
-       set (0, "currentfigure", oldfig);
-     endif
-   end_unwind_protect
+    oldfig = [];
+    if (! isempty (hax))
+      oldfig = get (0, "currentfigure");
+    endif
+    unwind_protect
+      hax = newplot (hax);
+      
+      surf (x, y, z, varargin{ioff:end});
+      old_hold_state = get (hax, "nextplot");
+      unwind_protect
+        set (hax, "nextplot", "add");
+        plot3 ([x(:)'; x(:).' + nx(:).' ; NaN(size(x(:).'))](:),
+               [y(:)'; y(:).' + ny(:).' ; NaN(size(y(:).'))](:),
+               [z(:)'; z(:).' + nz(:).' ; NaN(size(z(:).'))](:),
+               varargin{ioff:end});
+      unwind_protect_cleanup
+        set (hax, "nextplot", old_hold_state);
+      end_unwind_protect
+      
+    unwind_protect_cleanup
+      if (! isempty (oldfig))
+        set (0, "currentfigure", oldfig);
+      endif
+    end_unwind_protect
   else
     Nx = nx;
     Ny = ny;
     Nz = nz;
   endif
 
 endfunction
 
