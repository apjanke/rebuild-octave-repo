# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1464881470 14400
#      Thu Jun 02 11:31:10 2016 -0400
# Node ID 9c3a3d252e80a6a081f974c11a8051fc18a6a2c3
# Parent  25c8d554af3253c778b92eed6d19b02f6c619cb9
* lo-mappers.h (arg, conj, imag, real): Delete double and float
overloads in octave::math namespace.
(conj): In deprecated functions that accept real arguments and return
real values, simply return argument.

diff --git a/liboctave/numeric/lo-mappers.h b/liboctave/numeric/lo-mappers.h
--- a/liboctave/numeric/lo-mappers.h
+++ b/liboctave/numeric/lo-mappers.h
@@ -55,34 +55,24 @@ namespace octave
 
     using std::asin;
 
     extern OCTAVE_API Complex atan (const Complex& x);
     extern OCTAVE_API FloatComplex atan (const FloatComplex& x);
 
     using std::atan;
 
-    inline double arg (double x) { return atan2 (0.0, x); }
-    inline float arg (float x) { return atan2f (0.0f, x); }
+    // C++ now provides versions of the following funtions for
+    // arguments of type std::complex<T> and T so we no longer need to
+    // provide our own wrappers for real-valued arguments.  Import
+    // them to the octave::math namespace for convenience.
 
     using std::arg;
-
-    inline double conj (double x) { return x; }
-    inline float conj (float x) { return x; }
-
     using std::conj;
-
-    inline double imag (double) { return 0.0; }
-    inline float imag (float) { return 0.0f; }
-
     using std::imag;
-
-    inline double real (double x) { return x; }
-    inline float real (float x) { return x; }
-
     using std::real;
 
     extern OCTAVE_API double log2 (double x);
     extern OCTAVE_API float log2 (float x);
 
     extern OCTAVE_API Complex log2 (const Complex& x);
     extern OCTAVE_API FloatComplex log2 (const FloatComplex& x);
 
@@ -476,19 +466,19 @@ OCTAVE_DEPRECATED ("use 'octave::math::a
 inline FloatComplex atan (const FloatComplex& x) { return octave::math::atan (x); }
 
 OCTAVE_DEPRECATED ("use 'octave::math::arg' instead")
 inline double arg (double x) { return octave::math::arg (x); }
 OCTAVE_DEPRECATED ("use 'octave::math::arg' instead")
 inline float arg (float x) { return octave::math::arg (x); }
 
 OCTAVE_DEPRECATED ("use 'octave::math::conj' instead")
-inline double conj (double x) { return octave::math::conj (x); }
+inline double conj (double x) { return x; }
 OCTAVE_DEPRECATED ("use 'octave::math::conj' instead")
-inline float conj (float x) { return octave::math::conj (x); }
+inline float conj (float x) { return x; }
 
 OCTAVE_DEPRECATED ("use 'octave::math::imag' instead")
 inline double imag (double x) { return octave::math::imag (x); }
 OCTAVE_DEPRECATED ("use 'octave::math::imag' instead")
 inline float imag (float x) { return octave::math::imag (x); }
 
 OCTAVE_DEPRECATED ("use 'octave::math::real' instead")
 inline double real (double x) { return octave::math::real (x); }
