# HG changeset patch
# User jwe
# Date 1201726804 0
#      Wed Jan 30 21:00:04 2008 +0000
# Branch release-3-0-x
# Node ID bc19cf26ff0bf72127e718a9c7f0930c8e4df8a4
# Parent  67554057853202915b1487b61f5e965f189a5713
[3-0-0-branch @ 2008-01-30 21:00:04 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,10 +1,13 @@
 2008-01-30  John W. Eaton  <jwe@octave.org>
 
+	* miscellaneous/edit.m: Use "## Created: DATE" instead of "initial
+	revision".
+
 	* plot/Makefile.in (SOURCES): Include __plt2sv__.m and
 	__plt2vs__.m in the list.
 
 	* miscellaneous/tempdir.m: Append filesep to name for
 	compatibility.  Warn if not a directory or directory does not
 	exist.
 
 	* strings/deblank.m: Improve compatibility.
diff --git a/scripts/miscellaneous/edit.m b/scripts/miscellaneous/edit.m
--- a/scripts/miscellaneous/edit.m
+++ b/scripts/miscellaneous/edit.m
@@ -258,18 +258,17 @@ function ret = edit (file, state)
       FUNCTION.EMAIL = " ";
     else
       FUNCTION.EMAIL = strcat ("<", default_user(0), "@", host, ">");
     endif
   endif
 
   ## Fill in the revision string.
   now = localtime (time);
-  revs = strcat (strftime ("%Y-%m-%d", now), " ", FUNCTION.AUTHOR, " ",
-		 FUNCTION.EMAIL, "\n* Initial revision");
+  revs = strcat ("Created: ", strftime ("%Y-%m-%d", now));
 
   ## Fill in the copyright string.
   copyright = strcat (strftime ("Copyright (C) %Y ", now), FUNCTION.AUTHOR);
 
   ## Fill in the author tag field.
   author = strcat ("Author: ", FUNCTION.AUTHOR, " ", FUNCTION.EMAIL);
 
   ## Fill in the header.
@@ -286,17 +285,17 @@ This program is distributed in the hope 
 but WITHOUT ANY WARRANTY; without even the implied warranty of\n\
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\
 GNU General Public License for more details.\n\
 \n\
 You should have received a copy of the GNU General Public License\n\
 along with this program; if not, write to the Free Software\n\
 Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\
 ");
-      tail = strcat (author, "\n\n", revs);
+      tail = strcat (author, "\n", revs);
 
     case "BSD"
       head = strcat (copyright, "\n\n", "\
 This program is free software; redistribution and use in source and\n\
 binary forms, with or without modification, are permitted provided that\n\
 the following conditions are met:\n\
 \n\
    1.Redistributions of source code must retain the above copyright\n\
@@ -312,28 +311,27 @@ ARE DISCLAIMED.  IN NO EVENT SHALL THE A
 FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\
 DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n\
 OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n\
 HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n\
 LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n\
 OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n\
 SUCH DAMAGE.\
 ");
-      tail = strcat (author, "\n\n", revs);
+      tail = strcat (author, "\n", revs);
 
     case "PD"
       head = "";
-      tail = strcat (author, "\n\n",
-		     "This program is granted to the public domain\n\n",
-		     revs);
+      tail = strcat (author, "\n", revs, "\n\n",
+		     "This program is granted to the public domain.");
 
     otherwise
       head = "";
       tail = strcat (copyright, "\n\n", FUNCTION.LICENSE, "\n",
-		     author, "\n\n", revs);
+		     author, "\n", revs);
   endswitch
 
   ## Generate the function template.
   exists = exist (name);
   switch (ext)
     case {"cc", "C", "cpp"}
       if (isempty (head))
 	comment = strcat ("/*\n", tail, "\n\n*/\n\n");
@@ -396,30 +394,33 @@ function ret = default_home ()
       ret = ret{1};
     else
       ret = "";
     endif
   endif
 
 endfunction
 
-## default_user (form)
-## Returns the name associated with the current user ID.
+## Return the name associated with the current user ID.
 ##
-## If form==1 return the full name.  This will be the
-## default author.  If form==0 return the login name.
+## If LONG_FORM is 1, return the full name.  This will be the
+## default author.  Otherwise return the login name.
 ## login@host will be the default email address.
 
 function ret = default_user (long_form)
 
   ent = getpwuid (getuid);
   if (! isstruct (ent))
     ret = getenv ("USER");
     if (isempty (ret))
       ret = getenv ("USERNAME");
     endif
   elseif (long_form)
     ret = ent.gecos;
+    pos = strfind (ret, ",");
+    if (! isempty (pos))
+      ret = ret(1:pos-1);
+    endif
   else
     ret = ent.name;
   endif
 
 endfunction
