# HG changeset patch
# User jwe
# Date 1160761341 0
#      Fri Oct 13 17:42:21 2006 +0000
# Node ID 435294ca4ee674a4f30e72e5baee09df74ec552f
# Parent  04c2ad6d1679d9a817ca5693b893d8a5444d3429
[project @ 2006-10-13 17:42:21 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2006-10-13  Etienne Grossmann  <etienne@tyzx.com>
+
+	* general/ind2sub.m, general/sub2ind.m: Handle empty indices.
+
 2006-10-12  Quentin Spencer  <qspencer@ieee.org>
 
 	* plot/sombrero.m: Only plot if nargout == 0.  Otherwise, return data.
 
 2006-10-10  John W. Eaton  <jwe@octave.org>
 
 	* miscellaneous/copyfile.m, miscellaneous/movefile.m: New functions.
 
diff --git a/scripts/general/ind2sub.m b/scripts/general/ind2sub.m
--- a/scripts/general/ind2sub.m
+++ b/scripts/general/ind2sub.m
@@ -24,20 +24,20 @@
 ## @end deftypefn
 
 ## Author: Paul Kienzle <pkienzle@kienzle.powernet.co.uk>
 ## Adapted-by: jwe
 
 function varargout = ind2sub (dims, ind)
 
   if (nargin == 2)
-    if (isvector (dims) && round (dims) == dims)
-      if (isnumeric (ind) && round (ind) == ind)
+    if (isvector (dims) && all (round (dims) == dims))
+      if (isnumeric (ind) && all (round (ind) == ind))
 	ntot = prod (dims);
-	if (ind > 0 & ind <= ntot)
+	if (all (ind > 0 & ind <= ntot))
 	  nd = length (dims);
 	  if (nargout > 0)
 	    vlen = nargout;
 	  else
 	    vlen = 1;
 	  endif
 	  if (nd > vlen);
 	    dims(vlen) = prod (dims(vlen:nd));
diff --git a/scripts/general/sub2ind.m b/scripts/general/sub2ind.m
--- a/scripts/general/sub2ind.m
+++ b/scripts/general/sub2ind.m
@@ -25,34 +25,34 @@
 ## @end deftypefn
 
 ## Author: Paul Kienzle <pkienzle@kienzle.powernet.co.uk>
 ## Adapted-by: jwe
 
 function ind = sub2ind (dims, varargin)
 
   if (nargin > 1)
-    if (isvector (dims) && round (dims) == dims)
+    if (isvector (dims) && all (round (dims) == dims))
       nd = length (dims);
       vlen = length (varargin);
       dims(vlen) = prod (dims(vlen:nd));
       dims(vlen+1:nd) = [];
       scale = cumprod (dims(:));
       for i = 1:vlen
 	arg = varargin{i};
-	if (isnumeric (arg) && round (arg) == arg)
+	if (isnumeric (arg) && all (round (arg) == arg))
 	  if (i == 1)
-	    if (arg > 0 & arg <= dims(i))
+	    if (all (arg > 0 & arg <= dims(i)))
 	      ind = first_arg = arg;
 	    else
 	      error ("sub2ind: index out of range");
 	    endif
 	  else
             if (prod (size (first_arg)) == prod (size (arg)))
-	      if ((i > nd && arg == 1) || (arg > 0 & arg <= dims(i)))
+	      if ((i > nd && arg == 1) || all (arg > 0 & arg <= dims(i)))
 		ind(:) += scale(i-1) * (arg(:) - 1);
 	      else
 		error ("sub2ind: index out of range");
 	      endif
 	    else
 	      error ("sub2ind: all index arguments must be the same size");
 	    endif
 	  endif
