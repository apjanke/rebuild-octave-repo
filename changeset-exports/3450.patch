# HG changeset patch
# User jwe
# Date 948170635 0
#      Tue Jan 18 04:43:55 2000 +0000
# Node ID 4b61d9e3c73ad64a341344ad586eba59abbc8b56
# Parent  858695b3ed6249603bb9e9e842f7788206d2860e
[project @ 2000-01-18 04:43:54 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -54,16 +54,17 @@ 2000-01-17  John W. Eaton  <jwe@bevo.che
 	* signal/spectral_adf.m: Ditto.
 	* signal/spectral_xdf.m: Ditto.
 	* signal/spencer.m: Ditto.
 	* signal/stft.m: Ditto.
 	* signal/synthesis.m: Ditto.
 	* signal/triangle_lw.m: Ditto.
 	* signal/triangle_sw.m: Ditto.
 	* signal/yulewalker.m: Ditto.
+	* control/util/strappend.m: Ditto.
 
 2000-01-14  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* control/system/__abcddims__.m: Rename from
 	control/system/abcddims.m, change all callers.
 	* control/base/__bodquist__.m: Likewise.
 	* control/base/__freqresp__.m: Likewise.
 	* control/util/__outlist__.m: Likewise.
diff --git a/scripts/control/util/strappend.m b/scripts/control/util/strappend.m
--- a/scripts/control/util/strappend.m
+++ b/scripts/control/util/strappend.m
@@ -11,29 +11,30 @@
 ## ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
-## retval = strappend(strlist,suffix);
-## append string suffix to each string in the list of strings strlist
+## -*- texinfo -*-
+## @deftypefn {Function File} strappend (@var{strlist}, @var{suffix})
+## Append string @var{suffix} to each string in the list @var{strlist}.
+## @end deftypefn
 
 function retval = strappend (strlist, suffix);
 
-  if(nargin != 2 | nargout > 1)
-    usage(" retval = strappend(strlist,suffix)");
-  elseif(!is_signal_list(strlist))
-    strlist
-    error("strlist must be a list of strings (see is_signal_list)");
-  elseif(!(isstr(suffix) & rows(suffix) == 1))
-    suffix
-    error("suffix must be a single string");
+  if (nargin != 2 || nargout > 1)
+    usage ("retval = strappend (strlist, suffix)");
+  elseif (! is_signal_list (strlist))
+    error ("strlist must be a list of strings (see is_signal_list)");
+  elseif (! (isstr (suffix) && rows (suffix) == 1))
+    error ("suffix must be a single string");
   endif
 
-  retval = list();
-  for ii=1:length(strlist)
-    retval(ii) = sprintf("%s%s",nth(strlist,ii),suffix);
+  retval = list ();
+
+  for ii = 1:length (strlist)
+    retval(ii) = sprintf ("%s%s", nth (strlist, ii), suffix);
   endfor
 
 endfunction
