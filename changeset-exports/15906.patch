# HG changeset patch
# User Rik <rik@octave.org>
# Date 1357439958 28800
#      Sat Jan 05 18:39:18 2013 -0800
# Branch stable
# Node ID 1af9fa3d6a0be3f586eeffbe58a62a48f2509141
# Parent  7c469bffc599f7fc3144c0a7a27302b87ab357c3
munge-texi.pl: Strip EOL character(s) in a platform-agnostic way.

* doc/interpreter/munge-texi.pl: Use regex rather than chomp() to
remove EOL characters from line.

diff --git a/doc/interpreter/munge-texi.pl b/doc/interpreter/munge-texi.pl
--- a/doc/interpreter/munge-texi.pl
+++ b/doc/interpreter/munge-texi.pl
@@ -21,17 +21,17 @@ foreach $DOCSTRING_file (@ARGV)
   # Skip comments
   while (defined ($_ = <DOCFH>) and /$comment_line/o) {;}
 
   # Validate DOCSTRING file format
   die "invalid doc file format\n" if (! /$doc_delim/o);
   
   do 
   {
-    chomp;
+    s/\s*$//;   # strip EOL character(s)
     $symbol = substr ($_,1);
     $docstring = extract_docstring ();
     if ($help_text{$symbol})
     {
       warn "ignoring duplicate entry for $symbol\n";
     }
     else
     {
@@ -41,17 +41,17 @@ foreach $DOCSTRING_file (@ARGV)
   } while (! eof);
 
 }
 
 ################################################################################
 # Process .txi to .texi by expanding @DOCSTRING, @EXAMPLEFILE macros
 
 # Add warning header
-print '@c DO NOT EDIT!  Generated automatically by munge-texi.',"\n\n";
+print '@c DO NOT EDIT!  Generated automatically by munge-texi.pl.',"\n\n";
 
 TXI_LINE: while (<STDIN>)
 {
   if (/^\s*\@DOCSTRING\((\S+)\)/)
   {
     $func = $1;
     $docstring = $help_text{$func};
     if (! $docstring)
