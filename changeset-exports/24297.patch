# HG changeset patch
# User Rik <rik@octave.org>
# Date 1511462719 28800
#      Thu Nov 23 10:45:19 2017 -0800
# Node ID 9a1b193ddd01c4057173bfd478a1f5272feb37ee
# Parent  3981e3a11150d8dd5872fb31c874b192273f9045
Recognize docstrings from subfunctions (bug #46008).

* oct-parse.in.yy (base_parser::start_function):
Remove test for '! parsing_subfunctions' so that help_text is added whenever a
function or subfunction is parsed for the first time.

diff --git a/libinterp/parse-tree/oct-parse.in.yy b/libinterp/parse-tree/oct-parse.in.yy
--- a/libinterp/parse-tree/oct-parse.in.yy
+++ b/libinterp/parse-tree/oct-parse.in.yy
@@ -3412,18 +3412,22 @@ namespace octave
              && m_lexer.fcn_file_name == id_name)
       {
         warning ("function '%s' defined within script file '%s'",
                  id_name.c_str (), m_lexer.fcn_file_full_name.c_str ());
       }
 
     fcn->stash_function_name (id_name);
 
-    if (! m_lexer.help_text.empty () && m_curr_fcn_depth == 1
-        && ! m_parsing_subfunctions)
+    // Record help text for functions other than nested functions.
+    // We cannot currently record help for nested functions (bug #46008)
+    // because the doc_string of the outermost function is read first,
+    // whereas this function is called for the innermost function first.
+    // We could have a stack of help_text in lexer.
+    if (! m_lexer.help_text.empty () && m_curr_fcn_depth == 1)
       {
         fcn->document (m_lexer.help_text);
 
         m_lexer.help_text = "";
       }
 
     if (m_lexer.reading_fcn_file && m_curr_fcn_depth == 1
         && ! m_parsing_subfunctions)
