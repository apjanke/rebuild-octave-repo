# HG changeset patch
# User John Donoghue <john.donoghue@ieee.org>
# Date 1466165179 14400
#      Fri Jun 17 08:06:19 2016 -0400
# Node ID d6370831d37f9d587381c52f43c76ad2c69db28d
# Parent  66f3c4e81721643bb66947c39181e38031f5dbbb
Set Qt Figure window modal/normal state based on WindowStyle (Bug #48160)

* libgui/graphics/Figure.cc
  (Figure::Figure): call update for ID_WINDOWSTYLE property
  (Figure::update): process ID_WINDOWSTYLE to set figure window modal, normal modality

* doc/interpreter/genpropdoc.m: update doc text for windowstyle property

diff --git a/doc/interpreter/genpropdoc.m b/doc/interpreter/genpropdoc.m
--- a/doc/interpreter/genpropdoc.m
+++ b/doc/interpreter/genpropdoc.m
@@ -489,17 +489,27 @@ released respectively.  When these callb
 
       case "windowkeyreleasefcn"
         s.valid = valid_fcn;
 
       case "windowscrollwheelfcn"
         s.valid = valid_fcn;
 
       case "windowstyle"
-        s.doc = doc_unused;
+        s.doc = "The window style of a figure.  One of the following values:\n\
+@table @code\n\
+@item normal\n\
+Set the window style as non modal.\n\
+@item modal\n\
+Set the window as modal so that it will stay on top of all normal figures.\n\
+@item docked\n\
+Setting the window style as docked currently does not dock the window.\n\
+@end table\n\
+\n\
+Changing modes of a visible figure may cause the figure to close and reopen.";
 
     endswitch
 
   ## Axes properties
   elseif (strcmp (objname, "axes"))
     switch (field)
       ## Overridden shared properties
       case "clipping"
diff --git a/libgui/graphics/Figure.cc b/libgui/graphics/Figure.cc
--- a/libgui/graphics/Figure.cc
+++ b/libgui/graphics/Figure.cc
@@ -171,16 +171,19 @@ Figure::Figure (const graphics_object& g
   // Figure title
   update (figure::properties::ID_NUMBERTITLE);
 
   // Decide what keyboard events we listen to
   m_container->canvas (m_handle)->setEventMask (0);
   update (figure::properties::ID_KEYPRESSFCN);
   update (figure::properties::ID_KEYRELEASEFCN);
 
+  // modal style
+  update (figure::properties::ID_WINDOWSTYLE);
+
   // Visibility
   update (figure::properties::ID_VISIBLE);
 
 
   connect (this, SIGNAL (asyncUpdate (void)),
            this, SLOT (updateContainer (void)));
 
   win->addReceiver (this);
@@ -474,16 +477,34 @@ Figure::update (int pId)
 
     case figure::properties::ID_KEYRELEASEFCN:
       if (fp.get_keyreleasefcn ().is_empty ())
         m_container->canvas (m_handle)->clearEventMask (Canvas::KeyRelease);
       else
         m_container->canvas (m_handle)->addEventMask (Canvas::KeyRelease);
       break;
 
+    case figure::properties::ID_WINDOWSTYLE:
+      if (fp.windowstyle_is ("modal"))
+        {
+          bool is_visible = win->isVisible ();
+
+          // if window is already visible, need to hide and reshow it in order to
+          // make it use the modal settings
+          if (is_visible)
+            win->setVisible (false);
+
+          win->setWindowModality (Qt::ApplicationModal);
+          win->setVisible (is_visible);
+        }
+      else
+        win->setWindowModality (Qt::NonModal);
+
+      break;
+
     default:
       break;
     }
 
   m_blockUpdates = false;
 }
 
 void
