# HG changeset patch
# User Kai T. Ohlhus <k.ohlhus@gmail.com>
# Date 1551192419 -3600
#      Tue Feb 26 15:46:59 2019 +0100
# Node ID 11bf2c81546985710af3b352d277b6166dcda70f
# Parent  14815cb62fbe85f210a8f1880c6cad2df3ffa518
# Parent  41efc737ceb915f1b49b20aff5ac49274988e7ec
maint: Merge stable to default.

diff --git a/doc/interpreter/octave.texi b/doc/interpreter/octave.texi
--- a/doc/interpreter/octave.texi
+++ b/doc/interpreter/octave.texi
@@ -61,17 +61,17 @@
 @c The version.texi file doesn't include a chapter, so it must not be included
 @c if you want to run the Emacs function texinfo-multiple-files-update.
 @include version-octave.texi
 
 @settitle GNU Octave (version @value{VERSION})
 
 @ifnottex
 
-Copyright @copyright{} 1996-2018 John W. Eaton.
+Copyright @copyright{} 1996-2019 John W. Eaton.
 
 Permission is granted to make and distribute verbatim copies of
 this manual provided the copyright notice and this permission notice
 are preserved on all copies.
 
 @ignore
 Permission is granted to process this file through Tex and print the
 results, provided the printed document carries copying permission
diff --git a/scripts/linear-algebra/ordeig.m b/scripts/linear-algebra/ordeig.m
--- a/scripts/linear-algebra/ordeig.m
+++ b/scripts/linear-algebra/ordeig.m
@@ -94,20 +94,24 @@ function lambda = ordeig (A, B)
         lambda(i) = 2*c / (-b + sqrt (b^2 - 4*a*c));
       endif
     endif
     i += 1;
   endwhile
 
 endfunction
 
-# Checks whether a matrix is quasi-triangular
+## Check whether a matrix is quasi-triangular
 function retval = isquasitri (A)
-  v = diag (A, -1) != 0;
-  retval = all (tril (A, -2)(:) == 0) && all (v(1:end-1) + v(2:end) < 2);
+  if (length (A) <= 2)
+    retval = true;
+  else
+    v = diag (A, -1) != 0;
+    retval = (all (tril (A, -2)(:) == 0) && all (v(1:end-1) + v(2:end) < 2));
+  endif
 endfunction
 
 
 %!test
 %! A = toeplitz ([0, 1, 0, 0], [0, -1, 0, 0]);
 %! T = schur (A);
 %! lambda = ordeig (T);
 %! assert (lambda, [1.61803i; -1.61803i; 0.61803i; -0.61803i], 1e-4);
@@ -119,16 +123,21 @@ endfunction
 %! assert (isreal (AA) && isreal (BB));
 %! lambda = ordeig (AA, BB);
 %! assert (lambda, [0.5+0.86603i; 0.5-0.86603i; i; -i], 1e-4);
 %! [AA, BB] = qz (complex (A), complex (B));
 %! assert (iscomplex (AA) && iscomplex (BB));
 %! lambda = ordeig (AA, BB);
 %! assert (lambda, diag (AA) ./ diag (BB));
 
+## Check trivial 1x1 case
+%!test <*55779>
+%! lambda = ordeig ([6], [2]);
+%! assert (lambda, 3);
+
 ## Test input validation
 %!error ordeig ()
 %!error ordeig (1,2,3)
 %!error <A must be a square matrix> ordeig ('a')
 %!error <A must be a square matrix> ordeig ([1, 2, 3])
 %!error <A must be quasi-triangular> ordeig (magic (3))
 %!error <A must be upper-triangular> ordeig ([1, 0; i, 1])
 %!error <B must be a square matrix> ordeig (1, 'a')
