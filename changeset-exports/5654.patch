# HG changeset patch
# User jwe
# Date 1141931093 0
#      Thu Mar 09 19:04:53 2006 +0000
# Node ID 6aae52010e3bd76c67faf3b4929aae1e2b6b4689
# Parent  ab9a339fcec82ab85b5a51a0cbf2a7a5c3b44e55
[project @ 2006-03-09 19:04:53 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -258,17 +258,17 @@ 2005-11-23  William Poetra Yoga Hadisoes
 2005-11-29  John W. Eaton  <jwe@octave.org>
 
 	* miscellaneous/ver.m: Use new uname built-in function instead of
 	calling system.  Only append octave_forge_string if
 	OCTAVE_FORGE_VERSION exists.  Use puts instead of disp.
 	Call license instead of hard-coding license info here.
 
 	* miscellaneous/license.m: Use persistent instead of global for
-	__octave_licenses__.  Use puts instad of disp.
+	__octave_licenses__.  Use puts instead of disp.
 	Use getuid and getpwuid instead of calling unix ("id -un").
 	If nargout = 1, return license info instead of printing usage message.
 
 2005-11-29  William Poetra Yoga Hadisoeseno  <williampoetra@gmail.com>
 
 	* miscellaneous/ver.m: New file.
 	* miscellaneous/license.m: New file.
 
@@ -713,17 +713,17 @@ 2005-03-28  Dmitri A. Sergatskov  <daser
 
 	* plot/__axis_label__.m, plot/axis.m, plot/bottom_title.m,
 	plot/contour.m, plot/errorbar.m, plot/figure.m, plot/grid.m,
 	plot/loglogerr.m, plot/loglog.m, plot/mesh.m, plot/mplot.m,
 	plot/multiplot.m, plot/oneplot.m, plot/plot_border.m, plot/plot.m,
 	plot/polar.m, plot/semilogxerr.m, plot/semilogx.m,
 	plot/semilogyerr.m, plot/semilogy.m, plot/shg.m, plot/subplot.m,
 	plot/subwindow.m, plot/title.m, plot/top_title.m:
-	Use __gnuplot_raw__ instad of __gnuplot_set__.
+	Use __gnuplot_raw__ instead of __gnuplot_set__.
 
 	* plot/replot.m: Use __gnuplot_replot__, not __greplot__.
 
 2005-03-24  John W. Eaton  <jwe@octave.org>
 
 	* optimization/glpkmex.m: Texinfoize Doc string.
 	* optimization/glpk.m: Likewise.
 	Allow VARTYPE and CTYPE to be row or column vectors of characters
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,22 @@
+2006-03-09  John W. Eaton  <jwe@octave.org>
+
+	* Makefile.in (DIST_SRC): Include octave.cc here.
+	(DISTFILES, DEP_5): Not here.
+
+	* octave.cc (F__version_info__): New function.
+	(initialize_version_info): New function.
+	(octave_main): Call initialize_version_info just before reading
+	init files.
+
+	* version.h (OCTAVE_RELEASE_DATE): New macro.
+
+	* ov-fcn-handle.h (octave_fcn_handle::dims): New function.
+
 2006-03-08  John W. Eaton  <jwe@octave.org>
 
 	* oct-stream.cc (octave_stream::stream_ok): Move definition here,
 	from oct-stream.h.  New arg, warn.  If warn is true and stream is
 	invalid, print warning.
 	(octave_stream::error): Always avoid warning message from
 	stream_ok.  Return "invalid stream object" if stream is not ok.
 
diff --git a/src/Makefile.in b/src/Makefile.in
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -162,18 +162,18 @@ PT_SRC := pt.cc pt-arg-list.cc pt-assign
 
 DIST_SRC := Cell.cc bitfcns.cc c-file-ptr-stream.cc comment-list.cc \
 	cutils.c data.cc debug.cc defaults.cc defun.cc dirfns.cc \
 	dynamic-ld.cc error.cc file-io.cc fn-cache.cc gripes.cc \
 	help.cc input.cc lex.l load-save.cc ls-hdf5.cc \
 	ls-mat-ascii.cc ls-mat4.cc ls-mat5.cc ls-oct-ascii.cc \
 	ls-oct-binary.cc ls-utils.cc main.c mappers.cc matherr.c \
 	oct-fstrm.cc oct-hist.cc oct-iostrm.cc oct-map.cc \
-	oct-obj.cc oct-prcstrm.cc oct-procbuf.cc \
-	oct-stream.cc zfstream.cc oct-strstrm.cc oct-lvalue.cc pager.cc \
+	oct-obj.cc oct-prcstrm.cc oct-procbuf.cc oct-stream.cc \
+	octave.cc zfstream.cc oct-strstrm.cc oct-lvalue.cc pager.cc \
 	parse.y pr-output.cc procstream.cc sighandlers.cc \
 	siglist.c sparse-xdiv.cc sparse-xpow.cc strcasecmp.c \
 	strncase.c strfns.cc symtab.cc syscalls.cc sysdep.cc \
 	token.cc toplev.cc unwind-prot.cc utils.cc variables.cc \
 	xdiv.cc xpow.cc \
 	$(OV_SRC) \
 	$(PT_SRC)
 
@@ -196,17 +196,17 @@ ifeq ($(SHARED_LIBS), true)
     PICOBJ := $(addprefix pic/, $(OBJECTS))
   else
     PICOBJ := $(OBJECTS)
   endif
 endif
 
 # Ugh.
 
-DEP_5 := $(SOURCES) $(DLD_SRC) builtins.cc ops.cc octave.cc main.c
+DEP_5 := $(SOURCES) $(DLD_SRC) builtins.cc ops.cc main.c
 DEP_4 := $(notdir $(DEP_5))
 DEP_3 := $(patsubst %.l, %.cc, $(DEP_4))
 DEP_2 := $(patsubst %.y, %.cc, $(DEP_3))
 DEP_1 := $(patsubst %.c, %.d, $(DEP_2))
 MAKEDEPS := $(patsubst %.cc, %.d, $(DEP_1))
 
 # Some stupid egreps don't like empty elements in alternation patterns,
 # so we have to repeat ourselves because some stupid egreps don't like
@@ -252,18 +252,18 @@ OCTINTERP_LINK_DEPS = \
 OCT_LINK_DEPS = \
   -L../libcruft $(LIBCRUFT) -L../liboctave $(LIBOCTAVE) \
   -L. $(LIBOCTINTERP) $(CHOLMOD_LIBS) $(UMFPACK_LIBS) $(AMD_LIBS) \
    $(COLAMD_LIBS) $(CCOLAMD_LIBS) $(CXSPARSE_LIBS) $(BLAS_LIBS) \
    $(FFTW_LIBS) $(LIBS) $(FLIBS)
 
 DISTFILES = Makefile.in ChangeLog mkdefs mkops mkgendoc \
 	DOCSTRINGS mkbuiltins mk-errno-list mk-pkg-add \
-	defaults.h.in oct-conf.h.in oct-errno.cc.in octave.gperf oct-gperf.h \
-	octave.cc parse.cc lex.cc y.tab.h __gnuplot_raw__.cc \
+	defaults.h.in oct-conf.h.in oct-errno.cc.in octave.gperf \
+	oct-gperf.h parse.cc lex.cc y.tab.h __gnuplot_raw__.cc \
 	$(INCLUDES) $(DIST_SRC) $(OPT_HANDLERS) $(EXTRAS)
 
 all: octave$(EXEEXT) $(OCT_FILES) PKG_ADD DOCSTRINGS
 .PHONY: all
 
 objects: $(OBJECTS)
 
 XERBLA = ../libcruft/blas-xtra/xerbla.o
diff --git a/src/octave.cc b/src/octave.cc
--- a/src/octave.cc
+++ b/src/octave.cc
@@ -55,16 +55,17 @@ 02110-1301, USA.
 #include "Cell.h"
 #include "defun.h"
 #include "error.h"
 #include "file-io.h"
 #include "input.h"
 #include "lex.h"
 #include "octave.h"
 #include "oct-hist.h"
+#include "oct-map.h"
 #include "oct-obj.h"
 #include "ops.h"
 #include "toplev.h"
 #include "parse.h"
 #include "procstream.h"
 #include "prog-args.h"
 #include "sighandlers.h"
 #include "sysdep.h"
@@ -204,16 +205,56 @@ initialize_pathsearch (void)
   if (odb.empty ())
     odb = octave_env::getenv ("OCTAVE_DB_DIR");
 
   if (odb.empty ())
     odb = Vdata_dir + file_ops::dir_sep_str + "octave:"
       + Vlibexec_dir + file_ops::dir_sep_str + "octave";
 }
 
+DEFUN (__version_info__, args, ,
+  "-*- texinfo -*-\n\
+@deftypefn {Function File} {retval =} __version_info__ (@var{name}, @var{version}, @var{date})\n\
+@end deftypefn")
+{
+  octave_value retval;
+
+  static Octave_map vinfo;
+
+  int nargin = args.length ();
+
+  if (nargin == 3)
+    {
+      octave_value idx (vinfo.numel () + 1);
+
+      vinfo.assign (idx, "Name", Cell (octave_value (args (0))));
+      vinfo.assign (idx, "Version", Cell (octave_value (args (1))));
+      vinfo.assign (idx, "Release", Cell (octave_value (args (1))));
+      vinfo.assign (idx, "Date", Cell (octave_value (args (2))));
+    }
+  else if (nargin == 0)
+    retval = vinfo;
+  else
+    print_usage ("__version_info__");
+
+  return retval;
+}
+
+static void
+initialize_version_info (void)
+{
+  octave_value_list args;
+
+  args(2) = OCTAVE_RELEASE_DATE;
+  args(1) = OCTAVE_VERSION;
+  args(0) = "GNU Octave";
+
+  F__version_info__ (args, 0);
+}
+
 // Initialize by reading startup files.
 
 static void
 execute_startup_files (void)
 {
   unwind_protect::begin_frame ("execute_startup_files");
 
   unwind_protect_bool (input_from_startup_file);
@@ -605,16 +646,18 @@ octave_main (int argc, char **argv, int 
   if (! inhibit_startup_message)
     std::cout << OCTAVE_STARTUP_MESSAGE "\n" << std::endl;
 
   if (traditional)
     maximum_braindamage ();
 
   octave_interpreter_ready = true;
 
+  initialize_version_info ();
+
   execute_default_pkg_add_files ();
 
   execute_startup_files ();
 
   command_history::read (false);
 
   if (! inhibit_startup_message && reading_startup_message_printed)
     std::cout << std::endl;
diff --git a/src/ov-fcn-handle.h b/src/ov-fcn-handle.h
--- a/src/ov-fcn-handle.h
+++ b/src/ov-fcn-handle.h
@@ -67,16 +67,18 @@ public:
   octave_value_list subsref (const std::string& type,
 			     const std::list<octave_value_list>& idx,
 			     int nargout);
 
   bool is_defined (void) const { return true; }
 
   bool is_function_handle (void) const { return true; }
 
+  dim_vector dims (void) const { static dim_vector dv (1, 1); return dv; }
+
   octave_function *function_value (bool = false)
     { return fcn.function_value (); }
 
   octave_fcn_handle *fcn_handle_value (bool = false) { return this; }
 
   octave_value fcn_val (void) const { return fcn; }
 
   std::string fcn_name (void) const { return nm; }
diff --git a/src/version.h b/src/version.h
--- a/src/version.h
+++ b/src/version.h
@@ -24,16 +24,18 @@ 02110-1301, USA.
 
 #if !defined (octave_version_h)
 #define octave_version_h 1
 
 #define OCTAVE_VERSION "2.9.4"
 
 #define OCTAVE_API_VERSION "api-v17"
 
+#define OCTAVE_RELEASE_DATE "2005-11-11"
+
 #define OCTAVE_COPYRIGHT \
   "Copyright (C) 2006 John W. Eaton."
 
 #define OCTAVE_NAME_AND_VERSION \
   "GNU Octave, version " OCTAVE_VERSION " (" OCTAVE_CANONICAL_HOST_TYPE ")"
 
 #define OCTAVE_COPYING_STATEMENT \
   "This is free software; see the source code for copying conditions."
