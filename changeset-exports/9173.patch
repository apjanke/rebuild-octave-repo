# HG changeset patch
# User Peter O'Gorman <pogma@thewrittenword.com>
# Date 1241467048 14400
#      Mon May 04 15:57:28 2009 -0400
# Node ID 224634b2e6e3a7b81035cd557be062564966f9db
# Parent  cd68431b395a7f0875a9ad1695ca065aefced240
configure.in, aclocal.m4: check for c99 vsnprintf

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,10 +1,13 @@
 2009-05-04  Peter O'Gorman  <pogma@thewrittenword.com>
 
+	* aclocal.m4 (OCTAVE_HAVE_C99_VSNPRINTF): New macro.
+	* configure.in: Use it.
+
 	* configure.in (rs6000-ibm-aix* | powerpc-ibm-aix*): Set
 	library_path_var to LIBPATH.
 	(hppa*-hp-hpux*): Set library_path_var to SHLIB_PATH.
 	(ia64*-hp-hpux*): New case for shared library variables.
 
 	* configure.in: Provide decls for exp2, round, and tgamma if they
 	are missing.
 
diff --git a/aclocal.m4 b/aclocal.m4
--- a/aclocal.m4
+++ b/aclocal.m4
@@ -1417,8 +1417,46 @@ AC_DEFUN(OCTAVE_HAVE_FRAMEWORK, [
       AC_MSG_NOTICE([framework rejected by --without-framework-m4_tolower($1)])
       [$5]
     fi
   else
     AC_MSG_RESULT(no)
     [$5]
   fi
 ])
+dnl
+dnl Do we have a working c99 vsnprintf function?
+dnl
+dnl OCTAVE_HAVE_C99_VSNPRINTF
+AC_DEFUN(OCTAVE_HAVE_C99_VSNPRINTF, [
+  AC_CACHE_CHECK([for c99 vsnprintf], [oct_cv_c99_vsnprintf],
+    [AC_RUN_IFELSE([AC_LANG_PROGRAM([[#include <stdio.h>
+#include <stdarg.h>
+#include <stdlib.h>
+
+int
+doit(char * s, ...)
+{
+  char buffer[32];
+  va_list args;
+  int r;
+
+  va_start(args, s);
+  r = vsnprintf(buffer, 5, s, args);
+  va_end(args);
+
+  if (r != 7)
+    exit(1);
+
+  exit(0);
+}
+  ]],[
+doit("1234567");])],
+  [oct_cv_c99_vsnprintf=yes],
+  [oct_cv_c99_vsnprintf=no],
+  [oct_cv_c99_vsnprintf="guessing no"])])
+
+case $oct_cv_c99_vsnprintf in
+yes)
+    AC_DEFINE([HAVE_C99_VSNPRINTF], [1], [Define if you have a c99 vsnprintf])
+  ;;
+esac
+])
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -1641,16 +1641,17 @@ case "$canonical_host_type" in
     ## so use our version.  We could use an actual configure test
     ## for this.
   ;;
   *)
     AC_CHECK_FUNCS(strftime)
   ;;
 esac
 
+OCTAVE_HAVE_C99_VSNPRINTF
 OCTAVE_STRPTIME_BROKEN
 OCTAVE_SMART_PUTENV
 
 case "$canonical_host_type" in
   *-*-msdosmsvc | *-*-mingw*)
     AC_MSG_CHECKING([for required _WIN32_WINNT])
     AC_COMPILE_IFELSE(AC_LANG_PROGRAM([[
 #include <windows.h>
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,12 @@
+2009-05-04  Peter O'Gorman  <pogma@thewrittenword.com>
+
+	* utils.cc: Don't define HAVE_C99_VSNPRINTF here.
+
 2009-05-01  John W. Eaton  <jwe@octave.org>
 
 	* error.cc (Vlast_error_file, Vlast_error_name, Vlast_error_line,
 	Vlast_error_column): Delete.
 	(Vlast_error_stack): New static variable.
 	(initialize_last_error_stack): New static function.
 	(verror, Frethrow, Flasterror): Set or use Vlast_error_stack, not
 	Vlast_error_file, etc.
diff --git a/src/utils.cc b/src/utils.cc
--- a/src/utils.cc
+++ b/src/utils.cc
@@ -1076,22 +1076,16 @@ octave_vformat (std::ostream& os, const 
       retval = strlen (s);
     }
 
 #endif
 
   return retval;
 }
 
-/* FIXME -- we really need a configure test for this.  */
-
-#if defined __GNUC__ && __GNUC__ >= 3 && ! defined __MINGW32__
-#define HAVE_C99_VSNPRINTF 1
-#endif
-
 // We manage storage.  User should not free it, and its contents are
 // only valid until next call to vsnprintf.
 
 // Interrupts might happen if someone makes a call with something that
 // will require a very large buffer.  If we are interrupted in that
 // case, we should make the buffer size smaller for the next call.
 
 #define BEGIN_INTERRUPT_IMMEDIATELY_IN_FOREIGN_CODE_FOR_VSNPRINTF \
