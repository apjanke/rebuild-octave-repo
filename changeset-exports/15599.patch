# HG changeset patch
# User Michael Goffioul <michael.goffioul@gmail.com>
# Date 1352080089 0
#      Mon Nov 05 01:48:09 2012 +0000
# Node ID 1d40c0514053cbb889c237b87f945ba1cdacc175
# Parent  bb7cbef712f138fe28a4720cd603cb86e023e4ab
Remove OCTINTERP_API decorator for fully inlined classes.

* libinterp/interp-core/action-container.h (class action_container): Remove
OCTINTERP_API decorator.
* libinterp/interp-core/event-queue.h (class event_queue): Likewise.

diff --git a/libinterp/interp-core/action-container.h b/libinterp/interp-core/action-container.h
--- a/libinterp/interp-core/action-container.h
+++ b/libinterp/interp-core/action-container.h
@@ -26,17 +26,16 @@ along with Octave; see the file COPYING.
 
 // This class allows registering actions in a list for later
 // execution, either explicitly or when the container goes out of
 // scope.
 
 // FIXME -- is there a better name for this class?
 
 class
-OCTINTERP_API
 action_container
 {
 public:
 
   // A generic unwind_protect element. Knows how to run itself and
   // discard itself.  Also, contains a pointer to the next element.
   class elem
   {
diff --git a/libinterp/interp-core/event-queue.h b/libinterp/interp-core/event-queue.h
--- a/libinterp/interp-core/event-queue.h
+++ b/libinterp/interp-core/event-queue.h
@@ -24,17 +24,16 @@ along with Octave; see the file COPYING.
 #define octave_event_queue_h 1
 
 #include <queue>
 #include <memory>
 
 #include "action-container.h"
 
 class
-OCTINTERP_API
 event_queue : public action_container
 {
 public:
 
   event_queue (void) : fifo () { }
 
   // Destructor should not raise an exception, so all actions
   // registered should be exception-safe (but setting error_state is
