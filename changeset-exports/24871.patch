# HG changeset patch
# User CarnÃ« Draug <carandraug@octave.org>
# Date 1520959640 -3600
#      Tue Mar 13 17:47:20 2018 +0100
# Node ID ca43264971ea35e5aa2ea9816abcd8bd97eae308
# Parent  170e8625562afc5f7cf437646a7ae26dbfa5737d
pkg: allow URI for external files (https/ftp/etc links) as install targets

diff --git a/NEWS b/NEWS
--- a/NEWS
+++ b/NEWS
@@ -94,16 +94,19 @@ Summary of important user-visible change
  ** An initial implementation of alpha transparency has been made for
     patch and surface objects.  Printing to svg and pdf is supported.
 
  ** ishandle now returns true for both graphics handle objects and
     Java objects.  The latter change was made for Matlab compatibility.
     Use ishghandle or isgraphics if it is important not to include Java
     objects.
 
+ ** Octave packages can be installed by providing an external URI to the
+    pkg function, like so `pkg install https://some-url.tar.gz'
+
  ** The following statistical functions have been moved from core
     Octave to the statistics package available from Octave Forge.
 
     BASE
       cloglog.m
       table.m --renamed to --> crosstab.m
       logit.m
       prctile.m
diff --git a/scripts/pkg/pkg.m b/scripts/pkg/pkg.m
--- a/scripts/pkg/pkg.m
+++ b/scripts/pkg/pkg.m
@@ -384,18 +384,38 @@ function [local_packages, global_package
           [files, succ] = cellfun ("urlwrite", urls, local_files,
                                    "uniformoutput", false);
           succ = [succ{:}];
           if (! all (succ))
             i = find (! succ, 1);
             error ("pkg: could not download file %s from url %s",
                    local_files{i}, urls{i});
           endif
+        else
+          ## If files do not exist, maybe they are not local files.
+          ## Try to download them.
+          external_files_mask = ! cellfun (@exist, files, {"file"});
+          if (any (external_files_mask))
+            [success, msg] = mkdir (tmp_dir = tempname ());
+            if (success != 1)
+              error ("pkg: failed to create temporary directory: %s", msg);
+            endif
+            for file_idx = find (external_files_mask)
+              [~, fname, fext] = fileparts (files{file_idx});
+              local_files{end+1} = fullfile (tmp_dir, [fname fext]);
+
+              [~, success, msg] = urlwrite (files{file_idx}, local_files{end});
+              if (success != 1)
+                error ("pkg: failed to read package '%s': %s",
+                       files{file_idx}, msg);
+              endif
+              files{file_idx} = local_files{end};
+            endfor
+          endif
         endif
-
         install (files, deps, prefix, archprefix, verbose, local_list,
                  global_list, global_install);
 
       unwind_protect_cleanup
         cellfun ("unlink", local_files);
       end_unwind_protect
 
     case "uninstall"
