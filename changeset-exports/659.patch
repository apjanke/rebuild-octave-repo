# HG changeset patch
# User jwe
# Date 778195386 0
#      Mon Aug 29 21:23:06 1994 +0000
# Node ID fe75d98598d6739debd84719f6221bf5135712f1
# Parent  ce51ae1bc05e76763e265276866a52b4b54fb30d
[project @ 1994-08-29 21:23:06 by jwe]

diff --git a/liboctave/Array.cc b/liboctave/Array.cc
--- a/liboctave/Array.cc
+++ b/liboctave/Array.cc
@@ -144,21 +144,25 @@ Array<T>::~Array (void)
   if (--rep->count <= 0)
     delete rep;
 }
 
 template <class T>
 Array<T>&
 Array<T>::operator = (const Array<T>& a)
 {
-  if (--rep->count <= 0)
-    delete rep;
+  if (this != &a)
+    {
+      if (--rep->count <= 0)
+	delete rep;
 
-  rep = a.rep;
-  rep->count++;
+      rep = a.rep;
+      rep->count++;
+    }
+
   return *this;
 }
 
 template <class T>
 int
 Array<T>::capacity (void) const
 {
   return rep->length ();
@@ -373,19 +377,23 @@ Array2<T>::Array2 (const DiagArray<T>& a
   for (int i = 0; i < a.length (); i++)
     elem (i, i) = a.elem (i, i);
 }
 
 template <class T>
 Array2<T>&
 Array2<T>::operator = (const Array2<T>& a)
 {
-  Array<T>::operator = (a);
-  d1 = a.d1;
-  d2 = a.d2;
+  if (this != &a)
+    {
+      Array<T>::operator = (a);
+      d1 = a.d1;
+      d2 = a.d2;
+    }
+
   return *this;
 }
 
 template <class T>
 int
 Array2<T>::dim1 (void) const
 {
   return d1;
@@ -620,20 +628,24 @@ Array3<T>::Array3 (const Array3<T>& a) :
   d2 = a.d2;
   d3 = a.d3;
 }
 
 template <class T>
 Array3<T>&
 Array3<T>::operator = (const Array3<T>& a)
 {
-  Array<T>::operator = (a);
-  d1 = a.d1;
-  d2 = a.d2;
-  d3 = a.d3;
+  if (this != &a)
+    {
+      Array<T>::operator = (a);
+      d1 = a.d1;
+      d2 = a.d2;
+      d3 = a.d3;
+    }
+
   return *this;
 }
 
 template <class T>
 int
 Array3<T>::dim3 (void) const
 {
   return d3;
@@ -784,19 +796,23 @@ DiagArray<T>::DiagArray (const DiagArray
   nr = a.nr;
   nc = a.nc;
 }
 
 template <class T>
 DiagArray<T>&
 DiagArray<T>::operator = (const DiagArray<T>& a)
 {
-  Array<T>::operator = (a);
-  nr = a.nr;
-  nc = a.nc;
+  if (this != &a)
+    {
+      Array<T>::operator = (a);
+      nr = a.nr;
+      nc = a.nc;
+    }
+
   return *this;
 }
 
 template <class T>
 int
 DiagArray<T>::dim1 (void) const
 {
   return nr;
