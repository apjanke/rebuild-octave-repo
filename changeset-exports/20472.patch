# HG changeset patch
# User Pantxo Diribarne <pantxo.diribarne@gmail.com>
# Date 1437823221 -7200
#      Sat Jul 25 13:20:21 2015 +0200
# Node ID 2d415c68213f1da2449a131e584b3b3309d3e950
# Parent  25caa0deaabbc33dc4756ce749cb8440fa5eee5c
Don't use GL_SELECT to find axes objects in Qt figures (bug #45540)

* Canvas.h (Canvas::select_object): add a boolean argument that defaults to false. Indicate the method should only look for axes abjects
* Canvas.cc (Canvas::select_object): avoid using GL_SELECT mechanism to find axes only. Compare mouse coordinates with all axes limits.

diff --git a/libgui/graphics/Canvas.cc b/libgui/graphics/Canvas.cc
--- a/libgui/graphics/Canvas.cc
+++ b/libgui/graphics/Canvas.cc
@@ -368,17 +368,18 @@ zoom_mode (const graphics_object figObj)
 
   octave_scalar_map zm = ov_zm.scalar_map_value ();
 
   return zm.contents ("Motion").string_value ();
 }
 
 void 
 Canvas::select_object (graphics_object obj, QMouseEvent* event, 
-                       graphics_object &currentObj, graphics_object &axesObj)
+                       graphics_object &currentObj, graphics_object &axesObj,
+                       bool axes_only)
 {
   QList<graphics_object> axesList;
   Matrix children = obj.get_properties ().get_all_children ();
   octave_idx_type num_children = children.numel ();
 
   for (int i = 0; i < num_children; i++)
     {
       graphics_object childObj (gh_manager::get_object (children(i)));
@@ -394,17 +395,40 @@ Canvas::select_object (graphics_object o
           if (r.contains (event->posF ()))
             {
               currentObj = childObj;
               break;
             }
         }
     }
 
-  if (! currentObj)
+  if (axes_only)
+    {
+      QPoint pt = event->pos ();
+
+      for (QList<graphics_object>::ConstIterator it = axesList.begin ();
+           it != axesList.end (); ++it)
+        {
+          const axes::properties& ap = 
+            dynamic_cast<const axes::properties&> ((*it).get_properties ());
+
+          ColumnVector p0 = ap.pixel2coord (pt.x (), pt.y ());
+          Matrix xlim = ap.get_xlim ().matrix_value ();
+          Matrix ylim = ap.get_ylim ().matrix_value ();
+
+          if (xlim(0) < p0(0) && xlim(1) > p0(0) 
+              && ylim(0) < p0(1) && ylim(1) > p0(1))
+            {
+              axesObj = *it;
+              return;
+            }
+        }
+      
+    }
+  else if (! currentObj)
     {
       for (QList<graphics_object>::ConstIterator it = axesList.begin ();
            it != axesList.end (); ++it)
         {
           graphics_object go = selectFromAxes (*it, event->pos ());
 
           if (go)
             {
@@ -500,17 +524,17 @@ Canvas::canvasMouseMoveEvent (QMouseEven
     }
 
   // Update mouse coordinates in the figure window status bar 
   graphics_object obj = gh_manager::get_object (m_handle);
 
   if (obj.valid_object ())
     {
       graphics_object currentObj, axesObj;
-      select_object (obj, event, currentObj, axesObj);
+      select_object (obj, event, currentObj, axesObj, true);
 
       if (axesObj.valid_object ())
         {
           Figure* fig = 
             dynamic_cast<Figure*> (Backend::toolkitObject (obj));
           axes::properties& ap = Utils::properties<axes> (axesObj);
           fig->updateStatusBar (ap.pixel2coord (event->x (), event->y ()));
         }
diff --git a/libgui/graphics/Canvas.h b/libgui/graphics/Canvas.h
--- a/libgui/graphics/Canvas.h
+++ b/libgui/graphics/Canvas.h
@@ -104,17 +104,18 @@ protected:
 
   void updateCurrentPoint (const graphics_object& fig,
                            const graphics_object& obj, QMouseEvent *event);
   void updateCurrentPoint (const graphics_object& fig,
                            const graphics_object& obj);
 
   void annotation_callback (const octave_value_list& args);
   void select_object (graphics_object obj, QMouseEvent* event, 
-                      graphics_object &currentObj, graphics_object &axesObj);
+                      graphics_object &currentObj, graphics_object &axesObj, 
+                      bool axes_only = false);
 
 private:
   graphics_handle m_handle;
   bool m_redrawBlocked;
   MouseMode m_mouseMode;
   bool m_clickMode;              // True: ZoomIn, False: ZoomOut
   QPoint m_mouseAnchor;
   QPoint m_mouseCurrent;
