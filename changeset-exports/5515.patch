# HG changeset patch
# User jwe
# Date 1130431567 0
#      Thu Oct 27 16:46:07 2005 +0000
# Node ID ae35b3381c7a2c75c91b72f9288840c68b603d22
# Parent  e0011660696ceb5e1955974f8e21d702dc242897
[project @ 2005-10-27 16:46:07 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,12 @@
 2005-10-27  John W. Eaton  <jwe@octave.org>
 
+	* DLD-FUNCTIONS/__glpk__.cc (F__glpk__): Declare mrowsA volatile.
+
 	* pt-mat.cc (tm_row_const::tm_row_const_rep::tm_row_const_rep):
 	Ensure that we always have at least two dimensions here.
 	(tm_const::tm_const): Likewise.
 	(tm_const::rows, tm_const::columns): Simplify.
 	(tm_row_const::rows, tm_row_const::columns)): Simplify.
 
 2005-10-26  John W. Eaton  <jwe@octave.org>
 
diff --git a/src/DLD-FUNCTIONS/__glpk__.cc b/src/DLD-FUNCTIONS/__glpk__.cc
--- a/src/DLD-FUNCTIONS/__glpk__.cc
+++ b/src/DLD-FUNCTIONS/__glpk__.cc
@@ -440,17 +440,17 @@ You should be using using the @code{glpk
       error ("__glpk__: invalid value of C");
       return retval;
     }
 
   double *c = C.fortran_vec ();
   Array<int> rn;
   Array<int> cn;
   ColumnVector a;
-  int mrowsA;
+  volatile int mrowsA;
   volatile int nz = 0;
 
   //-- 2nd Input. A matrix containing the constraints coefficients.
   // If matrix A is NOT a sparse matrix
   if( args(1).class_name () != "sparse")
     {
       Matrix A (args(1).matrix_value ()); // get the matrix
 
