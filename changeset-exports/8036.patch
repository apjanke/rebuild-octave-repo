# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1219168770 14400
#      Tue Aug 19 13:59:30 2008 -0400
# Node ID 854683691d7a58b8f38adf305b2ddb0232cdd003
# Parent  1720d4fab3fa99f0ce3b3af85572f5d5a51330a4
fix invalid memory read in glpk

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2008-08-19  Jaroslav Hajek <highegg@gmail.com>
+
+	* optimization/glpk.m: Fix invalid call to zeros.
+
 2008-08-19  David Bateman  <dbateman@free.fr>
 
 	statistics/base/ranks.m: Doc fix.
 
 2008-08-08  John W. Eaton  <jwe@octave.org>
 
 	* general/Makefile.in (SOURCES): Add cellidx.m to the list.
 
diff --git a/scripts/optimization/glpk.m b/scripts/optimization/glpk.m
--- a/scripts/optimization/glpk.m
+++ b/scripts/optimization/glpk.m
@@ -465,17 +465,17 @@ function [xopt, fmin, status, extra] = g
     error ("B must be a real valued %d by 1 vector", nc);
     return;
   endif
 
   ## 4) Vector with the lower bound of each variable
 
   if (nargin > 3)
     if (isempty (lb))
-      lb = zeros (0, nx, 1);
+      lb = zeros (nx, 1);
     elseif (! isreal (lb) || all (size (lb) > 1) || length (lb) != nx)
       error ("LB must be a real valued %d by 1 column vector", nx);
       return;
     endif
   else
     lb = zeros (nx, 1);
   endif
 
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,13 @@
 2008-08-19  Jaroslav Hajek <highegg@gmail.com>
 
+	* DLD-FUNCTIONS/__glpk__.cc (F__glpk__): Checks whether LB and UB are
+	of proper size.
+
 	* oct-obj.cc, oct-obj.h (octave_value_list::make_argv): 
 	Allow calling without fcn_name.
 	* load-save.cc (parse_save_options (const string_vector&, ...)): 
 	Return string_vector with parsed arguments removed instead.
 	(parse_save_options (const std::string&, ...)):	Dtto.
 	(Fsave): Fix calls to parse_save_options.
 
 2008-08-19  John W. Eaton  <jwe@octave.org>
diff --git a/src/DLD-FUNCTIONS/__glpk__.cc b/src/DLD-FUNCTIONS/__glpk__.cc
--- a/src/DLD-FUNCTIONS/__glpk__.cc
+++ b/src/DLD-FUNCTIONS/__glpk__.cc
@@ -570,17 +570,17 @@ Undocumented internal function.\n\
     }
 
   double *b = B.fortran_vec ();
 
   //-- 4th Input. An array of length mrowsc containing the lower
   //--            bound on each of the variables.
   Matrix LB (args(3).matrix_value ());
 
-  if (error_state)
+  if (error_state || LB.length () < mrowsc)
     {
       error ("__glpk__: invalid value of lb");
       return retval;
     }
 
   double *lb = LB.fortran_vec ();
 
   //-- LB argument, default: Free
@@ -595,17 +595,17 @@ Undocumented internal function.\n\
        else
 	 freeLB(i) = 0;
      }
 
   //-- 5th Input. An array of at least length numcols containing the upper
   //--            bound on each of the variables.
   Matrix UB (args(4).matrix_value ());
 
-  if (error_state)
+  if (error_state || UB.length () < mrowsc)
     {
       error ("__glpk__: invalid value of ub");
       return retval;
     }
 
   double *ub = UB.fortran_vec ();
 
   Array<int> freeUB (mrowsc);
