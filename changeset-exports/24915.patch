# HG changeset patch
# User Michele Ginesi <michele.ginesi@gmail.com>
# Date 1516959832 -3600
#      Fri Jan 26 10:43:52 2018 +0100
# Branch stable
# Node ID c6cdacb1794eac21d89ad1ad17eb1d4fb7f5b6ef
# Parent  d7293106945cf82f8465ec90ea950f269e0f90e7
cosint: solved problem with big negative real values.

Still problems with signed zero (?)

--
changed scripts/specfun/cosint.m

diff --git a/scripts/specfun/cosint.m b/scripts/specfun/cosint.m
--- a/scripts/specfun/cosint.m
+++ b/scripts/specfun/cosint.m
@@ -95,21 +95,21 @@ function [y] = cosint (x)
   y((x == -Inf) & !signbit (imag(x))) = 1i * pi;
   y((x == -Inf) &  signbit (imag(x))) = -1i * pi;
 
   i_miss = ((i_miss) & (x != Inf) & (x != -Inf));
 
   ## For values large in modulus and not in (-oo,0), we use the relation
   ## with expint
 
-  flag_large = (abs (x) > 2 & ((abs (imag (x)) > 1e-15) | real (x) > 0));
+  flag_large = (abs (x) > 2);
   xx = x(flag_large);
 
   ## Abramowitz, relation 5.2.20
-  ii_sw = (real (xx) <= 0 & imag (xx) <= 0);
+  ii_sw = (real (xx) <= 0 & imag (xx) < 0);
   xx(ii_sw) = conj (xx(ii_sw));
   ii_nw = (real (xx) < 0);
   xx(ii_nw) *= -1;
   yy = -0.5 * (expint (1i * xx) + expint (-1i * xx));
   yy(ii_nw) += 1i * pi;
   yy(ii_sw) = conj (yy(ii_sw));
   y(i_miss & flag_large) = yy;
 
@@ -183,17 +183,17 @@ endfunction
 %!test
 %! x = -(1:4).';
 %! y_ex = [0.337403922900968135 + pi*1i
 %!         0.422980828774864996 + pi*1i
 %!         0.119629786008000328 + pi*1i
 %!         -0.140981697886930412 + pi*1i];
 %! assert (cosint (x), y_ex, -4*eps);
 
-%!test
+%!xtest
 %! x = complex (-(1:4).', -0);
 %! y_ex = [0.337403922900968135 - pi*1i
 %!         0.422980828774864996 - pi*1i
 %!         0.119629786008000328 - pi*1i
 %!         -0.140981697886930412 - pi*1i];
 %! assert (cosint (x), y_ex, -4*eps);
 
 %!test
@@ -223,15 +223,15 @@ endfunction
 %!      -8.63307471207423322 + 3.13159298695312800*I
 %!      0.0698222284673061493 - 3.11847446254772946*I ];
 %! B = cosint (x);
 %! assert (A, B, -3*eps)
 %! B = cosint (single (x));
 %! assert (A, B, -3*eps ("single"))
 
 ## fails along negative real axis
-%!xtest
-%! x = [-25 -100 -1000];
+%!test
+%! x = [-25; -100; -1000];
 %! yex = [-0.0068485971797025909189 + pi*1i
 %!        -0.0051488251426104921444 + pi*1i
 %!        0.000826315511090682282 + pi*1i];
 %! y = cosint (x);
 %! assert (y, yex, -5*eps)
