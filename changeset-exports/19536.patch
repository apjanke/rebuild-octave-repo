# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1420478151 18000
#      Mon Jan 05 12:15:51 2015 -0500
# Node ID ffbd2cc7ca917d795f1c016b09047a1177258ea8
# Parent  827cc33ae05cdf5b1cd8be19f47e27d367ab928a
savepath: avoid possible error in struct concatenation

* savepath.m: Use cellfun to simplify extraction and concatenation of
struct elements.  Tag warning with ID and disable warning in test.

diff --git a/scripts/path/savepath.m b/scripts/path/savepath.m
--- a/scripts/path/savepath.m
+++ b/scripts/path/savepath.m
@@ -102,28 +102,21 @@ function retval = savepath (file)
       [~, n] = setdiff (workingpath, union (cmd_line_path, octave_path));
       default_path = parsepath (default_path);
     endif
     ## This is the path we'd like to preserve when octave is run.
     path_to_preserve = workingpath(sort (n));
 
     ## Determine the path to Octave's user and system wide packages.
     [pkg_user, pkg_system] = pkg ("list");
-    ## Conversion from cell array of structs to cellstr of archprefixes 
-    if (isempty (pkg_user))
-      pkg_user_path = {};
-    else
-      pkg_user_path = {[pkg_user{:}].archprefix};
-    endif
-    if (isempty (pkg_system))
-      pkg_system_path = {};
-    else
-      pkg_system_path = {[pkg_system{:}].archprefix};
-    endif
-    pkg_path = union (pkg_user_path, pkg_system_path);
+
+    ## Conversion from cell array of structs to cellstr of archprefixes.
+    pkg_path = unique (cellfun (@(elt) elt.archprefix,
+                                [pkg_user, pkg_system],
+                                "uniformoutput", false));
 
     ## Rely on Octave's initialization to include the pkg path elements.
     if (! isempty (pkg_path))
       [~, n] = setdiff (path_to_preserve, strcat (pkg_path, ":"));
       path_to_preserve = path_to_preserve(sort (n));
     endif
 
     ## Split the path to be saved into two groups.  Those path elements that
@@ -172,47 +165,48 @@ function retval = savepath (file)
 
     fprintf (fid, "%s\n", post{:});
   unwind_protect_cleanup
     status = fclose (fid);
     if (status < 0)
       error ("savepath: could not close savefile after writing, %s", file);
     elseif (nargin == 0)
       warning ("off", "backtrace", "local");
-      warning ("savepath: current path saved to %s", file);
+      warning ("Octave:savepath-local",
+               "savepath: current path saved to %s", file);
     endif
   end_unwind_protect
 
   if (nargout > 0)
     retval = 0;
   endif
 
 endfunction
 
 ## Convert single string of paths to cell array of paths
 function path_elements = parsepath (p)
   path_elements = strcat (ostrsplit (p, pathsep), pathsep);
 endfunction
 
-
 %!test
 %! fname = tempname ();
 %! status = savepath (fname);
 %! assert (status == 0);
 %! old_dir = pwd;
 %! unwind_protect
 %!   cd (P_tmpdir);
 %!   if (exist (fullfile (pwd, ".octaverc")))
 %!     unlink (".octaverc");
 %!   endif
 %!   ## Create blank .octaverc file
 %!   fid = fopen (".octaverc", "wt"); 
 %!   assert (fid >= 0);
 %!   fclose (fid);
 %!   ## Save path into local .octaverc file
+%!   warning ("off", "Octave:savepath-local");
 %!   status = savepath ();
 %!   assert (status == 0);
 %!   ## Compare old and new versions
 %!   fid = fopen (fname, "rb");
 %!   assert (fid >= 0);
 %!   orig_data = fread (fid);
 %!   fclose (fid);
 %!   fid = fopen (".octaverc", "rb");
