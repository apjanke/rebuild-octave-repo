# HG changeset patch
# User jwe
# Date 854947005 0
#      Mon Feb 03 05:16:45 1997 +0000
# Node ID 5ea93b07a88b14a64d567da738bf007f0d59d560
# Parent  dd71eb0bb4141026e37a6671e0de02de5ea0c1dd
[project @ 1997-02-03 05:16:45 by jwe]

diff --git a/liboctave/cmd-hist.cc b/liboctave/cmd-hist.cc
--- a/liboctave/cmd-hist.cc
+++ b/liboctave/cmd-hist.cc
@@ -180,23 +180,18 @@ command_history::is_stifled (void)
 
 void
 command_history::read (bool must_exist)
 {
   read (xfile, must_exist);
 }
 
 void
-command_history::read (const string& f_arg, bool must_exist)
+command_history::read (const string& f, bool must_exist)
 {
-  string f = f_arg;
-
-  if (f.empty ())
-    f = xfile;
-
   if (! f.empty ())
     {
       int status = ::read_history (f.c_str ());
 
       if (status != 0 && must_exist)
 	error (status);
       else
 	{
@@ -204,33 +199,29 @@ command_history::read (const string& f_a
 
 	  ::using_history ();
 	}
     }
   else
     error ("command_history::read: missing file name");
 }
 
+void
 command_history::read_range (int from, int to, bool must_exist)
 {
   read_range (xfile, from, to, must_exist);
 }
 
 void
-command_history::read_range (const string& f_arg, int from, int to,
+command_history::read_range (const string& f, int from, int to,
 			     bool must_exist)
 {
   if (from < 0)
     from = lines_in_file;
 
-  string f = f_arg;
-
-  if (f.empty ())
-    f = xfile;
-
   if (! f.empty ())
     {
       int status = ::read_history_range (f.c_str (), from, to);
 
       if (status != 0 && must_exist)
 	error (status);
       else
 	{
diff --git a/liboctave/cmd-hist.h b/liboctave/cmd-hist.h
--- a/liboctave/cmd-hist.h
+++ b/liboctave/cmd-hist.h
@@ -27,19 +27,17 @@ Software Foundation, 59 Temple Place - S
 
 #include "str-vec.h"
 
 class
 command_history
 {
 public:
 
-  command_history (const string& = string (), int = -1, bool = false)
-
-  command_history (const string& = string (), int = -1)
+  command_history (const string& = string (), int = -1);
 
   ~command_history (void) { initialized = false; }
 
   void set_file (const string&);
 
   string file (void);
 
   void set_size (int);
@@ -63,22 +61,22 @@ public:
   void stifle (int);
 
   int unstifle (void);
 
   int is_stifled (void);
 
   void read (bool = true);
 
-  void read (const string& = string (), bool = true)
+  void read (const string&, bool = true);
 
-  void read_range (int = -1, int = -1, bool = true)
+  void read_range (int = -1, int = -1, bool = true);
 
-  void read_range (const string& = string (), int = -1, int = -1,
-		   bool = true)
+  void read_range (const string&, int = -1, int = -1,
+		   bool = true);
 
   void write (const string& = string ());
 
   void append (const string& = string ());
 
   void truncate_file (const string& = string (), int = -1);
 
   string_vector list (int = -1, int = 0);
