# HG changeset patch
# User jwe
# Date 769205675 0
#      Tue May 17 20:14:35 1994 +0000
# Node ID 6f08c8b8f62f71d39ab5199df4bec9a24134b779
# Parent  0ce34c2fc3d541acb6944d5bd258261a225c4d45
[project @ 1994-05-17 20:14:06 by jwe]

diff --git a/liboctave/idx-vector.h b/liboctave/idx-vector.h
--- a/liboctave/idx-vector.h
+++ b/liboctave/idx-vector.h
@@ -57,16 +57,17 @@ public:
   int max (void) const;
   int min (void) const;
 
   int one_zero_only (void) const;
   int zeros_count (void) const;
   int ones_count (void) const;
 
   void sort (void);
+  void sort_uniq (void);
 
 // i/o
 
   friend ostream& operator << (ostream& os, const idx_vector& a);
 
 private:
 
   int len;
diff --git a/src/tc-assign.cc b/src/tc-assign.cc
--- a/src/tc-assign.cc
+++ b/src/tc-assign.cc
@@ -1848,17 +1848,17 @@ tree_constant_rep::delete_row (int idx)
     }
   else
     panic_impossible ();
 }
 
 void
 tree_constant_rep::delete_rows (idx_vector& iv)
 {
-  iv.sort ();
+  iv.sort_uniq ();
   int num_to_delete = iv.length ();
 
   if (type_tag == matrix_constant)
     {
       int nr = matrix->rows ();
       int nc = matrix->columns ();
       Matrix *new_matrix = new Matrix (nr-num_to_delete, nc);
       if (nr > num_to_delete)
@@ -2018,17 +2018,17 @@ tree_constant_rep::delete_column (int id
     }
   else
     panic_impossible ();
 }
 
 void
 tree_constant_rep::delete_columns (idx_vector& jv)
 {
-  jv.sort ();
+  jv.sort_uniq ();
   int num_to_delete = jv.length ();
 
   if (type_tag == matrix_constant)
     {
       int nr = matrix->rows ();
       int nc = matrix->columns ();
       Matrix *new_matrix = new Matrix (nr, nc-num_to_delete);
       if (nc > num_to_delete)
