# HG changeset patch
# User jwe
# Date 1137180343 0
#      Fri Jan 13 19:25:43 2006 +0000
# Node ID f2c058edda4064f47b854d51d335efc9b2875e52
# Parent  edaf21425386fe3c086f82df0d7cd41ad466fe2b
[project @ 2006-01-13 19:25:43 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,21 @@
+2006-01-13  John W. Eaton  <jwe@octave.org>
+
+	* help.cc (display_help_text): Use warning() to print raw Texinfo
+	source.  Don't redirect error output for makeinfo process.
+
+	* DLD-FUNCTIONS/__gnuplot_raw__.l (F__gnuplot_init__): Delete
+	function and PKG_ADD directive.
+	(gnuplot::gnuplot): Call do_init here.
+	(gnuplot::init): Delete static function.
+	(gnuplot::close_all): New static function.
+	(class gnuplot_X): New class.
+	(gnpulot_X::X): New static instance.
+
 2006-01-12  David Bateman  <dbateman@free.fr>
 
 	* help.cc (make_name_list): Add autoload functions to list of
 	available completions.
 	(simple_help): Add autoloaded functions to functions listed
 	(first_help_sentence): Avoid issue with single line help string 
 	that is not terminated in \n.
 	(Flookfor): Check for string match in the keyword/function, etc
diff --git a/src/DLD-FUNCTIONS/__gnuplot_raw__.l b/src/DLD-FUNCTIONS/__gnuplot_raw__.l
--- a/src/DLD-FUNCTIONS/__gnuplot_raw__.l
+++ b/src/DLD-FUNCTIONS/__gnuplot_raw__.l
@@ -27,18 +27,16 @@ 02110-1301, USA.
 %{
 // PKG_ADD: mark_as_rawcommand ("__gnuplot_plot__");
 // PKG_ADD: mark_as_rawcommand ("__gnuplot_set__");
 // PKG_ADD: mark_as_rawcommand ("__gnuplot_splot__");
 // PKG_ADD: mark_as_rawcommand ("__gnuplot_replot__");
 
 // PKG_ADD: mark_as_command ("__gnuplot_show__");
 
-// PKG_ADD: __gnuplot_init__ ();
-
 // PKG_ADD: atexit ("closeplot");
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <map>
 #include <string>
@@ -691,39 +689,35 @@ gnuplot
 {
 protected:
 
   gnuplot (void)
     : plot_line_count (0), parametric_plot (false), 
       use_title_option (Vgnuplot_use_title_option),
       gnuplot_exe (Vgnuplot_binary),
       gnuplot_terminal_type (), plot_stream ()
-  { }
+  { do_init (); }
 
 public:
 
   ~gnuplot (void) { }
 
   static bool have_instance (void);
 
   static bool ensure_instance (void);
 
   static bool ensure_plot_stream (void);
 
   static void open (void);
 
   static void close (void);
 
-  static bool plot_stream_event_handler (pid_t pid, int status);
+  static void close_all (void);
 
-  static void init (void)
-  {
-    if (ensure_instance ())
-      instance->do_init ();
-  }
+  static bool plot_stream_event_handler (pid_t pid, int status);
 
   static void send (const std::string& cmd)
   {
     if (ensure_plot_stream ())
       instance->do_send (cmd);
   }
 
   static void send_raw (const std::string& cmd)
@@ -890,16 +884,29 @@ gnuplot::close (void)
   if (have_instance ())
     {
       instance->do_close ();
 
       instance_map.erase (get_current_figure ());
     }
 }
 
+void
+gnuplot::close_all (void)
+{
+  for (std::map<int, gnuplot *>::const_iterator p = instance_map.begin ();
+       p != instance_map.end ();
+       p++)
+    {
+      gnuplot *elt = p->second;
+
+      elt->do_close ();
+    }
+}
+
 pid_t
 gnuplot::pid (void) const
 {
   return plot_stream ? plot_stream->pid () : -1;
 }
 
 gnuplot *
 gnuplot::lookup_by_pid (pid_t pid)
@@ -1449,16 +1456,29 @@ gnuplot::handle_title (int& lasttok)
 
   retstr += OSSTREAM_STR (tmp_buf);
 
   lasttok = tok;
 
   return retstr;
 }
 
+// The static instance of this class is here so that
+// gnuplot::close_all will be called when the .oct file is unloaded.
+
+class
+gnuplot_X
+{
+public:
+  gnuplot_X (void) { }
+  ~gnuplot_X (void) { gnuplot::close_all (); }
+};
+
+static gnuplot_X X;
+
 static int
 automatic_replot (void)
 {
   Vautomatic_replot = check_preference ("automatic_replot");
 
   return 0;
 }
 
@@ -1657,26 +1677,16 @@ If nonzero, append @samp{-title \"Figure
 @end defvr");
 
 }
 
 // -----------------------
 // User-callable functions
 // -----------------------
 
-DEFUN_DLD (__gnuplot_init__, , ,
-  "-*- texinfo -*-\n\
-@deftypefn {Loadable Function} __gnuplot_init__ ()\n\
-@end deftypefn")
-{
-  gnuplot::init ();
-
-  return octave_value_list ();
-}
-
 DEFUN_DLD (clearplot, , ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} clearplot\n\
 @deftypefnx {Built-in Function} {} clg\n\
 Clear the plot window and any titles or axis labels.  The name\n\
 @code{clg} is aliased to @code{clearplot} for compatibility with\n\
 @sc{Matlab}.\n\
 @end deftypefn")
diff --git a/src/help.cc b/src/help.cc
--- a/src/help.cc
+++ b/src/help.cc
@@ -656,16 +656,18 @@ display_help_text (std::ostream& os, con
   // is present, use makeinfo to format the rest of the message before
   // sending it to the output stream.  Otherwise, just print the
   // message.
 
   size_t pos;
 
   if (looks_like_texinfo (msg, pos))
     {
+      os.flush ();
+
       std::string tmp_file_name = file_ops::tempnam ("", "");
 
       int cols = command_editor::terminal_cols ();
 
       if (cols > 16)
 	cols--;
 
       if (cols > 64)
@@ -682,19 +684,16 @@ display_help_text (std::ostream& os, con
 	  << " -D \"OCTAVEHOME " << OCTAVE_PREFIX << "\""
 	  << " -D \"TARGETHOSTTYPE " << OCTAVE_CANONICAL_HOST_TYPE << "\""
 	  << " --fill-column " << cols
 	  << " --no-warn"
 	  << " --no-validate"
 	  << " --no-headers"
 	  << " --force"
 	  << " --output \"" << tmp_file_name << "\""
-#if !defined (__MINGW32__)
-	  << " > /dev/null 2>&1"
-#endif
 	  << OSSTREAM_ENDS;
 
       oprocstream filter (OSSTREAM_STR (buf));
 
       OSSTREAM_FREEZE (buf);
 
       if (filter && filter.is_open ())
 	{
@@ -717,18 +716,17 @@ display_help_text (std::ostream& os, con
 		os << (char) c;
 
 	      tmp_file.close ();
 	    }
 	  else
 	    {
 	      warning ("help: Texinfo formatting filter exited abnormally");
 	      warning ("help: raw Texinfo source of help text follows...");
-
-	      os << "\n" << msg;
+	      warning ("help:\n\n%s\n\n", msg.c_str ());
 	    }
 
 	  file_ops::unlink (tmp_file_name);
 	}
       else
 	os << msg;
     }
   else
