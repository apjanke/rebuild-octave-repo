# HG changeset patch
# User jwe
# Date 948141515 0
#      Mon Jan 17 20:38:35 2000 +0000
# Node ID 0fb75d95b14f2ffe113116263fd7da50cc0849ce
# Parent  5c76d8f267f7f875f9bb245f0da7beb742737108
[project @ 2000-01-17 20:38:31 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -5,16 +5,22 @@ 2000-01-17  John W. Eaton  <jwe@bevo.che
 	* parse.y (Vwarn_future_time_stamp): Ditto.
 	* DLD-FUNCTIONS/minmax.cc (Fmax, Fmin): Ditto.
 	* ov-usr-fcn.cc (Fva_arg, Fva_start, Fvr_val): Ditto.
 	* defaults.cc (VOCTAVE_HOME, Frehash): Ditto.
 	* toplev.cc (Fwarranty, Fcasesen): Ditto.
 	* utils.cc (Fdo_string_escapes, Ffile_in_loadpath): Ditto.
 	* variables.cc (F__dump_symtab_info__, F__dump_symbol_info__): Ditto.
 	* ov-list.cc (Flist, Fappend, Fnth, Freverse, Fsplice): Ditto.
+	* input.cc (Fread_readline_init_file): Ditto.
+	* file-io.cc (Fis_stream): Ditto.
+	* ov-cell.cc (Fiscell, Fcell): Ditto.
+	* pt-assign.cc (Vprint_rhs_assign_val): Ditto.
+	* pt-decl.cc (Vinitialize_global_variables): Ditto.
+	* symtab.cc (Vvariables_can_hide_functions): Ditto.
 
 	* pt-plot.cc (Fgraw, Fgset, Fgshow, Vgnuplot_command_plot, 
 	Vgnuplot_command_replot, Vgnuplot_command_splot,
 	Vgnuplot_command_using, Vgnuplot_command_with,
 	Vgnuplot_command_axes, Vgnuplot_command_title,
 	Vgnuplot_command_end): Texinfoize doc strings.
 
 	* oct-procbuf.cc (__kluge_procbuf_delay__): Rename from
diff --git a/src/file-io.cc b/src/file-io.cc
--- a/src/file-io.cc
+++ b/src/file-io.cc
@@ -130,17 +130,20 @@ fopen_mode_to_ios_mode (const string& mo
       else
 	::error ("invalid mode specified");
     }
 
   return retval;
 }
 
 DEFUN (is_stream, args, ,
-  "is_stream (x): return nonzero if x is a stream object")
+  "-*- texinfo -*-\n\
+@deftypefn {Built-in Function} {} is_stream (@var{x})\n\
+Return true if @var{x} is a stream object.  Otherwise, return false.\n\
+@end deftypefn")
 {
   octave_value retval;
 
   if (args.length () == 1)
     retval = args(0).is_stream ();
   else
     print_usage ("is_stream");
 
diff --git a/src/input.cc b/src/input.cc
--- a/src/input.cc
+++ b/src/input.cc
@@ -849,17 +849,22 @@ a feature, not a bug.\n\
     }
   else
     print_usage ("completion_matches");
 
   return retval;
 }
 
 DEFUN (read_readline_init_file, args, ,
-  "read_readline_init_file (FILE)")
+  "-*- texinfo -*-\n\
+@deftypefn {Built-in Function} {} read_readline_init_file (@var{file})\n\
+Read the readline library initialiazation file @var{file}.  If\n\
+@var{file} is omitted, read the default initialization file (normally\n\
+@file{~/.inputrc}.\n\
+@end deftypefn")
 {
   octave_value_list retval;
 
   int nargin = args.length ();
 
   if (nargin == 0)
     command_editor::read_init_file ();
   else if (nargin == 1)
diff --git a/src/ov-cell.cc b/src/ov-cell.cc
--- a/src/ov-cell.cc
+++ b/src/ov-cell.cc
@@ -170,32 +170,43 @@ octave_cell::print_name_tag (ostream& os
     {
       os << name << " =";
       newline (os);
     }
   return false;
 }
 
 DEFUN (iscell, args, ,
-  "iscell (x): return nonzero if x is a cell array")
+  "-*- texinfo -*-\n\
+@deftypefn {Built-in Function} {} iscell (@var{x})\n\
+Return true if @var{x} is a cell array object.  Otherwise, return\n\
+false.\n\
+@end deftypefn")
 {
   octave_value retval;
 
   if (args.length () == 1)
     retval = args(0).is_cell ();
   else
     print_usage ("iscell");
 
   return retval;
 }
 
 DEFUN (cell, args, ,
-  "cell (N)\n\
-cell (M, N)\n\
-cell (size (A))")
+  "-*- texinfo -*-\n\
+@deftypefn {Built-in Function} {} cell (@var{x})\n\
+@deftypefnx {Built-in Function} {} cell (@var{n}, @var{m})\n\
+Create a new cell array object.  If invoked with a single scalar\n\
+argument, @code{cell} returns a square cell array with the dimension\n\
+specified.  If you supply two scalar arguments, @code{cell} takes\n\
+them to be the number of rows and columns.  If given a vector with two\n\
+elements, @code{cell} uses the values of the elements as the number of\n\
+rows and columns, respectively.\n\
+@end deftypefn")
 {
   octave_value retval;
 
   int nargin = args.length ();
 
   switch (nargin)
     {
     case 1:
diff --git a/src/ov-list.cc b/src/ov-list.cc
--- a/src/ov-list.cc
+++ b/src/ov-list.cc
@@ -140,17 +140,17 @@ octave_list::print_name_tag (ostream& os
       os << name << " =";
       newline (os);
     }
   return false;
 }
 
 DEFUN (list, args, ,
   "-*- texinfo -*-\n\
-@deftypefn {Built-in Function} {} list (@var{a1}, @var{a2}, @dots{}})\n\
+@deftypefn {Built-in Function} {} list (@var{a1}, @var{a2}, @dots{})\n\
 Create a new list with elements given by the arguments @var{a1},\n\
 @var{a2}, @dots{}.\n\
 @end deftypefn")
 {
   return octave_value (args);
 }
 
 DEFUN (nth, args, ,
@@ -261,17 +261,17 @@ Return a new list created by reversing t
 DEFUN (splice, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} splice (@var{list_1}, @var{offset}, @var{length}, @var{list_2})\n\
 Replace @var{length} elements of @var{list_1} beginning at\n\
 @var{offset} with the contents of @var{list_2} (if any).  If\n\
 @var{length} is omitted, all elements from @var{offset} to the end of\n\
 @var{list_1} are replaced.  As a special case, if @var{offset} is one\n\
 greater than the length of @var{list_1} and @var{length} is 0, splice\n\
-is equivalent to @code{append (@var{list_1}, @var{list_2}).\n\
+is equivalent to @code{append (@var{list_1}, @var{list_2})}.\n\
 @end deftypefn") 
 {
   octave_value retval;
 
   int nargin = args.length ();
 
   if (nargin > 1 && nargin < 5)
     {
diff --git a/src/pt-assign.cc b/src/pt-assign.cc
--- a/src/pt-assign.cc
+++ b/src/pt-assign.cc
@@ -328,16 +328,22 @@ print_rhs_assign_val (void)
 
   return 0;
 }
 
 void
 symbols_of_pt_assign (void)
 {
   DEFVAR (print_rhs_assign_val, 0.0, print_rhs_assign_val,
-    "if TRUE, print the right hand side of assignments instead of the left");
+    "-*- texinfo -*-\n\
+@defvr print_rhs_assign_val\n\
+If the value of this variable is non-zero, Octave will print the value\n\
+of the right hand side of assignment expressions instead of the value\n\
+of the left hand side (after the assignment).\n\
+@end defvr");
+
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
diff --git a/src/pt-decl.cc b/src/pt-decl.cc
--- a/src/pt-decl.cc
+++ b/src/pt-decl.cc
@@ -206,17 +206,22 @@ foo\n\
      @result{} 13\n\
 @end group\n\
 @end example\n\
 \n\
 the variable @code{default_global_variable_value} is initially undefined.\n\
 @end defvr");
 
   DEFVAR (initialize_global_variables, 0.0, initialize_global_variables,
-    "control whether otherwise uninitialized global variables are\n\
-given a default value.  See also default_global_variable_value");
+    "-*- texinfo -*-\n\
+@defvr initialize_global_variables\n\
+If the value of this variable is nonzero, global variables are given\n\
+the default initial value specified by the built-in variable\n\
+@code{default_global_variable_value}.\n\
+@end defvr");
+
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
diff --git a/src/symtab.cc b/src/symtab.cc
--- a/src/symtab.cc
+++ b/src/symtab.cc
@@ -945,17 +945,23 @@ variables_can_hide_functions (void)
 
   return 0;
 }
 
 void
 symbols_of_symtab (void)
 {
   DEFVAR (variables_can_hide_functions, 1.0, variables_can_hide_functions,
-    "Should variables be allowed to hide functions of the same name?");
+    "-*- texinfo -*-\n\
+@defvr variables_can_hide_functions\n\
+If the value of this variable is nonzero, assignments to variables may\n\
+hide previously defined functions of the same name.  A negative value\n\
+will cause Octave to print a warning, but allow the operation.\n\
+@end defvr");
+
 }
 
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
