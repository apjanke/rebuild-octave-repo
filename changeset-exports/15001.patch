# HG changeset patch
# User Carlo de Falco <cdf@users.sourceforge.net>
# Date 1342922282 -7200
#      Sun Jul 22 03:58:02 2012 +0200
# Node ID 894cf2c07f92df15e7484c06d9e75eeef3d89a43
# Parent  0ef151f9fdc90afafc9904a09da1e8674cb0e6a7
Properly restore compiler and linker flags after llvm tests

* configure.ac: move save and restore of CPPFLAGS, CXXFLAGS, LIBS and LDFLAGS

diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -716,16 +716,21 @@ OCTAVE_CHECK_LIBRARY(z, ZLIB,
   [zlib.h], [gzclearerr])
 
 ### Check for the llvm library
 dnl
 dnl
 dnl llvm is odd and has its own pkg-config like script. We should probably check
 dnl for existance and 
 dnl
+save_CPPFLAGS="$CPPFLAGS"
+save_CXXFLAGS="$CXXFLAGS"
+save_LIBS="$LIBS"
+save_LDFLAGS="$LDFLAGS"
+
 warn_llvm="LLVM library fails tests. JIT compilation will be disabled."
 
 AC_ARG_VAR(LLVM_CONFIG, [path to llvm-config utility])
 
 AC_ARG_ENABLE([jit-debug],
   AS_HELP_STRING([--enable-jit-debug], [Enable debug printing of jit IRs]))
 
 AS_IF([test "x$enable_jit_debug" = "xyes"], [
@@ -745,21 +750,16 @@ if test "x$ac_cv_env_LLVM_CONFIG_set" = 
     AC_MSG_NOTICE([using -isystem for llvm headers])])
 
   LLVM_LDFLAGS="-L`$LLVM_CONFIG --libdir`"
   LLVM_LIBS=`$LLVM_CONFIG --libs`
   dnl Use -isystem so we don't get warnings from llvm headers
   LLVM_CPPFLAGS="$LLVM_INCLUDE_FLAG `$LLVM_CONFIG --includedir`"
   LLVM_CXXFLAGS=
 
-  save_CPPFLAGS="$CPPFLAGS"
-  save_CXXFLAGS="$CXXFLAGS"
-  save_LIBS="$LIBS"
-  save_LDFLAGS="$LDFLAGS"
-
   dnl
   dnl We define some extra flags that llvm requires in order to include headers.
   dnl Idealy we should get these from llvm-config, but llvm-config isn't very
   dnl helpful.
   dnl
   CPPFLAGS="-D__STDC_CONSTANT_MACROS -D__STDC_LIMIT_MACROS $LLVM_CPPFLAGS $CPPFLAGS"
   CXXFLAGS="$LLVM_CXXFLAGS $CXXFLAGS"
   LIBS="$LLVM_LIBS $LIBS"
@@ -775,40 +775,41 @@ if test "x$ac_cv_env_LLVM_CONFIG_set" = 
            AC_MSG_RESULT([yes])
            warn_llvm=
            XTRA_CXXFLAGS="$XTRA_CXXFLAGS $LLVM_CXXFLAGS $LLVM_CPPFLAGS"
           ],
           [AC_MSG_RESULT([no])
       ])
     ])
   AC_LANG_POP(C++)
+  
 else
   warn_llvm="LLVM_CONFIG not set. JIT compilation will be disabled."
 fi
 
-CPPFLAGS="$save_CPPFLAGS"
-CXXFLAGS="$save_CXXFLAGS"
-LIBS="$save_LIBS"
-LDFLAGS="$save_LDFLAGS"
-
 if test -z "$warn_llvm"; then
   AC_DEFINE(HAVE_LLVM, 1, [Define if LLVM is available])
 else
   LLVM_CXXFLAGS=
   LLVM_CPPFLAGS=
   LLVM_LDFLAGS=
   LLVM_LIBS=
   OCTAVE_CONFIGURE_WARNING([warn_llvm])
 fi
 
 AC_SUBST(LLVM_CXXFLAGS)
 AC_SUBST(LLVM_CPPFLAGS)
 AC_SUBST(LLVM_LDFLAGS)
 AC_SUBST(LLVM_LIBS)
 
+CPPFLAGS="$save_CPPFLAGS"
+CXXFLAGS="$save_CXXFLAGS"
+LIBS="$save_LIBS"
+LDFLAGS="$save_LDFLAGS"
+
 ### Check for HDF5 library.
 
 save_CPPFLAGS="$CPPFLAGS"
 CPPFLAGS="$Z_CPPFLAGS $CPPFLAGS"
 save_LIBS="$LIBS"
 LIBS="$Z_LDFLAGS $Z_LIBS $LIBS"
 OCTAVE_CHECK_LIBRARY(hdf5, HDF5,
   [HDF5 library not found.  Octave will not be able to save or load HDF5 data files.],
