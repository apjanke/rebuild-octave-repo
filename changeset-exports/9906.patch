# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1259872760 18000
#      Thu Dec 03 15:39:20 2009 -0500
# Node ID 8d20fb66a0dc15cae7c6f5cc8c05b257c5c67325
# Parent  84a7c11ff928c1c34185a78e33d5d93ca2c4ded7
more automake fixes

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,22 @@
+2009-12-03  John W. Eaton  <jwe@octave.org>
+
+	* common.mk (OCTAVE_VERSION, OCTAVE_API_VERSION)
+	(OCTAVE_RELEASE_DATE, OCTAVE_COPYRIGHT, OCTAVE_IDX_TYPE):
+	New substituted variables.
+	(version): Define from $(OCTAVE_VERSION).
+	(api_version): Define from $(OCTAVE_API_VERSION).
+	(do_subst_texinfo_vals): Delete macro.
+
+	* configure.ac (AC_CONFIG_HEADER): Quote arg.
+	(AC_CONFIG_FILES): Remove mxarray.h and version.h from the list.
+
+	* examples/Makefile.am (CLEANFILES): New variable.
+
 2009-11-30  Kacper Kowalik <xarthisius.kk@gmail.com>
 
 	* acinclude.m4 (OCTAVE_HDF5_HAS_ENFORCED_16_API): New macro that
 	tests whether the HDF5 library has an enforced v1.6 API and detects
 	v1.8 APIs.
 	* configure.m4: Adapt test for HDF5 libraries to support v1.8 
 	HDF5 libraries.
 
diff --git a/common.mk b/common.mk
--- a/common.mk
+++ b/common.mk
@@ -13,18 +13,23 @@ PERL = @PERL@
 export PERL
 
 PYTHON = @PYTHON@
 
 GNUPLOT = @GNUPLOT@
 
 DESKTOP_FILE_INSTALL = @DESKTOP_FILE_INSTALL@
 
-version = @OCTAVE_VERSION@
-api_version = @OCTAVE_API_VERSION@
+OCTAVE_VERSION = @OCTAVE_VERSION@
+OCTAVE_API_VERSION = @OCTAVE_API_VERSION@
+OCTAVE_RELEASE_DATE = @OCTAVE_RELEASE_DATE@
+OCTAVE_COPYRIGHT = @OCTAVE_COPYRIGHT@
+
+version = $(OCTAVE_VERSION)
+api_version = $(OCTAVE_API_VERSION)
 
 ## AM_LIBTOOLFLAGS = --silent
 
 #### Start of system configuration section. ####
 
 EXEEXT = @EXEEXT@
 
 BUILD_EXEEXT = @BUILD_EXEEXT@
@@ -268,16 +273,17 @@ SPARSE_XLIBS = \
 
 FFTW_XCPPFLAGS = $(FFTW3_CPPFLAGS) $(FFTW3F_CPPFLAGS)
 
 FFTW_XLDFLAGS = $(FFTW3_LDFLAGS) $(FFTW3F_LDFLAGS)
 
 FFTW_XLIBS = $(FFTW3_LIBS) $(FFTW3F_LIBS)
 
 USE_64_BIT_IDX_T = @USE_64_BIT_IDX_T@
+OCTAVE_IDX_TYPE = @OCTAVE_IDX_TYPE@
 
 TEXINFO_COLAMD = @TEXINFO_COLAMD@
 TEXINFO_CHOLMOD = @TEXINFO_CHOLMOD@
 TEXINFO_UMFPACK = @TEXINFO_UMFPACK@
 TEXINFO_QHULL = @TEXINFO_QHULL@
 
 # The arguments passed to configure.
 config_opts = @config_opts@
@@ -616,31 +622,16 @@ echo "making $@ from $<"
   -e "s|%OCTAVE_STARTUPFILEDIR%|\"${startupfiledir}\"|" \
   -e "s|%OCTAVE_PREFIX%|\"${prefix}\"|" \
   -e "s|%OCTAVE_API_VERSION%|\"${api_version}\"|" \
   -e "s|%OCTAVE_RELEASE%|\"${OCTAVE_RELEASE}\"|" \
   -e "s|%OCTAVE_VERSION%|\"${version}\"|"
 $(simple_move_if_change_rule)
 endef
 
-define do_subst_texinfo_vals
-echo "making $@ from $<"
-$(SED) < $< \
-  -e "s|%abs_top_srcdir%|${abs_top_srcdir}|" \
-  -e "s|%top_srcdir%|${top_srcdir}|" \
-  -e "s|%OCTAVE_HOME%|${prefix}|" \
-  -e "s|%OCTAVE_VERSION%|${version}|" \
-  -e "s|%TEXINFO_COLAMD%|${TEXINFO_COLAMD}|" \
-  -e "s|%TEXINFO_CHOLMOD%|${TEXINFO_CHOLMOD}|" \
-  -e "s|%TEXINFO_UMFPACK%|${TEXINFO_UMFPACK}|" \
-  -e "s|%TEXINFO_QHULL%|${TEXINFO_QHULL}|" | \
-  $(SED) -e "s|%OCTAVE_CONF_DEFS%|\"${UGLY_DEFS}\"|" > $@-t
-$(simple_move_if_change_rule)
-endef
-
 define do_subst_script_vals
 echo "making $@ from $<"
 $(SED) < $< \
   -e "s|%AWK%|${AWK}|g" \
   -e "s|%FIND%|${FIND}|g" \
   -e "s|%SED%|${SED}|g" \
   -e "s|%library_path_var%|${library_path_var}|g" \
   -e "s|%liboctinterp%|${SHLPRE}octinterp.${SHLEXT}|g" \
diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -40,17 +40,17 @@ AC_SUBST(OCTAVE_VERSION)
 AC_SUBST(OCTAVE_API_VERSION)
 AC_SUBST(OCTAVE_RELEASE_DATE)
 AC_SUBST(OCTAVE_COPYRIGHT)
 
 AM_INIT_AUTOMAKE([1.11 tar-ustar])
 AC_REVISION($Revision: 1.603 $)
 AC_PREREQ(2.60)
 AC_CONFIG_SRCDIR([src/octave.cc])
-AC_CONFIG_HEADER(config.h)
+AC_CONFIG_HEADER([config.h])
 AC_CONFIG_MACRO_DIR([m4])
 
 OCTAVE_HOST_TYPE
 
 AC_DEFINE(OCTAVE_SOURCE, 1, [Define if this is Octave.])
   
 dnl FIXME -- we should probably only generate this file if it is missing.
 ### Produce unistd.h for MSVC target, this simplifies changes in
@@ -2139,18 +2139,16 @@ AC_CONFIG_FILES([
   doc/liboctave/Makefile
   doc/refcard/Makefile
   examples/Makefile
   libcruft/Makefile
   libcruft/mkf77def
   liboctave/Makefile
   scripts/Makefile
   src/Makefile
-  src/mxarray.h
-  src/version.h
   test/Makefile])
 
 AC_OUTPUT
 
 ### Print a summary so that important information isn't missed.
 
 AC_MSG_NOTICE([
 
diff --git a/doc/ChangeLog b/doc/ChangeLog
--- a/doc/ChangeLog
+++ b/doc/ChangeLog
@@ -1,8 +1,49 @@
+2009-12-03  John W. Eaton  <jwe@octave.org>
+
+	* doc/Makefile.am (MUNGED_TEXI_SRC): Define as explicit list.
+	(TXI_SRC): Define using substitution rule.
+
+	* doc/Makefile.am (conf.texi): Only substitute OCTAVE_VERSION.
+	* conf.texi: Likewise.
+
+	* doc/interpreter/find-docstring-files.sh: New file.
+	* doc/interpreter/Makefile.am (DOCSTRING_FILES): Use it.
+	($(TOPDIR)/src/DOCSTRINGS, $(TOPDIR)/scripts/DOCSTRINGS):
+	Delete rules.
+	(.txi.texi): Pass $(top_srcdir) to munge-texi.
+	(octave.info octave.dvi octave.pdf octave.html):
+	Depend on $(octave_TEXINFOS), not $(nodist_octave_TEXINFOS).
+	(nodist_octave_TEXINFOS): Delete variable.
+	(octave_TEXINFOS): Include ../conf.texi in the list.
+	(dist-hook): Delete target.
+	(EXTRA_DIST): Add find-docstring-files.sh to the list.
+
+	* doc/interpreter/basics.texi: Eliminate @value{OCTAVEHOME}
+	* doc/interpreter/dynamic.txi: Delete examplefile and
+	longexamplefile macro definitions.  Replace uses with
+	@EXAMPLEFILE, to be expanded by munge-texi.
+	* doc/interpreter/geometry.txi: Eliminate @ifset HAVE_QHULL.
+	* doc/interpreter/oop.txi: Delete classfile and polynomialfile
+	macro definitions.  Replace uses with @EXAMPLEFILE, to be expanded
+	by munge-texi.
+	* doc/interpreter/sparse.txi: Eliminate @ifset HAVE_CHOLMOD,
+	@ifset HAVE_UMFPACK, and @ifset HAVE_COLAMD.
+
+	* munge-texi.cc (top_srcdir): New global variable.
+	(main): set top_srcdir from first arg.
+	(usage): Include TOP-SRCDIR in the message.
+	(recover_from_macro, process_example_file): New functions.
+	(process_texi_input_file): Handle @EXAMPLEFILE tag.
+
+	* doc/liboctave/Makefile.am (nodist_liboctave_TEXINFOS):
+	Delete variable.
+	(liboctave_TEXINFOS): Include ../conf.texi in the list.
+
 2009-12-02  Rik <octave@nomad.inbox5.com>
 
 	* interpreter/Makefile.am: Correct Makefile.am to allow VPATH builds of
 	documentation
 
 2009-12-01  Rik <octave@nomad.inbox5.com>
 
 	* faq/Makefile.am, doc/interpreter/bugs.txi, doc/interpreter/install.txi:
diff --git a/doc/Makefile.am b/doc/Makefile.am
--- a/doc/Makefile.am
+++ b/doc/Makefile.am
@@ -31,24 +31,17 @@ EXTRA_DIST = \
   texmf.cnf
 
 DISTCLEANFILES = conf.texi
 
 SUBDIRS = . faq interpreter liboctave refcard
 
 all-local: conf.texi
 
-conf.texi: conf.texi.in $(TOPDIR)/common.mk
+conf.texi: conf.texi.in Makefile
 	@echo "making $@ from $<"
 	@$(SED) < $< \
-	  -e "s|%abs_top_srcdir%|${abs_top_srcdir}|" \
-	  -e "s|%top_srcdir%|${top_srcdir}|" \
-	  -e "s|%OCTAVE_HOME%|${prefix}|" \
-	  -e "s|%OCTAVE_VERSION%|${version}|" \
-	  -e "s|%TEXINFO_COLAMD%|${TEXINFO_COLAMD}|" \
-	  -e "s|%TEXINFO_CHOLMOD%|${TEXINFO_CHOLMOD}|" \
-	  -e "s|%TEXINFO_UMFPACK%|${TEXINFO_UMFPACK}|" \
-	  -e "s|%TEXINFO_QHULL%|${TEXINFO_QHULL}|" > $@-t
+	  -e "s|%OCTAVE_VERSION%|${version}|" > $@-t
 	$(simple_move_if_change_rule)
 
 ../BUGS ../INSTALL.OCTAVE:
 	$(MAKE) -C interpreter ../$@
 .PHONY: ../BUGS ../INSTALL.OCTAVE
diff --git a/doc/conf.texi.in b/doc/conf.texi.in
--- a/doc/conf.texi.in
+++ b/doc/conf.texi.in
@@ -12,16 +12,9 @@
 @c FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 @c for more details.
 @c 
 @c You should have received a copy of the GNU General Public License
 @c along with Octave; see the file COPYING.  If not, see
 @c <http://www.gnu.org/licenses/>.
 
 @set OCTAVE_MANUAL
-@set top_srcdir %top_srcdir%
-@set abs_top_srcdir %abs_top_srcdir%
-@set OCTAVEHOME %OCTAVE_HOME%
 @set VERSION %OCTAVE_VERSION%
-%TEXINFO_COLAMD%
-%TEXINFO_CHOLMOD%
-%TEXINFO_UMFPACK%
-%TEXINFO_QHULL%
diff --git a/doc/interpreter/Makefile.am b/doc/interpreter/Makefile.am
--- a/doc/interpreter/Makefile.am
+++ b/doc/interpreter/Makefile.am
@@ -79,119 +79,110 @@ EXAMPLE_FILES = \
 
 include images.mk
 
 .eps.pdf:
 	if [ -f $< ] ; then $(GHOSTSCRIPT) -dBATCH -dEPSCrop -dNOPAUSE -q -sDEVICE=pdfwrite -sOutputFile=$@ $< ; fi
 
 IMAGES = $(IMAGES_EPS) $(IMAGES_PDF) $(IMAGES_PNG) $(IMAGES_TXT)
 
-TXI_SRC = \
-  arith.txi \
-  audio.txi \
-  basics.txi \
-  bugs.txi \
-  container.txi \
-  contrib.txi \
-  cp-idx.txi \
-  data.txi \
-  debug.txi \
-  diffeq.txi \
-  diagperm.txi \
-  dynamic.txi \
-  emacs.txi \
-  errors.txi \
-  eval.txi \
-  expr.txi \
-  fn-idx.txi \
-  func.txi \
-  geometry.txi \
-  gpl.txi \
-  grammar.txi \
-  image.txi \
-  install.txi \
-  interp.txi \
-  intro.txi \
-  io.txi \
-  linalg.txi \
-  matrix.txi \
-  nonlin.txi \
-  numbers.txi \
-  oop.txi \
-  op-idx.txi \
-  optim.txi \
-  package.txi \
-  plot.txi \
-  poly.txi \
-  preface.txi \
-  quad.txi \
-  set.txi \
-  signal.txi \
-  sparse.txi \
-  stats.txi \
-  stmt.txi \
-  strings.txi \
-  system.txi \
-  testfun.txi \
-  tips.txi \
-  var.txi
+MUNGED_TEXI_SRC = \
+  arith.texi \
+  audio.texi \
+  basics.texi \
+  bugs.texi \
+  container.texi \
+  contrib.texi \
+  cp-idx.texi \
+  data.texi \
+  debug.texi \
+  diffeq.texi \
+  diagperm.texi \
+  dynamic.texi \
+  emacs.texi \
+  errors.texi \
+  eval.texi \
+  expr.texi \
+  fn-idx.texi \
+  func.texi \
+  geometry.texi \
+  gpl.texi \
+  grammar.texi \
+  image.texi \
+  install.texi \
+  interp.texi \
+  intro.texi \
+  io.texi \
+  linalg.texi \
+  matrix.texi \
+  nonlin.texi \
+  numbers.texi \
+  oop.texi \
+  op-idx.texi \
+  optim.texi \
+  package.texi \
+  plot.texi \
+  poly.texi \
+  preface.texi \
+  quad.texi \
+  set.texi \
+  signal.texi \
+  sparse.texi \
+  stats.texi \
+  stmt.texi \
+  strings.texi \
+  system.texi \
+  testfun.texi \
+  tips.texi \
+  var.texi
 
-MUNGED_TEXI_SRC = $(TXI_SRC:.txi=.texi)
+TXI_SRC = $(MUNGED_TEXI_SRC:.texi=.txi)
 
 info_TEXINFOS = octave.texi
 
-nodist_octave_TEXINFOS = \
-  ../conf.texi
-
 octave_TEXINFOS = \
+  ../conf.texi \
   contributors.texi \
   $(MUNGED_TEXI_SRC)
 
 ../conf.texi:
 	$(MAKE) -C .. conf.texi
 
-octave.info octave.dvi octave.pdf octave.html: $(nodist_octave_TEXINFOS) $(octave_TEXINFOS) $(EXAMPLE_FILES)
+$(srcdir)/octave.info octave.dvi octave.pdf octave.html: $(octave_TEXINFOS) $(octave_TEXINFOS) $(EXAMPLE_FILES)
 
-octave.info: $(IMAGES_TXT)
+$(srcdir)/octave.info: $(IMAGES_TXT)
 
 octave.dvi octave.ps: $(IMAGES_EPS)
 
 octave.pdf: $(IMAGES_PDF)
 
 octave.html: $(IMAGES_PNG)
 
-
 all-local: dvi html pdf ps doc-cache
 
 # Install doc-cache of help files
 install-data-local:
 	$(MKDIR_P) $(DESTDIR)$(octetcdir)
 	$(INSTALL_DATA) doc-cache $(DESTDIR)$(octetcdir)/doc-cache
 
 uninstall-local:
 	rm -f $(DESTDIR)$(octetcdir)/doc-cache
 
-DOCSTRING_FILES = $(TOPDIR)/src/DOCSTRINGS $(TOPDIR)/scripts/DOCSTRINGS
-
-$(TOPDIR)/src/DOCSTRINGS:
-	$(MAKE) -C $(TOPDIR)/src DOCSTRINGS
-
-$(TOPDIR)/scripts/DOCSTRINGS:
-	$(MAKE) -C $(TOPDIR)/scripts DOCSTRINGS
+DOCSTRING_FILES = $(shell $(srcdir)/find-docstring-files.sh "$(top_srcdir)")
 
 doc-cache: $(DOCSTRING_FILES) mk_doc_cache.m
 	$(TOPDIR)/run-octave -f -q -H $(srcdir)/mk_doc_cache.m doc-cache $(DOCSTRING_FILES) || { rm -f doc-cache; exit 1; }
 
 $(MUNGED_TEXI_SRC): $(DOCSTRING_FILES) munge-texi$(BUILD_EXEEXT)
 
 munge-texi$(BUILD_EXEEXT): munge-texi.cc
 	$(BUILD_CXX) $(BUILD_CXXFLAGS) -o $@ $^ $(BUILD_LDFLAGS)
 
 .txi.texi:
-	./munge-texi $(DOCSTRING_FILES) < $< > $@-t
+	./munge-texi $(top_srcdir) $(DOCSTRING_FILES) < $< > $@-t
 	mv $@-t $@
 
 contributors.texi: contributors.in
 	$(AWK) -f $(srcdir)/mkcontrib.awk $(srcdir)/contributors.in > $@-t
 	mv $@-t $@
 
 ../../INSTALL.OCTAVE: install.texi
 	rm -f INSTALL
@@ -205,33 +196,23 @@ contributors.texi: contributors.in
 	-$(MAKEINFO) -D BUGSONLY \
 	  --no-validate --no-headers --no-split --output BUGS \
 	  -I.. -I$(srcdir) -I$(srcdir)/.. $<
 	mv BUGS ../../BUGS
 
 EXTRA_DIST = \
   config-images.sh \
   contributors.in \
+  find-docstring-files.sh \
   images \
   images.mk \
   mk_doc_cache.m \
   mkcontrib.awk \
   munge-texi.cc \
   $(IMAGES) \
   $(IMAGES_SRC) \
   $(TXI_SRC)
 
 DISTCLEANFILES = $(octave_TEXINFOS) doc-cache munge-texi$(BUILD_EXEEXT)
 
 MAINTAINERCLEANFILES = $(IMAGES)
 
-## .texi files are generated files, not primary sources, and should not 
-## be distributed.  Automake, however, does not create rules to generate
-## pdf and html documentation unless the info and texi files will be
-## distributed.  Various hacks, including using the nodist_ prefix and 
-## DISTCLEANFILES, do not work.  The current solution is to build the texi
-## files and create the correct Makefile rules and then use the dist-hook
-## feature to remove the .texi files from the distribution just before it 
-## is archived in a tar file.
-dist-hook:
-	( cd $(distdir) ; rm -f $(octave_TEXINFOS) ; ) 
-
-.NOTPARALLEL:
+.NOPARALLEL:
diff --git a/doc/interpreter/basics.txi b/doc/interpreter/basics.txi
--- a/doc/interpreter/basics.txi
+++ b/doc/interpreter/basics.txi
@@ -289,27 +289,27 @@ the following list.  These files may con
 including function definitions.
 
 @cindex startup files
 
 @table @code
 @item @var{octave-home}/share/octave/site/m/startup/octaverc
 @cindex site startup file
 where @var{octave-home} is the directory in which Octave is installed
-(the default is @file{@value{OCTAVEHOME}}).
+(the default is @file{/usr/local}).
 This file is provided so that changes to the default Octave environment 
 can be made globally for all users at your site for all versions of Octave
 you have installed.  Care should be taken when making changes to this file 
 since all users of Octave at your site will be affected.  The default file 
 may be overridden by the environment variable @w{@code{OCTAVE_SITE_INITFILE}}.
 
 @item @var{octave-home}/share/octave/@var{version}/m/startup/octaverc
 @cindex version startup file
 where @var{octave-home} is the directory in which Octave is
-installed (the default is @file{@value{OCTAVEHOME}}), and @var{version}
+installed (the default is @file{/usr/local}), and @var{version}
 is the version number of Octave.  This file is provided so that changes
 to the default Octave environment can be made globally for all users of
 a particular version of Octave.  Care should be taken when making
 changes to this file since all users of Octave at your site will be
 affected.  The default file may be overridden by the environment variable
 @w{@code{OCTAVE_VERSION_INITFILE}}.
 
 @item ~/.octaverc
diff --git a/doc/interpreter/dynamic.txi b/doc/interpreter/dynamic.txi
--- a/doc/interpreter/dynamic.txi
+++ b/doc/interpreter/dynamic.txi
@@ -12,30 +12,16 @@
 @c ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 @c FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 @c for more details.
 @c 
 @c You should have received a copy of the GNU General Public License
 @c along with Octave; see the file COPYING.  If not, see
 @c <http://www.gnu.org/licenses/>.
 
-@macro examplefile{file}
-@example
-@group
-@verbatiminclude @value{abs_top_srcdir}/examples/\file\
-@end group
-@end example
-@end macro
-
-@macro longexamplefile{file}
-@example
-@verbatiminclude @value{abs_top_srcdir}/examples/\file\
-@end example
-@end macro
-
 @node Dynamically Linked Functions
 @appendix Dynamically Linked Functions
 @cindex dynamic-linking
 
 Octave has the possibility of including compiled code as dynamically
 linked extensions and then using these extensions as if they were part
 of Octave itself.  Octave can call C++ code
 through its native oct-file interface or C code through its mex
@@ -107,17 +93,21 @@ will cause Octave to abort.
 
 The basic command to build oct-files is @code{mkoctfile} and it can be
 call from within octave or from the command line.
 
 @DOCSTRING(mkoctfile)
 
 Consider the short example
 
-@examplefile{helloworld.cc}
+@example
+@group
+@EXAMPLEFILE(helloworld.cc)
+@end group
+@end example
 
 This example although short introduces the basics of writing a C++
 function that can be dynamically linked to Octave.  The easiest way to
 make available most of the definitions that might be necessary for an
 oct-file in Octave is to use the @code{#include <octave/oct.h>}
 header.
 
 The macro that defines the entry point into the dynamically loaded
@@ -289,17 +279,21 @@ an external library.
 Operators such an @code{+}, @code{-}, or @code{*} can be used on the
 majority of the above types.  In addition there are a number of methods
 that are of interest only for matrices such as @code{transpose},
 @code{hermitian}, @code{solve}, etc.
 
 The typical way to extract a matrix or array from the input arguments of
 @w{@code{DEFUN_DLD}} function is as follows
 
-@examplefile{addtwomatrices.cc}
+@example
+@group
+@EXAMPLEFILE(addtwomatrices.cc)
+@end group
+@end example
 
 To avoid segmentation faults causing Octave to abort, this function
 explicitly checks that there are sufficient arguments available before
 accessing these arguments.  It then obtains two multi-dimensional arrays
 of type @code{NDArray} and adds these together.  Note that the array_value
 method is called without using the @code{is_matrix_type} type, and instead the
 error_state is checked before returning @code{A + B}.  The reason to
 prefer this is that the arguments might be a type that is not an
@@ -348,17 +342,19 @@ listed below.
 @end multitable
 
 @node Character Strings in Oct-Files
 @subsection Character Strings in Oct-Files
 
 In Octave a character string is just a special @code{Array} class.
 Consider the example 
 
-@longexamplefile{stringdemo.cc}
+@example
+@EXAMPLEFILE(stringdemo.cc)
+@end example
 
 An example of the use of this function is
 
 @example
 @group
 s0 = ["First String"; "Second String"];
 [s1,s2] = stringdemo (s0)
 @result{} s1 = Second String
@@ -409,17 +405,21 @@ retval(0) = octave_value (ch, true);
 @node Cell Arrays in Oct-Files
 @subsection Cell Arrays in Oct-Files
 
 Octave's cell type is equally accessible within oct-files.  A cell
 array is just an array of @code{octave_value}s, and so each element of the cell
 array can then be treated just like any other @code{octave_value}.  A simple
 example is
 
-@examplefile{celldemo.cc}
+@example
+@group
+@EXAMPLEFILE(celldemo.cc)
+@end group
+@end example
 
 Note that cell arrays are used less often in standard oct-files and so
 the @file{Cell.h} header file must be explicitly included.  The rest of this
 example extracts the @code{octave_value}s one by one from the cell array and
 returns be as individual return arguments.  For example consider
 
 @example
 @group
@@ -439,17 +439,19 @@ b3 = test
 
 A structure in Octave is map between a number of fields represented and
 their values.  The Standard Template Library @code{map} class is used,
 with the pair consisting of a @code{std::string} and an octave
 @code{Cell} variable.
 
 A simple example demonstrating the use of structures within oct-files is
 
-@longexamplefile{structdemo.cc}
+@example
+@EXAMPLEFILE(structdemo.cc)
+@end example
 
 An example of its use is
 
 @example
 @group
 x.a = 1; x.b = "test"; x.c = [1, 2];
 structdemo (x, "b")
 @result{} selected = test
@@ -817,17 +819,19 @@ Global variables allow variables in the 
 accessed.  Global variables can easily be accessed with oct-files using
 the support functions @code{get_global_value} and
 @code{set_global_value}.  @code{get_global_value} takes two arguments,
 the first is a string representing the variable name to obtain.  The
 second argument is a boolean argument specifying what to do in the case
 that no global variable of the desired name is found.  An example of the
 use of these two functions is
 
-@longexamplefile{globaldemo.cc}
+@example
+@EXAMPLEFILE(globaldemo.cc)
+@end example
 
 An example of its use is
 
 @example
 @group
 global a b
 b = 10;
 globaldemo ("b")
@@ -856,17 +860,19 @@ be passed as one of
 @item Anonymous Function Handle
 @item Inline Function
 @item String
 @end enumerate
 
 The example below demonstrates an example that accepts all four means of
 passing a function to an oct-file.
 
-@longexamplefile{funcdemo.cc}
+@example
+@EXAMPLEFILE(funcdemo.cc)
+@end example
 
 The first argument to this demonstration is the user supplied function
 and the following arguments are all passed to the user function.
 
 @example
 @group
 funcdemo (@@sin,1)
 @result{} 0.84147
@@ -951,22 +957,26 @@ There is no harm in using @w{@code{F77_X
 Fortran code that is short running and executes a large number of times,
 there is potentially an overhead in doing so.  However, if @w{@code{F77_FCN}}
 is used with code that calls @code{XSTOP}, Octave can generate a
 segmentation fault.
 
 An example of the inclusion of a Fortran function in an oct-file is
 given in the following example, where the C++ wrapper is
 
-@longexamplefile{fortdemo.cc}
+@example
+@EXAMPLEFILE(fortdemo.cc)
+@end example
 
 @noindent
 and the fortran function is
 
-@longexamplefile{fortsub.f}
+@example
+@EXAMPLEFILE(fortsub.f)
+@end example
 
 This example demonstrates most of the features needed to link to an
 external Fortran function, including passing arrays and strings, as well
 as exception handling.  An example of the behavior of this function is
 
 @example
 @group
 [b, s] = fortdemo (1:3)
@@ -1013,17 +1023,19 @@ integers, or if one of the arguments is 
 need additional input parameter checking.
 
 There are several functions within Octave that might be useful for the
 purposes of parameter checking.  These include the methods of the
 octave_value class like @code{is_real_matrix}, etc., but equally include
 more specialized functions.  Some of the more common ones are
 demonstrated in the following example
 
-@longexamplefile{paramdemo.cc}
+@example
+@EXAMPLEFILE(paramdemo.cc)
+@end example
 
 @noindent
 and an example of its use is
 
 @example
 @group
 paramdemo ([1, 2, NaN, Inf])
 @result{} Properties of input array:
@@ -1082,17 +1094,19 @@ allocate any memory that is needed by th
 fortran_vec method or the @w{@code{OCTAVE_LOCAL_BUFFER}} macro.
 
 The Octave unwind_protect mechanism (@ref{The @code{unwind_protect} Statement})
 can also be used in oct-files.  In conjunction with the exception
 handling of Octave, it is important to enforce that certain code is run
 to allow variables, etc. to be restored even if an exception occurs.  An
 example of the use of this mechanism is
 
-@longexamplefile{unwinddemo.cc}
+@example
+@EXAMPLEFILE(unwinddemo.cc)
+@end example
 
 As can be seen in the example
 
 @example
 @group
 unwinddemo (1, 0)
 @result{} Inf
 1 / 0
@@ -1211,17 +1225,21 @@ products, the use of the command @code{m
 One important difference between the use of mex with other products and
 with Octave is that the header file "matrix.h" is implicitly included
 through the inclusion of "mex.h".  This is to avoid a conflict with the
 Octave file "Matrix.h" with operating systems and compilers that don't
 distinguish between filenames in upper and lower case
 
 Consider the short example
 
-@examplefile{firstmexdemo.c}
+@example
+@group
+@EXAMPLEFILE(firstmexdemo.c)
+@end group
+@end example
 
 This simple example demonstrates the basics of writing a mex-file.  The
 entry point into the mex-file is defined by @code{mexFunction}.  Note
 that the function name is not explicitly included in the
 @code{mexFunction} and so there can only be a single @code{mexFunction}
 entry point per-file.  Also the name of the function is determined by the
 name of the mex-file itself.  Therefore if the above function is in the
 file @file{firstmexdemo.c}, it can be compiled with
@@ -1256,17 +1274,21 @@ given by the mex-file, while the help st
 m-file.  This can also be useful to allow a sample implementation of the
 mex-file within the Octave language itself for testing purposes.
 
 Although we cannot have multiple entry points into a single mex-file,
 we can use the @code{mexFunctionName} function to determine what name
 the mex-file was called with.  This can be used to alter the behavior of
 the mex-file based on the function name.  For example if
 
-@examplefile{myfunc.c}
+@example
+@group
+@EXAMPLEFILE(myfunc.c)
+@end group
+@end example
 
 @noindent
 is in file @file{myfunc.c}, and it is compiled with
 
 @example
 @group
 mkoctfile --mex myfunc.c
 ln -s myfunc.mex myfunc2.mex
@@ -1342,17 +1364,19 @@ which the mex-file is built.  This allow
 to support mex-files.  @code{mwSize} is used to define array dimension
 and maximum number or elements, while @code{mwIndex} is used to define
 indexing into arrays.
 
 An example that demonstration how to work with arbitrary real or complex
 double precision arrays is given by the file @file{mypow2.c} as given
 below.
 
-@longexamplefile{mypow2.c}
+@example
+@EXAMPLEFILE(mypow2.c)
+@end example
 
 @noindent
 with an example of its use
 
 @example
 @group
 b = randn(4,1) + 1i * randn(4,1);
 all(b.^2 == mypow2(b))
@@ -1371,17 +1395,19 @@ of rows and columns in a matrix.
 @subsection Character Strings in Mex-Files
 
 As mex-files do not make the distinction between single and double
 quoted strings within Octave, there is perhaps less complexity in the
 use of strings and character matrices in mex-files.  An example of their
 use, that parallels the demo in @file{stringdemo.cc}, is given in the
 file @file{mystring.c}, as seen below.
 
-@longexamplefile{mystring.c}
+@example
+@EXAMPLEFILE(mystring.c)
+@end example
 
 @noindent
 An example of its expected output is
 
 @example
 @group
 mystring(["First String"; "Second String"])
 @result{} s1 = Second String
@@ -1399,17 +1425,21 @@ consecutive in any case.
 @node Cell Arrays with Mex-Files
 @subsection Cell Arrays with Mex-Files
 
 We can perform exactly the same operations in Cell arrays in mex-files
 as we can in oct-files.  An example that reduplicates the functional of
 the @file{celldemo.cc} oct-file in a mex-file is given by
 @file{mycell.c} as below
 
-@examplefile{mycell.c}
+@example
+@group
+@EXAMPLEFILE(mycell.c)
+@end group
+@end example
 
 @noindent
 which as can be seen below has exactly the same behavior as the oct-file
 version.
 
 @example
 @group
 [b1, b2, b3] = mycell (@{1, [1, 2], "test"@})
@@ -1480,17 +1510,19 @@ A difference between the oct-file interf
 mex-file version is that the functions to operate on structures in
 mex-files directly include an @code{index} over the elements of the
 arrays of elements per @code{field}.  Whereas the oct-file structure
 includes a Cell Array per field of the structure.
 
 An example that demonstrates the use of structures in mex-file can be
 found in the file @file{mystruct.c}, as seen below
 
-@longexamplefile{mystruct.c}
+@example
+@EXAMPLEFILE(mystruct.c)
+@end example
 
 An example of the behavior of this function within Octave is then
 
 @example
 a(1).f1 = "f11"; a(1).f2 = "f12"; 
 a(2).f1 = "f21"; a(2).f2 = "f22";
 b = mystruct(a)
 @result{} field f1(0) = f11
@@ -1569,26 +1601,30 @@ nz = Jc[n];
 @noindent
 returns the actual number of non-zero elements stored in the matrix in
 @code{nz}.  As the arrays returned by @code{mxGetPr} and @code{mxGetPi}
 only contain the non-zero values of the matrix, we also need a pointer
 to the rows of the non-zero elements, and this is given by
 @code{mxGetIr}.  A complete example of the use of sparse matrices in
 mex-files is given by the file @file{mysparse.c} as seen below
 
-@longexamplefile{mysparse.c}
+@example
+@EXAMPLEFILE(mysparse.c)
+@end example
 
 @node Calling Other Functions in Mex-Files
 @subsection Calling Other Functions in Mex-Files
 
 It is also possible call other Octave functions from within a mex-file
 using @code{mexCallMATLAB}.  An example of the use of
 @code{mexCallMATLAB} can be see in the example below
 
-@longexamplefile{myfeval.c}
+@example
+@EXAMPLEFILE(myfeval.c)
+@end example
 
 If this code is in the file @file{myfeval.c}, and is compiled to
 @file{myfeval.mex}, then an example of its use is
 
 @example
 @group
 myfeval("sin", 1)
 a = myfeval("sin", 1)
@@ -1611,17 +1647,21 @@ within a mex-file.
 @section Standalone Programs
 
 The libraries Octave itself uses, can be utilized in standalone
 applications.  These applications then have access, for example, to the
 array and matrix classes as well as to all the Octave algorithms.  The
 following C++ program, uses class Matrix from liboctave.a or
 liboctave.so.
 
-@examplefile{standalone.cc}
+@example
+@group
+@EXAMPLEFILE(standalone.cc)
+@end group
+@end example
 
 @noindent
 mkoctfile can then be used to build a standalone application with a
 command like
 
 @example
 @group
 $ mkoctfile --link-stand-alone standalone.cc -o standalone
@@ -1636,17 +1676,21 @@ Hello Octave world!
 Note that the application @code{hello} will be dynamically linked
 against the octave libraries and any octave support libraries.  The above
 allows the Octave math libraries to be used by an application.  It does
 not however allow the script files, oct-files or builtin functions of
 Octave to be used by the application.  To do that the Octave interpreter
 needs to be initialized first.  An example of how to do this can then be
 seen in the code
 
-@examplefile{embedded.cc}
+@example
+@group
+@EXAMPLEFILE(embedded.cc)
+@end group
+@end example
 
 @noindent
 which is compiled and run as before as a standalone application with
 
 @example
 @group
 $ mkoctfile --link-stand-alone embedded.cc -o embedded
 $ ./embedded
diff --git a/doc/interpreter/find-docstring-files.sh b/doc/interpreter/find-docstring-files.sh
new file mode 100755
--- /dev/null
+++ b/doc/interpreter/find-docstring-files.sh
@@ -0,0 +1,22 @@
+#! /bin/sh
+
+if [ $# -ne 1 ]; then
+  echo "usage: find-docstring-files TOP-SRCDIR" 1>&2
+  exit 1
+fi
+
+## if there is a file in teh build directory tree, assume it is
+## the file we are looking for.  Otherwise, get the one from the
+## source tree.
+
+if [ -f "../../scripts/DOCSTRINGS" ]; then
+  echo "../../scripts/DOCSTRINGS"
+else
+  echo "$1/scripts/DOCSTRINGS"
+fi
+
+if [ -f "../../src/DOCSTRINGS" ]; then
+  echo "../../src/DOCSTRINGS"
+else
+  echo "$1/src/DOCSTRINGS"
+fi
diff --git a/doc/interpreter/geometry.txi b/doc/interpreter/geometry.txi
--- a/doc/interpreter/geometry.txi
+++ b/doc/interpreter/geometry.txi
@@ -71,27 +71,25 @@ y = rand (10, 1);
 T = delaunay (x, y);
 X = [ x(T(:,1)); x(T(:,2)); x(T(:,3)); x(T(:,1)) ];
 Y = [ y(T(:,1)); y(T(:,2)); y(T(:,3)); y(T(:,1)) ];
 axis ([0, 1, 0, 1]);
 plot(X, Y, "b", x, y, "r*");
 @end group
 @end example
 
-@ifset HAVE_QHULL
 @ifnotinfo
 @noindent
 The result of which can be seen in @ref{fig:delaunay}.
 
 @float Figure,fig:delaunay
 @center @image{delaunay,4in}
 @caption{Delaunay triangulation of a random set of points}
 @end float
 @end ifnotinfo
-@end ifset
 
 @menu
 * Plotting the Triangulation::
 * Identifying points in Triangulation::
 @end menu
 
 @node Plotting the Triangulation
 @subsection Plotting the Triangulation
@@ -300,30 +298,28 @@ y = rand(10,1);
 tri = delaunay (x, y);
 [vx, vy] = voronoi (x, y, tri);
 triplot (tri, x, y, "b");
 hold on;
 plot (vx, vy, "r");
 @end group
 @end example
 
-@ifset HAVE_QHULL
 @ifnotinfo
 @noindent
 The result of which can be seen in @ref{fig:voronoi}.  Note that the
 circum-circle of one of the triangles has been added to this figure, to
 make the relationship between the Delaunay tessellation and the Voronoi
 diagram clearer.
 
 @float Figure,fig:voronoi
 @center @image{voronoi,4in}
 @caption{Delaunay triangulation and Voronoi diagram of a random set of points}
 @end float
 @end ifnotinfo
-@end ifset
 
 Additional information about the size of the facets of a Voronoi
 diagram, and which points of a set of points is in a polygon can be had
 with the @code{polyarea} and @code{inpolygon} functions respectively.
 
 @DOCSTRING(polyarea)
 
 An example of the use of @code{polyarea} might be 
@@ -394,27 +390,25 @@ An example of the use of @code{convhull}
 x = -3:0.05:3;
 y = abs (sin (x));
 k = convhull (x, y);
 plot (x(k), y(k), "r-", x, y, "b+");
 axis ([-3.05, 3.05, -0.05, 1.05]);
 @end group
 @end example
 
-@ifset HAVE_QHULL
 @ifnotinfo
 @noindent
 The output of the above can be seen in @ref{fig:convhull}.
 
 @float Figure,fig:convhull
 @center @image{convhull,4in}
 @caption{The convex hull of a simple set of points}
 @end float
 @end ifnotinfo
-@end ifset
 
 @node Interpolation on Scattered Data
 @section Interpolation on Scattered Data
 
 An important use of the Delaunay tessellation is that it can be used to
 interpolate from scattered data to an arbitrary set of points.  To do
 this the N-simplex of the known set of points is calculated with
 @code{delaunay}, @code{delaunay3} or @code{delaunayn}.  Then the
@@ -438,21 +432,19 @@ rand("state",1);
 x=2*rand(1000,1)-1;
 y=2*rand(size(x))-1;
 z=sin(2*(x.^2+y.^2));
 [xx,yy]=meshgrid(linspace(-1,1,32));
 griddata(x,y,z,xx,yy);
 @end group
 @end example
 
-@ifset HAVE_QHULL
 @noindent
 that interpolates from a random scattering of points, to a uniform
 grid. 
 @ifnotinfo
 The output of the above can be seen in @ref{fig:griddata}.
 
 @float Figure,fig:griddata
 @center @image{griddata,4in}
 @caption{Interpolation from a scattered data to a regular grid}
 @end float
 @end ifnotinfo
-@end ifset
diff --git a/doc/interpreter/munge-texi.cc b/doc/interpreter/munge-texi.cc
--- a/doc/interpreter/munge-texi.cc
+++ b/doc/interpreter/munge-texi.cc
@@ -28,31 +28,33 @@ along with Octave; see the file COPYING.
 #include <iostream>
 #include <fstream>
 #include <string>
 #include <map>
 
 #include <cstdlib>
 #include <cstring>
 
+static std::string top_srcdir;
+
 static const char doc_delim = '';
 
 static std::map<std::string, std::string> help_text;
 
 static void
 fatal (const std::string& msg)
 {
   std::cerr << msg << "\n";
   exit (1);
 }
 
 static void
 usage (void)
 {
-  std::cerr << "usage: munge-texi DOCSTRING-FILE file ...\n";
+  std::cerr << "usage: munge-texi TOP-SRCDIR DOCSTRING-FILE < file\n";
   exit (1);
 }
 
 static std::string
 extract_symbol_name (std::istream& is)
 {
   std::string symbol_name;
 
@@ -203,106 +205,173 @@ process_doc_file (const std::string& fna
 	    }
 	}
       while (! symbol_name.empty ());
     }
   else
     fatal ("unable to open docfile");
 }
 
+static bool
+recover_from_macro (std::ostream& os, char *buf, int i)
+{
+  bool bol = false;
+
+  buf[i] = '\0';
+  os << buf;
+
+  if (buf[i - 1] == '\n')
+    bol = true;
+
+  return bol;
+}
+
+static void
+process_example_file (const std::string& file_name, std::ostream& os)
+{
+  std::ifstream infile (file_name.c_str ());
+
+  if (infile)
+    {
+      os << "@verbatim\n";
+
+      int c;
+      int clast = 0;
+
+      while ((c = infile.get ()) != EOF)
+	{
+	  os << (char) c;
+	  clast = c;
+	}
+
+      if (clast != '\n')
+	os << "\n";
+
+      os << "@end verbatim\n";
+    }
+  else
+    fatal ("unable to open example file " + file_name);
+}
+
 static void
 process_texi_input_file (std::istream& is, std::ostream& os)
 {
   os << "@c DO NOT EDIT!  Generated automatically by munge-texi.\n\n";
 
   bool bol = true;
 
   int c;
   while ((c = is.get ()) != EOF)
     {
       if (bol)
 	{
 	  if (c == '@')
 	    {
-	      std::string symbol_name;
-
 	      char buf[16];
 	      int i = 0;
 	      buf[i++] = (char) c;
 
-	      if ((   buf[i++] = (char) is.get ()) == 'D'
-		  && (buf[i++] = (char) is.get ()) == 'O'
-		  && (buf[i++] = (char) is.get ()) == 'C'
-		  && (buf[i++] = (char) is.get ()) == 'S'
-		  && (buf[i++] = (char) is.get ()) == 'T'
-		  && (buf[i++] = (char) is.get ()) == 'R'
-		  && (buf[i++] = (char) is.get ()) == 'I'
-		  && (buf[i++] = (char) is.get ()) == 'N'
-		  && (buf[i++] = (char) is.get ()) == 'G'
-		  && (buf[i++] = (char) is.get ()) == '(')
+	      buf[i++] = c = (char) is.get ();
+
+	      if (c == 'D')
 		{
-		  while ((c = is.get ()) != EOF && c != ')')
-		    symbol_name += (char) c;
+		  std::string symbol_name;
 
-		  if (is.eof ())
-		    fatal ("end of file while reading @DOCSTRING command");
-		  else
+		  if (   (buf[i++] = (char) is.get ()) == 'O'
+		      && (buf[i++] = (char) is.get ()) == 'C'
+		      && (buf[i++] = (char) is.get ()) == 'S'
+		      && (buf[i++] = (char) is.get ()) == 'T'
+		      && (buf[i++] = (char) is.get ()) == 'R'
+		      && (buf[i++] = (char) is.get ()) == 'I'
+		      && (buf[i++] = (char) is.get ()) == 'N'
+		      && (buf[i++] = (char) is.get ()) == 'G'
+		      && (buf[i++] = (char) is.get ()) == '(')
 		    {
-		      std::string doc_string = help_text[symbol_name];
-
-		      size_t len = doc_string.length ();
+		      while ((c = is.get ()) != EOF && c != ')')
+			symbol_name += (char) c;
 
-		      int j = 0;
+		      if (is.eof ())
+			fatal ("end of file while reading @DOCSTRING command");
+		      else
+			{
+			  std::string doc_string = help_text[symbol_name];
 
-		      // If there is a leading comment with the file
-		      // name, copy it to the output.
-		      if (len > 1
-			  && doc_string[j] == '@'
-			  && doc_string[j+1] == 'c')
-			{
-			  j = 2;
-			  while (doc_string[j++] != '\n')
-			    /* find eol */;
+			  size_t len = doc_string.length ();
+
+			  int j = 0;
 
-			  os << doc_string.substr (0, j);
-			}
-
-		      while (doc_string[j] == ' ')
-			j++;
+			  // If there is a leading comment with the file
+			  // name, copy it to the output.
+			  if (len > 1
+			      && doc_string[j] == '@'
+			      && doc_string[j+1] == 'c')
+			    {
+			      j = 2;
+			      while (doc_string[j++] != '\n')
+				/* find eol */;
 
-		      if (doc_string.substr (j, 15) == "-*- texinfo -*-")
-			{
-			  j += 15;
+			      os << doc_string.substr (0, j);
+			    }
 
-			  while (isspace (doc_string[j]))
+			  while (doc_string[j] == ' ')
 			    j++;
 
-			  // Make `see also' references in functions
-			  // possible using @anchor{TAG} (new with
-			  // Texinfo 4.0).
+			  if (doc_string.substr (j, 15) == "-*- texinfo -*-")
+			    {
+			      j += 15;
+
+			      while (isspace (doc_string[j]))
+				j++;
 
-			  if (symbol_name[0] == '@')
-			    symbol_name = "@" + symbol_name;
+			      // Make `see also' references in functions
+			      // possible using @anchor{TAG} (new with
+			      // Texinfo 4.0).
+
+			      if (symbol_name[0] == '@')
+				symbol_name = "@" + symbol_name;
+
+			      os << "@anchor{doc-" << symbol_name << "}\n";
 
-			  os << "@anchor{doc-" << symbol_name << "}\n";
-
-			  os << doc_string.substr (j);
+			      os << doc_string.substr (j);
+			    }
+			  else
+			    os << doc_string;
 			}
-		      else
-			os << doc_string;
 		    }
+		  else
+		    bol = recover_from_macro (os, buf, i);
+		}
+	      else if (c == 'E')
+		{
+		  std::string file_name;
+
+		  if (   (buf[i++] = (char) is.get ()) == 'X'
+		      && (buf[i++] = (char) is.get ()) == 'A'
+		      && (buf[i++] = (char) is.get ()) == 'M'
+		      && (buf[i++] = (char) is.get ()) == 'P'
+		      && (buf[i++] = (char) is.get ()) == 'L'
+		      && (buf[i++] = (char) is.get ()) == 'E'
+		      && (buf[i++] = (char) is.get ()) == 'F'
+		      && (buf[i++] = (char) is.get ()) == 'I'
+		      && (buf[i++] = (char) is.get ()) == 'L'
+		      && (buf[i++] = (char) is.get ()) == 'E'
+		      && (buf[i++] = (char) is.get ()) == '(')
+		    {
+		      while ((c = is.get ()) != EOF && c != ')')
+			file_name += (char) c;
+
+		      file_name = top_srcdir + "/examples/" + file_name;
+
+		      process_example_file (file_name, os);
+		    }
+		  else
+		    bol = recover_from_macro (os, buf, i);
 		}
 	      else
-		{
-		  buf[i] = '\0';
-		  os << buf;
-
-		  if (buf[i - 1] == '\n')
-		    bol = true;
-		}
+		bol = recover_from_macro (os, buf, i);
 	    }
 	  else
 	    os.put ((char) c);
 	}
       else
 	{
 	  if (c == '\n')
 	    bol = true;
@@ -310,16 +379,18 @@ process_texi_input_file (std::istream& i
 	  os.put ((char) (c));
 	}
     }
 }
 
 int
 main (int argc, char **argv)
 {
+  top_srcdir = *++argv;
+
   while (*++argv)
     process_doc_file (*argv);
 
   process_texi_input_file (std::cin, std::cout);
 
   return 0;
 }
 
diff --git a/doc/interpreter/oop.txi b/doc/interpreter/oop.txi
--- a/doc/interpreter/oop.txi
+++ b/doc/interpreter/oop.txi
@@ -16,28 +16,16 @@
 @c You should have received a copy of the GNU General Public License
 @c along with Octave; see the file COPYING.  If not, see
 @c <http://www.gnu.org/licenses/>.
 
 @c FIXME
 @c For now can't include "@" character in the path name, and so name
 @c the example directory without the "@"!!
 
-@macro classfile{class, file}
-@example
-@group
-@verbatiminclude @value{abs_top_srcdir}/examples/\class\/\file\
-@end group
-@end example
-@end macro
-
-@macro polynomialfile{file}
-@classfile{@@polynomial,\file\}
-@end macro
-
 @node Object Oriented Programming
 @chapter Object Oriented Programming
 
 Octave includes the capability to include user classes, including the
 features of operator and function overloading.  Equally a user class
 can be used to encapsulate certain properties of the class so that
 they cannot be altered accidentally and can be set up to address the
 issue of class precedence in mixed class operations.
@@ -100,17 +88,21 @@ our polynomial class, we would place the
 the @@polynomial directory.
 
 The constructor of the class, must have the name of the class itself
 and so in our example the constructor with have the name
 @file{@@polynomial/polynomial.m}.  Also ideally when the constructor is
 called with no arguments to should return a value object.  So for example
 our polynomial might look like
 
-@polynomialfile{polynomial.m}
+@example
+@group
+@EXAMPLEFILE(@polynomial/polynomial.m)
+@end group
+@end example
 
 Note that the return value of the constructor must be the output of
 the @code{class} function called with the first argument being a
 structure and the second argument being the class name.  An example of
 the call to this constructor function is then
 
 @example
 p = polynomial ([1, 0, 1]);
@@ -179,37 +171,49 @@ by Octave when displaying a class on the
 that is not terminated with a semicolon.  If this method is not defined,
 then Octave will printed nothing when displaying the contents of a class.
 
 @DOCSTRING(display)
 
 @noindent
 An example of a display method for the polynomial class might be
 
-@polynomialfile{display.m}
+@example
+@group
+@EXAMPLEFILE(@polynomial/display.m)
+@end group
+@end example
 
 @noindent
 Note that in the display method, it makes sense to start the method
 with the line @code{fprintf("%s =", inputname(1))} to be consistent
 with the rest of Octave and print the variable name to be displayed
 when displaying the class. 
 
 To be consistent with the Octave graphic handle classes, a class
 should also define the @code{get} and @code{set} methods.  The
 @code{get} method should accept one or two arguments, and given one
 argument of the appropriate class it should return a structure with
 all of the properties of the class.  For example
 
-@polynomialfile{get.m}
+@example
+@group
+@EXAMPLEFILE(@polynomial/get.m)
+@end group
+@end example
 
 @noindent
 Similarly, the @code{set} method should taken as its first argument an
 object to modify, and then take property/value pairs to be modified. 
 
-@polynomialfile{set.m}
+@example
+@group
+@EXAMPLEFILE(@polynomial/set.m)
+@end group
+@end example
 
 @noindent
 Note that as Octave does not implement pass by reference, than the
 modified object is the return value of the @code{set} method and it
 must be called like
 
 @example
 p = set (p, "a", [1, 0, 0, 0, 1]);
@@ -271,17 +275,21 @@ polynomial at @var{n}.  The meaning of t
 determined by the @code{subsref} method.
 
 @DOCSTRING(subsref)
 
 For example we might decide that indexing with "()" evaluates the
 polynomial and indexing with "@{@}" returns the @var{n}-th coefficient (of @var{n}-th power).
 In this case the @code{subsref} method of our polynomial class might look like
 
-@polynomialfile{subsref.m}
+@example
+@group
+@EXAMPLEFILE(@polynomial/subsref.m)
+@end group
+@end example
 
 The equivalent functionality for subscripted assignments uses the 
 @code{subsasgn} method.
 
 @DOCSTRING(subsasgn)
 
 Note that the @code{subsref} and @code{subsasgn} methods always receive the
 whole index chain, while they usually handle only the first element.  It is the
@@ -291,17 +299,21 @@ usually by forwarding it again to @code{
 If you wish to use the @code{end} keyword in subscripted expressions
 of an object, then the user needs to define the @code{end} method for 
 the class.
 
 @DOCSTRING(end)
 
 For example the @code{end} method for our polynomial class might look like
 
-@polynomialfile{end.m}
+@example
+@group
+@EXAMPLEFILE(@polynomial/end.m)
+@end group
+@end example
 
 @noindent
 which is a fairly generic @code{end} method that has a behavior similar to
 the @code{end} keyword for Octave Array classes.  It can then be used for
 example like
 
 @example
 @group
@@ -408,35 +420,47 @@ output and input arguments, like this:
 @node Function Overloading
 @subsection Function Overloading
 
 Any Octave function can be overloaded, and allows a object specific
 version of this function to be called as needed.  A pertinent example
 for our polynomial class might be to overload the @code{polyval} function
 like
 
-@polynomialfile{polyval.m}
+@example
+@group
+@EXAMPLEFILE(@polynomial/polyval.m)
+@end group
+@end example
 
 This function just hands off the work to the normal Octave @code{polyval}
 function.  Another interesting example for an overloaded function for our
 polynomial class is the @code{plot} function.
 
-@polynomialfile{plot.m}
+@example
+@group
+@EXAMPLEFILE(@polynomial/plot.m)
+@end group
+@end example
 
 @noindent
 which allows polynomials to be plotted in the domain near the region
 of the roots of the polynomial.
 
 Functions that are of particular interest to be overloaded are the class
 conversion functions such as @code{double}.  Overloading these functions 
 allows the @code{cast} function to work with the user class and can aid 
 in the use of methods of other classes with the user class.  An example
 @code{double} function for our polynomial class might look like.
 
-@polynomialfile{double.m}
+@example
+@group
+@EXAMPLEFILE(@polynomial/double.m)
+@end group
+@end example
 
 @node Operator Overloading
 @subsection Operator Overloading
 
 @float Table,tab:overload_ops
 
 @anchor{doc-rdivide} @anchor{doc-plus} @anchor{doc-minus} @anchor{doc-uminus}
 @anchor{doc-uplus} @anchor{doc-times} @anchor{doc-mtimes} @anchor{doc-mrdivide}
@@ -525,17 +549,21 @@ width 0.6pt \tabskip=0pt\cr
 @item @tab  @dfn{display} @tab display (a) @tab Commandline display function @tab
 @end multitable
 @end ifnottex
 @caption{Available overloaded operators and their corresponding class method}
 @end float
 
 An example @code{mtimes} method for our polynomial class might look like
 
-@polynomialfile{mtimes.m}
+@example
+@group
+@EXAMPLEFILE(@polynomial/mtimes.m)
+@end group
+@end example
 
 @node Precedence of Objects
 @subsection Precedence of Objects
 
 Many functions and operators take two or more arguments and so the
 case can easily arise that these functions are called with objects of
 different classes.  It is therefore necessary to determine the precedence
 of which method of which class to call when there are mixed objects given
@@ -554,17 +582,21 @@ 2 * polynomial ([1, 0, 1]);
 
 @noindent
 That mixes an object of the class "double" with an object of the class
 "polynomial".  In this case we like to ensure that the return type of
 the above is of the type "polynomial" and so we use the
 @code{superiorto} function in the class constructor.  In particular our
 polynomial class constructor would be modified to be
 
-@polynomialfile{polynomial_superiorto.m}
+@example
+@group
+@EXAMPLEFILE(@polynomial/polynomial_superiorto.m)
+@end group
+@end example
 
 Note that user classes always have higher precedence than built-in
 Octave types.  So in fact marking our polynomial class higher than the 
 "double" class is in fact not necessary.
 
 
 @node Inheritance and Aggregation
 @section Inheritance and Aggregation
@@ -593,17 +625,21 @@ octave:2> n = [some coefficient vector];
 octave:3> y = filter (n, 1, x);
 @end group
 @end example
 
 The equivalent class could be implemented in a class directory
 @@FIRfilter that is on the octave path.  The constructor is a file
 FIRfilter.m in the class directory.
 
-@classfile{@@FIRfilter,FIRfilter.m}
+@example
+@group
+@EXAMPLEFILE(@FIRfilter/FIRfilter.m)
+@end group
+@end example
 
 As before, the leading comments provide command-line documentation for
 the class constructor.  This constructor is very similar to the
 polynomial class constructor, except that we pass a polynomial object
 as the third argument to the class function, telling octave that the
 FIRfilter class will be derived from the polynomial class.  Our FIR
 filter does not have any data fields, but we must provide a struct to
 the @code{class} function.  The @code{class} function will add an
@@ -618,17 +654,21 @@ determine the inheritance structure.
 
 A class may be a child of more than one class (see the documentation
 for the @code{class} function), and inheritance may be nested.  There
 is no limitation to the number of parents or the level of nesting
 other than memory or other physical issues.
 
 As before, we need a @code{display} method.  A simple example might be
 
-@classfile{@@FIRfilter,display.m}
+@example
+@group
+@EXAMPLEFILE(@FIRfilter/display.m)
+@end group
+@end example
 
 Note that we have used the polynomial field of the struct to display
 the filter coefficients.
 
 Once we have the class constructor and display method, we may create
 an object by calling the class constructor.  We may also check the
 class type and examine the underlying structure.
 
@@ -651,17 +691,21 @@ polynomial = 0.333333 + 0.333333 * X + 0
 @end example
 
 We only need to define a method to actually process data with our
 filter and our class is usable.  It is also useful to provide a means
 of changing the data stored in the class.  Since the fields in the
 underlying struct are private by default, we could provide a mechanism
 to access the fields.  The @code{subsref} method may be used for both.
 
-@classfile{@@FIRfilter,subsref.m}
+@example
+@group
+@EXAMPLEFILE(@FIRfilter/subsref.m)
+@end group
+@end example
 
 The "()" case allows us to filter data using the polynomial provided
 to the constructor.
 
 @example
 @group
 octave:2> f=FIRfilter(polynomial([1 1 1]/3));
 octave:3> x=ones(5,1);
@@ -685,17 +729,21 @@ octave:2> f.polynomial
 ans = 0.333333 + 0.333333 * X + 0.333333 * X ^ 2
 @end group
 @end example
 
 In order to change the contents of the object, we need to define a
 @code{subsasgn} method.  For example, we may make the polynomial field
 publicly writeable.
 
-@classfile{@@FIRfilter,subsasgn.m}
+@example
+@group
+@EXAMPLEFILE(@FIRfilter/subsasgn.m)
+@end group
+@end example
 
 So that
 
 @example
 @group
 octave:6> f=FIRfilter();
 octave:7> f.polynomial = polynomial([1 2 3]);
 f.polynomial = 1 + 2 * X + 3 * X ^ 2
@@ -705,11 +753,15 @@ f.polynomial = 1 + 2 * X + 3 * X ^ 2
 
 Defining the FIRfilter class as a child of the polynomial class
 implies that and FIRfilter object may be used any place that a
 polynomial may be used.  This is not a normal use of a filter, so that
 aggregation may be a more sensible design approach.  In this case, the
 polynomial is simply a field in the class structure.  A class
 constructor for this case might be
 
-@classfile{@@FIRfilter,FIRfilter_aggregation.m}
+@example
+@group
+@EXAMPLEFILE(@FIRfilter/FIRfilter_aggregation.m)
+@end group
+@end example
 
 For our example, the remaining class methods remain unchanged.
diff --git a/doc/interpreter/sparse.txi b/doc/interpreter/sparse.txi
--- a/doc/interpreter/sparse.txi
+++ b/doc/interpreter/sparse.txi
@@ -653,21 +653,17 @@ positive definite matrix.
 @center @image{spmatrix,4in}
 @caption{Structure of simple sparse matrix.}
 @end float
 
 The standard Cholesky factorization of this matrix can be
 obtained by the same command that would be used for a full
 matrix.  This can be visualized with the command 
 @code{r = chol(A); spy(r);}.
-@ifset HAVE_CHOLMOD
-@ifset HAVE_COLAMD
 @xref{fig:simplechol}.
-@end ifset
-@end ifset
 The original matrix had 
 @ifinfo
 @ifnothtml
 43
 @end ifnothtml
 @end ifinfo
 @ifset htmltex
 598
@@ -700,29 +696,25 @@ 399
 @end ifset
 non-zero terms which is a significant improvement.
 
 The Cholesky factorization itself can be used to determine the
 appropriate sparsity preserving reordering of the matrix during the
 factorization, In that case this might be obtained with three return
 arguments as r@code{[r, p, q] = chol(A); spy(r)}.
 
-@ifset HAVE_CHOLMOD
-@ifset HAVE_COLAMD
 @float Figure,fig:simplechol
 @center @image{spchol,4in}
 @caption{Structure of the un-permuted Cholesky factorization of the above matrix.}
 @end float
 
 @float Figure,fig:simplecholperm
 @center @image{spcholperm,4in}
 @caption{Structure of the permuted Cholesky factorization of the above matrix.}
 @end float
-@end ifset
-@end ifset
 
 In the case of an asymmetric matrix, the appropriate sparsity
 preserving permutation is @dfn{colamd} and the factorization using
 this reordering can be visualized using the command @code{q =
 colamd(A); [l, u, p] = lu(A(:,q)); spy(l+u)}.
 
 Finally, Octave implicitly reorders the matrix when using the div (/)
 and ldiv (\) operators, and so no the user does not need to explicitly
@@ -1095,42 +1087,30 @@ solve for the voltages at each vertex @c
 
   V(idx) = S(idx,idx) \ ( Q(idx) - ...
             S(idx,D_nodes) * V(D_nodes));
 @end example
 
 Finally, in order to display the solution, we show each solved voltage 
 value in the z-axis for each simplex vertex.
 @ifset htmltex
-@ifset HAVE_CHOLMOD
-@ifset HAVE_UMFPACK
-@ifset HAVE_COLAMD
 @xref{fig:femmodel}.
 @end ifset
-@end ifset
-@end ifset
-@end ifset
 
 @example
 @group
   elemx = elems(:,[1,2,3,1])';
   xelems = reshape (nodes(elemx, 1), 4, E);
   yelems = reshape (nodes(elemx, 2), 4, E);
   velems = reshape (V(elemx), 4, E);
   plot3 (xelems,yelems,velems,'k'); 
   print ('grid.eps');
 @end group
 @end example
 
 
 @ifset htmltex
-@ifset HAVE_CHOLMOD
-@ifset HAVE_UMFPACK
-@ifset HAVE_COLAMD
 @float Figure,fig:femmodel
 @center @image{grid,4in}
 @caption{Example finite element model the showing triangular elements. 
 The height of each vertex corresponds to the solution value.}
 @end float
 @end ifset
-@end ifset
-@end ifset
-@end ifset
diff --git a/doc/liboctave/Makefile.am b/doc/liboctave/Makefile.am
--- a/doc/liboctave/Makefile.am
+++ b/doc/liboctave/Makefile.am
@@ -28,20 +28,18 @@ AM_MAKEINFOHTMLFLAGS = -I.. -I$(srcdir) 
 
 TEXINFO_TEX = ../texinfo.tex
 
 TEXINPUTS = "..$(PATH_SEPARATOR)$(srcdir)$(PATH_SEPARATOR)$(srcdir)/..$(PATH_SEPARATOR)"
 export TEXINPUTS
 
 info_TEXINFOS = liboctave.texi
 
-nodist_liboctave_TEXINFOS = \
-  ../conf.texi
-
 dist_liboctave_TEXINFOS = \
+  ../conf.texi \
   array.texi \
   bugs.texi \
   cp-idx.texi \
   dae.texi \
   diffeq.texi \
   error.texi \
   factor.texi \
   fn-idx.texi \
diff --git a/examples/Makefile.am b/examples/Makefile.am
--- a/examples/Makefile.am
+++ b/examples/Makefile.am
@@ -63,16 +63,18 @@ FCN_FILE_DIRS =
 
 FCN_FILES =
 
 include @polynomial/module.mk
 include @FIRfilter/module.mk
 
 EXTRA_DIST += $(FCN_FILES)
 
+CLEANFILES = octave.desktop
+
 all-local: octave.desktop
 
 octave.desktop: octave.desktop.in Makefile
 	echo "making $@ from $<"
 	$(SED) < $< > $@-t \
 	  -e "s|%OCTAVE_IMAGEDIR%|${imagedir}|" \
 	  -e "s|%OCTAVE_PREFIX%|${prefix}|"
 	mv $@-t $@
diff --git a/libcruft/ChangeLog b/libcruft/ChangeLog
--- a/libcruft/ChangeLog
+++ b/libcruft/ChangeLog
@@ -1,8 +1,12 @@
+2009-12-03  John W. Eaton  <jwe@octave.org>
+
+	* Makefile.am (DISTCLEANFILES): New variable.
+
 2009-11-26  Jaroslav Hajek  <highegg@gmail.com>
 
 	* blas-xtra/sdot3.f: Use nested cache-aligned loop for general case.
 	* blas-xtra/ddot3.f: Ditto.
 	* blas-xtra/cdotc3.f: Ditto.
 	* blas-xtra/zdotc3.f: Ditto.
 
 2009-11-26  Jaroslav Hajek  <highegg@gmail.com>
diff --git a/libcruft/Makefile.am b/libcruft/Makefile.am
--- a/libcruft/Makefile.am
+++ b/libcruft/Makefile.am
@@ -35,16 +35,18 @@ libcruft_la_LDFLAGS = \
   -release $(version) $(NO_UNDEFINED_LDFLAG) @XTRA_CRUFT_SH_LDFLAGS@
 
 libcruft_la_LIBADD = $(LAPACK_LIBS) $(BLAS_LIBS) $(FLIBS)
 
 libcruft_la_DEPENDENCIES = cruft.def
 
 octinclude_HEADERS =
 
+DISTCLEANFILES = cruft.def
+
 EXTRA_DIST = ChangeLog STOP.patch mkf77def.in
 
 include amos/module.mk
 include blas-xtra/module.mk
 include daspk/module.mk
 include dasrt/module.mk
 include dassl/module.mk
 include fftpack/module.mk
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,12 @@
+2009-12-03  John W. Eaton  <jwe@octave.org>
+
+	* Makefile.am (BUILT_NODISTFILES): New variable.
+
 2009-12-01  Jaroslav Hajek  <highegg@gmail.com>
 
 	* idx-vector.cc (idx_vector::idx_range_rep::unconvert,
 	idx_vector::idx_scalar_rep::unconvert,
 	idx_vector::idx_vector_rep::unconvert,
 	idx_vector::idx_mask_rep::unconvert): New methods.
 	(idx_vector::unconvert): Use them here. Add mask output.
 	* idx-vector.h: Update decls.
diff --git a/liboctave/Makefile.am b/liboctave/Makefile.am
--- a/liboctave/Makefile.am
+++ b/liboctave/Makefile.am
@@ -268,16 +268,21 @@ BUILT_INCS = \
   mx-ops.h \
   $(OPT_INC) \
   $(MX_OP_INC) \
   $(VX_OP_INC) \
   $(SMX_OP_INC)
 
 BUILT_SOURCES = $(BUILT_INCS)
 
+## FIXME -- These files don't need to be distributed.  They do need
+## to be installed.  So we need to add them to a list somewhere so
+## that happens correctly.
+BUILT_NODISTFILES = $(BUILT_INCS)
+
 TEMPLATE_SRC = \
   Array.cc \
   DiagArray2.cc \
   MArray.cc \
   MArray2.cc \
   MArrayN.cc \
   MDiagArray2.cc \
   base-lu.cc \
diff --git a/scripts/@ftp/module.mk b/scripts/@ftp/module.mk
--- a/scripts/@ftp/module.mk
+++ b/scripts/@ftp/module.mk
@@ -15,8 +15,10 @@ FCN_FILE_DIRS += @ftp
   @ftp/mput.m  \
   @ftp/rename.m  \
   @ftp/rmdir.m  \
   @ftp/saveobj.m
 
 FCN_FILES += $(@ftp_FCN_FILES)
 
 PKG_ADD_FILES += @ftp/PKG_ADD
+
+DIRSTAMP_FILES += @ftp/$(octave_dirstamp)
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,33 @@
+2009-12-03  John W. Eaton  <jwe@octave.org>
+
+	* audio/wavwrite.m: Delete generated a.wav file after each test.
+
+	* Makefile.am (DIRSTAMP_FILES, DISTCLEANFILES): New variables.
+	(DOCSTRINGS): Also depend on $(FCN_FILES_IN).  Pass
+	$(FCN_FILES_IN) to mkdoc instead of $(GEN_FCN_FILES).  Tell mkdoc
+	to look for $(FCN_FILES_IN) files in $(srcdir), not build
+	directory.
+	(DISTCLEANFILES): New variable.
+	Don't silence dirstamp, DOCSTRINGS, $(GEN_FCN_FILES), and PKG_ADD
+	rules.
+
+	* audio/module.mk, deprecated/module.mk, elfun/module.mk,
+	help/module.mk, general/module.mk, geometry/module.mk,
+	image/module.mk, io/module.mk, linear-algebra/module.mk,
+	miscellaneous/module.mk, @ftp/module.mk, optimization/module.mk,
+	path/module.mk, pkg/module.mk, plot/module.mk,
+	polynomial/module.mk, set/module.mk, signal/module.mk,
+	sparse/module.mk, specfun/module.mk, special-matrix/module.mk,
+	startup/module.mk, statistics/base/module.mk,
+	statistics/distributions/module.mk, statistics/models/module.mk,
+	statistics/tests/module.mk, strings/module.mk, testfun/module.mk,
+	time/module.mk: Append to DIRSTAMP_FILES.
+
 2009-12-02  Rik <rik@nomad.inbox5.com>
 
 	* image/imread.m: Run test case only if underlying GraphicMagick library
 	exists.
 
 2009-12-02  John W. Eaton  <jwe@octave.org>
 
 	* help/module.mk: Fix typo in previous change.
diff --git a/scripts/Makefile.am b/scripts/Makefile.am
--- a/scripts/Makefile.am
+++ b/scripts/Makefile.am
@@ -33,16 +33,18 @@ EXTRA_DIST = \
   mk-pkg-add
 
 FCN_FILES =
 
 GEN_FCN_FILES =
 
 PKG_ADD_FILES =
 
+DIRSTAMP_FILES =
+
 IMAGES =
 
 include @ftp/module.mk
 include audio/module.mk
 include deprecated/module.mk
 include elfun/module.mk
 include general/module.mk
 include geometry/module.mk
@@ -65,164 +67,141 @@ include startup/module.mk
 include statistics/base/module.mk
 include statistics/distributions/module.mk
 include statistics/models/module.mk
 include statistics/tests/module.mk
 include strings/module.mk
 include testfun/module.mk
 include time/module.mk
 
+DISTCLEANFILES = \
+  gethelp$(BUILD_EXEEXT) \
+  $(PKG_ADD_FILES) \
+  $(DIRSTAMP_FILES) \
+  $(GEN_FCN_FILES)
+
 nobase_fcnfile_DATA = $(FCN_FILES) $(GEN_FCN_FILES)
 
 octave_dirstamp = $(am__leading_dot)dirstamp
 
 @ftp/PKG_ADD: $(@ftp_FCN_FILES) $(@ftp_GEN_FCN_FILES) @ftp/$(octave_dirstamp) mk-pkg-add
-	@echo "generating $@"
-	@$(srcdir)/mk-pkg-add $(srcdir) $(@ftp_FCN_FILES) -- $(@ftp_GEN_FCN_FILES) > $@-t
-	@mv $@-t $@
+	$(srcdir)/mk-pkg-add $(srcdir) $(@ftp_FCN_FILES) -- $(@ftp_GEN_FCN_FILES) > $@-t
+	mv $@-t $@
 
 audio/PKG_ADD: $(audio_FCN_FILES) $(audio_GEN_FCN_FILES) audio/$(octave_dirstamp) mk-pkg-add
-	@echo "generating $@"
-	@$(srcdir)/mk-pkg-add $(srcdir) $(audio_FCN_FILES) -- $(audio_GEN_FCN_FILES) > $@-t
-	@mv $@-t $@
+	$(srcdir)/mk-pkg-add $(srcdir) $(audio_FCN_FILES) -- $(audio_GEN_FCN_FILES) > $@-t
+	mv $@-t $@
 
 deprecated/PKG_ADD: $(deprecated_FCN_FILES) $(deprecated_GEN_FCN_FILES) deprecated/$(octave_dirstamp) mk-pkg-add
-	@echo "generating $@"
-	@$(srcdir)/mk-pkg-add $(srcdir) $(deprecated_FCN_FILES) -- $(deprecated_GEN_FCN_FILES) > $@-t
-	@mv $@-t $@
+	$(srcdir)/mk-pkg-add $(srcdir) $(deprecated_FCN_FILES) -- $(deprecated_GEN_FCN_FILES) > $@-t
+	mv $@-t $@
 
 elfun/PKG_ADD: $(elfun_FCN_FILES) $(elfun_GEN_FCN_FILES) elfun/$(octave_dirstamp) mk-pkg-add
-	@echo "generating $@"
-	@$(srcdir)/mk-pkg-add $(srcdir) $(elfun_FCN_FILES) -- $(elfun_GEN_FCN_FILES) > $@-t
-	@mv $@-t $@
+	$(srcdir)/mk-pkg-add $(srcdir) $(elfun_FCN_FILES) -- $(elfun_GEN_FCN_FILES) > $@-t
+	mv $@-t $@
 
 general/PKG_ADD: $(general_FCN_FILES) $(general_GEN_FCN_FILES) general/$(octave_dirstamp) mk-pkg-add
-	@echo "generating $@"
-	@$(srcdir)/mk-pkg-add $(srcdir) $(general_FCN_FILES) -- $(general_GEN_FCN_FILES) > $@-t
-	@mv $@-t $@
+	$(srcdir)/mk-pkg-add $(srcdir) $(general_FCN_FILES) -- $(general_GEN_FCN_FILES) > $@-t
+	mv $@-t $@
 
 geometry/PKG_ADD: $(geometry_FCN_FILES) $(geometry_GEN_FCN_FILES) geometry/$(octave_dirstamp) mk-pkg-add
-	@echo "generating $@"
-	@$(srcdir)/mk-pkg-add $(srcdir) $(geometry_FCN_FILES) -- $(geometry_GEN_FCN_FILES) > $@-t
-	@mv $@-t $@
+	$(srcdir)/mk-pkg-add $(srcdir) $(geometry_FCN_FILES) -- $(geometry_GEN_FCN_FILES) > $@-t
+	mv $@-t $@
 
 help/PKG_ADD: $(help_FCN_FILES) $(help_GEN_FCN_FILES) help/$(octave_dirstamp) mk-pkg-add
-	@echo "generating $@"
-	@$(srcdir)/mk-pkg-add $(srcdir) $(help_FCN_FILES) -- $(help_GEN_FCN_FILES) > $@-t
-	@mv $@-t $@
+	$(srcdir)/mk-pkg-add $(srcdir) $(help_FCN_FILES) -- $(help_GEN_FCN_FILES) > $@-t
+	mv $@-t $@
 
 image/PKG_ADD: $(image_FCN_FILES) $(image_GEN_FCN_FILES) image/$(octave_dirstamp) mk-pkg-add
-	@echo "generating $@"
-	@$(srcdir)/mk-pkg-add $(srcdir) $(image_FCN_FILES) -- $(image_GEN_FCN_FILES) > $@-t
-	@mv $@-t $@
+	$(srcdir)/mk-pkg-add $(srcdir) $(image_FCN_FILES) -- $(image_GEN_FCN_FILES) > $@-t
+	mv $@-t $@
 
 io/PKG_ADD: $(io_FCN_FILES) $(io_GEN_FCN_FILES) io/$(octave_dirstamp) mk-pkg-add
-	@echo "generating $@"
-	@$(srcdir)/mk-pkg-add $(srcdir) $(io_FCN_FILES) -- $(io_GEN_FCN_FILES) > $@-t
-	@mv $@-t $@
+	$(srcdir)/mk-pkg-add $(srcdir) $(io_FCN_FILES) -- $(io_GEN_FCN_FILES) > $@-t
+	mv $@-t $@
 
 linear-algebra/PKG_ADD: $(linear_algebra_FCN_FILES) $(linear_algebra_GEN_FCN_FILES) linear-algebra/$(octave_dirstamp) mk-pkg-add
-	@echo "generating $@"
-	@$(srcdir)/mk-pkg-add $(srcdir) $(linear_algebra_FCN_FILES) -- $(linear_algebra_GEN_FCN_FILES) > $@-t
-	@mv $@-t $@
+	$(srcdir)/mk-pkg-add $(srcdir) $(linear_algebra_FCN_FILES) -- $(linear_algebra_GEN_FCN_FILES) > $@-t
+	mv $@-t $@
 
 miscellaneous/PKG_ADD: $(miscellaneous_FCN_FILES) $(miscellaneous_GEN_FCN_FILES) miscellaneous/$(octave_dirstamp) mk-pkg-add
-	@echo "generating $@"
-	@$(srcdir)/mk-pkg-add $(srcdir) $(miscellaneous_FCN_FILES) -- $(miscellaneous_GEN_FCN_FILES) > $@-t
-	@mv $@-t $@
+	$(srcdir)/mk-pkg-add $(srcdir) $(miscellaneous_FCN_FILES) -- $(miscellaneous_GEN_FCN_FILES) > $@-t
+	mv $@-t $@
 
 optimization/PKG_ADD: $(optimization_FCN_FILES) $(optimization_GEN_FCN_FILES) optimization/$(octave_dirstamp) mk-pkg-add
-	@echo "generating $@"
-	@$(srcdir)/mk-pkg-add "$(srcdir)" $(optimization_FCN_FILES) -- $(optimization_GEN_FCN_FILES) > $@-t
-	@mv $@-t $@
+	$(srcdir)/mk-pkg-add "$(srcdir)" $(optimization_FCN_FILES) -- $(optimization_GEN_FCN_FILES) > $@-t
+	mv $@-t $@
 
 path/PKG_ADD: $(path_FCN_FILES) $(path_GEN_FCN_FILES) path/$(octave_dirstamp) mk-pkg-add
-	@echo "generating $@"
-	@$(srcdir)/mk-pkg-add $(srcdir) $(path_FCN_FILES) -- $(path_GEN_FCN_FILES) > $@-t
-	@mv $@-t $@
+	$(srcdir)/mk-pkg-add $(srcdir) $(path_FCN_FILES) -- $(path_GEN_FCN_FILES) > $@-t
+	mv $@-t $@
 
 pkg/PKG_ADD: $(pkg_FCN_FILES) $(pkg_GEN_FCN_FILES) pkg/$(octave_dirstamp) mk-pkg-add
-	@echo "generating $@"
-	@$(srcdir)/mk-pkg-add $(srcdir) $(pkg_FCN_FILES) -- $(pkg_GEN_FCN_FILES) > $@-t
-	@mv $@-t $@
+	$(srcdir)/mk-pkg-add $(srcdir) $(pkg_FCN_FILES) -- $(pkg_GEN_FCN_FILES) > $@-t
+	mv $@-t $@
 
 plot/PKG_ADD: $(plot_FCN_FILES) $(plot_GEN_FCN_FILES) plot/$(octave_dirstamp) mk-pkg-add
-	@echo "generating $@"
-	@$(srcdir)/mk-pkg-add $(srcdir) $(plot_FCN_FILES) -- $(plot_GEN_FCN_FILES) > $@-t
-	@mv $@-t $@
+	$(srcdir)/mk-pkg-add $(srcdir) $(plot_FCN_FILES) -- $(plot_GEN_FCN_FILES) > $@-t
+	mv $@-t $@
 
 polynomial/PKG_ADD: $(polynomial_FCN_FILES) $(polynomial_GEN_FCN_FILES) polynomial/$(octave_dirstamp) mk-pkg-add
-	@echo "generating $@"
-	@$(srcdir)/mk-pkg-add $(srcdir) $(polynomial_FCN_FILES) -- $(polynomial_GEN_FCN_FILES) > $@-t
-	@mv $@-t $@
+	$(srcdir)/mk-pkg-add $(srcdir) $(polynomial_FCN_FILES) -- $(polynomial_GEN_FCN_FILES) > $@-t
+	mv $@-t $@
 
 set/PKG_ADD: $(set_FCN_FILES) $(set_GEN_FCN_FILES) set/$(octave_dirstamp) mk-pkg-add
-	@echo "generating $@"
-	@$(srcdir)/mk-pkg-add $(srcdir) $(set_FCN_FILES) -- $(set_GEN_FCN_FILES) > $@-t
-	@mv $@-t $@
+	$(srcdir)/mk-pkg-add $(srcdir) $(set_FCN_FILES) -- $(set_GEN_FCN_FILES) > $@-t
+	mv $@-t $@
 
 signal/PKG_ADD: $(signal_FCN_FILES) $(signal_GEN_FCN_FILES) signal/$(octave_dirstamp) mk-pkg-add
-	@echo "generating $@"
-	@$(srcdir)/mk-pkg-add $(srcdir) $(signal_FCN_FILES) -- $(signal_GEN_FCN_FILES) > $@-t
-	@mv $@-t $@
+	$(srcdir)/mk-pkg-add $(srcdir) $(signal_FCN_FILES) -- $(signal_GEN_FCN_FILES) > $@-t
+	mv $@-t $@
 
 sparse/PKG_ADD: $(sparse_FCN_FILES) $(sparse_GEN_FCN_FILES) sparse/$(octave_dirstamp) mk-pkg-add
-	@echo "generating $@"
-	@$(srcdir)/mk-pkg-add $(srcdir) $(sparse_FCN_FILES) -- $(sparse_GEN_FCN_FILES) > $@-t
-	@mv $@-t $@
+	$(srcdir)/mk-pkg-add $(srcdir) $(sparse_FCN_FILES) -- $(sparse_GEN_FCN_FILES) > $@-t
+	mv $@-t $@
 
 specfun/PKG_ADD: $(specfun_FCN_FILES) $(specfun_GEN_FCN_FILES) specfun/$(octave_dirstamp) mk-pkg-add
-	@echo "generating $@"
-	@$(srcdir)/mk-pkg-add $(srcdir) $(specfun_FCN_FILES) -- $(specfun_GEN_FCN_FILES) > $@-t
-	@mv $@-t $@
+	$(srcdir)/mk-pkg-add $(srcdir) $(specfun_FCN_FILES) -- $(specfun_GEN_FCN_FILES) > $@-t
+	mv $@-t $@
 
 special-matrix/PKG_ADD: $(special_matrix_FCN_FILES) $(special_matrix_GEN_FCN_FILES) special-matrix/$(octave_dirstamp) mk-pkg-add
-	@echo "generating $@"
-	@$(srcdir)/mk-pkg-add $(srcdir) $(special_matrix_FCN_FILES) -- $(special_matrix_GEN_FCN_FILES) > $@-t
-	@mv $@-t $@
+	$(srcdir)/mk-pkg-add $(srcdir) $(special_matrix_FCN_FILES) -- $(special_matrix_GEN_FCN_FILES) > $@-t
+	mv $@-t $@
 
 startup/PKG_ADD: $(startup_FCN_FILES) $(startup_GEN_FCN_FILES) startup/$(octave_dirstamp) mk-pkg-add
-	@echo "generating $@"
-	@$(srcdir)/mk-pkg-add $(srcdir) $(startup_FCN_FILES) -- $(startup_GEN_FCN_FILES) > $@-t
-	@mv $@-t $@
+	$(srcdir)/mk-pkg-add $(srcdir) $(startup_FCN_FILES) -- $(startup_GEN_FCN_FILES) > $@-t
+	mv $@-t $@
 
 statistics/base/PKG_ADD: $(statistics_base_FCN_FILES) $(statistics_base_GEN_FCN_FILES) statistics/base/$(octave_dirstamp) mk-pkg-add
-	@echo "generating $@"
-	@$(srcdir)/mk-pkg-add $(srcdir) $(statistics_base_FCN_FILES) -- $(statistics_base_GEN_FCN_FILES) > $@-t
-	@mv $@-t $@
+	$(srcdir)/mk-pkg-add $(srcdir) $(statistics_base_FCN_FILES) -- $(statistics_base_GEN_FCN_FILES) > $@-t
+	mv $@-t $@
 
 statistics/distributions/PKG_ADD: $(statistics_distributions_FCN_FILES) $(statistics_distributions_GEN_FCN_FILES) statistics/distributions/$(octave_dirstamp) mk-pkg-add
-	@echo "generating $@"
-	@$(srcdir)/mk-pkg-add $(srcdir) $(statistics_distributions_FCN_FILES) -- $(statistics_distributions_GEN_FCN_FILES) > $@-t
-	@mv $@-t $@
+	$(srcdir)/mk-pkg-add $(srcdir) $(statistics_distributions_FCN_FILES) -- $(statistics_distributions_GEN_FCN_FILES) > $@-t
+	mv $@-t $@
 
 statistics/models/PKG_ADD: $(statistics_models_FCN_FILES) $(statistics_models_GEN_FCN_FILES) statistics/models/$(octave_dirstamp) mk-pkg-add
-	@echo "generating $@"
-	@$(srcdir)/mk-pkg-add $(srcdir) $(statistics_models_FCN_FILES) -- $(statistics_models_GEN_FCN_FILES) > $@-t
-	@mv $@-t $@
+	$(srcdir)/mk-pkg-add $(srcdir) $(statistics_models_FCN_FILES) -- $(statistics_models_GEN_FCN_FILES) > $@-t
+	mv $@-t $@
 
 statistics/tests/PKG_ADD: $(statistics_tests_FCN_FILES) $(statistics_tests_GEN_FCN_FILES) statistics/tests/$(octave_dirstamp) mk-pkg-add
-	@echo "generating $@"
-	@$(srcdir)/mk-pkg-add $(srcdir) $(statistics_tests_FCN_FILES) -- $(statistics_tests_GEN_FCN_FILES) > $@-t
-	@mv $@-t $@
+	$(srcdir)/mk-pkg-add $(srcdir) $(statistics_tests_FCN_FILES) -- $(statistics_tests_GEN_FCN_FILES) > $@-t
+	mv $@-t $@
 
 strings/PKG_ADD: $(strings_FCN_FILES) $(strings_GEN_FCN_FILES) strings/$(octave_dirstamp) mk-pkg-add
-	@echo "generating $@"
-	@$(srcdir)/mk-pkg-add $(srcdir) $(strings_FCN_FILES) -- $(strings_GEN_FCN_FILES) > $@-t
-	@mv $@-t $@
+	$(srcdir)/mk-pkg-add $(srcdir) $(strings_FCN_FILES) -- $(strings_GEN_FCN_FILES) > $@-t
+	mv $@-t $@
 
 testfun/PKG_ADD: $(testfun_FCN_FILES) $(testfun_GEN_FCN_FILES) testfun/$(octave_dirstamp) mk-pkg-add
-	@echo "generating $@"
-	@$(srcdir)/mk-pkg-add $(srcdir) $(testfun_FCN_FILES) -- $(testfun_GEN_FCN_FILES) > $@-t
-	@mv $@-t $@
+	$(srcdir)/mk-pkg-add $(srcdir) $(testfun_FCN_FILES) -- $(testfun_GEN_FCN_FILES) > $@-t
+	mv $@-t $@
 
 time/PKG_ADD: $(time_FCN_FILES) $(time_GEN_FCN_FILES) time/$(octave_dirstamp) mk-pkg-add
-	@echo "generating $@"
-	@$(srcdir)/mk-pkg-add $(srcdir) $(time_FCN_FILES) -- $(time_GEN_FCN_FILES) > $@-t
-	@mv $@-t $@
+	$(srcdir)/mk-pkg-add $(srcdir) $(time_FCN_FILES) -- $(time_GEN_FCN_FILES) > $@-t
+	mv $@-t $@
 
 $(@ftp_GEN_FCN_FILES): @ftp/$(octave_dirstamp)
 $(audio_GEN_FCN_FILES): audio/$(octave_dirstamp)
 $(deprecated_GEN_FCN_FILES): deprecated/$(octave_dirstamp)
 $(elfun_GEN_FCN_FILES): elfun/$(octave_dirstamp)
 $(general_GEN_FCN_FILES): general/$(octave_dirstamp)
 $(geometry_GEN_FCN_FILES): geometry/$(octave_dirstamp)
 $(help_GEN_FCN_FILES): help/$(octave_dirstamp)
@@ -245,122 +224,121 @@ time/PKG_ADD: $(time_FCN_FILES) $(time_G
 $(statistics_distributions_GEN_FCN_FILES): statistics/distributions/$(octave_dirstamp)
 $(statistics_models_GEN_FCN_FILES): statistics/models/$(octave_dirstamp)
 $(statistics_tests_GEN_FCN_FILES): statistics/tests/$(octave_dirstamp)
 $(strings_GEN_FCN_FILES): strings/$(octave_dirstamp)
 $(testfun_GEN_FCN_FILES): testfun/$(octave_dirstamp)
 $(time_GEN_FCN_FILES): time/$(octave_dirstamp)
 
 @ftp/$(octave_dirstamp):
-	@$(MKDIR_P) @ftp
-	@: > @ftp/$(octave_dirstamp)
+	$(MKDIR_P) @ftp
+	: > @ftp/$(octave_dirstamp)
 audio/$(octave_dirstamp):
-	@$(MKDIR_P) audio
-	@: > audio/$(octave_dirstamp)
+	$(MKDIR_P) audio
+	: > audio/$(octave_dirstamp)
 deprecated/$(octave_dirstamp):
-	@$(MKDIR_P) deprecated
-	@: > deprecated/$(octave_dirstamp)
+	$(MKDIR_P) deprecated
+	: > deprecated/$(octave_dirstamp)
 elfun/$(octave_dirstamp):
-	@$(MKDIR_P) elfun
-	@: > elfun/$(octave_dirstamp)
+	$(MKDIR_P) elfun
+	: > elfun/$(octave_dirstamp)
 general/$(octave_dirstamp):
-	@$(MKDIR_P) general
-	@: > general/$(octave_dirstamp)
+	$(MKDIR_P) general
+	: > general/$(octave_dirstamp)
 geometry/$(octave_dirstamp):
-	@$(MKDIR_P) geometry
-	@: > geometry/$(octave_dirstamp)
+	$(MKDIR_P) geometry
+	: > geometry/$(octave_dirstamp)
 help/$(octave_dirstamp):
-	@$(MKDIR_P) help
-	@: > help/$(octave_dirstamp)
+	$(MKDIR_P) help
+	: > help/$(octave_dirstamp)
 image/$(octave_dirstamp):
-	@$(MKDIR_P) image
-	@: > image/$(octave_dirstamp)
+	$(MKDIR_P) image
+	: > image/$(octave_dirstamp)
 io/$(octave_dirstamp):
-	@$(MKDIR_P) io
-	@: > io/$(octave_dirstamp)
+	$(MKDIR_P) io
+	: > io/$(octave_dirstamp)
 linear-algebra/$(octave_dirstamp):
-	@$(MKDIR_P) linear-algebra
-	@: > linear-algebra/$(octave_dirstamp)
+	$(MKDIR_P) linear-algebra
+	: > linear-algebra/$(octave_dirstamp)
 miscellaneous/$(octave_dirstamp):
-	@$(MKDIR_P) miscellaneous
-	@: > miscellaneous/$(octave_dirstamp)
+	$(MKDIR_P) miscellaneous
+	: > miscellaneous/$(octave_dirstamp)
 optimization/$(octave_dirstamp):
-	@$(MKDIR_P) optimization
-	@: > optimization/$(octave_dirstamp)
+	$(MKDIR_P) optimization
+	: > optimization/$(octave_dirstamp)
 path/$(octave_dirstamp):
-	@$(MKDIR_P) path
-	@: > path/$(octave_dirstamp)
+	$(MKDIR_P) path
+	: > path/$(octave_dirstamp)
 pkg/$(octave_dirstamp):
-	@$(MKDIR_P) pkg
-	@: > pkg/$(octave_dirstamp)
+	$(MKDIR_P) pkg
+	: > pkg/$(octave_dirstamp)
 plot/$(octave_dirstamp):
-	@$(MKDIR_P) plot
-	@: > plot/$(octave_dirstamp)
+	$(MKDIR_P) plot
+	: > plot/$(octave_dirstamp)
 polynomial/$(octave_dirstamp):
-	@$(MKDIR_P) polynomial
-	@: > polynomial/$(octave_dirstamp)
+	$(MKDIR_P) polynomial
+	: > polynomial/$(octave_dirstamp)
 set/$(octave_dirstamp):
-	@$(MKDIR_P) set
-	@: > set/$(octave_dirstamp)
+	$(MKDIR_P) set
+	: > set/$(octave_dirstamp)
 signal/$(octave_dirstamp):
-	@$(MKDIR_P) signal
-	@: > signal/$(octave_dirstamp)
+	$(MKDIR_P) signal
+	: > signal/$(octave_dirstamp)
 sparse/$(octave_dirstamp):
-	@$(MKDIR_P) sparse
-	@: > sparse/$(octave_dirstamp)
+	$(MKDIR_P) sparse
+	: > sparse/$(octave_dirstamp)
 specfun/$(octave_dirstamp):
-	@$(MKDIR_P) specfun
-	@: > specfun/$(octave_dirstamp)
+	$(MKDIR_P) specfun
+	: > specfun/$(octave_dirstamp)
 special-matrix/$(octave_dirstamp):
-	@$(MKDIR_P) special-matrix
-	@: > special-matrix/$(octave_dirstamp)
+	$(MKDIR_P) special-matrix
+	: > special-matrix/$(octave_dirstamp)
 startup/$(octave_dirstamp):
-	@$(MKDIR_P) startup
-	@: > startup/$(octave_dirstamp)
+	$(MKDIR_P) startup
+	: > startup/$(octave_dirstamp)
 statistics/base/$(octave_dirstamp):
-	@$(MKDIR_P) statistics/base
-	@: > statistics/base/$(octave_dirstamp)
+	$(MKDIR_P) statistics/base
+	: > statistics/base/$(octave_dirstamp)
 statistics/distributions/$(octave_dirstamp):
-	@$(MKDIR_P) statistics/distributions
-	@: > statistics/distributions/$(octave_dirstamp)
+	$(MKDIR_P) statistics/distributions
+	: > statistics/distributions/$(octave_dirstamp)
 statistics/models/$(octave_dirstamp):
-	@$(MKDIR_P) statistics/models
-	@: > statistics/models/$(octave_dirstamp)
+	$(MKDIR_P) statistics/models
+	: > statistics/models/$(octave_dirstamp)
 statistics/tests/$(octave_dirstamp):
-	@$(MKDIR_P) statistics/tests
-	@: > statistics/tests/$(octave_dirstamp)
+	$(MKDIR_P) statistics/tests
+	: > statistics/tests/$(octave_dirstamp)
 strings/$(octave_dirstamp):
-	@$(MKDIR_P) strings
-	@: > strings/$(octave_dirstamp)
+	$(MKDIR_P) strings
+	: > strings/$(octave_dirstamp)
 testfun/$(octave_dirstamp):
-	@$(MKDIR_P) testfun
-	@: > testfun/$(octave_dirstamp)
+	$(MKDIR_P) testfun
+	: > testfun/$(octave_dirstamp)
 time/$(octave_dirstamp):
-	@$(MKDIR_P) time
-	@: > time/$(octave_dirstamp)
+	$(MKDIR_P) time
+	: > time/$(octave_dirstamp)
 
 FCN_FILES_IN = $(GEN_FCN_FILES:.m=.in)
 
 EXTRA_DIST += \
   $(IMAGES) \
   $(FCN_FILES) \
   $(FCN_FILES_IN)
 
 all-local: $(GEN_FCN_FILES) $(PKG_ADD_FILES) DOCSTRINGS
 
-DOCSTRINGS: gethelp$(BUILD_EXEEXT) mkdoc $(FCN_FILES)
-	@echo "generating $@"
-	@$(srcdir)/mkdoc "$(srcdir)" $(FCN_FILES) -- $(GEN_FCN_FILES) > $@.t
-	@mv $@.t $@
+DOCSTRINGS: mkdoc $(FCN_FILES) $(FCN_FILES_IN) gethelp$(BUILD_EXEEXT) 
+	$(srcdir)/mkdoc "$(srcdir)" $(FCN_FILES) $(FCN_FILES_IN) > $@-t
+	$(simple_move_if_change_rule)
 
 gethelp$(BUILD_EXEEXT): gethelp.cc
 	$(BUILD_CXX) $(BUILD_CXXFLAGS) -o $@ $^ $(BUILD_LDFLAGS)
 
 $(GEN_FCN_FILES) : %.m : %.in Makefile
-	@$(do_subst_config_vals)
+	$(do_subst_config_vals)
 
 check-m-sources:
 	@echo -n "checking whether files in source tree are listed in module.mk files..."; \
 	for f in $$(find $(srcdir) -name '*.m'); do \
 	  found=false; \
 	  for m in $(FCN_FILES); do \
 	    if [ "$$f" = $(srcdir)/"$$m" ]; then \
 	      found=true; \
diff --git a/scripts/audio/module.mk b/scripts/audio/module.mk
--- a/scripts/audio/module.mk
+++ b/scripts/audio/module.mk
@@ -9,8 +9,10 @@ audio_FCN_FILES = \
   audio/saveaudio.m \
   audio/setaudio.m \
   audio/wavread.m \
   audio/wavwrite.m
 
 FCN_FILES += $(audio_FCN_FILES)
 
 PKG_ADD_FILES += audio/PKG_ADD
+
+DIRSTAMP_FILES += audio/$(octave_dirstamp)
diff --git a/scripts/audio/wavwrite.m b/scripts/audio/wavwrite.m
--- a/scripts/audio/wavwrite.m
+++ b/scripts/audio/wavwrite.m
@@ -163,24 +163,27 @@ endfunction
 
 %!test
 %! A = [1:10; 1:10]/10;
 %! wavwrite("a.wav", A);
 %! [B, samples_per_sec, bits_per_sample] = wavread("a.wav");
 %! assert(A,B, 10^(-4));
 %! assert(samples_per_sec, 8000);
 %! assert(bits_per_sample, 16);
+%! delete ("a.wav");
 %
 %!test
 %! A=[1:10; 1:10] / 10;
 %! wavwrite("a.wav", A, 4000);
 %! [B, samples_per_sec, bits_per_sample] = wavread("a.wav");
 %! assert(A,B, 10^(-4));
 %! assert(samples_per_sec, 4000);
 %! assert(bits_per_sample, 16);
+%! delete ("a.wav");
 %
 %!test
 %! A=[1:10; 1:10] / 10;
 %! wavwrite("a.wav", A, 4000, 8);
 %! [B, samples_per_sec, bits_per_sample] = wavread("a.wav");
 %! assert(A,B, 10^(-2));
 %! assert(samples_per_sec, 4000);
 %! assert(bits_per_sample, 8);
+%! delete ("a.wav");
diff --git a/scripts/deprecated/module.mk b/scripts/deprecated/module.mk
--- a/scripts/deprecated/module.mk
+++ b/scripts/deprecated/module.mk
@@ -117,8 +117,10 @@ deprecated_FCN_FILES = \
   deprecated/weibull_pdf.m \
   deprecated/weibull_rnd.m \
   deprecated/wiener_rnd.m \
   deprecated/str2mat.m
 
 FCN_FILES += $(deprecated_FCN_FILES)
 
 PKG_ADD_FILES += deprecated/PKG_ADD
+
+DIRSTAMP_FILES += deprecated/$(octave_dirstamp)
diff --git a/scripts/elfun/module.mk b/scripts/elfun/module.mk
--- a/scripts/elfun/module.mk
+++ b/scripts/elfun/module.mk
@@ -25,8 +25,10 @@ elfun_FCN_FILES = \
   elfun/secd.m \
   elfun/sech.m \
   elfun/sind.m \
   elfun/tand.m
 
 FCN_FILES += $(elfun_FCN_FILES)
 
 PKG_ADD_FILES += elfun/PKG_ADD
+
+DIRSTAMP_FILES += elfun/$(octave_dirstamp)
diff --git a/scripts/general/module.mk b/scripts/general/module.mk
--- a/scripts/general/module.mk
+++ b/scripts/general/module.mk
@@ -78,8 +78,10 @@ general_FCN_FILES = \
   general/subsindex.m \
   general/triplequad.m \
   general/trapz.m \
   $(general_PRIVATE_FCN_FILES)
 
 FCN_FILES += $(general_FCN_FILES)
 
 PKG_ADD_FILES += general/PKG_ADD
+
+DIRSTAMP_FILES += general/$(octave_dirstamp)
diff --git a/scripts/geometry/module.mk b/scripts/geometry/module.mk
--- a/scripts/geometry/module.mk
+++ b/scripts/geometry/module.mk
@@ -17,8 +17,10 @@ geometry_FCN_FILES = \
   geometry/trisurf.m \
   geometry/tsearchn.m \
   geometry/voronoi.m \
   geometry/voronoin.m
 
 FCN_FILES += $(geometry_FCN_FILES)
 
 PKG_ADD_FILES += geometry/PKG_ADD
+
+DIRSTAMP_FILES += geometry/$(octave_dirstamp)
diff --git a/scripts/help/module.mk b/scripts/help/module.mk
--- a/scripts/help/module.mk
+++ b/scripts/help/module.mk
@@ -14,8 +14,10 @@ help_FCN_FILES = \
   help/print_usage.m \
   help/type.m \
   help/which.m \
   $(help_PRIVATE_FCN_FILES)
 
 FCN_FILES += $(help_FCN_FILES)
 
 PKG_ADD_FILES += help/PKG_ADD
+
+DIRSTAMP_FILES += help/$(octave_dirstamp)
diff --git a/scripts/image/module.mk b/scripts/image/module.mk
--- a/scripts/image/module.mk
+++ b/scripts/image/module.mk
@@ -40,8 +40,10 @@ image_FCN_FILES = \
   image/winter.m
 
 IMAGES += \
   image/default.img
 
 FCN_FILES += $(image_FCN_FILES)
 
 PKG_ADD_FILES += image/PKG_ADD
+
+DIRSTAMP_FILES += image/$(octave_dirstamp)
diff --git a/scripts/io/module.mk b/scripts/io/module.mk
--- a/scripts/io/module.mk
+++ b/scripts/io/module.mk
@@ -6,8 +6,10 @@ io_FCN_FILES = \
   io/csvwrite.m \
   io/dlmwrite.m \
   io/strread.m \
   io/textread.m
 
 FCN_FILES += $(io_FCN_FILES)
 
 PKG_ADD_FILES += io/PKG_ADD
+
+DIRSTAMP_FILES += io/$(octave_dirstamp)
diff --git a/scripts/linear-algebra/module.mk b/scripts/linear-algebra/module.mk
--- a/scripts/linear-algebra/module.mk
+++ b/scripts/linear-algebra/module.mk
@@ -25,8 +25,10 @@ linear_algebra_FCN_FILES = \
   linear-algebra/subspace.m \
   linear-algebra/trace.m \
   linear-algebra/vec.m \
   linear-algebra/vech.m
 
 FCN_FILES += $(linear_algebra_FCN_FILES)
 
 PKG_ADD_FILES += linear-algebra/PKG_ADD
+
+DIRSTAMP_FILES += linear-algebra/$(octave_dirstamp)
diff --git a/scripts/miscellaneous/module.mk b/scripts/miscellaneous/module.mk
--- a/scripts/miscellaneous/module.mk
+++ b/scripts/miscellaneous/module.mk
@@ -69,8 +69,10 @@ miscellaneous_FCN_FILES = \
   miscellaneous/what.m \
   miscellaneous/xor.m \
   miscellaneous/zip.m \
   $(miscellaneous_PRIVATE_FCN_FILES)
 
 FCN_FILES += $(miscellaneous_FCN_FILES)
 
 PKG_ADD_FILES += miscellaneous/PKG_ADD
+
+DIRSTAMP_FILES += miscellaneous/$(octave_dirstamp)
diff --git a/scripts/optimization/module.mk b/scripts/optimization/module.mk
--- a/scripts/optimization/module.mk
+++ b/scripts/optimization/module.mk
@@ -16,8 +16,10 @@ optimization_FCN_FILES = \
   optimization/pqpnonneg.m \
   optimization/qp.m \
   optimization/sqp.m \
   $(optimization_PRIVATE_FCN_FILES)
 
 FCN_FILES += $(optimization_FCN_FILES)
 
 PKG_ADD_FILES += optimization/PKG_ADD
+
+DIRSTAMP_FILES += optimization/$(octave_dirstamp)
diff --git a/scripts/path/module.mk b/scripts/path/module.mk
--- a/scripts/path/module.mk
+++ b/scripts/path/module.mk
@@ -3,8 +3,10 @@ FCN_FILE_DIRS += path
 path_FCN_FILES = \
   path/matlabroot.m \
   path/pathdef.m \
   path/savepath.m
 
 FCN_FILES += $(path_FCN_FILES)
 
 PKG_ADD_FILES += path/PKG_ADD
+
+DIRSTAMP_FILES += path/$(octave_dirstamp)
diff --git a/scripts/pkg/module.mk b/scripts/pkg/module.mk
--- a/scripts/pkg/module.mk
+++ b/scripts/pkg/module.mk
@@ -1,8 +1,10 @@
 FCN_FILE_DIRS += pkg
 
 pkg_FCN_FILES = \
   pkg/pkg.m
 
 FCN_FILES += $(pkg_FCN_FILES)
 
 PKG_ADD_FILES += pkg/PKG_ADD
+
+DIRSTAMP_FILES += pkg/$(octave_dirstamp)
diff --git a/scripts/plot/module.mk b/scripts/plot/module.mk
--- a/scripts/plot/module.mk
+++ b/scripts/plot/module.mk
@@ -159,8 +159,10 @@ plot_FCN_FILES = \
   plot/ylim.m \
   plot/zlabel.m \
   plot/zlim.m \
   $(plot_PRIVATE_FCN_FILES)
 
 FCN_FILES += $(plot_FCN_FILES)
 
 PKG_ADD_FILES += plot/PKG_ADD
+
+DIRSTAMP_FILES += plot/$(octave_dirstamp)
diff --git a/scripts/polynomial/module.mk b/scripts/polynomial/module.mk
--- a/scripts/polynomial/module.mk
+++ b/scripts/polynomial/module.mk
@@ -23,8 +23,10 @@ polynomial_FCN_FILES = \
   polynomial/residue.m \
   polynomial/roots.m \
   polynomial/spline.m \
   polynomial/unmkpp.m
 
 FCN_FILES += $(polynomial_FCN_FILES)
 
 PKG_ADD_FILES += polynomial/PKG_ADD
+
+DIRSTAMP_FILES += polynomial/$(octave_dirstamp)
diff --git a/scripts/set/module.mk b/scripts/set/module.mk
--- a/scripts/set/module.mk
+++ b/scripts/set/module.mk
@@ -7,8 +7,10 @@ set_FCN_FILES = \
   set/setdiff.m \
   set/setxor.m \
   set/union.m \
   set/unique.m
 
 FCN_FILES += $(set_FCN_FILES)
 
 PKG_ADD_FILES += set/PKG_ADD
+
+DIRSTAMP_FILES += set/$(octave_dirstamp)
diff --git a/scripts/signal/module.mk b/scripts/signal/module.mk
--- a/scripts/signal/module.mk
+++ b/scripts/signal/module.mk
@@ -38,8 +38,10 @@ signal_FCN_FILES = \
   signal/triangle_lw.m \
   signal/triangle_sw.m \
   signal/unwrap.m \
   signal/yulewalker.m
 
 FCN_FILES += $(signal_FCN_FILES)
 
 PKG_ADD_FILES += signal/PKG_ADD
+
+DIRSTAMP_FILES += signal/$(octave_dirstamp)
diff --git a/scripts/sparse/module.mk b/scripts/sparse/module.mk
--- a/scripts/sparse/module.mk
+++ b/scripts/sparse/module.mk
@@ -25,8 +25,10 @@ sparse_FCN_FILES = \
   sparse/spy.m \
   sparse/svds.m \
   sparse/treelayout.m \
   sparse/treeplot.m
 
 FCN_FILES += $(sparse_FCN_FILES)
 
 PKG_ADD_FILES += sparse/PKG_ADD
+
+DIRSTAMP_FILES += sparse/$(octave_dirstamp)
diff --git a/scripts/specfun/module.mk b/scripts/specfun/module.mk
--- a/scripts/specfun/module.mk
+++ b/scripts/specfun/module.mk
@@ -16,8 +16,10 @@ specfun_FCN_FILES = \
   specfun/primes.m \
   specfun/reallog.m \
   specfun/realpow.m \
   specfun/realsqrt.m
 
 FCN_FILES += $(specfun_FCN_FILES)
 
 PKG_ADD_FILES += specfun/PKG_ADD
+
+DIRSTAMP_FILES += specfun/$(octave_dirstamp)
diff --git a/scripts/special-matrix/module.mk b/scripts/special-matrix/module.mk
--- a/scripts/special-matrix/module.mk
+++ b/scripts/special-matrix/module.mk
@@ -11,8 +11,10 @@ special_matrix_FCN_FILES = \
   special-matrix/sylvester_matrix.m \
   special-matrix/toeplitz.m \
   special-matrix/vander.m \
   special-matrix/wilkinson.m
 
 FCN_FILES += $(special_matrix_FCN_FILES)
 
 PKG_ADD_FILES += special-matrix/PKG_ADD
+
+DIRSTAMP_FILES += special-matrix/$(octave_dirstamp)
diff --git a/scripts/startup/module.mk b/scripts/startup/module.mk
--- a/scripts/startup/module.mk
+++ b/scripts/startup/module.mk
@@ -18,8 +18,10 @@ FCN_FILES += \
   $(startup_FCN_FILES) \
   $(SYSTEM_STARTUP_FILE_SRC) \
   $(LOCAL_STARTUP_FILE_SRC)
 
 EXTRA_DIST += \
   $(SYSTEM_INPUTRC_FILE_SRC)
 
 PKG_ADD_FILES += startup/PKG_ADD
+
+DIRSTAMP_FILES += startup/$(octave_dirstamp)
diff --git a/scripts/statistics/base/module.mk b/scripts/statistics/base/module.mk
--- a/scripts/statistics/base/module.mk
+++ b/scripts/statistics/base/module.mk
@@ -35,8 +35,10 @@ statistics_base_FCN_FILES = \
   statistics/base/studentize.m \
   statistics/base/table.m \
   statistics/base/values.m \
   statistics/base/var.m
 
 FCN_FILES += $(statistics_base_FCN_FILES)
 
 PKG_ADD_FILES += statistics/base/PKG_ADD
+
+DIRSTAMP_FILES += statistics/base/$(octave_dirstamp)
diff --git a/scripts/statistics/distributions/module.mk b/scripts/statistics/distributions/module.mk
--- a/scripts/statistics/distributions/module.mk
+++ b/scripts/statistics/distributions/module.mk
@@ -90,8 +90,10 @@ statistics_distributions_FCN_FILES = \
   statistics/distributions/wblinv.m \
   statistics/distributions/wblpdf.m \
   statistics/distributions/wblrnd.m \
   statistics/distributions/wienrnd.m
 
 FCN_FILES += $(statistics_distributions_FCN_FILES)
 
 PKG_ADD_FILES += statistics/distributions/PKG_ADD
+
+DIRSTAMP_FILES += statistics/distributions/$(octave_dirstamp)
diff --git a/scripts/statistics/models/module.mk b/scripts/statistics/models/module.mk
--- a/scripts/statistics/models/module.mk
+++ b/scripts/statistics/models/module.mk
@@ -3,8 +3,10 @@ FCN_FILE_DIRS += statistics/models
 statistics_models_FCN_FILES = \
   statistics/models/logistic_regression.m \
   statistics/models/logistic_regression_derivatives.m \
   statistics/models/logistic_regression_likelihood.m
 
 FCN_FILES += $(statistics_models_FCN_FILES)
 
 PKG_ADD_FILES += statistics/models/PKG_ADD
+
+DIRSTAMP_FILES += statistics/models/$(octave_dirstamp)
diff --git a/scripts/statistics/tests/module.mk b/scripts/statistics/tests/module.mk
--- a/scripts/statistics/tests/module.mk
+++ b/scripts/statistics/tests/module.mk
@@ -25,8 +25,10 @@ statistics_tests_FCN_FILES = \
   statistics/tests/welch_test.m \
   statistics/tests/wilcoxon_test.m \
   statistics/tests/z_test.m \
   statistics/tests/z_test_2.m
 
 FCN_FILES += $(statistics_tests_FCN_FILES)
 
 PKG_ADD_FILES += statistics/tests/PKG_ADD
+
+DIRSTAMP_FILES += statistics/tests/$(octave_dirstamp)
diff --git a/scripts/strings/module.mk b/scripts/strings/module.mk
--- a/scripts/strings/module.mk
+++ b/scripts/strings/module.mk
@@ -32,8 +32,10 @@ strings_FCN_FILES = \
   strings/strtrim.m \
   strings/strtrunc.m \
   strings/substr.m \
   strings/validatestring.m
 
 FCN_FILES += $(strings_FCN_FILES)
 
 PKG_ADD_FILES += strings/PKG_ADD
+
+DIRSTAMP_FILES += strings/$(octave_dirstamp)
diff --git a/scripts/testfun/module.mk b/scripts/testfun/module.mk
--- a/scripts/testfun/module.mk
+++ b/scripts/testfun/module.mk
@@ -7,8 +7,10 @@ testfun_FCN_FILES = \
   testfun/fail.m \
   testfun/rundemos.m \
   testfun/speed.m \
   testfun/test.m
 
 FCN_FILES += $(testfun_FCN_FILES)
 
 PKG_ADD_FILES += testfun/PKG_ADD
+
+DIRSTAMP_FILES += testfun/$(octave_dirstamp)
diff --git a/scripts/time/module.mk b/scripts/time/module.mk
--- a/scripts/time/module.mk
+++ b/scripts/time/module.mk
@@ -15,8 +15,10 @@ time_FCN_FILES = \
   time/etime.m \
   time/is_leap_year.m \
   time/now.m \
   time/weekday.m
 
 FCN_FILES += $(time_FCN_FILES)
 
 PKG_ADD_FILES += time/PKG_ADD
+
+DIRSTAMP_FILES += time/$(octave_dirstamp)
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,42 @@
+2009-12-03  John W. Eaton  <jwe@octave.org>
+
+	* Makefile.am (CLEANFILES): Include DLD-FUNCTIONS/PKG_ADD,
+	doc-files, gendoc.cc, gendoc$(BUILD_EXEEXT), graphics-props.cc,
+	oct-parse.output, $(BUILT_NODISTFILES) in the list.  Remove
+	$(BUILT_SOURCES) from the list.
+	(MAINTAINERCLEANFILES): New variable.
+	(BUILT_DISTFILES): Remove oct-parse.cc and lex.cc from the list.
+	(BUILT_NODISTFILES): Include defaults.h, graphics.h, oct-conf.h,
+	oct-errno.cc, ops.cc, mxarray.h, and version.h in the list.
+	Remove $(OPT_INC) from the list.
+	(BUILT_SOURCES): Include mxarray.h and version.h in the list.
+	(EXTRA_DIST): Include version.h.in in the list.
+	(.cc.df): Don't silence rules.  Omit $(srcdir) from XDEFUN_FILE_NAME.  
+	($(DEF_FILES)): Depend on mkdefs and Makefile.
+	(mxarray.h, version.h): New rules.
+	(DLD-FUNCTIONS/PKG_ADD): Don't silence rules.
+	(builtins.cc, DOCSTRINGS, gendoc.cc, ops.cc, $(OPT_HANDLERS))
+	oct-errno.cc, oct-gperf.h): Don't silence rules.
+	(doc-files, defaults.h, oct-conf.h): Don't silence rules.
+
+	* mxarray.h.in, version.h.in: Use % to delimit substitutions, not @.
+
+	* mkbuiltins: Operate on a list of files passed as arguments.
+
+	* genprops.awk: Write either graphics.h or graphics-props.cc to
+	stdout instead of graphics.h simultaneously with graphics-props.cc
+	ot a file.
+	* Makefile.am (graphics.h, graphics-props.cc): Split into two
+	separate rules.
+
+	* find-defun-files.sh: Omit directory part from .df file names.
+	Operate on .ll and .yy files instead of generated .cc files.
+
 2009-12-02  Rik <rik@nomad.inbox5.com>
 
 	* DLD-FUNCTIONS/urlwrite.cc: Correctly compile code even when libcurl is
 	not present according to configure.
 
 2009-12-01  Jaroslav Hajek  <highegg@gmail.com>
 
 	* ov-bool-mat.h (octave_bool_matrix::octave_bool_matrix (const
diff --git a/src/Makefile.am b/src/Makefile.am
--- a/src/Makefile.am
+++ b/src/Makefile.am
@@ -26,24 +26,53 @@ include ../common.mk
 octlib_LTLIBRARIES = \
   liboctinterp.la
 
 AM_CPPFLAGS = \
   @CPPFLAGS@ -I$(top_srcdir)/libcruft/misc -I../liboctave -I$(top_srcdir)/liboctave -I. -I$(srcdir) 
 
 AUTOMAKE_OPTIONS = subdir-objects
 
-BUILT_DISTFILES = \
-  DOCSTRINGS \
+## Order matters here.  Leave builtins.cc last, because it depends on 
+## $(DEF_FILES), and building those requires all the sources
+## (except builtins.cc) to be available.  List only one of graphics.h
+## and graphics-props.cc because if both are listed, building in
+## parallel will fail.
+BUILT_SOURCES = \
+  defaults.h \
+  graphics.h \
+  lex.cc \
+  mxarray.h \
+  oct-conf.h \
+  oct-errno.cc \
   oct-gperf.h \
   oct-parse.cc \
-  oct-parse.h \
-  lex.cc \
+  ops.cc \
+  version.h \
+  builtins.cc
+
+BUILT_DISTFILES = \
+  oct-gperf.h \
+  oct-parse.h
+
+## FIXME -- These files don't need to be distributed.  Some of them
+## do need to be installed.  So we need to add them to a list somewhere
+## so that happens correctly.
+BUILT_NODISTFILES = \
+  defaults.h \
+  graphics.h \
+  oct-conf.h \
+  oct-errno.cc \
+  ops.cc \
+  mxarray.h \
+  version.h \
   $(OPT_HANDLERS) \
-  $(OPT_INC)
+  $(OPT_INC) \
+  $(DEF_FILES) \
+  builtins.cc
 
 EXTRA_DIST = \
   ChangeLog \
   Makefile.in \
   defaults.h.in \
   find-defun-files.sh \
   genprops.awk \
   graphics.h.in \
@@ -52,30 +81,34 @@ EXTRA_DIST = \
   mkbuiltins \
   mkdefs \
   mkgendoc \
   mkops \
   mxarray.h.in \
   oct-conf.h.in \
   oct-errno.cc.in \
   octave.gperf \
+  version.h.in \
   $(BUILT_DISTFILES)
 
 DLL_CDEFS = @OCTINTERP_DLL_DEFS@
 DLL_CXXDEFS = @OCTINTERP_DLL_DEFS@
 
 .cc.df:	
-	@echo making $@ from $<
-	@(echo "// DO NOT EDIT!  Generated automatically by mkdefs." ; \
-	  echo " XDEFUN_FILE_NAME (\"$<\")" ; \
+	(echo "// DO NOT EDIT!  Generated automatically by mkdefs." ; \
+	  case "$<" in \
+	    $(srcdir)/*) xsrcdir="`echo $< | sed 's,^$(srcdir),src,'`" ;; \
+	    *) xsrcdir="src/$<" ;; \
+	  esac ; \
+	  echo " XDEFUN_FILE_NAME (\"$$xsrcdir\")" ; \
 	  egrep '^(///*|/\*) *PKG_ADD:' $< ; \
 	  $(CXXCPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
 	    $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) \
 	    -DMAKE_BUILTINS $< | $(srcdir)/mkdefs) > $@-t
-	@mv $@-t $@
+	mv $@-t $@
 
 OPT_HANDLERS = \
   DASPK-opts.cc \
   DASRT-opts.cc \
   DASSL-opts.cc \
   LSODE-opts.cc \
   Quad-opts.cc
 
@@ -439,25 +472,28 @@ else
   DLD_STATIC_SRC = $(DLD_FUNCTIONS_SRC)
   OCT_FILES =
 endif
 
 liboctinterp_la_SOURCES = \
   $(DIST_SRC) \
   $(DLD_STATIC_SRC) \
   $(OPERATORS_SRC) \
+  $(OPT_HANDLERS) \
   $(TEMPLATE_INST_SRC)
 
 DLD_DYNAMIC_DEF_FILES = $(DLD_DYNAMIC_SRC:.cc=.df)
 DLD_STATIC_DEF_FILES = $(DLD_STATIC_SRC:.cc=.df)
 
 SRC_DEF_FILES := $(shell $(srcdir)/find-defun-files.sh "$(srcdir)" $(DIST_SRC))
 
 DEF_FILES = $(SRC_DEF_FILES) $(DLD_DYNAMIC_DEF_FILES) $(DLD_STATIC_DEF_FILES)
 
+$(DEF_FILES): mkdefs Makefile
+
 if AMCOND_ENABLE_DYNAMIC_LINKING
   OCTAVE_LIBS = \
     ./liboctinterp.la \
     ../liboctave/liboctave.la \
     ../libcruft/libcruft.la \
     $(FFTW_XLDFLAGS) $(FFTW_XLIBS) \
     $(SPARSE_XLDFLAGS) $(SPARSE_XLIBS) \
     $(GRAPHICS_LDFLAGS) $(GRAPHICS_LIBS) \
@@ -533,89 +569,87 @@ nodist_liboctinterp_la_SOURCES = \
   version.h \
   $(OPT_HANDLERS) \
   $(OPT_INC)
 
 liboctinterp_la_CPPFLAGS = @OCTINTERP_DLL_DEFS@ $(AM_CPPFLAGS)
 
 liboctinterp_la_LDFLAGS = -release $(version) $(NO_UNDEFINED_LDFLAG)
 
-## Order matters here.  Leave builtins.cc last, because it depends on 
-## $(DEF_FILES), and building those requires all the sources
-## (except builtins.cc) to be available.  List only one of graphics.h
-## and graphics-props.cc because if both are listed, building in
-## parallel will vail.
-BUILT_SOURCES = \
-  defaults.h \
-  graphics.h \
-  lex.cc \
-  oct-conf.h \
-  oct-errno.cc \
-  oct-gperf.h \
-  oct-parse.cc \
-  ops.cc \
-  $(OPT_HANDLERS) \
-  $(OPT_INC) \
-  builtins.cc
+CLEANFILES = \
+  DLD-FUNCTIONS/PKG_ADD \
+  doc-files \
+  gendoc.cc \
+  gendoc$(BUILD_EXEEXT) \
+  graphics-props.cc \
+  oct-parse.output \
+  $(BUILT_NODISTFILES)
 
-CLEANFILES = $(BUILT_SOURCES)
+MAINTAINERCLEANFILES = \
+  $(BUILT_DISTFILES)
 
 octave_LDADD = $(OCTAVE_LIBS)
 
 all-local: $(OCT_FILES) DLD-FUNCTIONS/PKG_ADD DOCSTRINGS
 
 lex.lo lex.o oct-parse.lo oct-parse.o: \
   AM_CXXFLAGS := $(filter-out -Wold-style-cast, $(AM_CXXFLAGS))
 
 fltk_backend.lo fltk_backend.o: \
   AM_CXXFLAGS := $(filter-out $(DLL_CXXDEFS), $(AM_CXXFLAGS) $(GRAPHICS_CFLAGS))
 
 # XERBLA = ../libcruft/blas-xtra/xerbla.o
 
 builtins.cc: $(DEF_FILES) mkbuiltins
-	@echo making $@
-	@echo DEF_FILES = $(DEF_FILES)
-	@echo $(DEF_FILES) > def-files
-	@$(srcdir)/mkbuiltins def-files > $@-t
-	@mv $@-t $@
+	$(srcdir)/mkbuiltins $(DEF_FILES) > $@-t
+	mv $@-t $@
+
+mxarray.h: mxarray.h.in Makefile
+	$(SED) < $< \
+	  -e "s|%OCTAVE_IDX_TYPE%|${OCTAVE_IDX_TYPE}|" > $@-t
+	mv $@-t $@
 
-## FIXME -- maybe genprops.awk should write both output files?
-## Or maybe there should be separate commands to generate each file?
-graphics.h graphics-props.cc: graphics.h.in genprops.awk
-	@echo making graphics.h and graphics-props.cc
-	@$(AWK) -f $(srcdir)/genprops.awk $< > graphics.h-t
-	@mv graphics.h-t graphics.h
+version.h: version.h.in Makefile
+	$(SED) < $< \
+	  -e "s|%OCTAVE_API_VERSION%|\"${OCTAVE_API_VERSION}\"|" \
+	  -e "s|%OCTAVE_COPYRIGHT%|\"${OCTAVE_COPYRIGHT}\"|" \
+	  -e "s|%OCTAVE_RELEASE_DATE%|\"${OCTAVE_RELEASE_DATE}\"|" \
+	  -e "s|%OCTAVE_VERSION%|\"${OCTAVE_VERSION}\"|" > $@-t
+	mv $@-t $@
 
-DLD-FUNCTIONS/PKG_ADD: $(DLD_DYNAMIC_DEF_FILES)
+graphics.h: graphics.h.in genprops.awk Makefile
+	$(AWK) -f $(srcdir)/genprops.awk $< > $@-t
+	mv $@-t $@
+
+graphics-props.cc: graphics.h.in genprops.awk Makefile
+	$(AWK) -v emit_graphics_props=1 -f $(srcdir)/genprops.awk $< > $@-t
+	mv $@-t $@
+
+DLD-FUNCTIONS/PKG_ADD: $(DLD_DYNAMIC_DEF_FILES) mk-pkg-add
 	$(srcdir)/mk-pkg-add $(DLD_DYNAMIC_DEF_FILES) > $@-t
-	@mv $@-t $@
+	mv $@-t $@
 
 DOCSTRINGS: gendoc$(BUILD_EXEEXT)
-	@echo making $@
-	@./gendoc > $@-t
-	@mv $@-t $@
+	./gendoc > $@-t
+	mv $@-t $@
 
 doc-files: $(DEF_FILES)
-	@echo making $@
-	@echo DEF_FILES = $(DEF_FILES)
-	@echo $(DEF_FILES) > $@-t
+	echo $(DEF_FILES) > $@-t
 	mv $@-t $@
 
 gendoc.cc: doc-files mkgendoc
-	@echo making $@
-	@$(srcdir)/mkgendoc doc-files > $@-t
-	@mv $@-t $@
+	$(srcdir)/mkgendoc $(srcdidr) doc-files > $@-t
+	mv $@-t $@
 
 gendoc$(BUILD_EXEEXT): gendoc.cc
 	$(BUILD_CXX) $(BUILD_CXXFLAGS) -o $@ $^ $(BUILD_LDFLAGS)
 
 ops.cc: $(OPERATORS_SRC) mkops
-	@echo making $@ from $(OPERATORS_SRC)
-	@$(srcdir)/mkops $(OPERATORS_SRC) > $@-t
-	@mv $@-t $@
+	$(srcdir)/mkops $(OPERATORS_SRC) > $@-t
+	mv $@-t $@
 
 $(DEF_FILES): $(OPT_INC) mkdefs 
 
 install-exec-hook: make-version-links
 
 install-data-hook: install-oct
 
 uninstall-local: remove-version-links uninstall-oct
@@ -658,19 +692,18 @@ uninstall-oct:
 	done
 	rm -f $(DESTDIR)$(octfiledir)/PKG_ADD
 endif
 .PHONY: install-oct uninstall-oct
 
 # Special rules -- these files need special things to be defined.
 
 $(OPT_HANDLERS) : %.cc : $(top_srcdir)/liboctave/%.in $(top_srcdir)/mk-opts.pl
-	@echo making $@ from $<
-	@$(PERL) $(top_srcdir)/mk-opts.pl --opt-handler-fcns $< > $@-t
-	@mv $@-t $@
+	$(PERL) $(top_srcdir)/mk-opts.pl --opt-handler-fcns $< > $@-t
+	mv $@-t $@
 
 ## We require Bison.
 #parse.cc : parse.y
 #	@echo "expect 14 shift/reduce conflicts"
 #	$(YACC) $(YFLAGS) --output=$@ --defines=y.tab.h $<
 
 #lex.cc : lex.l
 #	$(LEX) $(LFLAGS) $< > $(@F)-t
@@ -682,40 +715,39 @@ endif
 
 ## We want to force an update of defaults.h and oct-conf.h every
 ## time make is run because some values may come from the command
 ## line or the environment.  The substitution rules use move-if-change,
 ## so this should not cause trouble if the file already exists and the
 ## newly generated file is not different.
 
 defaults.h: defaults.h.in Makefile
-	@$(do_subst_default_vals)
+	$(do_subst_default_vals)
 
 oct-conf.h: oct-conf.h.in Makefile
-	@$(do_subst_config_vals)
+	$(do_subst_config_vals)
 
 oct-errno.cc: oct-errno.cc.in Makefile
-	@echo "making $@ from $<"
-	@if test -n "$(PERL)"; then \
+	if test -n "$(PERL)"; then \
 	  $(srcdir)/mk-errno-list --perl "$(PERL)" < $< > $@-t; \
 	elif test -n "$(PYTHON)"; then \
 	  $(srcdir)/mk-errno-list --python "$(PYTHON)" < $< > $@-t; \
 	else \
 	  $(SED) '/@SYSDEP_ERRNO_LIST@/D' $< > $@-t; \
 	fi
-	@mv $@-t $@
+	mv $@-t $@
 
 ## Don't use a pipeline to process gperf output since if gperf
 ## is missing but sed is not, the exit status of the pipeline
 ## will still be success and we will end up creating an empty
 ## oct-gperf.h file.
 oct-gperf.h: octave.gperf
 	$(GPERF) -t -C -D -G -L C++ -Z octave_kw_hash $< > $@-t1
-	$(SED) 's,lookup\[,gperf_lookup[,' < $@-t1 > $@-t2
-	mv $@-t2 $@
+	$(SED) 's,lookup\[,gperf_lookup[,' < $@-t1 > $@-t
+	mv $@-t $@
 	rm -f $@-t1
 
 display.df display.lo: CPPFLAGS += $(X11_FLAGS)
 
 DLD-FUNCTIONS/__magick_read__.df: CPPFLAGS += $(MAGICK_CPPFLAGS)
 DLD_FUNCTIONS___magick_read___la_CPPFLAGS = $(AM_CPPFLAGS) $(MAGICK_CPPFLAGS)
 DLD_FUNCTIONS___magick_read___la_LIBADD += $(MAGICK_LDFLAGS) $(MAGICK_LIBS)
 
diff --git a/src/find-defun-files.sh b/src/find-defun-files.sh
--- a/src/find-defun-files.sh
+++ b/src/find-defun-files.sh
@@ -8,16 +8,17 @@ set -e
 
 DEFUN_PATTERN="^[ \t]*DEF(CONSTFUN|CMD|UN|UN_DLD|UNX_DLD|UN_TEXT)[ \t]*\\("
 
 srcdir="$1"
 shift
 
 for arg
 do
-  file=`echo "$arg" | sed 's/\.ll$/.cc/; s/\.yy$/.cc/'`;
-  if [ ! -f $file ]; then
-    file="$srcdir/$file"
+  if [ -f "$arg" ]; then
+    file="$arg"
+  else
+    file="$srcdir/$arg"
   fi
   if [ "`egrep -l "$DEFUN_PATTERN" $file`" ]; then
-    echo "$file" | sed 's/\.cc$/.df/';
+    echo "$file" | sed 's,.*/,,; s/\.\(cc\|yy\|ll\)$/.df/';
   fi
 done
diff --git a/src/genprops.awk b/src/genprops.awk
--- a/src/genprops.awk
+++ b/src/genprops.awk
@@ -11,17 +11,22 @@
 ## ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ## 
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 ##
-## This script is used to generate the graphics.h file from graphics.h.in.
+## Generate the graphics.h file from graphics.h.in and write the
+## output to stdout.
+##
+## If the variable emit_graphics_props is set on the command line,
+## generate the graphics-props.cc file from graphics.h.in and write
+## the output to stdout.
 ##
 ## Lines between the BEGIN_PROPERTIES and END_PROPERTIES markers have
 ## one of the following formats:
 ##
 ##   TYPE NAME
 ##   TYPE NAME QUALIFIERS
 ##   mutable TYPE NAME
 ##   mutable TYPE NAME QUALIFIERS
@@ -388,173 +393,173 @@ function emit_declarations ()
 ##  if (idx > 0)
 ##    print "\nprivate:";
 }
 
 function emit_source ()
 {
   if (class_name)
   {
-    printf ("// ******** %s ********\n\n", class_name) >> filename;
+    printf ("// ******** %s ********\n\n", class_name);
 
     ## constructor
 
     if (base)
-      printf ("base_properties::base_properties (const std::string& ty, const graphics_handle& mh, const graphics_handle& p)\n  : ") >> filename;
+      printf ("base_properties::base_properties (const std::string& ty, const graphics_handle& mh, const graphics_handle& p)\n  : ");
     else
     {
-      printf ("%s::properties::properties (const graphics_handle& mh, const graphics_handle& p)\n", class_name) >> filename;
-      printf ("  : base_properties (go_name, mh, p),\n") >> filename;
+      printf ("%s::properties::properties (const graphics_handle& mh, const graphics_handle& p)\n", class_name);
+      printf ("  : base_properties (go_name, mh, p),\n");
     }
 
     for (i = 1; i <= idx; i++)
     {
       if (ptype[i])
-        printf ("    %s (\"%s\", mh, %s)", name[i], name[i], defval[i]) >> filename;
+        printf ("    %s (\"%s\", mh, %s)", name[i], name[i], defval[i]);
       else
-        printf ("    %s (%s)", name[i], defval[i]) >> filename;
+        printf ("    %s (%s)", name[i], defval[i]);
       if (i < idx)
-        printf (",") >> filename;
-      printf ("\n") >> filename;
+        printf (",");
+      printf ("\n");
     }
 
-    printf ("{\n") >> filename;
+    printf ("{\n");
 
     for (i = 1; i <= idx; i++)
     {
-##    printf ("  insert_static_property (\"%s\", %s);\n", name[i], name[i]) >> filename;
+##    printf ("  insert_static_property (\"%s\", %s);\n", name[i], name[i]);
       if (ptype[i])
       {
-        printf ("  %s.set_id (%s);\n", name[i], toupper(name[i])) >> filename;
+        printf ("  %s.set_id (%s);\n", name[i], toupper(name[i]));
         if (hidden[i])
-          printf ("  %s.set_hidden (true);\n", name[i]) >> filename;
+          printf ("  %s.set_hidden (true);\n", name[i]);
       }
     }
 
-    printf ("  init ();\n}\n\n") >> filename;
+    printf ("  init ();\n}\n\n");
 
     ## set method
 
     if (base)
-      printf ("void\nbase_properties::set (const caseless_str& pname, const std::string& cname, const octave_value& val)\n{\n") >> filename;
+      printf ("void\nbase_properties::set (const caseless_str& pname, const std::string& cname, const octave_value& val)\n{\n");
     else
       printf ("void\n%s::properties::set (const caseless_str& pname_arg, const octave_value& val)\n{\n",
-              class_name) >> filename;
+              class_name);
 
     if (! base)
-      printf ("  const std::set<std::string>& pnames = all_property_names ();\n\n  caseless_str pname = validate_property_name (\"get\", go_name, pnames, pname_arg);\n\n  if (error_state)\n    return;\n\n") >> filename;
+      printf ("  const std::set<std::string>& pnames = all_property_names ();\n\n  caseless_str pname = validate_property_name (\"get\", go_name, pnames, pname_arg);\n\n  if (error_state)\n    return;\n\n");
 
     first = 1;
 
     for (i = 1; i <= idx; i++)
     {
       if (! readonly[i])
       {
         printf ("  %sif (pname.compare (\"%s\"))\n    set_%s (val);\n",
-                (first == 0 ? "else " : ""), name[i], name[i]) >> filename;
+                (first == 0 ? "else " : ""), name[i], name[i]);
         first = 0;
       }
     }
 
     if (base)
-      printf ("  else\n    set_dynamic (pname, cname, val);\n}\n\n") >> filename;
+      printf ("  else\n    set_dynamic (pname, cname, val);\n}\n\n");
     else
-      printf ("  else\n    base_properties::set (pname, \"%s\", val);\n}\n\n", class_name) >> filename;
+      printf ("  else\n    base_properties::set (pname, \"%s\", val);\n}\n\n", class_name);
 
     ## get "all" method
 
     if (base)
     {
-      printf ("octave_value\nbase_properties::get (bool all) const\n{\n") >> filename;
-      printf ("  Octave_map m = get_dynamic (all).map_value ();\n\n") >> filename;
+      printf ("octave_value\nbase_properties::get (bool all) const\n{\n");
+      printf ("  Octave_map m = get_dynamic (all).map_value ();\n\n");
     }
     else
     {
-      printf ("octave_value\n%s::properties::get (bool all) const\n{\n", class_name) >> filename;
-      printf ("  Octave_map m = base_properties::get (all).map_value ();\n\n") >> filename;
+      printf ("octave_value\n%s::properties::get (bool all) const\n{\n", class_name);
+      printf ("  Octave_map m = base_properties::get (all).map_value ();\n\n");
     }
 
     for (i = 1; i <= idx; i++)
     {
       if (hidden[i])
         printf ("  if (all)\n    m.assign (\"%s\", get_%s ()%s);\n", name[i], name[i],
-                (type[i] == "handle_property" || type[i] == "graphics_handle" ? ".as_octave_value ()" : "")) >> filename;
+                (type[i] == "handle_property" || type[i] == "graphics_handle" ? ".as_octave_value ()" : ""));
       else
         printf ("  m.assign (\"%s\", get_%s ()%s);\n", name[i], name[i],
-                (type[i] == "handle_property" || type[i] == "graphics_handle" ? ".as_octave_value ()" : "")) >> filename;
+                (type[i] == "handle_property" || type[i] == "graphics_handle" ? ".as_octave_value ()" : ""));
     }
 
-    printf ("\n  return m;\n}\n\n") >> filename;
+    printf ("\n  return m;\n}\n\n");
 
     ## get "one" method
 
     if (base)
-      printf ("octave_value\nbase_properties::get (const caseless_str& pname) const\n{\n") >> filename;
+      printf ("octave_value\nbase_properties::get (const caseless_str& pname) const\n{\n");
     else
       printf ("octave_value\n%s::properties::get (const caseless_str& pname_arg) const\n{\n",
-              class_name) >> filename;
-    printf ("  octave_value retval;\n\n") >> filename;
+              class_name);
+    printf ("  octave_value retval;\n\n");
 
     if (! base)
-      printf ("  const std::set<std::string>& pnames = all_property_names ();\n\n  caseless_str pname = validate_property_name (\"get\", go_name, pnames, pname_arg);\n\n  if (error_state)\n    return retval;\n\n") >> filename;
+      printf ("  const std::set<std::string>& pnames = all_property_names ();\n\n  caseless_str pname = validate_property_name (\"get\", go_name, pnames, pname_arg);\n\n  if (error_state)\n    return retval;\n\n");
 
     for (i = 1; i<= idx; i++)
     {
       printf ("  %sif (pname.compare (\"%s\"))\n",
-              (i > 1 ? "else " : ""), name[i]) >> filename;
+              (i > 1 ? "else " : ""), name[i]);
       printf ("    retval = get_%s ()%s;\n", name[i],
-              (type[i] == "handle_property" || type[i] == "graphics_handle" ? ".as_octave_value ()" : "")) >> filename;
+              (type[i] == "handle_property" || type[i] == "graphics_handle" ? ".as_octave_value ()" : ""));
     }
 
     if (base)
-      printf ("  else\n    retval = get_dynamic (pname);\n\n") >> filename;
+      printf ("  else\n    retval = get_dynamic (pname);\n\n");
     else
-      printf ("  else\n    retval = base_properties::get (pname);\n\n") >> filename;
-    printf ("  return retval;\n}\n\n") >> filename;
+      printf ("  else\n    retval = base_properties::get (pname);\n\n");
+    printf ("  return retval;\n}\n\n");
 
     ## get_property method
 
     if (base)
-      printf ("property\nbase_properties::get_property (const caseless_str& pname)\n{\n") >> filename;
+      printf ("property\nbase_properties::get_property (const caseless_str& pname)\n{\n");
     else
       printf ("property\n%s::properties::get_property (const caseless_str& pname_arg)\n{\n",
-              class_name) >> filename;
+              class_name);
 
     if (! base)
-      printf ("  const std::set<std::string>& pnames = all_property_names ();\n\n  caseless_str pname = validate_property_name (\"get\", go_name, pnames, pname_arg);\n\n  if (error_state)\n    return property ();\n\n") >> filename;
+      printf ("  const std::set<std::string>& pnames = all_property_names ();\n\n  caseless_str pname = validate_property_name (\"get\", go_name, pnames, pname_arg);\n\n  if (error_state)\n    return property ();\n\n");
 
     for (i = 1; i<= idx; i++)
     {
       if (ptype[i])
       {
         printf ("  %sif (pname.compare (\"%s\"))\n",
-                (i > 1 ? "else " : ""), name[i]) >> filename;
-        printf ("    return property (&%s, true);\n", name[i]) >> filename;
+                (i > 1 ? "else " : ""), name[i]);
+        printf ("    return property (&%s, true);\n", name[i]);
       }
     }
 
     if (base)
-      printf ("  else\n    return get_property_dynamic (pname);\n") >> filename;
+      printf ("  else\n    return get_property_dynamic (pname);\n");
     else
-      printf ("  else\n    return base_properties::get_property (pname);\n") >> filename;
-    printf ("}\n\n") >> filename;
+      printf ("  else\n    return base_properties::get_property (pname);\n");
+    printf ("}\n\n");
 
 
     ## factory defaults method
 
     if (base)
     {
-      printf ("property_list::pval_map_type\nbase_properties::factory_defaults (void)\n{\n") >> filename;
-      printf ("  property_list::pval_map_type m;\n\n") >> filename;
+      printf ("property_list::pval_map_type\nbase_properties::factory_defaults (void)\n{\n");
+      printf ("  property_list::pval_map_type m;\n\n");
     }
     else
     {
       printf ("property_list::pval_map_type\n%s::properties::factory_defaults (void)\n{\n",
-              class_name) >> filename;
-      printf ("  property_list::pval_map_type m = base_properties::factory_defaults ();\n\n") >> filename;
+              class_name);
+      printf ("  property_list::pval_map_type m = base_properties::factory_defaults ();\n\n");
     }
 
     for (i = 1; i <= idx; i++)
     {
       if (factory[i])
       {
         dval = defval[i];
         if (type[i] == "radio_property" || type[i] == "color_property")
@@ -564,72 +569,70 @@ function emit_source ()
 	  l = index (dval, "}");
       	  if (k > 0 && l > 0)
 	    dval = "\"" substr (dval, 1, l-1) "\"";
 	  else
 	    dval = "octave_value ()";
       	}
 
         printf ("  m[\"%s\"] = %s%s;\n", name[i], dval,
-                (type[i] == "handle_property" || type[i] == "graphics_handle" ? ".as_octave_value ()" : "")) >> filename;
+                (type[i] == "handle_property" || type[i] == "graphics_handle" ? ".as_octave_value ()" : ""));
       }
     }
 
-    printf ("\n  return m;\n}\n\n") >> filename;
+    printf ("\n  return m;\n}\n\n");
 
     ## go_name static field
 
     if (! base)
       printf ("std::string %s::properties::go_name (\"%s\");\n\n",
-              class_name, object_name) >> filename;
+              class_name, object_name);
 
-    printf ("std::set<std::string>\n") >> filename;
+    printf ("std::set<std::string>\n");
     if (base)
-      printf ("base_properties") >> filename;
+      printf ("base_properties");
     else
-      printf ("%s::properties", class_name) >> filename;
-    printf ("::core_property_names (void)\n{\n  static std::set<std::string> all_pnames;\n\n  static bool initialized = false;\n\n  if (! initialized)\n    {\n") >> filename;
+      printf ("%s::properties", class_name);
+    printf ("::core_property_names (void)\n{\n  static std::set<std::string> all_pnames;\n\n  static bool initialized = false;\n\n  if (! initialized)\n    {\n");
     for (i = 1; i <= idx; i++)
-      printf ("      all_pnames.insert (\"%s\");\n", name[i]) >> filename;
+      printf ("      all_pnames.insert (\"%s\");\n", name[i]);
     if (! base)
-      printf ("\n      std::set<std::string> base_pnames = base_properties::core_property_names ();\n      all_pnames.insert (base_pnames.begin (), base_pnames.end ());\n") >> filename;
-    printf ("\n      initialized = true;\n    }\n\n  return all_pnames;\n}\n\n") >> filename;
+      printf ("\n      std::set<std::string> base_pnames = base_properties::core_property_names ();\n      all_pnames.insert (base_pnames.begin (), base_pnames.end ());\n");
+    printf ("\n      initialized = true;\n    }\n\n  return all_pnames;\n}\n\n");
 
-    printf ("bool\n") >> filename;
+    printf ("bool\n");
     if (base)
-      printf ("base_properties") >> filename;
+      printf ("base_properties");
     else
-      printf ("%s::properties", class_name) >> filename;
-    printf ("::has_core_property (const caseless_str& pname)\n{\n  std::set<std::string> pnames = core_property_names ();\n\n  return pnames.find (pname) != pnames.end ();\n}\n\n", class_name) >> filename;
+      printf ("%s::properties", class_name);
+    printf ("::has_core_property (const caseless_str& pname)\n{\n  std::set<std::string> pnames = core_property_names ();\n\n  return pnames.find (pname) != pnames.end ();\n}\n\n", class_name);
 
-    printf ("std::set<std::string>\n") >> filename;
+    printf ("std::set<std::string>\n");
     if (base)
-	printf ("base_properties") >> filename;
+	printf ("base_properties");
     else
-      printf ("%s::properties", class_name) >> filename;
-    printf ("::all_property_names (") >> filename;
+      printf ("%s::properties", class_name);
+    printf ("::all_property_names (");
     if (base)
-      printf ("const std::string& cname") >> filename;
+      printf ("const std::string& cname");
     else
-      printf ("void") >> filename;
-    printf (") const\n{\n  static std::set<std::string> all_pnames = core_property_names ();\n\n") >> filename;
+      printf ("void");
+    printf (") const\n{\n  static std::set<std::string> all_pnames = core_property_names ();\n\n");
     if (base)
-      printf ("  std::set<std::string> retval = all_pnames;\n  std::set<std::string> dyn_props = dynamic_property_names (cname);\n  retval.insert (dyn_props.begin (), dyn_props.end ());\n  for (std::map<caseless_str, property, cmp_caseless_str>::const_iterator p = all_props.begin ();\n       p != all_props.end (); p++)\n    retval.insert (p->first);\n\n  return retval;\n}\n\n") >> filename;
+      printf ("  std::set<std::string> retval = all_pnames;\n  std::set<std::string> dyn_props = dynamic_property_names (cname);\n  retval.insert (dyn_props.begin (), dyn_props.end ());\n  for (std::map<caseless_str, property, cmp_caseless_str>::const_iterator p = all_props.begin ();\n       p != all_props.end (); p++)\n    retval.insert (p->first);\n\n  return retval;\n}\n\n");
     else
-      printf ("  std::set<std::string> retval = all_pnames;\n  std::set<std::string> base_props = base_properties::all_property_names (\"%s\");\n  retval.insert (base_props.begin (), base_props.end ());\n\n  return retval;\n}\n\n", class_name) >> filename;
+      printf ("  std::set<std::string> retval = all_pnames;\n  std::set<std::string> base_props = base_properties::all_property_names (\"%s\");\n  retval.insert (base_props.begin (), base_props.end ());\n\n  return retval;\n}\n\n", class_name);
 
     if (! base)
-      printf ("bool\n%s::properties::has_property (const caseless_str& pname) const\n{\n  std::set<std::string> pnames = all_property_names ();\n\n  return pnames.find (pname) != pnames.end ();\n}\n\n", class_name) >> filename;
+      printf ("bool\n%s::properties::has_property (const caseless_str& pname) const\n{\n  std::set<std::string> pnames = all_property_names ();\n\n  return pnames.find (pname) != pnames.end ();\n}\n\n", class_name);
   }
 }
 
 BEGIN {
-  filename = "graphics-props.cc";
-  printf ("// DO NOT EDIT!  Generated automatically by genprops.awk.\n\n");
-  printf ("// DO NOT EDIT!  Generated automatically by genprops.awk.\n\n") > filename;
+  printf ("// DO NOT EDIT!  Generated automatically by genprops.awk.\n\n")
   pcount = 0;
 }
 
 /BEGIN_PROPERTIES *\(.*\)/ {
   gather = 1;
   idx = 0;
   str = $0;
   beg = index (str, "(") + 1;
@@ -660,18 +663,20 @@ BEGIN {
   gather = 1;
   idx = 0;
   class_name = "base";
   base = 1;
   next;
 }
 
 /END_PROPERTIES/ {
-  emit_declarations();
-  emit_source();
+  if (emit_graphics_props)
+    emit_source();
+  else
+    emit_declarations();
   gather = 0;
   next;
 }
 
 {
   if (gather)
   {
     if (NF < 2 || /^[ \t]*\/\//)
@@ -790,11 +795,11 @@ BEGIN {
         field++;
 
         for (i = field; i <= NF; i++)
           defval[idx] = (defval[idx] (i > field ? " " : "") $i);
       }
     }
 
   }
-  else
+  else if (! emit_graphics_props)
     print $0;
 }
diff --git a/src/mkbuiltins b/src/mkbuiltins
--- a/src/mkbuiltins
+++ b/src/mkbuiltins
@@ -14,30 +14,23 @@
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License
 # along with Octave; see the file COPYING.  If not, see
 # <http://www.gnu.org/licenses/>.
 
-if test $# -ne 1; then
-  echo "usage: mkbuiltins f1" 1>&2
+if test $# -eq 0; then
+  echo "usage: mkbuiltins f1 f2 ..." 1>&2
   exit 1
 fi
 
 SED=${SED:-'sed'}
 
-DEF_FILES=`cat $1`
-
-if test -z "$DEF_FILES"; then
-  echo "mkbuiltins: DEF_FILES is empty!" 1>&2
-  exit 1
-fi
-
 cat << \EOF
 // DO NOT EDIT!  Generated automatically by mkbuiltins.
 
 #ifdef HAVE_CONFIG_H
 #include "config.h"
 #endif
 
 #include "defun.h"
@@ -81,35 +74,37 @@ cat << \EOF
 
 #define XDEFALIAS_INTERNAL(alias, name) \
   alias_builtin (#alias, #name);
 
 #define XDEFCONST_INTERNAL(name, defn, doc)
 
 EOF
 
-for file in $DEF_FILES; do
-  fcn=`echo $file | $SED 's,.*/,,; s/\.df//; s/-/_/g;'`
+for arg
+do
+  fcn=`echo "$arg" | $SED 's,.*/,,; s/\.df//; s/-/_/g;'`
   echo "static void"
   echo "install_${fcn}_fcns (void)"
   echo "{"
-  cat $file
+  cat "$arg"
   echo "}"
   echo ""
 done
 
 cat << \EOF
 
 void
 install_builtins (void)
 {
 EOF
 
-for file in $DEF_FILES; do
-  fcn=`echo $file | $SED 's,.*/,,; s/\.df//; s/-/_/g;'`
+for arg
+do
+  fcn=`echo "$arg" | $SED 's,.*/,,; s/\.df//; s/-/_/g;'`
   echo "  install_${fcn}_fcns ();"
 done
 
 cat << \EOF
 }
 
 EOF
 
diff --git a/src/mxarray.h.in b/src/mxarray.h.in
--- a/src/mxarray.h.in
+++ b/src/mxarray.h.in
@@ -80,18 +80,18 @@ typedef unsigned char mxLogical;
 /* typedef Uint16 mxChar; */
 typedef char mxChar;
 
 /* 
  * FIXME? Mathworks says these should be size_t on 64-bit system and when
  * mex is used with the -largearraydims flag, but why do that? Its better
  * to conform to the same indexing as the rest of Octave
  */
-typedef @OCTAVE_IDX_TYPE@ mwSize;
-typedef @OCTAVE_IDX_TYPE@ mwIndex;
+typedef %OCTAVE_IDX_TYPE% mwSize;
+typedef %OCTAVE_IDX_TYPE% mwIndex;
 
 #if ! defined (MXARRAY_TYPEDEFS_ONLY)
 
 #include <cstring>
 
 class octave_value;
 
 #define DO_MUTABLE_METHOD(RET_T, METHOD_CALL) \
diff --git a/src/version.h.in b/src/version.h.in
--- a/src/version.h.in
+++ b/src/version.h.in
@@ -20,23 +20,23 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #if !defined (octave_version_h)
 #define octave_version_h 1
 
-#define OCTAVE_VERSION "@OCTAVE_VERSION@"
+#define OCTAVE_VERSION %OCTAVE_VERSION%
 
-#define OCTAVE_API_VERSION "@OCTAVE_API_VERSION@"
+#define OCTAVE_API_VERSION %OCTAVE_API_VERSION%
 
-#define OCTAVE_RELEASE_DATE "@OCTAVE_RELEASE_DATE@"
+#define OCTAVE_RELEASE_DATE %OCTAVE_RELEASE_DATE%
 
-#define OCTAVE_COPYRIGHT "@OCTAVE_COPYRIGHT@"
+#define OCTAVE_COPYRIGHT %OCTAVE_COPYRIGHT%
 
 // This is the first line printed by --version.  The GNU coding
 // standards say that the version number should follow the last space
 // on the line.
 
 #define OCTAVE_NAME_AND_VERSION "GNU Octave, version " OCTAVE_VERSION
 
 #define OCTAVE_CONFIG_STATEMENT \
diff --git a/test/ChangeLog b/test/ChangeLog
--- a/test/ChangeLog
+++ b/test/ChangeLog
@@ -1,8 +1,12 @@
+2009-12-03  John W. Eaton  <jwe@octave.org>
+
+	* Makefile.am (CLEANFILES, DISTCLEANFILES): New variables.
+
 2009-11-10  John W. Eaton  <jwe@octave.org>
 
 	* @Blork/module.mk, @Cork/module.mk, @Dork/module.mk,
 	@Gork/module.mk, @Pork/module.mk, @Sneetch/module.mk,
 	@Snork/module.mk, @Spork/module.mk, Makefile.am: New files.
 	* Makefile.in: Delete.
 
 2009-10-19  Rik  <octdev@nomad.inbox5.com>
diff --git a/test/Makefile.am b/test/Makefile.am
--- a/test/Makefile.am
+++ b/test/Makefile.am
@@ -66,13 +66,19 @@ include @Sneetch/module.mk
 include @Snork/module.mk
 include @Spork/module.mk
 
 EXTRA_DIST = \
   ChangeLog \
   build_sparse_tests.sh \
   $(FCN_FILES)
 
+CLEANFILES = \
+  test_sparse.m
+
+DISTCLEANFILES = \
+  fntests.log
+
 check: test_sparse.m
 	../run-octave --norc --silent --no-history $(srcdir)/fntests.m $(srcdir)
 
 test_sparse.m: build_sparse_tests.sh
 	$(srcdir)/build_sparse_tests.sh
