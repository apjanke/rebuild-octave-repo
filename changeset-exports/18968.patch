# HG changeset patch
# User Andreas Weber <andy.weber.aw@gmail.com>
# Date 1406661183 -7200
#      Tue Jul 29 21:13:03 2014 +0200
# Node ID 0257a936dc4a4d56dbb119ecebbafe27c2fc447d
# Parent  69658bd9952b8b5aa6f2f2cbb08e2dff7c6395b3
Fix FLTK redraw and event issue

* __init_fltk__.cc: Move axis auto code in own function (again).
  Fix event issue where windowbuttondownfcn was called before
  set_currentpoint and execute event only if it's defined.

* __add_default_menu__.m: Add drawnow () for grid and axis callback

diff --git a/libinterp/dldfcn/__init_fltk__.cc b/libinterp/dldfcn/__init_fltk__.cc
--- a/libinterp/dldfcn/__init_fltk__.cc
+++ b/libinterp/dldfcn/__init_fltk__.cc
@@ -941,22 +941,17 @@ private:
   static void button_callback (Fl_Widget* ww, void* data)
   {
     static_cast<plot_window*> (data)->button_press (ww, data);
   }
 
   void button_press (Fl_Widget* widg, void*)
   {
     if (widg == autoscale)
-      {
-        set_on_ax_obj ("xlimmode", "auto");
-        set_on_ax_obj ("ylimmode", "auto");
-        set_on_ax_obj ("zlimmode", "auto");
-        mark_modified ();
-      }
+      axis_auto ();
     else if (widg == togglegrid)
       toggle_grid ();
     else if (widg == panzoom)
       set_on_ax_obj ("pan", "on");
     else if (widg == rotate)
       set_on_ax_obj ("rotate3d", "on");
     else if (widg == help)
       fl_message ("%s", help_text);
@@ -990,16 +985,29 @@ private:
   Fl_Button* rotate;
   Fl_Button* help;
   Fl_Output* status;
   Fl_Box* resize_dummy;
   graphics_object ax_obj;
   int pos_x;
   int pos_y;
 
+
+  void axis_auto (void)
+  {
+    octave_value_list args;
+    if (fp.get_currentaxes ().ok ())
+      {
+        args(0) = fp.get_currentaxes ().as_octave_value ();
+        args(1) = "auto";
+        feval ("axis", args);
+        mark_modified ();
+      }
+  }
+
   void toggle_grid (void)
   {
     octave_value_list args;
     if (fp.get_currentaxes ().ok ())
       args(0) = fp.get_currentaxes ().as_octave_value ();
 
     feval ("grid", args);
     mark_modified ();
@@ -1193,17 +1201,16 @@ private:
     fp.set_position (pos, false);
   }
 
   int handle (int event)
   {
     if (event == FL_FOCUS)
       return 1;
 
-    Fl_Window::handle (event);
     graphics_handle gh;
 
     if (!fp.is_beingdeleted ())
       {
         //std::cout << "plot_window::handle event = " <<  fl_eventnames[event] << std::endl;
         switch (event)
           {
           case FL_KEYDOWN:
@@ -1219,20 +1226,17 @@ private:
                   evt.assign ("Key", octave_value (std::tolower (key_a)));
                   evt.assign ("Modifier", octave_value (modifier2cell ()));
                   fp.execute_keypressfcn (evt);
                 }
               switch (key)
                 {
                 case 'a':
                 case 'A':
-                  set_on_ax_obj ("xlimmode", "auto");
-                  set_on_ax_obj ("ylimmode", "auto");
-                  set_on_ax_obj ("zlimmode", "auto");
-                  mark_modified ();
+                  axis_auto ();
                   return 1;
 
                 case 'g':
                 case 'G':
                   toggle_grid ();
                   return 1;
 
                 case 'p':
@@ -1273,23 +1277,24 @@ private:
           {
           case FL_MOVE:
             pixel2status (pixel2axes_or_ca (Fl::event_x (),
                                             Fl::event_y () - menu_dy ()),
                           Fl::event_x (), Fl::event_y () - menu_dy ());
             return 1;
 
           case FL_PUSH:
-            fp.execute_windowbuttondownfcn (Fl::event_button());
-
             pos_x = Fl::event_x ();
             pos_y = Fl::event_y () - menu_dy ();
 
             set_currentpoint (pos_x, pos_y);
 
+            if (fp.get_windowbuttonupfcn ().is_defined ())
+              fp.execute_windowbuttondownfcn (Fl::event_button());
+
             gh = pixel2axes_or_ca (pos_x, pos_y);
 
             if (gh.ok ())
               {
                 ax_obj = gh_manager::get_object (gh);
                 set_axes_currentpoint (ax_obj, pos_x, pos_y);
 
                 int ndim = calc_dimensions (ax_obj);
diff --git a/scripts/plot/util/private/__add_default_menu__.m b/scripts/plot/util/private/__add_default_menu__.m
--- a/scripts/plot/util/private/__add_default_menu__.m
+++ b/scripts/plot/util/private/__add_default_menu__.m
@@ -100,21 +100,23 @@ function grid_cb (h, e)
   hax = __get_axes__ (h);
   id = get (h, "tag");
   switch (id)
     case "toggle"
       arrayfun (@grid, hax);
     otherwise
       arrayfun (@(h) grid(h, id), hax);
   endswitch
+  drawnow ();
 endfunction
 
 function autoscale_cb (h, e)
   hax = __get_axes__ (h);
   arrayfun (@(h) axis (h, "auto"), hax)
+  drawnow ();
 endfunction
 
 function guimode_cb (h, e)
   hax = __get_axes__ (h);
   id = get (h, "tag");
   switch (id)
     case "pan_on"
       arrayfun (@(h) pan (h, "on"), hax)
