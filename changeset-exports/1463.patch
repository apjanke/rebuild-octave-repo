# HG changeset patch
# User jwe
# Date 811754324 0
#      Fri Sep 22 07:18:44 1995 +0000
# Node ID 592291d9dfbbf9c9ebd96def69e630a304046795
# Parent  8aa535221fa1fd57fe10da1b1502fff09fd3d0cd
[project @ 1995-09-22 07:18:44 by jwe]

diff --git a/src/sysdep.cc b/src/sysdep.cc
--- a/src/sysdep.cc
+++ b/src/sysdep.cc
@@ -50,36 +50,41 @@ Software Foundation, Inc.
 #elif defined (HAVE_TERMIO_H)
 #include <termio.h>
 #elif defined (HAVE_SGTTY_H)
 #include <sgtty.h>
 #else
 LOSE! LOSE!
 #endif
 
+#if defined (HAVE_FLOATINGPOINT_H)
+#include <floatingpoint.h>
+#endif
+
+#if !defined (HAVE_GETHOSTNAME) && defined (HAVE_SYS_UTSNAME_H)
+#include <sys/utsname.h>
+#endif
+
+#include <readline/readline.h>
+
+extern char *term_clrpag;
+extern "C" void _rl_output_character_function ();
+
 #include "defun.h"
 #include "error.h"
 #include "f77-uscore.h"
 #include "help.h"
 #include "input.h"
 #include "oct-obj.h"
 #include "octave.h"
 #include "sysdep.h"
 #include "tree-const.h"
 #include "utils.h"
 
-extern "C"
-{
-#include <readline/readline.h>
-
-extern char *term_clrpag;
-extern void _rl_output_character_function ();
-
-extern double F77_FCN (d1mach, D1MACH) (const int&);
-}
+extern "C" double F77_FCN (d1mach, D1MACH) (const int&);
 
 #ifndef STDIN_FILENO
 #define STDIN_FILENO 1
 #endif
 
 // Octave's idea of infinity.
 double octave_Inf;
 
@@ -87,20 +92,16 @@ double octave_Inf;
 double octave_NaN;
 
 // The floating point format on this system.
 floating_point_format native_float_format = OCTAVE_UNKNOWN_FLT_FMT;
 
 // Nonzero if the machine we are running on is big-endian.
 int octave_words_big_endian;
 
-#if defined (HAVE_FLOATINGPOINT_H)
-#include <floatingpoint.h>
-#endif
-
 #ifdef NeXT
 extern "C"
 {
   typedef void (*_cplus_fcn_int) (int);
   extern void (*malloc_error (_cplus_fcn_int)) (int);
 }
 
 static void
@@ -630,34 +631,31 @@ DEFUN ("isieee", Fisieee, Sisieee, 1, 1,
   "isieee (): return 1 if host uses IEEE floating point")
 {
   return (double) (native_float_format == OCTAVE_IEEE_LITTLE
 		   || native_float_format == OCTAVE_IEEE_BIG);
 }
 
 #if !defined (HAVE_GETHOSTNAME) && defined (HAVE_SYS_UTSNAME_H)
 extern "C"
-{
-#include <sys/utsname.h>
 int
 gethostname (char *name, int namelen)
 {
   int i;
   struct utsname ut;
 
   --namelen;
 
   uname (&ut);
   i = strlen (ut.nodename) + 1;
   strncpy (name, ut.nodename, i < namelen ? i : namelen);
   name[namelen] = '\0';
 
   return 0;
 }
-}
 #endif
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; page-delimiter: "^/\\*" ***
 ;;; End: ***
 */
