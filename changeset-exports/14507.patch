# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1332991304 14400
#      Wed Mar 28 23:21:44 2012 -0400
# Node ID 3f21c0c34b8f39c7255775336ecb819c207fe000
# Parent  6cc30975e2628a2fdc691e6cedcdd0e9fff8d76d
check for function/file name mismatch when parsing class methods

* oct-parse.yy (frob_function): Also check for and repair function
name/file name mismatch when parsing class methods.
* test/bug-36025: New test directory.
* test/Makefile.am: Include bug-36025/module.mk.

diff --git a/src/oct-parse.yy b/src/oct-parse.yy
--- a/src/oct-parse.yy
+++ b/src/oct-parse.yy
@@ -2818,18 +2818,17 @@ frob_function (const std::string& fname,
 {
   std::string id_name = fname;
 
   // If input is coming from a file, issue a warning if the name of
   // the file does not match the name of the function stated in the
   // file.  Matlab doesn't provide a diagnostic (it ignores the stated
   // name).
   if (! autoloading && reading_fcn_file
-      && (current_function_depth == 1
-          && ! (parsing_subfunctions || lexer_flags.parsing_class_method)))
+      && current_function_depth == 1 && ! parsing_subfunctions)
   {
     // FIXME -- should curr_fcn_file_name already be
     // preprocessed when we get here?  It seems to only be a
     // problem with relative file names.
 
     std::string nm = curr_fcn_file_name;
 
     size_t pos = nm.find_last_of (file_ops::dir_sep_chars ());
diff --git a/test/Makefile.am b/test/Makefile.am
--- a/test/Makefile.am
+++ b/test/Makefile.am
@@ -46,16 +46,17 @@ FCN_FILES = \
   test_switch.m \
   test_system.m \
   test_transpose.m \
   test_try.m \
   test_unwind.m \
   test_while.m
 
 include bug-35448/module.mk
+include bug-36025/module.mk
 include classes/module.mk
 include class-concat/module.mk
 include ctor-vs-method/module.mk
 include fcn-handle-derived-resolution/module.mk
 
 check: test_sparse.m test_bc_overloads.m
 	$(top_builddir)/run-octave --norc --silent --no-history $(srcdir)/fntests.m $(srcdir)
 
diff --git a/test/bug-36025/@testclass/one.m b/test/bug-36025/@testclass/one.m
new file mode 100644
--- /dev/null
+++ b/test/bug-36025/@testclass/one.m
@@ -0,0 +1,4 @@
+% function ONE return item "X"
+
+function a=one(m)
+  a=m.x;
diff --git a/test/bug-36025/@testclass/testclass.m b/test/bug-36025/@testclass/testclass.m
new file mode 100644
--- /dev/null
+++ b/test/bug-36025/@testclass/testclass.m
@@ -0,0 +1,3 @@
+function m=testclass(x,y)
+m=struct('x',x,'y',y); 
+m=class(m,"testclass"); 
diff --git a/test/bug-36025/@testclass/two.m b/test/bug-36025/@testclass/two.m
new file mode 100644
--- /dev/null
+++ b/test/bug-36025/@testclass/two.m
@@ -0,0 +1,4 @@
+% function TWO returns item "Y"
+
+function a=one(m)
+  a=m.y;
diff --git a/test/bug-36025/module.mk b/test/bug-36025/module.mk
new file mode 100644
--- /dev/null
+++ b/test/bug-36025/module.mk
@@ -0,0 +1,7 @@
+bug_36025_FCN_FILES = \
+  bug-36025/@testclass/one.m \
+  bug-36025/@testclass/testclass.m \
+  bug-36025/@testclass/two.m \
+  bug-36025/test_bug_36025.m
+
+FCN_FILES += $(bug_36025_FCN_FILES)
diff --git a/test/bug-36025/test_bug_36025.m b/test/bug-36025/test_bug_36025.m
new file mode 100644
--- /dev/null
+++ b/test/bug-36025/test_bug_36025.m
@@ -0,0 +1,9 @@
+%!test
+%! warning off Octave:function-name-clash
+%! f = testclass (1, 2);
+%! assert (one (f), 1);
+%! assert (two (f), 2);
+%! rehash ();
+%! assert (one (f), 1);
+%! assert (two (f), 2);
+%! assert (two (f), 2);
