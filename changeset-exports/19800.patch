# HG changeset patch
# User Torsten <ttl@justmail.de>
# Date 1424496143 18000
#      Sat Feb 21 00:22:23 2015 -0500
# Node ID be7b05f95d7c606fd28d6d703d35c64cfdb5e1c9
# Parent  a9952a647d52671a38d0fac48bc7831a9ad0065d
fix unzipping compressed info files when running the gui (bug #38305)

* parser.cc (parser::open_file): Use iprocstream instead of QProcess to
handle compressed info files.

diff --git a/libgui/src/qtinfo/parser.cc b/libgui/src/qtinfo/parser.cc
--- a/libgui/src/qtinfo/parser.cc
+++ b/libgui/src/qtinfo/parser.cc
@@ -24,22 +24,22 @@ along with Octave; see the file COPYING.
 // Author: P. L. Lucas
 // Author: Jacob Dawid <jacob.dawid@cybercatalyst.com>
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "parser.h"
+#include "procstream.h"
 #include <QFileInfo>
 #include <QDir>
 #include <QFile>
 #include <QUrl>
 #include <QRegExp>
-#include <QProcess>
 #include <QBuffer>
 
 parser::parser(QObject *p)
   : QObject(p)
 {
   _compressors_map.insert ("bz2",  "bzip2 -dc \"%1\"");
   _compressors_map.insert ("gz",   "gzip -dc \"%1\"");
   _compressors_map.insert ("lzma", "lzma -dc \"%1\"");
@@ -91,23 +91,30 @@ parser::get_info_path ()
 }
 
 QIODevice *
 parser::open_file (QFileInfo & file_info)
 {
   QIODevice *iodevice = 0;
   if (_compressors_map.contains (file_info.suffix ()))
     {
-      QProcess gzip;
-      gzip.start (_compressors_map.value (file_info.suffix ()).arg (file_info.absoluteFilePath ()));
+      QString command = _compressors_map.value (file_info.suffix ()).arg (file_info.absoluteFilePath ());
+      iprocstream ips (command.toStdString ());
 
-      if (!gzip.waitForFinished ())
+      if (ips.bad ())
         return 0;
 
-      QByteArray result = gzip.readAll ();
+      QByteArray result;
+      char buffer[1024];
+
+      while (! ips.eof ())
+        {
+          ips.read (buffer, sizeof (buffer));
+          result.append (buffer, ips.gcount ());
+        }
 
       QBuffer *io = new QBuffer (this);
       io->setData (result);
 
       if (!io->open (QIODevice::ReadOnly | QIODevice::Text))
         return 0;
 
       iodevice = io;
