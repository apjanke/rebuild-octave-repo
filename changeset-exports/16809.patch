# HG changeset patch
# User Torsten <ttl@justmail.de>
# Date 1371926609 -7200
#      Sat Jun 22 20:43:29 2013 +0200
# Node ID 84505f200e05c56e1cc16dd51656a1d4d643db64
# Parent  772f51539af84fe9e44fab65ecfe533970197a16
fix checked state of window menu entries at startup (bug #39322)

* file-editor-interface.h: remove connet_visibility_changed
* file-editor.cc/.h: remove connect_visibility_changed and slot
  handle_visibility which are aleady implemented in octave-dock-widget
* octave-dock-widget.cc(connect_visibility_changed): moved here from
  octave-dock-widget.h, emit signal active_change for initializing the
  entries of the window menu
* octave-dock-widget.h: move connect_visibility_changed to *.cc,

diff --git a/libgui/src/m-editor/file-editor-interface.h b/libgui/src/m-editor/file-editor-interface.h
--- a/libgui/src/m-editor/file-editor-interface.h
+++ b/libgui/src/m-editor/file-editor-interface.h
@@ -56,18 +56,16 @@ class file_editor_interface : public oct
   virtual void
   handle_update_breakpoint_marker_request (bool insert, const QString& file,
                                            int line) = 0;
 
   virtual void handle_edit_file_request (const QString& file) = 0;
 
   virtual void set_focus () = 0;
 
-  virtual void connect_visibility_changed (void) = 0;
-
 public slots:
   virtual void request_new_file (const QString& command = QString ()) = 0;
   virtual void request_new_script (const QString& command = QString ()) = 0;
   virtual void request_new_function (const QString& command = QString ()) = 0;
   virtual void request_open_file () = 0;
   virtual void request_open_file (const QString& openFileName, int line = -1,
                                   bool debug_pointer = false,
                                   bool breakpoint_marker = false,
diff --git a/libgui/src/m-editor/file-editor.cc b/libgui/src/m-editor/file-editor.cc
--- a/libgui/src/m-editor/file-editor.cc
+++ b/libgui/src/m-editor/file-editor.cc
@@ -82,30 +82,16 @@ file_editor::~file_editor (void)
 }
 
 void
 file_editor::focus (void)
 {
   set_focus ();
 }
 
-void
-file_editor::handle_visibility (bool visible)
-{
-  if (visible && ! isFloating ())
-    focus ();
-}
-
-void
-file_editor::connect_visibility_changed (void)
-{
-  connect (this, SIGNAL (visibilityChanged (bool)),
-           this, SLOT (handle_visibility (bool)));
-}
-
 // set focus to editor and its current tab
 void
 file_editor::set_focus (void)
 {
   if (!isVisible ())
     setVisible (true);
   setFocus ();
   activateWindow ();
diff --git a/libgui/src/m-editor/file-editor.h b/libgui/src/m-editor/file-editor.h
--- a/libgui/src/m-editor/file-editor.h
+++ b/libgui/src/m-editor/file-editor.h
@@ -42,18 +42,16 @@ class file_editor : public file_editor_i
 public:
 
   typedef std::map<QString, QWidget *>::iterator editor_tab_map_iterator;
   typedef std::map<QString, QWidget *>::const_iterator editor_tab_map_const_iterator;
 
   file_editor (QWidget *p);
   ~file_editor (void);
 
-  void connect_visibility_changed (void);
-
   void loadFile (const QString& fileName);
 
   QMenu *get_mru_menu (void) { return _mru_file_menu; }
   QMenu *debug_menu (void);
   QToolBar *toolbar (void);
 
   void set_focus (void);
   void handle_enter_debug_mode (void);
@@ -94,17 +92,16 @@ signals:
   void fetab_insert_debugger_pointer (const QWidget* ID, int line = -1);
   void fetab_delete_debugger_pointer (const QWidget* ID, int line = -1);
   void fetab_do_breakpoint_marker (bool insert, const QWidget* ID,
                                    int line = -1);
   void fetab_set_focus (const QWidget* ID);
 
 public slots:
   void focus (void);
-  void handle_visibility (bool visible);
 
   void request_new_file (const QString& commands);
   void request_new_script (const QString& commands);
   void request_new_function (const QString& commands);
   void request_open_file (void);
   void request_close_file (bool);
   void request_close_all_files (bool);
   void request_close_other_files (bool);
diff --git a/libgui/src/octave-dock-widget.cc b/libgui/src/octave-dock-widget.cc
--- a/libgui/src/octave-dock-widget.cc
+++ b/libgui/src/octave-dock-widget.cc
@@ -98,16 +98,26 @@ octave_dock_widget::~octave_dock_widget 
 
   visible = isVisible ();
   settings->setValue (name+"Floating", floating);  // store floating state
   settings->setValue (name+"Visible", visible);    // store visibility
 
   settings->endGroup ();
 }
 
+// connect signal visibility changed to related slot (called from main-window)
+void
+octave_dock_widget::connect_visibility_changed (void)
+{
+  connect (this, SIGNAL (visibilityChanged (bool)),
+           this, SLOT (handle_visibility (bool)));
+  emit active_changed (isVisible ());  // emit once for init of window menu
+}
+
+
 // set the title in the dockwidgets title bar
 void
 octave_dock_widget::set_title (const QString& title)
 {
   QHBoxLayout* h_layout =
       static_cast<QHBoxLayout *> (titleBarWidget ()->layout ());
   QLabel *label = new QLabel (title);
   h_layout->insertWidget (0,label);
diff --git a/libgui/src/octave-dock-widget.h b/libgui/src/octave-dock-widget.h
--- a/libgui/src/octave-dock-widget.h
+++ b/libgui/src/octave-dock-widget.h
@@ -33,22 +33,17 @@ class octave_dock_widget : public QDockW
 {
   Q_OBJECT
 
 public:
 
   octave_dock_widget (QWidget *p = 0);
   virtual ~octave_dock_widget ();
 
-  virtual void connect_visibility_changed (void)
-  {
-    connect (this, SIGNAL (visibilityChanged (bool)),
-             this, SLOT (handle_visibility (bool)));
-  }
-
+  virtual void connect_visibility_changed (void);
   void make_window (bool visible);
   void make_widget (bool visible);
   void set_title (const QString&);
 
 signals:
 
   /** Custom signal that tells whether a user has clicked away
    *  that dock widget, i.e the active dock widget has
