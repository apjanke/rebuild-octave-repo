# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1278051057 -7200
#      Fri Jul 02 08:10:57 2010 +0200
# Node ID b397b8edd8c5882109331775247cd3e85f3f3a89
# Parent  d53eb624989212d954a92c1cb34a5fffe8ad1e21
fix off-by-1 dim in scalar map horzcat/vertcat

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,14 @@
+2010-07-02  Jaroslav Hajek  <highegg@gmail.com>
+
+	* oct-map.cc (octave_map::cat (..., const octave_scalar_map *)):
+	Handle special dims (-1, -2). 
+	* data.cc (do_single_type_concat_map): Don't handle them here.
+
 2010-07-01  Jaroslav Hajek  <highegg@gmail.com>
 
 	* syscalls.cc (mk_stat_map, Funame): Use octave_scalar_map.
 
 2010-07-01  Jaroslav Hajek  <highegg@gmail.com>
 
 	* oct-map.h (octave_scalar_map::assign (const std::string&, const
 	octave_value&), octave_map::assign (const std::string&, const Cell&)):
diff --git a/src/data.cc b/src/data.cc
--- a/src/data.cc
+++ b/src/data.cc
@@ -1477,22 +1477,17 @@ single_type_concat_map (octave_map& resu
 }
 
 static octave_map
 do_single_type_concat_map (const octave_value_list& args,
                            int dim)
 {
   octave_map result;
   if (all_scalar_1x1 (args)) // optimize all scalars case.
-    {
-      if (dim < 0)
-        dim = -dim;
-
-      single_type_concat_map<octave_scalar_map> (result, args, dim);
-    }
+    single_type_concat_map<octave_scalar_map> (result, args, dim);
   else
     single_type_concat_map<octave_map> (result, args, dim);
 
   return result;
 }
 
 static octave_value
 do_cat (const octave_value_list& args, int dim, std::string fname)
diff --git a/src/oct-map.cc b/src/oct-map.cc
--- a/src/oct-map.cc
+++ b/src/oct-map.cc
@@ -635,16 +635,23 @@ permute_to_correct_order (octave_idx_typ
     }
 }
 
 
 octave_map
 octave_map::cat (int dim, octave_idx_type n, const octave_scalar_map *map_list)
 {
   octave_map retval;
+  // Allow dim = -1, -2 for compatibility, though it makes no difference here.
+  if (dim == -1 || dim == -2)
+    dim = -dim - 1;
+  else if (dim < 0)
+    (*current_liboctave_error_handler)
+      ("cat: invalid dimension");
+
   if (n > 0)
     {
       retval.xkeys = map_list[0].xkeys;
       octave_idx_type nf = map_list[0].nfields ();
       if (nf > 0)
         {
           // Try the fast case.
           bool all_same = true;
