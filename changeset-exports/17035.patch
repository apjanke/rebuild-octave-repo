# HG changeset patch
# User Torsten <ttl@justmail.de>
# Date 1374527930 -7200
#      Mon Jul 22 23:18:50 2013 +0200
# Node ID 08f0e372d006142a43135440c9bad55ff21dd67f
# Parent  8d84dc5f5b5de55dbf94a30ffc44d04dd0fa99ff
doc viewer: correct the anchor position of the desired doc entry

* parser.cc(get_next_node): correct the size of lines read from the info files
  where image links are discarded,
  (node_text_to_html): use redled.png as marker for the desired doc entry

diff --git a/libgui/src/qtinfo/parser.cc b/libgui/src/qtinfo/parser.cc
--- a/libgui/src/qtinfo/parser.cc
+++ b/libgui/src/qtinfo/parser.cc
@@ -174,19 +174,39 @@ parser::search_node (const QString& node
 
   return QString ();
 }
 
 QString
 parser::get_next_node (QIODevice *io)
 {
   QString text;
+  QByteArray line, line_buffer;
+  char c;
+  int i;
+
   while (!io->atEnd ())
     {
-      QByteArray line = io->readLine ();
+      io->getChar (&c);
+      if (c)
+        { // first char is not equal 0
+          io->ungetChar (c);
+          line = io->readLine ();
+        }
+      else
+        { // 0 was read -> image -> text length changes
+          line_buffer = io->readLine ();  // image tag that is not needed
+          line = io->readLine ();         // firsts line of text message
+          for (i=1; i<line_buffer.size ()+6; i++)  // correct the size
+            line.insert (line.size ()-1,QByteArray(" "));   // by adding blanks
+        }
+
+      if (line.at (0) == '"' && line.size () == 5)  // end of image construct
+        line = " ";
+
       if (line.at(0) == 31)
         {
           break;
         }
       else
         {
           text.append (line);
         }
@@ -336,17 +356,19 @@ parser::node_text_to_html (const QString
       QString text2 = text.mid (anchorPos);
 
       int n = text1.indexOf ("\n");
       text1.remove (0, n);
 
       info_to_html (text1);
       info_to_html (text2);
 
-      text = text1 + "<a name='" + anchor + "' /><img src=':/actions/icons/stop.png'>" + text2;
+      text = text1 + "<a name='" + anchor
+                   + "'/><img src=':/actions/icons/redled.png'><br>&nbsp;"
+                   + text2;
     }
   else
     {
       int n = text.indexOf ("\n");
       text.remove (0, n);
       info_to_html (text);
     }
 
@@ -366,17 +388,19 @@ parser::node_text_to_html (const QString
 
 
   text.prepend ("<hr>\n<pre>");
   text.append ("</pre>\n<hr><hr>\n");
   text.prepend (navigationLinks);
   text.append (navigationLinks);
   text.prepend ("<html><body>\n");
   text.append ("</body></html>\n");
+
   return text;
+
 }
 
 void
 parser::parse_info_map ()
 {
   QRegExp re ("(Node|Ref): ([^\\0177]+)\\0177(\\d+)\n");
   QRegExp re_files ("([^:]+): (\\d+)\n");
   int foundCount = 0;
