# HG changeset patch
# User jwe
# Date 981475043 0
#      Tue Feb 06 15:57:23 2001 +0000
# Node ID b4f260ddd748b0848d3267d9faf9ed446e6dda75
# Parent  7ed917c1ca60451afae29c00b629b5b17d76d953
[project @ 2001-02-06 15:57:23 by jwe]

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,14 @@
+2001-02-06  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* lo-mappers.h, lo-mappers.cc (log10 (const Complex&),
+	tanh (const Complex&)): Declare and define if not 
+	CXX_ISO_COMPLIANT_LIBRARY.
+
 2001-02-05  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* lo-mappers.h (tanh (const Complex&)): Only declare if not
 	CXX_ISO_COMPLIANT_LIBRARY.
 
 2001-02-05  Mumit Khan  <khan@nanotech.wisc.edu>
 
 	* lo-mappers.cc (tanh (const Complex&)): Only define if not
diff --git a/liboctave/lo-mappers.cc b/liboctave/lo-mappers.cc
--- a/liboctave/lo-mappers.cc
+++ b/liboctave/lo-mappers.cc
@@ -233,16 +233,38 @@ atan (const Complex& x)
 }
 
 Complex
 atanh (const Complex& x)
 {
   return log ((1.0 + x) / (1.0 - x)) / 2.0;
 }
 
+#if !defined (CXX_ISO_COMPLIANT_LIBRARY)
+
+Complex
+log10 (const Complex& x)
+{
+  return M_LOG10E * log (x);
+}
+
+Complex
+tan (const Complex& x)
+{
+  return sin (x) / cos (x);
+}
+
+Complex
+tanh (const Complex& x)
+{
+  return sinh (x) / cosh (x);
+}
+
+#endif
+
 Complex
 ceil (const Complex& x)
 {
   return Complex (ceil (real (x)), ceil (imag (x)));
 }
 
 Complex
 fix (const Complex& x)
@@ -263,26 +285,16 @@ round (const Complex& x)
 }
 
 Complex
 signum (const Complex& x)
 {
   return x / abs (x);
 }
 
-#if !defined (CXX_ISO_COMPLIANT_LIBRARY)
-
-Complex
-tanh (const Complex& x)
-{
-  return sinh (x) / cosh (x);
-}
-
-#endif
-
 // complex -> bool mappers.
 
 bool
 xisnan (const Complex& x)
 {
 #if defined (HAVE_ISNAN)
   return (isnan (real (x)) || isnan (imag (x)));
 #else
diff --git a/liboctave/lo-mappers.h b/liboctave/lo-mappers.h
--- a/liboctave/lo-mappers.h
+++ b/liboctave/lo-mappers.h
@@ -43,26 +43,29 @@ extern double xmin (double x, double y);
 extern double xmax (double x, double y);
 
 extern Complex acos (const Complex& x);
 extern Complex acosh (const Complex& x);
 extern Complex asin (const Complex& x);
 extern Complex asinh (const Complex& x);
 extern Complex atan (const Complex& x);
 extern Complex atanh (const Complex& x);
+
+#if !defined (CXX_ISO_COMPLIANT_LIBRARY)
+extern Complex log10 (const Complex& x);
+extern Complex tan (const Complex& x);
+extern Complex tanh (const Complex& x);
+#endif
+
 extern Complex ceil (const Complex& x);
 extern Complex fix (const Complex& x);
 extern Complex floor (const Complex& x);
 extern Complex round (const Complex& x);
 extern Complex signum (const Complex& x);
 
-#if !defined (CXX_ISO_COMPLIANT_LIBRARY)
-extern Complex tanh (const Complex& x);
-#endif
-
 extern bool xisnan (const Complex& x);
 extern bool xfinite (const Complex& x);
 extern bool xisinf (const Complex& x);
 
 extern Complex xmin (const Complex& x, const Complex& y);
 extern Complex xmax (const Complex& x, const Complex& y);
 
 #endif
