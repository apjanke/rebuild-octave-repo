# HG changeset patch
# User Jacob Dawid <jacob.dawid@googlemail.com>
# Date 1315640329 -7200
#      Sat Sep 10 09:38:49 2011 +0200
# Node ID 68c50b393f1d944781cbc8f54f128eefd6ca7288
# Parent  ddc3c20d0e2fc22010ba3b86daeb6d5014a9d5b6
Improved highlighting and incremented version.

diff --git a/gui/src/MainWindow.cpp b/gui/src/MainWindow.cpp
--- a/gui/src/MainWindow.cpp
+++ b/gui/src/MainWindow.cpp
@@ -24,17 +24,17 @@
 #include <QFileDialog>
 #include <QMessageBox>
 #include "MainWindow.h"
 #include "FileEditorMdiSubWindow.h"
 #include "ImageViewerMdiSubWindow.h"
 #include "SettingsDialog.h"
 #include "cmd-edit.h"
 
-#define VERSION_STRING "Octave GUI (0.8.1)"
+#define VERSION_STRING "Octave GUI (0.8.4)"
 
 MainWindow::MainWindow (QWidget * parent):QMainWindow (parent)
 {
   construct ();
   OctaveLink::instance ()->launchOctave();
 }
 
 MainWindow::~MainWindow ()
diff --git a/gui/src/TerminalHighlighter.cpp b/gui/src/TerminalHighlighter.cpp
--- a/gui/src/TerminalHighlighter.cpp
+++ b/gui/src/TerminalHighlighter.cpp
@@ -22,43 +22,61 @@
 TerminalHighlighter::TerminalHighlighter(QTextDocument *parent)
   : QSyntaxHighlighter(parent)
 {
   HighlightingRule rule;
 
   keywordFormat.setForeground(Qt::darkBlue);
   QStringList keywordPatterns
       = QString(ResourceManager::instance ()->octaveKeywords ()).split(" ", QString::SkipEmptyParts);
-  keywordPatterns << "GNU" << "Octave";
+  keywordPatterns << "GNU" << "Octave" << "OctaveGUI";
 
   for (int i = 0; i < keywordPatterns.size (); i++)
     keywordPatterns.replace(i, QString("\\b%1\\b").arg(keywordPatterns.at (i)));
 
   foreach (const QString &pattern, keywordPatterns)
     {
       rule.pattern = QRegExp(pattern);
       rule.format = keywordFormat;
       highlightingRules.append(rule);
     }
 
+  numberFormat.setForeground(Qt::darkRed);
+  rule.pattern = QRegExp("\\b[0-9\\.\\+\\-\\^]+\\b");
+  rule.format = numberFormat;
+  highlightingRules.append(rule);
+
   doubleQouteFormat.setForeground(Qt::darkGreen);
   rule.pattern = QRegExp("\"[^\"]*\"");
   rule.format = doubleQouteFormat;
   highlightingRules.append(rule);
 
   functionFormat.setFontItalic(true);
   functionFormat.setForeground(Qt::blue);
   rule.pattern = QRegExp("\\b[A-Za-z0-9_]+\\s*(?=\\()");
   rule.format = functionFormat;
   highlightingRules.append(rule);
 
   urlFormat.setForeground(Qt::darkYellow);
   rule.pattern = QRegExp("((?:https?|ftp)://\\S+)");
   rule.format = urlFormat;
   highlightingRules.append(rule);
+
+  subCaptionFormat.setForeground (Qt::black);
+  subCaptionFormat.setFontItalic (true);
+  rule.pattern = QRegExp("^\\s+\\*.+$");
+  rule.format = subCaptionFormat;
+  highlightingRules.append(rule);
+
+  captionFormat.setForeground(Qt::black);
+  captionFormat.setFontWeight(QFont::Bold);
+  rule.pattern = QRegExp("^\\s+\\*\\*.+$");
+  rule.format = captionFormat;
+  highlightingRules.append(rule);
+
 }
 
 void TerminalHighlighter::highlightBlock(const QString &text)
 {
   foreach (const HighlightingRule &rule, highlightingRules)
     {
       QRegExp expression(rule.pattern);
       int index = expression.indexIn(text);
diff --git a/gui/src/TerminalHighlighter.h b/gui/src/TerminalHighlighter.h
--- a/gui/src/TerminalHighlighter.h
+++ b/gui/src/TerminalHighlighter.h
@@ -43,12 +43,15 @@ private:
         QTextCharFormat format;
     };
 
     QVector<HighlightingRule> highlightingRules;
     QTextCharFormat keywordFormat;
     QTextCharFormat doubleQouteFormat;
     QTextCharFormat functionFormat;
     QTextCharFormat urlFormat;
+    QTextCharFormat captionFormat;
+    QTextCharFormat subCaptionFormat;
+    QTextCharFormat numberFormat;
 };
 
 
 #endif // TERMINALHIGHLIGHTER_H
diff --git a/gui/src/TerminalView.cpp b/gui/src/TerminalView.cpp
--- a/gui/src/TerminalView.cpp
+++ b/gui/src/TerminalView.cpp
@@ -57,8 +57,15 @@ TerminalView::bell ()
 
 }
 
 void
 TerminalView::keyPressEvent (QKeyEvent * keyEvent)
 {
   m_terminalEmulation->processKeyEvent (keyEvent);
 }
+
+void
+TerminalView::mousePressEvent (QMouseEvent *mouseEvent)
+{
+  // TODO: Pass mouse events to the terminal emulation.
+  mouseEvent->accept();
+}
diff --git a/gui/src/TerminalView.h b/gui/src/TerminalView.h
--- a/gui/src/TerminalView.h
+++ b/gui/src/TerminalView.h
@@ -37,13 +37,14 @@ public:
 
   // Terminal Interface
   QTextCursor textCursor();
   void setTextCursor (const QTextCursor &cursor);
   void bell ();
 
 protected:
   void keyPressEvent (QKeyEvent *keyEvent);
+  void mousePressEvent (QMouseEvent *mouseEvent);
 
 private:
   TerminalEmulation *m_terminalEmulation;
 };
 #endif // OCTAVETERMINAL_H
diff --git a/gui/src/terminal/TerminalEmulation.h b/gui/src/terminal/TerminalEmulation.h
--- a/gui/src/terminal/TerminalEmulation.h
+++ b/gui/src/terminal/TerminalEmulation.h
@@ -1,13 +1,14 @@
 #ifndef TERMINALEMULATION_H
 #define TERMINALEMULATION_H
 
 #include <QObject>
 #include <QKeyEvent>
+#include <QMouseEvent>
 #include <QTextCursor>
 
 class Terminal
 {
   public:
     virtual QTextCursor textCursor () = 0;
     virtual void setTextCursor (const QTextCursor& cursor) = 0;
 
