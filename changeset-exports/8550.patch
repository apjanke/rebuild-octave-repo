# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1232518032 -3600
#      Wed Jan 21 07:07:12 2009 +0100
# Node ID 1cb63ac13934e508fced41fffea517cf2aa04783
# Parent  424ba638d8f1e5bdd45162af002689eaba2f3343
allow fsolve work without qrupdate

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2009-01-20  Jaroslav Hajek  <highegg@gmail.com>
+
+	* optimization/fsolve.m: Only use qrupdate if available.
+
 2009-01-20  John W. Eaton  <jwe@octave.org>
 
 	* general/postpad.m: Doc fix.
 	* general/prepad.m: Doc fix.
 	* image/pink.m: Spelling fix.
 	* image/hsv.m: Doc fix.
 	From Francesco Potorti` <Potorti@isti.cnr.it>.
 
diff --git a/scripts/optimization/fsolve.m b/scripts/optimization/fsolve.m
--- a/scripts/optimization/fsolve.m
+++ b/scripts/optimization/fsolve.m
@@ -62,16 +62,18 @@
 ##
 ## Note: If you only have a single nonlinear equation of one variable, using 
 ## @code{fzero} is usually a much better idea.
 ## @seealso{fzero, optimset}
 ## @end deftypefn
 
 function [x, fvec, info, output, fjac] = fsolve (fcn, x0, options)
 
+  persistent have_qrupdate = exist ('qrupdate') == 5;
+
   if (nargin < 3)
     options = struct ();
   endif
 
   xsiz = size (x0);
   n = numel (x0);
 
   has_jac = strcmpi (optimget (options, "Jacobian", "off"), "on");
@@ -261,17 +263,21 @@ function [x, fvec, info, output, fjac] =
       ## Compute the scaled Broyden update.
       u = (fvec1 - q*w) / sn; 
       v = dg .* ((dg .* s) / sn);
       if (pivoting)
 	v = p'*v;
       endif
 
       ## Update the QR factorization.
-      [q, r] = qrupdate (q, r, u, v);
+      if (have_qrupdate)
+        [q, r] = qrupdate (q, r, u, v);
+      else
+        [q, r] = qr (q*r + u*v');
+      endif
 
     endwhile
   endwhile
 
   ## Restore original shapes.
   x = reshape (x, xsiz);
   fvec = reshape (fvec, fsiz);
 
