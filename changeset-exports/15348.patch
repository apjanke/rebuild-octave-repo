# HG changeset patch
# User Torsten <ttl@justmail.de>
# Date 1347306918 -7200
#      Mon Sep 10 21:55:18 2012 +0200
# Node ID 450fedd441760065b59b909b12a89b1d3f55ce3d
# Parent  9ed4fc294f3f9df51be4d0a6541d6ba78e4ab690
correctly restore the size of all dock-widgets when maximized

* main-window.cc: save/restore geometry of dock-widgets when writing/reading the settings

diff --git a/libgui/src/main-window.cc b/libgui/src/main-window.cc
--- a/libgui/src/main-window.cc
+++ b/libgui/src/main-window.cc
@@ -430,30 +430,56 @@ main_window::closeEvent (QCloseEvent * c
 
 void
 main_window::read_settings ()
 {
   QSettings *settings = resource_manager::get_settings ();
 
   // FIXME -- what should happen if settings is 0?
 
+  restoreState (settings->value ("MainWindow/windowState").toByteArray ());
+  settings->beginGroup ("DockWidgets");
+  // restoring the geometry of all widgets
+  foreach (QObject *obj, children ())
+    {
+      QString name = obj->objectName ();
+      if (obj->isWidgetType () && ! name.isEmpty ())
+        {
+          QWidget *widget = qobject_cast<QWidget *> (obj);
+          QVariant val = settings->value (name);
+          widget->restoreGeometry (val.toByteArray ());
+        }
+      }
+  settings->endGroup();
   restoreGeometry (settings->value ("MainWindow/geometry").toByteArray ());
-  restoreState (settings->value ("MainWindow/windowState").toByteArray ());
   emit settings_changed ();
 }
 
 void
 main_window::write_settings ()
 {
   QSettings *settings = resource_manager::get_settings ();
 
   // FIXME -- what should happen if settings is 0?
 
   settings->setValue ("MainWindow/geometry", saveGeometry ());
   settings->setValue ("MainWindow/windowState", saveState ());
+  settings->beginGroup ("DockWidgets");
+  // saving the geometry of all widgets
+  foreach (QObject *obj, children())
+    {
+      QString name = obj->objectName ();
+      if (obj->isWidgetType () && ! name.isEmpty ())
+        {
+          QWidget *widget = qobject_cast<QWidget *>(obj);
+          settings->setValue (name, widget->saveGeometry ());
+        }
+    }
+
+  settings->endGroup();
   settings->sync ();
 }
 
 void
 main_window::construct ()
 {
   _closing = false;   // flag for editor files when closed
   setWindowIcon (QIcon(":/actions/icons/logo.png"));
