# HG changeset patch
# User Rik <rik@octave.org>
# Date 1373779559 25200
#      Sat Jul 13 22:25:59 2013 -0700
# Node ID 1909e1ed63e61b1724afdb26f001d8da4b17716e
# Parent  9aa293e004753fa539d7bd71b95cce787e52a599
gallery.m: Add 'integerdata' matrix to function.

* scripts/special-matrix/gallery.m: Add 'integerdata' matrix to function.

diff --git a/scripts/special-matrix/gallery.m b/scripts/special-matrix/gallery.m
--- a/scripts/special-matrix/gallery.m
+++ b/scripts/special-matrix/gallery.m
@@ -384,18 +384,17 @@ function [varargout] = gallery (name, va
     case "fiedler"    , [varargout{1:n_out}] = fiedler     (varargin{:});
     case "forsythe"   , [varargout{1:n_out}] = forsythe    (varargin{:});
     case "frank"      , [varargout{1:n_out}] = frank       (varargin{:});
     case "gearmat"    , [varargout{1:n_out}] = gearmat     (varargin{:});
     case "gcdmat"     , [varargout{1:n_out}] = gcdmat      (varargin{:});
     case "grcar"      , [varargout{1:n_out}] = grcar       (varargin{:});
     case "hanowa"     , [varargout{1:n_out}] = hanowa      (varargin{:});
     case "house"      , [varargout{1:n_out}] = house       (varargin{:});
-    case "integerdata"
-      error ("gallery: matrix %s not implemented.", name);
+    case "integerdata", [varargout{1:n_out}] = integerdata (varargin{:});
     case "invhess"    , [varargout{1:n_out}] = invhess     (varargin{:});
     case "invol"      , [varargout{1:n_out}] = invol       (varargin{:});
     case "ipjfact"    , [varargout{1:n_out}] = ipjfact     (varargin{:});
     case "jordbloc"   , [varargout{1:n_out}] = jordbloc    (varargin{:});
     case "kahan"      , [varargout{1:n_out}] = kahan       (varargin{:});
     case "kms"        , [varargout{1:n_out}] = kms         (varargin{:});
     case "krylov"     , [varargout{1:n_out}] = krylov      (varargin{:});
     case "lauchli"    , [varargout{1:n_out}] = lauchli     (varargin{:});
@@ -1260,16 +1259,58 @@ function [v, beta] = house (x)
   else
     v(1) = v(1) + s;
     beta = 1/(s'*v(1));                       # NB the conjugated s.
     ##  beta = 1/(abs (s) * (abs (s) +abs(x(1)) would guarantee beta real.
     ##  But beta as above can be non-real (due to rounding) only when x is complex.
   endif
 endfunction
 
+function A = integerdata (varargin)
+
+  if (nargin < 3)
+    error ("gallery: At least 3 arguments required for integerdata matrix.");
+  endif
+
+  if (isnumeric (varargin{end}))
+    jidx = varargin{end};
+    svec = [varargin{:}];
+    varargin(end) = [];
+  elseif (ischar (varargin{end}))
+    if (nargin < 4)
+      error (["gallery: CLASS argument requires 4 inputs " ...
+              "for integerdata matrix."]);
+    endif
+    jidx = varargin{end-1};
+    svec = [varargin{1:end-1}];
+    varargin(end-1) = [];
+  else 
+    error (["gallery: J must be an integer in the range [0, 2^32-1] " ...
+            "for integerdata matrix"]);
+  endif
+
+  if (! (isnumeric (jidx) && isscalar (jidx)
+         && jidx == fix (jidx)
+         && jidx >= 0 && jidx <= 0xFFFFFFFF))
+    error (["gallery: J must be an integer in the range [0, 2^32-1] " ...
+            "for integerdata matrix"]);
+  endif
+
+  ## Save and restore random state.  Initialization done so that reproducible
+  ## data is available from gallery depending on the jidx and size vector.
+  randstate = rand ("state"); 
+  unwind_protect
+    rand ("state", svec);
+    A = randi (varargin{:});
+  unwind_protect_cleanup
+    rand ("state", randstate);
+  end_unwind_protect
+
+endfunction
+
 function A = invhess (x, y)
   ## INVHESS  Inverse of an upper Hessenberg matrix.
   ##          INVHESS(X, Y), where X is an N-vector and Y an N-1 vector,
   ##          is the matrix whose lower triangle agrees with that of
   ##          ONES(N,1)*X' and whose strict upper triangle agrees with
   ##          that of [1 Y]*ONES(1,N).
   ##          The matrix is nonsingular if X(1) ~= 0 and X(i+1) ~= Y(i)
   ##          for all i, and its inverse is an upper Hessenberg matrix.
