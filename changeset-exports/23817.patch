# HG changeset patch
# User Rik <rik@octave.org>
# Date 1501543519 25200
#      Mon Jul 31 16:25:19 2017 -0700
# Node ID d9ca3f15f739bd2f6c38abec074ce882f950bb24
# Parent  4d11ada8039510b5ba0bba65dc0105818547d64b
# Parent  d396866fa7d88e0ee79ef5e50c1a84599e76e287
maint: Periodic merge of stable to default.

diff --git a/libinterp/corefcn/regexp.cc b/libinterp/corefcn/regexp.cc
--- a/libinterp/corefcn/regexp.cc
+++ b/libinterp/corefcn/regexp.cc
@@ -832,16 +832,28 @@ Zero-length matches are not returned.  (
 
 @item emptymatch
 Return zero-length matches.
 
 @code{regexp ('a', 'b*', 'emptymatch')} returns @code{[1 2]} because there
 are zero or more @qcode{'b'} characters at positions 1 and end-of-string.
 
 @end table
+Stack Limitation Note: Pattern searches are done with a recursive function
+which can overflow the program stack when there are a high number of matches.
+For example,
+
+@example
+@code{regexp (repmat ('a', 1, 1e5), '(a)+')}
+@end example
+
+may lead to a segfault.  As an alternative, consider constructing pattern
+searches that reduce the number of matches (e.g., by creatively using set
+complement), and then further processing the return variables (now reduced in
+size) with successive @code{regexp} searches.
 @seealso{regexpi, strfind, regexprep}
 @end deftypefn */)
 {
   if (args.length () < 2)
     print_usage ();
 
   octave_value_list retval;
 
