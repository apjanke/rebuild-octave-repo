# HG changeset patch
# User Rik <rik@octave.org>
# Date 1534272758 25200
#      Tue Aug 14 11:52:38 2018 -0700
# Node ID 88e87c69c8b8dbca9a75b00b6721c38daadc15d0
# Parent  3293cd2651fbd7eaf05b1fec5dbaa0612656696d
Implement "cdata" property for pushbuttons (bug #44332).

* ToggleButtonControl.h (update): Add protected function to class.

* ToggleButtonControl.cc (ToggleButtonControl): In constructor,
create a QImage from "cdata" property and apply it using setIcon().
* ToggleButtonControl.cc (update): New function to handle changes to
object properties.  Decode "ID_CDATA" in switch statement.  Create a QImage
from "cdata" property and apply it using setIcon().

* PushButtonControl.cc (PushButtonControl): In constructor,
create a QImage from "cdata" property and apply it using setIcon().
* PushButtonControl.cc (update): Decode "ID_CDATA" in switch statement.  Create
a QImage from "cdata" property and apply it using setIcon().

diff --git a/libgui/graphics/PushButtonControl.cc b/libgui/graphics/PushButtonControl.cc
--- a/libgui/graphics/PushButtonControl.cc
+++ b/libgui/graphics/PushButtonControl.cc
@@ -49,17 +49,23 @@ namespace QtHandles
 
     return nullptr;
   }
 
   PushButtonControl::PushButtonControl (const graphics_object& go,
                                         QPushButton *btn)
     : ButtonControl (go, btn)
   {
+    uicontrol::properties& up = properties<uicontrol> ();
+
     btn->setAutoFillBackground (true);
+    octave_value cdat = up.get_cdata ();
+    QImage img = Utils::makeImageFromCData (cdat,
+                                            cdat.rows (), cdat.columns ());
+    btn->setIcon (QIcon (QPixmap::fromImage (img)));
   }
 
   PushButtonControl::~PushButtonControl (void)
   { }
 
   void
   PushButtonControl::update (int pId)
   {
@@ -67,15 +73,25 @@ namespace QtHandles
     QPushButton *btn = qWidget<QPushButton> ();
 
     switch (pId)
       {
       case uicontrol::properties::ID_STRING:
         btn->setText (Utils::fromStdString (up.get_string_string ()));
         break;
 
+      case uicontrol::properties::ID_CDATA:
+        {
+          octave_value cdat = up.get_cdata ();
+          QImage img = Utils::makeImageFromCData (cdat,
+                                                  cdat.rows (),
+                                                  cdat.columns ());
+          btn->setIcon (QIcon (QPixmap::fromImage (img)));
+        }
+        break;
+
       default:
         BaseControl::update (pId);
         break;
       }
   }
 
 }
diff --git a/libgui/graphics/ToggleButtonControl.cc b/libgui/graphics/ToggleButtonControl.cc
--- a/libgui/graphics/ToggleButtonControl.cc
+++ b/libgui/graphics/ToggleButtonControl.cc
@@ -46,24 +46,54 @@ namespace QtHandles
         if (container)
           return new ToggleButtonControl (go, new QPushButton (container));
       }
 
     return nullptr;
   }
 
   ToggleButtonControl::ToggleButtonControl (const graphics_object& go,
-      QPushButton *btn)
+                                            QPushButton *btn)
     : ButtonControl (go, btn)
   {
     Object *parent = Object::parentObject (go);
     ButtonGroup *btnGroup = dynamic_cast<ButtonGroup *>(parent);
     if (btnGroup)
       btnGroup->addButton (btn);
 
+    uicontrol::properties& up = properties<uicontrol> ();
+
     btn->setCheckable (true);
     btn->setAutoFillBackground (true);
+    octave_value cdat = up.get_cdata ();
+    QImage img = Utils::makeImageFromCData (cdat,
+                                            cdat.rows (), cdat.columns ());
+    btn->setIcon (QIcon (QPixmap::fromImage (img)));
   }
 
   ToggleButtonControl::~ToggleButtonControl (void)
   { }
 
+  void
+  ToggleButtonControl::update (int pId)
+  {
+    uicontrol::properties& up = properties<uicontrol> ();
+    QPushButton *btn = qWidget<QPushButton> ();
+
+    switch (pId)
+      {
+      case uicontrol::properties::ID_CDATA:
+        {
+          octave_value cdat = up.get_cdata ();
+          QImage img = Utils::makeImageFromCData (cdat,
+                                                  cdat.rows (),
+                                                  cdat.columns ());
+          btn->setIcon (QIcon (QPixmap::fromImage (img)));
+        }
+        break;
+
+      default:
+        BaseControl::update (pId);
+        break;
+      }
+  }
+
 };
diff --git a/libgui/graphics/ToggleButtonControl.h b/libgui/graphics/ToggleButtonControl.h
--- a/libgui/graphics/ToggleButtonControl.h
+++ b/libgui/graphics/ToggleButtonControl.h
@@ -32,13 +32,16 @@ namespace QtHandles
 
   class ToggleButtonControl : public ButtonControl
   {
   public:
     ToggleButtonControl (const graphics_object& go, QPushButton *box);
     ~ToggleButtonControl (void);
 
     static ToggleButtonControl * create (const graphics_object& go);
+
+  protected:
+    void update (int pId);
   };
 
 }
 
 #endif
