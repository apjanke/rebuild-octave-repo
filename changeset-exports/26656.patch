# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1548516086 0
#      Sat Jan 26 15:21:26 2019 +0000
# Node ID ab3babe4ea2562aeac5ec041571b800ef205f0ba
# Parent  cca0548f7b862e92919e8afb8092bb9174e7092b
eliminate soon-to-be obsolete symbol types from GUI variable display

* resource-manager.h (resource_manager::storage_class_chars):
Delete unused chars.
* workspace-model.cc (workspace_model::storage_class_names):
Delete unused names.
(workspace_model::update_table): Delete unused storage class types.
(workspace_model::storage_class_default_colors):
Eliminate unused colors.

diff --git a/libgui/src/resource-manager.h b/libgui/src/resource-manager.h
--- a/libgui/src/resource-manager.h
+++ b/libgui/src/resource-manager.h
@@ -115,17 +115,17 @@ namespace octave
         instance->do_update_network_settings ();
     }
 
     static bool is_first_run (void)
     {
       return instance_ok () ? instance->do_is_first_run () : true;
     }
 
-    static QString storage_class_chars (void) { return "afghip"; }
+    static QString storage_class_chars (void) { return "agp"; }
     static QStringList storage_class_names (void);
     static QList<QColor> storage_class_default_colors (void);
 
     static QString terminal_color_chars (void) { return "fbsc"; }
     static QStringList terminal_color_names (void);
     static QList<QColor> terminal_default_colors (void);
 
     static resource_manager *instance;
diff --git a/libgui/src/workspace-model.cc b/libgui/src/workspace-model.cc
--- a/libgui/src/workspace-model.cc
+++ b/libgui/src/workspace-model.cc
@@ -56,38 +56,32 @@ namespace octave
   QList<QColor>
   workspace_model::storage_class_default_colors (void)
   {
     QList<QColor> colors;
 
     if (colors.isEmpty ())
       {
         colors << QColor (190, 255, 255)
-               << QColor (220, 255, 220)
-               << QColor (220, 220, 255)
                << QColor (255, 255, 190)
-               << QColor (255, 220, 220)
                << QColor (255, 190, 255);
       }
 
     return colors;
   }
 
   QStringList
   workspace_model::storage_class_names (void)
   {
     QStringList names;
 
     if (names.isEmpty ())
       {
-        names << QObject::tr ("automatic")
-              << QObject::tr ("function")
+        names << QObject::tr ("argument")
               << QObject::tr ("global")
-              << QObject::tr ("hidden")
-              << QObject::tr ("inherited")
               << QObject::tr ("persistent");
       }
 
     return names;
   }
 
   int
   workspace_model::rowCount (const QModelIndex&) const
@@ -296,24 +290,22 @@ namespace octave
 
         // FIXME: fix size for objects, see kluge in ov.cc
         Matrix sz = val.size ();
         dim_vector dv = dim_vector::alloc (sz.numel ());
         for (octave_idx_type i = 0; i < dv.ndims (); i++)
           dv(i) = sz(i);
 
         char storage = ' ';
-        if (syminfo.is_global ())
+        if (syminfo.is_formal ())
+          storage = 'a';
+        else if (syminfo.is_global ())
           storage = 'g';
         else if (syminfo.is_persistent ())
           storage = 'p';
-        else if (syminfo.is_automatic ())
-          storage = 'a';
-        else if (syminfo.is_formal ())
-          storage = 'f';
 
         std::ostringstream buf;
         val.short_disp (buf);
         std::string short_disp_str = buf.str ();
 
         m_scopes.append (storage);
         m_symbols.append (QString::fromStdString (nm));
         m_class_names.append (QString::fromStdString (val.class_name ()));
