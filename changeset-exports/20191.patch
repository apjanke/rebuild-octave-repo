# HG changeset patch
# User Rik <rik@octave.org>
# Date 1431618905 25200
#      Thu May 14 08:55:05 2015 -0700
# Node ID 64f817945783529a1db1aff32cfca2f91173a7eb
# Parent  38487298513b102b2791ba97f39a087be75a793b
Use strrep instead of regexprep where possible in m-files for performance.

* scripts/gui/private/__fltk_file_filter__.m, scripts/io/strread.m,
scripts/plot/util/private/__go_draw_axes__.m,
scripts/testfun/private/html_compare_plot_demos.m:
Replace instances of regexprep with strrep.

diff --git a/scripts/gui/private/__fltk_file_filter__.m b/scripts/gui/private/__fltk_file_filter__.m
--- a/scripts/gui/private/__fltk_file_filter__.m
+++ b/scripts/gui/private/__fltk_file_filter__.m
@@ -32,29 +32,29 @@ function retval = __fltk_file_filter__ (
   endif
   fltk_str = "";
   for idx = 1 : r
 
     curr_ext = file_filter{idx, 1};
     curr_ext = ostrsplit (curr_ext, ";");
 
     if (length (curr_ext) > 1)
-      curr_ext = regexprep (curr_ext, '\*\.', ',');
+      curr_ext = strrep (curr_ext, '*.', ',');
       curr_ext = strcat (curr_ext{:})(2 : end);
       curr_ext = strcat ("*.{", curr_ext, "}");
     else
       curr_ext = curr_ext{:};
     endif
 
     curr_desc = strcat (curr_ext(3:end), "-Files");
 
     if (c == 2)
       curr_desc = file_filter{idx, 2};
-      curr_desc = regexprep (curr_desc, '\(', '<');
-      curr_desc = regexprep (curr_desc, '\)', '>');
+      curr_desc = strrep (curr_desc, '(', '<');
+      curr_desc = strrep (curr_desc, ')', '>');
     endif
 
     if (length (fltk_str) > 0)
       fltk_str = strcat (fltk_str, "\t", curr_desc, " (", curr_ext, ")");
     else
       fltk_str = strcat (curr_desc, " (", curr_ext, ")");
     endif
 
diff --git a/scripts/io/strread.m b/scripts/io/strread.m
--- a/scripts/io/strread.m
+++ b/scripts/io/strread.m
@@ -347,17 +347,17 @@ function varargout = strread (str, forma
     str = strrep (str, "\r\n", "\n");
     ## CR serves no further purpose in function
     eol_char = "\n";
   endif
 
   ## Remove comments in str
   if (comment_flag)
     ## Expand 'eol_char' here, after option processing which may have set value
-    comment_end = regexprep (comment_end, "eol_char", eol_char);
+    comment_end = strrep (comment_end, "eol_char", eol_char);
     cstart = strfind (str, comment_start);
     cstop  = strfind (str, comment_end);
     ## Treat end of string as additional comment stop
     if (isempty (cstop) || cstop(end) != length (str))
       cstop(end+1) = length (str);
     endif
     if (! isempty (cstart))
       ## Ignore nested openers.
diff --git a/scripts/plot/util/private/__go_draw_axes__.m b/scripts/plot/util/private/__go_draw_axes__.m
--- a/scripts/plot/util/private/__go_draw_axes__.m
+++ b/scripts/plot/util/private/__go_draw_axes__.m
@@ -2340,22 +2340,22 @@ function str = __tex2enhanced__ (str, fn
       str = [str(1:s(i) - 1) '{/Symbol \306}' str(s(i) + 2:end)];
     else
       f = m{i}(2:end);
       if (isfield (sym, f))
         g = getfield (sym, f);
         ## FIXME: The symbol font doesn't seem to support bold or italic
         ##if (bld)
         ##  if (it)
-        ##    g = regexprep (g, '/Symbol', '/Symbol-bolditalic');
+        ##    g = strrep (g, '/Symbol', '/Symbol-bolditalic');
         ##  else
-        ##    g = regexprep (g, '/Symbol', '/Symbol-bold');
+        ##    g = strrep (g, '/Symbol', '/Symbol-bold');
         ##  endif
         ##elseif (it)
-        ##  g = regexprep (g, '/Symbol', '/Symbol-italic');
+        ##  g = strrep (g, '/Symbol', '/Symbol-italic');
         ##endif
         str = [str(1:s(i) - 1) g str(e(i) + 1:end)];
       elseif (strncmp (f, "rm", 2))
         bld = false;
         it = false;
         str = [str(1:s(i) - 1) '/' fnt ' ' str(s(i) + 3:end)];
       elseif (strncmp (f, "it", 2) || strncmp (f, "sl", 2))
         it = true;
@@ -2401,22 +2401,22 @@ function str = __tex2enhanced__ (str, fn
         ## Last desperate attempt to treat the symbol. Look for things
         ## like \pix, that should be translated to the symbol Pi and x
         for j = 1 : length (flds)
           if (strncmp (flds{j}, f, length (flds{j})))
             g = getfield (sym, flds{j});
             ## FIXME: The symbol font doesn't seem to support bold or italic
             ##if (bld)
             ##  if (it)
-            ##    g = regexprep (g, '/Symbol', '/Symbol-bolditalic');
+            ##    g = strrep (g, '/Symbol', '/Symbol-bolditalic');
             ##  else
-            ##    g = regexprep (g, '/Symbol', '/Symbol-bold');
+            ##    g = strrep (g, '/Symbol', '/Symbol-bold');
             ##  endif
             ##elseif (it)
-            ##  g = regexprep (g, '/Symbol', '/Symbol-italic');
+            ##  g = strrep (g, '/Symbol', '/Symbol-italic');
             ##endif
             str = [str(1:s(i) - 1) g str(s(i) + length (flds{j}) + 1:end)];
             break;
           endif
         endfor
       endif
     endif
   endfor
diff --git a/scripts/testfun/private/html_compare_plot_demos.m b/scripts/testfun/private/html_compare_plot_demos.m
--- a/scripts/testfun/private/html_compare_plot_demos.m
+++ b/scripts/testfun/private/html_compare_plot_demos.m
@@ -108,17 +108,17 @@ function html_compare_plot_demos (toolki
       fprintf (fid, "<tr>\n");
       for k = toolkits
         ffn = fullfile (k{:}, fn);
         fprintf (fid, "  <td>%s<br>", ffn);
         if (exist (ffn, "file"))
           fprintf (fid, "<img src='%s' style='width: %dpx;'>", ...
                         ffn, in.column_width);
         else
-          err_fn = regexprep(ffn, ".png", ".err");
+          err_fn = strrep (ffn, ".png", ".err");
           if (! exist (err_fn, "file"))
             warning("File %s doesn't exist...", err_fn);
           else
             err_fid = fopen (err_fn);
             msg = char (fread (err_fid))';
             fclose (err_fid);
             fprintf (fid, "%s", strrep (msg, "\n", "<br>"));
           endif
