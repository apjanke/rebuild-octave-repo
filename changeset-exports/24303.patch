# HG changeset patch
# User Daniel J Sebald <daniel.sebald@ieee.org>
# Date 1511381204 21600
#      Wed Nov 22 14:06:44 2017 -0600
# Branch stable
# Node ID ddc91a2ee0e0936d7b8d1465354ae8cfe01892ad
# Parent  117107eed917a700eb82e4bb8a17dd6f2743652d
Remove all delimiters from whitespace list in textscan function (bug #52479).

* oct-stream.cc (textscan::parse_options): After all options have been
  processed, remove all characters in 'delims' string and all strings in
  'delim_list' cell from the 'whitespace' string in case user adds a
  whitespace character as a delimiter.

* file-io.cc (Ftextscan): Add BIST test for bug #52479.

diff --git a/libinterp/corefcn/file-io.cc b/libinterp/corefcn/file-io.cc
--- a/libinterp/corefcn/file-io.cc
+++ b/libinterp/corefcn/file-io.cc
@@ -2191,16 +2191,27 @@ as the name of the function when reporti
 #%!test
 #%! c = textscan ("1 / 2 // 3", "%n %s %u8", "CommentStyle", {"//"});
 #%! assert (c(1), {1, "/", 2});
 
 %!assert (textscan (["1 2 3 4"; "5 6 7 8"], "%f"), {[15; 26; 37; 48]})
 
 ## Check for delimiter after exponent
 %!assert (textscan ("1e-3|42", "%f", "delimiter", "|"), {[1e-3; 42]})
+
+%!test <*52479>
+%! str = "\t\ta\tb\tc\n";
+%! ret = textscan (str, "%s", "delimiter", "\t");
+%! assert (ret, { {''; ''; 'a'; 'b'; 'c'} }) ;
+
+%!test <*52479>
+%! str = "\t\ta\tb\tc\n";
+%! ret = textscan (str, "%s", "delimiter", {"\t"});
+%! assert (ret, { {''; ''; 'a'; 'b'; 'c'} }) ;
+
 */
 
 // These tests have end-comment sequences, so can't just be in a comment
 #if 0
 ## Test unfinished comment
 %!test
 %! c = textscan ("1 2 /* half comment", "%n %u8", "CommentStyle", {"/*", "*/"});
 %! assert (c, {1, 2});
diff --git a/libinterp/corefcn/oct-stream.cc b/libinterp/corefcn/oct-stream.cc
--- a/libinterp/corefcn/oct-stream.cc
+++ b/libinterp/corefcn/oct-stream.cc
@@ -24,16 +24,17 @@ along with Octave; see the file COPYING.
 #if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cassert>
 #include <cctype>
 #include <cstring>
 
+#include <algorithm>
 #include <deque>
 #include <fstream>
 #include <iomanip>
 #include <iostream>
 #include <sstream>
 #include <string>
 
 #include "Array.h"
@@ -3712,16 +3713,34 @@ namespace octave
             if (! valid)
               error ("%s: EndOfLine must be at most one character or '\\r\\n'",
                      who.c_str ());
           }
         else
           error ("%s: unrecognized option '%s'", who.c_str (), param.c_str ());
       }
 
+    // Remove any user-supplied delimiter from whitespace list
+    for (unsigned int j = 0; j < delims.length (); j++)
+      {
+        whitespace.erase (std::remove (whitespace.begin (),
+                                       whitespace.end (),
+                                       delims[j]),
+                          whitespace.end ());
+      }
+    for (int j = 0; j < delim_list.numel (); j++)
+      {
+        std::string delim = delim_list(j).string_value ();
+        if (delim.length () == 1)
+          whitespace.erase (std::remove (whitespace.begin (), 
+                                         whitespace.end (),
+                                         delim[0]),
+                            whitespace.end ());
+      }
+
     whitespace_table = std::string (256, '\0');
     for (unsigned int i = 0; i < whitespace.length (); i++)
       whitespace_table[whitespace[i]] = '1';
 
     // For Matlab compatibility, add 0x20 to whitespace, unless
     // whitespace is explicitly ignored.
     if (! (whitespace.empty () && fmt_list.has_string))
       whitespace_table[' '] = '1';
