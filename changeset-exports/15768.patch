# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1355322936 18000
#      Wed Dec 12 09:35:36 2012 -0500
# Node ID a2a2c241f2d58d1b6a18dca31f63815c11467426
# Parent  e665645fb402b9f88cd5f9a59f730423e00d6ba4
use JAVA_CPPFLAGS when building .df files.

* Makefile.am (%.df : %.cc): Use $(JAVA_CPPFLAGS) here.

diff --git a/libinterp/Makefile.am b/libinterp/Makefile.am
--- a/libinterp/Makefile.am
+++ b/libinterp/Makefile.am
@@ -211,19 +211,27 @@ ALL_DEF_FILES = $(SRC_DEF_FILES) $(DLDFC
 $(DEF_FILES): $(OPT_HANDLERS) $(OPT_INC)
 
 ## FIXME: The following two variables are deprecated and should be removed
 ##        in Octave version 3.12.
 DLL_CDEFS = @OCTINTERP_DLL_DEFS@
 DLL_CXXDEFS = @OCTINTERP_DLL_DEFS@
 
 ## Rule to build a DEF file from a .cc file
+##
+## FIXME -- This rule should be fixed to avoid using special
+## flags like JAVA_CPPFLAGS for every file.  How could it be written
+## so that it uses octave_value_liboctave_value_la_CPPFLAGS when
+## generating the octave-value/*.df files?
+## 
+## FIXME -- Shouldn't the build stop if CPP fails here?
 %.df: %.cc
 	$(CXXCPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
-	  $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) \
+	  $(AM_CPPFLAGS) $(JAVA_CPPFLAGS) $(CPPFLAGS) \
+	  $(AM_CXXFLAGS) $(CXXFLAGS) \
 	  -DMAKE_BUILTINS $< | $(srcdir)/mkdefs $(srcdir) $< > $@-t
 	mv $@-t $@
 
 ## Override Automake's rule that forces a .hh extension on us even
 ## though we don't want it.  It would be super awesome if automake
 ## would allow users to choose the header file extension.
 .yy.cc:
 	$(am__skipyacc) $(SHELL) $(YLWRAP) $< y.tab.c $@ y.tab.h $*.h y.output $*.output -- $(YACCCOMPILE)
