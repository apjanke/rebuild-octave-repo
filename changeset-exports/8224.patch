# HG changeset patch
# User David Bateman <dbateman@free.fr>
# Date 1224149497 -3600
#      Thu Oct 16 10:31:37 2008 +0100
# Node ID 62d90e049d4fd3a6c44f9df3b7a0bc6c7281a6ed
# Parent  0c91b9a17dcfd3c4fb3810e6f47850ab24d8cfba
Always use multiplot with gnuplot to ensure correct postscript bounding box

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2008-10-16  David Bateman  <dbateman@free.fr>
+
+	* plot/__go_draw_figure__.m: Always use multiplot and create an 
+	enclosing axis to ensure bounding box of postscript is correct.
+
 2008-10-16  Ben Abbott  <bpabbott@mac.com>
 
 	* plot/__go_draw_axes__.m (do_tics_1): New arg, interpreter.
 	(do_tics): Pass interpreter to do_tics_1.
 
 2008-10-15  David Bateman  <dbateman@free.fr>
 
 	* general/colon.m: Small typo.
diff --git a/scripts/plot/__go_draw_figure__.m b/scripts/plot/__go_draw_figure__.m
--- a/scripts/plot/__go_draw_figure__.m
+++ b/scripts/plot/__go_draw_figure__.m
@@ -37,37 +37,32 @@ function __go_draw_figure__ (f, plot_str
 	  switch (obj.type)
 	    case "axes"
 	      axes_count++;
 	  endswitch
 	endfor
 
 	fputs (plot_stream, "\nreset;\n");
 	fputs (plot_stream, "set autoscale fix;\n");
-
-	multiplot_mode = axes_count > 1;
-
-	if (multiplot_mode)
-	  fputs (plot_stream, "set multiplot;\n");
-	endif
+	fputs (plot_stream, "set multiplot;\n");
+	fputs (plot_stream, "set origin 0, 0\n");
+	fputs (plot_stream, "set size 1, 1\n");
 
 	for i = 1:nkids
 	  obj = get (kids(i));
 	  switch (obj.type)
 	    case "axes"
 	      __go_draw_axes__ (kids (i), plot_stream, enhanced, mono);
 	    otherwise
 	      error ("__go_draw_figure__: unknown object class, %s",
 		     obj.type);
 	  endswitch
 	endfor
 
-	if (multiplot_mode)
-	  fputs (plot_stream, "unset multiplot;\n");
-	endif
+	fputs (plot_stream, "unset multiplot;\n");
       else
 	fputs (plot_stream, "\nreset; clear;\n");
 	fflush (plot_stream);
       endif
     else
       error ("__go_draw_figure__: expecting figure object, found `%s'",
 	     f.type);
     endif
