# HG changeset patch
# User Pantxo Diribarne <pantxo.diribarne@gmail.com>
# Date 1487250269 -3600
#      Thu Feb 16 14:04:29 2017 +0100
# Node ID 239a9fed80de05561420434241635f0120fa3fc9
# Parent  cbefc3f49439a91ce029fa98a8e5ca9dfa699c43
New mechanism to deprecate graphics properties (bug #50327)

* genprop.awk (emit_get_accessor, emit_declarations): new flag "d" to mark
   deprecated properties. Emit warning in generated accessors
* graphics.in.h (figure::preoperties, axes::properties): remove FIXME about some
   deprecated properties and mark them deprecated for genprop.awk
* deprecate-props.tst: new test file to be fed with properties that where
   deprecated in a given version

diff --git a/NEWS b/NEWS
--- a/NEWS
+++ b/NEWS
@@ -26,16 +26,33 @@ Summary of important user-visible change
 
     The following functions have been deprecated in Octave 4.4 and will
     be removed from Octave 4.8 (or whatever version is the second major
     release after 4.4):
 
       Function             | Replacement
       ---------------------|------------------
 
+ ** Deprecated graphics properties.
+
+    The following properties have been deprecated in Octave 4.4 and will
+    be removed from Octave 4.8 (or whatever version is the second major
+    release after 4.4):
+
+      Object               | Property
+      ---------------------|------------------
+      figure               | doublebuffer
+                           | mincolormap
+                           | wvisual
+                           | wvisualmode
+                           | xdisplay
+                           | xvisual
+                           | xvisualmode
+      axes                 | drawmode
+      annotation           | edgecolor ("rectangle")
 
  ** The following functions were deprecated in Octave 4.0 and have been
     removed from Octave 4.4.
 
       allow_noninteger_range_as_index
       bicubic
       delaunay3
       do_braindead_shortcircuit_evaluation
diff --git a/libinterp/corefcn/graphics.in.h b/libinterp/corefcn/graphics.in.h
--- a/libinterp/corefcn/graphics.in.h
+++ b/libinterp/corefcn/graphics.in.h
@@ -3466,21 +3466,16 @@ public:
     void update_units (const caseless_str& old_units);
 
     void update_paperunits (const caseless_str& old_paperunits);
 
     std::string get_title (void) const;
 
     // See the genprops.awk script for an explanation of the
     // properties declarations.
-    // FIXME: Several properties have been deleted from Matlab.
-    //        We should either immediately remove them or figure out a way
-    //        to deprecate them for a release or two.
-    // Obsolete properties: doublebuffer, mincolormap, wvisual, wvisualmode,
-    // xdisplay, xvisual, xvisualmode
 
     // Programming note: Keep property list sorted if new ones are added.
 
     BEGIN_PROPERTIES (figure)
       array_property alphamap , Matrix (64, 1, 1)
       callback_property buttondownfcn , Matrix ()
       callback_property closerequestfcn , "closereq"
       color_property color , color_property (color_values (1, 1, 1), radio_values ("none"))
@@ -3543,23 +3538,23 @@ public:
       any_property __pan_mode__ h , Matrix ()
       any_property __plot_stream__ h , Matrix ()
       any_property __rotate_mode__ h , Matrix ()
       any_property __zoom_mode__ h , Matrix ()
 
       // Obsolete properties: doublebuffer, mincolormap, wvisual, wvisualmode,
       //                      xdisplay, xvisual, xvisualmode
       // FIXME: Remove in version 4.6
-      bool_property doublebuffer h , "on"
-      double_property mincolormap h , 64
-      string_property wvisual hm , ""
-      radio_property wvisualmode h , "{auto}|manual"
-      string_property xdisplay h , ""
-      string_property xvisual hm , ""
-      radio_property xvisualmode h , "{auto}|manual"
+      bool_property doublebuffer hd , "on"
+      double_property mincolormap hd , 64
+      string_property wvisual hmd , ""
+      radio_property wvisualmode hd , "{auto}|manual"
+      string_property xdisplay hd , ""
+      string_property xvisual hmd , ""
+      radio_property xvisualmode hd , "{auto}|manual"
     END_PROPERTIES
 
   protected:
     void init (void)
     {
       alphamap.add_constraint (dim_vector (-1, 1));
       colormap.add_constraint (dim_vector (-1, 3));
       outerposition.add_constraint (dim_vector (1, 4));
@@ -3908,21 +3903,16 @@ public:
     void set_text_child (handle_property& h, const std::string& who,
                          const octave_value& v);
 
     void delete_text_child (handle_property& h);
 
     // See the genprops.awk script for an explanation of the
     // properties declarations.
 
-    // FIXME: Several properties have been deleted from Matlab.
-    //        We should either immediately remove them or figure out a way
-    //        to deprecate them for a release or two.
-    // Obsolete properties: drawmode
-
     // Programming note: Keep property list sorted if new ones are added.
 
     BEGIN_PROPERTIES (axes)
       radio_property activepositionproperty , "{outerposition}|position"
       row_vector_property alim m , default_lim ()
       radio_property alimmode , "{auto}|manual"
       color_property ambientlightcolor , color_values (1, 1, 1)
       bool_property box u , "off"
@@ -3939,17 +3929,17 @@ public:
       radio_property climmode al , "{auto}|manual"
       radio_property clippingstyle , "{3dbox}|rectangle"
       color_property color , color_property (color_values (1, 1, 1), radio_values ("none"))
       array_property colororder , default_colororder ()
       double_property colororderindex , 1.0
       array_property currentpoint , Matrix (2, 3, 0.0)
       row_vector_property dataaspectratio mu , Matrix (1, 3, 1.0)
       radio_property dataaspectratiomode u , "{auto}|manual"
-      radio_property drawmode , "{normal}|fast"
+      radio_property drawmode hd , "{normal}|fast"
       radio_property fontangle u , "{normal}|italic"
       string_property fontname u , OCTAVE_DEFAULT_FONTNAME
       double_property fontsize u , 10
       radio_property fontunits SU , "{points}|inches|centimeters|normalized|pixels"
       bool_property fontsmoothing , "on"
       radio_property fontweight u , "{normal}|bold"
       double_property gridalpha m , 0.15
       radio_property gridalphamode , "{auto}|manual"
diff --git a/libinterp/genprops.awk b/libinterp/genprops.awk
--- a/libinterp/genprops.awk
+++ b/libinterp/genprops.awk
@@ -50,30 +50,32 @@
 ##
 ##   void
 ##   set_NAME (const octave_value& val)
 ##   {
 ##     set_NAME (TYPE (val));
 ##   }
 ##
 ## If present, the QUALIFIERS string may include any of the characters
-## g, G, m, s, S, o, O, h, which have the following meanings:
+## g, G, m, s, S, o, O, h, d which have the following meanings:
 ##
 ##   g:  There is a custom inline definition for the get function,
 ##       so we don't emit one.
 ##
 ##   G:  There is a custom extern definition for the get function,
 ##       so we emit only the declaration.
 ##
 ##   s:  There is a custom inline definition for the type-specific set
 ##       function, so we don't emit one.
 ##
 ##   S:  There is a custom extern definition for the type-specific set
 ##       function, so we emit only the declaration.
 ##
+##   d:  The property is deprecated and a warning is emitted when accessing it.
+##
 ################################################################################
 ##   'o','O','a' are currently not processed.  They are commented out in code.
 ################################################################################
 ##
 ##   o:  There is a custom inline definition for the octave_value version
 ##       of the set function, so we don't emit one.
 ##
 ##   O:  There is a custom extern definition for the octave_value version
@@ -139,17 +141,19 @@
 ## is something other than octave_value.
 
 ## simple accessor
 
 function emit_get_accessor (i, rtype, faccess)
 {
   printf ("  %s get_%s (void) const", rtype, name[i]);
 
-  if (emit_get[i] == "definition")
+  if (emit_get[i] == "definition" && deprecated[i])
+    printf ("\n{\n  warning_with_id (\"Octave:deprecated-property\",\"'%s' is deprecated and will be removed from a future version of Octave\");\n  return %s.%s ();\n}\n", name[i], name[i], faccess);
+  else if (emit_get[i] == "definition")
     printf (" { return %s.%s (); }\n", name[i], faccess);
   else
     printf (";\n");
 }
 
 ## bool_property
 
 function emit_get_bool (i)
@@ -383,16 +387,18 @@ function emit_declarations ()
           has_builtin_listeners = 0;
 
         printf ("\n  {\n      {\n        if (%s.set (val, %s))\n          {\n",
           name[i], (has_builtin_listeners ? "false" : "true"));
         if (mode[i])
           printf ("            set_%smode (\"manual\");\n", name[i]);
         if (updater[i])
           printf ("            update_%s ();\n", name[i]);
+        if (deprecated[i])
+          printf ("            warning_with_id (\"Octave:deprecated-property\",\"'%s' is deprecated and will be removed from a future version of Octave\");\n", name[i]);
         if (limits[i])
           printf ("            update_axis_limits (\"%s\");\n", name[i]);
         if (has_builtin_listeners)
           printf ("            %s.run_listeners (POSTSET);\n", name[i]);
         if (! mutable[i])
           printf ("            mark_modified ();\n");
         printf ("          }\n");
         if (mode[i])
@@ -755,16 +761,17 @@ BEGIN {
     limits[idx] = 0;
     mode[idx] = 0;
     hidden[idx] = 0;
     readonly[idx] = 0;
     emit_get[idx] = "definition";
     emit_set[idx] = "definition";
     defval[idx] = "";
     updater[idx] = "";
+    deprecated[idx] = 0;
     factory[idx] = 1;
 ##    if (type[idx] == "octave_value")
 ##      emit_ov_set[idx] = "";
 ##    else
 ##      emit_ov_set[idx] = "definition";
 
     if (NF >= field)
     {
@@ -811,16 +818,20 @@ BEGIN {
         if (index (quals, "u"))
           updater[idx] = "inline";
 
         ## There is an extern updater method that should be called
         ## from the set method
         if (index (quals, "U"))
           updater[idx] = "extern";
 
+        ## The property is deprecated 
+        if (index (quals, "d"))
+          deprecated[idx] = 1;
+
         ## There is not factory default value
         if (index (quals, "f"))
           factory[idx] = 0;
 
 ##        ## emmit an asignment set function
 ##        if (index (quals, "a"))
 ##          emit_ov_set[idx] = "assignment";
 ##
diff --git a/test/deprecate-props.tst b/test/deprecate-props.tst
new file mode 100644
--- /dev/null
+++ b/test/deprecate-props.tst
@@ -0,0 +1,100 @@
+## Copyright (C) 2017 Pantxo Diribarne
+##
+## This file is part of Octave.
+##
+## Octave is free software; you can redistribute it and/or modify it
+## under the terms of the GNU General Public License as published by
+## the Free Software Foundation; either version 3 of the License, or
+## (at your option) any later version.
+##
+## Octave is distributed in the hope that it will be useful, but
+## WITHOUT ANY WARRANTY; without even the implied warranty of
+## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+## GNU General Public License for more details.
+##
+## You should have received a copy of the GNU General Public License
+## along with Octave; see the file COPYING.  If not, see
+## <http://www.gnu.org/licenses/>.
+
+## Put graphics properties here that should be removed, or for which some
+## values (radio strings only) should not be accepted, in a given future
+## version.  Don't forget to add a note in the NEWS file.
+
+%!function testprop (h, prop, vrs, val = [])
+%!  vrsmax = strsplit (vrs, ".");
+%!  vrscur = strsplit (version (), ".");
+%!  if (num2str (vrsmax{1}) < num2str (vrscur{1}) ||
+%!      num2str (vrsmax{2}) < num2str (vrscur{2}))
+%!    if (isempty (val) && isprop (h, prop))
+%!      error ("Please remove %s property %s", get (h, "type"), prop);
+%!    elseif (! isempty (val) && ! isempty (strfind (val, set (h, prop))))
+%!      error ("Please remove '%s' from allowed values for %s property %s",
+%!             val, get (h, "type"), prop);
+%!    endif
+%!  endif
+%!endfunction
+
+## patch/surface "normalmode" deprecated in 4.2, remove from 4.5.+
+%!test
+%! hf = figure ("visible", "off");
+%! unwind_protect
+%!   hp = patch ();
+%!   testprop (hp, "normalmode", "4.4");
+%! unwind_protect_cleanup
+%!   close (hf);
+%! end_unwind_protect
+
+%! hf = figure ("visible", "off");
+%! unwind_protect
+%!   hs = surface ();
+%!   testprop (hs, "normalmode", "4.4");
+%! unwind_protect_cleanup
+%!   close (hf);
+%! end_unwind_protect
+
+## axes, "zero" value for "x/yaxislocation" deprecated in 4.2, remove from 4.5.+
+%!test
+%! hf = figure ("visible", "off");
+%! unwind_protect
+%!   ha = axes ();
+%!   testprop (ha, "xaxislocation", "4.4", "zero");
+%!   testprop (ha, "yaxislocation", "4.4", "zero");
+%! unwind_protect_cleanup
+%!   close (hf);
+%! end_unwind_protect
+
+## annotation rectangle "edgecolor" deprecated in 4.4, remove from 4.7.+
+%!test
+%! hf = figure ("visible", "off");
+%! unwind_protect
+%!   ha = annotation ("rectangle");
+%!   testprop (ha, "edgecolor", "4.6");
+%! unwind_protect_cleanup
+%!   close (hf);
+%! end_unwind_protect
+
+## figure "doublebuffer, mincolormap, wvisual, wvisualmode, xdisplay,
+## xvisual, xvisualmode" deprecated in 4.4, remove from 4.7.+
+%!test
+%! hf = figure ("visible", "off");
+%! unwind_protect
+%!   testprop (hf, "doublebuffer", "4.6");
+%!   testprop (hf, "mincolormap", "4.6");
+%!   testprop (hf, "wvisual", "4.6");
+%!   testprop (hf, "wvisualmode", "4.6");
+%!   testprop (hf, "xdisplay", "4.6");
+%!   testprop (hf, "xvisual", "4.6");
+%!   testprop (hf, "xvisualmode", "4.6");
+%! unwind_protect_cleanup
+%!   close (hf)
+%! end_unwind_protect
+
+## axes "drawmode" deprecated in 4.4, remove from 4.7.+
+%!test
+%! hf = figure ("visible", "off");
+%! unwind_protect
+%!   hax = axes ();
+%!   testprop (hax, "drawmode", "4.6");
+%! unwind_protect_cleanup
+%!   close (hf);
+%! end_unwind_protect
