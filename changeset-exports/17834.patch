# HG changeset patch
# User Rik <rik@octave.org>
# Date 1383437189 25200
#      Sat Nov 02 17:06:29 2013 -0700
# Node ID 7957aedf0b2d998a06bd5733ac7817042f9f53a5
# Parent  3b3f389c99cb715dd6771dba280e5f23d2a455db
Fix 4 %!tests for convolution.

* libinterp/corefcn/conv2.cc: Use %!test declaration so that shared variables
are correctly set.

diff --git a/libinterp/corefcn/conv2.cc b/libinterp/corefcn/conv2.cc
--- a/libinterp/corefcn/conv2.cc
+++ b/libinterp/corefcn/conv2.cc
@@ -412,42 +412,44 @@ The size of the result is @code{max (siz
 ## of convn to test itself. However, because calculations are done
 ## differently based on the shape option, it will help to catch some
 ## bugs. See also bug #39314
 %!shared a, b, c
 %! ## test 3D by 3D
 %! a = rand (10, 10, 10);
 %! b = rand (3, 3, 3);
 %! c = convn (a, b, "full");
-%!assert (convn (a, b, "same"), c(2:11,2:11,2:11));
-%!assert (convn (a, b, "valid"), c(3:10,3:10,3:10));
+%!assert (convn (a, b, "same"), c(2:11,2:11,2:11))
+%!assert (convn (a, b, "valid"), c(3:10,3:10,3:10))
 %!
+%!test
 %! ## test 3D by 2D
 %! a = rand (10, 10, 10);
 %! b = rand (3, 3);
 %! c = convn (a, b, "full");
-%!assert (convn (a, b, "same"), c(2:11,2:11,:));
-%!assert (convn (a, b, "valid"), c(3:10,3:10,:));
+%!assert (convn (a, b, "same"), c(2:11,2:11,:))
+%!assert (convn (a, b, "valid"), c(3:10,3:10,:))
 %!
+%!test
 %! ## test 2D by 3D
 %! a = rand (10, 10);
 %! b = rand (3, 3, 3);
 %! c = convn (a, b, "full");
-%!assert (convn (a, b, "same"), c(2:11,2:11,2));
-%!assert (convn (a, b, "valid"), c(3:10,3:10,3:2)); # a 7x7x0 matrix
+%!assert (convn (a, b, "same"), c(2:11,2:11,2))
+%!assert (convn (a, b, "valid"), c(3:10,3:10,3:2))  # a 7x7x0 matrix
 %!
-%! ## test multiple different number of dimensions, with odd
-%! ## and even numbers
+%!test
+%! ## test multiple different number of dimensions, with odd and even numbers
 %! a = rand (10, 15, 7, 8, 10);
 %! b = rand (4, 3, 2, 3);
 %! c = convn (a, b, "full");
 %!assert (convn (a, b, "same"), c(3:12,2:16,2:8,2:9,:))
-%!assert (convn (a, b, "valid"), c(4:10,3:15,2:7,3:8,:));
+%!assert (convn (a, b, "valid"), c(4:10,3:15,2:7,3:8,:))
 
-%!shared a, b, c
+%!test
 %! a = reshape (floor (magic (16) /10), [4 8 4 2]);
 %! b = reshape (magic (6), [4 3 3]);
 %! c = zeros (7, 10, 6, 2);
 %! c(:,:,1,1) = [
 %!    875  1415  1215   741   288   264   635  1109   687   171
 %!    110   467  1551  1790  1891  1651  1165   900   659   568
 %!    883  1047  1475  1964  2181  2302  2117  1674   579   234
 %!    940  2330  3099  2573  2306  2207  2442  2918  2272  1004
@@ -537,26 +539,26 @@ The size of the result is @code{max (siz
 %! c(:,:,6,2) = [
 %!     19   147   384   716  1016  1059   927   570   276    80
 %!    441   791  1298  1320  1401  1396  1409  1367   865   500
 %!    932  1537  2155  1870  1860  1946  2221  2487  1584   874
 %!   1201  2067  2705  2538  2512  2687  2806  2971  1812   756
 %!    925  1976  2363  1971  1636  1600  1844  2239  1664   626
 %!    372  1133  1558  1687  1570  1401  1243  1122   883   264
 %!     60   270   556   857  1024   870   569   282    66     0];
-%!assert (convn(a, b, "full"), c);
-%!assert (convn(a, b, "same"), c(3:6,2:9,2:5,:));
-%!assert (convn(a, b, "valid"), c(4,3:8,3:4,:));
+%!assert (convn(a, b, "full"), c)
+%!assert (convn(a, b, "same"), c(3:6,2:9,2:5,:))
+%!assert (convn(a, b, "valid"), c(4,3:8,3:4,:))
 
 ## test correct class
-%!assert (class (convn (rand(5), rand(3))), "double");
-%!assert (class (convn (rand(5, "single"), rand(3))), "single");
-%!assert (class (convn (rand(5), rand(3, "single"))), "single");
-%!assert (class (convn (true (5), rand(3))), "double");
-%!assert (class (convn (true (5), rand(3, "single"))), "single");
-%!assert (class (convn (ones(5, "uint8"), rand(3))), "double");
-%!assert (class (convn (rand (3, "single"), ones(5, "uint8"))), "single");
+%!assert (class (convn (rand(5), rand(3))), "double")
+%!assert (class (convn (rand(5, "single"), rand(3))), "single")
+%!assert (class (convn (rand(5), rand(3, "single"))), "single")
+%!assert (class (convn (true (5), rand(3))), "double")
+%!assert (class (convn (true (5), rand(3, "single"))), "single")
+%!assert (class (convn (ones(5, "uint8"), rand(3))), "double")
+%!assert (class (convn (rand (3, "single"), ones(5, "uint8"))), "single")
 
 %!error convn ()
 %!error convn (1)
 %!error <SHAPE type not valid> convn (1,2, "NOT_A_SHAPE")
 %!error convn (rand (3), 1, 1)
 */
