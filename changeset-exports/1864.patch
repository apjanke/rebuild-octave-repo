# HG changeset patch
# User jwe
# Date 823430593 0
#      Sun Feb 04 10:43:13 1996 +0000
# Node ID e1c4dd0d503dc17f42d97829976b0498242e8400
# Parent  986e565efd0a1c1fc51f2c13111ffbec4a2076b7
[project @ 1996-02-04 10:43:13 by jwe]

diff --git a/liboctave/NLFunc.h b/liboctave/NLFunc.h
--- a/liboctave/NLFunc.h
+++ b/liboctave/NLFunc.h
@@ -1,12 +1,12 @@
 // NLFunc.h                                                -*- C++ -*-
 /*
 
-Copyright (C) 1992, 1993, 1994, 1995 John W. Eaton
+Copyright (C) 1996 John W. Eaton
 
 This file is part of Octave.
 
 Octave is free software; you can redistribute it and/or modify it
 under the terms of the GNU General Public License as published by the
 Free Software Foundation; either version 2, or (at your option) any
 later version.
 
@@ -22,55 +22,48 @@ Software Foundation, 59 Temple Place - S
 */
 
 #if !defined (octave_NLFunc_h)
 #define octave_NLFunc_h 1
 
 class ColumnVector;
 class Matrix;
 
-class NLFunc
+class
+NLFunc
 {
 public:
 
   typedef ColumnVector (*nonlinear_fcn) (const ColumnVector&);
   typedef Matrix (*jacobian_fcn) (const ColumnVector&);
 
   NLFunc (void)
-    {
-      fun = 0;
-      jac = 0;
-    }
+    : fun (0), jac (0) { }
 
   NLFunc (const nonlinear_fcn f)
-    {
-      fun = f;
-      jac = 0;
-    }
+    : fun (f), jac (0) { }
 
   NLFunc (const nonlinear_fcn f, const jacobian_fcn j)
-    {
-      fun = f;
-      jac = j;
-    }
+    : fun (f), jac (j) { }
 
   NLFunc (const NLFunc& a)
-    {
-      fun = a.function ();
-      jac = a.jacobian_function ();
-    }
+    : fun (a.fun), jac (a.jac) { }
 
   NLFunc& operator = (const NLFunc& a)
     {
-      fun = a.function ();
-      jac = a.jacobian_function ();
-
+      if (this != &a)
+	{
+	  fun = a.fun;
+	  jac = a.jac;
+	}
       return *this;
     }
 
+  ~NLFunc (void) { }
+
   nonlinear_fcn function (void) const { return fun; }
 
   NLFunc& set_function (const nonlinear_fcn f)
     {
       fun = f;
       return *this;
     }
 
