# HG changeset patch
# User David Grundberg <davidg@cs.umu.se>
# Date 1257234560 -3600
#      Tue Nov 03 08:49:20 2009 +0100
# Node ID 9d9f858849c7b9db158d7c55e669be0e52c2ded4
# Parent  fbf15a0f30f0a5d9c8a66b5c4e9517e07ab929ab
Allow and ignore extra outargs from user-defined size methods

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2009-11-03  David Grundberg  <davidg@cs.umu.se>
+
+	* ov-class.cc (octave_class::size): Allow and ignore extra outargs
+	from user-defined size methods.
+
 2009-11-03  David Grundberg  <davidg@cs.umu.se>
 
 	* ov-class.cc (make_idx_args): Call user-defined subsref/subsasgn
 	with 1xN structs instead of Nx1.
 
 2009-11-02  Jaroslav Hajek  <highegg@gmail.com>
 
 	* ov-class.cc (octave_class::unique_parent_class): New method.
diff --git a/src/ov-class.cc b/src/ov-class.cc
--- a/src/ov-class.cc
+++ b/src/ov-class.cc
@@ -301,20 +301,20 @@ octave_class::size (void)
   octave_value meth = symbol_table::find_method ("size", class_name ());
 
   if (meth.is_defined ())
     {
       count++;
       octave_value_list args (1, octave_value (this));
 
       octave_value_list lv = feval (meth.function_value (), args, 1);
-      if (lv.length () == 1 && lv(0).is_matrix_type () && lv(0).dims ().is_vector ())
+      if (lv.length () > 0 && lv(0).is_matrix_type () && lv(0).dims ().is_vector ())
         retval = lv(0).matrix_value ();
       else
-        error ("@%s/size: invalid return value");
+        error ("@%s/size: invalid return value", class_name ().c_str ());
     }
 
   return retval;
 }
 
 octave_idx_type
 octave_class::numel (const octave_value_list& idx)
 {
