# HG changeset patch
# User Rik <rik@octave.org>
# Date 1411882764 25200
#      Sat Sep 27 22:39:24 2014 -0700
# Node ID 751d4a76c2214992d072ee672017bc2c39e1f7bc
# Parent  e360368bd49cac3e44e28cee2844b9ecc0664fa4
parseparams.m: Add BIST tests to function.

* parseparams.m: Add seealso link to inputParser function.
Add BIST tests to function.

diff --git a/scripts/miscellaneous/parseparams.m b/scripts/miscellaneous/parseparams.m
--- a/scripts/miscellaneous/parseparams.m
+++ b/scripts/miscellaneous/parseparams.m
@@ -47,17 +47,17 @@
 ## In the second form of the call, available options are specified directly
 ## with their default values given as name-value pairs.
 ## If @var{params} do not form name-value pairs, or if an option occurs
 ## that does not match any of the available options, an error occurs.
 ## When called from an m-file function, the error is prefixed with the
 ## name of the caller function.
 ## The matching of options is case-insensitive.
 ##
-## @seealso{varargin}
+## @seealso{varargin, inputParser}
 ## @end deftypefn
 
 ## Author: Alexander Barth <abarth93@users.sourceforge.net>
 ## Author: Aida Alvera Azcarate <aida@netecho.info>
 
 function [reg, varargout] = parseparams (params, varargin)
 
   strs = cellfun ("isclass", params, "char");
@@ -100,8 +100,30 @@ function [reg, varargout] = parseparams 
 endfunction
 
 function error_as_caller (msg, varargin)
   stack = dbstack (1); # omit me
   fname = stack(min (2, end)).name;
   error ([fname, ": ", msg], varargin{:});
 endfunction
 
+
+%!test
+%! [reg, prop] = parseparams ({1, 2, "linewidth", 10});
+%! assert (reg, {[1], [2]});
+%! assert (prop, {"linewidth", 10});
+%!test
+%! [reg, prop] = parseparams ({1, 2, 3});
+%! assert (reg, {[1], [2], [3]});
+%! assert (isempty (prop));
+%!test
+%! [reg, prop] = parseparams ({"prop1", "val1"});
+%! assert (isempty (reg));
+%! assert (prop, {"prop1", "val1"});
+%!test
+%! [reg, prop1] = parseparams ({"linewidth", 5}, "linewidth", 10);
+%! assert (isempty (reg));
+%! assert (prop1, 5);
+
+%!error <needs odd number of arguments> parseparams ({1}, "linewidth")
+%!error <must be given as name-value pairs> parseparams ({1, "color"}, "linewidth", 5)
+%!error <unrecognized option: color> parseparams ({1, "color", 5}, "linewidth", 5)
+
