# HG changeset patch
# User jwe
# Date 770417435 0
#      Tue May 31 20:50:35 1994 +0000
# Node ID b7187b46004f27dcb608a3c6782fd824542cf143
# Parent  e27d10f2e5732a5d24007e5cc7d5764f584c8e59
[project @ 1994-05-31 20:50:35 by jwe]

diff --git a/src/user-prefs.cc b/src/user-prefs.cc
--- a/src/user-prefs.cc
+++ b/src/user-prefs.cc
@@ -81,27 +81,27 @@ check_str_pref (char *var)
  * identifiers and `('.  For example, the statement
  *
  *   [eye (2)]
  *
  * will be parsed as
  *
  *   [eye, (2)]
  *
- * and will result in an error since the eye function will be
+ * and will result in an error since the `eye' function will be
  * called with no arguments.  To get around this, you would have to
  * omit the space between `eye' and the `('.
  *
  * The default value is 0, which results in behavior that is the same
  * as traditional, except that Octave does not convert spaces to a
  * comma between identifiers and `('.  For example, the statement
  *
  *   [eye (2)]
  *
- * will result in a call to linspace with the argument `2'. 
+ * will result in a call to `eye' with the argument `2'. 
  */
 int
 commas_in_literal_matrix (void)
 {
   int pref = 0;
   char *val = builtin_string_variable ("commas_in_literal_matrix");
   if (val != (char *) NULL)
     {
