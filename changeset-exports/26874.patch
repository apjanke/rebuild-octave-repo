# HG changeset patch
# User Markus MÃ¼tzel <markus.muetzel@gmx.de>
# Date 1552238725 -3600
#      Sun Mar 10 18:25:25 2019 +0100
# Node ID 69722280102ceeb61f3db97df446ad83ac5f20cc
# Parent  9ec36417c262bde4c9aa30bb987aaaff5311c304
Calculate distance of axis limits on log scale for logarithmic axes (bug #55876).

* graphics.cc (axes::properties::check_axis_limits): For logarithmic axis scale,
  calculate the distance between the limits in decades.

diff --git a/libinterp/corefcn/graphics.cc b/libinterp/corefcn/graphics.cc
--- a/libinterp/corefcn/graphics.cc
+++ b/libinterp/corefcn/graphics.cc
@@ -7635,28 +7635,27 @@ axes::properties::check_axis_limits (Mat
       do_update = true;
     }
   if (limits(0) == 0 && limits(1) == 0)
     {
       limits = default_lim (logscale);
       do_update = true;
     }
   // FIXME: maybe this test should also be relative?
-  else if (std::abs (limits(0) - limits(1)) < sqrt (eps))
-    {
-      if (logscale)
-        {
-          limits(0) = (limits(0) < 0 ? 10.0 * limits(0) : 0.1 * limits(0));
-          limits(1) = (limits(1) < 0 ? 0.1 * limits(1) : 10.0 * limits(1));
-        }
-      else
-        {
-          limits(0) -= 0.1 * std::abs (limits(0));
-          limits(1) += 0.1 * std::abs (limits(1));
-        }
+  else if (! logscale && (std::abs (limits(0) - limits(1)) < sqrt (eps)))
+    {
+      limits(0) -= 0.1 * std::abs (limits(0));
+      limits(1) += 0.1 * std::abs (limits(1));
+      do_update = true;
+    }
+  else if (logscale
+           && (std::abs (std::log10 (limits(0) / limits(1))) < sqrt (eps)))
+    {
+      limits(0) = (limits(0) < 0 ? 10.0 * limits(0) : 0.1 * limits(0));
+      limits(1) = (limits(1) < 0 ? 0.1 * limits(1) : 10.0 * limits(1));
       do_update = true;
     }
 
   if (logscale && limits(0)*limits(1) <= 0)
     {
       if (! have_children_limits)
         get_children_limits (min_val, max_val, min_pos, max_neg, kids,
                              update_type);
