# HG changeset patch
# User John D
# Date 1499346808 14400
#      Thu Jul 06 09:13:28 2017 -0400
# Node ID 6798f5e5c58e29e701e13b81a4d74e0accf92959
# Parent  3e93a2a66cdf7a81a5ec2e4e1a5adb8b07b964dd
Add possible '\r' to smartindent regex exprepression (Bug #51279)

* libgui/src/m-editor/octave-qscintilla.cc
  (file_editor_tab::smart_indent): add [\r]? to bkey, mkey, ekey regex.

diff --git a/libgui/src/m-editor/octave-qscintilla.cc b/libgui/src/m-editor/octave-qscintilla.cc
--- a/libgui/src/m-editor/octave-qscintilla.cc
+++ b/libgui/src/m-editor/octave-qscintilla.cc
@@ -600,44 +600,44 @@ octave_qscintilla::keyPressEvent (QKeyEv
 // Do smart indendation after if, for, ...
 void
 octave_qscintilla::smart_indent (int line, int /*col*/)
 {
   QString prevline = text (line);
 
   QRegExp bkey = QRegExp ("^[\t ]*(if|for|while|switch|case|do|function"
                           "|unwind_protect|unwind_protect_cleanup|try)"
-                          "[\n\t #%]");
+                          "[\r]?[\n\t #%]");
   if (prevline.contains (bkey))
     {
       indent (line+1);
       setCursorPosition (line+1,
                                      indentation (line) +
                                      indentationWidth ());
       return;
     }
 
-  QRegExp mkey = QRegExp ("^[\t ]*(else|elseif|catch)[\t #%\n]");
+  QRegExp mkey = QRegExp ("^[\t ]*(else|elseif|catch)[\r]?[\t #%\n]");
   if (prevline.contains (mkey))
     {
       int prev_ind = indentation (line-1);
       int act_ind = indentation (line);
 
       if (prev_ind == act_ind)
         unindent (line);
       else if (prev_ind > act_ind)
         {
           setIndentation (line+1, prev_ind);
           setCursorPosition (line+1, prev_ind);
         }
       return;
     }
 
   QRegExp ekey = QRegExp ("^[\t ]*(end|endif|endfor|endwhile|until|endfunction"
-                          "|end_try_catch|end_unwind_protext)[\t #%\n(;]");
+                          "|end_try_catch|end_unwind_protext)[\r]?[\t #%\n(;]");
   if (prevline.contains (ekey))
     {
       if (indentation (line-1) <= indentation (line))
         {
           unindent (line+1);
           unindent (line);
           setCursorPosition (line+1,
                                          indentation (line));
