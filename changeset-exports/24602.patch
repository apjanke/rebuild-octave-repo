# HG changeset patch
# User Rik <rik@octave.org>
# Date 1516032458 28800
#      Mon Jan 15 08:07:38 2018 -0800
# Node ID e578e68ba1e03c1bea42108c82c63f61f48d0586
# Parent  3d66e5dbb5ad860f736be6261d3b38cc3c671edf
doc: Update documentation for givens() and planerot().

* givens.cc (Fgivens), planerot.m: Update documentation for both Givens
rotation functions.  Add a note about why Givens rotation is useful.
Add a seealso link to qr.

diff --git a/libinterp/corefcn/givens.cc b/libinterp/corefcn/givens.cc
--- a/libinterp/corefcn/givens.cc
+++ b/libinterp/corefcn/givens.cc
@@ -43,40 +43,53 @@ The Givens matrix is a $2\times 2$ ortho
 $$
 such that
 $$
  G \left[\matrix{x\cr y}\right] = \left[\matrix{\ast\cr 0}\right]
 $$
 with $x$ and $y$ scalars.
 @end tex
 @ifnottex
-The Givens matrix is a 2 by 2 orthogonal matrix
+The Givens matrix is a 2-by-2 orthogonal matrix
 
-@code{@var{g} = [@var{c} @var{s}; -@var{s}' @var{c}]}
+@example
+@group
+@var{G} = [ @var{c} , @var{s}
+     -@var{s}', @var{c}]
+@end group
+@end example
 
+@noindent
 such that
 
-@code{@var{g} [@var{x}; @var{y}] = [*; 0]}
+@example
+@var{G} * [@var{x}; @var{y}] = [*; 0]
+@end example
 
+@noindent
 with @var{x} and @var{y} scalars.
 @end ifnottex
 
-If two output arguments are requested, return the factors @var{c} and
-@var{s} rather than the Givens rotation matrix.
+If two output arguments are requested, return the factors @var{c} and @var{s}
+rather than the Givens rotation matrix.
 
 For example:
 
 @example
 @group
 givens (1, 1)
    @result{}   0.70711   0.70711
        -0.70711   0.70711
 @end group
 @end example
-@seealso{planerot}
+
+Note: The Givens matrix represents a counterclockwise rotation of a 2-D
+plane and can be used to introduce zeros into a matrix prior to complete
+factorization.
+@seealso{planerot, qr}
 @end deftypefn */)
 {
   if (args.length () != 2)
     print_usage ();
 
   octave_value_list retval;
 
   if (args(0).is_single_type () || args(1).is_single_type ())
diff --git a/scripts/linear-algebra/planerot.m b/scripts/linear-algebra/planerot.m
--- a/scripts/linear-algebra/planerot.m
+++ b/scripts/linear-algebra/planerot.m
@@ -13,26 +13,52 @@
 ## GNU General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <https://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {} {[@var{G}, @var{y}] =} planerot (@var{x})
-## Given a two-element column vector, return the
+## Compute the Givens rotation matrix for the two-element column vector
+## @var{x}.
+##
 ## @tex
-## $2 \times 2$ orthogonal matrix
+## The Givens matrix is a $2\times 2$ orthogonal matrix
+## $$
+##  G = \left[\matrix{c & s\cr -s'& c\cr}\right]
+## $$
+## such that
+## $$
+##  G \left[\matrix{x(1)\cr x(2)}\right] = \left[\matrix{\ast\cr 0}\right]
+## $$
 ## @end tex
 ## @ifnottex
-## 2 by 2 orthogonal matrix
+## The Givens matrix is a 2-by-2 orthogonal matrix
+##
+## @example
+## @group
+## @var{G} = [ @var{c} , @var{s}
+##      -@var{s}', @var{c}]
+## @end group
+## @end example
+##
+## @noindent
+## such that
+##
+## @example
+## @var{y} = @var{G} * [@var{x}(1); @var{x}(2)] @equiv{} [*; 0]
+## @end example
+##
 ## @end ifnottex
-## @var{G} such that
-## @code{@var{y} = @var{g} * @var{x}} and @code{@var{y}(2) = 0}.
-## @seealso{givens}
+##
+## Note: The Givens matrix represents a counterclockwise rotation of a 2-D
+## plane and can be used to introduce zeros into a matrix prior to complete
+## factorization.
+## @seealso{givens, qr}
 ## @end deftypefn
 
 function [G, y] = planerot (x)
 
   if (nargin != 1)
     print_usage ();
   elseif (! (isvector (x) && numel (x) == 2))
     error ("planerot: X must be a 2-element vector");
