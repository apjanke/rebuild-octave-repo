# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1233873504 18000
#      Thu Feb 05 17:38:24 2009 -0500
# Node ID ddbe875993314945753a2b3fed6d75d2fa741e0a
# Parent  d7306ecd077a45c41801796e13ab791dcc630511
base_file_stat::is_XXX: return false if object is not initialized

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,16 @@
+2009-02-05  John W. Eaton  <jwe@octave.org>
+
+	* file-stat.cc (base_file_stat::is_blk, base_file_stat::is_chr,
+	base_file_stat::is_dir, base_file_stat::is_fifo,
+	base_file_stat::is_lnk, base_file_stat::is_reg,
+	base_file_stat::is_sock): Return false if object is not initialized.
+	From Rafael Laboissiere <rafael@debian.org>.
+
 2009-02-05  Jaroslav Hajek  <highegg@gmail.com>
 	
 	* idx-vector.h (idx_vector::idx_colon_rep,
 	idx_vector::idx_scalar_rep, idx_vector::idx_range_rep,
 	idx_vector::idx_vector_rep): Declare allocators.
 	* idx-vector.cc: Define them.
 
 2009-02-05  Jaroslav Hajek  <highegg@gmail.com>
diff --git a/liboctave/file-stat.cc b/liboctave/file-stat.cc
--- a/liboctave/file-stat.cc
+++ b/liboctave/file-stat.cc
@@ -49,53 +49,53 @@ lstat (const char *name, struct stat *bu
 
 // FIXME -- the is_* and mode_as_string functions are only valid
 // for initialized objects.  If called for an object that is not
 // initialized, they should throw an exception.
 
 bool
 base_file_stat::is_blk (void) const
 {
-  return is_blk (fs_mode);
+  return ok () && is_blk (fs_mode);
 }
 
 bool
 base_file_stat::is_chr (void) const
 {
-  return is_chr (fs_mode);
+  return ok () && is_chr (fs_mode);
 }
 
 bool
 base_file_stat::is_dir (void) const
 { 
-  return is_dir (fs_mode);
+  return ok () && is_dir (fs_mode);
 }
 
 bool
 base_file_stat::is_fifo (void) const
 { 
-  return is_fifo (fs_mode);
+  return ok () && is_fifo (fs_mode);
 }
 
 bool
 base_file_stat::is_lnk (void) const
 { 
-  return is_lnk (fs_mode);
+  return ok () && is_lnk (fs_mode);
 }
 
 bool
 base_file_stat::is_reg (void) const
 { 
-  return is_reg (fs_mode);
+  return ok () && is_reg (fs_mode);
 }
 
 bool
 base_file_stat::is_sock (void) const
 { 
-  return is_sock (fs_mode);
+  return ok () && is_sock (fs_mode);
 }
 
 bool
 base_file_stat::is_blk (mode_t mode)
 {
 #ifdef S_ISBLK
   return S_ISBLK (mode);
 #else
diff --git a/liboctave/file-stat.h b/liboctave/file-stat.h
--- a/liboctave/file-stat.h
+++ b/liboctave/file-stat.h
@@ -74,18 +74,20 @@ public:
 	fs_blocks = fs.fs_blocks;
       }
 
     return *this;
   }
 
   ~base_file_stat (void) { }
 
-  // File status and info.  These should only be called for objects
-  // that are already properly initialized.
+  // File status and info.  The is_XXX functions will return false for
+  // file_stat objects that are not properly initialized.  The others
+  // should all return 0 (or the equivalent, for the given object)
+  // which is likely not meaningful.
 
   bool is_blk (void) const;
   bool is_chr (void) const;
   bool is_dir (void) const;
   bool is_fifo (void) const;
   bool is_lnk (void) const;
   bool is_reg (void) const;
   bool is_sock (void) const;
